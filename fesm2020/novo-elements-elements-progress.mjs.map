{"version":3,"file":"novo-elements-elements-progress.mjs","sources":["../../../projects/novo-elements/src/elements/progress/ProgressConstants.ts","../../../projects/novo-elements/src/elements/progress/ProgressBar.ts","../../../projects/novo-elements/src/elements/progress/Progress.ts","../../../projects/novo-elements/src/elements/progress/Progress.module.ts","../../../projects/novo-elements/src/elements/progress/novo-elements-elements-progress.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport enum ProgressAppearance {\n  LINEAR = 'linear',\n  RADIAL = 'radial',\n}\n\n/**\n * Used to provide a progress container to a progress bar while avoiding circular references.\n * @docs-private\n */\nexport const NOVO_PROGRESS_CONTAINER = new InjectionToken('NOVO_PROGRESS_CONTAINER');\n","// NG2\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// import type { NovoProgressElement } from './Progress';\nimport { NOVO_PROGRESS_CONTAINER, ProgressAppearance } from './ProgressConstants';\n\n// make radio-button-group ids unique\nlet nextId = 0;\n\n// Value accessor for the component (supports ngModel)\nconst PROGRESS_BAR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoProgressBarElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-progress-bar',\n  styleUrls: ['./ProgressBar.scss'],\n  providers: [PROGRESS_BAR_VALUE_ACCESSOR],\n  template: `\n    <div *ngIf=\"isLinear()\" class=\"progress-bar\"></div>\n    <svg *ngIf=\"isRadial()\" width=\"120\" height=\"120\">\n      <circle\n        [style.strokeDasharray]=\"circumference\"\n        [style.strokeDashoffset]=\"dashoffset\"\n        [attr.r]=\"radius\"\n        cx=\"60\"\n        cy=\"60\"\n        stroke-width=\"4\"\n        fill=\"transparent\"\n        class=\"progress__value\"\n      />\n      <!-- <text x=\"18\" y=\"20.35\" class=\"percentage\">30%</text> -->\n    </svg>\n  `,\n})\nexport class NovoProgressBarElement implements ControlValueAccessor, OnInit {\n  private _uniqueId: string = `novo-progress-${++nextId}`;\n  @HostBinding('class')\n  public appearance: ProgressAppearance = ProgressAppearance.LINEAR;\n  @Input() id: string = this._uniqueId;\n  @Input() name: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n  @Input() label: string;\n  @Input() theme: string;\n  @Input() color: string;\n  @Input() indeterminate: boolean = false;\n  // Radial Value\n  public radius = 54;\n  public circumference = 2 * Math.PI * this.radius;\n  public dashoffset: number;\n\n  @HostBinding('class.striped')\n  @Input()\n  striped: boolean = false;\n\n  @HostBinding('class.animated')\n  @Input()\n  animated: boolean = false;\n\n  @HostBinding('style.width')\n  get width() {\n    if (this.isRadial()) {\n      return `100%`;\n    }\n    return `${this._percent * 100}%`;\n  }\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _percent: number = 0;\n  private _value: number = 0;\n  private _disabled: boolean = false;\n\n  @Input() get value(): number {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      if (this.progress) {\n        this._percent = this.value / this.progress.total;\n      } else {\n        this._percent = value;\n      }\n      this.dashoffset = this.circumference * (1 - this._percent);\n      this.onChangeCallback(this._value);\n    }\n  }\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled || (this.progress != null && this.progress.disabled);\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(private ref: ChangeDetectorRef, @Optional() @Inject(NOVO_PROGRESS_CONTAINER) public progress: any) {\n    // NovoProgressElement\n    this.progress = progress;\n  }\n\n  ngOnInit() {\n    if (this.indeterminate) {\n      this.striped = true;\n      this.animated = true;\n      this._value = this.progress?.total || 100;\n    }\n    if (this.progress) {\n      this._percent = this._value / this.progress.total;\n      this.appearance = this.progress.appearance;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.ref.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  isLinear() {\n    return this.appearance === ProgressAppearance.LINEAR;\n  }\n\n  isRadial() {\n    return this.appearance === ProgressAppearance.RADIAL;\n  }\n}\n","// NG2\nimport { AfterContentInit, Component, ContentChildren, forwardRef, HostBinding, Input, QueryList } from '@angular/core';\nimport { NovoProgressBarElement } from './ProgressBar';\nimport { NOVO_PROGRESS_CONTAINER, ProgressAppearance } from './ProgressConstants';\n\n@Component({\n  selector: 'novo-progress',\n  styleUrls: ['./Progress.scss'],\n  template: ` <ng-content></ng-content> `,\n  providers: [\n    {\n      provide: NOVO_PROGRESS_CONTAINER,\n      useExisting: NovoProgressElement,\n    },\n  ],\n})\nexport class NovoProgressElement implements AfterContentInit {\n  @Input()\n  color: string;\n  @Input() theme: string;\n  @Input() total: number = 100;\n  @Input() radius: number = 54;\n\n  @HostBinding('class.striped')\n  @Input()\n  striped: boolean = false;\n\n  // Private vars for getters\n  private _appearance: ProgressAppearance = ProgressAppearance.LINEAR;\n  private _disabled: boolean = false;\n\n  @HostBinding('class')\n  @Input()\n  get appearance(): ProgressAppearance {\n    return this._appearance;\n  }\n  set appearance(value: ProgressAppearance) {\n    if (this._appearance !== value) {\n      this._appearance = value as ProgressAppearance;\n      this._updateBarAppearance();\n    }\n  }\n\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  @ContentChildren(forwardRef(() => NovoProgressBarElement), { descendants: true })\n  _bars: QueryList<NovoProgressBarElement>;\n\n  ngAfterContentInit() {\n    this._updateBarRadius();\n  }\n\n  private _updateBarAppearance(): void {\n    if (this._bars) {\n      this._bars.forEach((bar) => {\n        bar.appearance = this.appearance as ProgressAppearance;\n      });\n    }\n  }\n\n  private _updateBarRadius(): void {\n    if (this._bars) {\n      this._bars.forEach((bar, i) => {\n        bar.radius = this.radius - i * 5;\n      });\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoProgressElement } from './Progress';\nimport { NovoProgressBarElement } from './ProgressBar';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoProgressBarElement, NovoProgressElement],\n  exports: [NovoProgressBarElement, NovoProgressElement],\n})\nexport class NovoProgressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;IAEY,mBAGX;AAHD,CAAA,UAAY,kBAAkB,EAAA;AAC5B,IAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,GAG7B,EAAA,CAAA,CAAA,CAAA;AAED;;;AAGG;MACU,uBAAuB,GAAG,IAAI,cAAc,CAAC,yBAAyB;;ACXnF;AAiBA;AACA,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf;AACA,MAAM,2BAA2B,GAAG;AAClC,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,WAAW,EAAE,UAAU,CAAC,MAAM,sBAAsB,CAAC;AACrD,IAAA,KAAK,EAAE,IAAI;CACZ,CAAC;MAuBW,sBAAsB,CAAA;IAiEjC,WAAoB,CAAA,GAAsB,EAAsD,QAAa,EAAA;QAAzF,IAAG,CAAA,GAAA,GAAH,GAAG,CAAmB;QAAsD,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;AAhErG,QAAA,IAAA,CAAA,SAAS,GAAW,CAAA,cAAA,EAAiB,EAAE,MAAM,EAAE,CAAC;AAEjD,QAAA,IAAA,CAAA,UAAU,GAAuB,kBAAkB,CAAC,MAAM,CAAC;AACzD,QAAA,IAAA,CAAA,EAAE,GAAW,IAAI,CAAC,SAAS,CAAC;AAC5B,QAAA,IAAA,CAAA,IAAI,GAAW,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAQ,CAAA,QAAA,GAAW,CAAC,CAAC;QAIrB,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;;QAEjC,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;QACZ,IAAa,CAAA,aAAA,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAKjD,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;QAIzB,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;AAUhB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AAC5B,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;AAC1B,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QAE7B,IAAQ,CAAA,QAAA,GAAW,CAAC,CAAC;QACrB,IAAM,CAAA,MAAA,GAAW,CAAC,CAAC;QACnB,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAyD3B,QAAA,IAAA,CAAA,gBAAgB,GAAG,CAAC,CAAM,KAAI;;AAEtC,SAAC,CAAC;QAEM,IAAiB,CAAA,iBAAA,GAAG,MAAK;;AAEjC,SAAC,CAAC;;AAlCA,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;AA5CD,IAAA,IACI,KAAK,GAAA;AACP,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;AACnB,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;AACD,QAAA,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC;KAClC;AAUD,IAAA,IAAa,KAAK,GAAA;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAK,EAAA;AACb,QAAA,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;AACxB,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAClD,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvB,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3D,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,SAAA;KACF;;AAED,IAAA,IAEI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAC5E;IACD,IAAI,QAAQ,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC;KAC1B;IAOD,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,GAAG,CAAC;AAC3C,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;AAC5C,SAAA;KACF;AAED,IAAA,UAAU,CAAC,KAAU,EAAA;AACnB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KACzB;AAED,IAAA,gBAAgB,CAAC,EAAO,EAAA;AACtB,QAAA,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5B;AAED,IAAA,iBAAiB,CAAC,EAAO,EAAA;AACvB,QAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;AAUD,IAAA,gBAAgB,CAAC,QAAiB,EAAA;AAChC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAED,QAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,kBAAkB,CAAC,MAAM,CAAC;KACtD;IAED,QAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,kBAAkB,CAAC,MAAM,CAAC;KACtD;;AAjHU,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,mDAiE+B,uBAAuB,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAjE5E,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,EAlBtB,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,aAAA,EAAA,eAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,aAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CAAC,2BAA2B,CAAC,EAC9B,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;AAeT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,05RAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FAEU,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBArBlC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,EAElB,SAAA,EAAA,CAAC,2BAA2B,CAAC,EAC9B,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;AAeT,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,05RAAA,CAAA,EAAA,CAAA;;0BAmE4C,QAAQ;;0BAAI,MAAM;2BAAC,uBAAuB,CAAA;4CA9DhF,UAAU,EAAA,CAAA;sBADhB,WAAW;uBAAC,OAAO,CAAA;gBAEX,EAAE,EAAA,CAAA;sBAAV,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAQN,OAAO,EAAA,CAAA;sBAFN,WAAW;uBAAC,eAAe,CAAA;;sBAC3B,KAAK;gBAKN,QAAQ,EAAA,CAAA;sBAFP,WAAW;uBAAC,gBAAgB,CAAA;;sBAC5B,KAAK;gBAIF,KAAK,EAAA,CAAA;sBADR,WAAW;uBAAC,aAAa,CAAA;gBAQhB,MAAM,EAAA,CAAA;sBAAf,MAAM;gBACG,IAAI,EAAA,CAAA;sBAAb,MAAM;gBACG,KAAK,EAAA,CAAA;sBAAd,MAAM;gBAMM,KAAK,EAAA,CAAA;sBAAjB,KAAK;gBAkBF,QAAQ,EAAA,CAAA;sBAFX,KAAK;;sBACL,WAAW;uBAAC,gBAAgB,CAAA;;;ACzG/B;MAgBa,mBAAmB,CAAA;AAXhC,IAAA,WAAA,GAAA;QAeW,IAAK,CAAA,KAAA,GAAW,GAAG,CAAC;QACpB,IAAM,CAAA,MAAA,GAAW,EAAE,CAAC;QAI7B,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;;AAGjB,QAAA,IAAA,CAAA,WAAW,GAAuB,kBAAkB,CAAC,MAAM,CAAC;QAC5D,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AA8CpC,KAAA;AA5CC,IAAA,IAEI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IACD,IAAI,UAAU,CAAC,KAAyB,EAAA;AACtC,QAAA,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;AAC9B,YAAA,IAAI,CAAC,WAAW,GAAG,KAA2B,CAAC;YAC/C,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC7B,SAAA;KACF;;AAGD,IAAA,IAEI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC;KAC1B;IAKD,kBAAkB,GAAA;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAEO,oBAAoB,GAAA;QAC1B,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACzB,gBAAA,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,UAAgC,CAAC;AACzD,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAEO,gBAAgB,GAAA;QACtB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,KAAI;gBAC5B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;;iHA1DU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,EAPnB,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,eAAA,EAAA,cAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,uBAAuB;AAChC,YAAA,WAAW,EAAE,mBAAmB;AACjC,SAAA;KACF,EAuCiC,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA,sBAAsB,oDA7C9C,CAA6B,2BAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,kYAAA,CAAA,EAAA,CAAA,CAAA;4FAQ5B,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAX/B,SAAS;+BACE,eAAe,EAAA,QAAA,EAEf,6BAA6B,EAC5B,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,uBAAuB;AAChC,4BAAA,WAAW,EAAqB,mBAAA;AACjC,yBAAA;AACF,qBAAA,EAAA,MAAA,EAAA,CAAA,kYAAA,CAAA,EAAA,CAAA;8BAID,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAEG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAIN,OAAO,EAAA,CAAA;sBAFN,WAAW;uBAAC,eAAe,CAAA;;sBAC3B,KAAK;gBASF,UAAU,EAAA,CAAA;sBAFb,WAAW;uBAAC,OAAO,CAAA;;sBACnB,KAAK;gBAcF,QAAQ,EAAA,CAAA;sBAFX,KAAK;;sBACL,WAAW;uBAAC,gBAAgB,CAAA;gBAS7B,KAAK,EAAA,CAAA;sBADJ,eAAe;uBAAC,UAAU,CAAC,MAAM,sBAAsB,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAA;;;ACrDlF;MAYa,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAHd,sBAAsB,EAAE,mBAAmB,aADhD,YAAY,CAAA,EAAA,OAAA,EAAA,CAEZ,sBAAsB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;iHAE1C,kBAAkB,EAAA,OAAA,EAAA,CAJpB,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIZ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,YAAY,EAAE,CAAC,sBAAsB,EAAE,mBAAmB,CAAC;AAC3D,oBAAA,OAAO,EAAE,CAAC,sBAAsB,EAAE,mBAAmB,CAAC;AACvD,iBAAA,CAAA;;;ACXD;;AAEG;;;;"}