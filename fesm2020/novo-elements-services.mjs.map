{"version":3,"file":"novo-elements-services.mjs","sources":["../../../projects/elements/services/app-bridge/app-bridge.ts","../../../projects/elements/services/component-utils/component-utils.ts","../../../projects/elements/services/data-provider/collection-event.ts","../../../projects/elements/services/data-provider/array-collection.ts","../../../projects/elements/services/data-provider/paged-array-collection.ts","../../../projects/elements/services/labels/novo-label-service.ts","../../../projects/elements/services/date-format/date-format.ts","../../../projects/elements/services/global/global.service.ts","../../../projects/elements/services/options/options-service.ts","../../../projects/elements/services/security/security.ts","../../../projects/elements/services/storage/storage.service.ts","../../../projects/elements/services/template/novo-template-service.ts","../../../projects/elements/services/novo-elements-services.ts"],"sourcesContent":["// NG2\nimport { HttpClient } from '@angular/common/http';\n\nexport enum AppBridgeHandler {\n  HTTP,\n  OPEN,\n  OPEN_LIST,\n  CLOSE,\n  REFRESH,\n  PIN,\n  REGISTER,\n  UPDATE,\n  REQUEST_DATA,\n  CALLBACK,\n  PING,\n}\n\n// record       - an individual entity record\n// add/fast-add - the add page for a new record\n// custom       - custom action that opens the url provided in data.url\n// preview      - the preview slideout available only in Novo\nexport type NovoApps = 'record' | 'add' | 'fast-add' | 'slide-out-add' | 'custom' | 'preview';\n\nexport type AlleyLinkColors =\n  | 'purple'\n  | 'green'\n  | 'blue'\n  | 'lead'\n  | 'candidate'\n  | 'contact'\n  | 'company'\n  | 'opportunity'\n  | 'job'\n  | 'billable-charge'\n  | 'earn-code'\n  | 'invoice-statement'\n  | 'job-code'\n  | 'payable-charge'\n  | 'sales-tax-rate'\n  | 'tax-rules'\n  | 'submission'\n  | 'placement'\n  | 'navigation'\n  | 'canvas'\n  | 'neutral'\n  | 'neutral-italic'\n  | 'initial'\n  | 'distributionList'\n  | 'contract';\n\nexport interface IAppBridgeOpenEvent {\n  type: NovoApps;\n  entityType: string;\n  entityId?: string;\n  tab?: string;\n  data?: any;\n  passthrough?: string;\n}\n\nexport type MosaicLists =\n  | 'Candidate'\n  | 'ClientContact'\n  | 'ClientCorporation'\n  | 'JobOrder'\n  | 'JobSubmission'\n  | 'JobPosting'\n  | 'Placement'\n  | 'Lead'\n  | 'Opportunity';\n\nexport interface IAppBridgeOpenListEvent {\n  type: MosaicLists;\n  keywords: Array<string>;\n  criteria: any;\n}\n\nexport type NovoDataType = 'entitlements' | 'settings' | 'user';\n\nexport interface IAppBridgeRequestDataEvent {\n  type: NovoDataType;\n}\n\nconst HTTP_VERBS = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n};\n\nconst MESSAGE_TYPES = {\n  REGISTER: 'register',\n  OPEN: 'open',\n  OPEN_LIST: 'openList',\n  CLOSE: 'close',\n  REFRESH: 'refresh',\n  PIN: 'pin',\n  PING: 'ping',\n  UPDATE: 'update',\n  HTTP_GET: 'httpGET',\n  HTTP_POST: 'httpPOST',\n  HTTP_PUT: 'httpPUT',\n  HTTP_DELETE: 'httpDELETE',\n  CUSTOM_EVENT: 'customEvent',\n  REQUEST_DATA: 'requestData',\n  CALLBACK: 'callback',\n};\n\ndeclare const postRobot: any;\n\nexport class AppBridgeService {\n  create(name: string) {\n    return new AppBridge(name);\n  }\n}\n\nexport class DevAppBridgeService {\n  constructor(private http: HttpClient) {}\n  create(name: string) {\n    return new DevAppBridge(name, this.http);\n  }\n}\n\nexport class AppBridge {\n  public id: string = `${Date.now()}`;\n  public traceName: string;\n  public windowName: string;\n\n  private _registeredFrames = [];\n  private _handlers = {};\n  private _tracing: boolean = false;\n  private _eventListeners: any = {};\n\n  // Type?\n  constructor(traceName: string = 'AppBridge') {\n    this.traceName = traceName;\n    if (postRobot) {\n      postRobot.CONFIG.LOG_LEVEL = 'error';\n      try {\n        this._setupHandlers();\n      } catch (error) {\n        // No op\n      }\n    }\n  }\n\n  set tracing(tracing: boolean) {\n    this._tracing = tracing;\n  }\n\n  public handle(type: AppBridgeHandler, handler: Function) {\n    this._handlers[type] = handler;\n  }\n\n  private _trace(eventType, event) {\n    if (this._tracing) {\n      console.log(`[${this.traceName || this.id}] \"${eventType}\"`, event); // tslint:disable-line\n    }\n  }\n\n  protected _setupHandlers(): void {\n    // Register\n    postRobot.on(MESSAGE_TYPES.REGISTER, (event) => {\n      this._trace(MESSAGE_TYPES.REGISTER, event);\n      this._registeredFrames.push(event);\n      return this.register(event.data).then((windowName) => {\n        return { windowName };\n      });\n    });\n    // Update\n    postRobot.on(MESSAGE_TYPES.UPDATE, (event) => {\n      this._trace(MESSAGE_TYPES.UPDATE, event);\n      return this.update(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Open\n    postRobot.on(MESSAGE_TYPES.OPEN, (event) => {\n      this._trace(MESSAGE_TYPES.OPEN, event);\n      return this.open(event.data).then((success) => {\n        return { success };\n      });\n    });\n    postRobot.on(MESSAGE_TYPES.OPEN_LIST, (event) => {\n      this._trace(MESSAGE_TYPES.OPEN_LIST, event);\n      return this.openList(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Close\n    postRobot.on(MESSAGE_TYPES.CLOSE, (event) => {\n      this._trace(MESSAGE_TYPES.CLOSE, event);\n      const index = this._registeredFrames.findIndex((frame) => frame.data.id === event.data.id);\n      if (index !== -1) {\n        this._registeredFrames.splice(index, 1);\n      }\n      return this.close(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Refresh\n    postRobot.on(MESSAGE_TYPES.REFRESH, (event) => {\n      this._trace(MESSAGE_TYPES.REFRESH, event);\n      return this.refresh(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // PIN\n    postRobot.on(MESSAGE_TYPES.PIN, (event) => {\n      this._trace(MESSAGE_TYPES.PIN, event);\n      return this.pin(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // PING\n    postRobot.on(MESSAGE_TYPES.PING, (event) => {\n      this._trace(MESSAGE_TYPES.PING, event);\n      return this.httpGET('ping').then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // REQUEST_DATA\n    postRobot.on(MESSAGE_TYPES.REQUEST_DATA, (event) => {\n      this._trace(MESSAGE_TYPES.REQUEST_DATA, event);\n      return this.requestData(event.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // CALLBACKS\n    postRobot.on(MESSAGE_TYPES.CALLBACK, (event) => {\n      this._trace(MESSAGE_TYPES.CALLBACK, event);\n      return this.callback(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // HTTP-GET\n    postRobot.on(MESSAGE_TYPES.HTTP_GET, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_GET, event);\n      return this.httpGET(event.data.relativeURL).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-POST\n    postRobot.on(MESSAGE_TYPES.HTTP_POST, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_POST, event);\n      return this.httpPOST(event.data.relativeURL, event.data.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-PUT\n    postRobot.on(MESSAGE_TYPES.HTTP_PUT, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_PUT, event);\n      return this.httpPUT(event.data.relativeURL, event.data.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-DELETE\n    postRobot.on(MESSAGE_TYPES.HTTP_DELETE, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_DELETE, event);\n      return this.httpDELETE(event.data.relativeURL).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // Custom Events\n    postRobot.on(MESSAGE_TYPES.CUSTOM_EVENT, (event) => {\n      this._trace(MESSAGE_TYPES.CUSTOM_EVENT, event);\n      if (this._eventListeners[event.data.event]) {\n        this._eventListeners[event.data.event].forEach((listener) => {\n          listener(event.data.data);\n        });\n      }\n      if (this._registeredFrames.length > 0) {\n        this._registeredFrames.forEach((frame) => {\n          postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, event.data);\n        });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an open event\n   * @param packet any - packet of data to send with the open event\n   */\n  public open(packet: IAppBridgeOpenEvent): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.OPEN]) {\n        this._handlers[AppBridgeHandler.OPEN](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.OPEN, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.OPEN} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an openList event\n   * @param packet any - packet of data to send with the open event\n   */\n  public openList(packet: Partial<IAppBridgeOpenListEvent>): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.OPEN_LIST]) {\n        this._handlers[AppBridgeHandler.OPEN_LIST](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        const openListPacket = {};\n        Object.assign(openListPacket, { type: 'List', entityType: packet.type, keywords: packet.keywords, criteria: packet.criteria });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.OPEN_LIST, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.OPEN_LIST} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an close event\n   * @param packet any - packet of data to send with the close event\n   */\n  public update(\n    packet: Partial<{ entityType: string; entityId: string; title: string; titleKey: string; color: AlleyLinkColors }>,\n  ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.UPDATE]) {\n        this._handlers[AppBridgeHandler.UPDATE](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.UPDATE, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.UPDATE} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an close event\n   */\n  public close(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.CLOSE]) {\n        this._handlers[AppBridgeHandler.CLOSE](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - close(packet) is deprecated! Please just use close()!'); // tslint:disable-line\n        }\n        const realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.CLOSE, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.CLOSE} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an close event\n   */\n  public refresh(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REFRESH]) {\n        this._handlers[AppBridgeHandler.REFRESH](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - refresh(packet) is deprecated! Please just use refresh()!'); // tslint:disable-line\n        }\n        const realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REFRESH, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REFRESH} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  public ping(): Promise<boolean> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.PING]) {\n        this._handlers[AppBridgeHandler.PING]({}, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.PING, {})\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to a pin event\n   */\n  public pin(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.PIN]) {\n        this._handlers[AppBridgeHandler.PIN](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - pin(packet) is deprecated! Please just use pin()!'); // tslint:disable-line\n        }\n        const realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.PIN, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.PIN} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to a requestData event\n   * @param packet any - packet of data to send with the requestData event\n   */\n  public requestData(packet: { type: string }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REQUEST_DATA]) {\n        this._handlers[AppBridgeHandler.REQUEST_DATA](packet, (data: any) => {\n          if (data) {\n            resolve({ data });\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REQUEST_DATA, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REQUEST_DATA} (callback)`, event);\n            if (event.data) {\n              resolve({ data: event.data.data });\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires a generic callback command\n   * @param packet string - key: string, generic: boolean\n   */\n  public callback(packet: { key: string; generic: boolean; options: object }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.CALLBACK]) {\n        this._handlers[AppBridgeHandler.CALLBACK](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.CALLBACK, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.CALLBACK} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an register event\n   * @param packet any - packet of data to send with the event\n   */\n  public register(packet: Partial<{ title: string; url: string; color: AlleyLinkColors }> = {}): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REGISTER]) {\n        this._handlers[AppBridgeHandler.REGISTER](packet, (windowName: string) => {\n          if (windowName) {\n            resolve(windowName);\n          } else {\n            resolve(null);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REGISTER, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REGISTER} (callback)`, event);\n            if (event.data) {\n              this.windowName = event.data.windowName;\n              resolve(event.data.windowName);\n            } else {\n              resolve(null);\n            }\n          })\n          .catch((err) => {\n            this._trace(`${MESSAGE_TYPES.REGISTER} - FAILED - (no parent)`, err);\n            reject(err);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_GET event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpGET(relativeURL: string, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.GET, relativeURL }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_GET, { relativeURL }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_POST event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPOST(relativeURL: string, postData: any, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.POST, relativeURL, data: postData }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_POST, { relativeURL, data: postData }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_PUT event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPUT(relativeURL: string, putData: any, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.PUT, relativeURL, data: putData }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_PUT, { relativeURL, data: putData }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_DELETE event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpDELETE(relativeURL: string, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.DELETE, relativeURL }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_DELETE, { relativeURL }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires a custom event to anywhere in the application\n   * @param event string - event name to fire\n   * @param data any - data to be sent along with the event\n   */\n  public fireEvent(event: string, data: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      postRobot\n        .sendToParent(MESSAGE_TYPES.CUSTOM_EVENT, { event, data })\n        .then((e: any) => {\n          resolve(e);\n        })\n        .catch((err) => {\n          reject(null);\n        });\n    });\n  }\n\n  /**\n   * Fires a custom event to all registered frames\n   * @param event string - event name to fire\n   * @param data any - data to be sent along with the event\n   */\n  public fireEventToChildren(event: string, data: any): void {\n    if (this._registeredFrames.length > 0) {\n      this._registeredFrames.forEach((frame) => {\n        postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, {\n          event,\n          eventType: event,\n          data,\n        });\n      });\n    }\n  }\n\n  /**\n   * Fires a custom event to specified frames\n   * @param source Window - specific iframe contentWindow\n   * @param event string - event name to fire\n   * @param data any - data to be sent along with the event\n   */\n  public fireEventToChild(source: Window | HTMLIFrameElement, event: string, data: any): void {\n    if (source instanceof HTMLIFrameElement) {\n      source = source.contentWindow;\n    }\n    postRobot.send(source, MESSAGE_TYPES.CUSTOM_EVENT, { event, data });\n  }\n\n  /**\n   * Adds an event listener to a custom event\n   * @param event string - event name to listen to\n   * @param callback function - callback to be fired when an event is caught\n   */\n  public addEventListener(event: string, callback: Function): void {\n    if (!this._eventListeners[event]) {\n      this._eventListeners[event] = [];\n    }\n    this._eventListeners[event].push(callback);\n  }\n}\n\nexport class DevAppBridge extends AppBridge {\n  private baseURL: string;\n\n  constructor(traceName: string = 'DevAppBridge', private http: HttpClient) {\n    super(traceName);\n    const cookie = this.getCookie('UlEncodedIdentity');\n    if (cookie && cookie.length) {\n      const identity = JSON.parse(decodeURIComponent(cookie));\n      const endpoints = identity.sessions.reduce((obj, session) => {\n        obj[session.name] = session.value.endpoint;\n        return obj;\n      }, {});\n      this.baseURL = endpoints.rest;\n    }\n  }\n  protected _setupHandlers(): void {}\n\n  /**\n   * Fires or responds to an HTTP_GET event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpGET(relativeURL: string): Promise<any> {\n    return this.http.get(`${this.baseURL}/${relativeURL}`, { withCredentials: true }).toPromise();\n  }\n\n  /**\n   * Fires or responds to an HTTP_POST event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPOST(relativeURL: string, postData: any): Promise<any> {\n    return this.http.post(`${this.baseURL}/${relativeURL}`, postData, { withCredentials: true }).toPromise();\n  }\n\n  /**\n   * Fires or responds to an HTTP_PUT event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPUT(relativeURL: string, putData: any): Promise<any> {\n    return this.http.put(`${this.baseURL}/${relativeURL}`, putData, { withCredentials: true }).toPromise();\n  }\n\n  /**\n   * Fires or responds to an HTTP_DELETE event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpDELETE(relativeURL: string): Promise<any> {\n    return this.http.delete(`${this.baseURL}/${relativeURL}`, { withCredentials: true }).toPromise();\n  }\n\n  private getCookie(cname: string): any {\n    if (document) {\n      const name = `${cname}=`;\n      const ca = document.cookie.split(';');\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n    }\n    return false;\n  }\n}\n","// NG2\nimport { ComponentFactoryResolver, ComponentRef, Injectable, Injector, StaticProvider, Type, ViewContainerRef } from '@angular/core';\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class ComponentUtils<T = any> {\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {}\n\n  append<T>(ComponentClass: Type<T>, location: ViewContainerRef, providers?: StaticProvider[], onTop?: boolean): ComponentRef<T> {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ComponentClass);\n    const parent = location.injector;\n    const index = onTop ? 0 : location.length;\n    return location.createComponent(componentFactory, index, Injector.create({ providers, parent }));\n  }\n}\n","export class CollectionEvent {\n  static REFRESH: string = 'Collection.REFRESH';\n  static ADD: string = 'Collection.ADD';\n  static REMOVE: string = 'Collection.REMOVE';\n  static REMOVE_ALL: string = 'Collection.REMOVE_ALL';\n  static REPLACE: string = 'Collection.REPLACE';\n  static INVALIDATE_ALL: string = 'Collection.INVALIDATE_ALL';\n  static SORT: string = 'Collection.SORT';\n  static FILTER: string = 'Collection.FILTER';\n  static CHANGE: string = 'Collection.CHANGE';\n  static CURRENTPAGE_CHANGE: string = 'Collection.CURRENTPAGE_CHANGE';\n  static PAGESIZE_CHANGE: string = 'Collection.PAGESIZE_CHANGE';\n  static NUMBEROFPAGES_CHANGE: string = 'Collection.NUMBEROFPAGES_CHANGE';\n\n  type: string = '';\n  data: Array<any> = [];\n\n  constructor(type = 'Collection.REFRESH', data = []) {\n    this.type = type;\n    this.data = data;\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Helpers } from 'novo-elements/utils';\nimport { Collection } from './collection';\nimport { CollectionEvent } from './collection-event';\n\n/**\n * Base Class for all Collection based data providers\n *\n * @example\n *  var dp:DataProvider = new DataProvider();\n *  dp.addItem({label:\"Item 1\"});\n *  dp.addItem({label:\"Item 2\"});\n *  dp.addItem({label:\"Item 3\"});\n *  dp.addItem({label:\"Item 4\"});\n\n *  var myList:List = new List();\n *  myList.dataProvider = dp;\n */\nexport class ArrayCollection<T> implements Collection<T> {\n  dataChange: EventEmitter<CollectionEvent> = new EventEmitter<CollectionEvent>();\n  source: Array<T> = [];\n  editData: Array<T> = [];\n  isEditing: boolean = false;\n  filterData: Array<T> = [];\n  _filter: any = {};\n  _sort: Array<any> = [];\n\n  constructor(source: Array<T> = []) {\n    this.source = source;\n    this.editData = this.copy(this.source);\n    this.filterData = this.source.slice();\n  }\n\n  get length() {\n    return this.filterData.length;\n  }\n\n  get total(): number {\n    return this.filterData.length;\n  }\n\n  get list(): Array<T> {\n    return this.filterData;\n  }\n\n  isEmpty(): boolean {\n    return this.length <= 0 && !this.isLoading() && !this.hasErrors();\n  }\n\n  hasErrors(): boolean {\n    return false;\n  }\n\n  isLoading(): boolean {\n    return false;\n  }\n\n  isFiltered(): boolean {\n    return Object.keys(this._filter).length > 0;\n  }\n\n  /**\n   * Method to switch the isEditingflag for the data source\n   */\n  edit() {\n    this.isEditing = true;\n    this.editData = this.copy(this.source);\n  }\n\n  /**\n   * Method to leave edit mode and reset source\n   */\n  undo() {\n    this.isEditing = false;\n    this.source = this.copy(this.editData);\n    this.refresh();\n  }\n\n  /**\n   * Method to leave edit mode and save editData\n   */\n  commit() {\n    this.isEditing = false;\n    this.source = this.filterData.slice();\n    this.refresh();\n  }\n\n  /**\n   * Appends an item to the end of the data provider.\n   *\n   *\n   * @memberOf ArrayCollection\n   */\n  addItem(item: T): void {\n    this.isEditing ? this.editData.push(item) : this.source.push(item);\n    this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n    this.refresh();\n  }\n\n  /**\n   * Adds a new item to the data provider at the specified index.\n   *\n   *\n   * @memberOf ArrayCollection\n   */\n  addItemAt(item: T, index: number): void {\n    this.isEditing ? this.editData.splice(index, 0, item) : this.source.splice(index, 0, item);\n    this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n    this.refresh();\n  }\n\n  /**\n   *  Appends multiple items to the end of the DataProvider and dispatches a CollectionEvent.ADD event.\n   *\n   * @memberOf ArrayCollection\n   */\n  addItems(items: Array<T>): void {\n    this.isEditing ? this.editData.push(...items) : this.source.push(...items);\n    this.onDataChange(new CollectionEvent(CollectionEvent.ADD, items));\n    this.refresh();\n  }\n\n  /**\n   * Adds several items to the data provider at the specified index and dispatches a CollectionEvent.ADD event.\n   *\n   * @memberOf ArrayCollection\n   */\n  addItemsAt(items: Array<T>, index: number): void {\n    this.isEditing ? this.editData.splice(index, 0, ...items) : this.source.splice(index, 0, ...items);\n  }\n\n  /**\n   * Creates a copy of the current ArrayCollection any.\n   *\n   * @memberOf ArrayCollection\n   */\n  clone(): ArrayCollection<T> {\n    return new ArrayCollection(this.isEditing ? this.copy(this.editData) : this.copy(this.source));\n  }\n\n  /**\n   * Creates a copy of the current ArrayCollection any.\n   *\n   * @memberOf ArrayCollection\n   */\n  copy(array: any[]) {\n    return Helpers.deepClone(array);\n  }\n\n  /**\n   * Concatenates the specified items to the end of the current data provider.\n   *\n   * @memberOf ArrayCollection\n   */\n  concat(items: Array<T>): void {\n    this.addItems(items);\n  }\n\n  /**\n   * Returns the item at the specified index.\n   *\n   * @memberOf ArrayCollection\n   */\n  getItemAt(index: number): any {\n    return this.isEditing ? this.editData[index] : this.source[index];\n  }\n\n  /**\n   *  Returns the index of the specified item.\n   *\n   * @memberOf ArrayCollection\n   */\n  getItemIndex(item: T): number {\n    return this.isEditing ? this.editData.indexOf(item) : this.source.indexOf(item);\n  }\n\n  /**\n   * Invalidates all the data items that the DataProvider contains and dispatches a CollectionEvent.INVALIDATE_ALL event.\n   *\n   * @memberOf ArrayCollection\n   */\n  invalidate(): void {\n    this.onDataChange(new CollectionEvent(CollectionEvent.INVALIDATE_ALL));\n  }\n\n  /**\n   * Invalidates the specified item.\n   *\n   * @memberOf ArrayCollection\n   */\n  // invalidateItem(item:any):void {}\n\n  /**\n   * Invalidates the item at the specified index.\n   *\n   * @memberOf ArrayCollection\n   */\n  // invalidateItemAt(index:number):void {}\n\n  /**\n   * Appends the specified data into the data that the data provider contains and removes any duplicate items.\n   *\n   * @memberOf ArrayCollection\n   */\n  merge(newData: Array<T>): void {\n    for (const obj of newData) {\n      const existing = ~this.getItemIndex(obj);\n      if (existing) {\n        this.replaceItem(obj, existing);\n      } else {\n        this.addItem(obj);\n      }\n    }\n  }\n\n  /**\n   * Removes all items from the data provider and dispatches a CollectionEvent.REMOVE_ALL event.\n   *\n   * @memberOf ArrayCollection\n   */\n  removeAll(): void {\n    this.source = [];\n    this.editData = [];\n    this.filterData = [];\n    this.onDataChange(new CollectionEvent(CollectionEvent.REMOVE_ALL, []));\n    this.refresh();\n  }\n\n  /**\n   * Removes the specified item from the data provider and dispatches a CollectionEvent.REMOVE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  removeItem(item: T): boolean {\n    const index = this.getItemIndex(item);\n    return this.removeItemAt(index);\n  }\n\n  /**\n   * Removes the item at the specified index and dispatches a CollectionEvent.REMOVE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  removeItemAt(index: number): boolean {\n    const success = !!this.source.splice(index, 1);\n    this.refresh();\n    return success;\n  }\n\n  /**\n   * Replaces an existing item with a new item and dispatches a CollectionEvent.REPLACE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  replaceItem(newItem: any, oldItem: any): any {\n    const index = this.getItemIndex(oldItem);\n    if (index >= 0) {\n      this.replaceItemAt(newItem, index);\n    }\n  }\n\n  /**\n   * Replaces the item at the specified index and dispatches a CollectionEvent.REPLACE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  replaceItemAt(newItem: any, index: number): any {\n    this.filterData.splice(index, 1, newItem);\n  }\n\n  /**\n   * Sorts the items that the data provider contains and dispatches a CollectionEvent.SORT event.\n   *\n   * @memberOf ArrayCollection\n   */\n  get sort(): Array<any> {\n    return this._sort;\n  }\n\n  set sort(value: Array<any>) {\n    this._sort = value;\n    this.refresh();\n  }\n\n  /**\n   * Sorts the items that the data provider contains by the specified field and dispatches a CollectionEvent.SORT event.\n   *\n   * @memberOf ArrayCollection\n   */\n  sortOn(fieldName: any, reverse = false): Array<T> {\n    this.filterData = this.filterData.sort(Helpers.sortByField(fieldName, reverse));\n    this.onDataChange(new CollectionEvent(CollectionEvent.SORT));\n    return this.filterData;\n  }\n\n  get filter(): any {\n    return this._filter;\n  }\n\n  set filter(value: any) {\n    this._filter = value;\n    this.refresh();\n  }\n\n  filterOn(fieldName: any, value: any = null): Array<T> {\n    this.filterData = this.filterData.filter(Helpers.filterByField(fieldName, value));\n    return this.filterData;\n  }\n\n  onDataChange(event: CollectionEvent): void {\n    this.dataChange.emit(event);\n  }\n\n  refresh(): void {\n    this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n    for (const item of this._sort.reverse()) {\n      this.sortOn(item.field, item.reverse);\n    }\n    for (const key in this._filter) {\n      if (key) {\n        this.filterOn(key, this._filter[key]);\n      }\n    }\n    this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n  }\n\n  /**\n   * Creates an Array any representation of the data that the data provider contains.\n   *\n   * @memberOf ArrayCollection\n   */\n  toArray(): Array<T> {\n    return this.isEditing ? this.editData : this.source;\n  }\n\n  toJSON() {\n    return this.isEditing ? this.editData : this.source;\n  }\n}\n","import { ArrayCollection } from './array-collection';\nimport { CollectionEvent } from './collection-event';\nimport { PagedCollection } from './paged-collection';\n\nexport class PagedArrayCollection<T> extends ArrayCollection<T> implements PagedCollection<T> {\n  _page: number = 1;\n  _numberOfPages: number = 1;\n  _pageSize: number = 10;\n\n  constructor(source: Array<T> = []) {\n    super(source);\n  }\n\n  get numberOfPages(): number {\n    let result: number = this.source.length / this.pageSize;\n    result = Math.ceil(result);\n    return result;\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  set page(value: number) {\n    this._page = value;\n    this.refresh();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  set pageSize(value: number) {\n    this._pageSize = value;\n    this.refresh();\n  }\n\n  next(): number {\n    if (this.page === this.numberOfPages) {\n      return this.page;\n    }\n    this.page++;\n    return this.page;\n  }\n\n  prev(): number {\n    if (this._page === 1) {\n      return this.page;\n    }\n    this.page--;\n    return this.page;\n  }\n\n  first(): number {\n    if (this.page === 1) {\n      return this.page;\n    }\n    this.page = 1;\n    return this.page;\n  }\n\n  last(): number {\n    if (this.page === this.numberOfPages) {\n      return this.page;\n    }\n    this.page = this.numberOfPages;\n    return this.page;\n  }\n\n  refresh(): void {\n    this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n    for (const item of this._sort.reverse()) {\n      this.sortOn(item.field, item.reverse);\n    }\n    for (const key in this._filter) {\n      if (key) {\n        this.filterOn(key, this._filter[key]);\n      }\n    }\n    if (this.page >= 0) {\n      const start = (this.page - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      const result = this.filterData.slice(start, end);\n      this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, result));\n    } else {\n      this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n    }\n  }\n}\n","// NG2\nimport { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';\n//  import DateTimeFormatPart = Intl.DateTimeFormatPart;\n\ninterface TimeFormatParts {\n  hour: string;\n  minute: string;\n  dayPeriod?: string;\n}\n\nexport interface BigDecimalFormatOptions extends Intl.NumberFormatOptions {\n  useAccountingFormat?: boolean; // Render negative numbers using parens. True: \"(3.14)\", False: \"-3.14\"\n}\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class NovoLabelService {\n  and = 'and';\n  not = 'not';\n  filters = 'Filter';\n  clear = 'Clear';\n  sort = 'Sort';\n  distributionListOwner = 'Owner';\n  dateAdded = 'Date Added';\n  emptyTableMessage = 'No Records to display...';\n  noMatchingRecordsMessage = 'No Matching Records';\n  noMoreRecordsMessage = 'No More Records';\n  erroredTableMessage = 'Oops! An error occurred.';\n  pickerError = 'Oops! An error occurred.';\n  pickerTextFieldEmpty = 'Begin typing to see results.';\n  pickerEmpty = 'No results to display...';\n  tabbedGroupPickerEmpty = 'No results found';\n  quickNoteError = 'Oops! An error occurred.';\n  quickNoteEmpty = 'No results to display...';\n  required = 'Required';\n  numberTooLarge = 'Number is too large';\n  save = 'Save';\n  cancel = 'Cancel';\n  next = 'Next';\n  itemsPerPage = 'Items per page:';\n  chooseAField = 'Choose a field...';\n  operator = 'Operator...';\n  select = 'Select...';\n  value = 'Value...';\n  selectDateRange = 'Select Date Range...';\n  typeToAddChips = 'Type to add chips...';\n  selected = 'Selected';\n  selectAllOnPage = 'Select all on page';\n  deselectAll = 'Deselect all';\n  refresh = 'Refresh';\n  close = 'Close';\n  move = 'Move';\n  startDate = 'Start Date';\n  endDate = 'End Date';\n  rate = 'Rate';\n  more = 'more';\n  clearAll = 'CLEAR ALL';\n  clearAllNormalCase = 'Clear All';\n  clearSort = 'Clear Sort';\n  clearFilter = 'Clear Filter';\n  clearSearch = 'Clear Search';\n  clearSelected = 'Clear Selected';\n  today = 'Today';\n  now = 'Now';\n  isRequired = 'is required';\n  notValidYear = 'is not a valid year';\n  isTooLarge = 'is too large';\n  invalidAddress = 'requires at least one field filled out';\n  invalidEmail = 'requires a valid email (ex. abc@123.com)';\n  minLength = 'is required to be a minimum length of';\n  past1Day = 'Past 1 Day';\n  past7Days = 'Past 7 Days';\n  past30Days = 'Past 30 Days';\n  past90Days = 'Past 90 Days';\n  past1Year = 'Past 1 Year';\n  next1Day = 'Next 1 Day';\n  next7Days = 'Next 7 Days';\n  next30Days = 'Next 30 Days';\n  next90Days = 'Next 90 Days';\n  next1Year = 'Next 1 Year';\n  customDateRange = 'Custom Date Range';\n  backToPresetFilters = 'Back to Preset Filters';\n  okGotIt = 'Ok, Got it';\n  address = 'Address';\n  address1 = 'Address';\n  apt = 'Apt'; // TODO delete\n  address2 = 'Apt';\n  city = 'City / Locality';\n  state = 'State / Region';\n  zip = 'Postal Code';\n  zipCode = 'Postal Code'; // TODO delete\n  country = 'Country';\n  or = 'or';\n  clickToBrowse = 'click to browse';\n  chooseAFile = 'Choose a file';\n  no = 'No';\n  yes = 'Yes';\n  search = 'SEARCH';\n  noItems = 'There are no items';\n  dateFormat = 'MM/dd/yyyy';\n  dateFormatPlaceholder = 'MM/DD/YYYY';\n  localDatePlaceholder = 'mm/dd/yyyy';\n  timeFormatPlaceholderAM = 'hh:mm AM';\n  timeFormatPlaceholder24Hour = 'HH:mm';\n  timeFormatAM = 'AM';\n  timeFormatPM = 'PM';\n  confirmChangesModalMessage = 'Are you sure you want to change this field?';\n  promptModalMessage = 'Do you want to perform the following changes?';\n  asyncFailure = 'Async validation was not called within the 10s threshold, you might want to reload the page to try again';\n  previous = 'Previous';\n  actions = 'Actions';\n  all = 'All';\n  groupedMultiPickerEmpty = 'No items to display';\n  groupedMultiPickerSelectCategory = 'Select a category from the left to get started';\n  add = 'Add';\n  encryptedFieldTooltip = 'This data has been stored at the highest level of security';\n  noStatesForCountry = 'No states available for the selected country';\n  selectCountryFirst = 'Please select a country before selecting a state';\n  invalidIntegerInput = 'Special characters are not allowed for';\n  maxRecordsReached = 'Sorry, you have reached the maximum number of records allowed for this field';\n  selectFilterOptions = 'Please select one or more filter options below.';\n  addCondition = 'Add Condition';\n  includeAny = 'Include Any';\n  includeAll = 'Include All';\n  exclude = 'Exclude';\n  radius = 'Radius';\n  equals = 'Equals';\n  equalTo = 'Equal To';\n  greaterThan = 'Greater Than';\n  lessThan = 'Less Than';\n  doesNotEqual = 'Does Not Equal';\n  true = 'True';\n  false = 'False';\n  before = 'Before';\n  after = 'After';\n  between = 'Between';\n  within = 'Within';\n\n  constructor(\n    @Optional()\n    @Inject(LOCALE_ID)\n    public userLocale = 'en-US',\n  ) {}\n\n  maxlengthMetWithField(field: string, maxlength: number): string {\n    return `Sorry, you have reached the maximum character count of ${maxlength} for ${field}.`;\n  }\n\n  maxlengthMet(maxlength: number): string {\n    return `Sorry, you have reached the maximum character count of ${maxlength} for this field.`;\n  }\n\n  invalidMaxlengthWithField(field: string, maxlength: number): string {\n    return `Sorry, you have exceeded the maximum character count of ${maxlength} for ${field}.`;\n  }\n\n  invalidMaxlength(maxlength: number): string {\n    return `Sorry, you have exceeded the maximum character count of ${maxlength} for this field.`;\n  }\n\n  getToManyPlusMore(toMany: { quantity: number }): string {\n    return `+${toMany.quantity} more`;\n  }\n\n  selectedRecords(selected: number) {\n    return `${selected} records are selected.`;\n  }\n\n  showingXofXResults(shown: number, total: number) {\n    return `Showing ${shown} of ${total} Results.`;\n  }\n\n  totalRecords(total: number, select = false) {\n    return select ? `Select all ${total} records.` : `De-select remaining ${total} records.`;\n  }\n\n  dateFormatString(): string {\n    return this.dateFormat;\n  }\n\n  localizedDatePlaceholder(): string {\n    return this.localDatePlaceholder;\n  }\n\n  tabbedGroupClearSuggestion(tabLabelPlural: string): string {\n    return `Clear your search to see all ${tabLabelPlural}.`;\n  }\n\n  formatDateWithFormat(value: any, format: Intl.DateTimeFormatOptions) {\n    const date = value instanceof Date ? value : new Date(value);\n    if (date.getTime() !== date.getTime()) {\n      return value;\n    }\n    return new Intl.DateTimeFormat(this.userLocale, format).format(date);\n  }\n\n  formatToTimeOnly(param) {}\n\n  formatToDateOnly(param) {}\n\n  formatTimeWithFormat(value: any, format: Intl.DateTimeFormatOptions): string {\n    const date = value instanceof Date ? value : new Date(value);\n    if (date.getTime() !== date.getTime()) {\n      return value;\n    }\n    const timeParts: { [type: string]: string } = Intl.DateTimeFormat(this.userLocale, format)\n      .formatToParts(date)\n      .reduce((obj, part) => {\n        obj[part.type] = part.value;\n        return obj;\n      }, {});\n    const dayPeriod = timeParts.dayPeriod ? timeParts.dayPeriod : '';\n    const res = `${timeParts.hour}:${timeParts.minute} ${dayPeriod}`;\n    return res;\n  }\n\n  getWeekdays(weekStartsOn = 0): string[] {\n    function getDay(dayOfWeek) {\n      const dt = new Date();\n      return dt.setDate(dt.getDate() - dt.getDay() + dayOfWeek);\n    }\n\n    let weekdays = [getDay(0), getDay(1), getDay(2), getDay(3), getDay(4), getDay(5), getDay(6)].reduce((weekdays, dt) => {\n      weekdays.push(new Intl.DateTimeFormat(this.userLocale, { weekday: 'long' }).format(dt));\n      return weekdays;\n    }, []);\n\n    if (weekStartsOn > 0 && weekStartsOn <= 6) {\n      const newStart = weekdays.splice(weekStartsOn);\n      weekdays = [...newStart, ...weekdays];\n    }\n    return weekdays;\n  }\n\n  getMonths(): string[] {\n    function getMonth(month) {\n      const dt = new Date();\n      return dt.setMonth(month, 1);\n    }\n\n    return [\n      getMonth(0),\n      getMonth(1),\n      getMonth(2),\n      getMonth(3),\n      getMonth(4),\n      getMonth(5),\n      getMonth(6),\n      getMonth(7),\n      getMonth(8),\n      getMonth(9),\n      getMonth(10),\n      getMonth(11),\n    ].reduce((months, dt) => {\n      months.push(new Intl.DateTimeFormat(this.userLocale, { month: 'long' }).format(dt));\n      return months;\n    }, []);\n  }\n\n  getProperty(value: string) {\n    return this[value];\n  }\n\n  getRangeText(page: number, pageSize: number, length: number, short: boolean): string {\n    if (length === 0 || pageSize === 0) {\n      return `Displaying 0 of ${length}`;\n    }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n\n    return short ? `${startIndex + 1} - ${endIndex}/${length}` : `Displaying ${startIndex + 1} - ${endIndex} of ${length}`;\n  }\n\n  formatCurrency(value: number): string {\n    const options = { style: 'currency', currency: 'USD' };\n    return new Intl.NumberFormat(this.userLocale, options).format(value);\n  }\n\n  /**\n   * Extends the Intl.numberFormat capability with two extra features:\n   *  - Does NOT round values, but instead truncates to maximumFractionDigits\n   *  - By default uses accounting format for negative numbers: (3.14) instead of -3.14.\n   *\n   * @param value           The number value to convert to string\n   * @param overrideOptions Allows for overriding options used and passed to Intl.NumberFormat()\n   */\n  formatBigDecimal(value: number, overrideOptions?: BigDecimalFormatOptions): string {\n    const defaultOptions: BigDecimalFormatOptions = {\n      style: 'decimal',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n      useAccountingFormat: true,\n    };\n    const options: BigDecimalFormatOptions = Object.assign(defaultOptions, overrideOptions);\n    const truncatedValue = this.truncateToPrecision(value, options.maximumFractionDigits);\n    let _value = new Intl.NumberFormat(this.userLocale, options).format(truncatedValue);\n    if (value < 0) {\n      _value = options.useAccountingFormat ? `(${_value.slice(1)})` : `-${_value.slice(1)}`;\n    }\n    return _value;\n  }\n\n  /**\n   * Performs a string-based truncating of a number with no rounding\n   */\n  truncateToPrecision(value: number, precision: number) {\n    let valueAsString = value ? value.toString() : '0';\n    const decimalIndex = valueAsString.indexOf('.');\n    if (decimalIndex > -1 && decimalIndex + precision + 1 < valueAsString.length) {\n      valueAsString = valueAsString.substring(0, valueAsString.indexOf('.') + precision + 1);\n    }\n    return Number(valueAsString);\n  }\n\n  formatNumber(value, options?: Intl.NumberFormatOptions) {\n    return new Intl.NumberFormat(this.userLocale, options).format(value);\n  }\n\n  formatDateShort(value: string | number | Date) {\n    const options: Intl.DateTimeFormatOptions = {\n      // DD/MM/YYYY, HH:MM A - 02/14/2017, 1:17 PM\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n    };\n    const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n\n  formatTime(value: string | number | Date) {\n    const options: Intl.DateTimeFormatOptions = {\n      // HH:MM A - 1:17 PM\n      hour: 'numeric',\n      minute: '2-digit',\n    };\n    const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n\n  formatDate(value: string | number | Date) {\n    const options: Intl.DateTimeFormatOptions = {\n      // DD/MM/YYYY - 02/14/2017\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    };\n    const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n}\n\nexport const NOVO_ELEMENTS_LABELS_PROVIDERS = [{ provide: NovoLabelService, useClass: NovoLabelService }];\n","// NG2\nimport { Injectable } from '@angular/core';\nimport { Helpers } from 'novo-elements/utils';\nimport { NovoLabelService } from '../labels/novo-label-service';\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class DateFormatService {\n  constructor(private labels: NovoLabelService) {}\n\n  getTimeMask(militaryTime: boolean): Array<RegExp> {\n    let mask: Array<RegExp> = [/\\d/, /\\d/, /:/, /\\d/, /\\d/];\n    let timeFormatArray: Array<string> = [];\n    const timeFormat: string = this.labels.timeFormatPlaceholderAM.toLowerCase();\n    if (militaryTime) {\n      return mask;\n    } else {\n      timeFormatArray = timeFormat.split('hh:mm');\n      if (timeFormatArray && timeFormatArray.length) {\n        mask = [];\n        for (const timeFormatPart of timeFormatArray) {\n          if (timeFormatPart === '') {\n            mask = mask.concat([/\\d/, /\\d|:/, /:|\\d/, /\\d|\\w|\\s/, /\\d|\\s|\\w/]);\n          } else if (timeFormatPart.length) {\n            for (let i = 0; i < timeFormatPart.length; i++) {\n              mask.push(/\\s|\\w|\\d|\\./);\n            }\n          }\n        }\n      }\n    }\n    return mask;\n  }\n\n  getDateMask(): Array<RegExp> {\n    return [/\\d/, /\\d|\\/|\\.|\\-/, /\\/|\\.|\\-|\\d/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d/, /\\d/];\n  }\n\n  getDateTimeMask(militaryTime: boolean = false): Array<RegExp> {\n    return [...this.getDateMask(), /\\,?/, /\\s/, ...this.getTimeMask(militaryTime)];\n  }\n\n  getTimePlaceHolder(militaryTime: boolean): string {\n    if (militaryTime) {\n      return this.labels.timeFormatPlaceholder24Hour;\n    }\n    return this.labels.timeFormatPlaceholderAM;\n  }\n\n  parseDateString(dateString: string): [Date, string, boolean] {\n    let dateFormat: string = this.labels.dateFormatString();\n    const dateFormatRegex = /(\\w+)[\\/|\\.|\\-](\\w+)[\\/|\\.|\\-](\\w+)/gi;\n    const dateValueRegex = /(\\d+)[\\/|\\.|\\-](\\d+)[\\/|\\.|\\-](\\d+)/gi;\n    let dateFormatTokens: Array<string>;\n    let dateValueTokens: Array<string>;\n    let year: number;\n    let month: number;\n    let day: number;\n    let date: Date = new Date();\n    let isInvalidDate = true;\n    if (Helpers.isEmpty(dateFormat)) {\n      // Default to MM/dd/yyyy\n      dateFormat = 'mm/dd/yyyy';\n    } else {\n      dateFormat = dateFormat.toLowerCase();\n    }\n    dateFormatTokens = dateFormatRegex.exec(dateFormat);\n    dateValueTokens = dateValueRegex.exec(dateString);\n    if (dateFormatTokens && dateFormatTokens.length === 4 && dateValueTokens && dateValueTokens.length === 4) {\n      for (let i = 1; i < 4; i++) {\n        if (dateFormatTokens[i].includes('m')) {\n          month = parseInt(dateValueTokens[i], 10) - 1;\n        } else if (dateFormatTokens[i].includes('d')) {\n          day = parseInt(dateValueTokens[i], 10);\n        } else {\n          year = parseInt(dateValueTokens[i], 10);\n        }\n      }\n      if (month >= 0 && month <= 11 && year > 1900 && day > 0 && day <= 31) {\n        date = new Date(year, month, day);\n        isInvalidDate = false;\n      }\n    } else if (dateFormatTokens && dateFormatTokens.length === 4 && dateString.length >= 1) {\n      const twoTokens = /\\d{1,4}(\\/|\\.|\\-)(\\d{1,2})/.exec(dateString);\n      const oneToken = /^(\\d{1,4})$/.exec(dateString);\n      const delimiter = /\\w+(\\/|\\.|\\-)\\w+[\\/|\\.|\\-]\\w+/gi.exec(dateFormat);\n      const dateStringWithDelimiter = dateString[dateString.length - 1].match(/\\/|\\.|\\-/);\n      if (twoTokens && twoTokens.length === 3 && this.isValidDatePart(twoTokens[2], dateFormatTokens[2]) && !dateStringWithDelimiter) {\n        dateString = `${dateString}${delimiter[1]}`;\n      } else if (oneToken && oneToken.length === 2 && this.isValidDatePart(oneToken[1], dateFormatTokens[1]) && !dateStringWithDelimiter) {\n        dateString = `${dateString}${delimiter[1]}`;\n      }\n    }\n    return [date, dateString, isInvalidDate];\n  }\n\n  parseTimeString(timeString: string, militaryTime: boolean): [Date, string] {\n    const value: Date = new Date();\n    let timeStringParts: Array<string>;\n    let amFormat = this.labels.timeFormatAM;\n    let pmFormat = this.labels.timeFormatPM;\n    if (!(timeString && timeString.includes(':'))) {\n      return [value, timeString];\n    }\n    if (!militaryTime && amFormat && pmFormat) {\n      let splits: Array<string> = [];\n      let pm: boolean = false;\n      amFormat = this.labels.timeFormatAM.toLowerCase();\n      pmFormat = this.labels.timeFormatPM.toLowerCase();\n      timeString = timeString.toLowerCase();\n      if (timeString.includes(amFormat)) {\n        splits = timeString.split(amFormat);\n      } else if (timeString.includes(pmFormat)) {\n        splits = timeString.split(pmFormat);\n        pm = true;\n      }\n      if (splits && splits.length) {\n        for (const item of splits) {\n          if (item && item.trim().includes(':')) {\n            timeStringParts = item.trim().split(':');\n          }\n        }\n      }\n      if (timeStringParts && timeStringParts.length && timeStringParts.length === 2) {\n        let hours: number = parseInt(timeStringParts[0], 10);\n        if (hours === 12 && pm) {\n          hours = 12;\n        } else if (pm) {\n          hours = hours + 12;\n        } else if (hours === 12) {\n          hours = 0;\n        }\n        value.setHours(hours);\n        value.setMinutes(parseInt(timeStringParts[1], 10));\n        value.setSeconds(0);\n      }\n    } else {\n      timeStringParts = /(\\d{1,2}):(\\d{2})/.exec(timeString);\n      if (timeStringParts && timeStringParts.length && timeStringParts.length === 3) {\n        value.setHours(parseInt(timeStringParts[1], 10));\n        value.setMinutes(parseInt(timeStringParts[2], 10));\n        value.setSeconds(0);\n      }\n    }\n    return [value, timeString];\n  }\n\n  parseString(dateTimeString: string, militaryTime: boolean, type: string): [Date, string, boolean?] {\n    switch (type) {\n      case 'datetime':\n        const str = dateTimeString.replace(/-/g, '/');\n        const parts = str.split(' ');\n        const [dt, dts] = this.parseDateString(parts[0]);\n        if (parts.length > 1) {\n          const [tm, tms] = this.parseTimeString(parts[1], militaryTime);\n          return [new Date(dt.setHours(tm.getHours(), tm.getMinutes())), `${dts} ${tms}`];\n        }\n        return [dt, dts];\n      case 'date':\n        return this.parseDateString(dateTimeString);\n      case 'time':\n        return this.parseTimeString(dateTimeString, militaryTime);\n      default:\n        return;\n    }\n  }\n\n  isValidDatePart(value: string, format: string): boolean {\n    const datePart = parseInt(value, 10);\n    if (format.includes('m') && (datePart >= 2 || value.length === 2)) {\n      return true;\n    } else if (format.includes('d') && (datePart >= 4 || value.length === 2)) {\n      return true;\n    } else if (format.includes('y') && datePart >= 1000) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Global {}\n\nexport abstract class GlobalRef {\n  abstract get nativeGlobal(): Global;\n}\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class BrowserGlobalRef extends GlobalRef {\n  get nativeGlobal(): Global {\n    return window as Global;\n  }\n}\nexport class NodeGlobalRef extends GlobalRef {\n  get nativeGlobal(): Global {\n    throw new Error(`global doesn't compile for some reason`);\n    // return global as Global;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class OptionsService {\n  constructor() {}\n\n  getOptionsConfig(http: HttpClient, field: any, config: { token?: string; restUrl?: string; military?: boolean }): any {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query) => {\n        return new Promise((resolve, reject) => {\n          if (query && query.length) {\n            const exp = new RegExp('^(?:[a-z]+:)?//', 'i');\n            let endpoint;\n            if (exp.test(field.optionsUrl)) {\n              const url = new URL(field.optionsUrl);\n              url.searchParams.set('filter', query || '');\n              endpoint = url.toString();\n            } else {\n              // Construct relative url (host will not be used but is required for construction)\n              const url = new URL(`http://placeholder.com/${field.optionsUrl}`);\n              url.searchParams.set('filter', query || '');\n              endpoint = `${url.pathname}${url.search}`;\n            }\n            http.get(endpoint).subscribe(resolve, reject);\n          } else {\n            resolve([]);\n          }\n        });\n      },\n    };\n  }\n}\n","// NG2\nimport { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class Security {\n  credentials: string[] = [];\n  change: EventEmitter<any> = new EventEmitter();\n\n  grant(data: any[] | Object): void {\n    const parsed = [];\n    if (data instanceof Array) {\n      for (const permission of data) {\n        parsed.push(permission.replace(/\\s/gi, ''));\n      }\n    } else if (typeof data === 'object') {\n      for (const key in data) {\n        if (data[key] instanceof Array) {\n          for (const permission of data[key]) {\n            parsed.push(`${key}.${permission}`);\n          }\n        }\n      }\n    }\n    this.credentials = [].concat(this.credentials, parsed);\n    this.change.emit(this.credentials);\n  }\n\n  has(value: any): boolean {\n    return this.credentials.indexOf(value) > -1;\n  }\n\n  revoke(value: any): void {\n    const i: number = this.credentials.indexOf(value);\n    this.credentials.splice(i, 1);\n    this.change.emit(this.credentials);\n  }\n\n  clear(): void {\n    this.credentials = [];\n    this.change.emit(this.credentials);\n  }\n\n  subscribe(fn: any): void {\n    this.change.subscribe(fn);\n  }\n\n  checkRoutes(\n    routes: { entities?: any[]; permissions?: any[] | Function; path?: string; label?: string; canDisable?: Boolean }[],\n    options: { entityType?: string },\n  ): any {\n    const filtered = [];\n    for (const route of routes) {\n      if (route.entities && ~route.entities.indexOf(options.entityType)) {\n        if (route.permissions instanceof Function) {\n          if (route.permissions(options, this)) {\n            filtered.push(route);\n          }\n        } else if (route.permissions && route.permissions.length) {\n          if (route.permissions.every((perm) => this.has(perm))) {\n            filtered.push(route);\n          }\n        } else {\n          filtered.push(route);\n        }\n      }\n    }\n\n    return filtered;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class LocalStorageService {\n  setItem(key: any, value: any): any {\n    localStorage.setItem(key, value);\n  }\n\n  getItem(key: any): any {\n    return localStorage.getItem(key);\n  }\n\n  removeItem(key: any): any {\n    localStorage.removeItem(key);\n  }\n}\n","// NG2\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: `root`,\n})\nexport class NovoTemplateService {\n  templates: any = {\n    default: {},\n    custom: {},\n  };\n  constructor() {}\n\n  getAll(): any {\n    const templates: any = {};\n    const customTemplateTypes: string[] = Object.keys(this.templates.custom);\n    const defaultTemplateTypes: string[] = Object.keys(this.templates.default);\n    defaultTemplateTypes.forEach((type: string) => {\n      templates[type] = this.templates.default[type];\n    });\n    customTemplateTypes.forEach((type: string) => {\n      templates[type] = this.templates.custom[type];\n    });\n    return templates;\n  }\n\n  addDefault(key: string, template: any): void {\n    this.templates.default[key] = template;\n  }\n\n  addCustom(key: string, template: any): void {\n    this.templates.custom[key] = template;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.NovoLabelService"],"mappings":"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"}