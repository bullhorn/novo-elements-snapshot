{"version":3,"file":"novo-elements-elements-calendar.mjs","sources":["../../../projects/novo-elements/src/elements/calendar/strategies/default-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/strategies/multi-date-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/strategies/range-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/strategies/week-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/month-view/month-view.component.ts","../../../projects/novo-elements/src/elements/calendar/month-view/month-view.component.html","../../../projects/novo-elements/src/elements/calendar/month-select/month-select.component.ts","../../../projects/novo-elements/src/elements/calendar/month-select/month-select.component.html","../../../projects/novo-elements/src/elements/calendar/year-select/year-select.component.ts","../../../projects/novo-elements/src/elements/calendar/year-select/year-select.component.html","../../../projects/novo-elements/src/elements/calendar/calendar.component.ts","../../../projects/novo-elements/src/elements/calendar/calendar.component.html","../../../projects/novo-elements/src/elements/calendar/Calendar.module.ts","../../../projects/novo-elements/src/elements/calendar/novo-elements-elements-calendar.ts"],"sourcesContent":["import { FactoryProvider, Injectable, InjectionToken, Optional, SkipSelf } from '@angular/core';\nimport type { DateLike, NovoDateSelectionStrategy } from 'novo-elements/utils';\nimport { DateUtil } from 'novo-elements/utils';\n\n/** Injection token used to customize the date range selection behavior. */\nexport const NOVO_DATE_SELECTION_STRATEGY = new InjectionToken<NovoDateSelectionStrategy>('NOVO_DATE_SELECTION_STRATEGY');\n\n/** Provides the default date selection behavior. Single Date */\n@Injectable()\nexport class DefaultDateSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  selectionFinished(date: DateLike | null, currentValue: DateLike[], event: Event): DateLike[] {\n    return [date];\n  }\n\n  createPreview(activeDate: DateLike | null, [currentDate]: DateLike[]) {\n    return [activeDate];\n  }\n\n  isSelected(activeDate: DateLike | null, [currentDate]: DateLike[]) {\n    return DateUtil.isSameDay(activeDate, currentDate);\n  }\n}\n\n/** @docs-private */\nexport function NOVO_DATE_SELECTION_STRATEGY_PROVIDER_FACTORY(parent: NovoDateSelectionStrategy<unknown>) {\n  return parent || new DefaultDateSelectionStrategy();\n}\n\n/** @docs-private */\nexport const NOVO_DATE_SELECTION_STRATEGY_PROVIDER: FactoryProvider = {\n  provide: NOVO_DATE_SELECTION_STRATEGY,\n  deps: [[new Optional(), new SkipSelf(), NOVO_DATE_SELECTION_STRATEGY]],\n  useFactory: NOVO_DATE_SELECTION_STRATEGY_PROVIDER_FACTORY,\n};\n","import { Injectable } from '@angular/core';\nimport type { DateLike, NovoDateSelectionStrategy } from 'novo-elements/utils';\n\n@Injectable()\nexport class MultiDateSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  selectionFinished(dateLike: DateLike | null, currentValue: DateLike[], event: Event): DateLike[] {\n    const date = dateLike as Date;\n    const current = new Set(currentValue.map((c: Date) => c.getTime()));\n    if (current.has(date.getTime())) {\n      current.delete(date.getTime());\n    } else {\n      current.add(date.getTime());\n    }\n    return [...current].map((c) => new Date(c));\n  }\n\n  createPreview(activeDate: DateLike | null, currentValue: DateLike[]) {\n    return [activeDate];\n  }\n\n  isSelected(activeDate: DateLike | null, currentValue: DateLike[]) {\n    return currentValue && currentValue.includes(activeDate);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport type { DateLike, NovoDateSelectionStrategy } from 'novo-elements/utils';\nimport { DateUtil } from 'novo-elements/utils';\n\n@Injectable()\nexport class RangeSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  selectionFinished(date: DateLike, currentRange: DateLike[]) {\n    let [start, end] = currentRange;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null && date && DateUtil.differenceInCalendarDays(date, start) >= 0) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    return [start, end];\n  }\n\n  createPreview(activeDate: DateLike | null, currentRange: DateLike[]) {\n    let start: DateLike | null = null;\n    let end: DateLike | null = null;\n    const [currStart, currEnd] = currentRange;\n\n    if (currStart && !currEnd && activeDate) {\n      start = currStart;\n      end = activeDate;\n    }\n\n    return [start, end];\n  }\n\n  isSelected(activeDate: DateLike | null, currentRange: DateLike[]) {\n    const [start, end] = currentRange;\n    return DateUtil.isWithinRange(activeDate, start, end);\n  }\n}\n","import type { DateLike, NovoDateSelectionStrategy } from 'novo-elements/utils';\nimport { DateUtil } from 'novo-elements/utils';\n\nexport class WeekSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  constructor(private weekStartsOn: Day = 0) {}\n\n  selectionFinished(date: DateLike | null): DateLike[] {\n    return this._createWeekRange(date);\n  }\n\n  createPreview(activeDate: DateLike | null): DateLike[] {\n    return this._createWeekRange(activeDate);\n  }\n\n  private _createWeekRange(date: DateLike | null): DateLike[] {\n    if (date) {\n      const { weekStartsOn } = this;\n      const start = DateUtil.startOfWeek(date as DateLike, { weekStartsOn });\n      const end = DateUtil.endOfWeek(date as DateLike, { weekStartsOn });\n      return [start, end];\n    }\n\n    return [null, null];\n  }\n\n  isSelected(activeDate: DateLike | null, currentRange: DateLike[]) {\n    const [start, end] = currentRange;\n    return DateUtil.isWithinRange(activeDate, start, end);\n  }\n}\n","// NG2\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// Vendor\nimport { addDays, Day as DateFnsDay, isToday } from 'date-fns';\nimport { NovoLabelService } from 'novo-elements/services';\nimport { BooleanInput, DateUtil } from 'novo-elements/utils';\nimport type { DateLike, Day, OverlayDate } from 'novo-elements/utils';\n\n@Component({\n  selector: 'novo-month-view',\n  templateUrl: './month-view.component.html',\n  styleUrls: ['./month-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoMonthViewElement implements OnInit {\n  @Input()\n  minDate: Date;\n  @Input()\n  maxDate: Date;\n  @Input()\n  activeDate: Date = new Date();\n  // Weekstart must be 0-6 (Sunday - Saturday)\n  @Input()\n  selected: DateLike[] = [];\n  @Input()\n  preview: DateLike[] = [];\n  @Input()\n  overlays: OverlayDate[] = [];\n  @Input()\n  disabledDateMessage: string;\n\n  @Input()\n  @BooleanInput()\n  isRange: boolean = false;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.hide-overflow-days')\n  public hideOverflowDays: boolean = false;\n\n  _weekStartsOn: DateFnsDay = 0;\n\n  @Input()\n  get weekStartsOn(): DateFnsDay {\n    return this._weekStartsOn;\n  }\n  set weekStartsOn(value: DateFnsDay) {\n    this._weekStartsOn = value;\n    this.weekdays = this.labels.getWeekdays(value);\n    this.updateView(this.activeDate);\n  }\n\n  // Select callback for output\n  @Output()\n  select: EventEmitter<any> = new EventEmitter(false);\n  // Select callback for output\n  @Output()\n  hover: EventEmitter<any> = new EventEmitter(false);\n\n  // List of all the weekdays\n  weekdays: string[] = this.labels.getWeekdays(this.weekStartsOn);\n  // List of all months\n  monthNames: string[] = this.labels.getMonths();\n\n  monthLabel: string;\n  weeks: any;\n\n  constructor(\n    public labels: NovoLabelService,\n    private element: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private _sanitizer: DomSanitizer,\n  ) {}\n\n  ngOnInit() {\n    // Set labels\n    this.updateView(this.activeDate);\n  }\n\n  updateView(date: Date) {\n    this.monthLabel = this.labels.formatDateWithFormat(this.activeDate, { month: 'short' });\n    this.buildMonth(this.activeDate);\n  }\n\n  onSelect(event: Event, day: Day) {\n    // Helpers.swallowEvent(event);\n    this.select.next({ event, day });\n    this.cdr.markForCheck();\n  }\n\n  onHover(event: Event, day: Day): void {\n    this.isRange && this.hover.next({ event, day });\n  }\n\n  buildMonth(month: Date) {\n    // Reset the weeks\n    this.weeks = [];\n    const start = DateUtil.startOfMonth(month);\n\n    // House keeping variables to know when we are done building the month\n    let done = false,\n      date = DateUtil.startOfWeek(start, { weekStartsOn: this.weekStartsOn }),\n      monthIndex = date.getMonth(),\n      count = 0;\n\n    while (!done) {\n      // Build the days for the weeks\n      this.weeks.push({ days: this.buildWeek(new Date(date.getTime()), month) });\n\n      // Increment variables for the next iteration\n      date = addDays(date, 7);\n      done = count++ > 2 && monthIndex !== date.getMonth();\n      monthIndex = date.getMonth();\n    }\n  }\n\n  buildWeek(date: Date, month: Date): Array<Object> {\n    // Build out of the days of the week\n    const days = [];\n    // Iterate over the days of the week\n    for (let i = 0; i < 7; i++) {\n      // Push a variable on the day array with lots of helpers to make the template easier\n      days.push({\n        name: this.weekdays[i],\n        number: date.getDate(),\n        isToday: isToday(date),\n        date,\n      });\n\n      // Increment for the next iteration\n      date = addDays(date, 1);\n    }\n\n    return days;\n  }\n\n  isDisabled(day: DateLike) {\n    return (this.minDate && DateUtil.isBefore(day, this.minDate)) || (this.maxDate && DateUtil.isAfter(day, this.maxDate));\n  }\n\n  /** Returns whether a cell should be marked as selected. */\n  _isSelected(value: DateLike) {\n    return this.selected && this.selected.find((d) => DateUtil.isSameDay(d, value));\n  }\n\n  /** Returns whether a cell should be marked as preview. */\n  _isPreview(value: DateLike) {\n    return this.preview && this.preview.find((d) => DateUtil.isSameDay(d, value));\n  }\n\n  /** Returns whether a cell should be marked as an overlay. */\n  _isOverlay(value: DateLike) {\n    return this.overlays && this.overlays.find((o) => DateUtil.isSameDay(o.date, value));\n  }\n\n  /** Returns whether a cell should be marked as an overlay. */\n  _hasOverlayType(value: DateLike) {\n    let overlay = this.overlays && this.overlays.find((o) => DateUtil.isSameDay(o.date, value));\n    return overlay ? overlay.type : null;\n  }\n\n  /** Gets whether a value is the start of the main range. */\n  _isRangeStart(value: DateLike) {\n    return isStart(value, this.selected, this.isRange);\n  }\n\n  /** Gets whether a value is the end of the main range. */\n  _isRangeEnd(value: DateLike) {\n    return isEnd(value, this.selected, this.isRange);\n  }\n\n  /** Gets whether a value is within the currently-selected range. */\n  _isInRange(value: DateLike): boolean {\n    return isInRange(value, this.selected, this.isRange);\n  }\n\n  /** Gets whether a value is the start of the preview range. */\n  _isPreviewStart(value: DateLike) {\n    return isStart(value, this.preview, this.isRange);\n  }\n\n  /** Gets whether a value is the end of the preview range. */\n  _isPreviewEnd(value: DateLike) {\n    return isEnd(value, this.preview, this.isRange);\n  }\n\n  /** Gets whether a value is inside the preview range. */\n  _isInPreview(value: DateLike) {\n    return isInRange(value, this.preview, this.isRange);\n  }\n}\n\n/** Checks whether a value is the start of a range. */\nfunction isStart(value: DateLike, range: DateLike[] | null, rangeEnabled: boolean): boolean {\n  const [start, end] = range ?? [];\n  return rangeEnabled && end !== null && !DateUtil.isSameDay(start, end) && value < end && DateUtil.isSameDay(value, start);\n}\n\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value: DateLike, range: DateLike[] | null, rangeEnabled: boolean): boolean {\n  const [start, end] = range ?? [];\n  return rangeEnabled && start !== null && !DateUtil.isSameDay(start, end) && value >= start && DateUtil.isSameDay(value, end);\n}\n\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value: DateLike, range: DateLike[] | null, rangeEnabled: boolean): boolean {\n  const [start, end] = range ?? [];\n  return rangeEnabled && start !== null && end !== null && !DateUtil.isSameDay(start, end) && value >= start && value <= end;\n}\n","<div class=\"calendar-table\" cellspacing=\"0\" cellpadding=\"0\">\n  <div class=\"calendar-thead\">\n    <div class=\"calendar-th weekday\" *ngFor=\"let day of weekdays\" title=\"{{ day }}\"\n      [attr.data-automation-id]=\"day.substr(0, 2)\">\n      {{ day.substr(0, 2) }}\n    </div>\n  </div>\n  <div class=\"calendar-body\">\n    <div class=\"calendar-week\" *ngFor=\"let week of weeks\">\n      <div class=\"calendar-date\" *ngFor=\"let day of week.days\"\n        [class.today]=\"day.isToday\"\n        [class.notinmonth]=\"day.date.getMonth() !== activeDate.getMonth()\"\n        [class.selected]=\"_isSelected(day.date)\"\n        [class.preview]=\"_isPreview(day.date)\"\n        [class.overlay]=\"_isOverlay(day.date)\"\n        [class]=\"_hasOverlayType(day.date)\"\n        [class.inRange]=\"_isInRange(day.date)\"\n        [class.rangeStart]=\"_isRangeStart(day.date)\"\n        [class.rangeEnd]=\"_isRangeEnd(day.date)\"\n        [class.inPreview]=\"_isInPreview(day.date)\"\n        [class.previewStart]=\"_isPreviewStart(day.date)\"\n        [class.previewEnd]=\"_isPreviewEnd(day.date)\"\n        [class.calendar-date]=\"true\"\n        [attr.aria-label]=\"day.name\"\n        [attr.aria-disabled]=\"isDisabled(day.date)\"\n        [attr.aria-selected]=\"_isSelected(day.date)\"\n        [attr.data-automation-id]=\"day.number\"\n        [title]=\"isDisabled(day.date) ? disabledDateMessage : ''\"\n        (mouseover)=\"onHover($event, day)\">\n        <novo-button\n          class=\"day\"\n          tabindex=\"0\"\n          [attr.data-automation-id]=\"day.number\"\n          [disabled]=\"isDisabled(day.date)\"\n          (click)=\"onSelect($event, day)\">\n          {{ day.number }}\n        </novo-button>\n      </div>\n    </div>\n  </div>\n</div>","// NG2\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NovoLabelService } from 'novo-elements/services';\nimport type { DateLike } from 'novo-elements/utils';\nimport { DateUtil } from 'novo-elements/utils';\n\n@Component({\n  selector: 'novo-month-select',\n  templateUrl: './month-select.component.html',\n  styleUrls: ['./month-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoMonthSelectElement implements OnInit {\n  @Input()\n  activeDate: DateLike = new Date();\n  @Input()\n  selected: DateLike[] = [];\n\n  // Select callback for output\n  @Output()\n  select: EventEmitter<any> = new EventEmitter(false);\n\n  // List of all months\n  monthNames: string[] = this.labels.getMonths();\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {}\n\n  onSelect(event: Event, month: number) {\n    // Helpers.swallowEvent(event);\n    this.select.next({ event, month });\n  }\n\n  _isActive(month: number) {\n    return this.activeDate && month === DateUtil.getMonth(this.activeDate);\n  }\n\n  _isSelected(month: number) {\n    return this.selected && month === DateUtil.getMonth(this.selected[0]);\n  }\n}\n","<div *ngFor=\"let month of monthNames; let i = index\" (click)=\"onSelect($event, i)\" tabindex=\"0\">\n  <div class=\"month\" [class.selected]=\"_isSelected(i)\" [attr.data-automation-id]=\"month\">\n    {{ month }}</div>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NovoLabelService } from 'novo-elements/services';\nimport type { DateLike } from 'novo-elements/utils';\nimport { DateUtil } from 'novo-elements/utils';\n\n@Component({\n  selector: 'novo-year-select',\n  templateUrl: './year-select.component.html',\n  styleUrls: ['./year-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoYearSelectElement implements OnInit {\n  @Input()\n  minYear: string | number;\n  @Input()\n  maxYear: string | number;\n\n  @Input()\n  activeDate: DateLike = new Date();\n  @Input()\n  selected: DateLike[] = [];\n  // Select callback for output\n  @Output()\n  select: EventEmitter<any> = new EventEmitter(false);\n\n  // List of all years (generated in ngOnInit)\n  years: Array<any> = [];\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {\n    // Determine the year array\n    const now = new Date();\n    const start = this.minYear ? Number(this.minYear) : now.getFullYear() - 100;\n    const end = this.maxYear ? Number(this.maxYear) : now.getFullYear() + 10;\n    const years = [];\n    for (let i = start; i <= end; i++) {\n      years.push(i);\n    }\n    this.years = years.reverse();\n  }\n\n  onSelect(event: Event, year: number) {\n    // Helpers.swallowEvent(event);\n    this.select.next({ event, year });\n  }\n\n  _isActive(year: number) {\n    return this.activeDate && year === DateUtil.getYear(this.activeDate);\n  }\n\n  _isSelected(year: number) {\n    return this.selected && year === DateUtil.getYear(this.selected[0]);\n  }\n}\n","<div *ngFor=\"let year of years\" (click)=\"onSelect($event, year)\" tabindex=\"0\">\n  <div class=\"year\" [class.selected]=\"_isSelected(year)\" [attr.data-automation-id]=\"year\">{{ year }}</div>\n</div>","// NG2\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// Vendor\nimport { addMonths, isDate, isSameDay, setMonth, setYear, startOfDay, startOfMonth, subMonths } from 'date-fns';\n// APP\nimport { NovoLabelService } from 'novo-elements/services';\nimport { Helpers } from 'novo-elements/utils';\nimport type {\n  DatePickerSelectModes,\n  NovoDateSelectEvent,\n  NovoDateSelectionStrategy,\n  NovoMonthSelectEvent,\n  NovoYearSelectEvent,\n  OverlayDate,\n} from 'novo-elements/utils';\nimport { DefaultDateSelectionStrategy, MultiDateSelectionStrategy, RangeSelectionStrategy, WeekSelectionStrategy } from './strategies';\n\n@Component({\n  selector: 'novo-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n})\nexport class NovoCalendarElement implements OnInit {\n  @Input()\n  minYear: string | number;\n  @Input()\n  maxYear: string | number;\n  @Input()\n  minDate: string | number;\n  @Input()\n  maxDate: string | number;\n  // Default view mode (select days)\n  @Input()\n  activeView: string = 'days';\n  @Input()\n  layout: string = 'horizontal';\n\n  _selected: Date[] = [];\n  @Input()\n  get selected(): Date[] {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = value ? value.filter(isDate).map((d) => startOfDay(d)) : [];\n  }\n  @Output()\n  selectedChange: EventEmitter<Date[]> = new EventEmitter();\n  @Input()\n  preview: Date[] = [];\n  @Output()\n  previewChange: EventEmitter<Date[]> = new EventEmitter();\n  @Output()\n  activeDateChange: EventEmitter<Date> = new EventEmitter();\n\n  @Input()\n  overlays: OverlayDate[] = [];\n  @Input()\n  disabledDateMessage: string;\n\n  _activeDate: Date = new Date();\n  _mode: DatePickerSelectModes = 'single';\n  _numberOfMonths: number[] = [0];\n  _weekStartsOn: Day = 0;\n  _strategy: NovoDateSelectionStrategy<any> = new DefaultDateSelectionStrategy();\n\n  months: any;\n\n  @Input()\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    if (!isSameDay(value, this._activeDate)) {\n      this._activeDate = value;\n      this.activeDateChange.next(value);\n      this.updateView(value);\n    }\n  }\n\n  @Input()\n  get weekStartsOn(): Day {\n    return this._weekStartsOn;\n  }\n  set weekStartsOn(value: Day) {\n    this._weekStartsOn = value;\n    if (this.mode === 'week') {\n      this._strategy = new WeekSelectionStrategy(this.weekStartsOn);\n    }\n  }\n\n  @Input()\n  get numberOfMonths(): number {\n    return this._numberOfMonths.length;\n  }\n  set numberOfMonths(value) {\n    this._numberOfMonths = Array.from(Array(Number(value)).keys());\n    this.updateView(this.activeDate);\n  }\n\n  @Input()\n  get mode(): DatePickerSelectModes {\n    return this._mode;\n  }\n  set mode(value) {\n    if (this._mode !== value) {\n      this._mode = value;\n      switch (value) {\n        case 'multiple':\n          this._strategy = new MultiDateSelectionStrategy();\n          break;\n        case 'range':\n          this._strategy = new RangeSelectionStrategy();\n          break;\n        case 'week':\n          this._strategy = new WeekSelectionStrategy(this.weekStartsOn);\n          break;\n        case 'single':\n        default:\n          this._strategy = new DefaultDateSelectionStrategy();\n          break;\n      }\n    }\n  }\n\n  @HostBinding('style.width')\n  get hb_width() {\n    if (this.layout === 'vertical') {\n      return this._sanitizer.bypassSecurityTrustStyle(`min-content`);\n    }\n    return this._sanitizer.bypassSecurityTrustStyle(`min-content`);\n  }\n\n  @HostBinding('class.layout-horizontal')\n  get hb_horiztonal() {\n    return this.layout !== 'vertical';\n  }\n\n  @HostBinding('class.layout-vertical')\n  get hb_vertical() {\n    return this.layout === 'vertical';\n  }\n\n  constructor(\n    public labels: NovoLabelService,\n    private element: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private _sanitizer: DomSanitizer,\n  ) {}\n\n  ngOnInit() {\n    if (!this.activeDate) {\n      this.activeDate = this.selected.length ? this.selected[0] : new Date();\n    }\n    this.updateView(this.activeDate);\n  }\n\n  updateView(activeDate: Date) {\n    this.activeDate = new Date(activeDate ? new Date(activeDate) : new Date());\n    this.months = [];\n    const month = startOfMonth(this.activeDate);\n    for (const i of this._numberOfMonths) {\n      const date = addMonths(month, i);\n      const label = this.labels.formatDateWithFormat(date, { month: 'short' });\n      this.months.push({ date, label });\n    }\n  }\n\n  setToday() {\n    const tmp = new Date();\n    this.updateView(tmp);\n    // Go back to days\n    this.openView(null, 'days');\n  }\n\n  monthSelected({ event, month }: NovoMonthSelectEvent): void {\n    const date = this.activeDate ? this.activeDate : new Date().getMonth();\n    const tmp = setMonth(date, month);\n    this.updateView(tmp);\n    // Go back to days\n    this.openView(null, 'days');\n  }\n\n  yearSelected({ event, year }: NovoYearSelectEvent): void {\n    const date = this.activeDate ? this.activeDate : new Date();\n    const tmp = setYear(date, year);\n    this.updateView(tmp);\n    // Go back to days\n    this.openView(null, 'days');\n  }\n\n  dateSelected({ event, day }: NovoDateSelectEvent) {\n    // Helpers.swallowEvent(event);\n    this.selected = this._strategy.selectionFinished(day.date, this.selected, event);\n    this.selectedChange.emit(this.selected);\n    this.cdr.markForCheck();\n  }\n\n  updatePreview({ event, day }: NovoDateSelectEvent) {\n    this.preview = this._strategy.createPreview(day.date, this.selected, event);\n    this.previewChange.emit(this.preview);\n  }\n\n  prevMonth(event: Event): void {\n    Helpers.swallowEvent(event);\n    const tmp = subMonths(this.activeDate, 1);\n    this.updateView(tmp);\n  }\n\n  nextMonth(event: Event): void {\n    Helpers.swallowEvent(event);\n    const tmp = addMonths(this.activeDate, 1);\n    this.updateView(tmp);\n  }\n\n  openView(event: Event, type: string) {\n    Helpers.swallowEvent(event);\n\n    // If they click the toggle two time in a row, close it (go back to days)\n    if (type === this.activeView) {\n      this.activeView = 'days';\n    } else {\n      this.activeView = type;\n    }\n\n    // Make sure to scroll the selected one into view\n    if (this.activeView === 'years' || this.activeView === 'months') {\n      setTimeout(() => {\n        const container = this.element.nativeElement.querySelector(`.calendar-content.${this.activeView}`);\n        const selectedItem = this.element.nativeElement.querySelector(\n          `.calendar-content.${this.activeView} .${this.activeView === 'years' ? 'year' : 'month'}.selected`,\n        );\n        if (container && selectedItem) {\n          container.scrollTop = selectedItem.offsetTop - 100;\n        }\n      });\n    }\n  }\n\n  _isRange() {\n    return ['week', 'range'].includes(this.mode);\n  }\n}\n","<div class=\"calendar-header\">\n  <novo-button theme=\"icon\" icon=\"previous\" size=\"small\" (click)=\"prevMonth($event)\"\n    data-automation-id=\"calendar-previous\" tabindex=\"0\"></novo-button>\n  <ng-container *ngFor=\"let month of months; let i = index;\">\n    <span class=\"heading\" [class.secondary]=\"i > 0\">\n      <span class=\"month\" (click)=\"openView($event, 'months')\"\n        data-automation-id=\"header-month\" tabindex=\"0\">{{ month.label }}</span>\n      <span class=\"year\" (click)=\"openView($event, 'years')\"\n        data-automation-id=\"header-year\" tabindex=\"0\">{{ month.date?.getFullYear() }}</span>\n    </span>\n  </ng-container>\n  <novo-button theme=\"icon\" icon=\"next\" size=\"small\" (click)=\"nextMonth($event)\" data-automation-id=\"calendar-next\" tabindex=\"0\">\n  </novo-button>\n</div>\n<section class=\"calendar-content\" [ngSwitch]=\"activeView\">\n  <ng-container *ngSwitchCase=\"'days'\">\n    <ng-container *ngFor=\"let month of months; let i = index\">\n      <div class=\"calendar-header\" *ngIf=\"layout==='vertical' && i > 0\">\n        <span class=\"previous\" (click)=\"prevMonth($event)\" data-automation-id=\"calendar-previous\" tabindex=\"0\"></span>\n        <span class=\"heading\">\n          <span class=\"month\" (click)=\"openView($event, 'months')\"\n            data-automation-id=\"header-month\" tabindex=\"0\">{{ month.label }}</span>\n          <span class=\"year\" (click)=\"openView($event, 'years')\"\n            data-automation-id=\"header-year\" tabindex=\"0\">{{ month.date?.getFullYear() }}</span>\n        </span>\n        <span class=\"next\" (click)=\"nextMonth($event)\" data-automation-id=\"calendar-next\"></span>\n      </div>\n      <novo-month-view\n        class=\"month-view\"\n        [activeDate]=\"month.date\"\n        [selected]=\"selected\"\n        [preview]=\"preview\"\n        [overlays]=\"overlays\"\n        [isRange]=\"_isRange()\"\n        [hideOverflowDays]=\"months.length > 1\"\n        [weekStartsOn]=\"weekStartsOn\"\n        [disabledDateMessage]=\"disabledDateMessage\"\n        [minDate]=\"minDate\"\n        [maxDate]=\"maxDate\"\n        (select)=\"dateSelected($event)\"\n        (hover)=\"updatePreview($event)\"></novo-month-view>\n    </ng-container>\n  </ng-container>\n  <novo-month-select\n    *ngSwitchCase=\"'months'\"\n    [activeDate]=\"activeDate\"\n    [selected]=\"selected\"\n    (select)=\"monthSelected($event)\">\n  </novo-month-select>\n  <novo-year-select\n    *ngSwitchCase=\"'years'\"\n    [activeDate]=\"activeDate\"\n    [selected]=\"selected\"\n    (select)=\"yearSelected($event)\">\n  </novo-year-select>\n</section>","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// APP\nimport { NovoButtonModule } from 'novo-elements/elements/button';\nimport { NovoIconModule } from 'novo-elements/elements/icon';\nimport { NovoPipesModule } from 'novo-elements/pipes';\nimport { NovoCalendarElement } from './calendar.component';\nimport { NovoMonthSelectElement } from './month-select/month-select.component';\nimport { NovoMonthViewElement } from './month-view/month-view.component';\nimport { NovoYearSelectElement } from './year-select/year-select.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoButtonModule, NovoPipesModule, NovoIconModule],\n  declarations: [NovoMonthViewElement, NovoMonthSelectElement, NovoYearSelectElement, NovoCalendarElement],\n  exports: [NovoMonthViewElement, NovoMonthSelectElement, NovoYearSelectElement, NovoCalendarElement],\n})\nexport class NovoCalendarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2","i5.NovoMonthViewElement","i6.NovoMonthSelectElement","i7.NovoYearSelectElement"],"mappings":"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"}