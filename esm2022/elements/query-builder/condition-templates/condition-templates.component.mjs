import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../condition-definitions/address-condition.definition";
import * as i2 from "../condition-definitions/boolean-condition.definition";
import * as i3 from "../condition-definitions/date-condition.definition";
import * as i4 from "../condition-definitions/date-time-condition.definition";
import * as i5 from "../condition-definitions/string-condition.definition";
import * as i6 from "../condition-definitions/number-condition.definition";
import * as i7 from "../condition-definitions/id-condition.definition";
import * as i8 from "../condition-definitions/picker-condition.definition";
export class NovoConditionTemplatesComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.3", ngImport: i0, type: NovoConditionTemplatesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.3", type: NovoConditionTemplatesComponent, selector: "novo-condition-templates", inputs: { addressConfig: "addressConfig" }, ngImport: i0, template: "<novo-id-condition-def name=\"ID\"/>\n<novo-date-condition-def name=\"DATE\"/>\n<novo-date-time-condition-def name=\"TIMESTAMP\"/>\n<novo-string-condition-def name=\"STRING\"/>\n<novo-number-condition-def name=\"FLOAT\"/>\n<novo-number-condition-def name=\"INTEGER\"/>\n<novo-number-condition-def name=\"BIGDECIMAL\"/>\n<novo-number-condition-def name=\"DOUBLE\"/>\n<novo-address-condition-def name=\"ADDRESS\" [config]=\"addressConfig\"/>\n<novo-boolean-condition-def name=\"BOOLEAN\"/>\n<novo-picker-condition-def name=\"SELECT\"/>\n<novo-string-condition-def name=\"DEFAULT\"/>\n", dependencies: [{ kind: "component", type: i1.NovoDefaultAddressConditionDef, selector: "novo-address-condition-def", inputs: ["config"] }, { kind: "component", type: i2.NovoDefaultBooleanConditionDef, selector: "novo-boolean-condition-def" }, { kind: "component", type: i3.NovoDefaultDateConditionDef, selector: "novo-date-condition-def" }, { kind: "component", type: i4.NovoDefaultDateTimeConditionDef, selector: "novo-date-time-condition-def" }, { kind: "component", type: i5.NovoDefaultStringConditionDef, selector: "novo-string-condition-def" }, { kind: "component", type: i6.NovoDefaultNumberConditionDef, selector: "novo-number-condition-def" }, { kind: "component", type: i7.NovoDefaultIdConditionDef, selector: "novo-id-condition-def" }, { kind: "component", type: i8.NovoDefaultPickerConditionDef, selector: "novo-picker-condition-def" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.3", ngImport: i0, type: NovoConditionTemplatesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'novo-condition-templates', template: "<novo-id-condition-def name=\"ID\"/>\n<novo-date-condition-def name=\"DATE\"/>\n<novo-date-time-condition-def name=\"TIMESTAMP\"/>\n<novo-string-condition-def name=\"STRING\"/>\n<novo-number-condition-def name=\"FLOAT\"/>\n<novo-number-condition-def name=\"INTEGER\"/>\n<novo-number-condition-def name=\"BIGDECIMAL\"/>\n<novo-number-condition-def name=\"DOUBLE\"/>\n<novo-address-condition-def name=\"ADDRESS\" [config]=\"addressConfig\"/>\n<novo-boolean-condition-def name=\"BOOLEAN\"/>\n<novo-picker-condition-def name=\"SELECT\"/>\n<novo-string-condition-def name=\"DEFAULT\"/>\n" }]
        }], propDecorators: { addressConfig: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZGl0aW9uLXRlbXBsYXRlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzL3NyYy9lbGVtZW50cy9xdWVyeS1idWlsZGVyL2NvbmRpdGlvbi10ZW1wbGF0ZXMvY29uZGl0aW9uLXRlbXBsYXRlcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzL3NyYy9lbGVtZW50cy9xdWVyeS1idWlsZGVyL2NvbmRpdGlvbi10ZW1wbGF0ZXMvY29uZGl0aW9uLXRlbXBsYXRlcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7OztBQU9qRCxNQUFNLE9BQU8sK0JBQStCOzhHQUEvQiwrQkFBK0I7a0dBQS9CLCtCQUErQiw0R0NQNUMsd2tCQVlBOzsyRkRMYSwrQkFBK0I7a0JBSjNDLFNBQVM7K0JBQ0ksMEJBQTBCOzhCQUk3QixhQUFhO3NCQUFyQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWRkcmVzc0NyaXRlcmlhQ29uZmlnIH0gZnJvbSAnLi4vcXVlcnktYnVpbGRlci50eXBlcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbm92by1jb25kaXRpb24tdGVtcGxhdGVzJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY29uZGl0aW9uLXRlbXBsYXRlcy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgTm92b0NvbmRpdGlvblRlbXBsYXRlc0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGFkZHJlc3NDb25maWc6IEFkZHJlc3NDcml0ZXJpYUNvbmZpZztcbn1cbiIsIjxub3ZvLWlkLWNvbmRpdGlvbi1kZWYgbmFtZT1cIklEXCIvPlxuPG5vdm8tZGF0ZS1jb25kaXRpb24tZGVmIG5hbWU9XCJEQVRFXCIvPlxuPG5vdm8tZGF0ZS10aW1lLWNvbmRpdGlvbi1kZWYgbmFtZT1cIlRJTUVTVEFNUFwiLz5cbjxub3ZvLXN0cmluZy1jb25kaXRpb24tZGVmIG5hbWU9XCJTVFJJTkdcIi8+XG48bm92by1udW1iZXItY29uZGl0aW9uLWRlZiBuYW1lPVwiRkxPQVRcIi8+XG48bm92by1udW1iZXItY29uZGl0aW9uLWRlZiBuYW1lPVwiSU5URUdFUlwiLz5cbjxub3ZvLW51bWJlci1jb25kaXRpb24tZGVmIG5hbWU9XCJCSUdERUNJTUFMXCIvPlxuPG5vdm8tbnVtYmVyLWNvbmRpdGlvbi1kZWYgbmFtZT1cIkRPVUJMRVwiLz5cbjxub3ZvLWFkZHJlc3MtY29uZGl0aW9uLWRlZiBuYW1lPVwiQUREUkVTU1wiIFtjb25maWddPVwiYWRkcmVzc0NvbmZpZ1wiLz5cbjxub3ZvLWJvb2xlYW4tY29uZGl0aW9uLWRlZiBuYW1lPVwiQk9PTEVBTlwiLz5cbjxub3ZvLXBpY2tlci1jb25kaXRpb24tZGVmIG5hbWU9XCJTRUxFQ1RcIi8+XG48bm92by1zdHJpbmctY29uZGl0aW9uLWRlZiBuYW1lPVwiREVGQVVMVFwiLz5cbiJdfQ==