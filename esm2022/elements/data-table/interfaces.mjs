export var AppliedSearchType;
(function (AppliedSearchType) {
    AppliedSearchType["Saved"] = "saved";
    AppliedSearchType["Recent"] = "recent";
    AppliedSearchType["None"] = "none";
})(AppliedSearchType || (AppliedSearchType = {}));
export var AdaptiveConjunctionNames;
(function (AdaptiveConjunctionNames) {
    AdaptiveConjunctionNames["AND"] = "and";
    AdaptiveConjunctionNames["OR"] = "or";
    AdaptiveConjunctionNames["NOT"] = "not";
})(AdaptiveConjunctionNames || (AdaptiveConjunctionNames = {}));
export var AdaptiveOperator;
(function (AdaptiveOperator) {
    AdaptiveOperator["EqualTo"] = "equalTo";
    AdaptiveOperator["In"] = "in";
    AdaptiveOperator["IncludeAny"] = "includeAny";
    AdaptiveOperator["IncludeAll"] = "includeAll";
    AdaptiveOperator["Is"] = "is";
    AdaptiveOperator["LessThan"] = "lt";
    AdaptiveOperator["LessThanEquals"] = "lte";
    AdaptiveOperator["GreaterThan"] = "gt";
    AdaptiveOperator["GreaterThanEquals"] = "gte";
    AdaptiveOperator["Like"] = "like";
    AdaptiveOperator["StartsWith"] = "startsWith";
    AdaptiveOperator["EndsWith"] = "endsWith";
    AdaptiveOperator["Radius"] = "radius";
})(AdaptiveOperator || (AdaptiveOperator = {}));
//# sourceMappingURL=data:application/json;base64,