export var AppBridgeHandler;
(function (AppBridgeHandler) {
    AppBridgeHandler[AppBridgeHandler["HTTP"] = 0] = "HTTP";
    AppBridgeHandler[AppBridgeHandler["OPEN"] = 1] = "OPEN";
    AppBridgeHandler[AppBridgeHandler["OPEN_LIST"] = 2] = "OPEN_LIST";
    AppBridgeHandler[AppBridgeHandler["CLOSE"] = 3] = "CLOSE";
    AppBridgeHandler[AppBridgeHandler["REFRESH"] = 4] = "REFRESH";
    AppBridgeHandler[AppBridgeHandler["PIN"] = 5] = "PIN";
    AppBridgeHandler[AppBridgeHandler["REGISTER"] = 6] = "REGISTER";
    AppBridgeHandler[AppBridgeHandler["UPDATE"] = 7] = "UPDATE";
    AppBridgeHandler[AppBridgeHandler["REQUEST_DATA"] = 8] = "REQUEST_DATA";
    AppBridgeHandler[AppBridgeHandler["CALLBACK"] = 9] = "CALLBACK";
    AppBridgeHandler[AppBridgeHandler["PING"] = 10] = "PING";
})(AppBridgeHandler || (AppBridgeHandler = {}));
export const HTTP_VERBS = {
    GET: 'get',
    POST: 'post',
    PUT: 'put',
    DELETE: 'delete',
};
export const MESSAGE_TYPES = {
    REGISTER: 'register',
    OPEN: 'open',
    OPEN_LIST: 'openList',
    CLOSE: 'close',
    REFRESH: 'refresh',
    PIN: 'pin',
    PING: 'ping',
    UPDATE: 'update',
    HTTP_GET: 'httpGET',
    HTTP_POST: 'httpPOST',
    HTTP_PUT: 'httpPUT',
    HTTP_DELETE: 'httpDELETE',
    CUSTOM_EVENT: 'customEvent',
    REQUEST_DATA: 'requestData',
    CALLBACK: 'callback',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vdm8tZWxlbWVudHMvc3JjL3V0aWxzL2FwcC1icmlkZ2UvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQU4sSUFBWSxnQkFZWDtBQVpELFdBQVksZ0JBQWdCO0lBQzFCLHVEQUFJLENBQUE7SUFDSix1REFBSSxDQUFBO0lBQ0osaUVBQVMsQ0FBQTtJQUNULHlEQUFLLENBQUE7SUFDTCw2REFBTyxDQUFBO0lBQ1AscURBQUcsQ0FBQTtJQUNILCtEQUFRLENBQUE7SUFDUiwyREFBTSxDQUFBO0lBQ04sdUVBQVksQ0FBQTtJQUNaLCtEQUFRLENBQUE7SUFDUix3REFBSSxDQUFBO0FBQ04sQ0FBQyxFQVpXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFZM0I7QUFxRUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHO0lBQ3hCLEdBQUcsRUFBRSxLQUFLO0lBQ1YsSUFBSSxFQUFFLE1BQU07SUFDWixHQUFHLEVBQUUsS0FBSztJQUNWLE1BQU0sRUFBRSxRQUFRO0NBQ2pCLENBQUM7QUFJRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUc7SUFDM0IsUUFBUSxFQUFFLFVBQVU7SUFDcEIsSUFBSSxFQUFFLE1BQU07SUFDWixTQUFTLEVBQUUsVUFBVTtJQUNyQixLQUFLLEVBQUUsT0FBTztJQUNkLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEdBQUcsRUFBRSxLQUFLO0lBQ1YsSUFBSSxFQUFFLE1BQU07SUFDWixNQUFNLEVBQUUsUUFBUTtJQUNoQixRQUFRLEVBQUUsU0FBUztJQUNuQixTQUFTLEVBQUUsVUFBVTtJQUNyQixRQUFRLEVBQUUsU0FBUztJQUNuQixXQUFXLEVBQUUsWUFBWTtJQUN6QixZQUFZLEVBQUUsYUFBYTtJQUMzQixZQUFZLEVBQUUsYUFBYTtJQUMzQixRQUFRLEVBQUUsVUFBVTtDQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gQXBwQnJpZGdlSGFuZGxlciB7XG4gIEhUVFAsXG4gIE9QRU4sXG4gIE9QRU5fTElTVCxcbiAgQ0xPU0UsXG4gIFJFRlJFU0gsXG4gIFBJTixcbiAgUkVHSVNURVIsXG4gIFVQREFURSxcbiAgUkVRVUVTVF9EQVRBLFxuICBDQUxMQkFDSyxcbiAgUElORyxcbn1cblxuLy8gcmVjb3JkICAgICAgIC0gYW4gaW5kaXZpZHVhbCBlbnRpdHkgcmVjb3JkXG4vLyBhZGQvZmFzdC1hZGQgLSB0aGUgYWRkIHBhZ2UgZm9yIGEgbmV3IHJlY29yZFxuLy8gY3VzdG9tICAgICAgIC0gY3VzdG9tIGFjdGlvbiB0aGF0IG9wZW5zIHRoZSB1cmwgcHJvdmlkZWQgaW4gZGF0YS51cmxcbi8vIHByZXZpZXcgICAgICAtIHRoZSBwcmV2aWV3IHNsaWRlb3V0IGF2YWlsYWJsZSBvbmx5IGluIE5vdm9cbmV4cG9ydCB0eXBlIE5vdm9BcHBzID0gJ3JlY29yZCcgfCAnYWRkJyB8ICdmYXN0LWFkZCcgfCAnc2xpZGUtb3V0LWFkZCcgfCAnY3VzdG9tJyB8ICdwcmV2aWV3JztcblxuZXhwb3J0IHR5cGUgQWxsZXlMaW5rQ29sb3JzID1cbiAgfCAncHVycGxlJ1xuICB8ICdncmVlbidcbiAgfCAnYmx1ZSdcbiAgfCAnbGVhZCdcbiAgfCAnY2FuZGlkYXRlJ1xuICB8ICdjb250YWN0J1xuICB8ICdjb21wYW55J1xuICB8ICdvcHBvcnR1bml0eSdcbiAgfCAnam9iJ1xuICB8ICdiaWxsYWJsZS1jaGFyZ2UnXG4gIHwgJ2Vhcm4tY29kZSdcbiAgfCAnaW52b2ljZS1zdGF0ZW1lbnQnXG4gIHwgJ2pvYi1jb2RlJ1xuICB8ICdwYXlhYmxlLWNoYXJnZSdcbiAgfCAnc2FsZXMtdGF4LXJhdGUnXG4gIHwgJ3RheC1ydWxlcydcbiAgfCAnc3VibWlzc2lvbidcbiAgfCAncGxhY2VtZW50J1xuICB8ICduYXZpZ2F0aW9uJ1xuICB8ICdjYW52YXMnXG4gIHwgJ25ldXRyYWwnXG4gIHwgJ25ldXRyYWwtaXRhbGljJ1xuICB8ICdpbml0aWFsJ1xuICB8ICdkaXN0cmlidXRpb25MaXN0J1xuICB8ICdjb250cmFjdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUFwcEJyaWRnZU9wZW5FdmVudCB7XG4gIHR5cGU6IE5vdm9BcHBzO1xuICBlbnRpdHlUeXBlOiBzdHJpbmc7XG4gIGVudGl0eUlkPzogc3RyaW5nO1xuICB0YWI/OiBzdHJpbmc7XG4gIGRhdGE/OiBhbnk7XG4gIHBhc3N0aHJvdWdoPzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBNb3NhaWNMaXN0cyA9XG4gIHwgJ0NhbmRpZGF0ZSdcbiAgfCAnQ2xpZW50Q29udGFjdCdcbiAgfCAnQ2xpZW50Q29ycG9yYXRpb24nXG4gIHwgJ0pvYk9yZGVyJ1xuICB8ICdKb2JTdWJtaXNzaW9uJ1xuICB8ICdKb2JQb3N0aW5nJ1xuICB8ICdQbGFjZW1lbnQnXG4gIHwgJ0xlYWQnXG4gIHwgJ09wcG9ydHVuaXR5JztcblxuZXhwb3J0IGludGVyZmFjZSBJQXBwQnJpZGdlT3Blbkxpc3RFdmVudCB7XG4gIHR5cGU6IE1vc2FpY0xpc3RzO1xuICBrZXl3b3JkczogQXJyYXk8c3RyaW5nPjtcbiAgY3JpdGVyaWE6IGFueTtcbn1cblxuZXhwb3J0IHR5cGUgTm92b0RhdGFUeXBlID0gJ2VudGl0bGVtZW50cycgfCAnc2V0dGluZ3MnIHwgJ3VzZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIElBcHBCcmlkZ2VSZXF1ZXN0RGF0YUV2ZW50IHtcbiAgdHlwZTogTm92b0RhdGFUeXBlO1xufVxuXG5leHBvcnQgdHlwZSBIdHRwVmVyYiA9ICdnZXQnIHwgJ3Bvc3QnIHwgJ3B1dCcgfCAnZGVsZXRlJztcblxuZXhwb3J0IGNvbnN0IEhUVFBfVkVSQlMgPSB7XG4gIEdFVDogJ2dldCcsXG4gIFBPU1Q6ICdwb3N0JyxcbiAgUFVUOiAncHV0JyxcbiAgREVMRVRFOiAnZGVsZXRlJyxcbn07XG5cbmV4cG9ydCB0eXBlIE1lc3NhZ2VUeXBlID0gJ3JlZ2lzdGVyJyB8ICdvcGVuJyB8ICdvcGVuTGlzdCcgfCAnY2xvc2UnIHwgJ3JlZnJlc2gnIHwgJ3BpbicgfCAncGluZycgfCAndXBkYXRlJyB8ICdodHRwR0VUJyB8ICdodHRwUE9TVCcgfCAnaHR0cFBVVCcgfCAnaHR0cERFTEVURScgfCAnY3VzdG9tRXZlbnQnIHwgJ3JlcXVlc3REYXRhJyB8ICdjYWxsYmFjayc7XG5cbmV4cG9ydCBjb25zdCBNRVNTQUdFX1RZUEVTID0ge1xuICBSRUdJU1RFUjogJ3JlZ2lzdGVyJyxcbiAgT1BFTjogJ29wZW4nLFxuICBPUEVOX0xJU1Q6ICdvcGVuTGlzdCcsXG4gIENMT1NFOiAnY2xvc2UnLFxuICBSRUZSRVNIOiAncmVmcmVzaCcsXG4gIFBJTjogJ3BpbicsXG4gIFBJTkc6ICdwaW5nJyxcbiAgVVBEQVRFOiAndXBkYXRlJyxcbiAgSFRUUF9HRVQ6ICdodHRwR0VUJyxcbiAgSFRUUF9QT1NUOiAnaHR0cFBPU1QnLFxuICBIVFRQX1BVVDogJ2h0dHBQVVQnLFxuICBIVFRQX0RFTEVURTogJ2h0dHBERUxFVEUnLFxuICBDVVNUT01fRVZFTlQ6ICdjdXN0b21FdmVudCcsXG4gIFJFUVVFU1RfREFUQTogJ3JlcXVlc3REYXRhJyxcbiAgQ0FMTEJBQ0s6ICdjYWxsYmFjaycsXG59OyJdfQ==