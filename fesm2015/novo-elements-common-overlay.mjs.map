{"version":3,"file":"novo-elements-common-overlay.mjs","sources":["../../../projects/elements/common/overlay/overlay.ts","../../../projects/elements/common/overlay/overlay.module.ts","../../../projects/elements/common/overlay/novo-elements-common-overlay.ts"],"sourcesContent":["// Angular\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n// Vendor\nimport { fromEvent, merge, Observable, of as observableOf, Subscription } from 'rxjs';\nimport { filter, first, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'novo-overlay-template',\n  styleUrls: ['./overlay.scss'],\n  template: `\n    <ng-template>\n      <div class=\"novo-overlay-panel\" [attr.role]=\"role\" [id]=\"id\" #panel>\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoOverlayTemplateComponent implements OnDestroy {\n  public id: string = `novo-overlay-${Date.now()}`;\n\n  @ViewChild(TemplateRef)\n  public template: TemplateRef<any>;\n  @ViewChild('panel')\n  public panel: ElementRef;\n\n  @Input()\n  public position:\n    | 'default'\n    | 'right'\n    | 'above-below'\n    | 'right-above-below'\n    | 'center'\n    | 'bottom'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'top-left'\n    | 'top-right' = 'default';\n  @Input()\n  public scrollStrategy: 'reposition' | 'block' | 'close' = 'reposition';\n  @Input()\n  public role: string;\n  @Input()\n  public width: number;\n  @Input()\n  public height: number;\n  @Input()\n  public closeOnSelect: boolean = true;\n  @Input()\n  public hasBackdrop: boolean = false;\n\n  @Output()\n  public select: EventEmitter<any> = new EventEmitter();\n  @Output()\n  public opening: EventEmitter<any> = new EventEmitter();\n  @Output()\n  public closing: EventEmitter<any> = new EventEmitter();\n\n  public overlayRef: OverlayRef | null;\n  public portal: TemplatePortal<any>;\n\n  // The subscription for closing actions (some are bound to document)\n  protected closingActionsSubscription: Subscription;\n  private _parent: ElementRef;\n\n  constructor(\n    protected overlay: Overlay,\n    protected viewContainerRef: ViewContainerRef,\n    protected zone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    @Optional()\n    @Inject(DOCUMENT)\n    protected document: any,\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.destroyOverlay();\n  }\n\n  get panelOpen(): boolean {\n    return this.overlayRef && this.overlayRef.hasAttached();\n  }\n\n  @Input()\n  public set parent(value: ElementRef) {\n    this._parent = value;\n    this.checkSizes();\n  }\n\n  public get parent(): ElementRef {\n    return this._parent;\n  }\n\n  public openPanel(): void {\n    if (!this.overlayRef) {\n      this.createOverlay(this.template);\n    } else {\n      this.checkSizes();\n    }\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n    this.changeDetectorRef.markForCheck();\n    setTimeout(() => {\n      if (this.overlayRef) {\n        this.overlayRef.updatePosition();\n        this.opening.emit(true);\n        setTimeout(() => {\n          // TODO: @charlesabarnes Remove this once we remove table\n          if (this.overlayRef) {\n            this.overlayRef.updatePosition();\n          }\n        });\n      }\n    });\n  }\n\n  public closePanel(): void {\n    this.zone.run(() => {\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n        this.closingActionsSubscription.unsubscribe();\n      }\n      this.closing.emit(false);\n      if (this.panelOpen) {\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  public onClosingAction(event: any): void {\n    this.closePanel();\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  public get panelClosingActions(): Observable<any> {\n    return merge(\n      // this.overlayTemplate._keyManager.tabOut,\n      this.outsideClickStream,\n    );\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  protected get outsideClickStream(): Observable<any> {\n    if (!this.document) {\n      return observableOf();\n    }\n\n    return merge(fromEvent(this.document, 'mouseup'), fromEvent(this.document, 'touchend')).pipe(\n      filter((event: MouseEvent | TouchEvent) => {\n        const clickTarget: HTMLElement = event.target as HTMLElement;\n        const clickedOutside: boolean =\n          this.panelOpen &&\n          clickTarget !== this.getConnectedElement().nativeElement &&\n          !this.getConnectedElement().nativeElement.contains(clickTarget) &&\n          !!this.overlayRef &&\n          !this.overlayRef.overlayElement.contains(clickTarget) &&\n          !this.elementIsInNestedOverlay(clickTarget);\n        if (this.panelOpen && !!this.overlayRef && this.overlayRef.overlayElement.contains(clickTarget) && this.closeOnSelect) {\n          this.select.emit(event);\n        }\n        return clickedOutside;\n      }),\n    );\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  protected subscribeToClosingActions(): Subscription {\n    const firstStable: Observable<any> = this.zone.onStable.asObservable().pipe(first());\n    // const valueChanges = Observable.from(this.value);\n    // When the zone is stable initially, and when the option list changes...\n    return (\n      merge(firstStable)\n        .pipe(\n          // create a new stream of panelClosingActions, replacing any previous streams\n          // that were created, and flatten it so our stream only emits closing events...\n          switchMap(() => {\n            return this.panelClosingActions;\n          }),\n          // when the first closing event occurs...\n          first(),\n        )\n        // set the value, close the panel, and complete.\n        .subscribe((event: any) => this.onClosingAction(event))\n    );\n  }\n\n  protected createOverlay(template: TemplateRef<any>): void {\n    this.portal = new TemplatePortal(template, this.viewContainerRef);\n    this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    this.overlayRef.backdropClick().subscribe(() => this.closePanel());\n  }\n\n  protected destroyOverlay(): void {\n    if (this.overlayRef) {\n      this.closePanel();\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n  }\n\n  protected getOverlayConfig(): OverlayConfig {\n    const config: OverlayConfig = new OverlayConfig();\n\n    if (!this.width) {\n      config.width = this.getHostWidth();\n    } else {\n      config.width = this.width;\n    }\n\n    if (this.height) {\n      config.height = this.height;\n    }\n\n    config.positionStrategy = this.getPosition();\n    config.hasBackdrop = this.hasBackdrop;\n    config.direction = 'ltr';\n    config.scrollStrategy = this.getScrollStrategy();\n\n    return config;\n  }\n\n  /**\n   * Supports the following position strategies:\n   * 'default', 'right', 'bottom', 'center', 'bottom-left', 'bottom-right', 'top-left', 'top-right'\n   */\n  protected getPosition(): FlexibleConnectedPositionStrategy {\n    if (this.position === 'center') {\n      return this.overlay\n        .position()\n        .flexibleConnectedTo(this.getConnectedElement())\n        .withFlexibleDimensions(false)\n        .withPositions([\n          { originX: 'start', originY: 'center', overlayX: 'start', overlayY: 'center' },\n          { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'top' },\n          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n        ]);\n    }\n\n    const [originX, fallbackX]: HorizontalConnectionPos[] = this.position.includes('right') ? ['end', 'start'] : ['start', 'end'];\n    const [originY, overlayY]: VerticalConnectionPos[] = this.position.includes('top') ? ['top', 'bottom'] : ['bottom', 'top'];\n    const defaultPosition: ConnectedPosition = { originX, originY, overlayX: originX, overlayY };\n    let strategy: FlexibleConnectedPositionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.getConnectedElement())\n      .withFlexibleDimensions(false)\n      .withPositions([defaultPosition]);\n    if (this.position === 'bottom') {\n      strategy = strategy.withPositions([defaultPosition, { originX: fallbackX, originY: 'bottom', overlayX: fallbackX, overlayY: 'top' }]);\n    } else if (this.position === 'right' || this.position === 'default' || this.position.includes('above-below')) {\n      strategy = strategy.withPositions([\n        defaultPosition,\n        { originX, originY: 'top', overlayX: originX, overlayY: 'bottom' },\n        { originX: fallbackX, originY: 'bottom', overlayX: fallbackX, overlayY: 'top' },\n        { originX: fallbackX, originY: 'top', overlayX: fallbackX, overlayY: 'bottom' },\n      ]);\n      if (!this.position.includes('above-below')) {\n        strategy = strategy.withPositions([\n          defaultPosition,\n          { originX, originY: 'center', overlayX: originX, overlayY: 'center' },\n          { originX: fallbackX, originY: 'center', overlayX: fallbackX, overlayY: 'center' },\n        ]);\n      }\n    }\n    return strategy;\n  }\n\n  protected getScrollStrategy(): ScrollStrategy {\n    switch (this.scrollStrategy) {\n      case 'block':\n        return this.overlay.scrollStrategies.block();\n      case 'reposition':\n        return this.overlay.scrollStrategies.reposition();\n      default:\n        return this.overlay.scrollStrategies.close();\n    }\n  }\n\n  protected checkSizes(): void {\n    if (this.overlayRef) {\n      if (!this.width) {\n        this.overlayRef.getConfig().width = this.getHostWidth();\n      }\n      if (this.height) {\n        this.overlayRef.getConfig().height = this.height;\n      }\n      this.overlayRef.updateSize(this.overlayRef.getConfig());\n      this.overlayRef.updatePosition();\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  protected getConnectedElement(): ElementRef {\n    return this.parent;\n  }\n\n  protected elementIsInNestedOverlay(el): boolean {\n    while (el.parentNode) {\n      if (el.id?.includes('novo-overlay-') || el.id?.includes('modal-container-')) {\n        return this.id.split('-')[2] < el.id.split('-')[2];\n      }\n      el = el.parentNode;\n    }\n    return false;\n  }\n\n  protected getHostWidth(): number {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n}\n","// NG2\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoOverlayTemplateComponent } from './overlay';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OverlayModule, ScrollingModule],\n  declarations: [NovoOverlayTemplateComponent],\n  exports: [NovoOverlayTemplateComponent, ScrollingModule],\n})\nexport class NovoOverlayModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["observableOf"],"mappings":"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"}