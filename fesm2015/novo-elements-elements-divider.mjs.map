{"version":3,"file":"novo-elements-elements-divider.mjs","sources":["../../../projects/novo-elements/src/elements/divider/divider.component.ts","../../../projects/novo-elements/src/elements/divider/divider.module.ts","../../../projects/novo-elements/src/elements/divider/novo-elements-elements-divider.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'novo-divider',\n  host: {\n    role: 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.novo-divider-vertical]': 'vertical',\n    '[class.novo-divider-horizontal]': '!vertical',\n    '[class.novo-divider-inset]': 'inset',\n    class: 'novo-divider',\n  },\n  template: '',\n  styleUrls: ['./divider.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDividerComponent {\n  /** Whether the divider is vertically aligned. */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input()\n  get inset(): boolean {\n    return this._inset;\n  }\n  set inset(value: boolean) {\n    this._inset = coerceBooleanProperty(value);\n  }\n  private _inset: boolean = false;\n\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_inset: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { NovoDividerComponent } from './divider.component';\n\n@NgModule({\n  imports: [],\n  exports: [NovoDividerComponent],\n  declarations: [NovoDividerComponent],\n})\nexport class NovoDividerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;MAkBa,oBAAoB,CAAA;AAfjC,IAAA,WAAA,GAAA;AAwBU,QAAA,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAU3B,QAAA,IAAM,CAAA,MAAA,GAAY,KAAK,CAAC;KAIjC;;AArBC,IAAA,IACI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC/C;;AAID,IAAA,IACI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IACD,IAAI,KAAK,CAAC,KAAc,EAAA;AACtB,QAAA,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC5C;;iHAlBU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,wYALrB,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,waAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FAKD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAfhC,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAc,EAClB,IAAA,EAAA;AACJ,wBAAA,IAAI,EAAE,WAAW;AACjB,wBAAA,yBAAyB,EAAE,sCAAsC;AACjE,wBAAA,+BAA+B,EAAE,UAAU;AAC3C,wBAAA,iCAAiC,EAAE,WAAW;AAC9C,wBAAA,4BAA4B,EAAE,OAAO;AACrC,wBAAA,KAAK,EAAE,cAAc;qBACtB,EACS,QAAA,EAAA,EAAE,iBAEG,iBAAiB,CAAC,IAAI,EACpB,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,MAAA,EAAA,CAAA,waAAA,CAAA,EAAA,CAAA;8BAK3C,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAWF,KAAK,EAAA,CAAA;sBADR,KAAK;;;MCtBK,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAFb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CADzB,oBAAoB,CAAA,EAAA,CAAA,CAAA;+GAGnB,iBAAiB,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,CAAC,oBAAoB,CAAC;oBAC/B,YAAY,EAAE,CAAC,oBAAoB,CAAC;iBACrC,CAAA;;;ACPD;;AAEG;;;;"}