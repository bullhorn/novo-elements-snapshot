{"version":3,"file":"novo-elements-components-list.mjs","sources":["../../../projects/elements/components/list/list.ts","../../../projects/elements/components/list/list.module.ts","../../../projects/elements/components/list/novo-elements-components-list.ts"],"sourcesContent":["// NG2\nimport { Component, ContentChild, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'novo-list',\n  styleUrls: ['./list.scss'],\n  host: {\n    class: 'novo-list',\n    '[class.vertical-list]': 'direction === \"vertical\"',\n    '[class.horizontal-list]': 'direction === \"horizontal\"',\n    '[attr.theme]': 'theme',\n  },\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoListElement {\n  @Input()\n  theme: string;\n  @Input()\n  direction: string;\n\n  constructor(public element: ElementRef) {}\n}\n\n@Component({\n  selector: 'item-avatar, novo-item-avatar',\n  styleUrls: ['./list-item-header-avatar.scss'],\n  template: ` <novo-icon *ngIf=\"icon\" [color]=\"color || icon\">{{ icon }}</novo-icon> `,\n  host: {\n    class: 'novo-item-avatar',\n  },\n})\nexport class NovoItemAvatarElement {\n  @Input()\n  icon: string;\n  @Input()\n  color: string;\n}\n\n@Component({\n  selector: 'item-title, novo-item-title',\n  styleUrls: ['./list-item-header-title.scss'],\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'novo-item-title',\n  },\n})\nexport class NovoItemTitleElement {}\n\n@Component({\n  selector: 'item-header, novo-item-header',\n  styleUrls: ['./list-item-header.scss'],\n  template: `\n    <novo-title class=\"novo-item-header-container\" size=\"md\">\n      <ng-content select=\"item-avatar, novo-item-avatar\"></ng-content>\n      <ng-content select=\"item-title, novo-item-title\"></ng-content>\n      <ng-content select=\"item-header-end, novo-item-header-end\"></ng-content>\n    </novo-title>\n  `,\n  host: {\n    class: 'novo-item-header',\n  },\n})\nexport class NovoItemHeaderElement {}\n\n@Component({\n  selector: 'item-header-end, novo-item-header-end',\n  styleUrls: ['./list-item-header-end.scss'],\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'novo-item-header-end',\n  },\n})\nexport class NovoItemDateElement {}\n\n@Component({\n  selector: 'item-content, novo-item-content',\n  styleUrls: ['./list-item-content.scss'],\n  host: {\n    class: 'novo-item-content',\n    '[class.vertical-list]': 'direction === \"vertical\"',\n    '[class.horizontal-list]': 'direction === \"horizontal\"',\n  },\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoItemContentElement {\n  @Input()\n  direction: string;\n}\n\n@Component({\n  selector: 'item-end, novo-item-end',\n  styleUrls: ['./list-item-end.scss'],\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'novo-item-end',\n  },\n})\nexport class NovoItemEndElement {}\n\n@Component({\n  selector: 'novo-list-item, [list-item]',\n  styleUrls: ['./list-item.scss'],\n  template: `\n    <div class=\"list-item\" [ngClass]=\"{ avatar: avatar }\" *ngIf=\"_content || _header\">\n      <ng-content select=\"item-header, novo-item-header\"></ng-content>\n      <ng-content select=\"item-content, novo-item-content\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n    <ng-content select=\"item-end, novo-item-end, [novoSuffix]\"></ng-content>\n  `,\n  host: {\n    class: 'novo-list-item',\n  },\n})\nexport class NovoListItemElement implements OnInit {\n  avatar: boolean = false;\n  @ContentChild(NovoItemContentElement) _content: NovoItemContentElement;\n  @ContentChild(NovoItemHeaderElement) _header: NovoItemHeaderElement;\n\n  constructor(private element: ElementRef) {}\n\n  ngOnInit() {\n    this.avatar = !!this.element.nativeElement.querySelector('item-avatar');\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  NovoItemAvatarElement,\n  NovoItemContentElement,\n  NovoItemDateElement,\n  NovoItemEndElement,\n  NovoItemHeaderElement,\n  NovoItemTitleElement,\n  NovoListElement,\n  NovoListItemElement,\n} from './list';\nimport { NovoIconModule } from 'novo-elements/components/icon';\nimport { NovoCommonModule } from 'novo-elements/common';\n\n@NgModule({\n  imports: [CommonModule, NovoCommonModule, NovoIconModule],\n  declarations: [\n    NovoListElement,\n    NovoListItemElement,\n    NovoItemAvatarElement,\n    NovoItemTitleElement,\n    NovoItemContentElement,\n    NovoItemEndElement,\n    NovoItemHeaderElement,\n    NovoItemDateElement,\n  ],\n  exports: [\n    NovoListElement,\n    NovoListItemElement,\n    NovoItemAvatarElement,\n    NovoItemTitleElement,\n    NovoItemHeaderElement,\n    NovoItemContentElement,\n    NovoItemEndElement,\n    NovoItemDateElement,\n  ],\n})\nexport class NovoListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;AAAA;MAca,eAAe,CAAA;AAM1B,IAAA,WAAA,CAAmB,OAAmB,EAAA;AAAnB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;KAAI;;6GAN/B,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,eAAe,iSAFhB,CAAA,2BAAA,CAA6B,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,0GAAA,CAAA,EAAA,CAAA,CAAA;4FAE5B,eAAe,EAAA,UAAA,EAAA,CAAA;kBAX3B,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAW,EAEf,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,WAAW;AAClB,wBAAA,uBAAuB,EAAE,0BAA0B;AACnD,wBAAA,yBAAyB,EAAE,4BAA4B;AACvD,wBAAA,cAAc,EAAE,OAAO;qBACxB,EAAA,QAAA,EACS,CAAA,2BAAA,CAA6B,EAAA,MAAA,EAAA,CAAA,0GAAA,CAAA,EAAA,CAAA;iGAIvC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAGN,SAAS,EAAA,CAAA;sBADR,KAAK;;MAcK,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,6JALtB,CAA0E,wEAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,i5DAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FAKzE,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBARjC,SAAS;+BACE,+BAA+B,EAAA,QAAA,EAE/B,CAAA,wEAAA,CAA0E,EAC9E,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,kBAAkB;AAC1B,qBAAA,EAAA,MAAA,EAAA,CAAA,i5DAAA,CAAA,EAAA,CAAA;8BAID,IAAI,EAAA,CAAA;sBADH,KAAK;gBAGN,KAAK,EAAA,CAAA;sBADJ,KAAK;;MAYK,oBAAoB,CAAA;;kHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,gHALrB,CAAA,yBAAA,CAA2B,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,y1LAAA,CAAA,EAAA,CAAA,CAAA;4FAK1B,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBARhC,SAAS;+BACE,6BAA6B,EAAA,QAAA,EAE7B,CAAA,yBAAA,CAA2B,EAC/B,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,iBAAiB;AACzB,qBAAA,EAAA,MAAA,EAAA,CAAA,y1LAAA,CAAA,EAAA,CAAA;;MAkBU,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,EAXtB,QAAA,EAAA,+BAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;GAMT,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,gxOAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FAKU,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAdjC,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,+BAA+B,EAE/B,QAAA,EAAA,CAAA;;;;;;AAMT,EAAA,CAAA,EACK,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,kBAAkB;AAC1B,qBAAA,EAAA,MAAA,EAAA,CAAA,gxOAAA,CAAA,EAAA,CAAA;;MAYU,mBAAmB,CAAA;;iHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,+HALpB,CAAA,yBAAA,CAA2B,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,sCAAA,CAAA,EAAA,CAAA,CAAA;4FAK1B,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAR/B,SAAS;+BACE,uCAAuC,EAAA,QAAA,EAEvC,CAAA,yBAAA,CAA2B,EAC/B,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,sBAAsB;AAC9B,qBAAA,EAAA,MAAA,EAAA,CAAA,sCAAA,CAAA,EAAA,CAAA;;MAcU,sBAAsB,CAAA;;oHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,wRAFvB,CAA6B,2BAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,6lIAAA,CAAA,EAAA,CAAA,CAAA;4FAE5B,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAVlC,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iCAAiC,EAErC,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,mBAAmB;AAC1B,wBAAA,uBAAuB,EAAE,0BAA0B;AACnD,wBAAA,yBAAyB,EAAE,4BAA4B;qBACxD,EAAA,QAAA,EACS,CAAA,2BAAA,CAA6B,EAAA,MAAA,EAAA,CAAA,6lIAAA,CAAA,EAAA,CAAA;8BAIvC,SAAS,EAAA,CAAA;sBADR,KAAK;;MAYK,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAkB,0GALnB,CAAA,2BAAA,CAA6B,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,8EAAA,CAAA,EAAA,CAAA,CAAA;4FAK5B,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAR9B,SAAS;+BACE,yBAAyB,EAAA,QAAA,EAEzB,CAAA,2BAAA,CAA6B,EACjC,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,eAAe;AACvB,qBAAA,EAAA,MAAA,EAAA,CAAA,8EAAA,CAAA,EAAA,CAAA;;MAmBU,mBAAmB,CAAA;AAK9B,IAAA,WAAA,CAAoB,OAAmB,EAAA;AAAnB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;AAJvC,QAAA,IAAM,CAAA,MAAA,GAAY,KAAK,CAAC;KAImB;IAE3C,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;KACzE;;iHATU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,EAEhB,QAAA,EAAA,6BAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,sBAAsB,EACtB,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,qBAAqB,EAfzB,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;GAOT,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,k/cAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FAKU,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAf/B,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,6BAA6B,EAE7B,QAAA,EAAA,CAAA;;;;;;;AAOT,EAAA,CAAA,EACK,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,gBAAgB;AACxB,qBAAA,EAAA,MAAA,EAAA,CAAA,k/cAAA,CAAA,EAAA,CAAA;iGAIqC,QAAQ,EAAA,CAAA;sBAA7C,YAAY;uBAAC,sBAAsB,CAAA;gBACC,OAAO,EAAA,CAAA;sBAA3C,YAAY;uBAAC,qBAAqB,CAAA;;;ACrHrC;MAuCa,cAAc,CAAA;;4GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,iBApBvB,eAAe;QACf,mBAAmB;QACnB,qBAAqB;QACrB,oBAAoB;QACpB,sBAAsB;QACtB,kBAAkB;QAClB,qBAAqB;AACrB,QAAA,mBAAmB,aATX,YAAY,EAAE,gBAAgB,EAAE,cAAc,aAYtD,eAAe;QACf,mBAAmB;QACnB,qBAAqB;QACrB,oBAAoB;QACpB,qBAAqB;QACrB,sBAAsB;QACtB,kBAAkB;QAClB,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAGV,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAtBhB,CAAC,YAAY,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAA,EAAA,CAAA,CAAA;4FAsB9C,cAAc,EAAA,UAAA,EAAA,CAAA;kBAvB1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,cAAc,CAAC;AACzD,oBAAA,YAAY,EAAE;wBACZ,eAAe;wBACf,mBAAmB;wBACnB,qBAAqB;wBACrB,oBAAoB;wBACpB,sBAAsB;wBACtB,kBAAkB;wBAClB,qBAAqB;wBACrB,mBAAmB;AACpB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,eAAe;wBACf,mBAAmB;wBACnB,qBAAqB;wBACrB,oBAAoB;wBACpB,qBAAqB;wBACrB,sBAAsB;wBACtB,kBAAkB;wBAClB,mBAAmB;AACpB,qBAAA;iBACF,CAAA;;;ACtCD;;AAEG;;;;"}