{"version":3,"file":"novo-elements-components-form-extras.mjs","sources":["../../../projects/elements/components/form/extras/address/address.ts","../../../projects/elements/components/form/extras/file/extras/file/file.ts","../../../projects/elements/components/form/extras/file/file-input.ts","../../../projects/elements/components/form/extras/form-extras.module.ts","../../../projects/elements/components/form/extras/novo-elements-components-form-extras.ts"],"sourcesContent":["// NG2\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NovoLabelService } from 'novo-elements/services';\nimport { COUNTRIES, findByCountryId, getStates, Helpers } from 'novo-elements/utils';\n\n// Value accessor for the component (supports ngModel)\nconst ADDRESS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoAddressElement),\n  multi: true,\n};\n\nexport interface NovoAddressSubfieldConfig {\n  label: string;\n  required: boolean;\n  maxlength: number;\n  pickerConfig?: any;\n  hidden: boolean;\n  updated?: boolean;\n  readOnly?: boolean;\n}\n\nexport interface NovoAddressConfig {\n  required?: boolean;\n  readOnly?: boolean;\n  address1?: NovoAddressSubfieldConfig;\n  address2?: NovoAddressSubfieldConfig;\n  city?: NovoAddressSubfieldConfig;\n  state?: NovoAddressSubfieldConfig;\n  zip?: NovoAddressSubfieldConfig;\n  countryID?: NovoAddressSubfieldConfig;\n}\n\n@Component({\n  selector: 'novo-address',\n  styleUrls: ['./address.scss'],\n  providers: [ADDRESS_VALUE_ACCESSOR],\n  template: `\n    <span\n      *ngIf=\"!config?.address1?.hidden\"\n      class=\"street-address\"\n      [class.invalid]=\"invalid.address1\"\n      [class.focus]=\"focused.address1\"\n      [class.disabled]=\"disabled.address1\"\n    >\n      <i\n        *ngIf=\"config.address1.required\"\n        class=\"required-indicator address1\"\n        [ngClass]=\"{ 'bhi-circle': !valid.address1, 'bhi-check': valid.address1 }\"\n      >\n      </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.address1\"\n        type=\"text\"\n        id=\"address1\"\n        name=\"address1\"\n        [placeholder]=\"config.address1.label\"\n        [maxlength]=\"config?.address1?.maxlength\"\n        autocomplete=\"shipping street-address address-line-1\"\n        [(ngModel)]=\"model.address1\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'address1')\"\n        (blur)=\"isBlurred($event, 'address1')\"\n        (input)=\"onInput($event, 'address1')\"\n        [disabled]=\"disabled.address1\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.address2?.hidden\"\n      class=\"apt suite\"\n      [class.invalid]=\"invalid.address2\"\n      [class.focus]=\"focused.address2\"\n      [class.disabled]=\"disabled.address2\"\n    >\n      <i\n        *ngIf=\"config.address2.required\"\n        class=\"required-indicator address2\"\n        [ngClass]=\"{ 'bhi-circle': !valid.address2, 'bhi-check': valid.address2 }\"\n      >\n      </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.address2\"\n        type=\"text\"\n        id=\"address2\"\n        name=\"address2\"\n        [placeholder]=\"config.address2.label\"\n        [maxlength]=\"config?.address2?.maxlength\"\n        autocomplete=\"shipping address-line-2\"\n        [(ngModel)]=\"model.address2\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'address2')\"\n        (blur)=\"isBlurred($event, 'address2')\"\n        (input)=\"onInput($event, 'address2')\"\n        [disabled]=\"disabled.address2\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.city?.hidden\"\n      class=\"city locality\"\n      [class.invalid]=\"invalid.city\"\n      [class.focus]=\"focused.city\"\n      [class.disabled]=\"disabled.city\"\n    >\n      <i *ngIf=\"config.city.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.city, 'bhi-check': valid.city }\"> </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.city\"\n        type=\"text\"\n        id=\"city\"\n        name=\"city\"\n        [placeholder]=\"config.city.label\"\n        autocomplete=\"shipping city locality\"\n        [maxlength]=\"config?.city?.maxlength\"\n        [(ngModel)]=\"model.city\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'city')\"\n        (blur)=\"isBlurred($event, 'city')\"\n        (input)=\"onInput($event, 'city')\"\n        [disabled]=\"disabled.city\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.state?.hidden\"\n      class=\"state region\"\n      [class.invalid]=\"invalid.state\"\n      [class.focus]=\"focused.state\"\n      [class.disabled]=\"disabled.state\"\n      [tooltip]=\"tooltip.state\"\n    >\n      <i *ngIf=\"config.state.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.state, 'bhi-check': valid.state }\"> </i>\n      <novo-picker\n        [config]=\"config?.state?.pickerConfig\"\n        [placeholder]=\"config?.state?.label\"\n        (changed)=\"onStateChange($event)\"\n        autocomplete=\"shipping region\"\n        [(ngModel)]=\"model.state\"\n        [disablePickerInput]=\"disabled.state\"\n      ></novo-picker>\n    </span>\n    <span\n      *ngIf=\"!config?.zip?.hidden\"\n      class=\"zip postal-code\"\n      [class.invalid]=\"invalid.zip\"\n      [class.focus]=\"focused.zip\"\n      [class.disabled]=\"disabled.zip\"\n    >\n      <i *ngIf=\"config.zip.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.zip, 'bhi-check': valid.zip }\"> </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.zip\"\n        type=\"text\"\n        id=\"zip\"\n        name=\"zip\"\n        [placeholder]=\"config.zip.label\"\n        autocomplete=\"shipping postal-code\"\n        [maxlength]=\"config?.zip?.maxlength\"\n        [(ngModel)]=\"model.zip\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'zip')\"\n        (blur)=\"isBlurred($event, 'zip')\"\n        (input)=\"onInput($event, 'zip')\"\n        [disabled]=\"disabled.zip\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.countryID?.hidden\"\n      class=\"country-name\"\n      [class.invalid]=\"invalid.countryID\"\n      [class.focus]=\"focused.countryID\"\n      [class.disabled]=\"disabled.countryID\"\n    >\n      <i\n        *ngIf=\"config.countryID.required\"\n        class=\"required-indicator\"\n        [ngClass]=\"{ 'bhi-circle': !valid.countryID, 'bhi-check': valid.countryID }\"\n      >\n      </i>\n      <novo-picker\n        [config]=\"config?.countryID?.pickerConfig\"\n        [placeholder]=\"config.countryID.label\"\n        (changed)=\"onCountryChange($event)\"\n        autocomplete=\"shipping country\"\n        [(ngModel)]=\"model.countryID\"\n        [disablePickerInput]=\"disabled.countryID\"\n      ></novo-picker>\n    </span>\n  `,\n})\nexport class NovoAddressElement implements ControlValueAccessor, OnInit {\n  @Input()\n  config: NovoAddressConfig;\n  private _readOnly = false;\n  @Input()\n  set readOnly(readOnly: boolean) {\n    this._readOnly = readOnly;\n    this.fieldList.forEach((field: string) => {\n      this.disabled[field] = this._readOnly;\n    });\n    if (this.model) {\n      this.updateStates();\n    }\n  }\n  get readOnly(): boolean {\n    return this._readOnly;\n  }\n  states: Array<any> = [];\n  fieldList: Array<string> = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n  focused: any = {};\n  invalid: any = {};\n  disabled: any = {};\n  invalidMaxlength: any = {};\n  valid: any = {};\n  stateOptions: any;\n  tooltip: any = {};\n  initComplete = false;\n  @Output()\n  change: EventEmitter<any> = new EventEmitter();\n  @Output()\n  focus: EventEmitter<any> = new EventEmitter();\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter();\n  @Output()\n  validityChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {\n    if (!this.config) {\n      this.config = {};\n    }\n    this.initConfig();\n    if (this.model) {\n      this.writeValue(this.model);\n      this.updateControl();\n    } else if (!this.model) {\n      this.model = {};\n    }\n    if (Helpers.isBlank(this.model.countryID)) {\n      this.updateStates();\n    }\n  }\n\n  initConfig(): void {\n    this.fieldList.forEach((field: string) => {\n      if (!this.config.hasOwnProperty(field)) {\n        this.config[field] = {\n          hidden: true,\n        };\n      }\n      if (!this.config[field].hasOwnProperty('label')) {\n        this.config[field].label = this.labels[field];\n      }\n      if (this.config.required) {\n        this.config[field].required = true;\n      }\n      if (this.config[field].readOnly || this.config.readOnly) {\n        this.config[field].readOnly = true;\n        this.disabled[field] = true;\n      }\n      if (field === 'countryID') {\n        if (!this.config[field].pickerConfig) {\n          this.config.countryID.pickerConfig = this.getDefaultCountryConfig();\n        }\n        this.config[field].pickerConfig.defaultOptions = this.config.countryID.pickerConfig.options;\n      }\n      if (field === 'state') {\n        if (!this.config[field].pickerConfig) {\n          this.config.state.pickerConfig = this.getDefaultStateConfig();\n          this.config[field].pickerConfig.defaultOptions = this.config[field].pickerConfig.options;\n        }\n        this.stateOptions = this.config[field].pickerConfig.options;\n        this.config[field].pickerConfig.options = (query = '') => {\n          return this.stateOptions(query, this.model.countryID);\n        };\n        this.config[field].pickerConfig.defaultOptions = this.stateOptions;\n      }\n    });\n  }\n\n  isValid(field: string): void {\n    let valid = true;\n    if (\n      ((this.config[field].required && (Helpers.isBlank(this.model[field]) || Helpers.isEmpty(this.model[field]))) ||\n        !this.config[field].required) &&\n      !(field === 'countryID' && this.config[field].required && !Helpers.isBlank(this.model.countryID)) &&\n      !(\n        field === 'state' &&\n        this.config[field].required &&\n        (!Helpers.isEmpty(this.model.state) ||\n          ((Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n            !Helpers.isBlank(this.model.countryName) &&\n            this.config.state.pickerConfig &&\n            this.config.state.pickerConfig.defaultOptions &&\n            this.config.state.pickerConfig.defaultOptions.length === 0))\n      )\n    ) {\n      valid = false;\n    } else if (\n      !Helpers.isEmpty(this.model[field]) &&\n      !Helpers.isBlank(this.config[field].maxlength) &&\n      this.config[field].maxlength < this.model[field].length\n    ) {\n      valid = false;\n    }\n    this.valid[field] = valid;\n  }\n\n  isInvalid(field: string): void {\n    let invalid = false;\n    let invalidMaxlength = false;\n    if (\n      (field !== 'countryID' &&\n        field !== 'state' &&\n        this.config[field]?.required &&\n        Helpers.isEmpty(this.model[field]) &&\n        !Helpers.isBlank(this.model[field])) ||\n      (field === 'countryID' && this.config[field]?.required && Helpers.isBlank(this.model.countryName) && this.config[field]?.updated) ||\n      (field === 'state' &&\n        this.config[field]?.required &&\n        (Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n        !Helpers.isBlank(this.model.countryID) &&\n        this.config[field]?.updated &&\n        this.config.state.pickerConfig &&\n        this.config.state.pickerConfig.defaultOptions &&\n        this.config.state.pickerConfig.defaultOptions.length > 0)\n    ) {\n      invalid = true;\n    } else if (\n      !Helpers.isEmpty(this.model[field]) &&\n      !Helpers.isBlank(this.config[field]?.maxlength) &&\n      this.config[field]?.maxlength < this.model[field].length\n    ) {\n      invalid = true;\n      invalidMaxlength = true;\n    }\n    this.invalid[field] = invalid;\n    this.invalidMaxlength[field] = invalidMaxlength;\n  }\n\n  onInput(event: Event, field: string): void {\n    this.isInvalid(field);\n    this.isValid(field);\n    if (event) {\n      this.change.emit({ value: this.model[field], field });\n    }\n  }\n\n  isFocused(event: Event, field: string): void {\n    this.focused[field] = true;\n    this.focus.emit({ event, field });\n  }\n\n  isBlurred(event: Event, field: string): void {\n    this.focused[field] = false;\n    this.blur.emit({ event, field });\n  }\n\n  onCountryChange(evt) {\n    const country: any = evt && evt.rawValue ? evt.rawValue : null;\n    let field: any;\n    let statesUpdatable = false;\n    this.config.countryID.updated = true;\n    if (this.config.countryID.pickerConfig) {\n      field = this.config.countryID.pickerConfig.field;\n    }\n    if (country && field && !Helpers.isBlank(country[field]) && this.model.countryID !== country[field]) {\n      this.model.countryID = country[field];\n      this.model.countryName = Helpers.interpolate(this.config.countryID.pickerConfig.format, country);\n      this.disabled.state = false;\n      this.tooltip.state = undefined;\n      statesUpdatable = true;\n    } else if (Helpers.isBlank(country) || Helpers.isBlank(country[field])) {\n      this.model.countryID = undefined;\n      this.model.countryName = undefined;\n      this.disabled.state = true;\n      this.tooltip.state = this.labels.selectCountryFirst;\n      this.invalid.state = false;\n      statesUpdatable = true;\n    }\n\n    // Update state\n    if (statesUpdatable) {\n      this.model.state = undefined;\n      this.updateStates();\n    }\n    this.updateControl();\n    this.onInput(null, 'countryID');\n    this.onInput(null, 'state');\n  }\n\n  onStateChange(evt) {\n    const state: any = evt && evt.value ? evt.value : null;\n    this.config.state.updated = true;\n    this.model.state = state;\n    this.updateControl();\n    this.onInput(null, 'state');\n  }\n\n  setStateLabel(model: any) {\n    const state: string = model.state;\n    if (!Helpers.isBlank(state)) {\n      if (this.config.state.required) {\n        this.valid.state = true;\n      }\n      this.model.state = state;\n    } else {\n      this.model.state = undefined;\n      if (this.config.state.required) {\n        this.valid.state = false;\n      }\n    }\n  }\n\n  updateStates() {\n    if (this.config.state.pickerConfig.options && !Helpers.isBlank(this.model.countryID)) {\n      this.config.state.pickerConfig.options = (query = '') => {\n        return this.stateOptions(query, this.model.countryID);\n      };\n      this.stateOptions('', this.model.countryID).then((results) => {\n        this.config.state.pickerConfig.defaultOptions = results;\n        if (results.length) {\n          this.tooltip.state = undefined;\n          this.disabled.state = this._readOnly;\n          this.setStateLabel(this.model);\n        } else {\n          this.disabled.state = true;\n          this.tooltip.state = this.labels.noStatesForCountry;\n          if (this.config.state.required) {\n            this.valid.state = true;\n          }\n        }\n        this.validityChange.emit();\n        this.onInput(null, 'state');\n      });\n    } else {\n      this.config.state.pickerConfig.defaultOptions = [];\n      this.disabled.state = true;\n      this.tooltip.state = this.labels.selectCountryFirst;\n      if (this.config.state.required) {\n        this.valid.state = false;\n      }\n    }\n  }\n\n  getStateOptions(filter = '', countryID: number) {\n    if (countryID) {\n      const country = findByCountryId(countryID);\n      const states = getStates(country.name);\n      if (filter) {\n        return states.filter((name) => new RegExp(`${filter}`, 'gi').test(name));\n      }\n      return states;\n    } else {\n      return [];\n    }\n  }\n\n  updateControl() {\n    this.onModelChange(this.model);\n    this.onInput(null, 'countryID');\n    this.onInput(null, 'state');\n  }\n\n  writeValue(model) {\n    let loadingCountries = false;\n    if (model) {\n      let countryName;\n      if (model.countryName && model.countryID) {\n        countryName = model.countryName;\n      } else if (model.countryID) {\n        if (this.config.countryID.pickerConfig && this.config.countryID.pickerConfig.getLabels) {\n          if (Helpers.isFunction(this.config.countryID.pickerConfig.getLabels)) {\n            const promise = this.config.countryID.pickerConfig.getLabels(model.countryID);\n            loadingCountries = true;\n            if (promise.then) {\n              promise.then((result) => {\n                loadingCountries = false;\n                countryName = Helpers.interpolateWithFallback(this.config.countryID.pickerConfig.format, result);\n                this.model = Object.assign(model, { countryName });\n                this.updateStates();\n              });\n            }\n          }\n        }\n      }\n      if (countryName) {\n        countryName = countryName.trim();\n        model.state = model.state || '';\n        this.model = Object.assign(model, { countryName });\n      } else {\n        this.model = model;\n      }\n      if (!loadingCountries && !Helpers.isBlank(this.model.countryID)) {\n        this.updateStates();\n      }\n    }\n    this.fieldList.forEach((field: string) => {\n      this.onInput(null, field);\n    });\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  private getDefaultStateConfig() {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query = '', countryID) => {\n        return Promise.resolve(this.getStateOptions(query, countryID));\n      },\n      getLabels: (state: string) => {\n        return Promise.resolve(state);\n      },\n    };\n  }\n\n  private getDefaultCountryConfig() {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query = '') => {\n        return new Promise((resolve) => {\n          let countries = COUNTRIES;\n          if (query) {\n            countries = countries.filter((country) => new RegExp(`${query}`, 'gi').test(country.name));\n          }\n          return resolve(countries.map((country) => ({ value: country.id, label: country.name })));\n        });\n      },\n      getLabels: (countryID) => {\n        return new Promise((resolve: any) => {\n          const country: any = findByCountryId(countryID);\n          if (country) {\n            resolve({ value: country.id, label: country.name });\n          } else {\n            resolve('');\n          }\n        });\n      },\n    };\n  }\n}\n","export class NovoFile {\n  name: string = '';\n  file: any;\n  type: any;\n  contentType: string = '';\n  lastModified: number = 0;\n  size: number = 0;\n  loaded: boolean = false;\n  fileContents: string;\n  dataURL: string;\n  reader: FileReader = new FileReader();\n  readPromise: Function;\n\n  constructor(file) {\n    this.name = `${encodeURIComponent(file.name || '')}`;\n    this.contentType = file.type;\n    this.lastModified = file.lastModified;\n    this.size = file.size;\n    this.file = file;\n    this.reader.onload = (event: any) => {\n      this.fileContents = event.target.result.split(',')[1];\n      this.dataURL = event.target.result;\n      this.loaded = true;\n      if (this.readPromise) {\n        this.readPromise(this);\n      }\n    };\n  }\n\n  read() {\n    return new Promise((resolve) => {\n      this.readPromise = resolve;\n      // when the file is read it triggers the onload event above.\n      this.reader.readAsDataURL(this.file);\n    });\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      contentType: this.type,\n      lastModified: this.lastModified,\n      size: this.size,\n      fileContents: this.fileContents,\n    };\n  }\n}\n","// NG2\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { NovoDragulaService } from 'novo-elements/addons/dragula';\nimport { CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from 'novo-elements/common';\nimport { NovoFieldControl } from 'novo-elements/components/field';\nimport { NovoLabelService } from 'novo-elements/services';\nimport { NovoFile } from './extras/file';\n\n// Value accessor for the component (supports ngModel)\n// const FILE_VALUE_ACCESSOR = {\n//   provide: NG_VALUE_ACCESSOR,\n//   useExisting: forwardRef(() => NovoFileInputElement),\n//   multi: true,\n// };\n\nconst LAYOUT_DEFAULTS = { order: 'default', download: true, removable: true, labelStyle: 'default', draggable: false };\n// make file-input ids unique\nlet nextId = 0;\n\nclass NovoFileInputBase {\n  constructor(\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    public _parentForm: NgForm,\n    public _parentFormGroup: FormGroupDirective,\n    public ngControl: NgControl,\n  ) {}\n}\nconst NovoFileInputMixins: CanUpdateErrorStateCtor & typeof NovoFileInputBase = mixinErrorState(NovoFileInputBase);\n\n@Component({\n  selector: 'novo-file-input',\n  styleUrls: ['./file-input.scss'],\n  providers: [{ provide: NovoFieldControl, useExisting: NovoFileInputElement }],\n  template: `\n    <div #container></div>\n    <ng-template #fileInput>\n      <div class=\"file-input-group\" [class.disabled]=\"disabled\" [class.active]=\"active\">\n        <input\n          #inputElement\n          *ngIf=\"!layoutOptions.customActions\"\n          type=\"file\"\n          [name]=\"name\"\n          [attr.id]=\"name\"\n          (change)=\"check($event)\"\n          [attr.multiple]=\"multiple\"\n          tabindex=\"-1\"\n          [attr.data-feature-id]=\"dataFeatureId\"\n        />\n        <input\n          #inputElement\n          *ngIf=\"layoutOptions.customActions\"\n          type=\"file\"\n          [name]=\"name\"\n          [attr.id]=\"name\"\n          (change)=\"customCheck($event)\"\n          [attr.multiple]=\"multiple\"\n          tabindex=\"-1\"\n          [attr.data-feature-id]=\"dataFeatureId\"\n        />\n        <section [ngSwitch]=\"layoutOptions.labelStyle\">\n          <label *ngSwitchCase=\"'no-box'\" [attr.for]=\"name\" class=\"no-box\">\n            <div>\n              <i class=\"bhi-dropzone\"></i>{{ placeholder || labels.chooseAFile }} {{ labels.or }}\n              <strong class=\"link\">{{ labels.clickToBrowse }}</strong>\n            </div>\n          </label>\n          <label *ngSwitchDefault [attr.for]=\"name\" class=\"boxed\">\n            <span>{{ placeholder || labels.chooseAFile }}</span>\n            <small\n              >{{ labels.or }} <strong class=\"link\">{{ labels.clickToBrowse }}</strong></small\n            >\n          </label>\n        </section>\n      </div>\n    </ng-template>\n    <ng-template #fileOutput>\n      <div class=\"file-output-group\" [dragula]=\"fileOutputBag\" [dragulaModel]=\"files\">\n        <div class=\"file-item\" *ngFor=\"let file of files\" [class.disabled]=\"disabled\">\n          <i *ngIf=\"layoutOptions.draggable\" class=\"bhi-move\"></i>\n          <label *ngIf=\"file.link\"\n            ><span\n              ><a href=\"{{ file.link }}\" target=\"_blank\">{{ file.name | decodeURI }}</a></span\n            ><span *ngIf=\"file.description\">||</span><span>{{ file.description }}</span></label\n          >\n          <label *ngIf=\"!file.link\">{{ file.name | decodeURI }}</label>\n          <div class=\"actions\" [attr.data-automation-id]=\"'file-actions'\" *ngIf=\"file.loaded\">\n            <div *ngIf=\"!layoutOptions.customActions\">\n              <button\n                *ngIf=\"layoutOptions.download\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"save\"\n                (click)=\"download(file)\"\n                [attr.data-automation-id]=\"'file-download'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"!disabled && (layoutOptions.removable || (!layoutOptions.removable && layoutOptions.removableWhenNew && !file.link))\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"close\"\n                (click)=\"remove(file)\"\n                [attr.data-automation-id]=\"'file-remove'\"\n                tabindex=\"-1\"\n              ></button>\n            </div>\n            <div *ngIf=\"layoutOptions.customActions\">\n              <button\n                *ngIf=\"layoutOptions.edit && !disabled\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"edit\"\n                (click)=\"customEdit(file)\"\n                [attr.data-automation-id]=\"'file-edit'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"layoutOptions.download\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"save\"\n                (click)=\"customSave(file)\"\n                [attr.data-automation-id]=\"'file-download'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"!disabled\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"close\"\n                (click)=\"customDelete(file)\"\n                [attr.data-automation-id]=\"'file-remove'\"\n                tabindex=\"-1\"\n              ></button>\n            </div>\n          </div>\n          <novo-loading *ngIf=\"!file.loaded\"></novo-loading>\n        </div>\n      </div>\n    </ng-template>\n  `,\n})\nexport class NovoFileInputElement extends NovoFileInputMixins implements NovoFieldControl<any>, ControlValueAccessor, OnInit, OnDestroy {\n  private _uniqueId: string = `novo-file-input-${++nextId}`;\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n  /** User defined tab index. */\n  _userTabIndex: number | null = null;\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<NovoFileInputElement>;\n\n  readonly controlType: string = 'file-input';\n  /** @docs-private Implemented as part of NovoFieldControl. */\n  lastKeyValue: string = null;\n  /** @docs-private Implemented as part of NovoFieldControl.*/\n  lastCaretPosition: number | null;\n\n  @Input() id: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  // ----------\n  @ViewChild('fileInput', { static: true })\n  fileInput: TemplateRef<any>;\n  @ViewChild('fileOutput', { static: true })\n  fileOutput: TemplateRef<any>;\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n  @ViewChild('inputElement') inputElement: ElementRef<HTMLInputElement>;\n\n  @Input()\n  multiple: boolean = false;\n\n  @Input()\n  layoutOptions: {\n    order?: string;\n    download?: boolean;\n    edit?: boolean;\n    labelStyle?: string;\n    draggable?: boolean;\n    customActions: boolean;\n    removable?: boolean;\n    customValidation?: { action: string; fn: Function }[];\n    removableWhenNew?: boolean;\n  };\n  @Input()\n  value: Array<any> = [];\n  @Input()\n  dataFeatureId: string;\n\n  @Output()\n  edit: EventEmitter<any> = new EventEmitter();\n  @Output()\n  save: EventEmitter<any> = new EventEmitter();\n  @Output()\n  delete: EventEmitter<any> = new EventEmitter();\n  @Output()\n  upload: EventEmitter<any> = new EventEmitter();\n\n  elements: Array<any> = [];\n  files: Array<any> = [];\n  model: any;\n  active: boolean = false;\n  commands: any;\n  visible: boolean;\n  target: any;\n  fileOutputBag: string;\n\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  @HostBinding('class.disabled')\n  @Input()\n  get disabled(): boolean {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n  }\n\n  protected _name: string = this._uniqueId;\n  protected _value: boolean = false;\n  protected _required: boolean = false;\n  protected _disabled: boolean = false;\n  protected _placeholder: string;\n\n  constructor(\n    private element: ElementRef,\n    public labels: NovoLabelService,\n    private dragula: NovoDragulaService,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    @Optional() @Self() _ngControl: NgControl,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, _ngControl);\n    if (_ngControl) {\n      _ngControl.valueAccessor = this;\n    }\n    this.commands = {\n      dragenter: this.dragEnterHandler.bind(this),\n      dragleave: this.dragLeaveHandler.bind(this),\n      dragover: this.dragOverHandler.bind(this),\n      drop: this.dropHandler.bind(this),\n    };\n  }\n\n  ngOnInit() {\n    ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((type) => {\n      this.element.nativeElement.addEventListener(type, this.commands[type]);\n    });\n    this.updateLayout();\n    this.initializeDragula();\n    this.setInitialFileList();\n    this.dataFeatureId = this.dataFeatureId ? this.dataFeatureId : this.name;\n  }\n\n  ngOnDestroy() {\n    ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((type) => {\n      this.element.nativeElement.removeEventListener(type, this.commands[type]);\n    });\n    const dragulaHasFileOutputBag =\n      this.dragula.bags.length > 0 && this.dragula.bags.filter((x) => x.name === this.fileOutputBag).length > 0;\n    if (dragulaHasFileOutputBag) {\n      this.dragula.destroy(this.fileOutputBag);\n    }\n  }\n\n  updateLayout() {\n    this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS, this.layoutOptions);\n    this.insertTemplatesBasedOnLayout();\n  }\n\n  insertTemplatesBasedOnLayout() {\n    let order;\n    switch (this.layoutOptions.order) {\n      case 'displayFilesBelow':\n        order = ['fileInput', 'fileOutput'];\n        break;\n      default:\n        order = ['fileOutput', 'fileInput'];\n    }\n    order.forEach((template) => {\n      this.container.createEmbeddedView(this[template], 0);\n    });\n    return order;\n  }\n\n  initializeDragula() {\n    this.fileOutputBag = `file-output-${this.dragula.bags.length}`;\n    this.dragula.setOptions(this.fileOutputBag, {\n      moves: (el, container, handle) => {\n        return this.layoutOptions.draggable;\n      },\n    });\n  }\n\n  setInitialFileList() {\n    if (this.value) {\n      this.files = this.value;\n    }\n  }\n\n  dragEnterHandler(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n    this.target = event.target;\n    this.active = true;\n  }\n\n  dragLeaveHandler(event) {\n    event.preventDefault();\n    if (this.target === event.target) {\n      this.active = false;\n    }\n  }\n\n  dragOverHandler(event) {\n    event.preventDefault();\n    // no-op\n  }\n\n  dropHandler(event) {\n    event.preventDefault();\n    this.visible = false;\n    if (event.dataTransfer.types[0] !== 'Files') {\n      return;\n    }\n    const options: any = this.layoutOptions;\n    const filelist = Array.from(event.dataTransfer.files);\n    if (options.customActions) {\n      this.upload.emit(this.multiple ? filelist : [filelist[0]]);\n    } else {\n      this.process(this.multiple ? filelist : [filelist[0]]);\n    }\n    this.active = false;\n  }\n\n  writeValue(model: any): void {\n    this.model = model;\n    // If model is cleared programmatically (E.g. form.patchValue({file: undefined})), empty file list.\n    this.files = !model ? [] : this.files;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  check(event) {\n    this.process(Array.from(event.target.files));\n    // After processing file upload, clear input element value. Allows for delete and upload of same file.\n    event.target.value = '';\n  }\n\n  validate(files): boolean {\n    let passedValidation = true;\n    if (this.layoutOptions.customValidation) {\n      this.layoutOptions.customValidation\n        .filter((validation) => validation.action === 'upload')\n        .forEach((uploadValidation) => {\n          passedValidation = uploadValidation.fn(files) && passedValidation;\n        });\n    }\n    return passedValidation;\n  }\n\n  process(filelist) {\n    if (this.validate(filelist)) {\n      Promise.all(filelist.map((file) => this.readFile(file))).then((files) => {\n        if (this.multiple) {\n          this.files.push(...files);\n        } else {\n          this.files = files;\n        }\n        this.model = this.files;\n        this.onModelChange(this.model);\n      });\n    }\n  }\n\n  download(file) {\n    window.open(file.dataURL, '_blank');\n  }\n\n  remove(file) {\n    this.files.splice(\n      this.files.findIndex((f) => f.name === file.name && f.size === file.size),\n      1,\n    );\n    this.model = this.files;\n    this.onModelChange(this.model);\n  }\n\n  readFile(file) {\n    return new NovoFile(file).read();\n  }\n\n  customEdit(file) {\n    this.edit.emit(file);\n  }\n\n  customSave(file) {\n    this.save.emit(file);\n  }\n\n  customDelete(file) {\n    this.delete.emit(file);\n  }\n\n  customCheck(event) {\n    this.upload.emit(event);\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  /** Whether any radio buttons has focus. */\n  get focused(): boolean {\n    // todo: implement this.\n    return false;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  get empty(): boolean {\n    return this.value === null;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  get shouldLabelFloat(): boolean {\n    return !this.empty || this.focused;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  onContainerClick(event: MouseEvent) {\n    this.focus();\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n    // TODO\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoFileInputElement } from './file/file-input';\nimport { NovoAddressElement } from './address/address';\nimport { NovoTooltipModule } from 'novo-elements/components/tooltip';\nimport { NovoSelectModule } from 'novo-elements/components/select';\nimport { NovoPickerModule } from 'novo-elements/components/picker';\nimport { NovoLoadingModule } from 'novo-elements/components/loading';\nimport { NovoDragulaModule } from 'novo-elements/addons/dragula';\nimport { NovoCheckboxModule } from 'novo-elements/components/checkbox';\nimport { NovoButtonModule } from 'novo-elements/components/button';\nimport { NovoPipesModule } from 'novo-elements/pipes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NovoPipesModule,\n    NovoButtonModule,\n    NovoSelectModule,\n    NovoPickerModule,\n    NovoLoadingModule,\n    NovoDragulaModule,\n    NovoTooltipModule,\n    NovoCheckboxModule,\n  ],\n  declarations: [NovoAddressElement, NovoFileInputElement],\n  exports: [NovoAddressElement, NovoFileInputElement],\n})\nexport class NovoFormExtrasModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3","i2","i5"],"mappings":"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"}