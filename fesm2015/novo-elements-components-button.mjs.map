{"version":3,"file":"novo-elements-components-button.mjs","sources":["../../../projects/elements/components/button/button.ts","../../../projects/elements/components/button/button.module.ts","../../../projects/elements/components/button/novo-elements-components-button.ts"],"sourcesContent":["// NG2\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { NovoIconComponent } from 'novo-elements/components/icon';\nimport { BooleanInput, notify } from 'novo-elements/utils';\n\n@Component({\n  selector: 'novo-button,button[theme],button[basic],button[primary],button[outlined],button[icon],button[fab]',\n  host: {\n    class: 'novo-button',\n    '[attr.color]': 'color',\n    '[attr.icon]': 'icon',\n    '[attr.loading]': 'loading',\n    '[attr.side]': 'side',\n    // '[attr.size]': 'size',\n    '[attr.role]': \"'button'\",\n    '[class.icon-only]': '!_hasTextContent && (icon || _icons.length > 0) && (!fab && !basic && !primary && !outlined)',\n  },\n  styleUrls: [\n    './styles/button.scss',\n    './styles/button-standard.scss',\n    './styles/button-primary.scss',\n    './styles/button-secondary.scss',\n    './styles/button-fab.scss',\n    './styles/button-icon.scss',\n    './styles/button-dialogue.scss',\n    './styles/button-sizes.scss',\n    './styles/button-other.scss',\n  ],\n\n  template: `\n    <span class=\"button-focus-indicator\"></span>\n    <!--Left Icon-->\n    <i *ngIf=\"icon && side === 'left' && !loading\" [ngClass]=\"icon\" class=\"novo-button-icon novo-button-icon-left\"></i>\n    <!--Transcluded Content-->\n    <span #textContent class=\"button-contents\"><ng-content></ng-content></span>\n    <!--Right Icon-->\n    <i *ngIf=\"icon && side === 'right' && !loading\" [ngClass]=\"icon\" class=\"novo-button-icon novo-button-icon-right\"></i>\n    <!--Loading-->\n    <i *ngIf=\"loading\" class=\"loading novo-button-loading\">\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"18.2px\"\n        height=\"18.5px\"\n        viewBox=\"0 0 18.2 18.5\"\n        style=\"enable-background:new 0 0 18.2 18.5;\"\n        xml:space=\"preserve\"\n      >\n        <style type=\"text/css\">\n          .spinner {\n            fill: #ffffff;\n          }\n        </style>\n        <path\n          class=\"spinner\"\n          d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                        c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                        c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"\n        />\n      </svg>\n    </i>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoButtonElement implements AfterViewInit {\n  /**\n   * The text color of the button. Should be used for Icon buttons. see theme.\n   */\n  @Input() color: string;\n  /**\n   * The side of the button to display the icon.\n   * @deprecated\n   */\n  @Input() side: string = 'right';\n  /**\n   * \tSets the size of the button. One of: sm, lg\n   */\n  @Input() size: string;\n\n  /**\n   * The base styling to apply to the button.\n   * @deprecated\n   */\n  @Input()\n  public get theme(): string {\n    return this.variant;\n  }\n  public set theme(value: string) {\n    notify(`'theme' has been deprecated for button. Please use variant instead.`);\n    this.variant = value;\n  }\n\n  /**\n   * The visual style of the button.\n   */\n  @Input()\n  public get variant(): string {\n    return this._variant;\n  }\n  public set variant(value: string) {\n    this._variant = value;\n    this.fab = value === 'fab';\n    this.basic = ['basic', 'dialogue', 'text'].includes(value);\n    this.primary = ['primary', 'cta'].includes(value);\n    this.outlined = ['outlined', 'secondary'].includes(value);\n    this.standard = value === 'standard';\n  }\n  private _variant: string;\n\n  /**\n   * Conditionally show a spinner over the top of a button.\n   */\n  @Input() loading: boolean;\n  /**\n   * Optionally display `bullhorn-icon` with the button along with the text.\n   * @deprecated\n   */\n  @Input()\n  set icon(icon: string) {\n    if (icon) {\n      this._icon = `bhi-${icon}`;\n    }\n  }\n  get icon(): string {\n    return this._icon;\n  }\n\n  public _hasTextContent: boolean = false;\n\n  @ContentChildren(NovoIconComponent, { descendants: true })\n  _icons: QueryList<NovoIconComponent>;\n\n  @ViewChild('textContent') textContent: ElementRef;\n\n  @HostBinding('class')\n  get hb_calculatedClasses() {\n    const size = this._translateSize(this.size);\n    const sizeClass = size ? `novo-button-${size}` : null;\n    return [sizeClass].filter(Boolean);\n  }\n\n  private _translateSize(size: string) {\n    if (['s', 'sm', 'small'].includes(size)) return 'small';\n    if (['l', 'lg', 'large'].includes(size)) return 'large';\n    return false;\n  }\n\n  // Variants\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-text')\n  basic: boolean = false;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-primary')\n  primary: boolean = false;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-outlined')\n  outlined: boolean = false;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-fab')\n  fab: boolean = false;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-standard')\n  standard: boolean = false;\n\n  /**\n   * Make the button non-interactive.\n   */\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-disabled')\n  disabled: boolean = false;\n\n  private _icon: string;\n\n  constructor(public element: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this.element.nativeElement.focus(options);\n  }\n\n  public ngAfterViewInit(): void {\n    this._hasTextContent = this.textContent.nativeElement.textContent.trim();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonElement } from './button';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoButtonElement],\n  exports: [NovoButtonElement],\n})\nexport class NovoButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}