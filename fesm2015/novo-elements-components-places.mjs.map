{"version":3,"file":"novo-elements-components-places.mjs","sources":["../../../projects/elements/components/places/places.service.ts","../../../projects/elements/components/places/places.component.ts","../../../projects/elements/components/places/places.module.ts","../../../projects/elements/components/places/novo-elements-components-places.ts"],"sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { GlobalRef, LocalStorageService } from 'novo-elements/services';\n\n@Injectable()\nexport class GooglePlacesService {\n  constructor(\n    private _http: HttpClient,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private _global: GlobalRef,\n    private _localStorageService: LocalStorageService,\n  ) {}\n\n  getPredictions(url: string, query: string): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?query=' + query).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getLatLngDetail(url: string, lat: number, lng: number): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?lat=' + lat + '&lng=' + lng).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getPlaceDetails(url: string, placeId: string): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?query=' + placeId).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getGeoCurrentLocation(): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        if (_window.navigator.geolocation) {\n          _window.navigator.geolocation.getCurrentPosition((pos) => {\n            const latlng: any = { lat: parseFloat(pos.coords.latitude + ''), lng: parseFloat(pos.coords.longitude + '') };\n            resolve(latlng);\n          });\n        } else {\n          resolve(false);\n        }\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoLatLngDetail(latlng: any): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const geocoder: any = new _window.google.maps.Geocoder();\n        geocoder.geocode({ location: latlng }, (results, status) => {\n          if (status === 'OK') {\n            this.getGeoPlaceDetail(results[0].place_id).then((result) => {\n              if (result) {\n                resolve(result);\n              } else {\n                resolve(false);\n              }\n            });\n          } else {\n            resolve(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPrediction(params: any): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const placesService: any = new _window.google.maps.places.AutocompleteService();\n        let queryInput: any = {};\n        const promiseArr: any = [];\n        if (params.countryRestriction.length) {\n          queryInput = {\n            input: params.query,\n            componentRestrictions: { country: params.countryRestriction },\n          };\n        } else {\n          queryInput = {\n            input: params.query,\n          };\n        }\n        if (params.geoLocation) {\n          queryInput.location = new _window.google.maps.LatLng(parseFloat(params.geoLocation[0]), parseFloat(params.geoLocation[1]));\n          queryInput.radius = params.radius;\n        }\n        if (params.geoTypes.length) {\n          for (let i: number = 0; i < params.geoTypes.length; i++) {\n            const _tempQuery: any = queryInput;\n            _tempQuery.types = new Array(params.geoTypes[i]);\n            promiseArr.push(this.geoPredictionCall(placesService, _tempQuery));\n          }\n        } else {\n          promiseArr.push(this.geoPredictionCall(placesService, queryInput));\n        }\n\n        Promise.all(promiseArr).then((values) => {\n          const val: any = values;\n          if (val.length > 1) {\n            let _tempArr: any = [];\n            for (let j: number = 0; j < val.length; j++) {\n              if (val[j] && val[j].length) {\n                _tempArr = _tempArr.concat(val[j]);\n              }\n            }\n            _tempArr = this.getUniqueResults(_tempArr);\n            resolve(_tempArr);\n          } else {\n            resolve(values[0]);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPlaceDetail(placeId: string): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const placesService: any = new _window.google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails({ placeId }, (result: any, status: any) => {\n          if (result === null || result.length === 0) {\n            this.getGeoPaceDetailByReferance(result.referance).then((referanceData: any) => {\n              if (!referanceData) {\n                resolve(false);\n              } else {\n                resolve(referanceData);\n              }\n            });\n          } else {\n            resolve(result);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPaceDetailByReferance(referance: string): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const placesService: any = new _window.google.maps.places.PlacesService();\n        placesService.getDetails({ reference: referance }, (result: any, status: any) => {\n          if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(result);\n          } else {\n            resolve(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  addRecentList(localStorageName: string, result: any, itemSavedLength: number): any {\n    this.getRecentList(localStorageName).then((data: any) => {\n      if (data) {\n        for (let i: number = 0; i < data.length; i++) {\n          if (data[i].description === result.description) {\n            data.splice(i, 1);\n            break;\n          }\n        }\n        data.unshift(result);\n        if (data.length > itemSavedLength) {\n          data.pop();\n        }\n        this._localStorageService.setItem(localStorageName, JSON.stringify(data));\n      }\n    });\n  }\n\n  getRecentList(localStorageName: string): Promise<any> {\n    return new Promise((resolve) => {\n      let value: any = this._localStorageService.getItem(localStorageName);\n      if (value) {\n        value = JSON.parse(value);\n      } else {\n        value = [];\n      }\n      resolve(value);\n    });\n  }\n\n  private getUniqueResults(arr: any): any {\n    return Array.from(arr.reduce((m, t) => m.set(t.place_id, t), new Map()).values());\n  }\n\n  private geoPredictionCall(placesService: any, queryInput: any): Promise<any> {\n    const _window: any = this._global.nativeGlobal;\n    return new Promise((resolve) => {\n      placesService.getPlacePredictions(queryInput, (result: any, status: any) => {\n        if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(result);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n}\n","// NG2\nimport { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, Inject, Input, OnChanges, OnInit, Output, PLATFORM_ID } from '@angular/core';\nimport { GlobalRef } from 'novo-elements/services';\nimport { GooglePlacesService } from './places.service';\n\nexport interface Settings {\n  geoPredictionServerUrl?: string;\n  geoLatLangServiceUrl?: string;\n  geoLocDetailServerUrl?: string;\n  geoCountryRestriction?: any;\n  geoTypes?: any;\n  geoLocation?: any;\n  geoRadius?: number;\n  serverResponseListHierarchy?: any;\n  serverResponseatLangHierarchy?: any;\n  serverResponseDetailHierarchy?: any;\n  resOnSearchButtonClickOnly?: boolean;\n  useGoogleGeoApi?: boolean;\n  inputPlaceholderText?: string;\n  inputString?: string;\n  showSearchButton?: boolean;\n  showRecentSearch?: boolean;\n  showCurrentLocation?: boolean;\n  recentStorageName?: string;\n  noOfRecentSearchSave?: number;\n  currentLocIconUrl?: string;\n  searchIconUrl?: string;\n  locationIconUrl?: string;\n}\n\n@Component({\n  selector: 'google-places-list',\n  styleUrls: ['./places.component.scss'],\n  template: `\n    <novo-list direction=\"vertical\">\n      <novo-list-item *ngFor=\"let data of queryItems; let $index = index\" (click)=\"selectedListNode($event, $index)\">\n        <item-header>\n          <item-avatar icon=\"location\"></item-avatar>\n          <item-title>{{ data.structured_formatting?.main_text ? data.structured_formatting.main_text : data.description }}</item-title>\n        </item-header>\n        <item-content>{{ data.structured_formatting?.secondary_text }}</item-content>\n      </novo-list-item>\n    </novo-list>\n  `,\n})\nexport class PlacesListComponent implements OnInit, OnChanges {\n  @Input()\n  userSettings: Settings;\n  @Input()\n  term: string = '';\n  @Output()\n  termChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  select: EventEmitter<any> = new EventEmitter<any>();\n\n  public locationInput: string = '';\n  public gettingCurrentLocationFlag: boolean = false;\n  public dropdownOpen: boolean = false;\n  public recentDropdownOpen: boolean = false;\n  public queryItems: any = [];\n  public isSettingsError: boolean = false;\n  public settingsErrorMsg: string = '';\n  public settings: Settings = {};\n  private moduleinit: boolean = false;\n  private selectedDataIndex: number = -1;\n  private recentSearchData: any = [];\n  private userSelectedOption: any = '';\n  private defaultSettings: Settings = {\n    geoPredictionServerUrl: '',\n    geoLatLangServiceUrl: '',\n    geoLocDetailServerUrl: '',\n    geoCountryRestriction: [],\n    geoTypes: [],\n    geoLocation: [],\n    geoRadius: 0,\n    serverResponseListHierarchy: [],\n    serverResponseatLangHierarchy: [],\n    serverResponseDetailHierarchy: [],\n    resOnSearchButtonClickOnly: false,\n    useGoogleGeoApi: true,\n    inputPlaceholderText: 'Enter Area Name',\n    inputString: '',\n    showSearchButton: true,\n    showRecentSearch: true,\n    showCurrentLocation: true,\n    recentStorageName: 'recentSearches',\n    noOfRecentSearchSave: 5,\n    currentLocIconUrl: '',\n    searchIconUrl: '',\n    locationIconUrl: '',\n  };\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private _elmRef: ElementRef,\n    private _global: GlobalRef,\n    private _googlePlacesService: GooglePlacesService,\n  ) {}\n\n  ngOnInit(): any {\n    if (!this.moduleinit) {\n      this.moduleInit();\n    }\n  }\n\n  ngOnChanges(): any {\n    this.moduleinit = true;\n    this.moduleInit();\n    this.searchinputCallback(null);\n  }\n\n  // function called when click event happens in input box. (Binded with view)\n  searchinputClickCallback(event: any): any {\n    event.target.select();\n    this.searchinputCallback(event);\n  }\n\n  // function called when there is a change in input. (Binded with view)\n  searchinputCallback(event: any): any {\n    const inputVal: any = this.locationInput;\n    if (inputVal) {\n      this.getListQuery(inputVal);\n    } else {\n      this.queryItems = [];\n      if (this.userSelectedOption) {\n        this.userQuerySubmit('false');\n      }\n      this.userSelectedOption = '';\n      if (this.settings.showRecentSearch) {\n        this.showRecentSearch();\n      } else {\n        this.dropdownOpen = false;\n      }\n    }\n  }\n\n  // function to execute when user hover over autocomplete list.(binded with view)\n  activeListNode(index: number): any {\n    for (let i: number = 0; i < this.queryItems.length; i++) {\n      if (index === i) {\n        this.queryItems[i].active = true;\n        this.selectedDataIndex = index;\n      } else {\n        this.queryItems[i].active = false;\n      }\n    }\n  }\n\n  // function to execute when user select the autocomplete list.(binded with view)\n  selectedListNode(event: MouseEvent, index: number): any {\n    this.dropdownOpen = false;\n    if (this.recentDropdownOpen) {\n      this.setRecentLocation(this.queryItems[index]);\n    } else {\n      this.getPlaceLocationInfo(this.queryItems[index]);\n    }\n  }\n\n  // function to close the autocomplete list when clicked outside. (binded with view)\n  closeAutocomplete(event: any): any {\n    if (!this._elmRef.nativeElement.contains(event.target)) {\n      this.selectedDataIndex = -1;\n      this.dropdownOpen = false;\n    }\n  }\n\n  // function to manually trigger the callback to parent component when clicked search button.\n  userQuerySubmit(selectedOption?: any): any {\n    const _userOption: any = selectedOption === 'false' ? '' : this.userSelectedOption;\n    if (_userOption) {\n      this.select.emit(this.userSelectedOption);\n    } else {\n      // this.select.emit(false);\n    }\n  }\n\n  // function to get user current location from the device.\n  currentLocationSelected(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      this.gettingCurrentLocationFlag = true;\n      this.dropdownOpen = false;\n      this._googlePlacesService.getGeoCurrentLocation().then((result: any) => {\n        if (!result) {\n          this.gettingCurrentLocationFlag = false;\n        } else {\n          this.getCurrentLocationInfo(result);\n        }\n      });\n    }\n  }\n\n  // module initialization happens. function called by ngOninit and ngOnChange\n  private moduleInit(): any {\n    this.settings = this.setUserSettings();\n    // condition to check if Radius is set without location detail.\n    if (this.settings.geoRadius) {\n      if (this.settings.geoLocation.length !== 2) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Radius should be used with GeoLocation. Please use \"geoLocation\" key to set lat and lng. ';\n      }\n    }\n\n    // condition to check if lat and lng is set and radious is not set then it will set to 20,000KM by default\n    if (this.settings.geoLocation.length === 2 && !this.settings.geoRadius) {\n      this.settings.geoRadius = 20000000;\n    }\n    if (this.settings.showRecentSearch) {\n      this.getRecentLocations();\n    }\n    if (!this.settings.useGoogleGeoApi) {\n      if (!this.settings.geoPredictionServerUrl) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Prediction custom server url is not defined. Please use \"geoPredictionServerUrl\" key to set. ';\n      }\n      if (!this.settings.geoLatLangServiceUrl) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Latitude and longitude custom server url is not defined. Please use \"geoLatLangServiceUrl\" key to set. ';\n      }\n      if (!this.settings.geoLocDetailServerUrl) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Location detail custom server url is not defined. Please use \"geoLocDetailServerUrl\" key to set. ';\n      }\n    }\n    this.locationInput = this.term;\n  }\n\n  // function to process the search query when pressed enter.\n  private processSearchQuery(): any {\n    if (this.queryItems.length) {\n      if (this.selectedDataIndex > -1) {\n        this.selectedListNode(null, this.selectedDataIndex);\n      } else {\n        this.selectedListNode(null, 0);\n      }\n    }\n  }\n\n  // function to set user settings if it is available.\n  private setUserSettings(): Settings {\n    const _tempObj: any = {};\n    if (this.userSettings && typeof this.userSettings === 'object') {\n      const keys: string[] = Object.keys(this.defaultSettings);\n      for (const value of keys) {\n        _tempObj[value] = this.userSettings[value] !== undefined ? this.userSettings[value] : this.defaultSettings[value];\n      }\n      return _tempObj;\n    } else {\n      return this.defaultSettings;\n    }\n  }\n\n  // function to get the autocomplete list based on user input.\n  private getListQuery(value: string): any {\n    this.recentDropdownOpen = false;\n    if (this.settings.useGoogleGeoApi) {\n      const _tempParams: any = {\n        query: value,\n        countryRestriction: this.settings.geoCountryRestriction,\n        geoTypes: this.settings.geoTypes,\n      };\n      if (this.settings.geoLocation.length === 2) {\n        _tempParams.geoLocation = this.settings.geoLocation;\n        _tempParams.radius = this.settings.geoRadius;\n      }\n      this._googlePlacesService.getGeoPrediction(_tempParams).then((result) => {\n        this.updateListItem(result);\n      });\n    } else {\n      this._googlePlacesService.getPredictions(this.settings.geoPredictionServerUrl, value).then((result) => {\n        result = this.extractServerList(this.settings.serverResponseListHierarchy, result);\n        this.updateListItem(result);\n      });\n    }\n  }\n\n  // function to extratc custom data which is send by the server.\n  private extractServerList(arrayList: any, data: any): any {\n    if (arrayList.length) {\n      let _tempData: any = data;\n      for (const key of arrayList) {\n        _tempData = _tempData[key];\n      }\n      return _tempData;\n    } else {\n      return data;\n    }\n  }\n\n  // function to update the predicted list.\n  private updateListItem(listData: any): any {\n    this.queryItems = listData ? listData : [];\n    this.dropdownOpen = true;\n  }\n\n  // function to show the recent search result.\n  private showRecentSearch(): any {\n    this.recentDropdownOpen = true;\n    this.dropdownOpen = true;\n    this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((result: any) => {\n      if (result) {\n        this.queryItems = result;\n      } else {\n        this.queryItems = [];\n      }\n    });\n  }\n\n  // function to execute to get location detail based on latitude and longitude.\n  private getCurrentLocationInfo(latlng: any): any {\n    if (this.settings.useGoogleGeoApi) {\n      this._googlePlacesService.getGeoLatLngDetail(latlng).then((result: any) => {\n        if (result) {\n          this.setRecentLocation(result);\n        }\n        this.gettingCurrentLocationFlag = false;\n      });\n    } else {\n      this._googlePlacesService.getLatLngDetail(this.settings.geoLatLangServiceUrl, latlng.lat, latlng.lng).then((result: any) => {\n        if (result) {\n          result = this.extractServerList(this.settings.serverResponseatLangHierarchy, result);\n          this.setRecentLocation(result);\n        }\n        this.gettingCurrentLocationFlag = false;\n      });\n    }\n  }\n\n  // function to retrive the location info based on goovle place id.\n  private getPlaceLocationInfo(selectedData: any): any {\n    if (this.settings.useGoogleGeoApi) {\n      this._googlePlacesService.getGeoPlaceDetail(selectedData.place_id).then((data: any) => {\n        if (data) {\n          this.setRecentLocation(data);\n        }\n      });\n    } else {\n      this._googlePlacesService.getPlaceDetails(this.settings.geoLocDetailServerUrl, selectedData.place_id).then((result: any) => {\n        if (result) {\n          result = this.extractServerList(this.settings.serverResponseDetailHierarchy, result);\n          this.setRecentLocation(result);\n        }\n      });\n    }\n  }\n\n  // function to store the selected user search in the localstorage.\n  private setRecentLocation(data: any): any {\n    data = JSON.parse(JSON.stringify(data));\n    data.description = data.description ? data.description : data.formatted_address;\n    data.active = false;\n    this.selectedDataIndex = -1;\n    this.locationInput = data.description;\n    if (this.settings.showRecentSearch) {\n      this._googlePlacesService.addRecentList(this.settings.recentStorageName, data, this.settings.noOfRecentSearchSave);\n      this.getRecentLocations();\n    }\n    this.userSelectedOption = data;\n    // below code will execute only when user press enter or select any option selection and it emit a callback to the parent component.\n    if (!this.settings.resOnSearchButtonClickOnly) {\n      this.select.emit(data);\n      this.termChange.emit(data);\n    }\n  }\n\n  // function to retrive the stored recent user search from the localstorage.\n  private getRecentLocations(): any {\n    this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((data: any) => {\n      this.recentSearchData = data && data.length ? data : [];\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { GooglePlacesService } from './places.service';\nimport { PlacesListComponent } from './places.component';\nimport { NovoListModule } from 'novo-elements/components/list';\n\n@NgModule({\n  declarations: [PlacesListComponent],\n  imports: [CommonModule, HttpClientModule, FormsModule, NovoListModule],\n  exports: [PlacesListComponent],\n  providers: [GooglePlacesService],\n})\nexport class GooglePlacesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2.GooglePlacesService"],"mappings":"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"}