{"version":3,"file":"CalendarDayView.d.ts","sources":["CalendarDayView.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { CalendarEvent, CalendarEventTimesChangedEvent, DayView, DayViewHour } from '../../../utils/calendar-utils/CalendarUtils';\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * &lt;novo-calendar-day\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-day&gt;\n * ```\n */\nexport declare class NovoCalendarDayViewElement implements OnChanges, OnInit, OnDestroy {\n    private cdr;\n    /**\n     * The current view date\n     */\n    viewDate: Date;\n    /**\n     * An array of events to display on view\n     */\n    events: CalendarEvent[];\n    /**\n     * The number of segments in an hour. Must be <= 6\n     */\n    hourSegments: number;\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     */\n    dayStartHour: number;\n    /**\n     * The day start minutes. Must be 0-59\n     */\n    dayStartMinute: number;\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     */\n    dayEndHour: number;\n    /**\n     * The day end minutes. Must be 0-59\n     */\n    dayEndMinute: number;\n    /**\n     * The width in pixels of each event on the view\n     */\n    eventWidth: number;\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    refresh: Subject<any>;\n    /**\n     * The locale used to format dates\n     */\n    locale: string;\n    /**\n     * A function that will be called before each hour segment is called. The first argument will contain the hour segment.\n     * If you add the `cssClass` property to the segment it will add that class to the hour segment in the template\n     */\n    hourSegmentModifier: Function;\n    /**\n     * The grid size to snap resizing and dragging of events to\n     */\n    eventSnapSize: number;\n    /**\n     * The placement of the event tooltip\n     */\n    tooltipPosition: string;\n    /**\n     * A custom template to use to replace the hour segment\n     */\n    hourSegmentTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for all day events\n     */\n    allDayEventTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for day view events\n     */\n    eventTemplate: TemplateRef<any>;\n    /**\n     * Called when an event title is clicked\n     */\n    eventClicked: EventEmitter<{\n        event: CalendarEvent;\n    }>;\n    /**\n     * Called when an hour segment is clicked\n     */\n    hourSegmentClicked: EventEmitter<{\n        date: Date;\n    }>;\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent>;\n    /**\n     * @hidden\n     */\n    hours: DayViewHour[];\n    /**\n     * @hidden\n     */\n    view: DayView;\n    /**\n     * @hidden\n     */\n    width: number;\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n    /**\n     * @hidden\n     */\n    currentResize: {\n        originalTop: number;\n        originalHeight: number;\n        edge: string;\n    };\n    /**\n     * @hidden\n     */\n    validateDrag: Function;\n    /**\n     * @hidden\n     */\n    validateResize: Function;\n    /**\n     * @hidden\n     */\n    constructor(cdr: ChangeDetectorRef, locale: string);\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void;\n    private refreshHourGrid;\n    private refreshView;\n    private refreshAll;\n}\n"]}