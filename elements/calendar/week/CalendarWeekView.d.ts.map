{"version":3,"file":"CalendarWeekView.d.ts","sources":["CalendarWeekView.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { CalendarEvent, CalendarEventTimesChangedEvent, DayViewHour, WeekDay, WeekViewEventRow } from '../../../utils/calendar-utils/CalendarUtils';\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * &lt;novo-calendar-week\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-week&gt;\n * ```\n */\nexport declare class NovoCalendarWeekViewElement implements OnChanges, OnInit, OnDestroy {\n    private cdr;\n    /**\n     * The current view date\n     */\n    viewDate: Date;\n    /**\n     * An array of events to display on view\n     */\n    events: CalendarEvent[];\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n    excludeDays: number[];\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    refresh: Subject<any>;\n    /**\n     * The locale used to format dates\n     */\n    locale: string;\n    /**\n     * The placement of the event tooltip\n     */\n    tooltipPosition: string;\n    /**\n     * The start number of the week\n     */\n    weekStartsOn: number;\n    /**\n     * A custom template to use to replace the header\n     */\n    headerTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for week view events\n     */\n    eventTemplate: TemplateRef<any>;\n    /**\n     * The precision to display events.\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n     */\n    precision: 'days' | 'minutes';\n    /**\n     * The number of segments in an hour. Must be <= 6\n     */\n    hourSegments: number;\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     */\n    dayStartHour: number;\n    /**\n     * The day start minutes. Must be 0-59\n     */\n    dayStartMinute: number;\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     */\n    dayEndHour: number;\n    /**\n     * The day end minutes. Must be 0-59\n     */\n    dayEndMinute: number;\n    /**\n     * A custom template to use to replace the hour segment\n     */\n    hourSegmentTemplate: TemplateRef<any>;\n    /**\n     * Called when an hour segment is clicked\n     */\n    hourSegmentClicked: EventEmitter<{\n        date: Date;\n    }>;\n    /**\n     * Called when a header week day is clicked\n     */\n    dayClicked: EventEmitter<{\n        date: Date;\n    }>;\n    /**\n     * Called when the event title is clicked\n     */\n    eventClicked: EventEmitter<{\n        event: CalendarEvent;\n    }>;\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent>;\n    /**\n     * @hidden\n     */\n    days: WeekDay[];\n    /**\n     * @hidden\n     */\n    hours: DayViewHour[];\n    /**\n     * @hidden\n     */\n    eventRows: WeekViewEventRow[];\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n    /**\n     * @hidden\n     */\n    currentResize: {\n        originalOffset: number;\n        originalSpan: number;\n        edge: string;\n    };\n    /**\n     * @hidden\n     */\n    validateDrag: Function;\n    /**\n     * @hidden\n     */\n    validateResize: Function;\n    /**\n     * @hidden\n     */\n    constructor(cdr: ChangeDetectorRef, locale: string);\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    getDayColumnWidth(eventRowContainer: HTMLElement): number;\n    private refreshHeader;\n    private refreshBody;\n    private refreshHourGrid;\n    private refreshAll;\n}\n"]}