{"version":3,"file":"CalendarWeekView.d.ts","sources":["CalendarWeekView.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { CalendarEvent, CalendarEventTimesChangedEvent, DayViewHour, WeekDay, WeekViewEventRow } from '../../../utils/calendar-utils/CalendarUtils';\r\n/**\r\n * Shows all events on a given week. Example usage:\r\n *\r\n * ```typescript\r\n * &lt;novo-calendar-week\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\"&gt;\r\n * &lt;/novo-calendar-week&gt;\r\n * ```\r\n */\r\nexport declare class NovoCalendarWeekViewElement implements OnChanges, OnInit, OnDestroy {\r\n    private cdr;\r\n    /**\r\n     * The current view date\r\n     */\r\n    viewDate: Date;\r\n    /**\r\n     * An array of events to display on view\r\n     */\r\n    events: CalendarEvent[];\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n     */\r\n    excludeDays: number[];\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    refresh: Subject<any>;\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    locale: string;\r\n    /**\r\n     * The placement of the event tooltip\r\n     */\r\n    tooltipPosition: string;\r\n    /**\r\n     * The start number of the week\r\n     */\r\n    weekStartsOn: number;\r\n    /**\r\n     * A custom template to use to replace the header\r\n     */\r\n    headerTemplate: TemplateRef<any>;\r\n    /**\r\n     * A custom template to use for week view events\r\n     */\r\n    eventTemplate: TemplateRef<any>;\r\n    /**\r\n     * The precision to display events.\r\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\r\n     */\r\n    precision: 'days' | 'minutes';\r\n    /**\r\n     * The number of segments in an hour. Must be <= 6\r\n     */\r\n    hourSegments: number;\r\n    /**\r\n     * The day start hours in 24 hour time. Must be 0-23\r\n     */\r\n    dayStartHour: number;\r\n    /**\r\n     * The day start minutes. Must be 0-59\r\n     */\r\n    dayStartMinute: number;\r\n    /**\r\n     * The day end hours in 24 hour time. Must be 0-23\r\n     */\r\n    dayEndHour: number;\r\n    /**\r\n     * The day end minutes. Must be 0-59\r\n     */\r\n    dayEndMinute: number;\r\n    /**\r\n     * A custom template to use to replace the hour segment\r\n     */\r\n    hourSegmentTemplate: TemplateRef<any>;\r\n    /**\r\n     * Called when an hour segment is clicked\r\n     */\r\n    hourSegmentClicked: EventEmitter<{\r\n        date: Date;\r\n    }>;\r\n    /**\r\n     * Called when a header week day is clicked\r\n     */\r\n    dayClicked: EventEmitter<{\r\n        date: Date;\r\n    }>;\r\n    /**\r\n     * Called when the event title is clicked\r\n     */\r\n    eventClicked: EventEmitter<{\r\n        event: CalendarEvent;\r\n    }>;\r\n    /**\r\n     * Called when an event is resized or dragged and dropped\r\n     */\r\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent>;\r\n    /**\r\n     * @hidden\r\n     */\r\n    days: WeekDay[];\r\n    /**\r\n     * @hidden\r\n     */\r\n    hours: DayViewHour[];\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventRows: WeekViewEventRow[];\r\n    /**\r\n     * @hidden\r\n     */\r\n    refreshSubscription: Subscription;\r\n    /**\r\n     * @hidden\r\n     */\r\n    currentResize: {\r\n        originalOffset: number;\r\n        originalSpan: number;\r\n        edge: string;\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateDrag: Function;\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateResize: Function;\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr: ChangeDetectorRef, locale: string);\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit(): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes: any): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy(): void;\r\n    getDayColumnWidth(eventRowContainer: HTMLElement): number;\r\n    private refreshHeader;\r\n    private refreshBody;\r\n    private refreshHourGrid;\r\n    private refreshAll;\r\n}\r\n"]}