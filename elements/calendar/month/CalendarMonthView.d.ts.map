{"version":3,"file":"CalendarMonthView.d.ts","sources":["CalendarMonthView.d.ts"],"names":[],"mappingssourcesContent":["import { OnChanges, EventEmitter, ChangeDetectorRef, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { CalendarEvent, WeekDay, MonthView, MonthViewDay, CalendarEventTimesChangedEvent } from '../../../utils/calendar-utils/CalendarUtils';\nimport { Subject, Subscription } from 'rxjs';\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```\n * &lt;novo-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-month-view&gt;\n * ```\n */\nexport declare class NovoCalendarMonthViewElement implements OnChanges, OnInit, OnDestroy {\n    private cdr;\n    /**\n     * The current view date\n     */\n    viewDate: Date;\n    /**\n     * An array of events to display on view\n     */\n    events: CalendarEvent[];\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n    excludeDays: number[];\n    /**\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\n     */\n    dayModifier: Function;\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    refresh: Subject<any>;\n    /**\n     * The locale used to format dates\n     */\n    locale: string;\n    /**\n     * The placement of the event tooltip\n     */\n    tooltipPosition: string;\n    /**\n     * The start number of the week\n     */\n    weekStartsOn: number;\n    /**\n     * A custom template to use to replace the header\n     */\n    headerTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use to replace the day cell\n     */\n    cellTemplate: TemplateRef<any>;\n    /**\n     * Called when the day cell is clicked\n     */\n    dayClicked: EventEmitter<{\n        day: MonthViewDay;\n    }>;\n    /**\n     * Called when the event title is clicked\n     */\n    eventClicked: EventEmitter<{\n        day: any;\n        event: CalendarEvent;\n    }>;\n    /**\n     * Called when an event is dragged and dropped\n     */\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent>;\n    viewDateChange: EventEmitter<Date>;\n    /**\n     * @hidden\n     */\n    columnHeaders: WeekDay[];\n    /**\n     * @hidden\n     */\n    view: MonthView;\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n    /**\n     * @hidden\n     */\n    constructor(cdr: ChangeDetectorRef, locale: string);\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    eventDropped(day: MonthViewDay, event: CalendarEvent): void;\n    private refreshHeader;\n    private refreshBody;\n    refreshAll(): void;\n}\n"]}