{"version":3,"file":"CalendarMonthView.d.ts","sources":["CalendarMonthView.d.ts"],"names":[],"mappingssourcesContent":["import { OnChanges, EventEmitter, ChangeDetectorRef, OnInit, OnDestroy, TemplateRef } from '@angular/core';\r\nimport { CalendarEvent, WeekDay, MonthView, MonthViewDay, CalendarEventTimesChangedEvent } from '../../../utils/calendar-utils/CalendarUtils';\r\nimport { Subject, Subscription } from 'rxjs';\r\n/**\r\n * Shows all events on a given month. Example usage:\r\n *\r\n * ```\r\n * &lt;novo-calendar-month-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\"&gt;\r\n * &lt;/novo-calendar-month-view&gt;\r\n * ```\r\n */\r\nexport declare class NovoCalendarMonthViewElement implements OnChanges, OnInit, OnDestroy {\r\n    private cdr;\r\n    /**\r\n     * The current view date\r\n     */\r\n    viewDate: Date;\r\n    /**\r\n     * An array of events to display on view\r\n     */\r\n    events: CalendarEvent[];\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n     */\r\n    excludeDays: number[];\r\n    /**\r\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\r\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\r\n     */\r\n    dayModifier: Function;\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    refresh: Subject<any>;\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    locale: string;\r\n    /**\r\n     * The placement of the event tooltip\r\n     */\r\n    tooltipPosition: string;\r\n    /**\r\n     * The start number of the week\r\n     */\r\n    weekStartsOn: number;\r\n    /**\r\n     * A custom template to use to replace the header\r\n     */\r\n    headerTemplate: TemplateRef<any>;\r\n    /**\r\n     * A custom template to use to replace the day cell\r\n     */\r\n    cellTemplate: TemplateRef<any>;\r\n    /**\r\n     * Called when the day cell is clicked\r\n     */\r\n    dayClicked: EventEmitter<{\r\n        day: MonthViewDay;\r\n    }>;\r\n    /**\r\n     * Called when the event title is clicked\r\n     */\r\n    eventClicked: EventEmitter<{\r\n        day: any;\r\n        event: CalendarEvent;\r\n    }>;\r\n    /**\r\n     * Called when an event is dragged and dropped\r\n     */\r\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent>;\r\n    viewDateChange: EventEmitter<Date>;\r\n    /**\r\n     * @hidden\r\n     */\r\n    columnHeaders: WeekDay[];\r\n    /**\r\n     * @hidden\r\n     */\r\n    view: MonthView;\r\n    /**\r\n     * @hidden\r\n     */\r\n    refreshSubscription: Subscription;\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr: ChangeDetectorRef, locale: string);\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit(): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes: any): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(day: MonthViewDay, event: CalendarEvent): void;\r\n    private refreshHeader;\r\n    private refreshBody;\r\n    refreshAll(): void;\r\n}\r\n"]}