{"version":3,"file":"DateTimePicker.d.ts","sources":["DateTimePicker.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport declare class NovoDateTimePickerElement implements ControlValueAccessor {\n    labels: NovoLabelService;\n    private element;\n    minYear: any;\n    maxYear: any;\n    start: any;\n    end: any;\n    military: any;\n    weekStart: number;\n    onSelect: EventEmitter<any>;\n    componentTabState: string;\n    selectedLabel: string;\n    hours: string;\n    minutes: string;\n    meridian: string;\n    datePickerValue: Date;\n    timePickerValue: Date;\n    model: any;\n    _onChange: Function;\n    _onTouched: Function;\n    constructor(labels: NovoLabelService, element: ElementRef);\n    toggleView(tab: string): void;\n    setDateLabels(value: Date): void;\n    setTimeLabels(value: Date): void;\n    onDateSelected(event: {\n        month?: any;\n        year?: any;\n        day?: any;\n        date?: Date;\n    }): void;\n    onTimeSelected(event: {\n        hours?: number;\n        minutes?: number;\n        meridian?: string;\n        date?: Date;\n        text?: string;\n    }): void;\n    createFullDateValue(datePickerValue: Date, timePickerValue: Date): Date;\n    writeValue(model: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n}\n"]}