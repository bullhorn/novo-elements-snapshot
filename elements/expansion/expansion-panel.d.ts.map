{"version":3,"file":"expansion-panel.d.ts","sources":["expansion-panel.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { AnimationEvent } from '@angular/animations';\r\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\r\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { AfterContentInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges, ViewContainerRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { NovoAccordion } from './accordion';\r\nimport { NovoExpansionPanelContent } from './expansion-panel-content';\r\n/** NovoExpansionPanel's states. */\r\nexport declare type NovoExpansionPanelState = 'expanded' | 'collapsed';\r\n/**\r\n * `<novo-expansion-panel>`\r\n *\r\n * This component can be used as a single element to show expandable content, or as one of\r\n * multiple children of an element with the NovoAccordion directive attached.\r\n */\r\nexport declare class NovoExpansionPanel extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\r\n    private _viewContainerRef;\r\n    disabled: boolean;\r\n    expanded: boolean;\r\n    /** Whether the toggle indicator should be hidden. */\r\n    get hideToggle(): boolean;\r\n    set hideToggle(value: boolean);\r\n    private _hideToggle;\r\n    get padding(): boolean;\r\n    set padding(value: boolean);\r\n    private _padding;\r\n    opened: EventEmitter<void>;\r\n    closed: EventEmitter<void>;\r\n    expandedChange: EventEmitter<boolean>;\r\n    /** Stream that emits for changes in `@Input` properties. */\r\n    readonly _inputChanges: Subject<SimpleChanges>;\r\n    /** Optionally defined accordion the expansion panel belongs to. */\r\n    accordion: NovoAccordion;\r\n    /** Content that will be rendered lazily. */\r\n    _lazyContent: NovoExpansionPanelContent;\r\n    /** Portal holding the user's content. */\r\n    _portal: TemplatePortal;\r\n    /** ID for the associated header element. Used for a11y labelling. */\r\n    _headerId: string;\r\n    constructor(accordion: NovoAccordion, _changeDetectorRef: ChangeDetectorRef, _uniqueSelectionDispatcher: UniqueSelectionDispatcher, _viewContainerRef: ViewContainerRef);\r\n    /** Whether the expansion indicator should be hidden. */\r\n    _getHideToggle(): boolean;\r\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\r\n    _hasSpacing(): boolean;\r\n    /** Gets the expanded state string. */\r\n    _getExpandedState(): NovoExpansionPanelState;\r\n    ngAfterContentInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    _bodyAnimation(event: AnimationEvent): void;\r\n}\r\nexport declare class NovoExpansionPanelActionRow {\r\n}\r\n"]}