{"version":3,"file":"pagination.d.ts","sources":["pagination.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\nimport { NovoSimplePaginationEvent } from './interfaces';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoActivityTableState } from './state';\nexport declare class NovoSimpleTablePagination implements OnInit, OnDestroy {\n    private changeDetectorRef;\n    labels: NovoLabelService;\n    private state;\n    private _initialized;\n    get page(): number;\n    set page(page: number);\n    _page: number;\n    get length(): number;\n    set length(length: number);\n    _length: number;\n    get pageSize(): number;\n    set pageSize(pageSize: number);\n    private _pageSize;\n    get pageSizeOptions(): number[];\n    set pageSizeOptions(pageSizeOptions: number[]);\n    private _pageSizeOptions;\n    pageChange: EventEmitter<NovoSimplePaginationEvent>;\n    displayedPageSizeOptions: number[];\n    longRangeLabel: string;\n    shortRangeLabel: string;\n    private resetSubscription;\n    constructor(changeDetectorRef: ChangeDetectorRef, labels: NovoLabelService, state: NovoActivityTableState);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    nextPage(): void;\n    previousPage(): void;\n    hasPreviousPage(): boolean;\n    hasNextPage(): boolean;\n    changePageSize(pageSize: number): void;\n    private updateDisplayedPageSizeOptions;\n    private emitPageEvent;\n}\n"]}