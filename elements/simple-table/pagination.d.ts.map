{"version":3,"file":"pagination.d.ts","sources":["pagination.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { NovoSimplePaginationEvent } from './interfaces';\r\nimport { NovoLabelService } from '../../services/novo-label-service';\r\nimport { NovoActivityTableState } from './state';\r\nexport declare class NovoSimpleTablePagination implements OnInit, OnDestroy {\r\n    private changeDetectorRef;\r\n    labels: NovoLabelService;\r\n    private state;\r\n    private _initialized;\r\n    get page(): number;\r\n    set page(page: number);\r\n    _page: number;\r\n    get length(): number;\r\n    set length(length: number);\r\n    _length: number;\r\n    get pageSize(): number;\r\n    set pageSize(pageSize: number);\r\n    private _pageSize;\r\n    get pageSizeOptions(): number[];\r\n    set pageSizeOptions(pageSizeOptions: number[]);\r\n    private _pageSizeOptions;\r\n    pageChange: EventEmitter<NovoSimplePaginationEvent>;\r\n    displayedPageSizeOptions: number[];\r\n    longRangeLabel: string;\r\n    shortRangeLabel: string;\r\n    private resetSubscription;\r\n    constructor(changeDetectorRef: ChangeDetectorRef, labels: NovoLabelService, state: NovoActivityTableState);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    nextPage(): void;\r\n    previousPage(): void;\r\n    hasPreviousPage(): boolean;\r\n    hasNextPage(): boolean;\r\n    changePageSize(pageSize: number): void;\r\n    private updateDisplayedPageSizeOptions;\r\n    private emitPageEvent;\r\n}\r\n"]}