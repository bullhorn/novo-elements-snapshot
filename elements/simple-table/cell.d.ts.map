{"version":3,"file":"cell.d.ts","sources":["cell.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { CdkCell, CdkCellDef, CdkColumnDef, CdkHeaderCell, CdkHeaderCellDef } from '@angular/cdk/table';\r\nimport { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { NovoLabelService } from '../../services/novo-label-service';\r\nimport { SimpleTableActionColumn, SimpleTableActionColumnOption, SimpleTableColumn } from './interfaces';\r\nimport { NovoSelection } from './sort';\r\n/** Workaround for https://github.com/angular/angular/issues/17849 */\r\nexport declare const _NovoCellDef: typeof CdkCellDef;\r\nexport declare const _NovoHeaderCellDef: typeof CdkHeaderCellDef;\r\nexport declare const _NovoColumnDef: typeof CdkColumnDef;\r\nexport declare const _NovoHeaderCell: typeof CdkHeaderCell;\r\nexport declare const _NovoCell: typeof CdkCell;\r\nexport declare class NovoSimpleCellDef extends _NovoCellDef {\r\n}\r\nexport declare class NovoSimpleHeaderCellDef extends _NovoHeaderCellDef {\r\n}\r\nexport declare class NovoSimpleColumnDef extends _NovoColumnDef {\r\n    name: string;\r\n}\r\nexport declare class NovoSimpleHeaderCell<T> extends _NovoHeaderCell implements OnInit {\r\n    private elementRef;\r\n    private renderer;\r\n    role: string;\r\n    column: SimpleTableColumn<T>;\r\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2);\r\n    ngOnInit(): void;\r\n}\r\nexport declare class NovoSimpleEmptyHeaderCell extends _NovoHeaderCell {\r\n    role: string;\r\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2);\r\n}\r\nexport declare class NovoSimpleCheckboxHeaderCell extends _NovoHeaderCell implements OnDestroy {\r\n    private _selection;\r\n    role: string;\r\n    selectAll: boolean;\r\n    private selectAllSubscription;\r\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2, ref: ChangeDetectorRef, _selection: NovoSelection);\r\n    ngOnDestroy(): void;\r\n    toggle(value: boolean): void;\r\n}\r\nexport declare class NovoSimpleCell<T> extends _NovoCell implements OnInit {\r\n    private elementRef;\r\n    private renderer;\r\n    role: string;\r\n    row: any;\r\n    column: SimpleTableColumn<T>;\r\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2);\r\n    ngOnInit(): void;\r\n    onClick(event: MouseEvent): void;\r\n}\r\nexport declare class NovoSimpleCheckboxCell extends _NovoCell implements OnDestroy, OnInit {\r\n    columnDef: CdkColumnDef;\r\n    _selection: NovoSelection;\r\n    role: string;\r\n    row: any;\r\n    index: any;\r\n    selected: boolean;\r\n    private selectAllSubscription;\r\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2, _selection: NovoSelection);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    toggle(value: boolean): void;\r\n}\r\nexport declare class NovoSimpleActionCell<T> extends _NovoCell implements OnInit {\r\n    private elementRef;\r\n    private renderer;\r\n    labels: NovoLabelService;\r\n    role: string;\r\n    row: T;\r\n    column: SimpleTableActionColumn<T>;\r\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2, labels: NovoLabelService);\r\n    ngOnInit(): void;\r\n    isDisabled(check: SimpleTableActionColumn<T> | SimpleTableActionColumnOption<T>, row: T): boolean;\r\n}\r\n"]}