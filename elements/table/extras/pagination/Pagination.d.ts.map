{"version":3,"file":"Pagination.d.ts","sources":["Pagination.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\ninterface Page {\n    num: number;\n    text: string;\n    active: boolean;\n}\nexport declare class Pagination implements OnInit, OnChanges {\n    labels: NovoLabelService;\n    page: number;\n    totalItems: number;\n    itemsPerPage: number;\n    rowOptions: any;\n    label: string;\n    get disablePageSelection(): boolean;\n    set disablePageSelection(val: boolean);\n    pageChange: EventEmitter<any>;\n    itemsPerPageChange: EventEmitter<any>;\n    onPageChange: EventEmitter<any>;\n    pageSelectDisabled: boolean;\n    maxPagesDisplayed: number;\n    totalPages: number;\n    pages: Array<Page>;\n    constructor(labels: NovoLabelService);\n    ngOnInit(): void;\n    ngOnChanges(changes?: SimpleChanges): void;\n    getDefaultRowOptions(): {\n        value: number;\n        label: string;\n    }[];\n    onPageSizeChanged(event: any): void;\n    selectPage(page: number, event?: MouseEvent): void;\n    noPrevious(): boolean;\n    noNext(): boolean;\n    makePage(num: number, text: string, isActive: boolean): Page;\n    getPages(currentPage: number, totalPages: number): Page[];\n    calculateTotalPages(): number;\n}\nexport {};\n"]}