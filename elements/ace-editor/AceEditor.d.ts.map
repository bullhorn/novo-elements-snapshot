{"version":3,"file":"AceEditor.d.ts","sources":["AceEditor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport 'brace/index';\nimport 'brace/theme/chrome';\nimport 'brace/mode/javascript';\nimport 'brace/ext/language_tools.js';\nexport declare class NovoAceEditor implements ControlValueAccessor, OnInit, OnDestroy {\n    private elementRef;\n    set theme(theme: any);\n    set options(options: any);\n    set mode(mode: any);\n    name: string;\n    blur: EventEmitter<any>;\n    focus: EventEmitter<any>;\n    private _options;\n    private _theme;\n    private _mode;\n    private text;\n    private oldText;\n    private editor;\n    private onChange;\n    private onTouched;\n    constructor(elementRef: ElementRef);\n    ngOnDestroy(): void;\n    ngOnInit(): void;\n    private initializeEditor;\n    private initializeOptions;\n    private initializeEvents;\n    private updateText;\n    private setText;\n    private setOptions;\n    private setTheme;\n    private setMode;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n}\n"]}