{"version":3,"file":"AceEditor.d.ts","sources":["AceEditor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport 'brace/index';\r\nimport 'brace/theme/chrome';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/ext/language_tools.js';\r\nexport declare class NovoAceEditor implements ControlValueAccessor, OnInit, OnDestroy {\r\n    private elementRef;\r\n    set theme(theme: any);\r\n    set options(options: any);\r\n    set mode(mode: any);\r\n    name: string;\r\n    blur: EventEmitter<any>;\r\n    focus: EventEmitter<any>;\r\n    private _options;\r\n    private _theme;\r\n    private _mode;\r\n    private text;\r\n    private oldText;\r\n    private editor;\r\n    private onChange;\r\n    private onTouched;\r\n    constructor(elementRef: ElementRef);\r\n    ngOnDestroy(): void;\r\n    ngOnInit(): void;\r\n    private initializeEditor;\r\n    private initializeOptions;\r\n    private initializeEvents;\r\n    private updateText;\r\n    private setText;\r\n    private setOptions;\r\n    private setTheme;\r\n    private setMode;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n}\r\n"]}