{"version":3,"file":"data-table-pagination.component.d.ts","sources":["data-table-pagination.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { IDataTablePaginationEvent } from '../interfaces';\r\nimport { NovoLabelService } from '../../../services/novo-label-service';\r\nimport { DataTableState } from '../state/data-table-state.service';\r\nexport declare class NovoDataTablePagination<T> implements OnInit, OnDestroy {\r\n    private changeDetectorRef;\r\n    labels: NovoLabelService;\r\n    private state;\r\n    theme: string;\r\n    get page(): number;\r\n    set page(page: number);\r\n    _page: number;\r\n    get pageSize(): number;\r\n    set pageSize(pageSize: number);\r\n    private _pageSize;\r\n    dataFeatureId: string;\r\n    get pageSizeOptions(): any[];\r\n    set pageSizeOptions(pageSizeOptions: any[]);\r\n    private _pageSizeOptions;\r\n    get length(): number;\r\n    set length(length: number);\r\n    _length: number;\r\n    pageChange: EventEmitter<IDataTablePaginationEvent>;\r\n    displayedPageSizeOptions: {\r\n        value: string;\r\n        label: string;\r\n    }[];\r\n    longRangeLabel: string;\r\n    shortRangeLabel: string;\r\n    pages: {\r\n        number: number;\r\n        text: string;\r\n        active: boolean;\r\n    }[];\r\n    private resetSubscription;\r\n    totalPages: number;\r\n    private _initialized;\r\n    constructor(changeDetectorRef: ChangeDetectorRef, labels: NovoLabelService, state: DataTableState<T>);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    selectPage(page: any): void;\r\n    nextPage(): void;\r\n    previousPage(): void;\r\n    hasPreviousPage(): boolean;\r\n    hasNextPage(): boolean;\r\n    changePageSize(pageSize: number): void;\r\n    private updateDisplayedPageSizeOptions;\r\n    private emitPageEvent;\r\n    private calculateTotalPages;\r\n    private makePage;\r\n    private getPages;\r\n}\r\n"]}