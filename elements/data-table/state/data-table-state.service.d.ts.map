{"version":3,"file":"data-table-state.service.d.ts","sources":["data-table-state.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IDataTableChangeEvent, IDataTableFilter, IDataTableSort } from '../interfaces';\nexport declare class DataTableState<T> {\n    selectionSource: Subject<unknown>;\n    paginationSource: Subject<unknown>;\n    sortFilterSource: Subject<unknown>;\n    resetSource: Subject<unknown>;\n    expandSource: Subject<unknown>;\n    dataLoaded: Subject<unknown>;\n    sort: IDataTableSort;\n    filter: IDataTableFilter | IDataTableFilter[];\n    page: number;\n    pageSize: number;\n    globalSearch: string;\n    selectedRows: Map<string, T>;\n    expandedRows: Set<string>;\n    outsideFilter: any;\n    isForceRefresh: boolean;\n    updates: EventEmitter<IDataTableChangeEvent>;\n    get userFiltered(): boolean;\n    get userFilteredInternal(): boolean;\n    get selected(): T[];\n    reset(fireUpdate?: boolean, persistUserFilters?: boolean): void;\n    clearSort(fireUpdate?: boolean): void;\n    clearFilter(fireUpdate?: boolean): void;\n    onSelectionChange(): void;\n    onExpandChange(targetId?: number): void;\n    onPaginationChange(isPageSizeChange: boolean, pageSize: number): void;\n    onSortFilterChange(): void;\n    setInitialSortFilter(preferences: any): void;\n}\n"]}