{"version":3,"file":"data-table-state.service.d.ts","sources":["data-table-state.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { IDataTableChangeEvent, IDataTableFilter, IDataTableSort } from '../interfaces';\r\nexport declare class DataTableState<T> {\r\n    selectionSource: Subject<unknown>;\r\n    paginationSource: Subject<unknown>;\r\n    sortFilterSource: Subject<unknown>;\r\n    resetSource: Subject<unknown>;\r\n    expandSource: Subject<unknown>;\r\n    dataLoaded: Subject<unknown>;\r\n    sort: IDataTableSort;\r\n    filter: IDataTableFilter | IDataTableFilter[];\r\n    page: number;\r\n    pageSize: number;\r\n    globalSearch: string;\r\n    selectedRows: Map<string, T>;\r\n    expandedRows: Set<string>;\r\n    outsideFilter: any;\r\n    isForceRefresh: boolean;\r\n    updates: EventEmitter<IDataTableChangeEvent>;\r\n    get userFiltered(): boolean;\r\n    get userFilteredInternal(): boolean;\r\n    get selected(): T[];\r\n    reset(fireUpdate?: boolean, persistUserFilters?: boolean): void;\r\n    clearSort(fireUpdate?: boolean): void;\r\n    clearFilter(fireUpdate?: boolean): void;\r\n    onSelectionChange(): void;\r\n    onExpandChange(targetId?: number): void;\r\n    onPaginationChange(isPageSizeChange: boolean, pageSize: number): void;\r\n    onSortFilterChange(): void;\r\n    setInitialSortFilter(preferences: any): void;\r\n}\r\n"]}