{"version":3,"file":"data-table.pipes.d.ts","sources":["data-table.pipes.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PipeTransform } from '@angular/core';\r\nimport { IDataTableColumn } from './interfaces';\r\nimport { NovoLabelService } from '../../services/novo-label-service';\r\nexport declare function interpolateCell<T>(value: any, col: IDataTableColumn<T>): string;\r\nexport declare class DataTableInterpolatePipe<T> implements PipeTransform {\r\n    transform(value: any, column: IDataTableColumn<T>): string;\r\n}\r\nexport declare class DateTableDateRendererPipe<T> implements PipeTransform {\r\n    private labels;\r\n    constructor(labels: NovoLabelService);\r\n    transform(value: any, column: IDataTableColumn<T>): string;\r\n}\r\nexport declare class DateTableDateTimeRendererPipe<T> implements PipeTransform {\r\n    private labels;\r\n    constructor(labels: NovoLabelService);\r\n    transform(value: any, column: IDataTableColumn<T>): string;\r\n}\r\nexport declare class DateTableTimeRendererPipe<T> implements PipeTransform {\r\n    private labels;\r\n    constructor(labels: NovoLabelService);\r\n    transform(value: any, column: IDataTableColumn<T>): string;\r\n}\r\nexport declare class DateTableNumberRendererPipe<T> implements PipeTransform {\r\n    private labels;\r\n    constructor(labels: NovoLabelService);\r\n    transform(value: any, column: IDataTableColumn<T>, isPercent?: boolean): string;\r\n}\r\nexport declare class DataTableBigDecimalRendererPipe<T> implements PipeTransform {\r\n    private labels;\r\n    constructor(labels: NovoLabelService);\r\n    transform(value: any, column: IDataTableColumn<T>): string;\r\n}\r\nexport declare class DateTableCurrencyRendererPipe<T> implements PipeTransform {\r\n    private labels;\r\n    constructor(labels: NovoLabelService);\r\n    transform(value: any, column: IDataTableColumn<T>): string;\r\n}\r\n"]}