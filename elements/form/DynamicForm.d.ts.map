{"version":3,"file":"DynamicForm.d.ts","sources":["DynamicForm.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ElementRef, OnChanges, OnInit, QueryList, SimpleChanges } from '@angular/core';\r\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\r\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\r\nimport { NovoFieldset, NovoFormGroup } from './FormInterfaces';\r\nexport declare class NovoFieldsetHeaderElement {\r\n    title: string;\r\n    icon: string;\r\n}\r\nexport declare class NovoFieldsetElement {\r\n    controls: Array<any>;\r\n    form: any;\r\n    title: string;\r\n    icon: string;\r\n    index: number;\r\n    autoFocus: boolean;\r\n    isEmbedded: boolean;\r\n    isInlineEmbedded: boolean;\r\n    hidden: boolean;\r\n}\r\nexport declare class NovoDynamicFormElement implements OnChanges, OnInit, AfterContentInit {\r\n    private element;\r\n    private templates;\r\n    controls: Array<any>;\r\n    fieldsets: Array<NovoFieldset>;\r\n    form: NovoFormGroup;\r\n    layout: string;\r\n    hideNonRequiredFields: boolean;\r\n    autoFocusFirstField: boolean;\r\n    customTemplates: QueryList<NovoTemplate>;\r\n    private fieldsAlreadyHidden;\r\n    allFieldsRequired: boolean;\r\n    allFieldsNotRequired: boolean;\r\n    showingAllFields: boolean;\r\n    showingRequiredFields: boolean;\r\n    numControls: number;\r\n    constructor(element: ElementRef, templates: NovoTemplateService);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes?: SimpleChanges): void;\r\n    ngAfterContentInit(): void;\r\n    showAllFields(): void;\r\n    showOnlyRequired(hideRequiredWithValue: any): void;\r\n    get values(): any;\r\n    get isValid(): boolean;\r\n    updatedValues(): any;\r\n    forceValidation(): void;\r\n}\r\n"]}