{"version":3,"file":"DynamicForm.d.ts","sources":["DynamicForm.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ElementRef, OnChanges, OnInit, QueryList, SimpleChanges } from '@angular/core';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nimport { NovoFieldset, NovoFormGroup } from './FormInterfaces';\nexport declare class NovoFieldsetHeaderElement {\n    title: string;\n    icon: string;\n}\nexport declare class NovoFieldsetElement {\n    controls: Array<any>;\n    form: any;\n    title: string;\n    icon: string;\n    index: number;\n    autoFocus: boolean;\n    isEmbedded: boolean;\n    isInlineEmbedded: boolean;\n    hidden: boolean;\n}\nexport declare class NovoDynamicFormElement implements OnChanges, OnInit, AfterContentInit {\n    private element;\n    private templates;\n    controls: Array<any>;\n    fieldsets: Array<NovoFieldset>;\n    form: NovoFormGroup;\n    layout: string;\n    hideNonRequiredFields: boolean;\n    autoFocusFirstField: boolean;\n    customTemplates: QueryList<NovoTemplate>;\n    private fieldsAlreadyHidden;\n    allFieldsRequired: boolean;\n    allFieldsNotRequired: boolean;\n    showingAllFields: boolean;\n    showingRequiredFields: boolean;\n    numControls: number;\n    constructor(element: ElementRef, templates: NovoTemplateService);\n    ngOnInit(): void;\n    ngOnChanges(changes?: SimpleChanges): void;\n    ngAfterContentInit(): void;\n    showAllFields(): void;\n    showOnlyRequired(hideRequiredWithValue: any): void;\n    get values(): any;\n    get isValid(): boolean;\n    updatedValues(): any;\n    forceValidation(): void;\n}\n"]}