{"version":3,"file":"FileInput.d.ts","sources":["FileInput.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, OnDestroy, OnChanges, ViewContainerRef, TemplateRef, SimpleChanges, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { NovoDragulaService } from '../../../../elements/dragula/DragulaService';\nexport declare class NovoFileInputElement implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n    private element;\n    labels: NovoLabelService;\n    private dragula;\n    fileInput: TemplateRef<any>;\n    fileOutput: TemplateRef<any>;\n    container: ViewContainerRef;\n    name: string;\n    multiple: boolean;\n    disabled: boolean;\n    placeholder: string;\n    layoutOptions: {\n        order?: string;\n        download?: boolean;\n        edit?: boolean;\n        labelStyle?: string;\n        draggable?: boolean;\n        customActions: boolean;\n        removable?: boolean;\n        customValidation?: {\n            action: string;\n            fn: Function;\n        }[];\n        removableWhenNew?: boolean;\n    };\n    value: Array<any>;\n    dataFeatureId: string;\n    edit: EventEmitter<any>;\n    save: EventEmitter<any>;\n    delete: EventEmitter<any>;\n    upload: EventEmitter<any>;\n    elements: Array<any>;\n    files: Array<any>;\n    model: any;\n    active: boolean;\n    commands: any;\n    visible: boolean;\n    target: any;\n    fileOutputBag: string;\n    onModelChange: Function;\n    onModelTouched: Function;\n    constructor(element: ElementRef, labels: NovoLabelService, dragula: NovoDragulaService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes?: SimpleChanges): void;\n    updateLayout(): void;\n    insertTemplatesBasedOnLayout(): any;\n    initializeDragula(): void;\n    setInitialFileList(): void;\n    dragEnterHandler(event: any): void;\n    dragLeaveHandler(event: any): void;\n    dragOverHandler(event: any): void;\n    dropHandler(event: any): void;\n    writeValue(model: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    check(event: any): void;\n    validate(files: any): boolean;\n    process(filelist: any): void;\n    download(file: any): void;\n    remove(file: any): void;\n    readFile(file: any): Promise<unknown>;\n    customEdit(file: any): void;\n    customSave(file: any): void;\n    customDelete(file: any): void;\n    customCheck(event: any): void;\n    setDisabledState(disabled: boolean): void;\n}\n"]}