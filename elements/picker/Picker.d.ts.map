{"version":3,"file":"Picker.d.ts","sources":["Picker.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ComponentRef, ElementRef, EventEmitter, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\r\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\r\nimport { NovoControlConfig } from '../form/FormControls';\r\n/**\r\n * @description This class is the directive definition of the Picker. If you add and attribute of `picker` to an input,\r\n * it will create an instance of the picker which wraps the input in all of the picker HTML elements and functionality.\r\n * Picker should be added as a two-way bound ngModel instance `[(picker)]=\"\"` in order to have the picker options\r\n * dynamically populate.\r\n */\r\nexport declare class NovoPickerElement implements OnInit {\r\n    element: ElementRef;\r\n    private componentUtils;\r\n    private ref;\r\n    results: ViewContainerRef;\r\n    config: NovoControlConfig['config'];\r\n    placeholder: string;\r\n    clearValueOnSelect: boolean;\r\n    closeOnSelect: boolean;\r\n    selected: Array<any>;\r\n    appendToBody: boolean;\r\n    parentScrollSelector: string;\r\n    parentScrollAction: string;\r\n    containerClass: string;\r\n    side: string;\r\n    autoSelectFirstOption: boolean;\r\n    overrideElement: ElementRef;\r\n    set disablePickerInput(v: boolean);\r\n    get disablePickerInput(): boolean;\r\n    private _disablePickerInput;\r\n    changed: EventEmitter<any>;\r\n    select: EventEmitter<any>;\r\n    focus: EventEmitter<any>;\r\n    blur: EventEmitter<any>;\r\n    typing: EventEmitter<any>;\r\n    container: NovoOverlayTemplateComponent;\r\n    private input;\r\n    term: string;\r\n    resultsComponent: any;\r\n    popup: ComponentRef<any>;\r\n    _value: any;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    constructor(element: ElementRef, componentUtils: ComponentUtils, ref: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    private onDebouncedKeyup;\r\n    openPanel(): void;\r\n    closePanel(): void;\r\n    get panelOpen(): boolean;\r\n    private show;\r\n    onKeyDown(event: KeyboardEvent): void;\r\n    clearValue(wipeTerm: any): void;\r\n    /**\r\n     * @description When the input's focus event is called this method calls the debounced function that displays the\r\n     * results.\r\n     */\r\n    onFocus(event: any): void;\r\n    showResults(term?: any): void;\r\n    hideResults(err?: any): void;\r\n    onOverlayClosed(): void;\r\n    get value(): any;\r\n    set value(selected: any);\r\n    checkTerm(event: any): void;\r\n    onTouched(event?: Event): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(disabled: boolean): void;\r\n}\r\n"]}