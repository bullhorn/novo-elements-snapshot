{"version":3,"file":"EntityPickerResults.d.ts","sources":["EntityPickerResults.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\r\nimport { NovoLabelService } from '../../../../services/novo-label-service';\r\nexport declare class EntityPickerResult {\r\n    labels: NovoLabelService;\r\n    match: any;\r\n    term: any;\r\n    constructor(labels: NovoLabelService);\r\n    /**\r\n     * @description This function captures the whole query string and replace it with the string that will be used to\r\n     * match.\r\n     */\r\n    escapeRegexp(queryToEscape: any): any;\r\n    /**\r\n     * @description This function should return a <strong>-tag wrapped HTML string.\r\n     */\r\n    highlight(match: any, query: any): any;\r\n    getIconForResult(result?: any): string;\r\n    renderTimestamp(date?: any): string;\r\n    getNameForResult(result?: any): string;\r\n}\r\nexport declare class EntityPickerResults extends BasePickerResults {\r\n    labels: NovoLabelService;\r\n    select: EventEmitter<any>;\r\n    constructor(element: ElementRef, labels: NovoLabelService, ref: ChangeDetectorRef);\r\n    get hasNonErrorMessage(): boolean;\r\n    getListElement(): any;\r\n    selectMatch(event?: any, item?: any): boolean;\r\n}\r\n"]}