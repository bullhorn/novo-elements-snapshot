{"version":3,"file":"CKEditor.d.ts","sources":["CKEditor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, NgZone, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n/**\r\n * CKEditor component\r\n * Usage :\r\n *  <novo-editor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></novo-editor>\r\n */\r\nexport declare class NovoCKEditorElement implements OnDestroy, AfterViewInit, ControlValueAccessor {\r\n    private zone;\r\n    config: any;\r\n    debounce: any;\r\n    name: any;\r\n    minimal: any;\r\n    startupFocus: boolean;\r\n    fileBrowserImageUploadUrl: string;\r\n    disabled: boolean;\r\n    change: EventEmitter<any>;\r\n    ready: EventEmitter<any>;\r\n    blur: EventEmitter<any>;\r\n    focus: EventEmitter<any>;\r\n    paste: EventEmitter<any>;\r\n    loaded: EventEmitter<any>;\r\n    host: any;\r\n    _value: string;\r\n    instance: any;\r\n    debounceTimeout: any;\r\n    constructor(zone: NgZone);\r\n    get value(): string;\r\n    set value(v: string);\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    updateValue(value: any): void;\r\n    private ckeditorInit;\r\n    getBaseConfig(): {\r\n        [key: string]: any;\r\n    };\r\n    writeValue(value: any): void;\r\n    onChange(value?: any): void;\r\n    onTouched(event?: any): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState(disabled: boolean): void;\r\n    insertText(text: any): void;\r\n}\r\n"]}