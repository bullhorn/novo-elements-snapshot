{"version":3,"file":"CKEditor.d.ts","sources":["CKEditor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, NgZone, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n/**\n * CKEditor component\n * Usage :\n *  <novo-editor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></novo-editor>\n */\nexport declare class NovoCKEditorElement implements OnDestroy, AfterViewInit, ControlValueAccessor {\n    private zone;\n    config: any;\n    debounce: any;\n    name: any;\n    minimal: any;\n    startupFocus: boolean;\n    fileBrowserImageUploadUrl: string;\n    disabled: boolean;\n    change: EventEmitter<any>;\n    ready: EventEmitter<any>;\n    blur: EventEmitter<any>;\n    focus: EventEmitter<any>;\n    paste: EventEmitter<any>;\n    loaded: EventEmitter<any>;\n    host: any;\n    _value: string;\n    instance: any;\n    debounceTimeout: any;\n    constructor(zone: NgZone);\n    get value(): string;\n    set value(v: string);\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    updateValue(value: any): void;\n    private ckeditorInit;\n    getBaseConfig(): {\n        [key: string]: any;\n    };\n    writeValue(value: any): void;\n    onChange(value?: any): void;\n    onTouched(event?: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(disabled: boolean): void;\n    insertText(text: any): void;\n}\n"]}