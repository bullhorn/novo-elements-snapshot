{"version":3,"file":"Dropdown.d.ts","sources":["Dropdown.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, QueryList } from '@angular/core';\r\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\r\nexport declare class NovoDropdownElement implements OnInit, OnDestroy {\r\n    element: ElementRef;\r\n    private ref;\r\n    parentScrollSelector: string;\r\n    parentScrollAction: string;\r\n    containerClass: string;\r\n    side: 'default' | 'right' | 'above-below' | 'right-above-below' | 'center' | 'bottom' | 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right';\r\n    scrollStrategy: 'reposition' | 'block' | 'close';\r\n    height: number;\r\n    width: number;\r\n    appendToBody: boolean;\r\n    toggled: EventEmitter<boolean>;\r\n    overlay: NovoOverlayTemplateComponent;\r\n    clickHandler: any;\r\n    closeHandler: any;\r\n    parentScrollElement: Element;\r\n    private _items;\r\n    private _textItems;\r\n    private activeIndex;\r\n    private filterTerm;\r\n    private filterTermTimeout;\r\n    constructor(element: ElementRef, ref: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    set items(items: QueryList<NovoItemElement>);\r\n    /** BEGIN: Convenient Panel Methods. */\r\n    get panelOpen(): boolean;\r\n    openPanel(): void;\r\n    closePanel(): void;\r\n    togglePanel(): void;\r\n    /** END: Convenient Panel Methods. */\r\n    onKeyDown(event: KeyboardEvent): void;\r\n    onOverlayKeyDown(event: KeyboardEvent): void;\r\n    private scrollToActive;\r\n}\r\nexport declare class NovoItemElement {\r\n    private dropdown;\r\n    element: ElementRef;\r\n    disabled: boolean;\r\n    keepOpen: boolean;\r\n    action: EventEmitter<any>;\r\n    active: boolean;\r\n    constructor(dropdown: NovoDropdownElement, element: ElementRef);\r\n    onClick(event: Event): void;\r\n}\r\nexport declare class NovoDropdownListElement implements AfterContentInit {\r\n    private dropdown;\r\n    items: QueryList<NovoItemElement>;\r\n    constructor(dropdown: NovoDropdownElement);\r\n    ngAfterContentInit(): void;\r\n}\r\nexport declare class NovoDropDownItemHeaderElement {\r\n}\r\n"]}