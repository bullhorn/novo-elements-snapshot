{"version":3,"file":"QuickNoteResults.d.ts","sources":["QuickNoteResults.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PickerResults } from '../../../picker/extras/picker-results/PickerResults';\r\nimport { NovoLabelService } from '../../../../services/novo-label-service';\r\nexport declare class QuickNoteResults extends PickerResults {\r\n    labels: NovoLabelService;\r\n    taggingMode: string;\r\n    constructor(element: ElementRef, labels: NovoLabelService, ref: ChangeDetectorRef);\r\n    get term(): any;\r\n    set term(value: any);\r\n    search(term: string, taggingMode: any): Observable<any>;\r\n    /**\r\n     * @name structureArray\r\n     * @param collection - the data once getData resolves it\r\n     *\r\n     * @description This function structures an array of nodes into an array of objects with a\r\n     * 'name' field by default.\r\n     */\r\n    structureArray(collection: Array<any>): {\r\n        value: any;\r\n        label: any;\r\n    }[];\r\n    /**\r\n     * @name selectMatch\r\n     * @param event\r\n     *\r\n     * @description\r\n     */\r\n    selectMatch(event: KeyboardEvent): boolean;\r\n}\r\n"]}