{"version":3,"file":"QuickNoteResults.d.ts","sources":["QuickNoteResults.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PickerResults } from '../../../picker/extras/picker-results/PickerResults';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nexport declare class QuickNoteResults extends PickerResults {\n    labels: NovoLabelService;\n    taggingMode: string;\n    constructor(element: ElementRef, labels: NovoLabelService, ref: ChangeDetectorRef);\n    get term(): any;\n    set term(value: any);\n    search(term: string, taggingMode: any): Observable<any>;\n    /**\n     * @name structureArray\n     * @param collection - the data once getData resolves it\n     *\n     * @description This function structures an array of nodes into an array of objects with a\n     * 'name' field by default.\n     */\n    structureArray(collection: Array<any>): {\n        value: any;\n        label: any;\n    }[];\n    /**\n     * @name selectMatch\n     * @param event\n     *\n     * @description\n     */\n    selectMatch(event: KeyboardEvent): boolean;\n}\n"]}