{"version":3,"file":"Overlay.d.ts","sources":["Overlay.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ConnectedPositionStrategy, Overlay, OverlayConfig, OverlayRef, ScrollStrategy } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subscription } from 'rxjs';\nexport declare class NovoOverlayTemplateComponent implements OnDestroy {\n    protected overlay: Overlay;\n    protected viewContainerRef: ViewContainerRef;\n    protected zone: NgZone;\n    protected changeDetectorRef: ChangeDetectorRef;\n    protected document: any;\n    id: string;\n    template: TemplateRef<any>;\n    panel: ElementRef;\n    position: 'default' | 'right' | 'above-below' | 'right-above-below' | 'center' | 'bottom' | 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right';\n    scrollStrategy: 'reposition' | 'block' | 'close';\n    width: number;\n    height: number;\n    closeOnSelect: boolean;\n    select: EventEmitter<any>;\n    closing: EventEmitter<any>;\n    overlayRef: OverlayRef | null;\n    portal: TemplatePortal<any>;\n    protected closingActionsSubscription: Subscription;\n    private _parent;\n    constructor(overlay: Overlay, viewContainerRef: ViewContainerRef, zone: NgZone, changeDetectorRef: ChangeDetectorRef, document: any);\n    ngOnDestroy(): void;\n    get panelOpen(): boolean;\n    set parent(value: ElementRef);\n    get parent(): ElementRef;\n    openPanel(): void;\n    closePanel(): void;\n    onClosingAction(event: any): void;\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions(): Observable<any>;\n    /** Stream of clicks outside of the autocomplete panel. */\n    protected get outsideClickStream(): Observable<any>;\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    protected subscribeToClosingActions(): Subscription;\n    protected createOverlay(template: TemplateRef<any>): void;\n    protected destroyOverlay(): void;\n    protected getOverlayConfig(): OverlayConfig;\n    /**\n     * Supports the following position strategies:\n     * 'default', 'right', 'bottom', 'center', 'bottom-left', 'bottom-right', 'top-left', 'top-right'\n     */\n    protected getPosition(): ConnectedPositionStrategy;\n    protected getScrollStrategy(): ScrollStrategy;\n    protected checkSizes(): void;\n    protected getConnectedElement(): ElementRef;\n    protected getHostWidth(): number;\n}\n"]}