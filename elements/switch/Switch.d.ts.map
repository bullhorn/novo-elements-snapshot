{"version":3,"file":"Switch.d.ts","sources":["Switch.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare class NovoSwitchElement implements ControlValueAccessor {\n    private ref;\n    theme: string;\n    onChange: EventEmitter<any>;\n    _disabled: boolean;\n    model: boolean;\n    onModelChange: Function;\n    onModelTouched: Function;\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    constructor(ref: ChangeDetectorRef);\n    onKeydown(event: any): void;\n    toggle(event: any): void;\n    writeValue(model: boolean): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n}\n"]}