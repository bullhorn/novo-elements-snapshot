{"version":3,"sources":["../../../projects/novo-elements/src/utils/Helpers.ts","../../../projects/novo-elements/src/elements/ace-editor/AceEditor.ts","../../../projects/novo-elements/src/elements/ace-editor/AceEditor.module.ts","../../../projects/novo-elements/src/pipes/decode-uri/DecodeURI.ts","../../../projects/novo-elements/src/pipes/default/Default.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/novo-elements/src/pipes/group-by/GroupBy.ts","../../../projects/novo-elements/src/pipes/iso8601/iso-date-range.pipe.ts","../../../projects/novo-elements/src/pipes/iso8601/iso-date.pipe.ts","../../../projects/novo-elements/src/pipes/iso8601/iso-time-range.pipe.ts","../../../projects/novo-elements/src/pipes/iso8601/iso-time.pipe.ts","../../../projects/novo-elements/src/pipes/plural/Plural.ts","../../../projects/novo-elements/src/utils/app-bridge/AppBridge.ts","../../../projects/novo-elements/src/pipes/Pipes.module.ts","../../../projects/novo-elements/src/utils/calendar-utils/CalendarUtils.ts","../../../projects/novo-elements/src/utils/component-utils/ComponentUtils.ts","../../../projects/novo-elements/src/utils/countries/Countries.ts","../../../projects/novo-elements/src/utils/decorators/BooleanInput.ts","../../../projects/novo-elements/src/utils/deferred/Deferred.ts","../../../projects/novo-elements/src/utils/notifier/notifier.util.ts","../../../projects/novo-elements/src/elements/form/controls/BaseControl.ts","../../../projects/novo-elements/src/elements/form/controls/ace-editor/AceEditorControl.ts","../../../projects/novo-elements/src/elements/form/FormValidators.ts","../../../projects/novo-elements/src/elements/form/controls/address/AddressControl.ts","../../../projects/novo-elements/src/elements/form/controls/check-list/CheckListControl.ts","../../../projects/novo-elements/src/elements/form/controls/checkbox/CheckboxControl.ts","../../../projects/novo-elements/src/elements/form/controls/custom/CustomControl.ts","../../../projects/novo-elements/src/elements/form/controls/date/DateControl.ts","../../../projects/novo-elements/src/elements/form/controls/date-time/DateTimeControl.ts","../../../projects/novo-elements/src/elements/form/controls/editor/EditorControl.ts","../../../projects/novo-elements/src/elements/form/controls/file/FileControl.ts","../../../projects/novo-elements/src/elements/form/controls/grouped/GroupedControl.ts","../../../projects/novo-elements/src/elements/form/controls/native-select/NativeSelectControl.ts","../../../projects/novo-elements/src/elements/form/controls/picker/PickerControl.ts","../../../projects/novo-elements/src/elements/form/controls/quick-note/QuickNoteControl.ts","../../../projects/novo-elements/src/elements/form/controls/radio/RadioControl.ts","../../../projects/novo-elements/src/elements/form/controls/read-only/ReadOnlyControl.ts","../../../projects/novo-elements/src/elements/form/controls/select/SelectControl.ts","../../../projects/novo-elements/src/elements/form/controls/switch/SwitchControl.ts","../../../projects/novo-elements/src/elements/form/controls/text-area/TextAreaControl.ts","../../../projects/novo-elements/src/elements/form/controls/textbox/TextBoxControl.ts","../../../projects/novo-elements/src/elements/form/controls/tiles/TilesControl.ts","../../../projects/novo-elements/src/elements/form/controls/time/TimeControl.ts","../../../projects/novo-elements/src/elements/form/controls/timezone/TimezoneControl.ts","../../../projects/novo-elements/src/elements/form/controls/ControlFactory.ts","../../../projects/novo-elements/src/elements/form/NovoFormControl.ts","../../../projects/novo-elements/src/elements/form/NovoFormGroup.ts","../../../projects/novo-elements/src/services/novo-label-service.ts","../../../projects/novo-elements/src/elements/picker/extras/base-picker-results/BasePickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/entity-picker-results/EntityPickerResults.ts","../../../projects/novo-elements/src/services/options/OptionsService.ts","../../../projects/novo-elements/src/utils/form-utils/FormUtils.ts","../../../projects/novo-elements/src/utils/key-codes/Key.ts","../../../projects/novo-elements/src/utils/outside-click/OutsideClick.ts","../../../projects/novo-elements/src/elements/button/Button.ts","../../../projects/novo-elements/src/elements/button/Button.module.ts","../../../projects/novo-elements/src/elements/tooltip/Tooltip.component.ts","../../../projects/novo-elements/src/elements/tooltip/Tooltip.directive.ts","../../../projects/novo-elements/src/elements/tooltip/Tooltip.module.ts","../../../projects/novo-elements/src/elements/agenda/common/AgendaDateChange.ts","../../../projects/novo-elements/src/elements/agenda/common/EventTypeLegend.ts","../../../projects/novo-elements/src/elements/agenda/day/AgendaAllDayEvent.ts","../../../projects/novo-elements/src/elements/agenda/day/AgendaDayEvent.ts","../../../projects/novo-elements/src/elements/agenda/day/AgendaDayView.ts","../../../projects/novo-elements/src/elements/agenda/day/AgendaHourSegment.ts","../../../projects/novo-elements/src/elements/agenda/month/AgendaMonthDay.ts","../../../projects/novo-elements/src/elements/agenda/month/AgendaMonthHeader.ts","../../../projects/novo-elements/src/elements/agenda/month/AgendaMonthView.ts","../../../projects/novo-elements/src/elements/agenda/pipe/DayOfMonth.pipe.ts","../../../projects/novo-elements/src/elements/agenda/pipe/EndOfWeekDisplayPipe.pipe.ts","../../../projects/novo-elements/src/elements/agenda/pipe/Hours.pipe.ts","../../../projects/novo-elements/src/elements/agenda/pipe/Month.pipe.ts","../../../projects/novo-elements/src/elements/agenda/pipe/MonthDay.pipe.ts","../../../projects/novo-elements/src/elements/agenda/pipe/Weekday.pipe.ts","../../../projects/novo-elements/src/elements/agenda/pipe/Year.pipe.ts","../../../projects/novo-elements/src/elements/agenda/week/AgendaWeekEvent.ts","../../../projects/novo-elements/src/elements/agenda/week/AgendaWeekHeader.ts","../../../projects/novo-elements/src/elements/agenda/week/AgendaWeekView.ts","../../../projects/novo-elements/src/elements/agenda/Agenda.module.ts","../../../projects/novo-elements/src/elements/aside/aside-ref.ts","../../../projects/novo-elements/src/elements/aside/aside.animation.ts","../../../projects/novo-elements/src/elements/aside/aside.component.ts","../../../projects/novo-elements/src/elements/aside/aside.service.ts","../../../projects/novo-elements/src/elements/aside/aside.module.ts","../../../projects/novo-elements/src/elements/avatar/Avatar.ts","../../../projects/novo-elements/src/elements/avatar/AvatarStack.ts","../../../projects/novo-elements/src/elements/avatar/Avatar.module.ts","../../../projects/novo-elements/src/elements/breadcrumbs/Breadcrumb.service.ts","../../../projects/novo-elements/src/elements/breadcrumbs/Breadcrumb.ts","../../../projects/novo-elements/src/elements/breadcrumbs/breadcrumb-item/BreadcrumbItem.ts","../../../projects/novo-elements/src/elements/common/theme/theme-options.ts","../../../projects/novo-elements/src/elements/common/directives/accent.directive.ts","../../../projects/novo-elements/src/elements/common/directives/bg.directive.ts","../../../projects/novo-elements/src/elements/common/directives/border.directive.ts","../../../projects/novo-elements/src/elements/common/directives/color.directive.ts","../../../projects/novo-elements/src/elements/common/directives/fill.directive.ts","../../../projects/novo-elements/src/elements/common/directives/flex.directive.ts","../../../projects/novo-elements/src/elements/common/directives/space.directive.ts","../../../projects/novo-elements/src/elements/common/directives/theme.directive.ts","../../../projects/novo-elements/src/elements/common/novo-template/novo-template.directive.ts","../../../projects/novo-elements/src/elements/common/selection/pseudo-checkbox/pseudo-checkbox.component.ts","../../../projects/novo-elements/src/elements/common/selection/index.ts","../../../projects/novo-elements/src/elements/common/mixins/disabled.mixin.ts","../../../projects/novo-elements/src/elements/common/option/option-parent.ts","../../../projects/novo-elements/src/elements/common/option/optgroup.component.ts","../../../projects/novo-elements/src/elements/common/option/option.component.ts","../../../projects/novo-elements/src/elements/common/option/index.ts","../../../projects/novo-elements/src/elements/common/typography/base/base-text.component.ts","../../../projects/novo-elements/src/elements/common/typography/caption/caption.component.ts","../../../projects/novo-elements/src/elements/common/typography/label/label.component.ts","../../../projects/novo-elements/src/elements/common/typography/link/link.component.ts","../../../projects/novo-elements/src/elements/common/typography/text/text.component.ts","../../../projects/novo-elements/src/elements/common/typography/title/title.component.ts","../../../projects/novo-elements/src/elements/common/common.module.ts","../../../projects/novo-elements/src/elements/common/error/error-options.ts","../../../projects/novo-elements/src/elements/common/mixins/color.mixin.ts","../../../projects/novo-elements/src/elements/common/mixins/error-state.mixin.ts","../../../projects/novo-elements/src/elements/common/mixins/overlay.mixin.ts","../../../projects/novo-elements/src/elements/common/mixins/required.mixin.ts","../../../projects/novo-elements/src/elements/common/mixins/size.mixin.ts","../../../projects/novo-elements/src/elements/common/mixins/tab-index.mixin.ts","../../../projects/novo-elements/src/elements/common/overlay/Overlay.ts","../../../projects/novo-elements/src/elements/common/overlay/Overlay.module.ts","../../../projects/novo-elements/src/elements/dropdown/Dropdown.ts","../../../projects/novo-elements/src/elements/dropdown/Dropdown.module.ts","../../../projects/novo-elements/src/elements/icon/Icon.ts","../../../projects/novo-elements/src/elements/icon/Icon.module.ts","../../../projects/novo-elements/src/elements/list/List.ts","../../../projects/novo-elements/src/elements/list/List.module.ts","../../../projects/novo-elements/src/elements/loading/Loading.ts","../../../projects/novo-elements/src/elements/loading/Loading.module.ts","../../../projects/novo-elements/src/elements/switch/Switch.ts","../../../projects/novo-elements/src/elements/switch/Switch.module.ts","../../../projects/novo-elements/src/elements/picker/extras/checklist-picker-results/ChecklistPickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/distributionlist-picker-results/DistributionListPickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/grouped-multi-picker-results/GroupedMultiPickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/mixed-multi-picker-results/MixedMultiPickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/picker-results/PickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/skills-picker-results/SkillsSpecialtyPickerResults.ts","../../../projects/novo-elements/src/elements/picker/extras/workers-comp-codes-picker-results/WorkersCompCodesPickerResults.ts","../../../projects/novo-elements/src/elements/picker/Picker.ts","../../../projects/novo-elements/src/elements/picker/Picker.module.ts","../../../projects/novo-elements/src/elements/search/SearchBox.ts","../../../projects/novo-elements/src/elements/search/SearchBox.module.ts","../../../projects/novo-elements/src/elements/breadcrumbs/Breadcrumb.module.ts","../../../projects/novo-elements/src/elements/calendar/strategies/default-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/strategies/multi-date-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/strategies/range-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/strategies/week-selection.strategy.ts","../../../projects/novo-elements/src/elements/calendar/calendar.component.ts","../../../projects/novo-elements/src/elements/calendar/month-select/month-select.component.ts","../../../projects/novo-elements/src/elements/calendar/month-view/month-view.component.ts","../../../projects/novo-elements/src/elements/calendar/year-select/year-select.component.ts","../../../projects/novo-elements/src/elements/calendar/Calendar.module.ts","../../../projects/novo-elements/src/elements/card/Card.ts","../../../projects/novo-elements/src/elements/card/Card.module.ts","../../../projects/novo-elements/src/elements/category-dropdown/CategoryDropdown.ts","../../../projects/novo-elements/src/elements/tabs/Tabs.ts","../../../projects/novo-elements/src/elements/tabs/Tabs.module.ts","../../../projects/novo-elements/src/elements/category-dropdown/CategoryDropdown.module.ts","../../../projects/novo-elements/src/elements/checkbox/Checkbox.ts","../../../projects/novo-elements/src/elements/checkbox/CheckList.ts","../../../projects/novo-elements/src/elements/checkbox/Checkbox.module.ts","../../../projects/novo-elements/src/elements/chips/Chip.ts","../../../projects/novo-elements/src/elements/chips/ChipDefaults.ts","../../../projects/novo-elements/src/elements/field/error/error.ts","../../../projects/novo-elements/src/elements/field/field-control.ts","../../../projects/novo-elements/src/elements/field/hint/hint.ts","../../../projects/novo-elements/src/elements/field/field.ts","../../../projects/novo-elements/src/elements/field/autocomplete/autocomplete.component.ts","../../../projects/novo-elements/src/elements/field/fieldset.ts","../../../projects/novo-elements/src/elements/field/formats/date-format.ts","../../../projects/novo-elements/src/elements/field/formats/base-format.ts","../../../projects/novo-elements/src/elements/field/formats/time-format.ts","../../../projects/novo-elements/src/elements/field/input.ts","../../../projects/novo-elements/src/elements/field/picker.directive.ts","../../../projects/novo-elements/src/elements/field/toggle/picker-toggle.component.ts","../../../projects/novo-elements/src/elements/field/field.module.ts","../../../projects/novo-elements/src/elements/chips/ChipList.ts","../../../projects/novo-elements/src/elements/chips/ChipInput.ts","../../../projects/novo-elements/src/elements/chips/Chips.ts","../../../projects/novo-elements/src/elements/chips/RowChips.ts","../../../projects/novo-elements/src/elements/chips/Chips.module.ts","../../../projects/novo-elements/src/elements/ckeditor/CKEditor.ts","../../../projects/novo-elements/src/elements/ckeditor/CKEditor.module.ts","../../../projects/novo-elements/src/elements/color-picker/color-input.component.ts","../../../projects/novo-elements/src/utils/color-utils/ColorUtils.ts","../../../projects/novo-elements/src/elements/color-picker/color-picker.component.ts","../../../projects/novo-elements/src/elements/color-picker/color-swatch.component.ts","../../../projects/novo-elements/src/elements/color-picker/color-picker.module.ts","../../../projects/novo-elements/src/elements/toast/Toast.ts","../../../projects/novo-elements/src/elements/toast/ToastService.ts","../../../projects/novo-elements/src/elements/data-table/sort-filter/sort-direction.ts","../../../projects/novo-elements/src/elements/data-table/services/data-table-filter-utils.ts","../../../projects/novo-elements/src/elements/data-table/state/data-table-state.service.ts","../../../projects/novo-elements/src/elements/data-table/sort-filter/sort-button.animations.ts","../../../projects/novo-elements/src/elements/data-table/sort-filter/sort-button.component.ts","../../../projects/novo-elements/src/elements/data-table/sort-filter/sort-filter.directive.ts","../../../projects/novo-elements/src/elements/data-table/cell-headers/data-table-header-cell.component.ts","../../../projects/novo-elements/src/elements/data-table/data-table.source.ts","../../../projects/novo-elements/src/elements/data-table/services/static-data-table.service.ts","../../../projects/novo-elements/src/elements/data-table/data-table.component.ts","../../../projects/novo-elements/src/elements/data-table/cell-headers/data-table-checkbox-header-cell.component.ts","../../../projects/novo-elements/src/elements/data-table/cell-headers/data-table-expand-header-cell.component.ts","../../../projects/novo-elements/src/elements/data-table/cell-headers/data-table-header-cell.directive.ts","../../../projects/novo-elements/src/elements/data-table/cells/data-table-cell.component.ts","../../../projects/novo-elements/src/elements/data-table/cells/data-table-checkbox-cell.component.ts","../../../projects/novo-elements/src/elements/data-table/cells/data-table-expand-cell.component.ts","../../../projects/novo-elements/src/elements/data-table/data-table-clear-button.component.ts","../../../projects/novo-elements/src/elements/data-table/data-table-expand.directive.ts","../../../projects/novo-elements/src/elements/date-picker/DatePicker.ts","../../../projects/novo-elements/src/services/date-format/DateFormat.ts","../../../projects/novo-elements/src/elements/date-picker/DatePickerInput.ts","../../../projects/novo-elements/src/elements/date-picker/DateRangeInput.ts","../../../projects/novo-elements/src/elements/date-picker/MultiDateInput.ts","../../../projects/novo-elements/src/elements/date-picker/DatePicker.module.ts","../../../projects/novo-elements/src/elements/flex/Box.ts","../../../projects/novo-elements/src/elements/flex/Flex.ts","../../../projects/novo-elements/src/elements/flex/Grid.ts","../../../projects/novo-elements/src/elements/flex/Flex.module.ts","../../../projects/novo-elements/src/elements/dragula/DragulaService.ts","../../../projects/novo-elements/src/elements/dragula/Dragula.ts","../../../projects/novo-elements/src/elements/dragula/Dragula.module.ts","../../../projects/novo-elements/src/elements/divider/divider.component.ts","../../../projects/novo-elements/src/elements/divider/divider.module.ts","../../../projects/novo-elements/src/elements/select/Select.ts","../../../projects/novo-elements/src/elements/select/Select.module.ts","../../../projects/novo-elements/src/elements/form/extras/address/Address.ts","../../../projects/novo-elements/src/elements/form/extras/file/extras/file/File.ts","../../../projects/novo-elements/src/elements/form/extras/file/FileInput.ts","../../../projects/novo-elements/src/elements/form/extras/FormExtras.module.ts","../../../projects/novo-elements/src/elements/tiles/Tiles.ts","../../../projects/novo-elements/src/elements/tiles/Tiles.module.ts","../../../projects/novo-elements/src/elements/data-table/data-table.pipes.ts","../../../projects/novo-elements/src/elements/data-table/pagination/data-table-pagination.component.ts","../../../projects/novo-elements/src/elements/data-table/rows/data-table-header-row.component.ts","../../../projects/novo-elements/src/elements/data-table/rows/data-table-row.component.ts","../../../projects/novo-elements/src/elements/data-table/data-table.module.ts","../../../projects/novo-elements/src/elements/data-table/services/remote-data-table.service.ts","../../../projects/novo-elements/src/elements/date-time-picker/DateTimePicker.ts","../../../projects/novo-elements/src/services/data-provider/CollectionEvent.ts","../../../projects/novo-elements/src/services/data-provider/ArrayCollection.ts","../../../projects/novo-elements/src/services/data-provider/PagedArrayCollection.ts","../../../projects/novo-elements/src/services/global/global.service.ts","../../../projects/novo-elements/src/services/security/Security.ts","../../../projects/novo-elements/src/services/storage/storage.service.ts","../../../projects/novo-elements/src/services/template/NovoTemplateService.ts","../../../projects/novo-elements/src/elements/time-picker/TimePicker.ts","../../../projects/novo-elements/src/elements/time-picker/TimePickerInput.ts","../../../projects/novo-elements/src/elements/time-picker/TimePicker.module.ts","../../../projects/novo-elements/src/elements/date-time-picker/DateTimePickerInput.ts","../../../projects/novo-elements/src/elements/date-time-picker/DateTimePicker.module.ts","../../../projects/novo-elements/src/elements/expansion/accordion.ts","../../../projects/novo-elements/src/elements/expansion/expansion-animations.ts","../../../projects/novo-elements/src/elements/expansion/expansion-panel-content.ts","../../../projects/novo-elements/src/elements/expansion/expansion-panel.ts","../../../projects/novo-elements/src/elements/expansion/expansion-panel-header.ts","../../../projects/novo-elements/src/elements/expansion/expansion.module.ts","../../../projects/novo-elements/src/elements/modal/modal-ref.ts","../../../projects/novo-elements/src/elements/modal/modal.animation.ts","../../../projects/novo-elements/src/elements/modal/modal-container.component.ts","../../../projects/novo-elements/src/elements/modal/modal.service.ts","../../../projects/novo-elements/src/elements/form/FieldInteractionModals.ts","../../../projects/novo-elements/src/elements/form/FieldInteractionApi.ts","../../../projects/novo-elements/src/elements/form/Control.ts","../../../projects/novo-elements/src/elements/form/ControlGroup.ts","../../../projects/novo-elements/src/elements/form/ControlTemplates.ts","../../../projects/novo-elements/src/elements/form/DynamicForm.ts","../../../projects/novo-elements/src/elements/form/Form.ts","../../../projects/novo-elements/src/elements/header/Header.ts","../../../projects/novo-elements/src/elements/header/Header.module.ts","../../../projects/novo-elements/src/elements/modal/modal.component.ts","../../../projects/novo-elements/src/elements/modal/modal.module.ts","../../../projects/novo-elements/src/elements/quick-note/extras/quick-note-results/QuickNoteResults.ts","../../../projects/novo-elements/src/elements/quick-note/QuickNote.ts","../../../projects/novo-elements/src/elements/quick-note/QuickNote.module.ts","../../../projects/novo-elements/src/elements/radio/tokens.ts","../../../projects/novo-elements/src/elements/radio/Radio.ts","../../../projects/novo-elements/src/elements/radio/RadioGroup.ts","../../../projects/novo-elements/src/elements/radio/Radio.module.ts","../../../projects/novo-elements/src/elements/tip-well/TipWell.ts","../../../projects/novo-elements/src/elements/tip-well/TipWell.module.ts","../../../projects/novo-elements/src/elements/form/Form.module.ts","../../../projects/novo-elements/src/elements/layout/layout.constants.ts","../../../projects/novo-elements/src/elements/layout/content/layout-content.component.ts","../../../projects/novo-elements/src/elements/layout/rail/rail.component.ts","../../../projects/novo-elements/src/elements/layout/sidenav/sidenav.animations.ts","../../../projects/novo-elements/src/elements/layout/sidenav/sidenav.component.ts","../../../projects/novo-elements/src/elements/layout/container/layout-container.component.ts","../../../projects/novo-elements/src/elements/layout/layout.module.ts","../../../projects/novo-elements/src/elements/menu/menu-content.component.ts","../../../projects/novo-elements/src/elements/menu/menu-item.directive.ts","../../../projects/novo-elements/src/elements/menu/menu.service.ts","../../../projects/novo-elements/src/elements/menu/menu.tokens.ts","../../../projects/novo-elements/src/elements/menu/menu.component.ts","../../../projects/novo-elements/src/elements/menu/menu.directive.ts","../../../projects/novo-elements/src/elements/menu/menu.module.ts","../../../projects/novo-elements/src/elements/multi-picker/MultiPicker.ts","../../../projects/novo-elements/src/elements/multi-picker/MultiPicker.module.ts","../../../projects/novo-elements/src/elements/non-ideal-state/NonIdealState.ts","../../../projects/novo-elements/src/elements/non-ideal-state/NonIdealState.module.ts","../../../projects/novo-elements/src/elements/places/places.service.ts","../../../projects/novo-elements/src/elements/places/places.component.ts","../../../projects/novo-elements/src/elements/places/places.module.ts","../../../projects/novo-elements/src/elements/popover/PopOverContent.ts","../../../projects/novo-elements/src/elements/popover/PopOver.ts","../../../projects/novo-elements/src/elements/progress/ProgressConstants.ts","../../../projects/novo-elements/src/elements/popover/PopOver.module.ts","../../../projects/novo-elements/src/elements/progress/ProgressBar.ts","../../../projects/novo-elements/src/elements/progress/Progress.ts","../../../projects/novo-elements/src/elements/progress/Progress.module.ts","../../../projects/novo-elements/src/elements/select-search/select-search-clear.directive.ts","../../../projects/novo-elements/src/elements/select-search/select-search.component.ts","../../../projects/novo-elements/src/elements/select-search/select-search.module.ts","../../../projects/novo-elements/src/elements/simple-table/activity-table-renderers.ts","../../../projects/novo-elements/src/elements/simple-table/state.ts","../../../projects/novo-elements/src/elements/simple-table/sort.ts","../../../projects/novo-elements/src/elements/simple-table/cell.ts","../../../projects/novo-elements/src/elements/simple-table/cell-header.ts","../../../projects/novo-elements/src/elements/simple-table/pagination.ts","../../../projects/novo-elements/src/elements/simple-table/row.ts","../../../projects/novo-elements/src/elements/simple-table/table-source.ts","../../../projects/novo-elements/src/elements/simple-table/table.ts","../../../projects/novo-elements/src/elements/simple-table/simple-table.module.ts","../../../projects/novo-elements/src/elements/slider/Slider.ts","../../../projects/novo-elements/src/elements/slider/Slider.module.ts","../../../projects/novo-elements/src/elements/stepper/step-label.component.ts","../../../projects/novo-elements/src/elements/stepper/step-header.component.ts","../../../projects/novo-elements/src/elements/stepper/stepper.animations.ts","../../../projects/novo-elements/src/elements/stepper/stepper.component.ts","../../../projects/novo-elements/src/elements/stepper/step-status.component.ts","../../../projects/novo-elements/src/elements/stepper/stepper-buttons.component.ts","../../../projects/novo-elements/src/elements/stepper/stepper.module.ts","../../../projects/novo-elements/src/elements/tabbed-group-picker/TabbedGroupPicker.ts","../../../projects/novo-elements/src/elements/tabbed-group-picker/TabbedGroupPicker.module.ts","../../../projects/novo-elements/src/elements/table/extras/base-renderer/BaseRenderer.ts","../../../projects/novo-elements/src/elements/table/extras/date-cell/DateCell.ts","../../../projects/novo-elements/src/elements/table/extras/dropdown-cell/DropdownCell.ts","../../../projects/novo-elements/src/elements/table/extras/keep-filter-focus/KeepFilterFocus.ts","../../../projects/novo-elements/src/elements/table/extras/pagination/Pagination.ts","../../../projects/novo-elements/src/elements/table/extras/percentage-cell/PercentageCell.ts","../../../projects/novo-elements/src/elements/table/extras/row-details/RowDetails.ts","../../../projects/novo-elements/src/elements/table/extras/table-actions/TableActions.ts","../../../projects/novo-elements/src/elements/table/extras/table-cell/TableCell.ts","../../../projects/novo-elements/src/elements/table/extras/table-filter/TableFilter.ts","../../../projects/novo-elements/src/elements/table/extras/table-footer/TableFooter.ts","../../../projects/novo-elements/src/elements/table/extras/table-header/TableHeader.ts","../../../projects/novo-elements/src/elements/table/extras/th-orderable/ThOrderable.ts","../../../projects/novo-elements/src/elements/table/extras/th-sortable/ThSortable.ts","../../../projects/novo-elements/src/elements/table/Table.ts","../../../projects/novo-elements/src/elements/table/extras/TableExtras.module.ts","../../../projects/novo-elements/src/elements/toast/Toast.module.ts","../../../projects/novo-elements/src/elements/table/Table.module.ts","../../../projects/novo-elements/src/elements/toolbar/toolbar.component.ts","../../../projects/novo-elements/src/elements/toolbar/toolbar.module.ts","../../../projects/novo-elements/src/elements/unless/Unless.ts","../../../projects/novo-elements/src/elements/unless/Unless.module.ts","../../../projects/novo-elements/src/elements/value/EntityList.ts","../../../projects/novo-elements/src/elements/value/Value.ts","../../../projects/novo-elements/src/elements/value/Render.ts","../../../projects/novo-elements/src/elements/value/Value.module.ts","../../../projects/novo-elements/src/novo-elements.module.ts","../../../projects/novo-elements/src/novo-elements.providers.ts","../../../projects/novo-elements/src/utils/key-codes/KeyCodes.ts"],"names":["Helpers","isTemplateRef","value","TemplateRef","swallowEvent","event","stopPropagation","preventDefault","interpolate","str","props","this","isDate","dateToObject","replace","original","key","keys","split","shift","length","undefined","k","interpolateWithFallback","formatString","data","Array","isArray","successes_1","failures_1","forEach","format","isSuccess","attempt","isEmpty","push","validateInterpolationProps","match","every","hasOwnProperty","substr","isObject","item","isString","obj","escapeString","isNumber","val","includeNegatives","numberRegex","test","isNaN","parseFloat","isBlank","isFunction","constructor","call","apply","Date","isIsoDate","toISOString","convertToArray","sortByField","fields","reverse","previous","current","i","field","first","second","getTime","toLowerCase","Number","filterByField","results","can","have","Function","includes","Object","subkey","min","max","any","some","v","all","not","indexOf","subvalue","JSON","stringify","RegExp","x","findAncestor","element","selector","parentElement","matches","deepClone","newArr","toString","startsWith","deepAssign","objs","_i","arguments","Error","target","assign","source","prop","targetArray_1","sourceItem","itemIndex","targetItem","is","getNextElementSibling","nextElementSibling","e","nextSibling","nodeType","date","dateObj","day","dayPeriod","era","hour","minute","month","weekday","year","Intl","DateTimeFormat","formatToParts","dateTimeFormatPart","type","Can","prototype","check","thing","binarySearch","array","compare","search","guess","Math","floor","comparison","ACE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NovoAceEditor","multi","elementRef","blur","EventEmitter","focus","_options","showPrintMargin","displayIndentGuides","_theme","_mode","text","onChange","_","onTouched","defineProperty","theme","setTheme","options","setOptions","mode","setMode","ngOnDestroy","editor","destroy","ngOnInit","initializeEditor","initializeOptions","initializeEvents","el","nativeElement","ace","edit","$blockScrolling","Infinity","_this","on","emit","updateText","newVal","getValue","oldText","setText","setValue","clearSelection","getSession","writeValue","registerOnChange","fn","registerOnTouched","Component","args","template","providers","ElementRef","Input","Output","NgModule","imports","CommonModule","declarations","exports","DecodeURIPipe","transform","encodedString","decodedString","decodeURIComponent","Pipe","name","Injectable","DefaultPipe","defaultValue","pure","extendStatics","d","b","setPrototypeOf","__proto__","p","__extends","TypeError","String","__","create","__decorate","decorators","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","next","done","__read","n","ar","error","__spread","concat","GroupByPipe","input","arr","input_1","input_1_1","map","IsoDateRangePipe","dates","_a","slice","IsoDatePipe","IsoTimeRangePipe","IsoTimePipe","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","restoreCase","word","token","toUpperCase","charAt","replaceWord","replaceMap","keepMap","rules","collection","len","index","words","result","sanitizeWord","Pluralize","pluralize","count","inclusive","singular","plural","addPluralRule","replacement","addSingularRule","addUncountableRule","addIrregularRule","single","one","many","PluralPipe","AppBridgeHandler","CalendarEventResponse","HTTP_VERBS","MESSAGE_TYPES","AppBridgeService","AppBridge","DevAppBridgeService","http","DevAppBridge","traceName","id","now","_registeredFrames","_handlers","_tracing","_eventListeners","postRobot","CONFIG","LOG_LEVEL","_setupHandlers","tracing","handle","handler","_trace","eventType","console","log","register","then","windowName","update","success","open","openList","findIndex","frame","splice","close","refresh","pin","httpGET","requestData","callback","relativeURL","httpPOST","httpPUT","httpDELETE","listener","send","packet","Promise","resolve","reject","OPEN","sendToParent","catch","err","OPEN_LIST","entityType","keywords","criteria","UPDATE","CLOSE","info","realPacket","REFRESH","ping","PING","PIN","REQUEST_DATA","CALLBACK","REGISTER","timeout","HTTP","verb","postData","putData","fireEvent","fireEventToChildren","fireEventToChild","HTMLIFrameElement","contentWindow","addEventListener","_super","cookie","getCookie","endpoints","parse","sessions","reduce","session","endpoint","baseURL","rest","get","withCredentials","toPromise","post","put","delete","cname","document","ca","substring","WEEKEND_DAY_NUMBERS","getExcludedDays","startDate","days","excluded","getDay","getWeekViewEventOffset","startOfWeek","_b","start","distance","dateFns.differenceInDays","getEventsInPeriod","events","periodStart","periodEnd","filter","eventStart","eventEnd","end","dateFns.isSameSecond","isEventIsPeriod","getEventsInTimeRange","dayStart","dayEnd","startOfView","dateFns.setMinutes","dateFns.setHours","dateFns.startOfDay","endOfView","dateFns.startOfMinute","dateFns.isAfter","dateFns.isBefore","getWeekDay","today","isPast","isToday","dateFns.isSameDay","isFuture","isWeekend","dateFns.getDay","getWeekViewHeader","viewDate","weekStartsOn","dateFns.startOfWeek","dateFns.addDays","getWeekView","_c","hourSegments","segmentHeight","startOfViewWeek","endOfViewWeek","dateFns.endOfWeek","maxRange","eventsMapped","offset","span","entry","startsBeforeWeek","endsAfterWeek","top","sort","itemA","itemB","startSecondsDiff","dateFns.differenceInSeconds","dateFns.endOfDay","hourHeightModifier","dateFns.differenceInMinutes","endDate","height","eventRows","allocatedEvents","otherRowEvents","nextEvent","totalEventsForRow","nextOffset_1","row","getMonthView","dateFns.startOfMonth","dateFns.endOfMonth","eventsInMonth","calEvents","inMonth","dateFns.isSameMonth","badgeTotal","totalDaysVisibleInWeek","rows","rowOffsets","getDayView","eventWidth","previousDayEvents","dayViewEvents","allDay","eventA","eventB","valueOf","startsBeforeDay","endsAfterDay","bottom","overlappingPreviousEvents","previousEvent","previousEventTop","previousEventBottom","left","dayEvent","width","allDayEvents","getDayViewHourGrid","hours","segmentDuration","startOfViewDay","segments","j","dateFns.addMinutes","dateFns.addHours","isStart","ComponentUtils","componentFactoryResolver","append","ComponentClass","location","onTop","componentFactory","resolveComponentFactory","parent","injector","createComponent","Injector","ComponentFactoryResolver","COUNTRIES","code","states","findByCountryId","find","country","getStateObjects","foundCountry","trim","getStates","state","BooleanInput","propertyKey","set","coerceBooleanProperty","Deferred","temp","promise","notifications","notify","message","isDevMode","warn","BaseControl","config","__type","__config","alwaysActive","validators","asyncValidators","label","checkboxLabel","required","hidden","encrypted","sortOrder","controlType","subType","metaType","placeholder","dirty","multiple","headerConfig","currencyFormat","associatedEntity","optionsType","forceClear","readOnly","disabled","enabled","layoutOptions","military","dateFormat","textMaskEnabled","maskOptions","allowInvalidDate","restrictFieldInteractions","highlighted","warning","Validators","maxlength","maxLength","minlength","minLength","closeOnSelect","interactions","dataSpecialization","dataType","appendToBody","parentScrollSelector","description","tooltip","tooltipPosition","tooltipSize","tooltipPreline","removeTooltipArrow","tooltipAutoPosition","customControlConfig","tipWell","startupFocus","fileBrowserImageUploadUrl","weekStart","disabledDateMessage","isEmbedded","isInlineEmbedded","AceEditorControl","FormValidators","showStateRequiredFlag","subfield","control","updated","countryName","pickerConfig","defaultOptions","maxInteger","integerTooLarge","minYear","maxDouble","MAX_SAFE_INTEGER","doubleTooLarge","isEmail","invalidEmail","isValidAddress","invalidAddressFields","maxlengthFields","returnVal","maxlengthError","valid_1","formValidity_1","ctrl","countryID","showCountryRequiredFlag","invalidAddress","invalidAddressForForm","AddressControl","CheckListControl","CheckboxControl","CustomControl","DateControl","DateTimeControl","EditorControl","minimal","FileControl","NativeSelectControl","PickerControl","TablePickerControl","QuickNoteControl","RadioControl","ReadOnlyControl","SelectControl","SwitchControl","TextAreaControl","TextBoxControl","getTextboxType","setValidators","TilesControl","TimeControl","TimezoneControl","buildTimezones","compareDate","listTimeZones","zone","timezone","findTimeZone","zonedTime","getZonedTime","formatZonedTime","option","prefix","a","offsetDelta","tz","resolvedOptions","timeZone","ControlFactory","NovoFormControl","displayValueChanges","valueHistory","initialValue","hasRequiredValidator","disable","enable","hide","clearValue","show","setRequired","isRequired","updateValueAndValidity","emitEvent","onlySelf","emitModelToViewChange","emitViewToModelChange","markAsDirty","markAsTouched","clearTimeout","historyTimeout","setTimeout","setReadOnly","isReadOnly","opts","markAsInvalid","setErrors","errors","custom","markAsValid","FormControl","NovoFormGroup","fieldInteractionEvents","getRawValue","_value","enableAllControls","controls","disableAllControls","FormGroup","NovoLabelService","userLocale","filters","clear","distributionListOwner","dateAdded","emptyTableMessage","noMatchingRecordsMessage","erroredTableMessage","pickerError","pickerTextFieldEmpty","pickerEmpty","tabbedGroupPickerEmpty","quickNoteError","quickNoteEmpty","numberTooLarge","save","cancel","itemsPerPage","select","selected","selectAllOnPage","deselectAll","move","rate","more","clearAll","clearAllNormalCase","clearSort","clearFilter","clearSelected","notValidYear","isTooLarge","past1Day","past7Days","past30Days","past90Days","past1Year","next1Day","next7Days","next30Days","next90Days","next1Year","customDateRange","backToPresetFilters","okGotIt","address","address1","apt","address2","city","zip","zipCode","or","clickToBrowse","chooseAFile","no","yes","noItems","dateFormatPlaceholder","localDatePlaceholder","timeFormatPlaceholderAM","timeFormatPlaceholder24Hour","timeFormatAM","timeFormatPM","confirmChangesModalMessage","promptModalMessage","asyncFailure","actions","groupedMultiPickerEmpty","groupedMultiPickerSelectCategory","add","encryptedFieldTooltip","noStatesForCountry","selectCountryFirst","invalidIntegerInput","maxRecordsReached","selectFilterOptions","maxlengthMetWithField","maxlengthMet","invalidMaxlengthWithField","invalidMaxlength","getToManyPlusMore","toMany","quantity","selectedRecords","showingXofXResults","shown","total","totalRecords","dateFormatString","localizedDatePlaceholder","tabbedGroupClearSuggestion","tabLabelPlural","formatDateWithFormat","formatToTimeOnly","param","formatToDateOnly","formatTimeWithFormat","timeParts","part","getWeekdays","dayOfWeek","dt","setDate","getDate","weekdays","newStart","getMonths","getMonth","setMonth","months","getProperty","getRangeText","page","pageSize","short","startIndex","endIndex","formatCurrency","NumberFormat","style","currency","formatBigDecimal","overrideOptions","minimumFractionDigits","maximumFractionDigits","useAccountingFormat","truncatedValue","truncateToPrecision","precision","valueAsString","decimalIndex","formatNumber","formatDateShort","formatTime","formatDate","Optional","Inject","LOCALE_ID","NOVO_ELEMENTS_LABELS_PROVIDERS","useClass","BasePickerResults","ref","_term","hasError","isLoading","isStatic","lastPage","autoSelectFirstOption","optionsFunctionHasChanged","selectingMatches","scrollHandler","onScrollDown","bind","cleanUp","getListElement","hasAttribute","removeAttribute","removeEventListener","offsetHeight","scrollTop","scrollHeight","processSearch","shouldSearch","addScrollListener","_config","termHasChanged","optionsNotYetCalled","enableInfiniteScroll","setAttribute","shouldReset","markForCheck","term","subscribe","filterData","nextActiveMatch","overlay","updatePosition","from","structureArray","shouldCallOptionsFunction","getPrototypeOf","isInteger","minSearchLength","dataArray","valueFormat","selectActiveMatch","selectMatch","prevActiveMatch","activeMatch","scrollToActive","getChildrenOfListElement","children","list","offsetTop","selectActive","isActive","hideResults","escapeRegexp","queryToEscape","highlight","query","preselected","preselectedFunc_1","isPreselected","Directive","ChangeDetectorRef","EntityPickerResult","labels","getIconForResult","searchEntity","renderTimestamp","timestamp","renderTime","dateStr","renderTimeNoOffset","getNameForResult","firstName","lastName","title","candidate","jobOrder","clientCorporation","EntityPickerResults","querySelector","host","class","OptionsService","getOptionsConfig","url","optionsUrl","URL","searchParams","pathname","FormUtils","optionsService","ASSOCIATED_ENTITY_LIST","ENTITY_PICKER_LIST","toFormGroup","group","emptyFormGroup","addControls","formGroup","formControl","addControl","removeControls","removeControl","toFormGroupFromFieldset","fieldsets","fieldset","hasAssociatedEntity","entity","determineInputType","dataSpecializationTypeMap","DATETIME","TIME","MONEY","PERCENTAGE","HTML","HTML-MINIMAL","YEAR","WORKFLOW_OPTIONS","SPECIALIZED_OPTIONS","ALL_WORKFLOW_OPTIONS","WorkflowOptionsLookup","SpecializedOptionsLookup","SimplifiedOptionsLookup","AllWorkflowOptionsLookup","dataTypeToTypeMap","Timestamp","Boolean","inputTypeToTypeMap","CHECKBOX","RADIO","SELECT","TILES","inputTypeMultiToTypeMap","typeToTypeMap","file","COMPOSITE","numberDataTypeToTypeMap","Double","BigDecimal","Integer","multiValue","inputType","isFieldEncrypted","getControlForField","overrides","forTable","fieldData","controlConfig","hint","systemRequired","customControl","inferDateRange","overrideResultsTemplate","optionsConfig","getControlOptions","resultsTemplate","overridePreviewTemplate","pickerCallback","columns","previewTemplate","_d","isAddressEmpty","shouldCreateControl","toControls","meta","toTableControls","ret","editorType","editorConfig","toFieldSets","getFormFields","isHeader","insertHeaderToFieldsets","isEmbeddedField","getEmbeddedFields","embeddedField","createControl","markControlAsEmbedded","inlineEmbeddedAssociatedEntityField","isEmbeddedFieldData","getEmbeddedFieldData","getFieldData","parentFieldName","fieldName","sectionHeaders","isSectionHeader","parentEntity","inlineEmbeddedAssociatedEntityFields","getInlineEmbeddedFields","f","getAssociatedFieldsForInlineEmbedded","aef","subHeader","constantProperties","icon","embedded","workflowOptions","getWorkflowOptions","currentValue","currentWorkflowOption","updateWorkflowOptions","unshift","setInitialValues","values","keepClean","keyOverride","setInitialValuesFieldsets","forceShowAllControls","forceShowAllControlsInFieldsets","forceValidation","form","valid","getStartDateFromRange","dateRange","minDate","dateFns.parse","minOffset","dateFns.startOfToday","getEndDateFromRange","maxDate","allowedDateRange","inflateEmbeddedProperties","isAlphaNumeric","letter","OutsideClick","active","onActiveChange","onOutsideClick","handleOutsideClick","window","toggleActive","forceValue","outsideClick","contains","otherElement","NovoButtonElement","side","_icon","[attr.theme]","[attr.color]","[attr.icon]","[attr.loading]","[attr.side]","[attr.size]","[attr.role]","changeDetection","ChangeDetectionStrategy","OnPush","HostBinding","animations","trigger","opacity","transition","animate","TooltipDirective","viewContainerRef","position","removeArrow","autoPosition","isPosition","isType","isSize","size","onMouseEnter","always","onMouseLeave","overlayRef","dispose","overlayState","OverlayConfig","positionStrategy","getPosition","scrollStrategy","scrollStrategies","reposition","detach","portal","ComponentPortal","NovoTooltip","tooltipInstance","attach","instance","tooltipType","rounded","preline","noAnimate","isHTML","strategy","originPosition","overlayPosition","offsetX","offsetY","originX","originY","overlayX","overlayY","connectedTo","withOffsetX","withOffsetY","withFallbackStrategy","withFallbackPosition","[attr.data-hint]","Overlay","ViewContainerRef","HostListener","NovoAgendaDateChangeElement","locale","viewDateChange","subtractDate","changeDate","addDate","unit","addFn","week","dateFns.addWeeks","dateFns.addMonths","view","eventTypeClicked","eventClicked","NovoAgendaDayViewElement","cdr","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","eventSnapSize","hourSegmentClicked","eventTimesChanged","refreshSubscription","refreshAll","detectChanges","unsubscribe","ngOnChanges","changes","refreshHourGrid","refreshView","hourSegmentModifier","segment","NovoAgendaMonthDayElement","evt","response","Accepted","Rejected","Maybe","[class]","[class.agenda-day-accepted]","[class.agenda-day-rejected]","[class.agenda-past]","[class.agenda-today]","[class.agenda-future]","[class.agenda-weekend]","[class.agenda-in-month]","[class.agenda-out-month]","[class.agenda-has-events]","[style.backgroundColor]","NovoAgendaMonthHeaderElement","prevMonth","dateFns.subMonths","nextMonth","NovoAgendaMonthViewElement","excludeDays","dayClicked","refreshHeader","refreshBody","eventDropped","newEnd","dateFns.getYear","dateFns.getMonth","dateFns.getDate","dateFns.setYear","dateFns.setMonth","dateFns.setDate","secondsDiff","dateFns.addSeconds","columnHeaders","dayModifier","DayOfMonthPipe","method","EndOfWeekDisplayPipe","endOfWeek","HoursPipe","MonthPipe","MonthDayPipe","WeekdayPipe","YearPipe","NovoAgendaWeekViewElement","getDayColumnWidth","eventRowContainer","offsetWidth","NovoButtonModule","NovoTooltipModule","NovoPipesModule","NovoEventTypeLegendElement","NovoAgendaWeekHeaderElement","NovoAgendaWeekEventElement","NovoAgendaDayEventElement","NovoAgendaHourSegmentElement","NovoAgendaAllDayEventElement","NovoAsideRef","component","params","_beforeClose","Subject","_afterClosed","isClosed","afterClosed","asObservable","beforeClose","componentInstance","animationStateChanged","pipe","phaseName","take","complete","detachBackdrop","toState","startExitAnimation","slideInOut","AsideComponent","asideRef","animationState","onAnimationStart","onAnimationDone","DEFAULT_CONFIG","hasBackdrop","backdropClass","panelClass","NovoAsideService","asideConfig","getOverlayConfig","createOverlay","overlayComponent","attachAsideContainer","backdropClick","createInjector","containerPortal","injectionTokens","WeakMap","PortalInjector","block","noop","providedIn","OverlayModule","PortalModule","entryComponents","NovoAvatarElement","sanitizer","shape","color","image","profileImage","src","logo","username","last","colors","settings","textColor","fontSize","fontWeight","fontFamily","colorIndex","charCodeAt","cobj","createElement","ltrs","createTextNode","appendChild","svg","setPrefixedValue","btoa","unescape","encodeURIComponent","innerHTML","bypassSecurityTrustUrl","elm","prefixes","starting","e2","_isValidURL","DomSanitizer","NovoAvatarStackElement","showTotal","remainingCount","ngAfterViewInit","viewChildren","ViewChildren","BreadcrumbService","router","navigateTo","$event","button","ctrlKey","metaKey","shiftKey","navigateByUrl","link","Router","BreadcrumbElement","breadcrumbService","BreadcrumbItemElement","breadcrumbComponent","showMenu","isSearch","toggleEvent","menuListDisplay","menuList","onToggle","isOpen","searchEvent","NovoTheme","_defaultTheme","themeName","onThemeChange","_currentTheme","changeTheme","use","of","AccentColorDirective","subscription","accent","onDestroy","BackgroundColorDirective","isValidColor","bg","BorderDirective","borderStyle","borderColor","borderWidth","border","borderLeft","bl","bx","borderX","borderRight","bt","borderTop","by","borderY","borderBottom","TextColorDirective","txc","FillColorDirective","fill","FlexDirective","renderer","_flex","Renderer2","getSpacingToken","tokens.spacing","MarginDirective","margin","marginLeft","ml","mx","marginX","marginRight","mr","marginTop","mt","my","marginY","marginBottom","mb","PaddingDirective","padding","paddingLeft","pl","px","paddingX","paddingRight","pr","paddingTop","pt","py","paddingY","paddingBottom","pb","GapDirective","gap","ThemeColorDirective","NovoTemplate","getType","_animationMode","encapsulation","ViewEncapsulation","None","[class.novo-pseudo-checkbox-indeterminate]","[class.novo-pseudo-checkbox-checked]","[class.novo-pseudo-checkbox-disabled]","[class._novo-animation-noopable]","ANIMATION_MODULE_TYPE","mixinDisabled","base","class_1","_disabled","NovoPseudoCheckbox","NOVO_OPTION_PARENT_COMPONENT","InjectionToken","_labelId","_uniqueOptgroupIdCounter","NovoOptgroupMixinBase","NovoOptgroupBase","NOVO_OPTGROUP","NovoOptgroup","_inert","inertGroups","exportAs","inputs","[attr.aria-disabled]","[attr.aria-labelledby]","[class.novo-optgroup-disabled]","_uniqueIdCounter","isUserInput","NovoOptionBase","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","keepOpen","inert","onSelectionChange","_stateChanges","_clickCapture","fromEvent","capture","_handleDisabledClick","_clickPassive","_handlePassiveClick","_getHostElement","textContent","_emitSelectionChangeEvent","deselect","_origin","setActiveStyles","setInactiveStyles","getLabel","viewValue","stopImmediatePropagation","_selectViaInteraction","_handleKeydown","HTMLInputElement","hasModifierKey","_clickViaInteraction","click","_getAriaSelected","_getTabIndex","ngAfterViewChecked","NovoOptionSelectionChange","NovoOption","changeDetectorRef","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","role","[id]","[attr.tabindex]","[attr.aria-selected]","[class.novo-active]","[class.novo-selected]","[class.novo-option-multiple]","[class.novo-option-disabled]","[class.novo-option-inert]","(keydown)","NovoPseudoCheckboxModule","NovoBaseTextElement","lineLength","weight","join","NovoCaption","NovoLabel","NovoLink","NovoText","NovoTitle","NovoOptionModule","ShowOnDirtyErrorStateMatcher","isErrorState","invalid","submitted","ErrorStateMatcher","touched","mixinColor","defaultColor","_color","colorPalette","_elementRef","classList","remove","mixinErrorState","errorState","stateChanges","updateErrorState","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","ngControl","newState","mixinOverlay","Mixin","openPanel","closePanel","togglePanel","panelOpen","mixinRequired","_required","mixinSize","defaultSize","_size","mixinTabIndex","defaultTabIndex","_tabIndex","coerceNumberProperty","NovoOverlayTemplateComponent","opening","closing","destroyOverlay","hasAttached","checkSizes","closingActionsSubscription","subscribeToClosingActions","run","onClosingAction","merge","outsideClickStream","clickTarget","clicked","getConnectedElement","overlayElement","observableOf","firstStable","onStable","switchMap","panelClosingActions","TemplatePortal","getHostWidth","direction","getScrollStrategy","fallbackX","withDirection","getConfig","updateSize","getBoundingClientRect","NgZone","DOCUMENT","ViewChild","FormsModule","ScrollingModule","NovoDropdownElement","parentScrollAction","toggled","_selectedOptionChanges","Subscription","EMPTY","_onDestroy","_multiple","clickHandler","closeHandler","_trigger","_button","ngAfterContentInit","tabIndex","takeUntil","_initKeyManager","_watchSelectionEvents","_watchPanelEvents","items","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","_keyManager","isTyping","altKey","manager","activeItem","hasDeselectedOptions_1","opt","previouslyFocusedIndex","activeItemIndex","onKeydown","selectionEvents","_clearPreviousSelectedOption","skip","ActiveDescendantKeyManager","withTypeAhead","withHomeAndEnd","tabOut","change","_scrollOptionIntoView","labelCount","itemHeight","_getItemHeight","panel","[attr.tabIndex]","ContentChild","NovoDropDownTrigger","ContentChildren","descendants","NovoItemElement","dropdown","action","onClick","originalEvent","[class.disabled]","[class.active]","NovoDropdownListElement","NovoOverlayModule","NovoDropDownItemHeaderElement","NovoIconComponent","ariaLabel","iconName","projectContentChanged","record","ObserversModule","[class.vertical-list]","[class.horizontal-list]","NovoListItemElement","avatar","NovoItemContentElement","NovoItemHeaderElement","NovoCommonModule","NovoIconModule","NovoListElement","NovoItemAvatarElement","NovoItemTitleElement","NovoItemEndElement","NovoItemDateElement","NovoLoadingElement","NovoSpinnerElement","_inverse","inverse","skeleton","NovoIsLoadingDirective","viewContainer","hasView","skeletonViews","loadedViews","condition","destroyViews","createViews","loadedTemplates","skeletonTemplates","templates","createEmbeddedView","views","views_1","views_1_1","NovoSkeletonDirective","read","NovoLoadedDirective","SWITCH_VALUE_ACCESSOR","NovoSwitchElement","icons","onModelChange","onModelTouched","toggle","model","[attr.aria-checked]","ChecklistPickerResults","filteredMatches","section","originalData","indeterminate","checked","DistributionListPickerResults","sanitizeHTML","html","bypassSecurityTrustHtml","GroupedMultiPickerResults","customFilterEnabled","internalMap","Map","displayAll","getItemsForCategoryAsync","customFilter","customFilterLabel","customFilterValue","defaultFilterValue","matchFunction","selectedCategory","setAllCategory","inputElement","categories","categoryMap","category","keyboardSubscription","debounceTime","distinctUntilChanged","searchTerm","allItems_1","selectCategory","setProperty","listElement","getNewMatches","clearSearchTerm","fireCustomFilter","ignoreCustomFilter","static","MixedMultiPickerResults","emptyOptionsLabel","clearSecondaryOptions","selectPrimaryOption","primaryOption","selectedPrimaryOption","optionHasSecondaryOptions","keyEvent","secondaryOptions","getSecondaryOptionsAsync","shouldShowSearchBox","showSearchOnSecondaryOptions","clearPrimaryOption","PickerResults","getEmptyMessage","shouldShowMessageForZeroLengthSearch","emptyPickerMessage","SkillsSpecialtyPickerResults","limitedTo","limit","limitedTo200","WorkersCompCodesPickerResults","compCode","PICKER_VALUE_ACCESSOR","NovoPickerElement","componentUtils","_disablePickerInput","changed","typing","overrideElement","resultsComponent","onDebouncedKeyup","container","showResults","onKeyDown","disablePickerInput","popup","activeMatch_1","wipeTerm","rawValue","onFocus","onOverlayClosed","clearValueOnSelect","checkTerm","useGetLabels","getLabels","setDisabledState","NovoLoadingModule","NovoListModule","NovoSwitchModule","SEARCH_VALUE_ACCESSOR","NovoSearchBoxElement","_zone","alwaysOpen","searchChanged","focused","_onChange","_onTouched","showSearch","forceClose","onBlur","_handleInput","activeElement","debounceSearchChange","_setValue","toDisplay","displayField","displayValue","setValueAndClose","NovoPickerModule","RouterModule","NovoDropdownModule","NovoSearchBoxModule","NOVO_DATE_SELECTION_STRATEGY","DefaultDateSelectionStrategy","selectionFinished","createPreview","activeDate","isSelected","currentDate","isSameDay","NOVO_DATE_SELECTION_STRATEGY_PROVIDER_FACTORY","NOVO_DATE_SELECTION_STRATEGY_PROVIDER","deps","SkipSelf","useFactory","MultiDateSelectionStrategy","dateLike","Set","has","RangeSelectionStrategy","currentRange","differenceInCalendarDays","currStart","currEnd","isWithinRange","WeekSelectionStrategy","_createWeekRange","NovoCalendarElement","_sanitizer","activeView","layout","selectedChange","preview","previewChange","activeDateChange","overlays","_activeDate","_numberOfMonths","_weekStartsOn","_strategy","startOfDay","updateView","bypassSecurityTrustStyle","startOfMonth","addMonths","setToday","tmp","openView","monthSelected","yearSelected","setYear","dateSelected","updatePreview","subMonths","selectedItem","_isRange","NovoMonthSelectElement","monthNames","onSelect","_isActive","_isSelected","NovoMonthViewElement","isRange","hideOverflowDays","hover","monthLabel","buildMonth","onHover","weeks","monthIndex","buildWeek","addDays","number","isDisabled","isBefore","isAfter","_isPreview","_isOverlay","_hasOverlayType","_isRangeStart","_isRangeEnd","isEnd","_isInRange","isInRange","_isPreviewStart","_isPreviewEnd","_isInPreview","range","rangeEnabled","NovoYearSelectElement","years","getFullYear","maxYear","getYear","TextMaskModule","condensed","[class.condensed]","CardElement","inset","onClose","onRefresh","cardAutomationId","newIcon","newMessageIcon","messageIcon","iconClass","messageIconClass","toggleClose","toggleRefresh","[attr.data-automation-id]","[class.loading]","CardActionsElement","CardContentElement","CardHeaderElement","CardFooterElement","NovoCategoryDropdownElement","_query","_categoryMap","_categories","persistSelection","_select","categorySelected","_masterCategoryMap","onCategorySelected","clearQuery","queryCategories","_queryTimeout","debounce","executeClickCallback","NovoNavElement","_selectedIndex","_indexToSelect","selectedIndexChange","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun_1","_deactivateAllItems","_activateSelectedItem","_showActiveContent","outlet","t","NovoTabElement","nav","activeChange","onlyText","tablink","childNodes","Node","TEXT_NODE","(click)","NovoTabButtonElement","NovoTabLinkElement","isLinkActive","spy","scrollIntoView","urlTree","RouterLink","NovoNavOutletElement","NovoNavHeaderElement","INDEX","forElement","NovoNavContentElement","NovoTabModule","CHECKBOX_VALUE_ACCESSOR","NovoCheckboxElement","LAYOUT_DEFAULTS","iconStyle","nextId","_cdr","_focusMonitor","ariaLabelledby","_uniqueId","_checked","_indeterminate","indeterminateChange","boxIcon","parseInt","_syncIndeterminate","_getAriaChecked","_emitChangeEvent","NovoCheckboxChange","_inputElement","_onInputClick","origin","focusVia","_onInteractionEvent","nativeCheckbox","[class.has-label]","FocusMonitor","Attribute","CHECKLIST_VALUE_ACCESSOR","NovoCheckListElement","setModel","setupOptions","checkBox","formattedOption","checkedOptions","A11yModule","REMOVABLE_REF","NovoChipMixinBase","NovoChipRemove","_parentChip","nodeName","_handleClick","parentChip","removable","NovoChipElement","_ngZone","platform","_document","animationMode","_hasFocus","_chipListSelectable","_chipListMultiple","_chipListDisabled","_selectable","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_animationsDisabled","coercedValue","_dispatchSelectionChange","selectable","chip","selectViaInteraction","toggleSelected","_blur","[class.novo-chip-selectable]","[class.novo-chip-selected]","[class.novo-chip-with-avatar]","[class.novo-chip-with-trailing-icon]","[class.novo-chip-disabled]","[attr.disabled]","(focus)","(blur)","Platform","NovoChipAvatar","NOVO_CHIPS_DEFAULT_OPTIONS","NovoErrorElement","nextUniqueId","NovoHintElement","align","[class.novo-field-hint-end]","[attr.id]","[attr.align]","NOVO_INPUT_UNDERLINED_TYPES","NOVO_FORM_FIELD","NovoFieldElement","_labelClicks","appearance","_destroyed","getConnectedOverlayOrigin","_inputContainerRef","_validateControlChild","_control","startWith","valueChanges","_hasLabel","_labelElement","_isUnderlinedInput","_getDisplayedMessages","_errorElements","_shouldForward","[class.novo-field-layout-horizontal]","[class.novo-field-layout-vertical]","[class.novo-field-appearance-standard]","[class.novo-field-appearance-fill]","[class.novo-field-appearance-outline]","[class.novo-field-appearance-list]","[class.novo-field-appearance-underlined]","[class.novo-field-invalid]","[class.novo-field-has-label]","[class.novo-field-no-label]","[class.novo-field-disabled]","[class.novo-field-autofilled]","[class.novo-focused]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","NovoFieldPrefixDirective","NovoFieldSuffixDirective","NovoFieldControl","NovoAutocompleteElement","_formField","_activeOptionChanges","_keyDownChanges","optionSelected","optionActivated","triggerOn","displayWith","parsedTabIndex","_watchStateChanges","withWrap","checkPanel","_setTriggerValue","inputValue","lastCaretPosition","valueToEmit","_previousValue","_emitSelectEvent","NovoOptionSelectedEvent","_setValueAndClose","inputStateChanged","activeOption","NovoFieldsElement","_layout","_appearance","fullWidth","_updateFieldLayout","_updateFieldAppearance","_fields","[class.novo-fieldset-appearance-standard]","[class.novo-fieldset-appearance-fill]","[class.novo-fieldset-appearance-outline]","[class.novo-fieldset-appearance-list]","DATE_FORMATS","NOVO_INPUT_FORMAT","DATEFORMAT_VALUE_ACCESSOR","NovoDateFormatDirective","_renderer","_factory","_compositionMode","valueChange","DATE","unmask","imask","mask","pattern","overwrite","autofix","lazy","prepare","formatValue","blocks","IMask.MaskedRange","placeholderChar","to","Y","normalize","formatAsIso","isValid","formatted","ISO8601","STRING","IMaskDirective","IMaskFactory","COMPOSITION_BUFFER_MODE","TIME_FORMATS","TIMEFORMAT_VALUE_ACCESSOR","NovoTimeFormatDirective","timeFormat","initFormatOptions","amFormat","pmFormat","time","convertTime12to24","HH","hh","mm","aa","IMask.MaskedEnum","enum","_checkInput","timePeriod","it","selectionStart","hourOneFormatRequired","_handleBlur","input_2","setSelectionRange","convertTime24to12","time12h","meridian","minutes","padStart","time24h","hourInput","(input)","NOVO_INPUT_VALUE_ACCESSOR","NOVO_INPUT_INVALID_TYPES","NovoInput","_platform","inputValueAccessor","_autofillMonitor","ngZone","_uid","lastKeyValue","autofilled","_type","_readonly","_neverEmptyInputTypes","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","IOS","runOutsideAngular","selectionEnd","_isServer","isBrowser","_isNativeSelect","_isTextarea","_id","_validateType","monitor","isAutofilled","stopMonitoring","ngDoCheck","_dirtyCheckNativeValue","_focusChanged","isFocused","readonly","_onInput","newValue","_isNeverEmpty","_isBadInput","validity","badInput","selectElement","firstOption","empty","selectedIndex","setDescribedByIds","ids","_ariaDescribedby","onContainerClick","[attr.placeholder]","[disabled]","[required]","[attr.readonly]","[attr.aria-invalid]","[attr.aria-required]","[attr.autocomplete]","NgControl","Self","NgForm","FormGroupDirective","AutofillMonitor","NovoPickerDirective","formatter","autocompleteAttribute","updatePicker","picker","_picker","updateValue","NovoPickerToggleElement","[class.novo-toggle-active]","[class.novo-accent]","[class.novo-warn]","_NovoChipListMixinBase","NovoChipList","_dir","_lastDestroyedChipIndex","_userTabIndex","_stacked","_compareWith","o1","o2","ariaOrientation","valueAccessor","_selectionModel","_syncChipsState","_initializeSelection","_chipInput","_placeholder","_hasFocusedChip","chips","FocusKeyManager","withVerticalOrientation","withHorizontalOrientation","dir","_allowFocusEscape","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","SelectionModel","_dropSubscriptions","registerInput","_setSelectionByValue","_originatesFromChip","_focusInput","setFirstItemActive","_keydown","_isInputEmpty","setLastItemActive","newChipIndex","setActiveItem","_isValidIndex","_clearSelection","_selectValue","_sortValues","correspondingChip","_propagateChanges","fallbackValue","NovoChipListChange","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","chipFocusChanges","chipIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","[attr.aria-describedby]","[attr.aria-multiselectable]","[class.novo-chip-list-stacked]","[class.novo-chip-list-focused]","[class.novo-chip-list-disabled]","[class.novo-chip-list-invalid]","[class.novo-chip-list-required]","[attr.aria-orientation]","Directionality","NovoChipInput","_defaultOptions","_chipList","_addOnBlur","separatorKeyCodes","chipEnd","_emitChipEnd","addOnBlur","_focus","_isSeparatorKey","CHIPS_VALUE_ACCESSOR","NovoChipsElement","_items","ReplaySubject","setItems","itemToAdd","noLabels","getLabelFromOptions","result_1","result_1_1","valueToSet","valueFormatter","optLabel","getAvatarType","hidePreview","showPreview","onTyping","Event","[class.with-value]","NovoRowChipsElement","NovoRowChipElement","[class.novo-row-chip-selected]","[class.novo-row-chip-with-trailing-icon]","[class.novo-row-chip-disabled]","NovoFieldModule","useValue","ɵ0","CKEDITOR_CONTROL_VALUE_ACCESSOR","NovoCKEditorElement","ready","paste","loaded","focusManager","removeAllListeners","aInstance","CKEDITOR","instances","getBaseConfig","ckeditorInit","setData","getData","debounceTimeout","baseConfig","enterMode","ENTER_BR","shiftEnterMode","ENTER_P","disableNativeSpellChecker","removePlugins","extraAllowedContent","font_names","extendedConfig","toolbar","filebrowserImageUploadUrl","insertText","trimmedText","COLOR_VALUE_ACCESSOR","NovoColorInputElement","blurEvent","focusEvent","lastValidValue","onChangeCallback","onTouchedCallback","_setFormValue","_handleFocus","hex","Color","isHSL","rgbToHex","g","h","l","hue2rgb","p1","q1","t1","q","hslToRgb","isHSV","hsvToRgb","isRGB","isValidHex","hexToRgb","rgbToHsl","rgbToHsv","clean","isRGBA","isHSLA","isHSVA","componentToHex","exec","NovoColorPickerComponent","onChangeComplete","onSwatchHover","swatchStyle","borderRadius","borderBottomLeftRadius","borderTopLeftRadius","boxSizing","display","boxShadow","handleBlockChange","handleChange","handleValueChange","setState","currentColor","hsl","hsv","rgb","afterValidChange","handleSwatchHover","preserveWhitespaces","NovoColorSwatchComponent","focusStyle","divStyles","focusStyles","inFocus","background","cursor","outline","currentStyles","handleFocusOut","handleFocus","handleHover","handleClick","NovoToastElement","hasDialogue","isCloseable","closed","launched","onActionPromise","_message","alertTheme","actionHandler","onAction","[class.growl]","[class.banner]","[class.show]","[class.animate]","[class.embedded]","NovoToastService","references","default","danger","defaults","hideDelay","_parentViewContainer","alert","toastElement","toast","handleAlert","isVisible","REF","setToastOnSession","toastTimer","OPTIONS","CUSTOM_CLASS","customClass","ALERT_STYLE","ALERT_POSITION","ALERT_ICON","SortDirection","NovoDataTableFilterUtils","constructFilter","multiSelect","actualFilter","dateFns.endOfToday","filterItem","DataTableState","selectionSource","paginationSource","sortFilterSource","resetSource","expandSource","allMatchingSelectedSource","dataLoaded","globalSearch","selectedRows","expandedRows","isForceRefresh","updates","retainSelected","outsideFilter","reset","fireUpdate","persistUserFilters","onSortFilterChange","checkRetainment","onExpandChange","targetId","onPaginationChange","isPageSizeChange","setInitialSortFilter","preferences","selectedOption","caller","allMatchingSelected","selectionOptions","activeStyle","pointerEvents","inactiveStyle","sortAscAnim","ASC","DESC","NONE","sortDescAnim","sortNoneAnim","NovoDataTableSortButton","sortChange","changeSort","NovoDataTableSortFilter","allowMultipleFilters","resolveMultiFilter","filterIndex","aFilter","NovoDataTableCellHeader","_sort","_cdkColumnDef","filterActive","sortActive","sortValue","showCustomRange","multiSelectedOptions","multiSelectedOptionIsHidden","optionFilter","subscriptions","_rerenderSubscription","checkSortFilterState","column","_column","labelIcon","sortable","filterable","resizable","transforms","filterConfig","getDefaultDateFilterOptions","setupFilterOptions","sortFilterState","initialConfig","thisFilter","activeDateFilter","defaultSort","optionsList","optionValue_1","optionPresentCheck","toggleSelection","optionValue","getOptionText","clearOptionFilter","filterMultiSelect","multiSelectHasVisibleOptions","multiSelectOptionFilter","multiSelectOptionIsHidden","multiSelectOptionFilterHandleKeydown","keyCode","optionFilterInput","handleEscapeKeydown","startResize","mouseDownEvent","minimumWidth","startingWidth","mouseMoveSubscription","middleMouseEvent","differenceWidth","clientX","setStyle","resized","mouseUpSubscription","toggleCustomRange","focusInput","filterInput","changeTimeout","getNextSortDirection","CdkColumnDef","DataTableSource","tableService","currentTotal","loading","pristine","totalSet","connect","displayDataChanges","getTableResults","catchError","caught","disconnect","DataSource","StaticDataTableService","currentData","NovoDataTable","globalSearchHiddenClassToggle","rowIdentifier","activeRowIdentifier","trackByFn","fixedHeader","maxSelected","canSelectAll","_hideGlobalSearch","preferencesChanged","allSelected","columnToTemplate","columnsLoaded","selection","scrollLeft","expandable","initialized","scrollListenerHandler","scrollListener","sortFilterSubscription","performInteractions","paginationSubscription","resetSubscription","allMatchingSelectedSubscription","_disabledColumns","displayedColumns","configureLastDisplayedColumn","service","dataSource","outsideFilterSubscription","refreshSubject","_columns","configureColumns","_customFilter","_hasExandedRows","_forceShowHeader","totallyEmpty","modifyCellHeaderMultiSelectFilterOptions","newOptions","header","cellHeaders","cellHeader","optionsToKeep","newOpt","novoDataTableContainer","defaultTemplates","customTemplates","paginationOptions","pageSizeOptions","onSearchChange","trackColumnsBy","disabledFunc","isExpanded","expandRow","expandRows","expand","allCurrentRowsExpanded","selectRow","selectRows","allCurrentRowsSelected","initialResizable","resizableColumns_1","lastResizableColumn","templateName","listInteractions","_e","allListColumnInteractions","listColumnInteraction","int","script","animState","minHeight","visibility","NovoDataTableCheckboxHeaderCell","columnDef","dataTable","toaster","cssClassFriendlyName","addClass","selectionSubscription","selectAllChanged","resetAllMatchingSelected","isAtLimit","allSelectedEvent","selectedCount","CdkHeaderCell","NovoDataTableExpandHeaderCell","expanded","expandSubscription","expandAll","NovoDataTableHeaderCell","NovoDataTableCell","cellClass","rightAlignCellContent","calculateWidths","CdkCell","NovoDataTableCheckboxCell","getTooltip","NovoDataTableExpandCell","NovoDataTableClearButton","selectedClear","sortClear","filterClear","allClear","NovoDataTableExpandDirective","vcRef","shouldExpandAllRows","shouldExpandOneRow","render","$implicit","DATE_PICKER_VALUE_ACCESSOR","NovoDatePickerElement","hideFooter","_selection","rangeSelectMode","_range","_weekRangeSelect","modelToSelection","updateSelection","fireEvents","startDateLabel","endDateLabel","fireSelect","fireRangeSelect","eventData","toggleRangeSelect","DateFormatService","getTimeMask","militaryTime","timeFormatArray","timeFormatArray_1","timeFormatArray_1_1","timeFormatPart","getDateMask","getDateTimeMask","getTimePlaceHolder","parseDateString","dateString","dateFormatTokens","dateValueTokens","isInvalidDate","twoTokens","oneToken","delimiter","dateStringWithDelimiter","isValidDatePart","parseTimeString","timeString","timeStringParts","splits","pm","splits_1","splits_1_1","setHours","setMinutes","setSeconds","parseString","dateTimeString","parts","dts","tm","tms","getHours","getMinutes","datePart","DATE_VALUE_ACCESSOR","NovoDatePickerInputElement","dateFormatService","formattedValue","invalidDateErrorMessage","changeEvent","_initFormatOptions","userDefinedFormat","createAutoCorrectedDatePipe","keepCharPositions","guide","setupInvalidDateErrorMessage","_handleEvent","handleInvalidDate","showInvalidDateError","dateTimeValue","getUTCDate","dispatchOnChange","_setCalendarValue","newDate","formatDateValue","originalValue","dateFns.isValid","dateFns.format","NovoDateRangeInputElement","formattedStartDate","formattedEndDate","weekRangeSelect","_onStartInputChange","_onEndInputChange","clearStartValue","clearEndValue","MULTI_DATE_VALUE_ACCESSOR","NovoMultiDateInputElement","chipsCount","notShown","NovoChipsModule","NovoCalendarModule","NovoBoxElement","justify","wrap","NovoFlexElement","NovoStackElement","NovoGridElement","_isNumberValue","dragula","dragulaImported","NovoDragulaService","cloned","drag","dragend","drop","out","over","shadow","dropModel","removeModel","bags","drake","bag","models","handleModels","initEvents","setupEvents","dragElm","dragIndex","dropIndex","sourceModel","containers","domIndexOf","dropElm","notCopy","targetModel","dropElmModel","removeChild","that","child","NovoDragulaElement","dragulaService","checkModel","dragulaModel","modelIndex","previousValue","NovoDividerComponent","_vertical","_inset","[class.novo-divider-vertical]","[class.novo-divider-horizontal]","[class.novo-divider-inset]","NovoSelectMixins","NovoSelectElement","focusMonitor","defaultErrorStateMatcher","_destroy","openedChange","_openedStream","_closedStream","compareWith","filterTerm","_focused","_getDisplayValue","_initLegacyOptions","added","contentOptions","viewOptions","_highlightCorrectOption","correspondingOption","_getOptions","filteredOptions","handleSelection","wasSelected","_makeChangeEvent","NovoSelectChange","QueryList","toggleHeader","saveHeader","onSave","createdItem","_getAriaActiveDescendant","aria-autocomplete","aria-haspopup","[attr.aria-controls]","[attr.aria-expanded]","[attr.aria-activedescendant]","[class.novo-select-disabled]","[class.novo-select-invalid]","[class.novo-select-required]","[class.novo-select-empty]","[class.novo-select-multiple]","NovoDividerModule","ADDRESS_VALUE_ACCESSOR","NovoAddressElement","_readOnly","fieldList","initComplete","validityChange","updateStates","initConfig","updateControl","getDefaultCountryConfig","getDefaultStateConfig","stateOptions","isInvalid","_f","_g","onInput","isBlurred","onCountryChange","statesUpdatable","onStateChange","setStateLabel","getStateOptions","loadingCountries","countryName_1","countries","NovoFile","contentType","lastModified","reader","FileReader","onload","fileContents","dataURL","readPromise","readAsDataURL","toJSON","order","download","labelStyle","draggable","NovoFileInputElement","_ngControl","tabindex","upload","elements","files","_name","commands","dragenter","dragEnterHandler","dragleave","dragLeaveHandler","dragover","dragOverHandler","dropHandler","updateLayout","initializeDragula","setInitialFileList","dataFeatureId","fileOutputBag","insertTemplatesBasedOnLayout","moves","dataTransfer","dropEffect","visible","types","filelist","customActions","process","validate","passedValidation","customValidation","validation","uploadValidation","readFile","customEdit","customSave","customDelete","customCheck","NovoSelectModule","NovoDragulaModule","NovoCheckboxModule","TILES_VALUE_ACCESSOR","NovoTilesElement","onSelectedOptionClick","onDisabledOptionClick","activeTile","setFocus","firstChange","setTile","interpolateCell","col","ReactiveFormsModule","DataTableInterpolatePipe","DateTableDateRendererPipe","DateTableDateTimeRendererPipe","DateTableTimeRendererPipe","DateTableNumberRendererPipe","isPercent","DataTableBigDecimalRendererPipe","configuration","DateTableCurrencyRendererPipe","NovoDataTablePagination","_page","_pageSizeOptions","_length","pageChange","longRangeLabel","shortRangeLabel","_pageSize","updateDisplayedPageSizeOptions","totalPages","calculateTotalPages","pages","getPages","_initialized","selectPage","emitPageEvent","nextPage","hasNextPage","previousPage","hasPreviousPage","numberOfPages","ceil","changePageSize","displayedPageSizeOptions","makePage","currentPage","startPage","endPage","MAX_PAGES_DISPLAYED","NovoDataTableHeaderRow","rowClass","CdkHeaderRow","CDK_ROW_TEMPLATE","NovoDataTableRow","CdkRow","NovoDatePickerModule","CdkTableModule","NovoFormExtrasModule","NovoTilesModule","NovoFlexModule","DATE_TIME_PICKER_VALUE_ACCESSOR","NovoDateTimePickerElement","componentTabState","datePickerValue","timePickerValue","toggleView","tab","setDateLabels","selectedLabel","setTimeLabels","toLocaleTimeString","onDateSelected","createFullDateValue","onTimeSelected","dateFns.setMilliseconds","dateFns.setSeconds","dateFns.getHours","dateFns.getMinutes","dateFns.getSeconds","dateFns.getMilliseconds","CollectionEvent","ADD","REMOVE","REMOVE_ALL","REPLACE","INVALIDATE_ALL","SORT","FILTER","CHANGE","CURRENTPAGE_CHANGE","PAGESIZE_CHANGE","NUMBEROFPAGES_CHANGE","ArrayCollection","dataChange","editData","isEditing","_filter","copy","hasErrors","isFiltered","undo","commit","addItem","onDataChange","addItemAt","addItems","addItemsAt","clone","getItemAt","getItemIndex","invalidate","newData","newData_1","newData_1_1","existing","replaceItem","removeAll","removeItem","removeItemAt","newItem","oldItem","replaceItemAt","sortOn","filterOn","PagedArrayCollection","_numberOfPages","prev","BrowserGlobalRef","GlobalRef","NodeGlobalRef","Security","credentials","grant","parsed","data_1","data_1_1","permission","e_2","revoke","checkRoutes","routes","filtered","routes_1","routes_1_1","route","entities","permissions","perm","LocalStorageService","setItem","localStorage","getItem","NovoTemplateService","getAll","customTemplateTypes","addDefault","addCustom","TIME_VALUE_FORMATS","TIME_PICKER_VALUE_ACCESSOR","NovoTimePickerElement","analog","inline","step","increments","MERIDIANS","MINUTES","HOURS","flatten","mins","init","dispatch","checkBetween","inBetween","dispatchChange","hoursClass","activeHour","minutesClass","activeMinute","setPeriod","period","modifier","[class.military]","NovoTimePickerInputElement","onComplete","hour_1","scrollToIndex","test_1","test_2","setFullYear","querySelectorAll","IMaskDirectiveModule","NovoDateTimePickerInputElement","timePart","updateDate","checkParts","updateTime","handleBlur","NovoTimePickerModule","NovoAccordion","_hideToggle","displayMode","CdkAccordion","EXPANSION_PANEL_ANIMATION_TIMING","novoExpansionAnimations","indicatorRotate","expansionHeaderHeight","collapsedHeight","expandedHeight","animateChild","optional","bodyExpansion","_template","uniqueId","NovoExpansionPanel","accordion","_uniqueSelectionDispatcher","_viewContainerRef","_padding","opened","expandedChange","_inputChanges","_headerId","_getHideToggle","hideToggle","_hasSpacing","_getExpandedState","_lazyContent","_portal","_bodyAnimation","cssClass","CdkAccordionItem","[class.novo-expanded]","[class.novo-expansion-panel-spacing]","[class.novo-expansion-panel-padding]","Host","UniqueSelectionDispatcher","NovoExpansionPanelContent","NovoExpansionPanelHeader","_parentChangeSubscription","_toggle","_isExpanded","_getPanelId","_showToggle","[@expansionHeight]","CdkAccordionModule","NovoExpansionPanelActionRow","NovoExpansionPanelTitle","NovoExpansionPanelDescription","NovoModalRef","zoomInOut","NovoModalContainerComponent","modalRef","NovoModalService","modalConfig","attachModalContainer","overlayConfig","NovoModalParams","global","centerHorizontally","centerVertically","ControlConfirmModal","ControlPromptModal","CustomHttpImpl","mapFn","FieldInteractionApi","modalService","formUtils","_isInvokedOnInit","mapper","filteredOptionsCreator","pickerConfigFormat","createOptionsFunction","optionsPromise","optionsUrlBuilder","where","associations","currentEntity","currentEntityId","_globals","globals","_currentKey","isOnInit","isActiveControlValid","currentKey","getActiveControl","getControl","getActiveKey","getActiveValue","getActiveInitialValue","getInitialValue","getFieldSet","otherForm","fieldSet","fs","getFormGroupArray","formArray","triggerEvent","controlKey","patchValue","isHighlighted","hideFieldSetHeader","showFieldSetHeader","validationMessage","markAsPending","markAsPristine","markAsUntouched","displayToast","toastConfig","displayTip","tip","allowDismiss","sanitize","clearTip","setTooltip","confirmChanges","history","oldValue","onClosed","promptUser","isValueEmpty","isValueBlank","hasField","addStaticOption","newOption","optionToAdd","isUnique","currentOptions","removeStaticOption","optionToRemove","index_2","index_1","modifyPickerConfig","mutatePickerConfig","newConfig","getAppropriateResultsTemplate","resultsTemplateType","addPropertiesToPickerConfig","properties","setLoading","fieldInteractionloading","asyncBlockTimeout","metaForNewField","FIELD_POSITIONS","ABOVE_FIELD","fieldsetIndex","controlIndex","fi","fieldsetControl","ci","BELOW_FIELD","TOP_OF_FORM","BOTTOM_OF_FORM","novoControl","fieldsetIndex_1","controlIndex_1","func","wait","getParent","getIndex","HttpClient","NovoAutoSize","textArea","adjust","EditState","NovoControlElement","fieldInteractionApi","templateService","autoFocus","maxLengthMet","itemCount","_blurEmitter","_focusEmitter","_enteredText","_showCount","maxLengthMetErrorfields","focusedField","isDirty","maxlengthMetField","maxlengthErrorField","charCount","showCount","interaction","this_1","valueChangeSubscription","executeInteraction","invokeOnInit","forceClearSubscription","statusChangeSubscription","statusChanges","templateContext","methods","restrictKeys","emitChange","handlePercentChange","handleTextAreaInput","handleEdit","handleSave","handleDelete","handleUpload","modelChange","modelChangeWithRaw","handleAddressChange","handleTyping","updateValidity","validateIntegerInput","validateNumberOnBlur","percentValue","toFixed","percentChangeSubscription","dateChangeSubscription","hasValue","isInvokedOnInit","characterCountField","checkMaxLength","UTILITY_KEYS","decimalSeparator","percent","handleTabForPickers","shouldEventBeEmitted","[attr.data-control-type]","[class.hidden]","[attr.data-control-key]","[class.inline-embedded]","NovoControlGroup","fb","_remove","_edit","_collapsible","editIcon","removeIcon","onRemove","onEdit","onAdd","controlLabels","disabledArray","editState","NOT_EDITING","currentIndex","initialValueChange","clearControls","addNewControl","vertical","onClickAdd","onClickCancel","onClickSave","at","resetAddRemove","idx","checkCanEdit","checkCanRemove","controlsArray","nestedFormGroup","buildNestedFormGroup","EDITING","assignIndexes","onFieldInteractionEvent","shouldRemove","doRemoveControl","removeAt","editControl","collapsible","newControls","getNewControls","canEdit","canRemove","[class.novo-control-group-appearance-card]","[class.novo-control-group-appearance-none]","FormBuilder","NovoControlTemplates","NovoDynamicFormElement","hideNonRequiredFields","autoFocusFirstField","allFieldsRequired","allFieldsNotRequired","showingAllFields","showingRequiredFields","numControls","requiredFields","nonRequiredFields","showAllFields","ctl","fieldsAlreadyHidden","showOnlyRequired","hideRequiredWithValue","updatedValues","NovoFormElement","hideHeader","NovoHeaderComponent","headerClass","NovoUtilActionComponent","NovoUtilsComponent","NovoHeaderSpacer","NovoModalNotificationElement","iconType","NovoModalElement","QuickNoteResults","taggingMode","searchCall","onSelected","QUICK_NOTE_VALUE_ACCESSOR","QuickNoteElement","placeholderVisible","_placeholderElement","triggers","ckeInstance","getCKEditorConfig","onKey","domEvent","$","onValueChange","showPlaceholder","hidePlaceholder","note","defaultRenderer","symbol","getRenderer","quickNoteResults","triggers_1","isTagging","regex","fromCharCode","validateReferences","newModel","getSearchTerm","positionResultsDropdown","renderedText","replaceWordAtCursor","getWordAtCursor","getSelection","getRanges","startContainer","NODE_TEXT","startOffset","getText","wordStart","lastIndexOf","beforeSymbol","hasPrevious","getPrevious","wordEnd","newWord","originalWord","parentNode","line","getHtml","newLine","setHtml","moveToPosition","POSITION_BEFORE_END","selectRanges","getBody","ampRegex","editorHeight","wrapper","clientHeight","TOOLBAR_HEIGHT","getCursorPosition","editorElement","editable","cursorElement","cursorPosition","offsetLeft","MIN_MARGIN_TOP","MAX_MARGIN_TOP","getContentHeight","contentHeight","ui","contentsElement","cssText","placeholderElement","className","NOVO_RADIO_GROUP","RADIO_VALUE_ACCESSOR","NovoRadioElement","radioGroup","_onInputChange","[class.vertical]","RADIOGROUP_VALUE_ACCESSOR","NovoRadioGroup","_updateRadioButtonAppearance","_updateSelectedRadioFromValue","_updateRadioButtonNames","_updateRadioButtonDisabled","_radios","radio","[class.novo-radio-group-appearance-horizontal]","[class.novo-radio-group-appearance-vertical]","NovoTipWellElement","confirmed","isLocalStorageEnabled","isEnabled","_tipWithStyles","_lastTipStyled","buttonText","round","random","localStorageKey","storedValue","hideTip","NovoRadioModule","NovoNovoCKEditorModule","NovoQuickNoteModule","NovoDateTimePickerModule","NovoHeaderModule","NovoTipWellModule","NovoModalModule","NovoAceEditorModule","NovoFieldsetElement","NovoFieldsetHeaderElement","NOVO_LAYOUT_DEFAULT_AUTOSIZE","factory","NOVO_LAYOUT_DEFAULT_AUTOSIZE_FACTORY","NOVO_LAYOUT_CONTAINER","NovoLayoutContent","_container","scrollDispatcher","_contentMarginChanges","getHostElement","CdkScrollable","ScrollDispatcher","NovoRailComponent","novoSidenavAnimations","transformDrawer","box-shadow","NovoSidenavComponent","_focusTrapFactory","_doc","_fixedInViewport","_fixedTopGap","_fixedBottomGap","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedStart","fromState","mapTo","closedStart","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_restoreFocus","disableClose","y","_updateFocusTrapState","_autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","_openedVia","activeEl","openedVia","_closeViaBackdropClick","_setOpen","restoreFocus","_getWidth","_animationStartListener","_animationDoneListener","[class.novo-sidenav-end]","[class.novo-sidenav-over]","[class.novo-sidenav-push]","[class.novo-sidenav-side]","[class.novo-sidenav-opened]","[class.novo-sidenav-fixed]","[style.top.px]","[style.bottom.px]","FocusTrapFactory","NovoLayoutContainer","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_contentMargins","right","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_allDrawers","drawer","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","[class.novo-layout-container-explicit-backdrop]","ViewportRuler","MenuContentComponent","menuItems","isLeaf","openSubMenu","closeLeafMenu","closeAllMenus","menu","menuOptions","stopEvent","isMenuItemEnabled","menuItem","evaluateIfFunction","menuItemEnabled","isMenuItemVisible","menuItemVisible","onKeyEvent","keyboardOpenSubMenu","cancelEvent","onOpenSubMenu","keyboardMenuItemSelect","onCloseLeafMenu","exceptRootMenu","closeMenu","onMenuItemSelect","tagName","isContentEditable","NovoMenuService","isDestroyingLeafMenu","triggerClose","fakeElement","openMenu","context","anchorElement","parentMenu","newOverlay","attachMenu","mouseEvent_1","clientY","menuClass","menuTrigger","menuContent","closeAllEvent","closeLeafMenuEvent","destroyLeafMenu","subMenuEvent","destroySubMenus","closeEvent","hasOpenMenus","getLastAttachedOverlay","newLeaf","subMenuOverlay","isLeafMenu","ScrollStrategyOptions","MENU_OPTIONS","PARENT_MENU","MenuComponent","menuService","changeDetector","visibleMenuItems","links","menuEvent","onMenuEvent","setVisibleMenuItems","MenuItemDirective","MenuDirective","_parentMenu","waitWhenOpen","anchor","isSubMenu","onMenuClick","menuContext","NovoMenuModule","forRoot","ngModule","OverlayContainer","FullscreenOverlayContainer","NovoMultiPickerElement","selectedItems","selectAllOption","strictRelationship","modifyAllOfType","setInitialValue","removeFromDisplay","modifyAffectedParentsOrChildren","setupOptionsByType","formattedSection","formatOption","selectAll","createSelectAllOption","isParentOf","isChildOf","allParents","accum","clickOption","updateDisplayItems","updateAllItemState","triggerValueUpdate","updateParentOrChildren","allOfType","getAllOfType","allOfTypeSelected","allItemsSelected","setIndeterminateState","status","updateDisplayText","selectedOfType","displayType","triggeredByEvent","itemToRemove","handleRemoveItemIfAllSelected","removeValue","selecting","updateAllParentsOrChildren","updatedObject","updatedItems","allItem","updateChildrenValue","updateParentValue","itemChanged","parentType","allParentType","childType","allChildren","allCheckedChildren","selectedChildrenOfParent","allChildrenOfParent","addIndividualChildren","updateIndeterminateStates","updateAllChildrenValue","updateAllParentValue","potentialChildren","allCheckedOrIndeterminateParents","isParentIndeterminate","isChildIndeterminate","parentAlreadySelected","typeObj","indeterminateIsSet_1","optionsByType_1","allSelected_1","optionsByType","hb_class","NonIdealStateElement","GooglePlacesService","_http","platformId","_global","_localStorageService","getPredictions","getLatLngDetail","lat","lng","getPlaceDetails","placeId","getGeoCurrentLocation","isPlatformBrowser","_window","nativeGlobal","navigator","geolocation","getCurrentPosition","pos","latlng","coords","latitude","longitude","getGeoLatLngDetail","google","maps","Geocoder","geocode","getGeoPlaceDetail","place_id","getGeoPrediction","placesService","places","AutocompleteService","queryInput","promiseArr","countryRestriction","componentRestrictions","geoLocation","LatLng","radius","geoTypes","_tempQuery","geoPredictionCall","_tempArr","getUniqueResults","PlacesService","getDetails","getGeoPaceDetailByReferance","referance","referanceData","_window_1","reference","PlacesServiceStatus","OK","addRecentList","localStorageName","itemSavedLength","getRecentList","pop","getPlacePredictions","PLATFORM_ID","PlacesListComponent","_elmRef","_googlePlacesService","termChange","locationInput","gettingCurrentLocationFlag","dropdownOpen","recentDropdownOpen","queryItems","isSettingsError","settingsErrorMsg","moduleinit","selectedDataIndex","recentSearchData","userSelectedOption","defaultSettings","geoPredictionServerUrl","geoLatLangServiceUrl","geoLocDetailServerUrl","geoCountryRestriction","geoRadius","serverResponseListHierarchy","serverResponseatLangHierarchy","serverResponseDetailHierarchy","resOnSearchButtonClickOnly","useGoogleGeoApi","inputPlaceholderText","inputString","showSearchButton","showRecentSearch","showCurrentLocation","recentStorageName","noOfRecentSearchSave","currentLocIconUrl","searchIconUrl","locationIconUrl","moduleInit","searchinputCallback","searchinputClickCallback","inputVal","getListQuery","userQuerySubmit","activeListNode","selectedListNode","setRecentLocation","getPlaceLocationInfo","closeAutocomplete","currentLocationSelected","getCurrentLocationInfo","setUserSettings","getRecentLocations","processSearchQuery","_tempObj","userSettings","keys_1","keys_1_1","_tempParams","updateListItem","extractServerList","arrayList","_tempData","arrayList_1","arrayList_1_1","listData","selectedData","formatted_address","HttpClientModule","PopOverContent","placement","animation","onCloseFromOutside","isHidden","popover","getElement","positionElements","popoverDiv","hideFromPopover","hostEl","targetEl","positionStr","targetElPos","positionStrParts","mainSide","effectivePlacement","getEffectivePlacement","orientation","effectiveAlignment","hostElPos","targetElWidth","targetElHeight","shiftWidth","center","shiftHeight","nativeEl","offsetParentBCR","elBCR","offsetParentEl","parentOffsetEl","clientTop","clientLeft","boundingClientRect","pageYOffset","documentElement","pageXOffset","getStyle","cssProp","currentStyle","getComputedStyle","isStaticPositioned","offsetParent","desiredPlacement","hostElement","targetElement","hostElBoundingRect","innerHeight","innerWidth","PopOverDirective","resolver","PopoverComponent","popoverOnHover","popoverDismissTimeout","onShown","onHidden","showOrHideOnClick","popoverDisabled","showOnHover","hideOnHover","popoverAlways","content","popoverPlacement","popoverAnimation","popoverTitle","ProgressAppearance","NOVO_PROGRESS_CONTAINER","PROGRESS_BAR_VALUE_ACCESSOR","NovoProgressBarElement","progress","LINEAR","circumference","PI","striped","animated","_percent","isRadial","dashoffset","isLinear","RADIAL","NovoProgressElement","_updateBarAppearance","_updateBarRadius","_bars","bar","autoIncrement","NovoSelectSearchComponent","novoSelect","_viewportRuler","novoOption","liveAnnouncer","matFormField","placeholderLabel","noEntriesFoundLabel","indexAndLengthScreenReaderText","clearSearchInput","searching","disableInitialFocus","enableClearOnEscapePressed","preventHomeEndKeyPropagation","disableScrollToActiveOnOptionsChanged","showToggleAllCheckbox","toggleAllCheckboxChecked","toggleAllCheckboxIndeterminate","toggleAllCheckboxTooltipMessage","toogleAllCheckboxTooltipPosition","hideClearSearchButton","alwaysRestoreSelectedOptionsMulti","toggleAll","_options$","BehaviorSubject","optionsList$","optionsLength$","_formControl","_showNoEntriesFound$","combineLatest","optionsLength","getOptionsLengthOffset","delay","updateInputWidth","_reset","adjustScrollTopToFitActiveOptionIntoView","previousFirstOption","currentFirstOption","keyManager","showNoEntriesFound","initMultipleHandling","_emitSelectAllBooleanToParent","_isToggleAllCheckboxVisible","_handleKeyup","ariaActiveDescendantId_1","activeDescendant","announce","getAriaIndex","getAriaLength","_lastExternalInputValue","tap","searchSelectInput","previousSelectedValues","optionValues_1","novoOptionHeight","getNovoOptionHeight","activeOptionIndex","indexOfOptionToFitIntoView","currentScrollTop","searchInputHeight","innerSelectSearch","amountOfVisibleOptions","indexOfFirstVisibleOption","panelElement","clientWidth","LiveAnnouncer","NovoSelectSearchClearDirective","ActivityTableRenderers","propertyRenderer","dateRenderer","toLocaleDateString","NovoActivityTableState","onReset","NovoSortFilter","NovoSelection","novoSelectAllToggle","allRows","deregister","throttleTimeout","_NovoCellDef","CdkCellDef","_NovoHeaderCellDef","CdkHeaderCellDef","_NovoColumnDef","_NovoHeaderCell","_NovoCell","NovoSimpleCellDef","NovoSimpleHeaderCellDef","NovoSimpleColumnDef","_setNameInput","_updateColumnCssClassName","NovoSimpleHeaderCell","NovoSimpleEmptyHeaderCell","NovoSimpleCheckboxHeaderCell","selectAllSubscription","NovoSimpleCell","NovoSimpleCheckboxCell","NovoSimpleActionCell","disabledCheck","NovoSimpleFilterFocus","NovoSimpleCellHeader","dateFns.startOfTomorrow","NovoSimpleTablePagination","_NovoHeaderRowDef","CdkHeaderRowDef","_NovoCdkRowDef","CdkRowDef","_NovoHeaderRow","_NovoRow","NovoSimpleHeaderRowDef","NovoSimpleRowDef","NovoSimpleHeaderRow","NovoSimpleRow","StaticActivityTableService","ActivityTableDataSource","_NovoTable","CdkTable","NovoTable","CDK_TABLE_TEMPLATE","NovoActivityTable","_debug","activityService","NovoActivityTableEmptyMessage","NovoActivityTableNoResultsMessage","NovoActivityTableCustomHeader","NovoActivityTableActions","NovoActivityTableCustomFilter","NovoSliderElement","currentSlide","currSlides","handleKeyDownFunc","handleKeyDown","slides","changeSlide","currentClass","NovoStepLabel","CdkStepLabel","NovoStepHeader","_index","_optional","_stringLabel","_templateLabel","CdkStepHeader","novoStepperAnimations","horizontalStepTransition","verticalStepTransition","NovoStep","stepper","CdkStep","CdkStepper","NovoStepper","_iconOverrides","_steps","steps","completed","_stateChanged","getIndicatorType","NovoHorizontalStepper","aria-orientation","NovoVerticalStepper","_orientation","NovoStepperNext","CdkStepperNext","[type]","NovoStepperPrevious","CdkStepperPrevious","CdkStepperModule","NovoStepStatus","NovoTabbedGroupPickerElement","labelService","displayTabIndex","filterText","showClearAll","scrollViewportHeight","virtualScrollItemSize","getSelectedState","childArray","numberOfSelectedItems","displayTabs","displayTab","tabs","labelField","typeName","setupDisplayData","createChildrenReferences","initializeDescendantSelection","updateParentsAndQuickSelect","updateClearAll","filterTextSubscription","changeTab","scrollableInstance","scrollTo","behavior","getPixelHeight","childTab","childTypeName","compareFunction_1","makeCompareFunction","valueField","warnFunction_1","makeWarningFunction","sortedChildren_1","replaceChildrenWithReferences","quickSelectConfig","compareFunction","warnFunction","sortedChildren","aValue","bValue","sortedData","parentLabel","childLabel","childValueField","childValue","onDropdownToggle","getElementRef","onItemToggled","updateDescendants","emitSelectedValues","parentIsSelected","itemWasJustSelected","selectedStateOption","selectedState","quickSelect","selectedValues","deselectEverything","onClearFilter","onFilter","DateCell","getFormattedDate","BaseRenderer","NovoDropdownCell","dropdownCellConfig","NovoTableKeepFilterFocus","Pagination","itemsPerPageChange","onPageChange","maxPagesDisplayed","pageSelectDisabled","rowOptions","getDefaultRowOptions","onPageSizeChanged","noPrevious","noNext","num","totalItems","PercentageCell","RowDetails","TableCell","componentRef","hasEditor","TableFilter","onFilterChange","freetextFilter","onChangeFilter","filterThrottle","filtering","ThOrderable","onOrderChange","ordering","table","findTable","onDragStart","effectAllowed","cloneNode","deleteColumns","body","setDragImage","deleteRow","cellLength","cells","deleteCell","htmlElementNode","onDrag","onDragEnd","onDrop","onDragOver","onDragEnter","onDragLeave","(dragstart)","(dragover)","(dragenter)","(dragleave)","(dragend)","(drop)","ThSortable","onSortChange","onToggleSort","sorting","NovoTableMode","NovoTableHeaderElement","NovoTableFooterElement","NovoTableActionsElement","NovoTableElement","builder","skipSortAndFilterClear","VIEW","onRowClick","onRowSelect","onTableChange","_rows","activeId","master","selectedPageCount","showSelectAllMessage","pagedData","toggledDropdownMap","tableForm","footers","grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast","dataProvider","setupColumnDefaults","clearAllSortAndFilters","_dataProvider","dp","rowSelectionStyle","pageSelected","rowSelectHandler","columnsToSum_1","columnSums_1","tableFormRows_1","rowControls","_editing","_expanded","rowId","EDIT","setTableEdit","footerConfig","footerConfigIndex","footer","labelColumn","paging","onDropdownToggled","filterInputs","getOptionDataAutomationId","getDefaultOptions","getPageStart","getPageEnd","getRowControlForm","onFilterClick","calendarShow","calenderShow","onFilterClear","originalOptions","preFilter","escapeCharacters","filters_1","filters_1_1","fireTableChangeEvent","isFilterActive","currentSortColumn","sortedColumns","thisColumn","sortedColumns_1","sortedColumns_1_1","preSort","findColumnIndex","oldIndex","newIndex","expandAllOnPage","emitSelected","rowClickHandler","rowSelect","onCalenderSelect","onFilterKeywords","filterKeywords_1","rowNumber","columnNumber","rowIndex","columnIndex","viewOnly","leaveEditMode","hideToastMessage","addEditableRow","tableFormRows","validateAndGetUpdatedData","changedRows_1","errors_1","changedRow","cancelEditing","saveChanges","displayToastMessage","toggleLoading","isColumnHidden","editing","hideColumnOnEdit","hideColumnOnView","[class.editing]","[class.novo-table-loading]","NovoFormModule","NovoTableExtrasModule","NovoToastModule","_NovoToolbarBase","NovoToolbarRow","NovoToolbar","[class.novo-toolbar-multiple-rows]","[class.novo-toolbar-single-row]","Unless","templateRef","security","isDisplayed","ps","ps_1","ps_1_1","EntityList","baseEntity","ENTITY_SHORT_NAMES","Lead","ClientContact","ClientContact1","ClientContact2","ClientContact3","ClientContact4","ClientContact5","ClientCorporation","ClientCorporation1","ClientCorporation2","ClientCorporation3","ClientCorporation4","ClientCorporation5","Opportunity","Task","Note","CorporateUser","Candidate","JobOrder","JobOrder1","JobOrder2","JobOrder3","JobOrder4","JobOrder5","Placement","JobSubmission","CandidateReference","DistributionList","Appointment","metaDisplay","isLinkable","getClass","personSubtype","openLink","NOVO_VALUE_TYPE","NOVO_VALUE_THEME","RenderPipe","sanitizationService","equals","objectOne","objectTwo","keySet","getEntityLabel","_subtype","capitalize","getNumberDecimalPlaces","compensation","countryObj","comments","dateLastModified","lastValue","lastArgs","list_1","list_1_1","fields_1","fields_1_1","list_2","list_2_1","decimalPlaces","NovoValueElement","DEFAULT","lbl","typ","MOBILE","iconCls","onIconClick","INTERNAL_LINK","LINK","ENTITY_LIST","onValueClick","isLinkField","isEntityList","isHTMLField","stripHTML","isURL","NovoAsideModule","NovoAvatarModule","NovoCardModule","NovoAgendaModule","NovoLayoutModule","NovoSliderModule","NovoSimpleTableModule","NovoTableModule","NovoCategoryDropdownModule","NovoMultiPickerModule","NovoPopOverModule","NovoDataTableModule","NovoProgressModule","GooglePlacesModule","NovoValueModule","NovoExpansionModule","UnlessModule","NovoStepperModule","NovoToolbarModule","NovoTabbedGroupPickerModule","NovoNonIdealStateModule","NovoBreadcrumbModule","NovoColorPickerModule","NovoSelectSearchModule","NOVO_ELEMENTS_PROVIDERS","NovoElementProviders","forChild","BACKSPACE","TAB","NUM_CENTER","ENTER","RETURN","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESC","SPACE","PAGE_UP","PAGE_DOWN","HASH_SYMBOL","HOME","LEFT","UP","RIGHT","DOWN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","AT_SYMBOL","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Z","CONTEXT_MENU","NUM_ZERO","NUM_ONE","NUM_TWO","NUM_THREE","NUM_FOUR","NUM_FIVE","NUM_SIX","NUM_SEVEN","NUM_EIGHT","NUM_NINE","NUM_MULTIPLY","NUM_PLUS","NUM_MINUS","NUM_PERIOD","NUM_DIVISION","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","DASH","PERIOD","FORWARD_SLASH"],"mappings":"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,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,4BAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,iBACNwU,OAAQ,CACN,CACED,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,2BAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,oBAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,sBAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,yBAER,CACEuU,KAAM,MACNvU,KAAM,8BAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,uBAER,CACEuU,KAAM,MACNvU,KAAM,QAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,sBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,QAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,oBAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,QAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,sBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,2BAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,qBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,0BAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,uBAER,CACEuU,KAAM,MACNvU,KAAM,qBAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,oBAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,qBAER,CACEuU,KAAM,MACNvU,KAAM,0BAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,MACNvU,KAAM,wBAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,sBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,QAER,CACEuU,KAAM,MACNvU,KAAM,oBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,qBAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,qBAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,iBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,sBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,MACNvU,KAAM,gCAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,sBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,uBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,UACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,uBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,8BAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,6BAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,+BACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,oBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,yBACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,8BAER,CACEuU,KAAM,SACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,kCAER,CACEuU,KAAM,QACNvU,KAAM,mCAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,SACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,0BAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,uBAER,CACEuU,KAAM,QACNvU,KAAM,8BAER,CACEuU,KAAM,QACNvU,KAAM,6BAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,sBAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,uBAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,iCACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,oBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,6BAER,CACEuU,KAAM,KACNvU,KAAM,yBAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,wBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,iBACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,2BACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,OACNjO,GAAI,KACJtG,KAAM,kBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,6CAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,wBAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,yCAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,kCAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,oCAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,mBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,0BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,gCACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,qBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,iBAIZ,CACEuU,KAAM,OACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,iBACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,wBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,wBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,uBAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kCAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,oBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,qBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,kCAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,sBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,oBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,+CAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,8BACNwU,OAAQ,IAEV,CACED,KAAM,OACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,qBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,8BAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,mBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,mBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,8BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,iCAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,0BAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,uBAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,sBAER,CACEuU,KAAM,KACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,OACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,yBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,mCAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,kCAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,6BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,gCACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,qBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,wBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,OAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,wBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,0BAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,OAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,IACNvU,KAAM,cAER,CACEuU,KAAM,IACNvU,KAAM,qCAER,CACEuU,KAAM,IACNvU,KAAM,qBAER,CACEuU,KAAM,IACNvU,KAAM,qBAER,CACEuU,KAAM,IACNvU,KAAM,aAER,CACEuU,KAAM,IACNvU,KAAM,aAER,CACEuU,KAAM,IACNvU,KAAM,YAER,CACEuU,KAAM,IACNvU,KAAM,cAER,CACEuU,KAAM,IACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,+BAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,0BAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,OAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,iBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,sBAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,uBAER,CACEuU,KAAM,KACNvU,KAAM,uBAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,4BACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,+BAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,8BAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,IACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,IACNvU,KAAM,UAER,CACEuU,KAAM,IACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,IACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,IACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,IACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,yBAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,qBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,kBAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,yBAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,mBAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,uBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,SAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,wBAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,iDACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,iBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,6BACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,sBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,mCACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,mBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,yBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,0CACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,oBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,wBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,mBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,OACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,MACNvU,KAAM,kBAER,CACEuU,KAAM,MACNvU,KAAM,uBAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,oBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,kCACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,uBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,wBAER,CACEuU,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,QACNvU,KAAM,wBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,2BAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,+BAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,OAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,OAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,OAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,iBAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,uBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,gBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,iBAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,6BAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,qBAER,CACEuU,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,UAER,CACEuU,KAAM,IACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,SAER,CACEuU,KAAM,IACNvU,KAAM,gBAER,CACEuU,KAAM,MACNvU,KAAM,aAER,CACEuU,KAAM,MACNvU,KAAM,YAER,CACEuU,KAAM,MACNvU,KAAM,mBAER,CACEuU,KAAM,MACNvU,KAAM,WAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,oCAER,CACEuU,KAAM,OACNvU,KAAM,kCAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,6BAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,iBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,2BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,6BAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,uCAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,kCACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,mBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,6BAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,uBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,uBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,uBAER,CACEuU,KAAM,QACNvU,KAAM,mBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,UACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,OACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,OAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,qBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,wCAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,+BAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,gCAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,gCAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,mCAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,sCAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,+BAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,8BAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,6BAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,gCAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,wCAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,mDAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,8CAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,qCAER,CACEuU,KAAM,OACNvU,KAAM,yBAER,CACEuU,KAAM,OACNvU,KAAM,qCAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,mBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,+CACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,wBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,4BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,+BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,wBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,uBAER,CACEuU,KAAM,QACNvU,KAAM,uBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,6BAER,CACEuU,KAAM,QACNvU,KAAM,6BAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,yBAER,CACEuU,KAAM,QACNvU,KAAM,yBAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,sBAER,CACEuU,KAAM,QACNvU,KAAM,uBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,wBAER,CACEuU,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,oBAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,mBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,yBAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,oBAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,yBAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,uBAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,mBAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,iBAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,MAER,CACEuU,KAAM,SACNvU,KAAM,oBAER,CACEuU,KAAM,SACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,uBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,iBAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,gBAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,gBAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,6BAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,oBAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,iBAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,gBAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,mBAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,iBAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,mBAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,oBAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,oBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,cAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,kBAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,mBAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,sBAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,qBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,sCAER,CACEuU,KAAM,SACNvU,KAAM,qCAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,oCAER,CACEuU,KAAM,SACNvU,KAAM,eAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,gBAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,iBAER,CACEuU,KAAM,SACNvU,KAAM,gBAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,WAER,CACEuU,KAAM,SACNvU,KAAM,YAER,CACEuU,KAAM,SACNvU,KAAM,mBAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,UAER,CACEuU,KAAM,SACNvU,KAAM,QAER,CACEuU,KAAM,SACNvU,KAAM,aAER,CACEuU,KAAM,SACNvU,KAAM,SAER,CACEuU,KAAM,SACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,kBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,qBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,+CACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,oBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,yBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,YACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,QACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,QACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,wBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,uBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,CACN,CACED,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,0BAER,CACEuU,KAAM,KACNvU,KAAM,yBAER,CACEuU,KAAM,KACNvU,KAAM,oBAER,CACEuU,KAAM,KACNvU,KAAM,eAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,cAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,YAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,gBAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,aAER,CACEuU,KAAM,KACNvU,KAAM,WAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,OAER,CACEuU,KAAM,KACNvU,KAAM,UAER,CACEuU,KAAM,KACNvU,KAAM,QAER,CACEuU,KAAM,KACNvU,KAAM,OAER,CACEuU,KAAM,KACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,uBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,uCAER,CACEuU,KAAM,OACNvU,KAAM,UAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,8BAER,CACEuU,KAAM,OACNvU,KAAM,mBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,WACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,sBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,qBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,4BAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,cACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,OACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,sBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,2BAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,uBAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,oBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,eAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,eACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,2BACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,SACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,gBAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,cAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,iBAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,eAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,QAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,YAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,aAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,WAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,UAER,CACEuU,KAAM,QACNvU,KAAM,SAER,CACEuU,KAAM,QACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,gBAER,CACEuU,KAAM,OACNvU,KAAM,cAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,uBACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,oBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,uCACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,aACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,oCACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,0BAER,CACEuU,KAAM,OACNvU,KAAM,oBAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,QAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,UACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,mBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,kBAER,CACEuU,KAAM,OACNvU,KAAM,cAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,0BACNwU,OAAQ,CACN,CACED,KAAM,QACNvU,KAAM,4BAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,uBACNwU,OAAQ,CACN,CACED,KAAM,MACNvU,KAAM,eAER,CACEuU,KAAM,MACNvU,KAAM,cAER,CACEuU,KAAM,MACNvU,KAAM,kBAIZ,CACEuU,KAAM,KACNjO,GAAI,KACJtG,KAAM,oBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,iBACNwU,OAAQ,IAEV,CACED,KAAM,KACNjO,GAAI,KACJtG,KAAM,QACNwU,OAAQ,CACN,CACED,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,YAER,CACEuU,KAAM,OACNvU,KAAM,eAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,aAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,OAER,CACEuU,KAAM,OACNvU,KAAM,SAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OACNvU,KAAM,iBAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,WAER,CACEuU,KAAM,OACNvU,KAAM,UAER,CACEuU,KAAM,OAC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","sourcesContent":["import { TemplateRef } from '@angular/core';\n\n// @dynamic\nexport class Helpers {\n  static isTemplateRef(value: any): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  /**\n   * Swallows an event to stop further execution\n   */\n  static swallowEvent(event) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  static interpolate(str: string | Function, props: any): string {\n    if (typeof str === 'function') {\n      return str(props);\n    }\n    if (this.isDate(props)) {\n      props = this.dateToObject(props);\n    }\n    // else {\n    //   props = Object.entries(props).reduce((obj, [key, value]) => {\n    //     const res = { ...obj, [key]: value };\n    //     if (this.isIsoDate(value as string)) {\n    //       res[`${key}Parts`] = this.dateToObject(new Date(value as string));\n    //     }\n    //     return res;\n    //   }, {});\n    // }\n\n    return str.replace(/\\$([\\w\\.]+)/g, (original: string, key: string) => {\n      const keys: string[] = key.split('.');\n      let value = props[keys.shift()];\n      while (keys.length && value !== undefined) {\n        const k = keys.shift();\n        value = k ? value[k] : `${value}.`;\n      }\n      return value !== undefined ? value : '';\n    });\n  }\n\n  static interpolateWithFallback(formatString: string | string[], data: any): string {\n    // Format string can be an array, it will attempt to interpolate each item\n    // in the array, if there is a failure to replace it will mark it as such\n    // It will either return the first successful replacement of ALL variables,\n    // or an empty string\n    if (Array.isArray(formatString)) {\n      const successes: string[] = [];\n      const failures: string[] = [];\n      formatString.forEach((format: string) => {\n        let isSuccess: boolean = true;\n        const attempt = format.replace(/\\$([\\w\\.]+)/g, (original, key) => {\n          const keys = key.split('.');\n          let value = data[keys.shift()];\n          while (keys.length && value !== undefined) {\n            const k = keys.shift();\n            value = k ? value[k] : `${value}.`;\n          }\n          if (isSuccess && Helpers.isEmpty(value)) {\n            isSuccess = false;\n          }\n          return Helpers.isEmpty(value) ? '' : value;\n        });\n        if (isSuccess) {\n          successes.push(attempt);\n        } else {\n          failures.push(attempt);\n        }\n      });\n      if (successes.length !== 0) {\n        return successes[0];\n      }\n      return '';\n    } else {\n      return Helpers.interpolate(formatString, data);\n    }\n  }\n\n  /**\n   * Verifies that an object has every property expected by a string to interpolate\n   * @param str   The string to interpolate\n   * @param props The params to replace in string.\n   */\n  static validateInterpolationProps(str: string | Function, props: any): boolean {\n    if (typeof str === 'function') {\n      return true;\n    }\n    const keys = str.match(/\\$([\\w\\.]+)/g);\n    return keys.every((key) => {\n      return props.hasOwnProperty(key.substr(1));\n    });\n  }\n\n  static isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item) && item !== null;\n  }\n\n  /**\n   * Checks to see if the object is a string\n   */\n  static isString(obj: any) {\n    return typeof obj === 'string';\n  }\n\n  static escapeString(obj: any): any {\n    if (Helpers.isString(obj)) {\n      return obj.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n    return obj;\n  }\n\n  static isNumber(val: any, includeNegatives: boolean = false) {\n    const numberRegex = includeNegatives ? /^-{0,1}\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n    if (typeof val === 'string') {\n      return val.length > 0 && val !== '.' && numberRegex.test(val);\n    } else {\n      return !isNaN(parseFloat(val));\n    }\n  }\n\n  /**\n   * Checks to see if the object is a undefined or null\n   */\n  static isBlank(obj: any): boolean {\n    return obj === undefined || obj === null;\n  }\n\n  /**\n   * Checks to see if the object is a undefined or null\n   */\n  static isEmpty(obj: any): boolean {\n    return Helpers.isBlank(obj) || obj === '' || (Array.isArray(obj) && obj.length === 0);\n  }\n\n  /**\n   * Checks to see if the object is a function\n   */\n  static isFunction(obj: any): boolean {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  }\n\n  /**\n   * Checks to see if the object is a Date\n   */\n  static isDate(obj: any) {\n    return obj instanceof Date;\n  }\n\n  static isIsoDate(str: string) {\n    if (!/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/.test(str)) {\n      return false;\n    }\n    const d = new Date(str);\n    return d.toISOString() === str;\n  }\n\n  static convertToArray(obj: unknown) {\n    if (obj === undefined) {\n      return [];\n    } else if (!Array.isArray(obj)) {\n      return [obj];\n    }\n    return obj;\n  }\n\n  static sortByField(fields: any, reverse = false) {\n    return (previous: any, current: any) => {\n      if (Helpers.isFunction(fields)) {\n        return fields(reverse ? 'desc' : 'asc', previous, current);\n      }\n      if (!Array.isArray(fields)) {\n        fields = [fields];\n      }\n      for (let i = 0; i < fields.length; i++) {\n        const field: string = fields[i];\n        let first = previous[field] || '';\n        let second = current[field] || '';\n\n        if (Helpers.isDate(first) && Helpers.isDate(second)) {\n          // Dates\n          first = first.getTime();\n          second = second.getTime();\n        } else if (Helpers.isString(first) && Helpers.isString(second)) {\n          // Basic strings\n          first = first.toLowerCase();\n          second = second.toLowerCase();\n        } else {\n          // Numbers\n          first = isNaN(Number(first)) ? first : Number(first);\n          second = isNaN(Number(second)) ? second : Number(second);\n        }\n\n        if (first > second) {\n          return reverse ? -1 : 1;\n        } else if (first < second) {\n          return reverse ? 1 : -1;\n        }\n      }\n      return 0;\n    };\n  }\n\n  static filterByField(key, value) {\n    return (item) => {\n      const results = [];\n      let field = can(item).have(key);\n      if (value instanceof Function) {\n        results.push(value(field, item));\n      } else if (Array.isArray(value)) {\n        results.push(value.includes(field));\n      } else if (value instanceof Object) {\n        if (field instanceof Date) {\n          field = field.getTime();\n        }\n        if (value.min) {\n          results.push(field >= value.min);\n        }\n        if (value.max) {\n          results.push(field <= value.max);\n        }\n        if (value.any && Array.isArray(value.any)) {\n          if (Array.isArray(field)) {\n            results.push(value.any.some((v) => field.includes(v)));\n          } else {\n            results.push(value.any.includes(field));\n          }\n        }\n        if (value.all && Array.isArray(value.all)) {\n          results.push(value.all.every((v) => field.includes(v)));\n        }\n        if (value.not) {\n          results.push(!Helpers.filterByField(key, value.not)(item));\n        }\n        for (const subkey in value) {\n          if (['min', 'max', 'any', 'all', 'not'].indexOf(subkey) < 0) {\n            const subvalue = value[subkey];\n            results.push(Helpers.filterByField(`${key}.${subkey}`, subvalue)(item));\n          }\n        }\n      } else {\n        results.push(JSON.stringify(field).match(new RegExp(value, 'gi')));\n      }\n      return results.every((x) => x);\n    };\n  }\n\n  static findAncestor(element: Element, selector: string): Element {\n    while ((element = element.parentElement) && !element.matches.call(element, selector)); // tslint:disable-line\n    return element;\n  }\n\n  static deepClone(item: any): any {\n    if (Array.isArray(item)) {\n      const newArr = [];\n      for (let i = item.length; i-- > 0; ) {\n        // tslint:disable-line\n        newArr[i] = Helpers.deepClone(item[i]);\n      }\n      return newArr;\n    }\n    if (typeof item === 'function' && !/\\(\\) \\{ \\[native/.test(item.toString()) && !item.toString().startsWith('class')) {\n      let obj;\n      for (const k in item) {\n        if (k in item) {\n          obj[k] = Helpers.deepClone(item[k]);\n        }\n      }\n      return obj;\n    }\n    if (item && typeof item === 'object') {\n      const obj = {};\n      for (const k in item) {\n        if (k in item) {\n          obj[k] = Helpers.deepClone(item[k]);\n        }\n      }\n      return obj;\n    }\n    return item;\n  }\n\n  static deepAssign(...objs) {\n    if (objs.length < 2) {\n      throw new Error('Need two or more objects to merge');\n    }\n    const target = Object.assign({}, objs[0]);\n    for (let i = 1; i < objs.length; i++) {\n      const source = Object.assign({}, objs[i]);\n      Object.keys(source).forEach((prop) => {\n        const value = source[prop];\n        if (Helpers.isObject(value)) {\n          if (target.hasOwnProperty(prop) && Helpers.isObject(target[prop])) {\n            target[prop] = Helpers.deepAssign(target[prop], value);\n          } else {\n            target[prop] = value;\n          }\n        } else if (Array.isArray(value)) {\n          if (target.hasOwnProperty(prop) && Array.isArray(target[prop])) {\n            const targetArray = target[prop];\n            value.forEach((sourceItem, itemIndex) => {\n              if (itemIndex < targetArray.length) {\n                const targetItem = targetArray[itemIndex];\n                if (Object.is(targetItem, sourceItem)) {\n                  return;\n                }\n                if (Helpers.isObject(targetItem) && Helpers.isObject(sourceItem)) {\n                  targetArray[itemIndex] = Helpers.deepAssign(targetItem, sourceItem);\n                } else if (Array.isArray(targetItem) && Array.isArray(sourceItem)) {\n                  targetArray[itemIndex] = Helpers.deepAssign(targetItem, sourceItem);\n                } else {\n                  targetArray[itemIndex] = sourceItem;\n                }\n              } else {\n                targetArray.push(sourceItem);\n              }\n            });\n          } else {\n            target[prop] = value;\n          }\n        } else {\n          target[prop] = value;\n        }\n      });\n    }\n\n    return target;\n  }\n\n  /**\n   * Workaround for Edge browser since Element:nextElementSibling is undefined inside of template directives\n   * @param element any document element\n   * @returns the next sibling node that is of type: Element\n   */\n  static getNextElementSibling(element: Element): Node {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    } else {\n      let e = element.nextSibling;\n      while (e && 1 !== e.nodeType) {\n        e = e.nextSibling;\n      }\n      return e;\n    }\n  }\n\n  static dateToObject(date: Date): {\n    day: string;\n    dayPeriod: string;\n    era: string;\n    hour: string;\n    minute: string;\n    month: string;\n    second: string;\n    weekday: string;\n    year: string;\n  } {\n    const dateObj = {\n      day: '',\n      dayPeriod: '',\n      era: '',\n      hour: '',\n      minute: '',\n      month: '',\n      second: '',\n      weekday: '',\n      year: '',\n    };\n    Intl.DateTimeFormat('en-US', {\n      day: 'numeric',\n      era: 'short',\n      hour: 'numeric',\n      minute: 'numeric',\n      month: 'numeric',\n      second: 'numeric',\n      weekday: 'long',\n      year: 'numeric',\n    })\n      .formatToParts(date)\n      .forEach((dateTimeFormatPart: Intl.DateTimeFormatPart) => {\n        if (dateTimeFormatPart.type !== 'literal') {\n          dateObj[dateTimeFormatPart.type] = dateTimeFormatPart.value;\n        }\n      });\n    return dateObj;\n  }\n}\n\nexport class Can {\n  obj: Object;\n\n  constructor(obj: Object) {\n    this.obj = obj;\n  }\n\n  have(key: string): any {\n    const props = key.split('.');\n    let item: any = this.obj;\n    for (let i = 0; i < props.length; i++) {\n      item = item[props[i]];\n      if (this.check(item) === false) {\n        return item;\n      }\n    }\n    return item;\n  }\n\n  check(thing: any): boolean {\n    return thing !== void 0;\n  }\n}\n\nexport function can(obj: any) {\n  return new Can(obj);\n}\n\n// Assumes data is already sorted\nexport function binarySearch<T>(item: T, array: T[], compare: (a: T, b: T) => 1 | -1 | 0 | undefined): T | undefined {\n  return search(0, array.length - 1);\n\n  function search(min: number, max: number): T | undefined {\n    if (min > max) {\n      return undefined;\n    }\n    const guess = min + Math.floor((max - min) / 2);\n    const comparison = compare(item, array[guess]);\n\n    if (comparison === 0) {\n      return array[guess];\n    } else if (comparison === -1) {\n      return search(min, guess - 1);\n    } else if (comparison === 1) {\n      return search(guess + 1, max);\n    } else {\n      throw new Error(`Input mismatch: ${JSON.stringify(item)} not comparable to ${JSON.stringify(array[guess])}`);\n    }\n  }\n}\n","// NG2\nimport { Component, ElementRef, EventEmitter, forwardRef, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\n// organize-imports-ignore\nimport 'brace/index';\nimport 'brace/mode/javascript';\nimport 'brace/theme/chrome';\nimport 'brace/ext/language_tools.js';\n// APP\nimport { Helpers } from '../../utils/Helpers';\n\ndeclare var ace: any;\n\nconst ACE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoAceEditor),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-ace-editor',\n  template: '',\n  providers: [ACE_VALUE_ACCESSOR],\n})\nexport class NovoAceEditor implements ControlValueAccessor, OnInit, OnDestroy {\n  @Input()\n  set theme(theme: any) {\n    this.setTheme(theme);\n  }\n\n  @Input()\n  set options(options: any) {\n    this.setOptions(options);\n  }\n\n  @Input()\n  set mode(mode: any) {\n    this.setMode(mode);\n  }\n\n  @Input()\n  name: string;\n  @Output()\n  blur = new EventEmitter();\n  @Output()\n  focus = new EventEmitter();\n\n  private _options: any = {\n    showPrintMargin: false,\n    displayIndentGuides: true,\n  };\n  private _theme: string = 'chrome';\n  private _mode: string = 'javascript';\n\n  private text: string = '';\n  private oldText: string;\n  private editor: any;\n\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnDestroy() {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n  }\n\n  ngOnInit() {\n    this.initializeEditor();\n    this.initializeOptions();\n    this.initializeEvents();\n  }\n\n  private initializeEditor() {\n    const el = this.elementRef.nativeElement;\n    this.editor = ace.edit(el);\n    this.editor.$blockScrolling = Infinity;\n  }\n\n  private initializeOptions() {\n    this.setOptions(this._options || {});\n    this.setTheme(this._theme);\n    this.setMode(this._mode);\n  }\n\n  private initializeEvents() {\n    this.editor.on('focus', (event) => this.focus.emit(event));\n    this.editor.on('blur', (event) => this.focus.emit(event));\n    this.editor.on('change', () => this.updateText());\n    this.editor.on('paste', () => this.updateText());\n  }\n\n  private updateText() {\n    const newVal = this.editor.getValue();\n\n    if (newVal === this.oldText) {\n      return;\n    }\n\n    this.text = newVal;\n    this.onChange(newVal);\n    this.oldText = newVal;\n  }\n\n  private setText(text: string) {\n    if (Helpers.isBlank(text)) {\n      text = '';\n    }\n    if (this.text !== text) {\n      this.text = text;\n      this.editor.setValue(text);\n      this.onChange(text);\n      this.editor.clearSelection();\n    }\n  }\n\n  private setOptions(options: any) {\n    this._options = options;\n    this.editor.setOptions(options || {});\n  }\n\n  private setTheme(theme: string) {\n    this._theme = theme;\n    this.editor.setTheme(`ace/theme/${theme}`);\n  }\n\n  private setMode(mode: any) {\n    this._mode = mode;\n    this.editor.getSession().setMode(`ace/mode/${this._mode}`);\n  }\n\n  writeValue(value: any) {\n    this.setText(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoAceEditor } from './AceEditor';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoAceEditor],\n  exports: [NovoAceEditor],\n})\nexport class NovoAceEditorModule {}\n","// NG2\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n// App\nimport { Helpers } from '../../utils/Helpers';\n\n@Pipe({ name: 'decodeURI' })\n@Injectable()\nexport class DecodeURIPipe implements PipeTransform {\n  transform(encodedString: string): string {\n    let decodedString: string = '';\n    if (!Helpers.isBlank(encodedString) && typeof encodedString === 'string') {\n      decodedString = decodeURIComponent(encodedString);\n    }\n    return decodedString;\n  }\n}\n","// NG2\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'default', pure: true })\n@Injectable()\nexport class DefaultPipe implements PipeTransform {\n  transform(value: any, defaultValue: any): any {\n    return value || defaultValue;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { can, Helpers } from '../../utils/Helpers';\n\n@Pipe({\n  name: 'groupBy',\n})\nexport class GroupByPipe implements PipeTransform {\n  transform(input: any, prop: string): Array<any> {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    const arr: { [key: string]: Array<any> } = {};\n\n    for (const value of input) {\n      const field: any = can(value).have(prop);\n      if (Helpers.isBlank(arr[field])) {\n        arr[field] = [];\n      }\n\n      arr[field].push(value);\n    }\n\n    return Object.keys(arr).map((key) => ({ key, value: arr[key] }));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype IsoDateRangeArgs = (string | Date)[];\n\n@Pipe({ name: 'isoDateRange' })\nexport class IsoDateRangePipe implements PipeTransform {\n  constructor() {}\n  transform(dates: IsoDateRangeArgs): string {\n    // TODO: Lookup Locale to convert to Users DateFormat\n    const [start, end] = dates.map((date) => {\n      if (date instanceof Date) {\n        return date.toISOString().slice(0, 10);\n      }\n      return (date as string).slice(0, 10);\n    });\n\n    return `${start} - ${end}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isoDate' })\nexport class IsoDatePipe implements PipeTransform {\n  constructor() {}\n  transform(date: string | Date): string {\n    if (date instanceof Date) {\n      return date.toISOString().slice(0, 10);\n    }\n    return (date as string).slice(0, 10);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype IsoTimeRangeArgs = (string | Date)[];\n\n@Pipe({ name: 'isoTimeRange' })\nexport class IsoTimeRangePipe implements PipeTransform {\n  constructor() {}\n  transform(dates: IsoTimeRangeArgs): string {\n    // TODO: Lookup Locale to convert to 12hour\n    const [start, end] = dates.map((date) => {\n      if (date instanceof Date) {\n        return date.toISOString().slice(11, 16);\n      }\n      return (date as string).slice(11, 16);\n    });\n\n    return `${start} - ${end}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isoTime' })\nexport class IsoTimePipe implements PipeTransform {\n  constructor() {}\n  transform(date: string | Date): string {\n    // TODO: Lookup Locale to convert to 12hour\n    if (date instanceof Date) {\n      return date.toISOString().slice(11, 16);\n    }\n    return (date as string).slice(11, 16);\n  }\n}\n","// NG2\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n// Rule storage - pluralize and singularize need to be run sequentially,\n// while other rules can be optimized using an object for instant lookups.\nconst pluralRules = [];\nconst singularRules = [];\nconst uncountables = {};\nconst irregularPlurals = {};\nconst irregularSingles = {};\n\n/**\n * Title case a string.\n */\nfunction toTitleCase(str: string): string {\n  return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n}\n\n/**\n * Sanitize a pluralization rule to a usable regular expression.\n */\nfunction sanitizeRule(rule: RegExp | string): RegExp {\n  if (typeof rule === 'string') {\n    return new RegExp('^' + rule + '$', 'i');\n  }\n  return rule;\n}\n\n/**\n * Pass in a word token to produce a function that can replicate the case on\n * another word.\n */\nfunction restoreCase(word: string, token: string): string {\n  // Upper cased words. E.g. \"HELLO\".\n  if (word === word.toUpperCase()) {\n    return token.toUpperCase();\n  }\n\n  // Title cased words. E.g. \"Title\".\n  if (word[0] === word[0].toUpperCase()) {\n    return toTitleCase(token);\n  }\n\n  // Lower cased words. E.g. \"test\".\n  return token.toLowerCase();\n}\n\n/**\n * Interpolate a regexp string.\n */\nfunction interpolate(str: string, args: any[]): string {\n  return str.replace(/\\$(\\d{1,2})/g, (match, index) => {\n    return args[index] || '';\n  });\n}\n\n/**\n * Sanitize a word by passing in the word and sanitization rules.\n */\nfunction sanitizeWord(token: string, word: string, collection: RegExp[]): string {\n  // Empty string or doesn't need fixing.\n  if (!token.length || uncountables.hasOwnProperty(token)) {\n    return word;\n  }\n\n  let len = collection.length;\n  // Iterate over the sanitization rules and use the first one to match.\n  while (len--) {\n    const rule = collection[len];\n    // If the rule passes, return the replacement.\n    if (rule[0].test(word)) {\n      return word.replace(rule[0], (match, index, words) => {\n        const result = interpolate(rule[1], [match, index, words]);\n        if (match === '') {\n          return restoreCase(words[index - 1], result);\n        }\n        return restoreCase(match, result);\n      });\n    }\n  }\n  return word;\n}\n\n/**\n * Replace a word with the updated word.\n */\nfunction replaceWord(replaceMap: any, keepMap: any, rules: any[]): Function {\n  return (word) => {\n    // Get the correct token and case restoration functions.\n    const token = word.toLowerCase();\n\n    // Check against the keep object map.\n    if (keepMap.hasOwnProperty(token)) {\n      return restoreCase(word, token);\n    }\n\n    // Check against the replacement map for a direct word replacement.\n    if (replaceMap.hasOwnProperty(token)) {\n      return restoreCase(word, replaceMap[token]);\n    }\n\n    // Run all the rules against the word.\n    return sanitizeWord(token, word, rules);\n  };\n}\n\nclass Pluralize {\n  static pluralize(word, count = 1, inclusive?) {\n    const pluralized = count === 1 ? Pluralize.singular(word) : Pluralize.plural(word);\n    return (inclusive ? `${count} ` : '') + pluralized;\n  }\n\n  static singular(word) {\n    return replaceWord(irregularSingles, irregularPlurals, pluralRules)(word);\n  }\n\n  static plural(word) {\n    return replaceWord(irregularPlurals, irregularSingles, singularRules)(word);\n  }\n\n  static addPluralRule(rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  }\n\n  static addSingularRule(rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  }\n\n  static addUncountableRule(word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    Pluralize.addPluralRule(word, '$0');\n    Pluralize.addSingularRule(word, '$0');\n  }\n\n  static addIrregularRule(single, plural) {\n    const one = plural.toLowerCase();\n    const many = single.toLowerCase();\n\n    irregularSingles[one] = many;\n    irregularPlurals[many] = one;\n  }\n}\n\n/**\n * Irregular rules.\n */\n[\n  // Pronouns.\n  ['I', 'we'],\n  ['me', 'us'],\n  ['he', 'they'],\n  ['she', 'they'],\n  ['them', 'them'],\n  ['myself', 'ourselves'],\n  ['yourself', 'yourselves'],\n  ['itself', 'themselves'],\n  ['herself', 'themselves'],\n  ['himself', 'themselves'],\n  ['themself', 'themselves'],\n  ['is', 'are'],\n  ['this', 'these'],\n  ['that', 'those'],\n  // Words ending in with a consonant and `o`.\n  ['echo', 'echoes'],\n  ['dingo', 'dingoes'],\n  ['volcano', 'volcanoes'],\n  ['tornado', 'tornadoes'],\n  ['torpedo', 'torpedoes'],\n  // Ends with `us`.\n  ['genus', 'genera'],\n  ['viscus', 'viscera'],\n  // Ends with `ma`.\n  ['stigma', 'stigmata'],\n  ['stoma', 'stomata'],\n  ['dogma', 'dogmata'],\n  ['lemma', 'lemmata'],\n  ['schema', 'schemata'],\n  ['anathema', 'anathemata'],\n  // Other irregular rules.\n  ['ox', 'oxen'],\n  ['axe', 'axes'],\n  ['die', 'dice'],\n  ['yes', 'yeses'],\n  ['foot', 'feet'],\n  ['eave', 'eaves'],\n  ['goose', 'geese'],\n  ['tooth', 'teeth'],\n  ['quiz', 'quizzes'],\n  ['human', 'humans'],\n  ['proof', 'proofs'],\n  ['carve', 'carves'],\n  ['valve', 'valves'],\n  ['thief', 'thieves'],\n  ['genie', 'genies'],\n  ['groove', 'grooves'],\n  ['pickaxe', 'pickaxes'],\n  ['whiskey', 'whiskies'],\n].forEach((rule) => {\n  return Pluralize.addIrregularRule(rule[0], rule[1]);\n});\n\n/**\n * Pluralization rules.\n */\n[\n  [/s?$/i, 's'],\n  [/([^aeiou]ese)$/i, '$1'],\n  [/(ax|test)is$/i, '$1es'],\n  [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n  [/(e[mn]u)s?$/i, '$1s'],\n  [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n  [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n  [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n  [/(seraph|cherub)(?:im)?$/i, '$1im'],\n  [/(her|at|gr)o$/i, '$1oes'],\n  [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n  [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n  [/sis$/i, 'ses'],\n  [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n  [/([^aeiouy]|qu)y$/i, '$1ies'],\n  [/([^ch][ieo][ln])ey$/i, '$1ies'],\n  [/(x|ch|ss|sh|zz)$/i, '$1es'],\n  [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n  [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n  [/(pe)(?:rson|ople)$/i, '$1ople'],\n  [/(child)(?:ren)?$/i, '$1ren'],\n  [/eaux$/i, '$0'],\n  [/m[ae]n$/i, 'men'],\n  ['thou', 'you'],\n].forEach((rule) => {\n  return Pluralize.addPluralRule(rule[0], rule[1]);\n});\n\n/**\n * Singularization rules.\n */\n[\n  [/s$/i, ''],\n  [/(ss)$/i, '$1'],\n  [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(?:sis|ses)$/i, '$1sis'],\n  [/(^analy)(?:sis|ses)$/i, '$1sis'],\n  [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n  [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n  [/([^aeiouy]|qu)ies$/i, '$1y'],\n  [/(^[pl]|zomb|^(?:neck)?t|[aeo][lt]|cut)ies$/i, '$1ie'],\n  [/(\\b(?:mon|smil))ies$/i, '$1ey'],\n  [/(m|l)ice$/i, '$1ouse'],\n  [/(seraph|cherub)im$/i, '$1'],\n  [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n  [/(e[mn]u)s?$/i, '$1'],\n  [/(movie|twelve)s$/i, '$1'],\n  [/(cris|test|diagnos)(?:is|es)$/i, '$1is'],\n  [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n  [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n  [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n  [/(alumn|alg|vertebr)ae$/i, '$1a'],\n  [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n  [/(matr|append)ices$/i, '$1ix'],\n  [/(pe)(rson|ople)$/i, '$1rson'],\n  [/(child)ren$/i, '$1'],\n  [/(eau)x?$/i, '$1'],\n  [/men$/i, 'man'],\n].forEach((rule) => {\n  return Pluralize.addSingularRule(rule[0], rule[1]);\n});\n\n/**\n * Uncountable rules.\n */\n[\n  // Singular words with no plurals.\n  'advice',\n  'adulthood',\n  'agenda',\n  'aid',\n  'alcohol',\n  'ammo',\n  'athletics',\n  'bison',\n  'blood',\n  'bream',\n  'buffalo',\n  'butter',\n  'carp',\n  'cash',\n  'chassis',\n  'chess',\n  'clothing',\n  'commerce',\n  'cod',\n  'cooperation',\n  'corps',\n  'digestion',\n  'debris',\n  'diabetes',\n  'energy',\n  'equipment',\n  'elk',\n  'excretion',\n  'expertise',\n  'flounder',\n  'fun',\n  'gallows',\n  'garbage',\n  'graffiti',\n  'headquarters',\n  'health',\n  'herpes',\n  'highjinks',\n  'homework',\n  'housework',\n  'information',\n  'jeans',\n  'justice',\n  'kudos',\n  'labour',\n  'literature',\n  'machinery',\n  'mackerel',\n  'media',\n  'mews',\n  'moose',\n  'music',\n  'news',\n  'pike',\n  'plankton',\n  'pliers',\n  'pollution',\n  'premises',\n  'rain',\n  'research',\n  'rice',\n  'salmon',\n  'scissors',\n  'series',\n  'sewage',\n  'shambles',\n  'shrimp',\n  'species',\n  'staff',\n  'swine',\n  'trout',\n  'traffic',\n  'transporation',\n  'tuna',\n  'wealth',\n  'welfare',\n  'whiting',\n  'wildebeest',\n  'wildlife',\n  'you',\n  // Regexes.\n  /pox$/i, // \"chickpox\", \"smallpox\"\n  /ois$/i,\n  /deer$/i, // \"deer\", \"reindeer\"\n  /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n  /sheep$/i,\n  /measles$/i,\n  /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n].forEach(Pluralize.addUncountableRule);\n\n@Pipe({ name: 'plural' })\n@Injectable()\nexport class PluralPipe implements PipeTransform {\n  transform(value) {\n    return Pluralize.pluralize(value);\n  }\n}\n","// NG2\nimport { HttpClient } from '@angular/common/http';\n\nexport enum AppBridgeHandler {\n  HTTP,\n  OPEN,\n  OPEN_LIST,\n  CLOSE,\n  REFRESH,\n  PIN,\n  REGISTER,\n  UPDATE,\n  REQUEST_DATA,\n  CALLBACK,\n  PING,\n}\n\n// record       - an individual entity record\n// add/fast-add - the add page for a new record\n// custom       - custom action that opens the url provided in data.url\n// preview      - the preview slideout available only in Novo\nexport type NovoApps = 'record' | 'add' | 'fast-add' | 'slide-out-add' | 'custom' | 'preview';\n\nexport type AlleyLinkColors =\n  | 'purple'\n  | 'green'\n  | 'blue'\n  | 'lead'\n  | 'candidate'\n  | 'contact'\n  | 'company'\n  | 'opportunity'\n  | 'job'\n  | 'billable-charge'\n  | 'earn-code'\n  | 'invoice-statement'\n  | 'job-code'\n  | 'payable-charge'\n  | 'sales-tax-rate'\n  | 'tax-rules'\n  | 'submission'\n  | 'placement'\n  | 'navigation'\n  | 'canvas'\n  | 'neutral'\n  | 'neutral-italic'\n  | 'initial'\n  | 'distributionList'\n  | 'contract';\n\nexport interface IAppBridgeOpenEvent {\n  type: NovoApps;\n  entityType: string;\n  entityId?: string;\n  tab?: string;\n  data?: any;\n  passthrough?: string;\n}\n\nexport type MosaicLists =\n  | 'Candidate'\n  | 'ClientContact'\n  | 'ClientCorporation'\n  | 'JobOrder'\n  | 'JobSubmission'\n  | 'JobPosting'\n  | 'Placement'\n  | 'Lead'\n  | 'Opportunity';\n\nexport interface IAppBridgeOpenListEvent {\n  type: MosaicLists;\n  keywords: Array<string>;\n  criteria: any;\n}\n\nexport type NovoDataType = 'entitlements' | 'settings' | 'user';\n\nexport interface IAppBridgeRequestDataEvent {\n  type: NovoDataType;\n}\n\nconst HTTP_VERBS = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n};\n\nconst MESSAGE_TYPES = {\n  REGISTER: 'register',\n  OPEN: 'open',\n  OPEN_LIST: 'openList',\n  CLOSE: 'close',\n  REFRESH: 'refresh',\n  PIN: 'pin',\n  PING: 'ping',\n  UPDATE: 'update',\n  HTTP_GET: 'httpGET',\n  HTTP_POST: 'httpPOST',\n  HTTP_PUT: 'httpPUT',\n  HTTP_DELETE: 'httpDELETE',\n  CUSTOM_EVENT: 'customEvent',\n  REQUEST_DATA: 'requestData',\n  CALLBACK: 'callback',\n};\n\ndeclare const postRobot: any;\n\nexport class AppBridgeService {\n  create(name: string) {\n    return new AppBridge(name);\n  }\n}\n\nexport class DevAppBridgeService {\n  constructor(private http: HttpClient) {}\n  create(name: string) {\n    return new DevAppBridge(name, this.http);\n  }\n}\n\nexport class AppBridge {\n  public id: string = `${Date.now()}`;\n  public traceName: string;\n  public windowName: string;\n\n  private _registeredFrames = [];\n  private _handlers = {};\n  private _tracing: boolean = false;\n  private _eventListeners: any = {};\n\n  // Type?\n  constructor(traceName: string = 'AppBridge') {\n    this.traceName = traceName;\n    if (postRobot) {\n      postRobot.CONFIG.LOG_LEVEL = 'error';\n      try {\n        this._setupHandlers();\n      } catch (error) {\n        // No op\n      }\n    }\n  }\n\n  set tracing(tracing: boolean) {\n    this._tracing = tracing;\n  }\n\n  public handle(type: AppBridgeHandler, handler: Function) {\n    this._handlers[type] = handler;\n  }\n\n  private _trace(eventType, event) {\n    if (this._tracing) {\n      console.log(`[${this.traceName || this.id}] \"${eventType}\"`, event); // tslint:disable-line\n    }\n  }\n\n  protected _setupHandlers(): void {\n    // Register\n    postRobot.on(MESSAGE_TYPES.REGISTER, (event) => {\n      this._trace(MESSAGE_TYPES.REGISTER, event);\n      this._registeredFrames.push(event);\n      return this.register(event.data).then((windowName) => {\n        return { windowName };\n      });\n    });\n    // Update\n    postRobot.on(MESSAGE_TYPES.UPDATE, (event) => {\n      this._trace(MESSAGE_TYPES.UPDATE, event);\n      return this.update(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Open\n    postRobot.on(MESSAGE_TYPES.OPEN, (event) => {\n      this._trace(MESSAGE_TYPES.OPEN, event);\n      return this.open(event.data).then((success) => {\n        return { success };\n      });\n    });\n    postRobot.on(MESSAGE_TYPES.OPEN_LIST, (event) => {\n      this._trace(MESSAGE_TYPES.OPEN_LIST, event);\n      return this.openList(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Close\n    postRobot.on(MESSAGE_TYPES.CLOSE, (event) => {\n      this._trace(MESSAGE_TYPES.CLOSE, event);\n      const index = this._registeredFrames.findIndex((frame) => frame.data.id === event.data.id);\n      if (index !== -1) {\n        this._registeredFrames.splice(index, 1);\n      }\n      return this.close(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Refresh\n    postRobot.on(MESSAGE_TYPES.REFRESH, (event) => {\n      this._trace(MESSAGE_TYPES.REFRESH, event);\n      return this.refresh(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // PIN\n    postRobot.on(MESSAGE_TYPES.PIN, (event) => {\n      this._trace(MESSAGE_TYPES.PIN, event);\n      return this.pin(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // PING\n    postRobot.on(MESSAGE_TYPES.PING, (event) => {\n      this._trace(MESSAGE_TYPES.PING, event);\n      return this.httpGET('ping').then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // REQUEST_DATA\n    postRobot.on(MESSAGE_TYPES.REQUEST_DATA, (event) => {\n      this._trace(MESSAGE_TYPES.REQUEST_DATA, event);\n      return this.requestData(event.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // CALLBACKS\n    postRobot.on(MESSAGE_TYPES.CALLBACK, (event) => {\n      this._trace(MESSAGE_TYPES.CALLBACK, event);\n      return this.callback(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // HTTP-GET\n    postRobot.on(MESSAGE_TYPES.HTTP_GET, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_GET, event);\n      return this.httpGET(event.data.relativeURL).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-POST\n    postRobot.on(MESSAGE_TYPES.HTTP_POST, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_POST, event);\n      return this.httpPOST(event.data.relativeURL, event.data.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-PUT\n    postRobot.on(MESSAGE_TYPES.HTTP_PUT, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_PUT, event);\n      return this.httpPUT(event.data.relativeURL, event.data.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-DELETE\n    postRobot.on(MESSAGE_TYPES.HTTP_DELETE, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_DELETE, event);\n      return this.httpDELETE(event.data.relativeURL).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // Custom Events\n    postRobot.on(MESSAGE_TYPES.CUSTOM_EVENT, (event) => {\n      this._trace(MESSAGE_TYPES.CUSTOM_EVENT, event);\n      if (this._eventListeners[event.data.event]) {\n        this._eventListeners[event.data.event].forEach((listener) => {\n          listener(event.data.data);\n        });\n      }\n      if (this._registeredFrames.length > 0) {\n        this._registeredFrames.forEach((frame) => {\n          postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, event.data);\n        });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an open event\n   * @param packet any - packet of data to send with the open event\n   */\n  public open(packet: IAppBridgeOpenEvent): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.OPEN]) {\n        this._handlers[AppBridgeHandler.OPEN](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.OPEN, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.OPEN} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an openList event\n   * @param packet any - packet of data to send with the open event\n   */\n  public openList(packet: Partial<IAppBridgeOpenListEvent>): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.OPEN_LIST]) {\n        this._handlers[AppBridgeHandler.OPEN_LIST](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        const openListPacket = {};\n        Object.assign(openListPacket, { type: 'List', entityType: packet.type, keywords: packet.keywords, criteria: packet.criteria });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.OPEN_LIST, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.OPEN_LIST} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an close event\n   * @param packet any - packet of data to send with the close event\n   */\n  public update(\n    packet: Partial<{ entityType: string; entityId: string; title: string; titleKey: string; color: AlleyLinkColors }>,\n  ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.UPDATE]) {\n        this._handlers[AppBridgeHandler.UPDATE](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.UPDATE, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.UPDATE} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an close event\n   */\n  public close(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.CLOSE]) {\n        this._handlers[AppBridgeHandler.CLOSE](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - close(packet) is deprecated! Please just use close()!'); // tslint:disable-line\n        }\n        const realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.CLOSE, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.CLOSE} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an close event\n   */\n  public refresh(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REFRESH]) {\n        this._handlers[AppBridgeHandler.REFRESH](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - refresh(packet) is deprecated! Please just use refresh()!'); // tslint:disable-line\n        }\n        const realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REFRESH, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REFRESH} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  public ping(): Promise<boolean> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.PING]) {\n        this._handlers[AppBridgeHandler.PING]({}, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.PING, {})\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to a pin event\n   */\n  public pin(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.PIN]) {\n        this._handlers[AppBridgeHandler.PIN](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - pin(packet) is deprecated! Please just use pin()!'); // tslint:disable-line\n        }\n        const realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.PIN, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.PIN} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to a requestData event\n   * @param packet any - packet of data to send with the requestData event\n   */\n  public requestData(packet: { type: string }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REQUEST_DATA]) {\n        this._handlers[AppBridgeHandler.REQUEST_DATA](packet, (data: any) => {\n          if (data) {\n            resolve({ data });\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REQUEST_DATA, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REQUEST_DATA} (callback)`, event);\n            if (event.data) {\n              resolve({ data: event.data.data });\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires a generic callback command\n   * @param packet string - key: string, generic: boolean\n   */\n  public callback(packet: { key: string; generic: boolean; options: object }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.CALLBACK]) {\n        this._handlers[AppBridgeHandler.CALLBACK](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.CALLBACK, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.CALLBACK} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an register event\n   * @param packet any - packet of data to send with the event\n   */\n  public register(packet: Partial<{ title: string; url: string; color: AlleyLinkColors }> = {}): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REGISTER]) {\n        this._handlers[AppBridgeHandler.REGISTER](packet, (windowName: string) => {\n          if (windowName) {\n            resolve(windowName);\n          } else {\n            resolve(null);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REGISTER, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REGISTER} (callback)`, event);\n            if (event.data) {\n              this.windowName = event.data.windowName;\n              resolve(event.data.windowName);\n            } else {\n              resolve(null);\n            }\n          })\n          .catch((err) => {\n            this._trace(`${MESSAGE_TYPES.REGISTER} - FAILED - (no parent)`, err);\n            reject(err);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_GET event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpGET(relativeURL: string, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.GET, relativeURL }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_GET, { relativeURL }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_POST event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPOST(relativeURL: string, postData: any, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.POST, relativeURL, data: postData }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_POST, { relativeURL, data: postData }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_PUT event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPUT(relativeURL: string, putData: any, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.PUT, relativeURL, data: putData }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_PUT, { relativeURL, data: putData }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires or responds to an HTTP_DELETE event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpDELETE(relativeURL: string, timeout: number = 10000): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.DELETE, relativeURL }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_DELETE, { relativeURL }, { timeout })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n\n  /**\n   * Fires a custom event to anywhere in the application\n   * @param event string - event name to fire\n   * @param data any - data to be sent along with the event\n   */\n  public fireEvent(event: string, data: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      postRobot\n        .sendToParent(MESSAGE_TYPES.CUSTOM_EVENT, { event, data })\n        .then((e: any) => {\n          resolve(e);\n        })\n        .catch((err) => {\n          reject(null);\n        });\n    });\n  }\n\n  /**\n   * Fires a custom event to all registered frames\n   * @param event string - event name to fire\n   * @param data any - data to be sent along with the event\n   */\n  public fireEventToChildren(event: string, data: any): void {\n    if (this._registeredFrames.length > 0) {\n      this._registeredFrames.forEach((frame) => {\n        postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, {\n          event,\n          eventType: event,\n          data,\n        });\n      });\n    }\n  }\n\n  /**\n   * Fires a custom event to specified frames\n   * @param source Window - specific iframe contentWindow\n   * @param event string - event name to fire\n   * @param data any - data to be sent along with the event\n   */\n  public fireEventToChild(source: Window | HTMLIFrameElement, event: string, data: any): void {\n    if (source instanceof HTMLIFrameElement) {\n      source = source.contentWindow;\n    }\n    postRobot.send(source, MESSAGE_TYPES.CUSTOM_EVENT, { event, data });\n  }\n\n  /**\n   * Adds an event listener to a custom event\n   * @param event string - event name to listen to\n   * @param callback function - callback to be fired when an event is caught\n   */\n  public addEventListener(event: string, callback: Function): void {\n    if (!this._eventListeners[event]) {\n      this._eventListeners[event] = [];\n    }\n    this._eventListeners[event].push(callback);\n  }\n}\n\nexport class DevAppBridge extends AppBridge {\n  private baseURL: string;\n\n  constructor(traceName: string = 'DevAppBridge', private http: HttpClient) {\n    super(traceName);\n    const cookie = this.getCookie('UlEncodedIdentity');\n    if (cookie && cookie.length) {\n      const identity = JSON.parse(decodeURIComponent(cookie));\n      const endpoints = identity.sessions.reduce((obj, session) => {\n        obj[session.name] = session.value.endpoint;\n        return obj;\n      }, {});\n      this.baseURL = endpoints.rest;\n    }\n  }\n  protected _setupHandlers(): void {}\n\n  /**\n   * Fires or responds to an HTTP_GET event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpGET(relativeURL: string): Promise<any> {\n    return this.http.get(`${this.baseURL}/${relativeURL}`, { withCredentials: true }).toPromise();\n  }\n\n  /**\n   * Fires or responds to an HTTP_POST event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPOST(relativeURL: string, postData: any): Promise<any> {\n    return this.http.post(`${this.baseURL}/${relativeURL}`, postData, { withCredentials: true }).toPromise();\n  }\n\n  /**\n   * Fires or responds to an HTTP_PUT event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpPUT(relativeURL: string, putData: any): Promise<any> {\n    return this.http.put(`${this.baseURL}/${relativeURL}`, putData, { withCredentials: true }).toPromise();\n  }\n\n  /**\n   * Fires or responds to an HTTP_DELETE event\n   * @param packet any - packet of data to send with the event\n   */\n  public httpDELETE(relativeURL: string): Promise<any> {\n    return this.http.delete(`${this.baseURL}/${relativeURL}`, { withCredentials: true }).toPromise();\n  }\n\n  private getCookie(cname: string): any {\n    if (document) {\n      const name = `${cname}=`;\n      const ca = document.cookie.split(';');\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n    }\n    return false;\n  }\n}\n","// NG2\nimport { NgModule } from '@angular/core';\nimport { DecodeURIPipe } from './decode-uri/DecodeURI';\nimport { DefaultPipe } from './default/Default';\nimport { GroupByPipe } from './group-by/GroupBy';\nimport { IsoDatePipe, IsoDateRangePipe, IsoTimePipe, IsoTimeRangePipe } from './iso8601';\nimport { PluralPipe } from './plural/Plural';\n\n@NgModule({\n  declarations: [PluralPipe, DecodeURIPipe, GroupByPipe, DefaultPipe, IsoTimePipe, IsoDatePipe, IsoTimeRangePipe, IsoDateRangePipe],\n  exports: [PluralPipe, DecodeURIPipe, GroupByPipe, DefaultPipe, IsoTimePipe, IsoDatePipe, IsoTimeRangePipe, IsoDateRangePipe],\n})\nexport class NovoPipesModule {}\n","import * as dateFns from 'date-fns';\n\nconst WEEKEND_DAY_NUMBERS: number[] = [0, 6];\nconst DAYS_IN_WEEK: number = 7;\nconst HOURS_IN_DAY: number = 24;\nconst MINUTES_IN_HOUR: number = 60;\n\nexport enum CalendarEventResponse {\n  Maybe,\n  Accepted,\n  Rejected,\n}\n\nexport interface CalendarEventTimesChangedEvent {\n  event: CalendarEvent;\n  newStart: Date;\n  newEnd?: Date;\n}\n\nexport interface WeekDay {\n  date: Date;\n  isPast: boolean;\n  isToday: boolean;\n  isFuture: boolean;\n  isWeekend: boolean;\n}\n\nexport interface EventColor {\n  primary: string;\n  secondary: string;\n}\n\nexport interface EventAction {\n  label: string;\n  cssClass?: string;\n  onClick({ event }: { event: CalendarEvent }): any;\n}\n\nexport interface CalendarEvent {\n  id?: number;\n  start: Date;\n  end?: Date;\n  title: string;\n  description?: string;\n  color: EventColor;\n  type?: string;\n  response?: CalendarEventResponse;\n  actions?: EventAction[];\n  allDay?: boolean;\n  cssClass?: string;\n  resizable?: {\n    beforeStart?: boolean;\n    afterEnd?: boolean;\n  };\n  draggable?: boolean;\n}\n\nexport interface WeekViewEvent {\n  event: CalendarEvent;\n  offset: number;\n  span: number;\n  startsBeforeWeek: boolean;\n  endsAfterWeek: boolean;\n  top?: number;\n  height?: number;\n}\n\nexport interface WeekViewEventRow {\n  row: WeekViewEvent[];\n}\n\nexport interface MonthViewDay extends WeekDay {\n  inMonth: boolean;\n  events: CalendarEvent[];\n  backgroundColor?: string;\n  cssClass?: string;\n  badgeTotal: number;\n}\n\nexport interface MonthView {\n  rowOffsets: number[];\n  days: MonthViewDay[];\n  totalDaysVisibleInWeek: number;\n}\n\nexport interface DayViewEvent {\n  event: CalendarEvent;\n  height: number;\n  width: number;\n  top: number;\n  left: number;\n  startsBeforeDay: boolean;\n  endsAfterDay: boolean;\n}\n\nexport interface DayView {\n  events: DayViewEvent[];\n  width: number;\n  allDayEvents: CalendarEvent[];\n}\n\nexport interface DayViewHourSegment {\n  isStart: boolean;\n  date: Date;\n  cssClass?: string;\n}\n\nexport interface DayViewHour {\n  segments: DayViewHourSegment[];\n}\n\nexport interface IsEventInPeriodArgs {\n  event: CalendarEvent;\n  periodStart: Date;\n  periodEnd: Date;\n}\n\nexport interface GetEventsInPeriodArgs {\n  events: CalendarEvent[];\n  periodStart: Date;\n  periodEnd: Date;\n}\n\nexport interface GetDayViewArgs {\n  events?: CalendarEvent[];\n  viewDate: Date;\n  hourSegments: number;\n  dayStart: {\n    hour: number;\n    minute: number;\n  };\n  dayEnd: {\n    hour: number;\n    minute: number;\n  };\n  eventWidth: number;\n  segmentHeight: number;\n}\n\nfunction getExcludedDays({ startDate, days, excluded }: { startDate: Date; days: number; excluded: number[] }): number {\n  if (excluded.length < 1) {\n    return 0;\n  }\n  let day: number = startDate.getDay();\n  let reduce: number = 0;\n  for (let i: number = 0; i < days; i++) {\n    if (day === DAYS_IN_WEEK) {\n      day = 0;\n    }\n    if (excluded.some((e) => e === day)) {\n      reduce++;\n    }\n    day++;\n  }\n  return reduce;\n}\n\nfunction getWeekViewEventSpan({\n  event,\n  offset,\n  startOfWeek,\n  excluded,\n}: {\n  event: CalendarEvent;\n  offset: number;\n  startOfWeek: Date;\n  excluded: number[];\n}): number {\n  const begin: Date = event.start < startOfWeek ? startOfWeek : event.start;\n  let span: number = 1;\n  if (event.end) {\n    span = dateFns.differenceInDays(dateFns.addMinutes(dateFns.endOfDay(event.end), 1), dateFns.startOfDay(begin));\n  }\n  const totalLength: number = offset + span;\n  if (totalLength > DAYS_IN_WEEK) {\n    span = DAYS_IN_WEEK - offset;\n  }\n  return span - getExcludedDays({ startDate: begin, days: span, excluded });\n}\n\nexport function getWeekViewEventOffset({\n  event,\n  startOfWeek,\n  excluded = [],\n}: {\n  event: CalendarEvent;\n  startOfWeek: Date;\n  excluded?: number[];\n}): number {\n  if (event.start < startOfWeek) {\n    return 0;\n  }\n  const distance: number = dateFns.differenceInDays(event.start, startOfWeek);\n  return distance - getExcludedDays({ startDate: startOfWeek, days: distance, excluded });\n}\n\nfunction isEventIsPeriod({ event, periodStart, periodEnd }: IsEventInPeriodArgs): boolean {\n  const eventStart: Date = event.start;\n  const eventEnd: Date = event.end || event.start;\n\n  if (eventStart > periodStart && eventStart < periodEnd) {\n    return true;\n  }\n\n  if (eventEnd > periodStart && eventEnd < periodEnd) {\n    return true;\n  }\n\n  if (eventStart < periodStart && eventEnd > periodEnd) {\n    return true;\n  }\n\n  if (dateFns.isSameSecond(eventStart, periodStart) || dateFns.isSameSecond(eventStart, periodEnd)) {\n    return true;\n  }\n\n  if (dateFns.isSameSecond(eventEnd, periodStart) || dateFns.isSameSecond(eventEnd, periodEnd)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getEventsInPeriod({ events, periodStart, periodEnd }: GetEventsInPeriodArgs): CalendarEvent[] {\n  return events.filter((event: CalendarEvent) => isEventIsPeriod({ event, periodStart, periodEnd }));\n}\n\nfunction getEventsInTimeRange(events: CalendarEvent[], dayStart: any, dayEnd: any) {\n  return events.filter((event) => {\n    const eventStart: Date = event.start;\n    const eventEnd: Date = event.end || eventStart;\n\n    const startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(eventStart), dayStart.hour), dayStart.minute);\n    const endOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfMinute(eventStart), dayEnd.hour), dayEnd.minute);\n\n    return dateFns.isAfter(eventEnd, startOfView) && dateFns.isBefore(eventStart, endOfView);\n  });\n}\n\nfunction getWeekDay({ date }: { date: Date }): WeekDay {\n  const today: Date = dateFns.startOfDay(new Date());\n  return {\n    date,\n    isPast: date < today,\n    isToday: dateFns.isSameDay(date, today),\n    isFuture: date > today,\n    isWeekend: WEEKEND_DAY_NUMBERS.indexOf(dateFns.getDay(date)) > -1,\n  };\n}\n\nexport function getWeekViewHeader({\n  viewDate,\n  weekStartsOn,\n  excluded = [],\n}: {\n  viewDate: Date;\n  weekStartsOn: number;\n  excluded?: number[];\n}): WeekDay[] {\n  const start: Date = dateFns.startOfWeek(viewDate, { weekStartsOn });\n  const days: WeekDay[] = [];\n  for (let i: number = 0; i < DAYS_IN_WEEK; i++) {\n    const date: Date = dateFns.addDays(start, i);\n    if (!excluded.some((e) => date.getDay() === e)) {\n      days.push(getWeekDay({ date }));\n    }\n  }\n\n  return days;\n}\n\nexport function getWeekView({\n  events = [],\n  viewDate,\n  weekStartsOn,\n  excluded = [],\n  hourSegments,\n  segmentHeight,\n  dayStart,\n  dayEnd,\n}: {\n  events?: CalendarEvent[];\n  viewDate: Date;\n  weekStartsOn: number;\n  excluded?: number[];\n  hourSegments: number;\n  segmentHeight: number;\n  dayStart: any;\n  dayEnd: any;\n}): WeekViewEventRow[] {\n  if (!events) {\n    events = [];\n  }\n\n  const startOfViewWeek: Date = dateFns.startOfWeek(viewDate, { weekStartsOn });\n  const endOfViewWeek: Date = dateFns.endOfWeek(viewDate, { weekStartsOn });\n  const maxRange: number = DAYS_IN_WEEK - excluded.length;\n\n  const eventsMapped: WeekViewEvent[] = getEventsInTimeRange(\n    getEventsInPeriod({ events, periodStart: startOfViewWeek, periodEnd: endOfViewWeek }),\n    dayStart,\n    dayEnd,\n  )\n    .map((event) => {\n      const offset: number = getWeekViewEventOffset({ event, startOfWeek: startOfViewWeek, excluded });\n      const span: number = 1; // getWeekViewEventSpan({ event, offset, startOfWeek: startOfViewWeek, excluded });\n      return { event, offset, span };\n    })\n    .filter((e) => e.offset < maxRange)\n    .filter((e) => e.span > 0)\n    .map((entry) => ({\n      event: entry.event,\n      offset: entry.offset,\n      span: entry.span,\n      startsBeforeWeek: entry.event.start < startOfViewWeek,\n      endsAfterWeek: (entry.event.end || entry.event.start) > endOfViewWeek,\n      top: 0,\n    }))\n    .sort((itemA, itemB): number => {\n      const startSecondsDiff: number = dateFns.differenceInSeconds(itemA.event.start, itemB.event.start);\n      if (startSecondsDiff === 0) {\n        return dateFns.differenceInSeconds(itemB.event.end || itemB.event.start, itemA.event.end || itemA.event.start);\n      }\n      return startSecondsDiff;\n    })\n    .map((entry: WeekViewEvent) => {\n      const startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(entry.event.start), dayStart.hour), dayStart.minute);\n      const endOfView: Date = dateFns.setMinutes(\n        dateFns.setHours(dateFns.startOfMinute(dateFns.endOfDay(entry.event.start)), dayEnd.hour),\n        dayEnd.minute,\n      );\n\n      const eventStart: Date = entry.event.start;\n      const eventEnd: Date = entry.event.end || eventStart;\n\n      const hourHeightModifier: number = (hourSegments * segmentHeight) / MINUTES_IN_HOUR;\n\n      if (eventStart > startOfView) {\n        entry.top += dateFns.differenceInMinutes(eventStart, startOfView);\n      }\n\n      entry.top *= hourHeightModifier;\n\n      const startsBeforeDay: boolean = eventStart < startOfView;\n      const endsAfterDay: boolean = eventEnd > endOfView;\n\n      const startDate: Date = startsBeforeDay ? startOfView : eventStart;\n      const endDate: Date = endsAfterDay ? endOfView : eventEnd;\n\n      let height: number = dateFns.differenceInMinutes(endDate, startDate);\n\n      if (!entry.event.end) {\n        height = segmentHeight;\n      } else {\n        height *= hourHeightModifier;\n      }\n\n      entry.height = height;\n\n      return entry;\n    });\n\n  const eventRows: WeekViewEventRow[] = [];\n  const allocatedEvents: WeekViewEvent[] = [];\n\n  eventsMapped.forEach((event: WeekViewEvent, index: number) => {\n    if (allocatedEvents.indexOf(event) === -1) {\n      allocatedEvents.push(event);\n\n      const otherRowEvents: WeekViewEvent[] = eventsMapped.slice(index + 1).filter((nextEvent) => {\n        return nextEvent.top === event.top && nextEvent.offset === event.offset;\n      });\n\n      if (otherRowEvents.length > 0) {\n        const totalEventsForRow = otherRowEvents.length + 1;\n\n        event.span = 1 / totalEventsForRow;\n\n        let nextOffset = event.span + event.offset;\n\n        otherRowEvents.forEach((nextEvent: WeekViewEvent) => {\n          nextEvent.offset = nextOffset;\n          nextEvent.span = event.span;\n          nextOffset = nextEvent.span + nextEvent.offset;\n        });\n\n        allocatedEvents.push(...otherRowEvents);\n      }\n\n      eventRows.push({\n        row: [event, ...otherRowEvents],\n      });\n    }\n  });\n\n  return eventRows;\n}\n\nexport function getMonthView({\n  events = [],\n  viewDate,\n  weekStartsOn,\n  excluded = [],\n}: {\n  events?: CalendarEvent[];\n  viewDate: Date;\n  weekStartsOn: number;\n  excluded?: number[];\n}): MonthView {\n  if (!events) {\n    events = [];\n  }\n\n  const start: Date = dateFns.startOfWeek(dateFns.startOfMonth(viewDate), { weekStartsOn });\n  const end: Date = dateFns.endOfWeek(dateFns.endOfMonth(viewDate), { weekStartsOn });\n  const eventsInMonth: CalendarEvent[] = getEventsInPeriod({\n    events,\n    periodStart: start,\n    periodEnd: end,\n  });\n  const days: MonthViewDay[] = [];\n  for (let i: number = 0; i < dateFns.differenceInDays(end, start) + 1; i++) {\n    const date: Date = dateFns.addDays(start, i);\n    if (!excluded.some((e) => date.getDay() === e)) {\n      const day: MonthViewDay = getWeekDay({ date }) as MonthViewDay;\n      const calEvents: CalendarEvent[] = getEventsInPeriod({\n        events: eventsInMonth,\n        periodStart: dateFns.startOfDay(date),\n        periodEnd: dateFns.endOfDay(date),\n      });\n      day.inMonth = dateFns.isSameMonth(date, viewDate);\n      day.events = calEvents;\n      day.badgeTotal = calEvents.length;\n      days.push(day);\n    }\n  }\n\n  const totalDaysVisibleInWeek: number = DAYS_IN_WEEK - excluded.length;\n  const rows: number = Math.floor(days.length / totalDaysVisibleInWeek);\n  const rowOffsets: number[] = [];\n  for (let i: number = 0; i < rows; i++) {\n    rowOffsets.push(i * totalDaysVisibleInWeek);\n  }\n\n  return {\n    rowOffsets,\n    totalDaysVisibleInWeek,\n    days,\n  };\n}\n\nexport function getDayView({ events = [], viewDate, hourSegments, dayStart, dayEnd, eventWidth, segmentHeight }: GetDayViewArgs): DayView {\n  if (!events) {\n    events = [];\n  }\n\n  const startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(viewDate), dayStart.hour), dayStart.minute);\n  const endOfView: Date = dateFns.setMinutes(\n    dateFns.setHours(dateFns.startOfMinute(dateFns.endOfDay(viewDate)), dayEnd.hour),\n    dayEnd.minute,\n  );\n  const previousDayEvents: DayViewEvent[] = [];\n\n  const dayViewEvents: DayViewEvent[] = getEventsInTimeRange(\n    getEventsInPeriod({\n      events: events.filter((event: CalendarEvent) => !event.allDay),\n      periodStart: startOfView,\n      periodEnd: endOfView,\n    }),\n    dayStart,\n    dayEnd,\n  )\n    .sort((eventA: CalendarEvent, eventB: CalendarEvent) => {\n      return eventA.start.valueOf() - eventB.start.valueOf();\n    })\n    .map((event: CalendarEvent) => {\n      const eventStart: Date = event.start;\n      const eventEnd: Date = event.end || eventStart;\n      const startsBeforeDay: boolean = eventStart < startOfView;\n      const endsAfterDay: boolean = eventEnd > endOfView;\n      const hourHeightModifier: number = (hourSegments * segmentHeight) / MINUTES_IN_HOUR;\n\n      let top: number = 0;\n\n      if (eventStart > startOfView) {\n        top += dateFns.differenceInMinutes(eventStart, startOfView);\n      }\n\n      top *= hourHeightModifier;\n\n      const startDate: Date = startsBeforeDay ? startOfView : eventStart;\n      const endDate: Date = endsAfterDay ? endOfView : eventEnd;\n\n      let height: number = dateFns.differenceInMinutes(endDate, startDate);\n\n      if (!event.end) {\n        height = segmentHeight;\n      } else {\n        height *= hourHeightModifier;\n      }\n\n      const bottom: number = top + height;\n\n      const overlappingPreviousEvents: DayViewEvent[] = previousDayEvents.filter((previousEvent: DayViewEvent) => {\n        const previousEventTop: number = previousEvent.top;\n        const previousEventBottom: number = previousEvent.top + previousEvent.height;\n\n        if (top < previousEventBottom && previousEventBottom < bottom) {\n          return true;\n        } else if (previousEventTop <= top && bottom <= previousEventBottom) {\n          return true;\n        }\n\n        return false;\n      });\n\n      let left: number = 0;\n\n      while (overlappingPreviousEvents.some((previousEvent) => previousEvent.left === left)) {\n        left += eventWidth;\n      }\n\n      const dayEvent: DayViewEvent = {\n        event,\n        height,\n        width: eventWidth,\n        top,\n        left,\n        startsBeforeDay,\n        endsAfterDay,\n      };\n\n      if (height > 0) {\n        previousDayEvents.push(dayEvent);\n      }\n\n      return dayEvent;\n    })\n    .filter((dayEvent: DayViewEvent) => dayEvent.height > 0);\n\n  const width: number = Math.max(...dayViewEvents.map((event: DayViewEvent) => event.left + event.width));\n  const allDayEvents: CalendarEvent[] = getEventsInPeriod({\n    events: events.filter((event: CalendarEvent) => event.allDay),\n    periodStart: dateFns.startOfDay(startOfView),\n    periodEnd: dateFns.endOfDay(endOfView),\n  });\n\n  return {\n    events: dayViewEvents,\n    width,\n    allDayEvents,\n  };\n}\n\nexport function getDayViewHourGrid({\n  viewDate,\n  hourSegments,\n  dayStart,\n  dayEnd,\n}: {\n  viewDate: Date;\n  hourSegments: number;\n  dayStart: any;\n  dayEnd: any;\n}): DayViewHour[] {\n  const hours: DayViewHour[] = [];\n\n  const startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(viewDate), dayStart.hour), dayStart.minute);\n  const endOfView: Date = dateFns.setMinutes(\n    dateFns.setHours(dateFns.startOfMinute(dateFns.endOfDay(viewDate)), dayEnd.hour),\n    dayEnd.minute,\n  );\n  const segmentDuration: number = MINUTES_IN_HOUR / hourSegments;\n  const startOfViewDay: Date = dateFns.startOfDay(viewDate);\n\n  for (let i: number = 0; i < HOURS_IN_DAY; i++) {\n    const segments: DayViewHourSegment[] = [];\n    for (let j: number = 0; j < hourSegments; j++) {\n      const date: Date = dateFns.addMinutes(dateFns.addHours(startOfViewDay, i), j * segmentDuration);\n      if (date >= startOfView && date < endOfView) {\n        segments.push({\n          date,\n          isStart: j === 0,\n        });\n      }\n    }\n    if (segments.length > 0) {\n      hours.push({ segments });\n    }\n  }\n\n  return hours;\n}\n","// NG2\nimport { ComponentFactoryResolver, ComponentRef, Injectable, Injector, StaticProvider, Type, ViewContainerRef } from '@angular/core';\n\n@Injectable()\nexport class ComponentUtils<T = any> {\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {}\n\n  append<T>(ComponentClass: Type<T>, location: ViewContainerRef, providers?: StaticProvider[], onTop?: boolean): ComponentRef<T> {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ComponentClass);\n    const parent = location.injector;\n    const index = onTop ? 0 : location.length;\n    return location.createComponent(componentFactory, index, Injector.create({ providers, parent }));\n  }\n}\n","/* tslint:disable:quotemark */\n\n/**\n * AUTOGENERATED FILE - DO NOT EDIT\n * Generated by: https://bhsource.bullhorn.com/DEV_WORKSPACE/country-state-parser\n * Last generated on: Tue Feb 26 2019 15:45:12 GMT-0600 (Central Standard Time)\n */\n\nexport const COUNTRIES = [\n  {\n    code: 'US',\n    id: 1,\n    name: 'United States',\n    states: [\n      {\n        code: 'AL',\n        name: 'Alabama',\n      },\n      {\n        code: 'AK',\n        name: 'Alaska',\n      },\n      {\n        code: 'AZ',\n        name: 'Arizona',\n      },\n      {\n        code: 'AR',\n        name: 'Arkansas',\n      },\n      {\n        code: 'CA',\n        name: 'California',\n      },\n      {\n        code: 'CO',\n        name: 'Colorado',\n      },\n      {\n        code: 'CT',\n        name: 'Connecticut',\n      },\n      {\n        code: 'DE',\n        name: 'Delaware',\n      },\n      {\n        code: 'DC',\n        name: 'District Of Columbia',\n      },\n      {\n        code: 'FL',\n        name: 'Florida',\n      },\n      {\n        code: 'GA',\n        name: 'Georgia',\n      },\n      {\n        code: 'GU',\n        name: 'Guam',\n      },\n      {\n        code: 'HI',\n        name: 'Hawaii',\n      },\n      {\n        code: 'ID',\n        name: 'Idaho',\n      },\n      {\n        code: 'IL',\n        name: 'Illinois',\n      },\n      {\n        code: 'IN',\n        name: 'Indiana',\n      },\n      {\n        code: 'IA',\n        name: 'Iowa',\n      },\n      {\n        code: 'KS',\n        name: 'Kansas',\n      },\n      {\n        code: 'KY',\n        name: 'Kentucky',\n      },\n      {\n        code: 'LA',\n        name: 'Louisiana',\n      },\n      {\n        code: 'ME',\n        name: 'Maine',\n      },\n      {\n        code: 'MH',\n        name: 'Marshall Islands',\n      },\n      {\n        code: 'MD',\n        name: 'Maryland',\n      },\n      {\n        code: 'MA',\n        name: 'Massachusetts',\n      },\n      {\n        code: 'MI',\n        name: 'Michigan',\n      },\n      {\n        code: 'MN',\n        name: 'Minnesota',\n      },\n      {\n        code: 'MS',\n        name: 'Mississippi',\n      },\n      {\n        code: 'MO',\n        name: 'Missouri',\n      },\n      {\n        code: 'MT',\n        name: 'Montana',\n      },\n      {\n        code: 'NE',\n        name: 'Nebraska',\n      },\n      {\n        code: 'NV',\n        name: 'Nevada',\n      },\n      {\n        code: 'NH',\n        name: 'New Hampshire',\n      },\n      {\n        code: 'NJ',\n        name: 'New Jersey',\n      },\n      {\n        code: 'NM',\n        name: 'New Mexico',\n      },\n      {\n        code: 'NY',\n        name: 'New York',\n      },\n      {\n        code: 'NC',\n        name: 'North Carolina',\n      },\n      {\n        code: 'ND',\n        name: 'North Dakota',\n      },\n      {\n        code: 'MP',\n        name: 'Northern Mariana Islands',\n      },\n      {\n        code: 'OH',\n        name: 'Ohio',\n      },\n      {\n        code: 'OK',\n        name: 'Oklahoma',\n      },\n      {\n        code: 'OR',\n        name: 'Oregon',\n      },\n      {\n        code: 'PW',\n        name: 'Palau',\n      },\n      {\n        code: 'PA',\n        name: 'Pennsylvania',\n      },\n      {\n        code: 'PR',\n        name: 'Puerto Rico',\n      },\n      {\n        code: 'RI',\n        name: 'Rhode Island',\n      },\n      {\n        code: 'SC',\n        name: 'South Carolina',\n      },\n      {\n        code: 'SD',\n        name: 'South Dakota',\n      },\n      {\n        code: 'TN',\n        name: 'Tennessee',\n      },\n      {\n        code: 'TX',\n        name: 'Texas',\n      },\n      {\n        code: 'UT',\n        name: 'Utah',\n      },\n      {\n        code: 'VT',\n        name: 'Vermont',\n      },\n      {\n        code: 'VI',\n        name: 'Virgin Islands',\n      },\n      {\n        code: 'VA',\n        name: 'Virginia',\n      },\n      {\n        code: 'WA',\n        name: 'Washington',\n      },\n      {\n        code: 'WV',\n        name: 'West Virginia',\n      },\n      {\n        code: 'WI',\n        name: 'Wisconsin',\n      },\n      {\n        code: 'WY',\n        name: 'Wyoming',\n      },\n    ],\n  },\n  {\n    code: 'UK',\n    id: 2359,\n    name: 'United Kingdom',\n    states: [\n      {\n        code: 'ABD',\n        name: 'Aberdeenshire',\n      },\n      {\n        code: 'ALD',\n        name: 'Alderney',\n      },\n      {\n        code: 'ANS',\n        name: 'Angus',\n      },\n      {\n        code: 'ANN',\n        name: 'Antrim and Newtownabbey',\n      },\n      {\n        code: 'AGB',\n        name: 'Argyllshire',\n      },\n      {\n        code: 'ABC',\n        name: 'Armagh',\n      },\n      {\n        code: 'EAY',\n        name: 'Ayrshire',\n      },\n      {\n        code: 'BLA',\n        name: 'Ballymena',\n      },\n      {\n        code: 'BAY',\n        name: 'Ballymoney',\n      },\n      {\n        code: 'BNB',\n        name: 'Banbridge',\n      },\n      {\n        code: 'BAN',\n        name: 'Banffshire',\n      },\n      {\n        code: 'BDF',\n        name: 'Bedfordshire',\n      },\n      {\n        code: 'BFS',\n        name: 'Belfast',\n      },\n      {\n        code: 'BRK',\n        name: 'Berkshire',\n      },\n      {\n        code: 'BGW',\n        name: 'Blaenau Gwent',\n      },\n      {\n        code: 'SCB',\n        name: 'Borders',\n      },\n      {\n        code: 'BGE',\n        name: 'Bridgend',\n      },\n      {\n        code: 'BST',\n        name: 'Bristol',\n      },\n      {\n        code: 'BKM',\n        name: 'Buckinghamshire',\n      },\n      {\n        code: 'CAY',\n        name: 'Caerphilly',\n      },\n      {\n        code: 'CAI',\n        name: 'Caithness',\n      },\n      {\n        code: 'CAM',\n        name: 'Cambridgeshire',\n      },\n      {\n        code: 'CRF',\n        name: 'Cardiff',\n      },\n      {\n        code: 'CMN',\n        name: 'Carmarthenshire',\n      },\n      {\n        code: 'CKF',\n        name: 'Carrickfergus',\n      },\n      {\n        code: 'CAS',\n        name: 'Castlereagh',\n      },\n      {\n        code: 'CGN',\n        name: 'Ceredigion',\n      },\n      {\n        code: 'CHE',\n        name: 'Cheshire',\n      },\n      {\n        code: 'CLK',\n        name: 'Clackmannanshire',\n      },\n      {\n        code: 'CLR',\n        name: 'Coleraine',\n      },\n      {\n        code: 'CWY',\n        name: 'Conwy',\n      },\n      {\n        code: 'CKT',\n        name: 'Cookstown',\n      },\n      {\n        code: 'CON',\n        name: 'Cornwall',\n      },\n      {\n        code: 'DUR',\n        name: 'County Durham',\n      },\n      {\n        code: 'DRS',\n        name: 'County Londonderry',\n      },\n      {\n        code: 'CRA',\n        name: 'Craigavon',\n      },\n      {\n        code: 'CMA',\n        name: 'Cumbria',\n      },\n      {\n        code: 'DEN',\n        name: 'Denbighshire',\n      },\n      {\n        code: 'DBY',\n        name: 'Derbyshire',\n      },\n      {\n        code: 'DEV',\n        name: 'Devon',\n      },\n      {\n        code: 'DOR',\n        name: 'Dorset',\n      },\n      {\n        code: 'EDU',\n        name: 'Dumbartonshire',\n      },\n      {\n        code: 'DGY',\n        name: 'Dumfries and Galloway',\n      },\n      {\n        code: 'DGN',\n        name: 'Dungannon and South Tyrone',\n      },\n      {\n        code: 'ELN',\n        name: 'East Lothian',\n      },\n      {\n        code: 'ESX',\n        name: 'East Sussex',\n      },\n      {\n        code: 'ERY',\n        name: 'East Yorkshire',\n      },\n      {\n        code: 'ESS',\n        name: 'Essex',\n      },\n      {\n        code: 'FMO',\n        name: 'Fermanagh and Omagh',\n      },\n      {\n        code: 'FIF',\n        name: 'Fife',\n      },\n      {\n        code: 'FLN',\n        name: 'Flintshire',\n      },\n      {\n        code: 'GLG',\n        name: 'Glasgow',\n      },\n      {\n        code: 'GLS',\n        name: 'Gloucestershire',\n      },\n      {\n        code: 'LND',\n        name: 'Greater London',\n      },\n      {\n        code: 'MAN',\n        name: 'Greater Manchester',\n      },\n      {\n        code: 'GSY',\n        name: 'Guernsey',\n      },\n      {\n        code: 'GWN',\n        name: 'Gwynedd',\n      },\n      {\n        code: 'HAM',\n        name: 'Hampshire',\n      },\n      {\n        code: 'HEF',\n        name: 'Herefordshire',\n      },\n      {\n        code: 'HRM',\n        name: 'Herm',\n      },\n      {\n        code: 'HRT',\n        name: 'Hertfordshire',\n      },\n      {\n        code: 'HLD',\n        name: 'Highland',\n      },\n      {\n        code: 'INV',\n        name: 'Inverness-shire',\n      },\n      {\n        code: 'AGY',\n        name: 'Isle of Anglesey',\n      },\n      {\n        code: 'IOM',\n        name: 'Isle of Man',\n      },\n      {\n        code: 'IOW',\n        name: 'Isle of Wight',\n      },\n      {\n        code: 'JSY',\n        name: 'Jersey',\n      },\n      {\n        code: 'KEN',\n        name: 'Kent',\n      },\n      {\n        code: 'KCD',\n        name: 'Kincardineshire',\n      },\n      {\n        code: 'KKD',\n        name: 'Kirkcudbrightshire',\n      },\n      {\n        code: 'LAN',\n        name: 'Lancashire',\n      },\n      {\n        code: 'LRN',\n        name: 'Larne',\n      },\n      {\n        code: 'LEC',\n        name: 'Leicestershire',\n      },\n      {\n        code: 'LMV',\n        name: 'Limavady',\n      },\n      {\n        code: 'LIN',\n        name: 'Lincolnshire',\n      },\n      {\n        code: 'LBC',\n        name: 'Lisburn and Castlereagh',\n      },\n      {\n        code: 'MFT',\n        name: 'Magherafelt',\n      },\n      {\n        code: 'MER',\n        name: 'Merseyside',\n      },\n      {\n        code: 'MTY',\n        name: 'Merthyr Tydfil',\n      },\n      {\n        code: 'MLN',\n        name: 'Midlothian',\n      },\n      {\n        code: 'MON',\n        name: 'Monmouthshire',\n      },\n      {\n        code: 'MRY',\n        name: 'Morayshire',\n      },\n      {\n        code: 'MYL',\n        name: 'Moyle',\n      },\n      {\n        code: 'NAI',\n        name: 'Nairn',\n      },\n      {\n        code: 'NTL',\n        name: 'Neath Port Talbot',\n      },\n      {\n        code: 'NWP',\n        name: 'Newport',\n      },\n      {\n        code: 'NMD',\n        name: 'Newry, Mourne and Down',\n      },\n      {\n        code: 'NFK',\n        name: 'Norfolk',\n      },\n      {\n        code: 'AND',\n        name: 'North Down and Ards',\n      },\n      {\n        code: 'NLK',\n        name: 'North Lanarkshire',\n      },\n      {\n        code: 'NYK',\n        name: 'North Yorkshire',\n      },\n      {\n        code: 'NTH',\n        name: 'Northamptonshire',\n      },\n      {\n        code: 'NBL',\n        name: 'Northumberland',\n      },\n      {\n        code: 'NTT',\n        name: 'Nottinghamshire',\n      },\n      {\n        code: 'OMA',\n        name: 'Omagh',\n      },\n      {\n        code: 'ORK',\n        name: 'Orkney Islands',\n      },\n      {\n        code: 'OXF',\n        name: 'Oxfordshire',\n      },\n      {\n        code: 'PEM',\n        name: 'Pembrokeshire',\n      },\n      {\n        code: 'PKN',\n        name: 'Perth and Kinross',\n      },\n      {\n        code: 'PER',\n        name: 'Perthshire and Kinross',\n      },\n      {\n        code: 'POW',\n        name: 'Powys',\n      },\n      {\n        code: 'RCC',\n        name: 'Redcar and Cleveland',\n      },\n      {\n        code: 'RFW',\n        name: 'Renfrewshire',\n      },\n      {\n        code: 'RCT',\n        name: 'Rhondda Cynon Taff',\n      },\n      {\n        code: 'RUT',\n        name: 'Rutland',\n      },\n      {\n        code: 'SRK',\n        name: 'Sark',\n      },\n      {\n        code: 'ZET',\n        name: 'Shetland Islands',\n      },\n      {\n        code: 'SHR',\n        name: 'Shropshire',\n      },\n      {\n        code: 'SOM',\n        name: 'Somerset',\n      },\n      {\n        code: 'SLK',\n        name: 'South Lanarkshire',\n      },\n      {\n        code: 'SYK',\n        name: 'South Yorkshire',\n      },\n      {\n        code: 'STS',\n        name: 'Staffordshire',\n      },\n      {\n        code: 'STG',\n        name: 'Stirlingshire',\n      },\n      {\n        code: 'STR',\n        name: 'Strabane',\n      },\n      {\n        code: 'SFK',\n        name: 'Suffolk',\n      },\n      {\n        code: 'SRY',\n        name: 'Surrey',\n      },\n      {\n        code: 'SSX',\n        name: 'Sussex',\n      },\n      {\n        code: 'SUT',\n        name: 'Sutherland',\n      },\n      {\n        code: 'SWA',\n        name: 'Swansea',\n      },\n      {\n        code: 'TOF',\n        name: 'Torfaen',\n      },\n      {\n        code: 'TWR',\n        name: 'Tyne and Wear',\n      },\n      {\n        code: 'VGL',\n        name: 'Vale of Glamorgan',\n      },\n      {\n        code: 'WAR',\n        name: 'Warwickshire',\n      },\n      {\n        code: 'WLN',\n        name: 'West Lothian',\n      },\n      {\n        code: 'WMD',\n        name: 'West Midlands',\n      },\n      {\n        code: 'WSX',\n        name: 'West Sussex',\n      },\n      {\n        code: 'WRY',\n        name: 'West Yorkshire',\n      },\n      {\n        code: 'ELS',\n        name: 'Western Isles',\n      },\n      {\n        code: 'WIL',\n        name: 'Wiltshire',\n      },\n      {\n        code: 'WOR',\n        name: 'Worcestershire',\n      },\n      {\n        code: 'WRX',\n        name: 'Wrexham',\n      },\n    ],\n  },\n  {\n    code: 'AF',\n    id: 2185,\n    name: 'Afghanistan',\n    states: [\n      {\n        code: 'AF01',\n        name: 'Badakhshan',\n      },\n      {\n        code: 'AF02',\n        name: 'Badghis',\n      },\n      {\n        code: 'AF03',\n        name: 'Baghlan',\n      },\n      {\n        code: 'AF30',\n        name: 'Balkh',\n      },\n      {\n        code: 'AF05',\n        name: 'Bamian',\n      },\n      {\n        code: 'AF41',\n        name: 'Daikondi',\n      },\n      {\n        code: 'AF06',\n        name: 'Farah',\n      },\n      {\n        code: 'AF07',\n        name: 'Faryab',\n      },\n      {\n        code: 'AF08',\n        name: 'Ghazni',\n      },\n      {\n        code: 'AF09',\n        name: 'Ghowr',\n      },\n      {\n        code: 'AF10',\n        name: 'Helmand',\n      },\n      {\n        code: 'AF11',\n        name: 'Herat',\n      },\n      {\n        code: 'AF31',\n        name: 'Jowzjan',\n      },\n      {\n        code: 'AF13',\n        name: 'Kabul',\n      },\n      {\n        code: 'AF23',\n        name: 'Kandahar',\n      },\n      {\n        code: 'AF14',\n        name: 'Kapisa',\n      },\n      {\n        code: 'AF37',\n        name: 'Khowst',\n      },\n      {\n        code: 'AF34',\n        name: 'Konar',\n      },\n      {\n        code: 'AF24',\n        name: 'Kondoz',\n      },\n      {\n        code: 'AF35',\n        name: 'Laghman',\n      },\n      {\n        code: 'AF17',\n        name: 'Lowgar',\n      },\n      {\n        code: 'AF18',\n        name: 'Nangarhar',\n      },\n      {\n        code: 'AF19',\n        name: 'Nimruz',\n      },\n      {\n        code: 'AF38',\n        name: 'Nurestan',\n      },\n      {\n        code: 'AF39',\n        name: 'Oruzgan',\n      },\n      {\n        code: 'AF36',\n        name: 'Paktia',\n      },\n      {\n        code: 'AF29',\n        name: 'Paktika',\n      },\n      {\n        code: 'AF42',\n        name: 'Panjshir',\n      },\n      {\n        code: 'AF40',\n        name: 'Parvan',\n      },\n      {\n        code: 'AF32',\n        name: 'Samangan',\n      },\n      {\n        code: 'AF33',\n        name: 'Sar-e Pol',\n      },\n      {\n        code: 'AF26',\n        name: 'Takhar',\n      },\n      {\n        code: 'AF27',\n        name: 'Vardak',\n      },\n      {\n        code: 'AF28',\n        name: 'Zabol',\n      },\n    ],\n  },\n  {\n    code: 'AX',\n    id: 2407,\n    name: 'Åland Islands',\n    states: [],\n  },\n  {\n    code: 'AL',\n    id: 2186,\n    name: 'Albania',\n    states: [],\n  },\n  {\n    code: 'DZ',\n    id: 2187,\n    name: 'Algeria',\n    states: [\n      {\n        code: 'DZ.AR',\n        name: 'Adrar',\n      },\n      {\n        code: 'DZ.AD',\n        name: 'Aïn Defla',\n      },\n      {\n        code: 'DZ.AT',\n        name: 'Aïn Témouchent',\n      },\n      {\n        code: 'DZ.AL',\n        name: 'Algiers',\n      },\n      {\n        code: 'DZ.AN',\n        name: 'Annaba',\n      },\n      {\n        code: 'DZ.BT',\n        name: 'Batna',\n      },\n      {\n        code: 'DZ.BC',\n        name: 'Béchar',\n      },\n      {\n        code: 'DZ.BJ',\n        name: 'Béjaïa',\n      },\n      {\n        code: 'DZ.BS',\n        name: 'Biskra',\n      },\n      {\n        code: 'DZ.BL',\n        name: 'Blida',\n      },\n      {\n        code: 'DZ.BB',\n        name: 'Bordj Bou Arréridj',\n      },\n      {\n        code: 'DZ.BU',\n        name: 'Bouira',\n      },\n      {\n        code: 'DZ.BM',\n        name: 'Boumerdès',\n      },\n      {\n        code: 'DZ.CH',\n        name: 'Chlef',\n      },\n      {\n        code: 'DZ.CO',\n        name: 'Constantine',\n      },\n      {\n        code: 'DZ.DJ',\n        name: 'Djelfa',\n      },\n      {\n        code: 'DZ.EB',\n        name: 'El Bayadh',\n      },\n      {\n        code: 'DZ.EO',\n        name: 'El Oued',\n      },\n      {\n        code: 'DZ.ET',\n        name: 'El Tarf',\n      },\n      {\n        code: 'DZ.GR',\n        name: 'Ghardaïa',\n      },\n      {\n        code: 'DZ.GL',\n        name: 'Guelma',\n      },\n      {\n        code: 'DZ.IL',\n        name: 'Illizi',\n      },\n      {\n        code: 'DZ.JJ',\n        name: 'Jijel',\n      },\n      {\n        code: 'DZ.KH',\n        name: 'Khenchela',\n      },\n      {\n        code: 'DZ.LG',\n        name: 'Laghouat',\n      },\n      {\n        code: 'DZ.MC',\n        name: 'Mascara',\n      },\n      {\n        code: 'DZ.MD',\n        name: 'Médéa',\n      },\n      {\n        code: 'DZ.ML',\n        name: 'Mila',\n      },\n      {\n        code: 'DZ.MG',\n        name: 'Mostaganem',\n      },\n      {\n        code: 'DZ.MS',\n        name: 'Msila',\n      },\n      {\n        code: 'DZ.NA',\n        name: 'Naama',\n      },\n      {\n        code: 'DZ.OR',\n        name: 'Oran',\n      },\n      {\n        code: 'DZ.OG',\n        name: 'Ouargla',\n      },\n      {\n        code: 'DZ.OB',\n        name: 'Oum el Bouaghi',\n      },\n      {\n        code: 'DZ.RE',\n        name: 'Relizane',\n      },\n      {\n        code: 'DZ.SD',\n        name: 'Saïda',\n      },\n      {\n        code: 'DZ.SF',\n        name: 'Sétif',\n      },\n      {\n        code: 'DZ.SB',\n        name: 'Sidi Bel Abbès',\n      },\n      {\n        code: 'DZ.SK',\n        name: 'Skikda',\n      },\n      {\n        code: 'DZ.SA',\n        name: 'Souk Ahras',\n      },\n      {\n        code: 'DZ.TM',\n        name: 'Tamanrasset',\n      },\n      {\n        code: 'DZ.TB',\n        name: 'Tébessa',\n      },\n      {\n        code: 'DZ.TR',\n        name: 'Tiaret',\n      },\n      {\n        code: 'DZ.TN',\n        name: 'Tindouf',\n      },\n      {\n        code: 'DZ.TP',\n        name: 'Tipaza',\n      },\n      {\n        code: 'DZ.TS',\n        name: 'Tissemsilt',\n      },\n      {\n        code: 'DZ.TO',\n        name: 'Tizi Ouzou',\n      },\n      {\n        code: 'DZ.TL',\n        name: 'Tlemcen',\n      },\n    ],\n  },\n  {\n    code: 'AS',\n    id: 2408,\n    name: 'American Samoa',\n    states: [],\n  },\n  {\n    code: 'AD',\n    id: 2188,\n    name: 'Andorra',\n    states: [],\n  },\n  {\n    code: 'AO',\n    id: 2189,\n    name: 'Angola',\n    states: [\n      {\n        code: 'AO19',\n        name: 'Bengo',\n      },\n      {\n        code: 'AO01',\n        name: 'Benguela',\n      },\n      {\n        code: 'AO02',\n        name: 'Bié',\n      },\n      {\n        code: 'AO03',\n        name: 'Cabinda',\n      },\n      {\n        code: 'AO04',\n        name: 'Cuando Cubango',\n      },\n      {\n        code: 'AO05',\n        name: 'Cuanza Norte',\n      },\n      {\n        code: 'AO06',\n        name: 'Cuanza Sul',\n      },\n      {\n        code: 'AO07',\n        name: 'Cunene',\n      },\n      {\n        code: 'AO08',\n        name: 'Huambo',\n      },\n      {\n        code: 'AO09',\n        name: 'Huíla',\n      },\n      {\n        code: 'AO20',\n        name: 'Luanda',\n      },\n      {\n        code: 'AO17',\n        name: 'Lunda Norte',\n      },\n      {\n        code: 'AO18',\n        name: 'Lunda Sul',\n      },\n      {\n        code: 'AO12',\n        name: 'Malanje',\n      },\n      {\n        code: 'AO14',\n        name: 'Moxico',\n      },\n      {\n        code: 'AO13',\n        name: 'Namibe',\n      },\n      {\n        code: 'AO15',\n        name: 'Uíge',\n      },\n      {\n        code: 'AO16',\n        name: 'Zaire',\n      },\n    ],\n  },\n  {\n    code: 'AI',\n    id: 2409,\n    name: 'Anguilla',\n    states: [],\n  },\n  {\n    code: 'AQ',\n    id: 2190,\n    name: 'Antarctica',\n    states: [],\n  },\n  {\n    code: 'AG',\n    id: 2191,\n    name: 'Antigua and Barbuda',\n    states: [],\n  },\n  {\n    code: 'AR',\n    id: 2192,\n    name: 'Argentina',\n    states: [\n      {\n        code: 'AR01',\n        name: 'Buenos Aires',\n      },\n      {\n        code: 'AR02',\n        name: 'Catamarca',\n      },\n      {\n        code: 'AR03',\n        name: 'Chaco',\n      },\n      {\n        code: 'AR04',\n        name: 'Chubut',\n      },\n      {\n        code: 'AR07',\n        name: 'Ciudad de Buenos Aires',\n      },\n      {\n        code: 'AR05',\n        name: 'Córdoba',\n      },\n      {\n        code: 'AR06',\n        name: 'Corrientes',\n      },\n      {\n        code: 'AR08',\n        name: 'Entre Ríos',\n      },\n      {\n        code: 'AR09',\n        name: 'Formosa',\n      },\n      {\n        code: 'AR10',\n        name: 'Jujuy',\n      },\n      {\n        code: 'AR11',\n        name: 'La Pampa',\n      },\n      {\n        code: 'AR12',\n        name: 'La Rioja',\n      },\n      {\n        code: 'AR13',\n        name: 'Mendoza',\n      },\n      {\n        code: 'AR14',\n        name: 'Misiones',\n      },\n      {\n        code: 'AR15',\n        name: 'Neuquén',\n      },\n      {\n        code: 'AR16',\n        name: 'Río Negro',\n      },\n      {\n        code: 'AR17',\n        name: 'Salta',\n      },\n      {\n        code: 'AR18',\n        name: 'San Juan',\n      },\n      {\n        code: 'AR19',\n        name: 'San Luis',\n      },\n      {\n        code: 'AR20',\n        name: 'Santa Cruz',\n      },\n      {\n        code: 'AR21',\n        name: 'Santa Fe',\n      },\n      {\n        code: 'AR22',\n        name: 'Santiago del Estero',\n      },\n      {\n        code: 'AR23',\n        name: 'Tierra del Fuego',\n      },\n      {\n        code: 'AR24',\n        name: 'Tucumán',\n      },\n    ],\n  },\n  {\n    code: 'AM',\n    id: 2193,\n    name: 'Armenia',\n    states: [],\n  },\n  {\n    code: 'AB',\n    id: 2373,\n    name: 'Aruba',\n    states: [\n      {\n        code: 'AW.AA',\n        name: 'Aruba',\n      },\n    ],\n  },\n  {\n    code: 'AU',\n    id: 2194,\n    name: 'Australia',\n    states: [\n      {\n        code: 'ACT',\n        name: 'Australian Capital Territory',\n      },\n      {\n        code: 'NSW',\n        name: 'New South Wales',\n      },\n      {\n        code: 'NT',\n        name: 'Northern Territory',\n      },\n      {\n        code: 'QLD',\n        name: 'Queensland',\n      },\n      {\n        code: 'SA',\n        name: 'South Australia',\n      },\n      {\n        code: 'TAS',\n        name: 'Tasmania',\n      },\n      {\n        code: 'VIC',\n        name: 'Victoria',\n      },\n      {\n        code: 'WA',\n        name: 'Western Australia',\n      },\n    ],\n  },\n  {\n    code: 'AT',\n    id: 2195,\n    name: 'Austria',\n    states: [\n      {\n        code: 'AU01',\n        name: 'Burgenland',\n      },\n      {\n        code: 'AU02',\n        name: 'Carinthia',\n      },\n      {\n        code: 'AU03',\n        name: 'Lower Austria',\n      },\n      {\n        code: 'AU05',\n        name: 'Salzburg',\n      },\n      {\n        code: 'AU06',\n        name: 'Styria',\n      },\n      {\n        code: 'AU07',\n        name: 'Tyrol',\n      },\n      {\n        code: 'AU04',\n        name: 'Upper Austria',\n      },\n      {\n        code: 'AU09',\n        name: 'Vienna',\n      },\n      {\n        code: 'AU08',\n        name: 'Vorarlberg',\n      },\n    ],\n  },\n  {\n    code: 'AZ',\n    id: 2196,\n    name: 'Azerbaijan',\n    states: [\n      {\n        code: 'AZ-ABS',\n        name: 'Absheron',\n      },\n      {\n        code: 'AZ-AGM',\n        name: 'Aghdam',\n      },\n      {\n        code: 'AZ-AGS',\n        name: 'Aghdash',\n      },\n      {\n        code: 'AZ-AGC',\n        name: 'Aghjabedi',\n      },\n      {\n        code: 'AZ-AGA',\n        name: 'Aghstafa',\n      },\n      {\n        code: 'AZ-AGU',\n        name: 'Aghsu',\n      },\n      {\n        code: 'AZ-AB',\n        name: 'Ali-Bairamly',\n      },\n      {\n        code: 'AZ-AST',\n        name: 'Astara',\n      },\n      {\n        code: 'AZ-BAB',\n        name: 'Babek',\n      },\n      {\n        code: 'AZ-BA',\n        name: 'Baku',\n      },\n      {\n        code: 'AZ-BAL',\n        name: 'Balaken',\n      },\n      {\n        code: 'AZ-BAR',\n        name: 'Barda',\n      },\n      {\n        code: 'AZ-BEY',\n        name: 'Beilagan',\n      },\n      {\n        code: 'AZ-BIL',\n        name: 'Bilasuvar',\n      },\n      {\n        code: 'AZ-DAS',\n        name: 'Dashkesan',\n      },\n      {\n        code: 'AZ-DAV',\n        name: 'Devechi',\n      },\n      {\n        code: 'AZ-FUZ',\n        name: 'Fizuli',\n      },\n      {\n        code: 'AZ-QAB',\n        name: 'Gabala',\n      },\n      {\n        code: 'AZ-GAD',\n        name: 'Gadabey',\n      },\n      {\n        code: 'AZ-QAX',\n        name: 'Gakh',\n      },\n      {\n        code: 'AZ-GA',\n        name: 'Ganja',\n      },\n      {\n        code: 'AZ-QAZ',\n        name: 'Gazakh',\n      },\n      {\n        code: 'AZ-GOR',\n        name: 'Geranboy',\n      },\n      {\n        code: 'AZ-QOB',\n        name: 'Gobustan',\n      },\n      {\n        code: 'AZ-GOY',\n        name: 'Goychay',\n      },\n      {\n        code: 'AZ-QBA',\n        name: 'Guba',\n      },\n      {\n        code: 'AZ-QBI',\n        name: 'Gubadly',\n      },\n      {\n        code: 'AZ-QUS',\n        name: 'Gusar',\n      },\n      {\n        code: 'AZ-HAC',\n        name: 'Hacuqabul',\n      },\n      {\n        code: 'AZ-IMI',\n        name: 'Imishli',\n      },\n      {\n        code: 'AZ-ISM',\n        name: 'Ismailly',\n      },\n      {\n        code: 'AZ-CAL',\n        name: 'Jalilabad',\n      },\n      {\n        code: 'AZ-CAB',\n        name: 'Jebrail',\n      },\n      {\n        code: 'AZ-CUL',\n        name: 'Julfa',\n      },\n      {\n        code: 'AZ-KAL',\n        name: 'Kelbajar',\n      },\n      {\n        code: 'AZ-XAC',\n        name: 'Khachmaz',\n      },\n      {\n        code: 'AZ-XA',\n        name: 'Khankendy',\n      },\n      {\n        code: 'AZ-XAN',\n        name: 'Khanlar',\n      },\n      {\n        code: 'AZ-XCI',\n        name: 'Khojaly',\n      },\n      {\n        code: 'AZ-XVD',\n        name: 'Khojavend',\n      },\n      {\n        code: 'AZ-XIZ',\n        name: 'Khyzy',\n      },\n      {\n        code: 'AZ-KUR',\n        name: 'Kyurdamir',\n      },\n      {\n        code: 'AZ-LAC',\n        name: 'Lachin',\n      },\n      {\n        code: 'AZ-LAN',\n        name: 'Lenkaran',\n      },\n      {\n        code: 'AZ-LA',\n        name: 'Lenkaran',\n      },\n      {\n        code: 'AZ-LER',\n        name: 'Lerik',\n      },\n      {\n        code: 'AZ-MAS',\n        name: 'Masally',\n      },\n      {\n        code: 'AZ-MI',\n        name: 'Mingechevir',\n      },\n      {\n        code: 'AZ-NA',\n        name: 'Naftalan',\n      },\n      {\n        code: 'AZ-NX',\n        name: 'Nakhchivan',\n      },\n      {\n        code: 'AZ-NEF',\n        name: 'Neftchala',\n      },\n      {\n        code: 'AZ-OGU',\n        name: 'Oghuz',\n      },\n      {\n        code: 'AZ-ORD',\n        name: 'Ordubad',\n      },\n      {\n        code: 'AZ-SAT',\n        name: 'Saatly',\n      },\n      {\n        code: 'AZ-SAB',\n        name: 'Sabirabad',\n      },\n      {\n        code: 'AZ-SAL',\n        name: 'Salyan',\n      },\n      {\n        code: 'AZ-SMX',\n        name: 'Samuh',\n      },\n      {\n        code: 'AZ-SAD',\n        name: 'Sedarak',\n      },\n      {\n        code: 'AZ-SAH',\n        name: 'Shahbuz',\n      },\n      {\n        code: 'AZ-SMI',\n        name: 'Shamakhy',\n      },\n      {\n        code: 'AZ-SKR',\n        name: 'Shamkir',\n      },\n      {\n        code: 'AZ-SAK',\n        name: 'Sheki',\n      },\n      {\n        code: 'AZ-SA',\n        name: 'Sheki',\n      },\n      {\n        code: 'AZ-SAR',\n        name: 'Sherur',\n      },\n      {\n        code: 'AZ-SS',\n        name: 'Shusha',\n      },\n      {\n        code: 'AZ-SUS',\n        name: 'Shusha',\n      },\n      {\n        code: 'AZ-SIY',\n        name: 'Siazan',\n      },\n      {\n        code: 'AZ-SM',\n        name: 'Sumgayit',\n      },\n      {\n        code: 'AZ-TAR',\n        name: 'Terter',\n      },\n      {\n        code: 'AZ-TOV',\n        name: 'Tovuz',\n      },\n      {\n        code: 'AZ-UCA',\n        name: 'Ujar',\n      },\n      {\n        code: 'AZ-YAR',\n        name: 'Yardymly',\n      },\n      {\n        code: 'AZ-YE',\n        name: 'Yevlakh',\n      },\n      {\n        code: 'AZ-YEV',\n        name: 'Yevlakh',\n      },\n      {\n        code: 'AZ-ZAQ',\n        name: 'Zagatala',\n      },\n      {\n        code: 'AZ-ZAN',\n        name: 'Zangilan',\n      },\n      {\n        code: 'AZ-ZAR',\n        name: 'Zerdab',\n      },\n    ],\n  },\n  {\n    code: 'BS',\n    id: 2197,\n    name: 'Bahamas',\n    states: [\n      {\n        code: 'BF24',\n        name: 'Acklins',\n      },\n      {\n        code: 'BF32',\n        name: 'Berry Islands',\n      },\n      {\n        code: 'BF05',\n        name: 'Bimini',\n      },\n      {\n        code: 'BF36',\n        name: 'Black Point',\n      },\n      {\n        code: 'BF06',\n        name: 'Cat Island',\n      },\n      {\n        code: 'BF37',\n        name: 'Central Abaco',\n      },\n      {\n        code: 'BF38',\n        name: 'Central Andros',\n      },\n      {\n        code: 'BF39',\n        name: 'Central Eleuthera',\n      },\n      {\n        code: 'BF25',\n        name: 'City of Freeport',\n      },\n      {\n        code: 'BF40',\n        name: 'Crooked Island',\n      },\n      {\n        code: 'BF41',\n        name: 'East Grand Bahama',\n      },\n      {\n        code: 'BF10',\n        name: 'Exuma',\n      },\n      {\n        code: 'BF42',\n        name: 'Grand Cay',\n      },\n      {\n        code: 'BS.GT\\t',\n        name: 'Green Turtle Cay',\n      },\n      {\n        code: 'BF22',\n        name: 'Harbour Island',\n      },\n      {\n        code: 'BF43',\n        name: 'Hope Town',\n      },\n      {\n        code: 'BF13',\n        name: 'Inagua',\n      },\n      {\n        code: 'BF15',\n        name: 'Long Island',\n      },\n      {\n        code: 'BF44',\n        name: 'Mangrove Cay',\n      },\n      {\n        code: 'BF16',\n        name: 'Mayaguana',\n      },\n      {\n        code: 'BF45',\n        name: \"Moore's Island\",\n      },\n      {\n        code: 'BS.NW',\n        name: 'New Providence',\n      },\n      {\n        code: 'BF46',\n        name: 'North Abaco',\n      },\n      {\n        code: 'BF47',\n        name: 'North Andros',\n      },\n      {\n        code: 'BF48',\n        name: 'North Eleuthera',\n      },\n      {\n        code: 'BF18',\n        name: 'Ragged Island',\n      },\n      {\n        code: 'BF49',\n        name: 'Rum Cay',\n      },\n      {\n        code: 'BF35',\n        name: 'San Salvador',\n      },\n      {\n        code: 'BF50',\n        name: 'South Abaco',\n      },\n      {\n        code: 'BF51',\n        name: 'South Andros',\n      },\n      {\n        code: 'BF52',\n        name: 'South Eleuthera',\n      },\n      {\n        code: 'BF53',\n        name: 'Spanish Wells',\n      },\n      {\n        code: 'BF54',\n        name: 'West Grand Bahama',\n      },\n    ],\n  },\n  {\n    code: 'BH',\n    id: 2198,\n    name: 'Bahrain',\n    states: [\n      {\n        code: 'BA16',\n        name: 'Capital',\n      },\n      {\n        code: 'BA19',\n        name: 'Central',\n      },\n      {\n        code: 'BA15',\n        name: 'Muharraq',\n      },\n      {\n        code: 'BA18',\n        name: 'Northern',\n      },\n      {\n        code: 'BA17',\n        name: 'Southern',\n      },\n    ],\n  },\n  {\n    code: 'BD',\n    id: 2199,\n    name: 'Bangladesh',\n    states: [\n      {\n        code: 'BG85',\n        name: 'Barisal',\n      },\n      {\n        code: 'BG84',\n        name: 'Chittagong',\n      },\n      {\n        code: 'BG81',\n        name: 'Dhaka',\n      },\n      {\n        code: 'BG82',\n        name: 'Khulna',\n      },\n      {\n        code: 'BG81',\n        name: 'Mymensingh',\n      },\n      {\n        code: 'BG83',\n        name: 'Rajshahi',\n      },\n      {\n        code: 'BG87',\n        name: 'Rangpur',\n      },\n      {\n        code: 'BG86',\n        name: 'Sylhet',\n      },\n    ],\n  },\n  {\n    code: 'BB',\n    id: 2200,\n    name: 'Barbados',\n    states: [\n      {\n        code: 'BB01',\n        name: 'Christ Church',\n      },\n      {\n        code: 'BB02',\n        name: 'Saint Andrew',\n      },\n      {\n        code: 'BB03',\n        name: 'Saint George',\n      },\n      {\n        code: 'BB04',\n        name: 'Saint James',\n      },\n      {\n        code: 'BB05',\n        name: 'Saint John',\n      },\n      {\n        code: 'BB06',\n        name: 'Saint Joseph',\n      },\n      {\n        code: 'BB07',\n        name: 'Saint Lucy',\n      },\n      {\n        code: 'BB08',\n        name: 'Saint Michael',\n      },\n      {\n        code: 'BB09',\n        name: 'Saint Peter',\n      },\n      {\n        code: 'BB10',\n        name: 'Saint Philip',\n      },\n      {\n        code: 'BB11',\n        name: 'Saint Thomas',\n      },\n    ],\n  },\n  {\n    code: 'BY',\n    id: 2201,\n    name: 'Belarus',\n    states: [\n      {\n        code: 'BO01',\n        name: 'Brest',\n      },\n      {\n        code: 'BO02',\n        name: 'Gomel',\n      },\n      {\n        code: 'BO03',\n        name: 'Grodno',\n      },\n      {\n        code: 'BO05',\n        name: 'Minsk',\n      },\n      {\n        code: 'BO04',\n        name: 'Minsk City',\n      },\n      {\n        code: 'BO06',\n        name: 'Mogilev',\n      },\n      {\n        code: 'BO07',\n        name: 'Vitebsk',\n      },\n    ],\n  },\n  {\n    code: 'BE',\n    id: 2202,\n    name: 'Belgium',\n    states: [\n      {\n        code: 'BE01',\n        name: 'Antwerpen Province',\n      },\n      {\n        code: 'BE11',\n        name: 'Brussels-Capital Region',\n      },\n      {\n        code: 'BE12',\n        name: 'Flemish Brabant Province',\n      },\n      {\n        code: 'BE03',\n        name: 'Hainaut Province',\n      },\n      {\n        code: 'BE04',\n        name: 'Liege Province',\n      },\n      {\n        code: 'BE05',\n        name: 'Limburg Province',\n      },\n      {\n        code: 'BE06',\n        name: 'Luxembourg Province',\n      },\n      {\n        code: 'BE07',\n        name: 'Namur Province',\n      },\n      {\n        code: 'BE08',\n        name: 'Oost-Vlaanderen Province',\n      },\n      {\n        code: 'BE10',\n        name: 'Walloon Brabant Province',\n      },\n      {\n        code: 'BE09',\n        name: 'West-Vlaanderen Province',\n      },\n    ],\n  },\n  {\n    code: 'BZ',\n    id: 2203,\n    name: 'Belize',\n    states: [],\n  },\n  {\n    code: 'BJ',\n    id: 2204,\n    name: 'Benin',\n    states: [\n      {\n        code: 'BN07',\n        name: 'Alibori',\n      },\n      {\n        code: 'BN08',\n        name: 'Atacora',\n      },\n      {\n        code: 'BN09',\n        name: 'Atlantique',\n      },\n      {\n        code: 'BN10',\n        name: 'Borgou',\n      },\n      {\n        code: 'BN11',\n        name: 'Collines',\n      },\n      {\n        code: 'BN12',\n        name: 'Couffo',\n      },\n      {\n        code: 'BN13',\n        name: 'Donga',\n      },\n      {\n        code: 'BN14',\n        name: 'Littoral',\n      },\n      {\n        code: 'BN15',\n        name: 'Mono',\n      },\n      {\n        code: 'BN16',\n        name: 'Ouémé',\n      },\n      {\n        code: 'BN17',\n        name: 'Plateau',\n      },\n      {\n        code: 'BN18',\n        name: 'Zou',\n      },\n    ],\n  },\n  {\n    code: 'BU',\n    id: 2372,\n    name: 'Bermuda',\n    states: [\n      {\n        code: 'BM.BD',\n        name: 'Bermuda',\n      },\n      {\n        code: 'BD01',\n        name: 'Devonshire',\n      },\n      {\n        code: 'BD03',\n        name: 'Hamilton municipality',\n      },\n      {\n        code: 'BD02',\n        name: 'Hamilton',\n      },\n      {\n        code: 'BD04',\n        name: 'Paget',\n      },\n      {\n        code: 'BD05',\n        name: 'Pembroke',\n      },\n      {\n        code: 'BD06',\n        name: 'Saint George municipality',\n      },\n      {\n        code: 'BD07',\n        name: \"Saint George's\",\n      },\n      {\n        code: 'BD08',\n        name: 'Sandys',\n      },\n      {\n        code: 'BD09',\n        name: 'Smiths',\n      },\n      {\n        code: 'BD10',\n        name: 'Southampton',\n      },\n      {\n        code: 'BD11',\n        name: 'Warwick',\n      },\n    ],\n  },\n  {\n    code: 'BT',\n    id: 2205,\n    name: 'Bhutan',\n    states: [],\n  },\n  {\n    code: 'BO',\n    id: 2206,\n    name: 'Bolivia; Plurinational State',\n    states: [\n      {\n        code: 'BL01',\n        name: 'Chuquisaca',\n      },\n      {\n        code: 'BL02',\n        name: 'Cochabamba',\n      },\n      {\n        code: 'BL03',\n        name: 'El Beni',\n      },\n      {\n        code: 'BL04',\n        name: 'La Paz',\n      },\n      {\n        code: 'BL05',\n        name: 'Oruro',\n      },\n      {\n        code: 'BL06',\n        name: 'Pando',\n      },\n      {\n        code: 'BL07',\n        name: 'Potosí',\n      },\n      {\n        code: 'BL08',\n        name: 'Santa Cruz',\n      },\n      {\n        code: 'BL09',\n        name: 'Tarija',\n      },\n    ],\n  },\n  {\n    code: 'BQ',\n    id: 2449,\n    name: 'Bonaire',\n    states: [\n      {\n        code: 'BQ.BO',\n        name: 'Bonaire',\n      },\n      {\n        code: 'BQ.SB',\n        name: 'Saba',\n      },\n      {\n        code: 'BQ.SE',\n        name: 'Sint Eustatius',\n      },\n    ],\n  },\n  {\n    code: 'BA',\n    id: 2207,\n    name: 'Bosnia and Herzegovina',\n    states: [\n      {\n        code: 'BA-05',\n        name: 'Bosansko-podrinjski kanton',\n      },\n      {\n        code: 'BA-BRC',\n        name: 'Brcko distrikt',\n      },\n      {\n        code: 'BA-BIH',\n        name: 'Federacija Bosna i Hercegovina',\n      },\n      {\n        code: 'BA-07',\n        name: 'Hercegovacko-neretvanski kanton',\n      },\n      {\n        code: 'BA-09',\n        name: 'Kanton Sarajevo',\n      },\n      {\n        code: 'BA-10',\n        name: 'Livanjski kanton',\n      },\n      {\n        code: 'BA-02',\n        name: 'Posavski kanton',\n      },\n      {\n        code: 'BA-SRP',\n        name: 'Republika Srpska',\n      },\n      {\n        code: 'BA-06',\n        name: 'Srednjobosanski kanton',\n      },\n      {\n        code: 'BA-03',\n        name: 'Tuzlanski kanton',\n      },\n      {\n        code: 'BA-01',\n        name: 'Unsko-sanski kanton',\n      },\n      {\n        code: 'BA-08',\n        name: 'Zapadnohercegovacki kanton',\n      },\n      {\n        code: 'BA-04',\n        name: 'Zenicko-dobojski kanton',\n      },\n    ],\n  },\n  {\n    code: 'BW',\n    id: 2208,\n    name: 'Botswana',\n    states: [\n      {\n        code: 'BC01',\n        name: 'Central',\n      },\n      {\n        code: 'BC12',\n        name: 'Chobe',\n      },\n      {\n        code: 'BC13',\n        name: 'Francistown',\n      },\n      {\n        code: 'BC14',\n        name: 'Gaborone',\n      },\n      {\n        code: 'BC03',\n        name: 'Ghanzi',\n      },\n      {\n        code: 'BC15',\n        name: 'Jwaneng',\n      },\n      {\n        code: 'BC04',\n        name: 'Kgalagadi',\n      },\n      {\n        code: 'BC05',\n        name: 'Kgatleng',\n      },\n      {\n        code: 'BC06',\n        name: 'Kweneng',\n      },\n      {\n        code: 'BC16',\n        name: 'Lobatse',\n      },\n      {\n        code: 'BC08',\n        name: 'North-East',\n      },\n      {\n        code: 'BC11',\n        name: 'North-West',\n      },\n      {\n        code: 'BC17',\n        name: 'Selibe Phikwe',\n      },\n      {\n        code: 'BC09',\n        name: 'South East',\n      },\n      {\n        code: 'BC10',\n        name: 'Southern',\n      },\n      {\n        code: 'BC18',\n        name: 'Sowa Town',\n      },\n    ],\n  },\n  {\n    code: 'BV',\n    id: 2410,\n    name: 'Bouvet Island',\n    states: [],\n  },\n  {\n    code: 'BR',\n    id: 2209,\n    name: 'Brazil',\n    states: [\n      {\n        code: 'AC',\n        name: 'Acre',\n      },\n      {\n        code: 'AL',\n        name: 'Alagoas',\n      },\n      {\n        code: 'AP',\n        name: 'Amapá',\n      },\n      {\n        code: 'AM',\n        name: 'Amazonas',\n      },\n      {\n        code: 'BA',\n        name: 'Bahia',\n      },\n      {\n        code: 'CE',\n        name: 'Ceará',\n      },\n      {\n        code: 'DF',\n        name: 'Distrito Federal',\n      },\n      {\n        code: 'ES',\n        name: 'Espírito Santo',\n      },\n      {\n        code: 'GO',\n        name: 'Goiás',\n      },\n      {\n        code: 'MA',\n        name: 'Maranhão',\n      },\n      {\n        code: 'MT',\n        name: 'Mato Grosso',\n      },\n      {\n        code: 'MS',\n        name: 'Mato Grosso do Sul',\n      },\n      {\n        code: 'MG',\n        name: 'Minas Gerais',\n      },\n      {\n        code: 'PA',\n        name: 'Pará',\n      },\n      {\n        code: 'PR',\n        name: 'Paraná',\n      },\n      {\n        code: 'PB',\n        name: 'Paraíba',\n      },\n      {\n        code: 'PE',\n        name: 'Pernambuco',\n      },\n      {\n        code: 'PI',\n        name: 'Piauí',\n      },\n      {\n        code: 'RN',\n        name: 'Rio Grande do Norte',\n      },\n      {\n        code: 'RS',\n        name: 'Rio Grande do Sul',\n      },\n      {\n        code: 'RJ',\n        name: 'Rio de Janeiro',\n      },\n      {\n        code: 'RO',\n        name: 'Rondônia',\n      },\n      {\n        code: 'RR',\n        name: 'Roraima',\n      },\n      {\n        code: 'SC',\n        name: 'Santa Catarina',\n      },\n      {\n        code: 'SP',\n        name: 'São Paulo',\n      },\n      {\n        code: 'SE',\n        name: 'Sergipe',\n      },\n      {\n        code: 'TO',\n        name: 'Tocantins',\n      },\n    ],\n  },\n  {\n    code: 'IO',\n    id: 2411,\n    name: 'British Indian Ocean Territory',\n    states: [],\n  },\n  {\n    code: 'BN',\n    id: 2210,\n    name: 'Brunei Darussalam',\n    states: [\n      {\n        code: 'BX01',\n        name: 'Amo',\n      },\n      {\n        code: 'BX02',\n        name: 'Bandar Seri Begawan',\n      },\n      {\n        code: 'BX03',\n        name: 'Bangar',\n      },\n      {\n        code: 'BX04',\n        name: 'Batu Apoi',\n      },\n      {\n        code: 'BX05',\n        name: 'Berakas',\n      },\n      {\n        code: 'BX06',\n        name: 'Bokok',\n      },\n      {\n        code: 'BX07',\n        name: 'Bukit Sawat',\n      },\n      {\n        code: 'BX08',\n        name: 'Burong Pinggai Ayer',\n      },\n      {\n        code: 'BX09',\n        name: 'Gadong',\n      },\n      {\n        code: 'BX10',\n        name: 'Keriam',\n      },\n      {\n        code: 'BX11',\n        name: 'Kianggeh',\n      },\n      {\n        code: 'BX12',\n        name: 'Kilanas',\n      },\n      {\n        code: 'BX13',\n        name: 'Kiudang',\n      },\n      {\n        code: 'BX14',\n        name: 'Kota Batu',\n      },\n      {\n        code: 'BX15',\n        name: 'Kuala Balai',\n      },\n      {\n        code: 'BX16',\n        name: 'Kuala Belait',\n      },\n      {\n        code: 'BX17',\n        name: 'Labi',\n      },\n      {\n        code: 'BX18',\n        name: 'Labu',\n      },\n      {\n        code: 'BX19',\n        name: 'Lamunin',\n      },\n      {\n        code: 'BX20',\n        name: 'Liang',\n      },\n      {\n        code: 'BX21',\n        name: 'Lumapas',\n      },\n      {\n        code: 'BX22',\n        name: 'Melilas',\n      },\n      {\n        code: 'BX23',\n        name: 'Mentiri',\n      },\n      {\n        code: 'BX24',\n        name: 'Pekan Tutong',\n      },\n      {\n        code: 'BX25',\n        name: 'Pengkalan Batu',\n      },\n      {\n        code: 'BX26',\n        name: 'Peramu',\n      },\n      {\n        code: 'BX27',\n        name: 'Rambai',\n      },\n      {\n        code: 'BX28',\n        name: 'Saba',\n      },\n      {\n        code: 'BX29',\n        name: 'Sengkurong',\n      },\n      {\n        code: 'BX30',\n        name: 'Serasa',\n      },\n      {\n        code: 'BX31',\n        name: 'Seria',\n      },\n      {\n        code: 'BX32',\n        name: 'Sukang',\n      },\n      {\n        code: 'BX33',\n        name: 'Sungai Kebun',\n      },\n      {\n        code: 'BX34',\n        name: 'Sungai Kedayan',\n      },\n      {\n        code: 'BX35',\n        name: 'Tamoi',\n      },\n      {\n        code: 'BX36',\n        name: 'Tanjong Maya',\n      },\n      {\n        code: 'BX37',\n        name: 'Telisai',\n      },\n      {\n        code: 'BX38',\n        name: 'Ukong',\n      },\n    ],\n  },\n  {\n    code: 'BG',\n    id: 2211,\n    name: 'Bulgaria',\n    states: [\n      {\n        code: 'BU38',\n        name: 'Blagoevgrad',\n      },\n      {\n        code: 'BU39',\n        name: 'Burgas',\n      },\n      {\n        code: 'BU40',\n        name: 'Dobrich',\n      },\n      {\n        code: 'BU41',\n        name: 'Gabrovo',\n      },\n      {\n        code: 'BU42',\n        name: 'Grad Sofiya',\n      },\n      {\n        code: 'BU43',\n        name: 'Khaskovo',\n      },\n      {\n        code: 'BU44',\n        name: 'Kurdzhali',\n      },\n      {\n        code: 'BU45',\n        name: 'Kyustendil',\n      },\n      {\n        code: 'BU46',\n        name: 'Lovech',\n      },\n      {\n        code: 'BU47',\n        name: 'Montana',\n      },\n      {\n        code: 'BU48',\n        name: 'Pazardzhik',\n      },\n      {\n        code: 'BU49',\n        name: 'Pernik',\n      },\n      {\n        code: 'BU50',\n        name: 'Pleven',\n      },\n      {\n        code: 'BU51',\n        name: 'Plovdiv',\n      },\n      {\n        code: 'BU52',\n        name: 'Razgrad',\n      },\n      {\n        code: 'BU53',\n        name: 'Ruse',\n      },\n      {\n        code: 'BU54',\n        name: 'Shumen',\n      },\n      {\n        code: 'BU55',\n        name: 'Silistra',\n      },\n      {\n        code: 'BU56',\n        name: 'Sliven',\n      },\n      {\n        code: 'BU57',\n        name: 'Smolyan',\n      },\n      {\n        code: 'BU58',\n        name: 'Sofiya',\n      },\n      {\n        code: 'BU59',\n        name: 'Stara Zagora',\n      },\n      {\n        code: 'BU60',\n        name: 'Turgovishte',\n      },\n      {\n        code: 'BU61',\n        name: 'Varna',\n      },\n      {\n        code: 'BU62',\n        name: 'Veliko Turnovo',\n      },\n      {\n        code: 'BU63',\n        name: 'Vidin',\n      },\n      {\n        code: 'BU64',\n        name: 'Vratsa',\n      },\n      {\n        code: 'BU65',\n        name: 'Yambol',\n      },\n    ],\n  },\n  {\n    code: 'BF',\n    id: 2212,\n    name: 'Burkina Faso',\n    states: [\n      {\n        code: 'UV79',\n        name: 'Boucle du Mouhoun',\n      },\n      {\n        code: 'UV80',\n        name: 'Cascades',\n      },\n      {\n        code: 'UV82',\n        name: 'Centre Est',\n      },\n      {\n        code: 'UV83',\n        name: 'Centre Nord',\n      },\n      {\n        code: 'UV84',\n        name: 'Centre Ouest',\n      },\n      {\n        code: 'UV81',\n        name: 'Centre',\n      },\n      {\n        code: 'UV85',\n        name: 'Centre Sud',\n      },\n      {\n        code: 'UV86',\n        name: 'Est',\n      },\n      {\n        code: 'UV87',\n        name: 'Hauts Bassins',\n      },\n      {\n        code: 'UV88',\n        name: 'Nord',\n      },\n      {\n        code: 'UV89',\n        name: 'Plateau Central',\n      },\n      {\n        code: 'UV90',\n        name: 'Sahel',\n      },\n      {\n        code: 'UV91',\n        name: 'Sud-Ouest',\n      },\n    ],\n  },\n  {\n    code: 'BM',\n    id: 2385,\n    name: 'Burma',\n    states: [\n      {\n        code: 'BM03',\n        name: 'Ayeyarwady',\n      },\n      {\n        code: 'BM16',\n        name: 'Bago',\n      },\n      {\n        code: 'BM02',\n        name: 'Chin',\n      },\n      {\n        code: 'BM04',\n        name: 'Kachin',\n      },\n      {\n        code: 'BM06',\n        name: 'Kayah',\n      },\n      {\n        code: 'BM05',\n        name: 'Kayin',\n      },\n      {\n        code: 'BM15',\n        name: 'Magway',\n      },\n      {\n        code: 'BM08',\n        name: 'Mandalay',\n      },\n      {\n        code: 'BM13',\n        name: 'Mon',\n      },\n      {\n        code: 'BM18',\n        name: 'Naypyidaw',\n      },\n      {\n        code: 'BM01',\n        name: 'Rakhine',\n      },\n      {\n        code: 'BM10',\n        name: 'Sagaing',\n      },\n      {\n        code: 'BM11',\n        name: 'Shan',\n      },\n      {\n        code: 'BM12',\n        name: 'Tanintharyi',\n      },\n      {\n        code: 'BM17',\n        name: 'Yangon',\n      },\n    ],\n  },\n  {\n    code: 'BI',\n    id: 2213,\n    name: 'Burundi',\n    states: [],\n  },\n  {\n    code: 'KH',\n    id: 2214,\n    name: 'Cambodia',\n    states: [\n      {\n        code: 'CB25',\n        name: 'Bântéay Méanchey',\n      },\n      {\n        code: 'CB29',\n        name: 'Batdâmbâng',\n      },\n      {\n        code: 'CB02',\n        name: 'Kâmpóng Cham',\n      },\n      {\n        code: 'CB03',\n        name: 'Kâmpóng Chhnang',\n      },\n      {\n        code: 'CB04',\n        name: 'Kâmpóng Spœ',\n      },\n      {\n        code: 'CB05',\n        name: 'Kâmpóng Thum',\n      },\n      {\n        code: 'CB21',\n        name: 'Kâmpôt',\n      },\n      {\n        code: 'CB07',\n        name: 'Kândal',\n      },\n      {\n        code: 'CB08',\n        name: 'Kaôh Kong',\n      },\n      {\n        code: 'CB09',\n        name: 'Krâchéh',\n      },\n      {\n        code: 'CB26',\n        name: 'Krong Keb',\n      },\n      {\n        code: 'CB30',\n        name: 'Krong Pailin',\n      },\n      {\n        code: 'CB28',\n        name: 'Krong Preah Sihanouk',\n      },\n      {\n        code: 'CB10',\n        name: 'Môndól Kiri',\n      },\n      {\n        code: 'CB27',\n        name: 'Otdâr Méanchey',\n      },\n      {\n        code: 'CB22',\n        name: 'Phnom Penh',\n      },\n      {\n        code: 'CB12',\n        name: 'Pouthisat',\n      },\n      {\n        code: 'CB13',\n        name: 'Preah Vihéar',\n      },\n      {\n        code: 'CB14',\n        name: 'Prey Vêng',\n      },\n      {\n        code: 'CB23',\n        name: 'Rôtânôkiri',\n      },\n      {\n        code: 'CB24',\n        name: 'Siemréab',\n      },\n      {\n        code: 'CB17',\n        name: 'Stœ?ng Trêng',\n      },\n      {\n        code: 'CB18',\n        name: 'Svay Rieng',\n      },\n      {\n        code: 'CB19',\n        name: 'Takêv',\n      },\n      {\n        code: 'CB31',\n        name: 'Tbong Khmum',\n      },\n    ],\n  },\n  {\n    code: 'CM',\n    id: 2215,\n    name: 'Cameroon',\n    states: [\n      {\n        code: 'CM10',\n        name: 'Adamaoua',\n      },\n      {\n        code: 'CM11',\n        name: 'Centre',\n      },\n      {\n        code: 'CM04',\n        name: 'Est',\n      },\n      {\n        code: 'CM12',\n        name: 'Extrême-Nord',\n      },\n      {\n        code: 'CM05',\n        name: 'Littoral',\n      },\n      {\n        code: 'CM07',\n        name: 'Nord-Ouest',\n      },\n      {\n        code: 'CM13',\n        name: 'Nord',\n      },\n      {\n        code: 'CM08',\n        name: 'Ouest',\n      },\n      {\n        code: 'CM09',\n        name: 'Sud-Ouest',\n      },\n      {\n        code: 'CM14',\n        name: 'Sud',\n      },\n    ],\n  },\n  {\n    code: 'CA',\n    id: 2216,\n    name: 'Canada',\n    states: [\n      {\n        code: 'AB',\n        name: 'Alberta',\n      },\n      {\n        code: 'BC',\n        name: 'British Columbia',\n      },\n      {\n        code: 'MB',\n        name: 'Manitoba',\n      },\n      {\n        code: 'NB',\n        name: 'New Brunswick',\n      },\n      {\n        code: 'NL',\n        name: 'Newfoundland and Labrador',\n      },\n      {\n        code: 'NT',\n        name: 'Northwest Territories',\n      },\n      {\n        code: 'NS',\n        name: 'Nova Scotia',\n      },\n      {\n        code: 'NU',\n        name: 'Nunavut',\n      },\n      {\n        code: 'ON',\n        name: 'Ontario',\n      },\n      {\n        code: 'PE',\n        name: 'Prince Edward Island',\n      },\n      {\n        code: 'QC',\n        name: 'Quebec',\n      },\n      {\n        code: 'SK',\n        name: 'Saskatchewan',\n      },\n      {\n        code: 'YT',\n        name: 'Yukon',\n      },\n    ],\n  },\n  {\n    code: 'CV',\n    id: 2217,\n    name: 'Cape Verde',\n    states: [],\n  },\n  {\n    code: 'KY',\n    id: 2379,\n    name: 'Cayman Islands',\n    states: [\n      {\n        code: 'KY.BT',\n        name: 'Bodden Town',\n      },\n      {\n        code: 'KY.CJ',\n        name: 'Cayman Islands',\n      },\n      {\n        code: 'KY.EE',\n        name: 'East End',\n      },\n      {\n        code: 'KY.GT',\n        name: 'George Town',\n      },\n      {\n        code: 'KY.NS',\n        name: 'North Side',\n      },\n      {\n        code: 'KY.SI',\n        name: 'Sister Islands',\n      },\n      {\n        code: 'KY.WB',\n        name: 'West Bay',\n      },\n    ],\n  },\n  {\n    code: 'CF',\n    id: 2218,\n    name: 'Central African Republic',\n    states: [\n      {\n        code: 'CT01',\n        name: 'Bamingui-Bangoran',\n      },\n      {\n        code: 'CT18',\n        name: 'Bangui',\n      },\n      {\n        code: 'CT02',\n        name: 'Basse-Kotto',\n      },\n      {\n        code: 'CT05',\n        name: 'Haut-Mbomou',\n      },\n      {\n        code: 'CT03',\n        name: 'Haute-Kotto',\n      },\n      {\n        code: 'CT06',\n        name: 'Kémo',\n      },\n      {\n        code: 'CT07',\n        name: 'Lobaye',\n      },\n      {\n        code: 'CT04',\n        name: 'Mambéré-Kadéï',\n      },\n      {\n        code: 'CT08',\n        name: 'Mbomou',\n      },\n      {\n        code: 'CT15',\n        name: 'Nana-Grébizi',\n      },\n      {\n        code: 'CT09',\n        name: 'Nana-Mambéré',\n      },\n      {\n        code: 'CT17',\n        name: \"Ombella-M'Poko\",\n      },\n      {\n        code: 'CT11',\n        name: 'Ouaka',\n      },\n      {\n        code: 'CT12',\n        name: 'Ouham',\n      },\n      {\n        code: 'CT13',\n        name: 'Ouham-Pendé',\n      },\n      {\n        code: 'CT16',\n        name: 'Sangha-Mbaéré',\n      },\n      {\n        code: 'CT14',\n        name: 'Vakaga',\n      },\n    ],\n  },\n  {\n    code: 'TD',\n    id: 2219,\n    name: 'Chad',\n    states: [\n      {\n        code: 'CD22',\n        name: 'Barh el Ghazel',\n      },\n      {\n        code: 'CD01',\n        name: 'Batha',\n      },\n      {\n        code: 'CD23',\n        name: 'Borkou',\n      },\n      {\n        code: 'CD15',\n        name: 'Chari-Baguirmi',\n      },\n      {\n        code: 'CD27',\n        name: 'Ennedi Est',\n      },\n      {\n        code: 'CD28',\n        name: 'Ennedi Ouest',\n      },\n      {\n        code: 'CD05',\n        name: 'Guéra',\n      },\n      {\n        code: 'CD18',\n        name: 'Hadjer-Lamis',\n      },\n      {\n        code: 'CD06',\n        name: 'Kanem',\n      },\n      {\n        code: 'CD07',\n        name: 'Lac',\n      },\n      {\n        code: 'CD08',\n        name: 'Logone Occidental',\n      },\n      {\n        code: 'CD09',\n        name: 'Logone Oriental',\n      },\n      {\n        code: 'CD19',\n        name: 'Mandoul',\n      },\n      {\n        code: 'CD16',\n        name: 'Mayo-Kebbi Est',\n      },\n      {\n        code: 'CD20',\n        name: 'Mayo-Kebbi Ouest',\n      },\n      {\n        code: 'CD17',\n        name: 'Moyen-Chari',\n      },\n      {\n        code: 'CD12',\n        name: 'Ouaddaï',\n      },\n      {\n        code: 'CD13',\n        name: 'Salamat',\n      },\n      {\n        code: 'CD25',\n        name: 'Sila',\n      },\n      {\n        code: 'CD14',\n        name: 'Tandjilé',\n      },\n      {\n        code: 'CD26',\n        name: 'Tibesti',\n      },\n      {\n        code: 'CD21',\n        name: \"Ville de N'Djamena\",\n      },\n      {\n        code: 'CD02',\n        name: 'Wadi Fira',\n      },\n    ],\n  },\n  {\n    code: 'CH99',\n    id: 2386,\n    name: 'Channel Islands',\n    states: [],\n  },\n  {\n    code: 'CL',\n    id: 2220,\n    name: 'Chile',\n    states: [\n      {\n        code: 'CL.AI',\n        name: 'Aisén del General Carlos Ibáñez del Campo',\n      },\n      {\n        code: 'CL.AN',\n        name: 'Antofagasta',\n      },\n      {\n        code: 'CL.AR',\n        name: 'Araucanía',\n      },\n      {\n        code: 'CL.AP',\n        name: 'Arica and Parinacota',\n      },\n      {\n        code: 'CL.AT',\n        name: 'Atacama',\n      },\n      {\n        code: 'CL.BI',\n        name: 'Bío-Bío',\n      },\n      {\n        code: 'CL.CO',\n        name: 'Coquimbo',\n      },\n      {\n        code: 'CL.LI',\n        name: \"Libertador General Bernardo O'Higgins\",\n      },\n      {\n        code: 'CL.LG',\n        name: 'Los Lagos',\n      },\n      {\n        code: 'CL.LR',\n        name: 'Los Ríos',\n      },\n      {\n        code: 'CL.MA',\n        name: 'Magallanes y Antártica Chilena',\n      },\n      {\n        code: 'CL.ML',\n        name: 'Maule',\n      },\n      {\n        code: 'CL.RM',\n        name: 'Región Metropolitana de Santiago',\n      },\n      {\n        code: 'CL.TP',\n        name: 'Tarapacá',\n      },\n      {\n        code: 'CL.VS',\n        name: 'Valparaíso',\n      },\n    ],\n  },\n  {\n    code: 'CN',\n    id: 2221,\n    name: 'China',\n    states: [\n      {\n        code: 'CH01',\n        name: 'Anhui',\n      },\n      {\n        code: 'CH22',\n        name: 'Beijing',\n      },\n      {\n        code: 'CH33',\n        name: 'Chongqing',\n      },\n      {\n        code: 'CH07',\n        name: 'Fujian',\n      },\n      {\n        code: 'CH15',\n        name: 'Gansu',\n      },\n      {\n        code: 'CH17',\n        name: 'Guangdon',\n      },\n      {\n        code: 'CH30',\n        name: 'Guangdong',\n      },\n      {\n        code: 'CH16',\n        name: 'Guangxi',\n      },\n      {\n        code: 'CH18',\n        name: 'Guizhou',\n      },\n      {\n        code: 'CH31',\n        name: 'Hainan',\n      },\n      {\n        code: 'CH10',\n        name: 'Hebei',\n      },\n      {\n        code: 'CH08',\n        name: 'Heilongjiang',\n      },\n      {\n        code: 'CH09',\n        name: 'Henan',\n      },\n      {\n        code: 'CH34',\n        name: 'Hong Kong',\n      },\n      {\n        code: 'CH12',\n        name: 'Hubei',\n      },\n      {\n        code: 'CH11',\n        name: 'Hunan',\n      },\n      {\n        code: 'CH04',\n        name: 'Jiangsu',\n      },\n      {\n        code: 'CH03',\n        name: 'Jiangxi',\n      },\n      {\n        code: 'CH05',\n        name: 'Jilin',\n      },\n      {\n        code: 'CH19',\n        name: 'Liaoning',\n      },\n      {\n        code: 'CH20',\n        name: 'Nei Mongol',\n      },\n      {\n        code: 'CH21',\n        name: 'Ningxia',\n      },\n      {\n        code: 'CH06',\n        name: 'Qinghai',\n      },\n      {\n        code: 'CH26',\n        name: 'Shaanxi',\n      },\n      {\n        code: 'CH25',\n        name: 'Shandong',\n      },\n      {\n        code: 'CH23',\n        name: 'Shanghai',\n      },\n      {\n        code: 'CH24',\n        name: 'Shanxi',\n      },\n      {\n        code: 'CH32',\n        name: 'Sichuan',\n      },\n      {\n        code: 'CH27',\n        name: 'Sichuan',\n      },\n      {\n        code: 'CH28',\n        name: 'Tianjin',\n      },\n      {\n        code: 'CH13',\n        name: 'Xinjiang',\n      },\n      {\n        code: 'CH14',\n        name: 'Xizang',\n      },\n      {\n        code: 'CH29',\n        name: 'Yunnan',\n      },\n      {\n        code: 'CH02',\n        name: 'Zhejiang',\n      },\n    ],\n  },\n  {\n    code: 'CX',\n    id: 2412,\n    name: 'Christmas Island',\n    states: [],\n  },\n  {\n    code: 'CC',\n    id: 2413,\n    name: 'Cocos (Keeling) Islands',\n    states: [],\n  },\n  {\n    code: 'CO',\n    id: 2222,\n    name: 'Colombia',\n    states: [\n      {\n        code: 'CO01',\n        name: 'Amazonas',\n      },\n      {\n        code: 'CO02',\n        name: 'Antioquia',\n      },\n      {\n        code: 'CO03',\n        name: 'Arauca',\n      },\n      {\n        code: 'CO04',\n        name: 'Atlántico',\n      },\n      {\n        code: 'CO35',\n        name: 'Bolívar',\n      },\n      {\n        code: 'CO36',\n        name: 'Boyacá',\n      },\n      {\n        code: 'CO37',\n        name: 'Caldas',\n      },\n      {\n        code: 'CO08',\n        name: 'Caquetá',\n      },\n      {\n        code: 'CO32',\n        name: 'Casanare',\n      },\n      {\n        code: 'CO09',\n        name: 'Cauca',\n      },\n      {\n        code: 'CO10',\n        name: 'Cesar',\n      },\n      {\n        code: 'CO11',\n        name: 'Chocó',\n      },\n      {\n        code: 'CO12',\n        name: 'Córdoba',\n      },\n      {\n        code: 'CO33',\n        name: 'Cundinamarca',\n      },\n      {\n        code: 'CO34',\n        name: 'Distrito Capital',\n      },\n      {\n        code: 'CO15',\n        name: 'Guainía',\n      },\n      {\n        code: 'CO14',\n        name: 'Guaviare',\n      },\n      {\n        code: 'CO16',\n        name: 'Huila',\n      },\n      {\n        code: 'CO17',\n        name: 'La Guajira',\n      },\n      {\n        code: 'CO38',\n        name: 'Magdalena',\n      },\n      {\n        code: 'CO19',\n        name: 'Meta',\n      },\n      {\n        code: 'CO20',\n        name: 'Nariño',\n      },\n      {\n        code: 'CO21',\n        name: 'Norte de Santander',\n      },\n      {\n        code: 'CO22',\n        name: 'Putumayo',\n      },\n      {\n        code: 'CO23',\n        name: 'Quindío',\n      },\n      {\n        code: 'CO24',\n        name: 'Risaralda',\n      },\n      {\n        code: 'CO25',\n        name: 'San Andrés y Providencia',\n      },\n      {\n        code: 'CO26',\n        name: 'Santander',\n      },\n      {\n        code: 'CO27',\n        name: 'Sucre',\n      },\n      {\n        code: 'CO28',\n        name: 'Tolima',\n      },\n      {\n        code: 'CO29',\n        name: 'Valle del Cauca',\n      },\n      {\n        code: 'CO30',\n        name: 'Vaupés',\n      },\n      {\n        code: 'CO31',\n        name: 'Vichada',\n      },\n    ],\n  },\n  {\n    code: 'KM',\n    id: 2223,\n    name: 'Comoros',\n    states: [],\n  },\n  {\n    code: 'ZR',\n    id: 2368,\n    name: 'Congo; Democratic Republic of',\n    states: [\n      {\n        code: 'CD.BU',\n        name: 'Bas-Uélé',\n      },\n      {\n        code: 'CD.HK',\n        name: 'Haut-Katanga',\n      },\n      {\n        code: 'CD.HL',\n        name: 'Haut-Lomami',\n      },\n      {\n        code: 'CD.HU',\n        name: 'Haut-Uélé',\n      },\n      {\n        code: 'CD.IT',\n        name: 'Ituri',\n      },\n      {\n        code: 'CD.KS',\n        name: 'Kasaï',\n      },\n      {\n        code: 'CD.LL',\n        name: 'Kasaï-Central',\n      },\n      {\n        code: 'CD.KO',\n        name: 'Kasaï Oriental',\n      },\n      {\n        code: 'CD.KN',\n        name: 'Kinshasa',\n      },\n      {\n        code: 'CD.BC',\n        name: 'Kongo Central',\n      },\n      {\n        code: 'CD.KG',\n        name: 'Kwango',\n      },\n      {\n        code: 'CD.KU',\n        name: 'Kwilu',\n      },\n      {\n        code: 'CD.LM',\n        name: 'Lomami',\n      },\n      {\n        code: 'CD.LB',\n        name: 'Lualaba',\n      },\n      {\n        code: 'CD.MA',\n        name: 'Mai-Ndombe',\n      },\n      {\n        code: 'CD.MN',\n        name: 'Maniema',\n      },\n      {\n        code: 'CD.MO',\n        name: 'Mongala',\n      },\n      {\n        code: 'CD.NK',\n        name: 'Nord-Kivu',\n      },\n      {\n        code: 'CD.NU',\n        name: 'Nord-Ubangi',\n      },\n      {\n        code: 'CD.SN',\n        name: 'Sankuru',\n      },\n      {\n        code: 'CD.SK',\n        name: 'Sud-Kivu',\n      },\n      {\n        code: 'CD.SU',\n        name: 'Sud-Ubangi',\n      },\n      {\n        code: 'CD.TG',\n        name: 'Tanganyika',\n      },\n      {\n        code: 'CD.TO',\n        name: 'Tshopo',\n      },\n      {\n        code: 'CD.TP',\n        name: 'Tshuapa',\n      },\n      {\n        code: 'CD.ET',\n        name: 'Équateur',\n      },\n    ],\n  },\n  {\n    code: 'CG',\n    id: 2383,\n    name: 'Congo; Republic of',\n    states: [],\n  },\n  {\n    code: 'CK',\n    id: 2414,\n    name: 'Cook Islands',\n    states: [],\n  },\n  {\n    code: 'CR',\n    id: 2226,\n    name: 'Costa Rica',\n    states: [\n      {\n        code: 'CS01',\n        name: 'Alajuela',\n      },\n      {\n        code: 'CS02',\n        name: 'Cartago',\n      },\n      {\n        code: 'CS03',\n        name: 'Guanacaste',\n      },\n      {\n        code: 'CS04',\n        name: 'Heredia',\n      },\n      {\n        code: 'CS06',\n        name: 'Limón',\n      },\n      {\n        code: 'CS07',\n        name: 'Puntarenas',\n      },\n      {\n        code: 'CS08',\n        name: 'San José',\n      },\n    ],\n  },\n  {\n    code: 'CI',\n    id: 2227,\n    name: \"Cote D'Ivoire\",\n    states: [\n      {\n        code: 'IV93',\n        name: 'Abidjan',\n      },\n      {\n        code: 'IV76',\n        name: 'Bas-Sassandra',\n      },\n      {\n        code: 'IV94',\n        name: 'Comoé',\n      },\n      {\n        code: 'IV77',\n        name: 'Denguélé',\n      },\n      {\n        code: 'IV95',\n        name: 'Gôh-Djiboua',\n      },\n      {\n        code: 'IV81',\n        name: 'Lacs',\n      },\n      {\n        code: 'IV82',\n        name: 'Lagunes',\n      },\n      {\n        code: 'IV78',\n        name: 'Montagnes',\n      },\n      {\n        code: 'IV96',\n        name: 'Sassandra-Marahoué',\n      },\n      {\n        code: 'IV87',\n        name: 'Savanes',\n      },\n      {\n        code: 'IV90',\n        name: 'Vallée du Bandama',\n      },\n      {\n        code: 'IV97',\n        name: 'Woroba',\n      },\n      {\n        code: 'IV98',\n        name: 'Yamoussoukro',\n      },\n      {\n        code: 'IV92',\n        name: 'Zanzan',\n      },\n    ],\n  },\n  {\n    code: 'HR',\n    id: 2228,\n    name: 'Croatia',\n    states: [\n      {\n        code: 'HR07',\n        name: 'Bjelovarsko-bilogorska',\n      },\n      {\n        code: 'HR12',\n        name: 'Brodsko-posavska',\n      },\n      {\n        code: 'HR19',\n        name: 'Dubrovacko-neretvanska',\n      },\n      {\n        code: 'HR21',\n        name: 'Grad Zagreb',\n      },\n      {\n        code: 'HR-18',\n        name: 'Istarska',\n      },\n      {\n        code: 'HR04',\n        name: 'Karlovacka',\n      },\n      {\n        code: 'HR06',\n        name: 'Koprivnicko-križevacka',\n      },\n      {\n        code: 'HR02',\n        name: 'Krapinsko-zagorska',\n      },\n      {\n        code: 'HR09',\n        name: 'Licko-senjska',\n      },\n      {\n        code: 'HR20',\n        name: 'Medimurska',\n      },\n      {\n        code: 'HR14',\n        name: 'Osjecko-baranjska',\n      },\n      {\n        code: 'HR11',\n        name: 'Požeško-slavonska',\n      },\n      {\n        code: 'HR08',\n        name: 'Primorsko-goranska',\n      },\n      {\n        code: 'HR15',\n        name: 'Šibensko-kninska',\n      },\n      {\n        code: 'HR03',\n        name: 'Sisacko-moslavacka',\n      },\n      {\n        code: 'HR17',\n        name: 'Splitsko-dalmatinska',\n      },\n      {\n        code: 'HR05',\n        name: 'Varaždinska',\n      },\n      {\n        code: 'HR10',\n        name: 'Viroviticko-podravska',\n      },\n      {\n        code: 'HR16',\n        name: 'Vukovarsko-srijemska',\n      },\n      {\n        code: 'HR13',\n        name: 'Zadarska',\n      },\n      {\n        code: 'HR01',\n        name: 'Zagrebacka',\n      },\n    ],\n  },\n  {\n    code: 'CU',\n    id: 2229,\n    name: 'Cuba',\n    states: [\n      {\n        code: 'CU17',\n        name: 'Artemisa',\n      },\n      {\n        code: 'CU05',\n        name: 'Camagüey',\n      },\n      {\n        code: 'CU07',\n        name: 'Ciego de Ávila',\n      },\n      {\n        code: 'CU08',\n        name: 'Cienfuegos',\n      },\n      {\n        code: 'CU09',\n        name: 'Granma',\n      },\n      {\n        code: 'CU10',\n        name: 'Guantánamo',\n      },\n      {\n        code: 'CU12',\n        name: 'Holguín',\n      },\n      {\n        code: 'CU04',\n        name: 'Isla de la Juventud',\n      },\n      {\n        code: 'CU02',\n        name: 'La Habana',\n      },\n      {\n        code: 'CU13',\n        name: 'Las Tunas',\n      },\n      {\n        code: 'CU03',\n        name: 'Matanzas',\n      },\n      {\n        code: 'CU18',\n        name: 'Mayabeque',\n      },\n      {\n        code: 'CU01',\n        name: 'Pinar del Río',\n      },\n      {\n        code: 'CU14',\n        name: 'Sancti Spíritus',\n      },\n      {\n        code: 'CU15',\n        name: 'Santiago de Cuba',\n      },\n      {\n        code: 'CU16',\n        name: 'Villa Clara',\n      },\n    ],\n  },\n  {\n    code: 'C999',\n    id: 2387,\n    name: 'Curacao',\n    states: [\n      {\n        code: 'CW.CU',\n        name: 'Curacao',\n      },\n    ],\n  },\n  {\n    code: 'CY',\n    id: 2230,\n    name: 'Cyprus',\n    states: [\n      {\n        code: 'CY01',\n        name: 'Famagusta',\n      },\n      {\n        code: 'CY02',\n        name: 'Kyrenia',\n      },\n      {\n        code: 'CY03',\n        name: 'Larnaca',\n      },\n      {\n        code: 'CY05',\n        name: 'Limassol',\n      },\n      {\n        code: 'CY04',\n        name: 'Nicosia',\n      },\n      {\n        code: 'CY06',\n        name: 'Paphos',\n      },\n    ],\n  },\n  {\n    code: 'CZ',\n    id: 2231,\n    name: 'Czech Republic',\n    states: [\n      {\n        code: 'JC',\n        name: 'Jihoceský kraj',\n      },\n      {\n        code: 'JM',\n        name: 'Jihomoravský kraj',\n      },\n      {\n        code: 'KA',\n        name: 'Karlovarský kraj',\n      },\n      {\n        code: 'KR',\n        name: 'Královéhradecký kraj',\n      },\n      {\n        code: 'LI',\n        name: 'Liberecký kraj',\n      },\n      {\n        code: 'MO',\n        name: 'Moravskoslezský kraj',\n      },\n      {\n        code: 'OL',\n        name: 'Olomoucký kraj',\n      },\n      {\n        code: 'PA',\n        name: 'Pardubický kraj',\n      },\n      {\n        code: 'PL',\n        name: 'Plzenský kraj',\n      },\n      {\n        code: 'PR',\n        name: 'Praha, hlavní mesto',\n      },\n      {\n        code: 'ST',\n        name: 'Stredoceský kraj',\n      },\n      {\n        code: 'VY',\n        name: 'Vysocina',\n      },\n      {\n        code: 'ZL',\n        name: 'Zlínský kraj',\n      },\n      {\n        code: 'US',\n        name: 'Ústecký kraj',\n      },\n    ],\n  },\n  {\n    code: 'DK',\n    id: 2232,\n    name: 'Denmark',\n    states: [\n      {\n        code: 'DA01',\n        name: 'Arhus County',\n      },\n      {\n        code: 'DA02',\n        name: 'Bornholm Regional Municipality',\n      },\n      {\n        code: 'DA17',\n        name: 'Capital Region',\n      },\n      {\n        code: 'DA18',\n        name: 'Central Jutland Region',\n      },\n      {\n        code: 'DA16',\n        name: 'Frederiksberg municipal',\n      },\n      {\n        code: 'DA03',\n        name: 'Frederiksborg County',\n      },\n      {\n        code: 'DA04',\n        name: 'Fyn County',\n      },\n      {\n        code: 'DA06',\n        name: 'Kobenhavn County',\n      },\n      {\n        code: 'DA05',\n        name: 'Kobenhavn municipal',\n      },\n      {\n        code: 'DA07',\n        name: 'Nordjylland County',\n      },\n      {\n        code: 'DA19',\n        name: 'North Jutland Region',\n      },\n      {\n        code: 'DA08',\n        name: 'Ribe County',\n      },\n      {\n        code: 'DA09',\n        name: 'Ringkobing County',\n      },\n      {\n        code: 'DA10',\n        name: 'Roskilde County',\n      },\n      {\n        code: 'DA11',\n        name: 'Sonderjylland County',\n      },\n      {\n        code: 'DA21',\n        name: 'South Denmark Region',\n      },\n      {\n        code: 'DA12',\n        name: 'Storstrom County',\n      },\n      {\n        code: 'DA13',\n        name: 'Vejle County',\n      },\n      {\n        code: 'DA14',\n        name: 'Vestsjaelland County',\n      },\n      {\n        code: 'DA15',\n        name: 'Viborg County',\n      },\n      {\n        code: 'DA20',\n        name: 'Zealand Region',\n      },\n    ],\n  },\n  {\n    code: 'DJ',\n    id: 2233,\n    name: 'Djibouti',\n    states: [],\n  },\n  {\n    code: 'DM',\n    id: 2234,\n    name: 'Dominica',\n    states: [],\n  },\n  {\n    code: 'DO',\n    id: 2235,\n    name: 'Dominican Republic',\n    states: [\n      {\n        code: 'DR01',\n        name: 'Azua',\n      },\n      {\n        code: 'DR02',\n        name: 'Bahoruco',\n      },\n      {\n        code: 'DR03',\n        name: 'Barahona',\n      },\n      {\n        code: 'DR04',\n        name: 'Dajabón',\n      },\n      {\n        code: 'DR34',\n        name: 'Distrito Nacional',\n      },\n      {\n        code: 'DR06',\n        name: 'Duarte',\n      },\n      {\n        code: 'DR28',\n        name: 'El Seibo',\n      },\n      {\n        code: 'DR11',\n        name: 'Elías Piña',\n      },\n      {\n        code: 'DR08',\n        name: 'Espaillat',\n      },\n      {\n        code: 'DR29',\n        name: 'Hato Mayor',\n      },\n      {\n        code: 'DR19',\n        name: 'Hermanas Mirabal',\n      },\n      {\n        code: 'DR09',\n        name: 'Independencia',\n      },\n      {\n        code: 'DR10',\n        name: 'La Altagracia',\n      },\n      {\n        code: 'DR12',\n        name: 'La Romana',\n      },\n      {\n        code: 'DR30',\n        name: 'La Vega',\n      },\n      {\n        code: 'DR14',\n        name: 'María Trinidad Sánchez',\n      },\n      {\n        code: 'DR31',\n        name: 'Monseñor Nouel',\n      },\n      {\n        code: 'DR15',\n        name: 'Monte Cristi',\n      },\n      {\n        code: 'DR32',\n        name: 'Monte Plata',\n      },\n      {\n        code: 'DR16',\n        name: 'Pedernales',\n      },\n      {\n        code: 'DR35',\n        name: 'Peravia',\n      },\n      {\n        code: 'DR18',\n        name: 'Puerto Plata',\n      },\n      {\n        code: 'DR20',\n        name: 'Samaná',\n      },\n      {\n        code: 'DR33',\n        name: 'San Cristóbal',\n      },\n      {\n        code: 'DR36',\n        name: 'San José de Ocoa',\n      },\n      {\n        code: 'DR23',\n        name: 'San Juan',\n      },\n      {\n        code: 'DR24',\n        name: 'San Pedro de Macorís',\n      },\n      {\n        code: 'DR21',\n        name: 'Sánchez Ramírez',\n      },\n      {\n        code: 'DR25',\n        name: 'Santiago',\n      },\n      {\n        code: 'DR26',\n        name: 'Santiago Rodríguez',\n      },\n      {\n        code: 'DR37',\n        name: 'Santo Domingo',\n      },\n      {\n        code: 'DR27',\n        name: 'Valverde',\n      },\n    ],\n  },\n  {\n    code: 'EC',\n    id: 2236,\n    name: 'Ecuador',\n    states: [\n      {\n        code: 'EC02',\n        name: 'Azuay',\n      },\n      {\n        code: 'EC02',\n        name: 'Azuay',\n      },\n      {\n        code: 'EC03',\n        name: 'Bolívar',\n      },\n      {\n        code: 'EC04',\n        name: 'Cañar',\n      },\n      {\n        code: 'EC05',\n        name: 'Carchi',\n      },\n      {\n        code: 'EC06',\n        name: 'Chimborazo',\n      },\n      {\n        code: 'EC07',\n        name: 'Cotopaxi',\n      },\n      {\n        code: 'EC08',\n        name: 'El Oro',\n      },\n      {\n        code: 'EC09',\n        name: 'Esmeraldas',\n      },\n      {\n        code: 'EC01',\n        name: 'Galápagos',\n      },\n      {\n        code: 'EC10',\n        name: 'Guayas',\n      },\n      {\n        code: 'EC11',\n        name: 'Imbabura',\n      },\n      {\n        code: 'EC12',\n        name: 'Loja',\n      },\n      {\n        code: 'EC13',\n        name: 'Los Ríos',\n      },\n      {\n        code: 'EC14',\n        name: 'Manabí',\n      },\n      {\n        code: 'EC15',\n        name: 'Morona-Santiago',\n      },\n      {\n        code: 'EC23',\n        name: 'Napo',\n      },\n      {\n        code: 'EC24',\n        name: 'Orellana',\n      },\n      {\n        code: 'EC17',\n        name: 'Pastaza',\n      },\n      {\n        code: 'EC18',\n        name: 'Pichincha',\n      },\n      {\n        code: 'EC25',\n        name: 'Santa Elena',\n      },\n      {\n        code: 'EC26',\n        name: 'Santo Domingo de los Tsáchilas',\n      },\n      {\n        code: 'EC22',\n        name: 'Sucumbíos',\n      },\n      {\n        code: 'EC19',\n        name: 'Tungurahua',\n      },\n      {\n        code: 'EC20',\n        name: 'Zamora-Chinchipe',\n      },\n    ],\n  },\n  {\n    code: 'EG',\n    id: 2237,\n    name: 'Egypt',\n    states: [\n      {\n        code: 'EG01',\n        name: 'Ad Daqahliyah',\n      },\n      {\n        code: 'EG02',\n        name: 'Al Bahr al Ahmar',\n      },\n      {\n        code: 'EG03',\n        name: 'Al Buhayrah',\n      },\n      {\n        code: 'EG04',\n        name: 'Al Fayyum',\n      },\n      {\n        code: 'EG05',\n        name: 'Al Gharbiyah',\n      },\n      {\n        code: 'EG06',\n        name: 'Al Iskandariyah',\n      },\n      {\n        code: 'EG07',\n        name: 'Al Isma`iliyah',\n      },\n      {\n        code: 'EG08',\n        name: 'Al Jizah',\n      },\n      {\n        code: 'EG09',\n        name: 'Al Minufiyah',\n      },\n      {\n        code: 'EG10',\n        name: 'Al Minya',\n      },\n      {\n        code: 'EG11',\n        name: 'Al Qahirah',\n      },\n      {\n        code: 'EG12',\n        name: 'Al Qalyubiyah',\n      },\n      {\n        code: 'EG28',\n        name: 'Al Uqsur',\n      },\n      {\n        code: 'EG13',\n        name: 'Al Wadi al Jadid',\n      },\n      {\n        code: 'EG15',\n        name: 'As Suways',\n      },\n      {\n        code: 'EG14',\n        name: 'Ash Sharqiyah',\n      },\n      {\n        code: 'EG16',\n        name: 'Aswan',\n      },\n      {\n        code: 'EG17',\n        name: 'Asyut',\n      },\n      {\n        code: 'EG18',\n        name: 'Bani Suwayf',\n      },\n      {\n        code: 'EG19',\n        name: 'Bur Sa`id',\n      },\n      {\n        code: 'EG20',\n        name: 'Dumyat',\n      },\n      {\n        code: 'EG26',\n        name: 'Janub Sina',\n      },\n      {\n        code: 'EG21',\n        name: 'Kafr ash Shaykh',\n      },\n      {\n        code: 'EG22',\n        name: 'Matruh',\n      },\n      {\n        code: 'EG23',\n        name: 'Qina',\n      },\n      {\n        code: 'EG27',\n        name: 'Shamal Sina',\n      },\n      {\n        code: 'EG24',\n        name: 'Suhaj',\n      },\n    ],\n  },\n  {\n    code: 'SV',\n    id: 2238,\n    name: 'El Salvador',\n    states: [\n      {\n        code: 'ES01',\n        name: 'Ahuachapán',\n      },\n      {\n        code: 'ES02',\n        name: 'Cabañas',\n      },\n      {\n        code: 'ES03',\n        name: 'Chalatenango',\n      },\n      {\n        code: 'ES04',\n        name: 'Cuscatlán',\n      },\n      {\n        code: 'ES05',\n        name: 'La Libertad',\n      },\n      {\n        code: 'ES06',\n        name: 'La Paz',\n      },\n      {\n        code: 'ES07',\n        name: 'La Unión',\n      },\n      {\n        code: 'ES08',\n        name: 'Morazán',\n      },\n      {\n        code: 'ES09',\n        name: 'San Miguel',\n      },\n      {\n        code: 'ES10',\n        name: 'San Salvador',\n      },\n      {\n        code: 'ES12',\n        name: 'San Vicente',\n      },\n      {\n        code: 'ES11',\n        name: 'Santa Ana',\n      },\n      {\n        code: 'ES13',\n        name: 'Sonsonate',\n      },\n      {\n        code: 'ES14',\n        name: 'Usulután',\n      },\n    ],\n  },\n  {\n    code: 'GQ',\n    id: 2239,\n    name: 'Equatorial Guinea',\n    states: [],\n  },\n  {\n    code: 'ER',\n    id: 2240,\n    name: 'Eritrea',\n    states: [],\n  },\n  {\n    code: 'EE',\n    id: 2241,\n    name: 'Estonia',\n    states: [\n      {\n        code: 'EN01',\n        name: 'Harju',\n      },\n      {\n        code: 'EN02',\n        name: 'Hiiu',\n      },\n      {\n        code: 'EN03',\n        name: 'Ida-Viru',\n      },\n      {\n        code: 'EN04',\n        name: 'Järva',\n      },\n      {\n        code: 'EN05',\n        name: 'Jõgeva',\n      },\n      {\n        code: 'EN07',\n        name: 'Lääne',\n      },\n      {\n        code: 'EN08',\n        name: 'Lääne-Viru',\n      },\n      {\n        code: 'EN11',\n        name: 'Pärnu',\n      },\n      {\n        code: 'EN12',\n        name: 'Põlva',\n      },\n      {\n        code: 'EN13',\n        name: 'Rapla',\n      },\n      {\n        code: 'EN14',\n        name: 'Saare',\n      },\n      {\n        code: 'EN18',\n        name: 'Tartu',\n      },\n      {\n        code: 'EN19',\n        name: 'Valga',\n      },\n      {\n        code: 'EN20',\n        name: 'Viljandi',\n      },\n      {\n        code: 'EN21',\n        name: 'Võru',\n      },\n    ],\n  },\n  {\n    code: 'ET',\n    id: 2242,\n    name: 'Ethiopia',\n    states: [\n      {\n        code: 'ET44',\n        name: 'Addis Ababa',\n      },\n      {\n        code: 'ET45',\n        name: 'Afar',\n      },\n      {\n        code: 'ET46',\n        name: 'Amhara',\n      },\n      {\n        code: 'ET47',\n        name: 'Benshangul-Gumaz',\n      },\n      {\n        code: 'ET48',\n        name: 'Dire Dawa',\n      },\n      {\n        code: 'ET49',\n        name: 'Gambela Peoples',\n      },\n      {\n        code: 'ET50',\n        name: 'Harari People',\n      },\n      {\n        code: 'ET51',\n        name: 'Oromia',\n      },\n      {\n        code: 'ET52',\n        name: 'Somali',\n      },\n      {\n        code: 'ET54',\n        name: 'Southern Nations, Nationalities and Peoples',\n      },\n      {\n        code: 'ET53',\n        name: 'Tigray',\n      },\n    ],\n  },\n  {\n    code: 'FK',\n    id: 2415,\n    name: 'Falkland Islands (Malvinas)',\n    states: [],\n  },\n  {\n    code: 'FI99',\n    id: 2388,\n    name: 'Faroe Islands',\n    states: [],\n  },\n  {\n    code: 'FJ',\n    id: 2243,\n    name: 'Fiji',\n    states: [],\n  },\n  {\n    code: 'FI',\n    id: 2244,\n    name: 'Finland',\n    states: [\n      {\n        code: 'FI-AL',\n        name: 'Ahvenanmaan lääni',\n      },\n      {\n        code: 'AX',\n        name: 'Ahvenanmaa',\n      },\n      {\n        code: 'FI.SK',\n        name: 'Etelä-Karjala',\n      },\n      {\n        code: 'FI.SO',\n        name: 'Etelä-Pohjanmaa',\n      },\n      {\n        code: 'FI.SS',\n        name: 'Etelä-Savo',\n      },\n      {\n        code: 'FI-ES',\n        name: 'Etelä-Suomen lääni',\n      },\n      {\n        code: 'FI-IS',\n        name: 'Itä-Suomen lääni',\n      },\n      {\n        code: 'FI.KA',\n        name: 'Kainuu',\n      },\n      {\n        code: 'FI.KH',\n        name: 'Kanta-Häme',\n      },\n      {\n        code: 'FI.CO',\n        name: 'Keski-Pohjanmaa',\n      },\n      {\n        code: 'FI.CF',\n        name: 'Keski-Suomi',\n      },\n      {\n        code: 'FI.KY',\n        name: 'Kymenlaakso',\n      },\n      {\n        code: 'FI-LS',\n        name: 'Länsi-Suomen lääni',\n      },\n      {\n        code: 'FI-LL',\n        name: 'Lapin lääni',\n      },\n      {\n        code: 'FI.LA',\n        name: 'Lappi',\n      },\n      {\n        code: 'FI-OL',\n        name: 'Oulun lääni',\n      },\n      {\n        code: 'FI.PH',\n        name: 'Päijät-Häme',\n      },\n      {\n        code: 'FI.TR',\n        name: 'Pirkanmaa',\n      },\n      {\n        code: 'FI.OS',\n        name: 'Pohjanmaa',\n      },\n      {\n        code: 'FI.NK',\n        name: 'Pohjois-Karjala',\n      },\n      {\n        code: 'FI.NO',\n        name: 'Pohjois-Pohjanmaa',\n      },\n      {\n        code: 'FI.NS',\n        name: 'Pohjois-Savo',\n      },\n      {\n        code: 'FI.SA',\n        name: 'Satakunta',\n      },\n      {\n        code: 'FI.US',\n        name: 'Uusimaa',\n      },\n      {\n        code: 'FI.SF',\n        name: 'Varsinais-Suomi',\n      },\n    ],\n  },\n  {\n    code: 'FR',\n    id: 2245,\n    name: 'France',\n    states: [\n      {\n        code: 'FRC2',\n        name: 'Ain',\n      },\n      {\n        code: 'FRC3',\n        name: 'Aisne',\n      },\n      {\n        code: 'FRC4',\n        name: 'Allier',\n      },\n      {\n        code: 'FRC6',\n        name: 'Alpes-Maritimes',\n      },\n      {\n        code: 'FRC5',\n        name: 'Alpes-de-Haute-Provence',\n      },\n      {\n        code: 'FRC1',\n        name: 'Alsace',\n      },\n      {\n        code: 'FR97',\n        name: 'Aquitaine',\n      },\n      {\n        code: 'FRC7',\n        name: 'Ardèche',\n      },\n      {\n        code: 'FRC8',\n        name: 'Ardennes',\n      },\n      {\n        code: 'FRC9',\n        name: 'Ariège',\n      },\n      {\n        code: 'FRD1',\n        name: 'Aube',\n      },\n      {\n        code: 'FRD2',\n        name: 'Aude',\n      },\n      {\n        code: 'FR.AR',\n        name: 'Auvergne-Rhône-Alpes',\n      },\n      {\n        code: 'FR98',\n        name: 'Auvergne',\n      },\n      {\n        code: 'FRD3',\n        name: 'Aveyron',\n      },\n      {\n        code: 'FRD4',\n        name: 'Bas-Rhin',\n      },\n      {\n        code: 'FR99',\n        name: 'Basse-Normandie',\n      },\n      {\n        code: 'FRD5',\n        name: 'Bouches-du-Rhône',\n      },\n      {\n        code: 'FR.BF',\n        name: 'Bourgogne-Franche-Comté',\n      },\n      {\n        code: 'FRA1',\n        name: 'Bourgogne',\n      },\n      {\n        code: 'FRA2',\n        name: 'Bretagne',\n      },\n      {\n        code: 'FRD8',\n        name: 'Calvados',\n      },\n      {\n        code: 'FRD9',\n        name: 'Cantal',\n      },\n      {\n        code: 'FRA3',\n        name: 'Centre',\n      },\n      {\n        code: 'FR.CN',\n        name: 'Centre-Val de Loire',\n      },\n      {\n        code: 'FRA4',\n        name: 'Champagne-Ardenne',\n      },\n      {\n        code: 'FRE1',\n        name: 'Charente-Maritime',\n      },\n      {\n        code: 'FRE2',\n        name: 'Charente',\n      },\n      {\n        code: 'FRE3',\n        name: 'Cher',\n      },\n      {\n        code: 'FRE4',\n        name: 'Corrèze',\n      },\n      {\n        code: 'FRE5',\n        name: 'Corse-du-Sud',\n      },\n      {\n        code: 'FR.CE',\n        name: 'Corse',\n      },\n      {\n        code: 'FRD6',\n        name: \"Côte-d'Or\",\n      },\n      {\n        code: 'FRD7',\n        name: \"Côtes-d'Armor\",\n      },\n      {\n        code: 'FRE6',\n        name: 'Creuse',\n      },\n      {\n        code: 'FRE7',\n        name: 'Deux-Sèvres',\n      },\n      {\n        code: 'FRE8',\n        name: 'Dordogne',\n      },\n      {\n        code: 'FRE9',\n        name: 'Doubs',\n      },\n      {\n        code: 'FRF1',\n        name: 'Drôme',\n      },\n      {\n        code: 'FRF2',\n        name: 'Essonne',\n      },\n      {\n        code: 'FRF3',\n        name: 'Eure-et-Loir',\n      },\n      {\n        code: 'FRF4',\n        name: 'Eure',\n      },\n      {\n        code: 'FRF5',\n        name: 'Finistère',\n      },\n      {\n        code: 'FRA6',\n        name: 'Franche-Comte',\n      },\n      {\n        code: 'FRF6',\n        name: 'Gard',\n      },\n      {\n        code: 'FRF7',\n        name: 'Gers',\n      },\n      {\n        code: 'FRF8',\n        name: 'Gironde',\n      },\n      {\n        code: 'FR.AO',\n        name: 'Grand Est',\n      },\n      {\n        code: 'FRG1',\n        name: 'Haut-Rhin',\n      },\n      {\n        code: 'FRG2',\n        name: 'Haute-Corse',\n      },\n      {\n        code: 'FRG3',\n        name: 'Haute-Garonne',\n      },\n      {\n        code: 'FRG4',\n        name: 'Haute-Loire',\n      },\n      {\n        code: 'FRG5',\n        name: 'Haute-Marne',\n      },\n      {\n        code: 'FRA7',\n        name: 'Haute-Normandie',\n      },\n      {\n        code: 'FRG6',\n        name: 'Haute-Saône',\n      },\n      {\n        code: 'FRG7',\n        name: 'Haute-Savoie',\n      },\n      {\n        code: 'FRG8',\n        name: 'Haute-Vienne',\n      },\n      {\n        code: 'FRG9',\n        name: 'Hautes-Alpes',\n      },\n      {\n        code: 'FRH1',\n        name: 'Hautes-Pyrénées',\n      },\n      {\n        code: 'FR.NC',\n        name: 'Hauts-de-France',\n      },\n      {\n        code: 'FRH2',\n        name: 'Hauts-de-Seine',\n      },\n      {\n        code: 'FRF9',\n        name: 'Hérault',\n      },\n      {\n        code: 'FRA8',\n        name: 'Ile-de-France',\n      },\n      {\n        code: 'FRH3',\n        name: 'Ille-et-Vilaine',\n      },\n      {\n        code: 'FRH5',\n        name: 'Indre',\n      },\n      {\n        code: 'FRH4',\n        name: 'Indre-et-Loire',\n      },\n      {\n        code: 'FRH6',\n        name: 'Isère',\n      },\n      {\n        code: 'FRH7',\n        name: 'Jura',\n      },\n      {\n        code: 'FRH8',\n        name: 'Landes',\n      },\n      {\n        code: 'FRA9',\n        name: 'Languedoc-Roussillon',\n      },\n      {\n        code: 'FRB1',\n        name: 'Limousin',\n      },\n      {\n        code: 'FRI3',\n        name: 'Loir-et-Cher',\n      },\n      {\n        code: 'FRI2',\n        name: 'Loiret',\n      },\n      {\n        code: 'FRI1',\n        name: 'Loire',\n      },\n      {\n        code: 'FRH9',\n        name: 'Loire-Atlantique',\n      },\n      {\n        code: 'FRB2',\n        name: 'Lorraine',\n      },\n      {\n        code: 'FRI4',\n        name: 'Lot-et-Garonne',\n      },\n      {\n        code: 'FRI5',\n        name: 'Lot',\n      },\n      {\n        code: 'FRI6',\n        name: 'Lozère',\n      },\n      {\n        code: 'FRI7',\n        name: 'Maine-et-Loire',\n      },\n      {\n        code: 'FRI8',\n        name: 'Manche',\n      },\n      {\n        code: 'FRI9',\n        name: 'Marne',\n      },\n      {\n        code: 'FRJ1',\n        name: 'Mayenne',\n      },\n      {\n        code: 'FRJ2',\n        name: 'Meurthe-et-Moselle',\n      },\n      {\n        code: 'FRJ3',\n        name: 'Meuse',\n      },\n      {\n        code: 'FRB3',\n        name: 'Midi-Pyrenees',\n      },\n      {\n        code: 'FRJ4',\n        name: 'Morbihan',\n      },\n      {\n        code: 'FRJ5',\n        name: 'Moselle',\n      },\n      {\n        code: 'FRJ6',\n        name: 'Nièvre',\n      },\n      {\n        code: 'FRJ7',\n        name: 'Nord France',\n      },\n      {\n        code: 'FR67',\n        name: 'Nord',\n      },\n      {\n        code: 'FR.ND',\n        name: 'Normandie',\n      },\n      {\n        code: 'FR.AC',\n        name: 'Nouvelle-Aquitaine',\n      },\n      {\n        code: 'FR.LP',\n        name: 'Occitanie',\n      },\n      {\n        code: 'FRJ8',\n        name: 'Oise',\n      },\n      {\n        code: 'FRJ9',\n        name: 'Orne',\n      },\n      {\n        code: 'FRK1',\n        name: 'Paris',\n      },\n      {\n        code: 'FRB4',\n        name: 'Pas-de-Calais',\n      },\n      {\n        code: 'FRB5',\n        name: 'Pays de la Loire',\n      },\n      {\n        code: 'FRB6',\n        name: 'Picardie',\n      },\n      {\n        code: 'FRB7',\n        name: 'Poitou-Charentes',\n      },\n      {\n        code: 'FRB8',\n        name: \"Provence-Alpes-Cote d'Azur\",\n      },\n      {\n        code: 'FRK2',\n        name: 'Puy-de-Dôme',\n      },\n      {\n        code: 'FRK3',\n        name: 'Pyrénées-Atlantiques',\n      },\n      {\n        code: 'FRK4',\n        name: 'Pyrénées-Orientales',\n      },\n      {\n        code: 'FRB9',\n        name: 'Rhône',\n      },\n      {\n        code: 'FRK5',\n        name: 'Saône-et-Loire',\n      },\n      {\n        code: 'FRK6',\n        name: 'Sarthe',\n      },\n      {\n        code: 'FRK7',\n        name: 'Savoie',\n      },\n      {\n        code: 'FRK9',\n        name: 'Seine-Maritime',\n      },\n      {\n        code: 'FRL1',\n        name: 'Seine-Saint-Denis',\n      },\n      {\n        code: 'FRK8',\n        name: 'Seine-et-Marne',\n      },\n      {\n        code: 'FRL2',\n        name: 'Somme',\n      },\n      {\n        code: 'FRL3',\n        name: 'Tarn-et-Garonne',\n      },\n      {\n        code: 'FRL4',\n        name: 'Tarn',\n      },\n      {\n        code: 'FRL5',\n        name: 'Territoire de Belfor',\n      },\n      {\n        code: 'FR14',\n        name: 'Territoire de Belfort',\n      },\n      {\n        code: 'FRL6',\n        name: \"Val-d'Oise\",\n      },\n      {\n        code: 'FRL7',\n        name: 'Val-de-Marne',\n      },\n      {\n        code: 'FRL8',\n        name: 'Var',\n      },\n      {\n        code: 'FRL9',\n        name: 'Vaucluse',\n      },\n      {\n        code: 'FRM1',\n        name: 'Vendée',\n      },\n      {\n        code: 'FRM2',\n        name: 'Vienne',\n      },\n      {\n        code: 'FR94',\n        name: 'Ville de Paris',\n      },\n      {\n        code: 'FRM3',\n        name: 'Vosges',\n      },\n      {\n        code: 'FRM4',\n        name: 'Yonne',\n      },\n      {\n        code: 'FRM5',\n        name: 'Yvelines',\n      },\n      {\n        code: 'FR.IF',\n        name: 'Île-de-France',\n      },\n    ],\n  },\n  {\n    code: 'GF',\n    id: 2416,\n    name: 'French Guiana',\n    states: [],\n  },\n  {\n    code: 'PF',\n    id: 2417,\n    name: 'French Polynesia',\n    states: [],\n  },\n  {\n    code: 'TF',\n    id: 2418,\n    name: 'French Southern Territories',\n    states: [],\n  },\n  {\n    code: 'GA',\n    id: 2246,\n    name: 'Gabon',\n    states: [\n      {\n        code: 'GB01',\n        name: 'Estuaire',\n      },\n      {\n        code: 'GB02',\n        name: 'Haut-Ogooué',\n      },\n      {\n        code: 'GB03',\n        name: 'Moyen-Ogooué',\n      },\n      {\n        code: 'GB04',\n        name: 'Ngounié',\n      },\n      {\n        code: 'GB05',\n        name: 'Nyanga',\n      },\n      {\n        code: 'GB06',\n        name: 'Ogooué-Ivindo',\n      },\n      {\n        code: 'GB07',\n        name: 'Ogooué-Lolo',\n      },\n      {\n        code: 'GB08',\n        name: 'Ogooué-Maritime',\n      },\n      {\n        code: 'GB09',\n        name: 'Woleu-Ntem',\n      },\n    ],\n  },\n  {\n    code: 'GM',\n    id: 2389,\n    name: 'Gambia',\n    states: [\n      {\n        code: 'GA01',\n        name: 'Banjul',\n      },\n      {\n        code: 'GA03',\n        name: 'Central River',\n      },\n      {\n        code: 'GA02',\n        name: 'Lower River',\n      },\n      {\n        code: 'GA07',\n        name: 'North Bank',\n      },\n      {\n        code: 'GA04',\n        name: 'Upper River',\n      },\n      {\n        code: 'GA05',\n        name: 'West Coast',\n      },\n    ],\n  },\n  {\n    code: 'GE',\n    id: 2248,\n    name: 'Georgia',\n    states: [\n      {\n        code: 'GG02',\n        name: 'Abkhazia',\n      },\n      {\n        code: 'GG04',\n        name: 'Ajaria',\n      },\n      {\n        code: 'GG65',\n        name: 'Guria',\n      },\n      {\n        code: 'GG66',\n        name: 'Imereti',\n      },\n      {\n        code: 'GG67',\n        name: 'Kakheti',\n      },\n      {\n        code: 'GG68',\n        name: 'Kvemo Kartli',\n      },\n      {\n        code: 'GG69',\n        name: 'Mtskheta-Mtianeti',\n      },\n      {\n        code: 'GG70',\n        name: 'Racha-Lochkhumi-Kvemo Svaneti',\n      },\n      {\n        code: 'GG71',\n        name: 'Samegrelo-Zemo Svaneti',\n      },\n      {\n        code: 'GG72',\n        name: 'Samtskhe-Javakheti',\n      },\n      {\n        code: 'GG73',\n        name: 'Shida Kartli',\n      },\n      {\n        code: 'GG51',\n        name: 'Tbilisi',\n      },\n    ],\n  },\n  {\n    code: 'DE',\n    id: 2249,\n    name: 'Germany',\n    states: [\n      {\n        code: 'BW',\n        name: 'Baden-Württemberg',\n      },\n      {\n        code: 'BY',\n        name: 'Bayern',\n      },\n      {\n        code: 'BE',\n        name: 'Berlin',\n      },\n      {\n        code: 'BB',\n        name: 'Brandenburg',\n      },\n      {\n        code: 'HB',\n        name: 'Bremen',\n      },\n      {\n        code: 'HH',\n        name: 'Hamburg',\n      },\n      {\n        code: 'HE',\n        name: 'Hessen',\n      },\n      {\n        code: 'MV',\n        name: 'Mecklenburg-Vorpommern',\n      },\n      {\n        code: 'NI',\n        name: 'Niedersachsen',\n      },\n      {\n        code: 'NW',\n        name: 'Nordrhein-Westfalen',\n      },\n      {\n        code: 'RP',\n        name: 'Rheinland-Pfalz',\n      },\n      {\n        code: 'SL',\n        name: 'Saarland',\n      },\n      {\n        code: 'SN',\n        name: 'Sachsen',\n      },\n      {\n        code: 'ST',\n        name: 'Sachsen-Anhalt',\n      },\n      {\n        code: 'SH',\n        name: 'Schleswig-Holstein',\n      },\n      {\n        code: 'TH',\n        name: 'Thüringen',\n      },\n    ],\n  },\n  {\n    code: 'GH',\n    id: 2250,\n    name: 'Ghana',\n    states: [\n      {\n        code: 'GH02',\n        name: 'Ashanti',\n      },\n      {\n        code: 'GH03',\n        name: 'Brong-Ahafo',\n      },\n      {\n        code: 'GH04',\n        name: 'Central',\n      },\n      {\n        code: 'GH05',\n        name: 'Eastern',\n      },\n      {\n        code: 'GH01',\n        name: 'Greater Accra',\n      },\n      {\n        code: 'GH06',\n        name: 'Northern',\n      },\n      {\n        code: 'GH10',\n        name: 'Upper East',\n      },\n      {\n        code: 'GH11',\n        name: 'Upper West',\n      },\n      {\n        code: 'GH08',\n        name: 'Volta',\n      },\n      {\n        code: 'GH09',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'G999',\n    id: 2390,\n    name: 'Gibraltar',\n    states: [\n      {\n        code: 'GI.GI',\n        name: 'Gibraltar',\n      },\n    ],\n  },\n  {\n    code: 'GR',\n    id: 2251,\n    name: 'Greece',\n    states: [\n      {\n        code: '13',\n        name: 'Achaïa',\n      },\n      {\n        code: '69',\n        name: 'Agio Oros',\n      },\n      {\n        code: '01',\n        name: 'Aitolia kai Akarnania',\n      },\n      {\n        code: '11',\n        name: 'Argolida',\n      },\n      {\n        code: '12',\n        name: 'Arkadia',\n      },\n      {\n        code: '31',\n        name: 'Arta',\n      },\n      {\n        code: 'A1',\n        name: 'Attiki',\n      },\n      {\n        code: '64',\n        name: 'Chalkidiki',\n      },\n      {\n        code: '94',\n        name: 'Chania',\n      },\n      {\n        code: '85',\n        name: 'Chios',\n      },\n      {\n        code: '81',\n        name: 'Dodekanisos',\n      },\n      {\n        code: '52',\n        name: 'Drama',\n      },\n      {\n        code: '71',\n        name: 'Evros',\n      },\n      {\n        code: '05',\n        name: 'Evrytania',\n      },\n      {\n        code: '04',\n        name: 'Evvoia',\n      },\n      {\n        code: '63',\n        name: 'Florina',\n      },\n      {\n        code: '07',\n        name: 'Fokida',\n      },\n      {\n        code: '06',\n        name: 'Fthiotida',\n      },\n      {\n        code: '51',\n        name: 'Grevena',\n      },\n      {\n        code: '14',\n        name: 'Ileia',\n      },\n      {\n        code: '53',\n        name: 'Imathia',\n      },\n      {\n        code: '33',\n        name: 'Ioannina',\n      },\n      {\n        code: '91',\n        name: 'Irakleio',\n      },\n      {\n        code: '41',\n        name: 'Karditsa',\n      },\n      {\n        code: '56',\n        name: 'Kastoria',\n      },\n      {\n        code: '55',\n        name: 'Kavala',\n      },\n      {\n        code: '23',\n        name: 'Kefallonia',\n      },\n      {\n        code: '22',\n        name: 'Kerkyra',\n      },\n      {\n        code: '57',\n        name: 'Kilkis',\n      },\n      {\n        code: '15',\n        name: 'Korinthia',\n      },\n      {\n        code: '58',\n        name: 'Kozani',\n      },\n      {\n        code: '82',\n        name: 'Kyklades',\n      },\n      {\n        code: '16',\n        name: 'Lakonia',\n      },\n      {\n        code: '42',\n        name: 'Larisa',\n      },\n      {\n        code: '92',\n        name: 'Lasithi',\n      },\n      {\n        code: '24',\n        name: 'Lefkada',\n      },\n      {\n        code: '83',\n        name: 'Lesvos',\n      },\n      {\n        code: '43',\n        name: 'Magnisia',\n      },\n      {\n        code: '17',\n        name: 'Messinia',\n      },\n      {\n        code: '59',\n        name: 'Pella',\n      },\n      {\n        code: '61',\n        name: 'Pieria',\n      },\n      {\n        code: '34',\n        name: 'Preveza',\n      },\n      {\n        code: '93',\n        name: 'Rethymno',\n      },\n      {\n        code: '73',\n        name: 'Rodopi',\n      },\n      {\n        code: '84',\n        name: 'Samos',\n      },\n      {\n        code: '62',\n        name: 'Serres',\n      },\n      {\n        code: '32',\n        name: 'Thesprotia',\n      },\n      {\n        code: '54',\n        name: 'Thessaloniki',\n      },\n      {\n        code: '44',\n        name: 'Trikala',\n      },\n      {\n        code: '03',\n        name: 'Voiotia',\n      },\n      {\n        code: '72',\n        name: 'Xanthi',\n      },\n      {\n        code: '21',\n        name: 'Zakynthos',\n      },\n    ],\n  },\n  {\n    code: 'GL',\n    id: 2252,\n    name: 'Greenland',\n    states: [],\n  },\n  {\n    code: 'GD',\n    id: 2253,\n    name: 'Grenada',\n    states: [],\n  },\n  {\n    code: 'GP',\n    id: 2419,\n    name: 'Guadeloupe',\n    states: [],\n  },\n  {\n    code: 'GU',\n    id: 2376,\n    name: 'Guam',\n    states: [],\n  },\n  {\n    code: 'GT',\n    id: 2371,\n    name: 'Guatemala',\n    states: [\n      {\n        code: 'GT01',\n        name: 'Alta Verapaz',\n      },\n      {\n        code: 'GT02',\n        name: 'Baja Verapaz',\n      },\n      {\n        code: 'GT03',\n        name: 'Chimaltenango',\n      },\n      {\n        code: 'GT04',\n        name: 'Chiquimula',\n      },\n      {\n        code: 'GT05',\n        name: 'El Progreso',\n      },\n      {\n        code: 'GT06',\n        name: 'Escuintla',\n      },\n      {\n        code: 'GT07',\n        name: 'Guatemala',\n      },\n      {\n        code: 'GT08',\n        name: 'Huehuetenango',\n      },\n      {\n        code: 'GT09',\n        name: 'Izabal',\n      },\n      {\n        code: 'GT10',\n        name: 'Jalapa',\n      },\n      {\n        code: 'GT11',\n        name: 'Jutiapa',\n      },\n      {\n        code: 'GT12',\n        name: 'Petén',\n      },\n      {\n        code: 'GT13',\n        name: 'Quetzaltenango',\n      },\n      {\n        code: 'GT14',\n        name: 'Quiché',\n      },\n      {\n        code: 'GT15',\n        name: 'Retalhuleu',\n      },\n      {\n        code: 'GT16',\n        name: 'Sacatepéquez',\n      },\n      {\n        code: 'GT17',\n        name: 'San Marcos',\n      },\n      {\n        code: 'GT18',\n        name: 'Santa Rosa',\n      },\n      {\n        code: 'GT19',\n        name: 'Sololá',\n      },\n      {\n        code: 'GT20',\n        name: 'Suchitepéquez',\n      },\n      {\n        code: 'GT21',\n        name: 'Totonicapán',\n      },\n      {\n        code: 'GT22',\n        name: 'Zacapa',\n      },\n    ],\n  },\n  {\n    code: 'GG',\n    id: 2420,\n    name: 'Guernsey',\n    states: [],\n  },\n  {\n    code: 'GN',\n    id: 2255,\n    name: 'Guinea',\n    states: [\n      {\n        code: 'GV01',\n        name: 'Beyla',\n      },\n      {\n        code: 'GV02',\n        name: 'Boffa',\n      },\n      {\n        code: 'GV03',\n        name: 'Boké',\n      },\n      {\n        code: 'GV04',\n        name: 'Conakry',\n      },\n      {\n        code: 'GV30',\n        name: 'Coyah',\n      },\n      {\n        code: 'GV05',\n        name: 'Dabola',\n      },\n      {\n        code: 'GV06',\n        name: 'Dalaba',\n      },\n      {\n        code: 'GV07',\n        name: 'Dinguiraye',\n      },\n      {\n        code: 'GV31',\n        name: 'Dubréka',\n      },\n      {\n        code: 'GV09',\n        name: 'Faranah',\n      },\n      {\n        code: 'GV10',\n        name: 'Forécariah',\n      },\n      {\n        code: 'GV11',\n        name: 'Fria',\n      },\n      {\n        code: 'GV12',\n        name: 'Gaoual',\n      },\n      {\n        code: 'GV13',\n        name: 'Guéckédou',\n      },\n      {\n        code: 'GV32',\n        name: 'Kankan',\n      },\n      {\n        code: 'GV15',\n        name: 'Kérouané',\n      },\n      {\n        code: 'GV16',\n        name: 'Kindia',\n      },\n      {\n        code: 'GV17',\n        name: 'Kissidougou',\n      },\n      {\n        code: 'GV33',\n        name: 'Koubia',\n      },\n      {\n        code: 'GV18',\n        name: 'Koundara',\n      },\n      {\n        code: 'GV19',\n        name: 'Kouroussa',\n      },\n      {\n        code: 'GV34',\n        name: 'Labé',\n      },\n      {\n        code: 'GV35',\n        name: 'Lélouma',\n      },\n      {\n        code: 'GV36',\n        name: 'Lola',\n      },\n      {\n        code: 'GV21',\n        name: 'Macenta',\n      },\n      {\n        code: 'GV22',\n        name: 'Mali',\n      },\n      {\n        code: 'GV23',\n        name: 'Mamou',\n      },\n      {\n        code: 'GV37',\n        name: 'Mandiana',\n      },\n      {\n        code: 'GV38',\n        name: 'Nzérékoré',\n      },\n      {\n        code: 'GV25',\n        name: 'Pita',\n      },\n      {\n        code: 'GV39',\n        name: 'Siguiri',\n      },\n      {\n        code: 'GV27',\n        name: 'Télimélé',\n      },\n      {\n        code: 'GV28',\n        name: 'Tougué',\n      },\n      {\n        code: 'GV29',\n        name: 'Yomou',\n      },\n    ],\n  },\n  {\n    code: 'GW',\n    id: 2256,\n    name: 'Guinea-Bissau',\n    states: [\n      {\n        code: 'PU01',\n        name: 'Bafatá',\n      },\n      {\n        code: 'PU12',\n        name: 'Biombo',\n      },\n      {\n        code: 'PU11',\n        name: 'Bissau',\n      },\n      {\n        code: 'PU05',\n        name: 'Bolama',\n      },\n      {\n        code: 'PU06',\n        name: 'Cacheu',\n      },\n      {\n        code: 'PU10',\n        name: 'Gabú',\n      },\n      {\n        code: 'PU04',\n        name: 'Oio',\n      },\n      {\n        code: 'PU02',\n        name: 'Quinara',\n      },\n      {\n        code: 'PU07',\n        name: 'Tombali',\n      },\n    ],\n  },\n  {\n    code: 'GY',\n    id: 2257,\n    name: 'Guyana',\n    states: [\n      {\n        code: 'GY10',\n        name: 'Barima-Waini',\n      },\n      {\n        code: 'GY11',\n        name: 'Cuyuni-Mazaruni',\n      },\n      {\n        code: 'GY12',\n        name: 'Demerara-Mahaica',\n      },\n      {\n        code: 'GY13',\n        name: 'East Berbice-Corentyne',\n      },\n      {\n        code: 'GY14',\n        name: 'Essequibo Islands-West Demerara',\n      },\n      {\n        code: 'GY15',\n        name: 'Mahaica-Berbice',\n      },\n      {\n        code: 'GY16',\n        name: 'Pomeroon-Supenaam',\n      },\n      {\n        code: 'GY17',\n        name: 'Potaro-Siparuni',\n      },\n      {\n        code: 'GY18',\n        name: 'Upper Demerara-Berbice',\n      },\n      {\n        code: 'GY19',\n        name: 'Upper Takutu-Upper Essequibo',\n      },\n    ],\n  },\n  {\n    code: 'HT',\n    id: 2258,\n    name: 'Haiti',\n    states: [\n      {\n        code: 'HA07',\n        name: 'Centre',\n      },\n      {\n        code: 'HA14',\n        name: \"Grand' Anse\",\n      },\n      {\n        code: 'HA06',\n        name: \"L'Artibonite\",\n      },\n      {\n        code: 'HA15',\n        name: 'Nippes',\n      },\n      {\n        code: 'HA10',\n        name: 'Nord-Est',\n      },\n      {\n        code: 'HA03',\n        name: 'Nord-Ouest',\n      },\n      {\n        code: 'HA09',\n        name: 'Nord',\n      },\n      {\n        code: 'HA11',\n        name: 'Ouest',\n      },\n      {\n        code: 'HA13',\n        name: 'Sud-Est',\n      },\n      {\n        code: 'HA12',\n        name: 'Sud',\n      },\n    ],\n  },\n  {\n    code: 'HM',\n    id: 2421,\n    name: 'Heard and McDonald Islands',\n    states: [],\n  },\n  {\n    code: 'VA',\n    id: 2362,\n    name: 'Holy See (Vatican City State)',\n    states: [],\n  },\n  {\n    code: 'HN',\n    id: 2259,\n    name: 'Honduras',\n    states: [\n      {\n        code: 'HO01',\n        name: 'Atlántida',\n      },\n      {\n        code: 'HO02',\n        name: 'Choluteca',\n      },\n      {\n        code: 'HO03',\n        name: 'Colón',\n      },\n      {\n        code: 'HO04',\n        name: 'Comayagua',\n      },\n      {\n        code: 'HO05',\n        name: 'Copán',\n      },\n      {\n        code: 'HO06',\n        name: 'Cortés',\n      },\n      {\n        code: 'HO07',\n        name: 'El Paraíso',\n      },\n      {\n        code: 'HO08',\n        name: 'Francisco Morazán',\n      },\n      {\n        code: 'HO09',\n        name: 'Gracias a Dios',\n      },\n      {\n        code: 'HO10',\n        name: 'Intibucá',\n      },\n      {\n        code: 'HO11',\n        name: 'Islas de la Bahía',\n      },\n      {\n        code: 'HO12',\n        name: 'La Paz',\n      },\n      {\n        code: 'HO13',\n        name: 'Lempira',\n      },\n      {\n        code: 'HO14',\n        name: 'Ocotepeque',\n      },\n      {\n        code: 'HO15',\n        name: 'Olancho',\n      },\n      {\n        code: 'HO16',\n        name: 'Santa Bárbara',\n      },\n      {\n        code: 'HO17',\n        name: 'Valle',\n      },\n      {\n        code: 'HO18',\n        name: 'Yoro',\n      },\n    ],\n  },\n  {\n    code: 'HK',\n    id: 2377,\n    name: 'Hong Kong',\n    states: [\n      {\n        code: 'HK001',\n        name: 'Hong Kong Island',\n      },\n      {\n        code: 'HK002',\n        name: 'Kowloon',\n      },\n      {\n        code: 'HK003',\n        name: 'New Territories',\n      },\n    ],\n  },\n  {\n    code: 'HU',\n    id: 2260,\n    name: 'Hungary',\n    states: [\n      {\n        code: 'BK',\n        name: 'Bács-Kiskun',\n      },\n      {\n        code: 'BA',\n        name: 'Baranya',\n      },\n      {\n        code: 'BE',\n        name: 'Békés',\n      },\n      {\n        code: 'BC',\n        name: 'Békéscsaba',\n      },\n      {\n        code: 'BZ',\n        name: 'Borsod-Abaúj-Zemplén',\n      },\n      {\n        code: 'BU',\n        name: 'Budapest',\n      },\n      {\n        code: 'CS',\n        name: 'Csongrád',\n      },\n      {\n        code: 'DE',\n        name: 'Debrecen',\n      },\n      {\n        code: 'DU',\n        name: 'Dunaújváros',\n      },\n      {\n        code: 'EG',\n        name: 'Eger',\n      },\n      {\n        code: 'ER',\n        name: 'Erd',\n      },\n      {\n        code: 'FE',\n        name: 'Fejér',\n      },\n      {\n        code: 'GY',\n        name: 'Gyor',\n      },\n      {\n        code: 'GS',\n        name: 'Gyor-Moson-Sopron',\n      },\n      {\n        code: 'HB',\n        name: 'Hajdú-Bihar',\n      },\n      {\n        code: 'HE',\n        name: 'Heves',\n      },\n      {\n        code: 'HV',\n        name: 'Hódmezovásárhely',\n      },\n      {\n        code: 'JN',\n        name: 'Jász-Nagykun-Szolnok',\n      },\n      {\n        code: 'KV',\n        name: 'Kaposvár',\n      },\n      {\n        code: 'KM',\n        name: 'Kecskemét',\n      },\n      {\n        code: 'KE',\n        name: 'Komárom-Esztergom',\n      },\n      {\n        code: 'MI',\n        name: 'Miskolc',\n      },\n      {\n        code: 'NK',\n        name: 'Nagykanizsa',\n      },\n      {\n        code: 'NO',\n        name: 'Nógrád',\n      },\n      {\n        code: 'NY',\n        name: 'Nyíregyháza',\n      },\n      {\n        code: 'PS',\n        name: 'Pécs',\n      },\n      {\n        code: 'PE',\n        name: 'Pest',\n      },\n      {\n        code: 'ST',\n        name: 'Salgótarján',\n      },\n      {\n        code: 'SO',\n        name: 'Somogy',\n      },\n      {\n        code: 'SN',\n        name: 'Sopron',\n      },\n      {\n        code: 'SZ',\n        name: 'Szabolcs-Szatmár-Bereg',\n      },\n      {\n        code: 'SD',\n        name: 'Szeged',\n      },\n      {\n        code: 'SF',\n        name: 'Székesfehérvár',\n      },\n      {\n        code: 'SS',\n        name: 'Szekszárd',\n      },\n      {\n        code: 'SK',\n        name: 'Szolnok',\n      },\n      {\n        code: 'SH',\n        name: 'Szombathely',\n      },\n      {\n        code: 'TB',\n        name: 'Tatabánya',\n      },\n      {\n        code: 'TO',\n        name: 'Tolna',\n      },\n      {\n        code: 'VA',\n        name: 'Vas',\n      },\n      {\n        code: 'VE',\n        name: 'Veszprém',\n      },\n      {\n        code: 'VM',\n        name: 'Veszprém City',\n      },\n      {\n        code: 'ZA',\n        name: 'Zala',\n      },\n      {\n        code: 'ZE',\n        name: 'Zalaegerszeg',\n      },\n    ],\n  },\n  {\n    code: 'IS',\n    id: 2261,\n    name: 'Iceland',\n    states: [\n      {\n        code: '7',\n        name: 'Austurland',\n      },\n      {\n        code: '1',\n        name: 'Höfuðborgarsvæði utan Reykjavíkur',\n      },\n      {\n        code: '6',\n        name: 'Norðurland eystra',\n      },\n      {\n        code: '5',\n        name: 'Norðurland vestra',\n      },\n      {\n        code: '0',\n        name: 'Reykjavík',\n      },\n      {\n        code: '8',\n        name: 'Suðurland',\n      },\n      {\n        code: '2',\n        name: 'Suðurnes',\n      },\n      {\n        code: '4',\n        name: 'Vestfirðir',\n      },\n      {\n        code: '3',\n        name: 'Vesturland',\n      },\n    ],\n  },\n  {\n    code: 'IN',\n    id: 2262,\n    name: 'India',\n    states: [\n      {\n        code: 'AN',\n        name: 'Andaman and Nicobar Islands',\n      },\n      {\n        code: 'AP',\n        name: 'Andhra Pradesh',\n      },\n      {\n        code: 'AR',\n        name: 'Arunachal Pradesh',\n      },\n      {\n        code: 'AS',\n        name: 'Assam',\n      },\n      {\n        code: 'BR',\n        name: 'Bihar',\n      },\n      {\n        code: 'CH',\n        name: 'Chandigarh',\n      },\n      {\n        code: 'CT',\n        name: 'Chhattisgarh',\n      },\n      {\n        code: 'DN',\n        name: 'Dadra and Nagar Haveli',\n      },\n      {\n        code: 'DD',\n        name: 'Daman and Diu',\n      },\n      {\n        code: 'DL',\n        name: 'Delhi',\n      },\n      {\n        code: 'GA',\n        name: 'Goa',\n      },\n      {\n        code: 'GJ',\n        name: 'Gujarat',\n      },\n      {\n        code: 'HR',\n        name: 'Haryana',\n      },\n      {\n        code: 'HP',\n        name: 'Himachal Pradesh',\n      },\n      {\n        code: 'JK',\n        name: 'Jammu and Kashmir',\n      },\n      {\n        code: 'JH',\n        name: 'Jharkhand',\n      },\n      {\n        code: 'KA',\n        name: 'Karnataka',\n      },\n      {\n        code: 'KL',\n        name: 'Kerala',\n      },\n      {\n        code: 'LD',\n        name: 'Lakshadweep',\n      },\n      {\n        code: 'MP',\n        name: 'Madhya Pradesh',\n      },\n      {\n        code: 'MH',\n        name: 'Maharashtra',\n      },\n      {\n        code: 'MN',\n        name: 'Manipur',\n      },\n      {\n        code: 'ML',\n        name: 'Meghalaya',\n      },\n      {\n        code: 'MZ',\n        name: 'Mizoram',\n      },\n      {\n        code: 'NL',\n        name: 'Nagaland',\n      },\n      {\n        code: 'OR',\n        name: 'Orissa',\n      },\n      {\n        code: 'PY',\n        name: 'Pondicherry',\n      },\n      {\n        code: 'PB',\n        name: 'Punjab',\n      },\n      {\n        code: 'RJ',\n        name: 'Rajasthan',\n      },\n      {\n        code: 'SK',\n        name: 'Sikkim',\n      },\n      {\n        code: 'TN',\n        name: 'Tamil Nadu',\n      },\n      {\n        code: 'TG',\n        name: 'Telangana',\n      },\n      {\n        code: 'TR',\n        name: 'Tripura',\n      },\n      {\n        code: 'UP',\n        name: 'Uttar Pradesh',\n      },\n      {\n        code: 'UL',\n        name: 'Uttaranchal',\n      },\n      {\n        code: 'WB',\n        name: 'West Bengal',\n      },\n    ],\n  },\n  {\n    code: 'ID',\n    id: 2263,\n    name: 'Indonesia',\n    states: [\n      {\n        code: 'AC',\n        name: 'Aceh',\n      },\n      {\n        code: 'BA',\n        name: 'Bali',\n      },\n      {\n        code: 'BB',\n        name: 'Bangka Belitung',\n      },\n      {\n        code: 'BT',\n        name: 'Banten',\n      },\n      {\n        code: 'BE',\n        name: 'Bengkulu',\n      },\n      {\n        code: 'GO',\n        name: 'Gorontalo',\n      },\n      {\n        code: 'JK',\n        name: 'Jakarta Raya',\n      },\n      {\n        code: 'JA',\n        name: 'Jambi',\n      },\n      {\n        code: 'JB',\n        name: 'Jawa Barat',\n      },\n      {\n        code: 'JT',\n        name: 'Jawa Tengah',\n      },\n      {\n        code: 'JI',\n        name: 'Jawa Timur',\n      },\n      {\n        code: 'KB',\n        name: 'Kalimantan Barat',\n      },\n      {\n        code: 'KS',\n        name: 'Kalimantan Selatan',\n      },\n      {\n        code: 'KT',\n        name: 'Kalimantan Tengah',\n      },\n      {\n        code: 'KI',\n        name: 'Kalimantan Timur',\n      },\n      {\n        code: 'KR',\n        name: 'Kepulauan Riau',\n      },\n      {\n        code: 'LA',\n        name: 'Lampung',\n      },\n      {\n        code: 'MA',\n        name: 'Maluku',\n      },\n      {\n        code: 'MU',\n        name: 'Maluku Utara',\n      },\n      {\n        code: 'NB',\n        name: 'Nusa Tenggara Barat',\n      },\n      {\n        code: 'NT',\n        name: 'Nusa Tenggara Timur',\n      },\n      {\n        code: 'PA',\n        name: 'Papua',\n      },\n      {\n        code: 'PB',\n        name: 'Papua Barat',\n      },\n      {\n        code: 'RI',\n        name: 'Riau',\n      },\n      {\n        code: 'SR',\n        name: 'Sulawesi Barat',\n      },\n      {\n        code: 'SN',\n        name: 'Sulawesi Selatan',\n      },\n      {\n        code: 'ST',\n        name: 'Sulawesi Tengah',\n      },\n      {\n        code: 'SG',\n        name: 'Sulawesi Tenggara',\n      },\n      {\n        code: 'SA',\n        name: 'Sulawesi Utara',\n      },\n      {\n        code: 'SB',\n        name: 'Sumatera Barat',\n      },\n      {\n        code: 'SS',\n        name: 'Sumatera Selatan',\n      },\n      {\n        code: 'SU',\n        name: 'Sumatera Utara',\n      },\n      {\n        code: 'YO',\n        name: 'Yogyakarta',\n      },\n    ],\n  },\n  {\n    code: 'IR',\n    id: 2264,\n    name: 'Iran; Islamic Republic of',\n    states: [\n      {\n        code: 'IR44',\n        name: 'Alborz',\n      },\n      {\n        code: 'IR32',\n        name: 'Ardebil',\n      },\n      {\n        code: 'IR22',\n        name: 'Bushehr',\n      },\n      {\n        code: 'IR03',\n        name: 'Chahar Mahall and Bakhtiari',\n      },\n      {\n        code: 'IR33',\n        name: 'East Azarbaijan',\n      },\n      {\n        code: 'IR28',\n        name: 'Esfahan',\n      },\n      {\n        code: 'IR07',\n        name: 'Fars',\n      },\n      {\n        code: 'IR08',\n        name: 'Gilan',\n      },\n      {\n        code: 'IR37',\n        name: 'Golestan',\n      },\n      {\n        code: 'IR09',\n        name: 'Hamadan',\n      },\n      {\n        code: 'IR11',\n        name: 'Hormozgan',\n      },\n      {\n        code: 'IR42',\n        name: 'IRazavi Khorasan',\n      },\n      {\n        code: 'IR10',\n        name: 'Ilam',\n      },\n      {\n        code: 'IR29',\n        name: 'Kerman',\n      },\n      {\n        code: 'IR13',\n        name: 'Kermanshah',\n      },\n      {\n        code: 'IR15',\n        name: 'Khuzestan',\n      },\n      {\n        code: 'IR05',\n        name: 'Kohgiluyeh and Buyer Ahmad',\n      },\n      {\n        code: 'IR16',\n        name: 'Kordestan',\n      },\n      {\n        code: 'IR23',\n        name: 'Lorestan',\n      },\n      {\n        code: 'IR34',\n        name: 'Markazi',\n      },\n      {\n        code: 'IR35',\n        name: 'Mazandaran',\n      },\n      {\n        code: 'IR43',\n        name: 'North Khorasan',\n      },\n      {\n        code: 'IR38',\n        name: 'Qazvin',\n      },\n      {\n        code: 'IR39',\n        name: 'Qom',\n      },\n      {\n        code: 'IR25',\n        name: 'Semnan',\n      },\n      {\n        code: 'IR04',\n        name: 'Sistan and Baluchestan',\n      },\n      {\n        code: 'IR41',\n        name: 'South Khorasan',\n      },\n      {\n        code: 'IR26',\n        name: 'Tehran',\n      },\n      {\n        code: 'IR01',\n        name: 'West Azarbaijan',\n      },\n      {\n        code: 'IR40',\n        name: 'Yazd',\n      },\n      {\n        code: 'IR36',\n        name: 'Zanjan',\n      },\n    ],\n  },\n  {\n    code: 'IQ',\n    id: 2265,\n    name: 'Iraq',\n    states: [\n      {\n        code: 'IZ01',\n        name: 'Al-Anbar',\n      },\n      {\n        code: 'IZ02',\n        name: 'Al-Basrah',\n      },\n      {\n        code: 'IZ03',\n        name: 'Al-Muthanna',\n      },\n      {\n        code: 'IZ04',\n        name: 'Al-Qadisiyah',\n      },\n      {\n        code: 'IZ17',\n        name: 'An-Najaf',\n      },\n      {\n        code: 'IZ11',\n        name: 'Arbil',\n      },\n      {\n        code: 'IZ05',\n        name: 'As-Sulaymaniyah',\n      },\n      {\n        code: 'IZ13',\n        name: \"At-Ta'mim\",\n      },\n      {\n        code: 'IZ06',\n        name: 'Babil',\n      },\n      {\n        code: 'IZ07',\n        name: 'Baghdad',\n      },\n      {\n        code: 'IZ08',\n        name: 'Dahuk',\n      },\n      {\n        code: 'IZ09',\n        name: 'Dhi Qar',\n      },\n      {\n        code: 'IZ10',\n        name: 'Diyala',\n      },\n      {\n        code: 'IZ12',\n        name: 'Karbala',\n      },\n      {\n        code: 'IZ14',\n        name: 'Maysan',\n      },\n      {\n        code: 'IZ15',\n        name: 'Ninawa',\n      },\n      {\n        code: 'IZ18',\n        name: 'Salah ad-Din',\n      },\n      {\n        code: 'IZ16',\n        name: 'Wasit',\n      },\n    ],\n  },\n  {\n    code: 'IE',\n    id: 2266,\n    name: 'Ireland',\n    states: [\n      {\n        code: 'CW',\n        name: 'Carlow',\n      },\n      {\n        code: 'CN',\n        name: 'Cavan',\n      },\n      {\n        code: 'CE',\n        name: 'Clare',\n      },\n      {\n        code: 'C',\n        name: 'Connacht',\n      },\n      {\n        code: 'CO',\n        name: 'Cork',\n      },\n      {\n        code: 'DL',\n        name: 'Donegal',\n      },\n      {\n        code: 'D',\n        name: 'Dublin',\n      },\n      {\n        code: 'G',\n        name: 'Galway',\n      },\n      {\n        code: 'KY',\n        name: 'Kerry',\n      },\n      {\n        code: 'KE',\n        name: 'Kildare',\n      },\n      {\n        code: 'KK',\n        name: 'Kilkenny',\n      },\n      {\n        code: 'LS',\n        name: 'Laois',\n      },\n      {\n        code: 'L',\n        name: 'Leinster',\n      },\n      {\n        code: 'LM',\n        name: 'Leitrim',\n      },\n      {\n        code: 'LK',\n        name: 'Limerick',\n      },\n      {\n        code: 'LD',\n        name: 'Longford',\n      },\n      {\n        code: 'LH',\n        name: 'Louth',\n      },\n      {\n        code: 'MO',\n        name: 'Mayo',\n      },\n      {\n        code: 'MH',\n        name: 'Meath',\n      },\n      {\n        code: 'MN',\n        name: 'Monaghan',\n      },\n      {\n        code: 'M',\n        name: 'Munster',\n      },\n      {\n        code: 'OY',\n        name: 'Offaly',\n      },\n      {\n        code: 'RN',\n        name: 'Roscommon',\n      },\n      {\n        code: 'SO',\n        name: 'Sligo',\n      },\n      {\n        code: 'TA',\n        name: 'Tipperary',\n      },\n      {\n        code: 'U',\n        name: 'Ulster',\n      },\n      {\n        code: 'WD',\n        name: 'Waterford',\n      },\n      {\n        code: 'WH',\n        name: 'Westmeath',\n      },\n      {\n        code: 'WX',\n        name: 'Wexford',\n      },\n      {\n        code: 'WW',\n        name: 'Wicklow',\n      },\n    ],\n  },\n  {\n    code: 'IM',\n    id: 2445,\n    name: 'Isle of Man',\n    states: [],\n  },\n  {\n    code: 'IL',\n    id: 2267,\n    name: 'Israel',\n    states: [\n      {\n        code: 'IS01',\n        name: 'HaDarom',\n      },\n      {\n        code: 'IS02',\n        name: 'HaMerkaz',\n      },\n      {\n        code: 'IS03',\n        name: 'HaZafon',\n      },\n      {\n        code: 'IS04',\n        name: 'Haifa',\n      },\n      {\n        code: 'IS06',\n        name: 'Jerusalem',\n      },\n      {\n        code: 'IS05',\n        name: 'Tel Aviv',\n      },\n    ],\n  },\n  {\n    code: 'IT',\n    id: 2268,\n    name: 'Italy',\n    states: [\n      {\n        code: '65',\n        name: 'Abruzzo',\n      },\n      {\n        code: 'AG',\n        name: 'Agrigento',\n      },\n      {\n        code: 'AL',\n        name: 'Alessandria',\n      },\n      {\n        code: 'AN',\n        name: 'Ancona',\n      },\n      {\n        code: 'AO',\n        name: 'Aosta',\n      },\n      {\n        code: 'AR',\n        name: 'Arezzo',\n      },\n      {\n        code: 'AP',\n        name: 'Ascoli Piceno',\n      },\n      {\n        code: 'AT',\n        name: 'Asti',\n      },\n      {\n        code: 'AV',\n        name: 'Avellino',\n      },\n      {\n        code: 'BA',\n        name: 'Bari',\n      },\n      {\n        code: 'BT',\n        name: 'Barletta-Andria-Trani',\n      },\n      {\n        code: '77',\n        name: 'Basilicata',\n      },\n      {\n        code: 'BL',\n        name: 'Belluno',\n      },\n      {\n        code: 'BN',\n        name: 'Benevento',\n      },\n      {\n        code: 'BG',\n        name: 'Bergamo',\n      },\n      {\n        code: 'BI',\n        name: 'Biella',\n      },\n      {\n        code: 'BO',\n        name: 'Bologna',\n      },\n      {\n        code: 'BZ',\n        name: 'Bolzano',\n      },\n      {\n        code: 'BS',\n        name: 'Brescia',\n      },\n      {\n        code: 'BR',\n        name: 'Brindisi',\n      },\n      {\n        code: 'CA',\n        name: 'Cagliari',\n      },\n      {\n        code: '78',\n        name: 'Calabria',\n      },\n      {\n        code: 'CL',\n        name: 'Caltanissetta',\n      },\n      {\n        code: '72',\n        name: 'Campania',\n      },\n      {\n        code: 'CB',\n        name: 'Campobasso',\n      },\n      {\n        code: 'CI',\n        name: 'Carbonia-Iglesias',\n      },\n      {\n        code: 'CE',\n        name: 'Caserta',\n      },\n      {\n        code: 'CT',\n        name: 'Catania',\n      },\n      {\n        code: 'CZ',\n        name: 'Catanzaro',\n      },\n      {\n        code: 'CH',\n        name: 'Chieti',\n      },\n      {\n        code: 'CO',\n        name: 'Como',\n      },\n      {\n        code: 'CS',\n        name: 'Cosenza',\n      },\n      {\n        code: 'CR',\n        name: 'Cremona',\n      },\n      {\n        code: 'KR',\n        name: 'Crotone',\n      },\n      {\n        code: 'CN',\n        name: 'Cuneo',\n      },\n      {\n        code: '45',\n        name: 'Emilia-Romagna',\n      },\n      {\n        code: 'EN',\n        name: 'Enna',\n      },\n      {\n        code: 'FM',\n        name: 'Fermo',\n      },\n      {\n        code: 'FE',\n        name: 'Ferrara',\n      },\n      {\n        code: 'FI',\n        name: 'Firenze',\n      },\n      {\n        code: 'FG',\n        name: 'Foggia',\n      },\n      {\n        code: 'FC',\n        name: 'Forli-Cesena',\n      },\n      {\n        code: '36',\n        name: 'Friuli-Venezia Giulia',\n      },\n      {\n        code: 'FR',\n        name: 'Frosinone',\n      },\n      {\n        code: 'GE',\n        name: 'Genova',\n      },\n      {\n        code: 'GO',\n        name: 'Gorizia',\n      },\n      {\n        code: 'GR',\n        name: 'Grosseto',\n      },\n      {\n        code: 'IM',\n        name: 'Imperia',\n      },\n      {\n        code: 'IS',\n        name: 'Isernia',\n      },\n      {\n        code: 'AQ',\n        name: \"L'Aquila\",\n      },\n      {\n        code: 'SP',\n        name: 'La Spezia',\n      },\n      {\n        code: 'LT',\n        name: 'Latina',\n      },\n      {\n        code: '62',\n        name: 'Lazio',\n      },\n      {\n        code: 'LE',\n        name: 'Lecce',\n      },\n      {\n        code: 'LC',\n        name: 'Lecco',\n      },\n      {\n        code: '42',\n        name: 'Liguria',\n      },\n      {\n        code: 'LI',\n        name: 'Livorno',\n      },\n      {\n        code: 'LO',\n        name: 'Lodi',\n      },\n      {\n        code: '25',\n        name: 'Lombardia',\n      },\n      {\n        code: 'LU',\n        name: 'Lucca',\n      },\n      {\n        code: 'MC',\n        name: 'Macerata',\n      },\n      {\n        code: 'MN',\n        name: 'Mantova',\n      },\n      {\n        code: '57',\n        name: 'Marche',\n      },\n      {\n        code: 'MS',\n        name: 'Massa-Carrara',\n      },\n      {\n        code: 'MT',\n        name: 'Matera',\n      },\n      {\n        code: 'VS',\n        name: 'Medio Campidano',\n      },\n      {\n        code: 'ME',\n        name: 'Messina',\n      },\n      {\n        code: 'MI',\n        name: 'Milano',\n      },\n      {\n        code: 'MO',\n        name: 'Modena',\n      },\n      {\n        code: '67',\n        name: 'Molise',\n      },\n      {\n        code: 'MB',\n        name: 'Monza e Brianza',\n      },\n      {\n        code: 'NA',\n        name: 'Napoli',\n      },\n      {\n        code: 'NO',\n        name: 'Novara',\n      },\n      {\n        code: 'NU',\n        name: 'Nuoro',\n      },\n      {\n        code: 'OG',\n        name: 'Ogliastra',\n      },\n      {\n        code: 'OT',\n        name: 'Olbia-Tempio',\n      },\n      {\n        code: 'OR',\n        name: 'Oristano',\n      },\n      {\n        code: 'PD',\n        name: 'Padova',\n      },\n      {\n        code: 'PA',\n        name: 'Palermo',\n      },\n      {\n        code: 'PR',\n        name: 'Parma',\n      },\n      {\n        code: 'PV',\n        name: 'Pavia',\n      },\n      {\n        code: 'PG',\n        name: 'Perugia',\n      },\n      {\n        code: 'PU',\n        name: 'Pesaro e Urbino',\n      },\n      {\n        code: 'PE',\n        name: 'Pescara',\n      },\n      {\n        code: 'PC',\n        name: 'Piacenza',\n      },\n      {\n        code: '21',\n        name: 'Piemonte',\n      },\n      {\n        code: 'PI',\n        name: 'Pisa',\n      },\n      {\n        code: 'PT',\n        name: 'Pistoia',\n      },\n      {\n        code: 'PN',\n        name: 'Pordenone',\n      },\n      {\n        code: 'PZ',\n        name: 'Potenza',\n      },\n      {\n        code: 'PO',\n        name: 'Prato',\n      },\n      {\n        code: '75',\n        name: 'Puglia',\n      },\n      {\n        code: 'RG',\n        name: 'Ragusa',\n      },\n      {\n        code: 'RA',\n        name: 'Ravenna',\n      },\n      {\n        code: 'RC',\n        name: 'Reggio Calabria',\n      },\n      {\n        code: 'RE',\n        name: 'Reggio Emilia',\n      },\n      {\n        code: 'RI',\n        name: 'Rieti',\n      },\n      {\n        code: 'RN',\n        name: 'Rimini',\n      },\n      {\n        code: 'RM',\n        name: 'Roma',\n      },\n      {\n        code: 'RO',\n        name: 'Rovigo',\n      },\n      {\n        code: 'SA',\n        name: 'Salerno',\n      },\n      {\n        code: '88',\n        name: 'Sardegna',\n      },\n      {\n        code: 'SS',\n        name: 'Sassari',\n      },\n      {\n        code: 'SV',\n        name: 'Savona',\n      },\n      {\n        code: '82',\n        name: 'Sicilia',\n      },\n      {\n        code: 'SI',\n        name: 'Siena',\n      },\n      {\n        code: 'SR',\n        name: 'Siracusa',\n      },\n      {\n        code: 'SO',\n        name: 'Sondrio',\n      },\n      {\n        code: 'TA',\n        name: 'Taranto',\n      },\n      {\n        code: 'TE',\n        name: 'Teramo',\n      },\n      {\n        code: 'TR',\n        name: 'Terni',\n      },\n      {\n        code: 'TO',\n        name: 'Torino',\n      },\n      {\n        code: '52',\n        name: 'Toscana',\n      },\n      {\n        code: 'TP',\n        name: 'Trapani',\n      },\n      {\n        code: '32',\n        name: 'Trentino-Alto Adige',\n      },\n      {\n        code: 'TN',\n        name: 'Trento',\n      },\n      {\n        code: 'TV',\n        name: 'Treviso',\n      },\n      {\n        code: 'TS',\n        name: 'Trieste',\n      },\n      {\n        code: 'UD',\n        name: 'Udine',\n      },\n      {\n        code: '55',\n        name: 'Umbria',\n      },\n      {\n        code: '23',\n        name: \"Valle d'Aosta\",\n      },\n      {\n        code: 'VA',\n        name: 'Varese',\n      },\n      {\n        code: '34',\n        name: 'Veneto',\n      },\n      {\n        code: 'VE',\n        name: 'Venezia',\n      },\n      {\n        code: 'VB',\n        name: 'Verbano-Cusio-Ossola',\n      },\n      {\n        code: 'VC',\n        name: 'Vercelli',\n      },\n      {\n        code: 'VR',\n        name: 'Verona',\n      },\n      {\n        code: 'VV',\n        name: 'Vibo Valentia',\n      },\n      {\n        code: 'VI',\n        name: 'Vicenza',\n      },\n      {\n        code: 'VT',\n        name: 'Viterbo',\n      },\n    ],\n  },\n  {\n    code: 'JM',\n    id: 2269,\n    name: 'Jamaica',\n    states: [\n      {\n        code: 'JM01',\n        name: 'Clarendon',\n      },\n      {\n        code: 'JM02',\n        name: 'Hanover',\n      },\n      {\n        code: 'JM17',\n        name: 'Kingston',\n      },\n      {\n        code: 'JM04',\n        name: 'Manchester',\n      },\n      {\n        code: 'JM07',\n        name: 'Portland',\n      },\n      {\n        code: 'JM08',\n        name: 'Saint Andrew',\n      },\n      {\n        code: 'JM09',\n        name: 'Saint Ann',\n      },\n      {\n        code: 'JM10',\n        name: 'Saint Catherine',\n      },\n      {\n        code: 'JM11',\n        name: 'Saint Elizabeth',\n      },\n      {\n        code: 'JM12',\n        name: 'Saint James',\n      },\n      {\n        code: 'JM13',\n        name: 'Saint Mary',\n      },\n      {\n        code: 'JM14',\n        name: 'Saint Thomas',\n      },\n      {\n        code: 'JM15',\n        name: 'Trelawny',\n      },\n      {\n        code: 'JM16',\n        name: 'Westmoreland',\n      },\n    ],\n  },\n  {\n    code: 'JP',\n    id: 2270,\n    name: 'Japan',\n    states: [\n      {\n        code: 'JP23',\n        name: 'Aichi',\n      },\n      {\n        code: 'JP05',\n        name: 'Akita',\n      },\n      {\n        code: 'JP02',\n        name: 'Aomori',\n      },\n      {\n        code: 'JP12',\n        name: 'Chiba',\n      },\n      {\n        code: 'JP38',\n        name: 'Ehime',\n      },\n      {\n        code: 'JP18',\n        name: 'Fukui',\n      },\n      {\n        code: 'JP40',\n        name: 'Fukuoka',\n      },\n      {\n        code: 'JP07',\n        name: 'Fukushima',\n      },\n      {\n        code: 'JP21',\n        name: 'Gifu',\n      },\n      {\n        code: 'JP10',\n        name: 'Gunma',\n      },\n      {\n        code: 'JP34',\n        name: 'Hiroshima',\n      },\n      {\n        code: 'JP01',\n        name: 'Hokkaido',\n      },\n      {\n        code: 'JP28',\n        name: 'Hyogo',\n      },\n      {\n        code: 'JP08',\n        name: 'Ibaraki',\n      },\n      {\n        code: 'JP17',\n        name: 'Ishikawa',\n      },\n      {\n        code: 'JP03',\n        name: 'Iwate',\n      },\n      {\n        code: 'JP37',\n        name: 'Kagawa',\n      },\n      {\n        code: 'JP46',\n        name: 'Kagoshima',\n      },\n      {\n        code: 'JP14',\n        name: 'Kanagawa',\n      },\n      {\n        code: 'JP39',\n        name: 'Kochi',\n      },\n      {\n        code: 'JP43',\n        name: 'Kumamoto',\n      },\n      {\n        code: 'JP26',\n        name: 'Kyoto',\n      },\n      {\n        code: 'JP24',\n        name: 'Mie',\n      },\n      {\n        code: 'JP04',\n        name: 'Miyagi',\n      },\n      {\n        code: 'JP45',\n        name: 'Miyazaki',\n      },\n      {\n        code: 'JP20',\n        name: 'Nagano',\n      },\n      {\n        code: 'JP42',\n        name: 'Nagasaki',\n      },\n      {\n        code: 'JP29',\n        name: 'Nara',\n      },\n      {\n        code: 'JP15',\n        name: 'Niigata',\n      },\n      {\n        code: 'JP44',\n        name: 'Oita',\n      },\n      {\n        code: 'JP33',\n        name: 'Okayama',\n      },\n      {\n        code: 'JP47',\n        name: 'Okinawa',\n      },\n      {\n        code: 'JP27',\n        name: 'Osaka',\n      },\n      {\n        code: 'JP41',\n        name: 'Saga',\n      },\n      {\n        code: 'JP11',\n        name: 'Saitama',\n      },\n      {\n        code: 'JP25',\n        name: 'Shiga',\n      },\n      {\n        code: 'JP32',\n        name: 'Shimane',\n      },\n      {\n        code: 'JP22',\n        name: 'Shizuoka',\n      },\n      {\n        code: 'JP09',\n        name: 'Tochigi',\n      },\n      {\n        code: 'JP36',\n        name: 'Tokushima',\n      },\n      {\n        code: 'JP13',\n        name: 'Tokyo',\n      },\n      {\n        code: 'JP31',\n        name: 'Tottori',\n      },\n      {\n        code: 'JP16',\n        name: 'Toyama',\n      },\n      {\n        code: 'JP30',\n        name: 'Wakayama',\n      },\n      {\n        code: 'JP06',\n        name: 'Yamagata',\n      },\n      {\n        code: 'JP35',\n        name: 'Yamaguchi',\n      },\n      {\n        code: 'JP19',\n        name: 'Yamanashi',\n      },\n    ],\n  },\n  {\n    code: 'JE',\n    id: 2422,\n    name: 'Jersey',\n    states: [],\n  },\n  {\n    code: 'JO',\n    id: 2271,\n    name: 'Jordan',\n    states: [\n      {\n        code: 'JO01',\n        name: 'Ajlun',\n      },\n      {\n        code: 'JO02',\n        name: 'Amman',\n      },\n      {\n        code: 'JO03',\n        name: 'Aqaba',\n      },\n      {\n        code: 'JO04',\n        name: 'Balqa',\n      },\n      {\n        code: 'JO05',\n        name: 'Irbid',\n      },\n      {\n        code: 'JO06',\n        name: 'JarasJ',\n      },\n      {\n        code: 'JO07',\n        name: 'Karak',\n      },\n      {\n        code: 'JO08',\n        name: \"Ma'an\",\n      },\n      {\n        code: 'JO09',\n        name: 'Madaba',\n      },\n      {\n        code: 'JO10',\n        name: 'Mafraq',\n      },\n      {\n        code: 'JO11',\n        name: 'Tafilah',\n      },\n      {\n        code: 'JO12',\n        name: 'Zarqa',\n      },\n    ],\n  },\n  {\n    code: 'KZ',\n    id: 2272,\n    name: 'Kazakhstan',\n    states: [\n      {\n        code: 'KZ01',\n        name: 'Almaty',\n      },\n      {\n        code: 'KZ02',\n        name: 'Almaty (City)',\n      },\n      {\n        code: 'KZ03',\n        name: 'Aqmola',\n      },\n      {\n        code: 'KZ04',\n        name: 'Aqtöbe',\n      },\n      {\n        code: 'KZ05',\n        name: 'Astana',\n      },\n      {\n        code: 'KZ06',\n        name: 'Atyrau',\n      },\n      {\n        code: 'KZ08',\n        name: 'Bayqonyr',\n      },\n      {\n        code: 'KZ15',\n        name: 'East Kazakhstan',\n      },\n      {\n        code: 'KZ09',\n        name: 'Mangghystau',\n      },\n      {\n        code: 'KZ16',\n        name: 'North Kazakhstan',\n      },\n      {\n        code: 'KZ11',\n        name: 'Pavlodar',\n      },\n      {\n        code: 'KZ12',\n        name: 'Qaraghandy',\n      },\n      {\n        code: 'KZ13',\n        name: 'Qostanay',\n      },\n      {\n        code: 'KZ14',\n        name: 'Qyzylorda',\n      },\n      {\n        code: 'KZ10',\n        name: 'South Kazakhstan',\n      },\n      {\n        code: 'KZ07',\n        name: 'West Kazakhstan',\n      },\n      {\n        code: 'KZ17',\n        name: 'Zhambyl',\n      },\n    ],\n  },\n  {\n    code: 'KE',\n    id: 2273,\n    name: 'Kenya',\n    states: [\n      {\n        code: 'KE10',\n        name: 'Baringo',\n      },\n      {\n        code: 'KE11',\n        name: 'Bomet',\n      },\n      {\n        code: 'KE12',\n        name: 'Bungoma',\n      },\n      {\n        code: 'KE13',\n        name: 'Busia',\n      },\n      {\n        code: 'KE14',\n        name: 'Elgeyo Marakwet',\n      },\n      {\n        code: 'KE15',\n        name: 'Embu',\n      },\n      {\n        code: 'KE16',\n        name: 'Garissa',\n      },\n      {\n        code: 'KE17',\n        name: 'Homa Bay',\n      },\n      {\n        code: 'KE18',\n        name: 'Isiolo',\n      },\n      {\n        code: 'KE19',\n        name: 'Kajiado',\n      },\n      {\n        code: 'KE20',\n        name: 'Kakamega',\n      },\n      {\n        code: 'KE21',\n        name: 'Kericho',\n      },\n      {\n        code: 'KE22',\n        name: 'Kiambu',\n      },\n      {\n        code: 'KE23',\n        name: 'Kilifi',\n      },\n      {\n        code: 'KE24',\n        name: 'Kirinyaga',\n      },\n      {\n        code: 'KE25',\n        name: 'Kisii',\n      },\n      {\n        code: 'KE26',\n        name: 'Kisumu',\n      },\n      {\n        code: 'KE27',\n        name: 'Kitui',\n      },\n      {\n        code: 'KE28',\n        name: 'Kwale',\n      },\n      {\n        code: 'KE29',\n        name: 'Laikipia',\n      },\n      {\n        code: 'KE30',\n        name: 'Lamu',\n      },\n      {\n        code: 'KE31',\n        name: 'Machakos',\n      },\n      {\n        code: 'KE32',\n        name: 'Makueni',\n      },\n      {\n        code: 'KE33',\n        name: 'Mandera',\n      },\n      {\n        code: 'KE34',\n        name: 'Marsabit',\n      },\n      {\n        code: 'KE35',\n        name: 'Meru',\n      },\n      {\n        code: 'KE36',\n        name: 'Migori',\n      },\n      {\n        code: 'KE37',\n        name: 'Mombasa',\n      },\n      {\n        code: 'KE38',\n        name: 'Murang',\n      },\n      {\n        code: 'KE05',\n        name: 'Nairobi',\n      },\n      {\n        code: 'KE39',\n        name: 'Nakuru',\n      },\n      {\n        code: 'KE40',\n        name: 'Nandi',\n      },\n      {\n        code: 'KE41',\n        name: 'Narok',\n      },\n      {\n        code: 'KE42',\n        name: 'Nyamira',\n      },\n      {\n        code: 'KE43',\n        name: 'Nyandarua',\n      },\n      {\n        code: 'KE44',\n        name: 'Nyeri',\n      },\n      {\n        code: 'KE45',\n        name: 'Samburu',\n      },\n      {\n        code: 'KE46',\n        name: 'Siaya',\n      },\n      {\n        code: 'KE47',\n        name: 'Taita Taveta',\n      },\n      {\n        code: 'KE48',\n        name: 'Tana River',\n      },\n      {\n        code: 'KE49',\n        name: 'Tharaka Nithi',\n      },\n      {\n        code: 'KE50',\n        name: 'Trans Nzoia',\n      },\n      {\n        code: 'KE51',\n        name: 'Turkana',\n      },\n      {\n        code: 'KE52',\n        name: 'Uasin Gishu',\n      },\n      {\n        code: 'KE53',\n        name: 'Vihiga',\n      },\n      {\n        code: 'KE54',\n        name: 'Wajir',\n      },\n      {\n        code: 'KE55',\n        name: 'West Pokot',\n      },\n    ],\n  },\n  {\n    code: 'KI',\n    id: 2391,\n    name: 'Kiribati',\n    states: [],\n  },\n  {\n    code: 'KP',\n    id: 2274,\n    name: \"Korea; Democratic People's Republic Of (North)\",\n    states: [\n      {\n        code: 'KN01',\n        name: 'Chagang-do',\n      },\n      {\n        code: 'KN17',\n        name: 'Hamgyong-bukto',\n      },\n      {\n        code: 'KN03',\n        name: 'Hamgyong-namdo',\n      },\n      {\n        code: 'KN07',\n        name: 'Hwanghae-bukto',\n      },\n      {\n        code: 'KN06',\n        name: 'Hwanghae-namdo',\n      },\n      {\n        code: 'KN09',\n        name: 'Kangwon-do',\n      },\n      {\n        code: 'KN18',\n        name: 'Najin Sonbong-si',\n      },\n      {\n        code: 'KN11',\n        name: \"P'yongan-bukto\",\n      },\n      {\n        code: 'KN15',\n        name: \"P'yongan-namdo\",\n      },\n      {\n        code: 'KN12',\n        name: \"P'yongyang-si\",\n      },\n      {\n        code: 'KN13',\n        name: 'Yanggang-do',\n      },\n    ],\n  },\n  {\n    code: 'KR',\n    id: 2275,\n    name: 'Korea; Republic Of (South)',\n    states: [\n      {\n        code: 'KS10',\n        name: 'Busan',\n      },\n      {\n        code: 'KS05',\n        name: 'Chungcheongbuk-do',\n      },\n      {\n        code: 'KS17',\n        name: 'Chungcheongnam-do',\n      },\n      {\n        code: 'KS15',\n        name: 'Daegu',\n      },\n      {\n        code: 'KS19',\n        name: 'Daejeon',\n      },\n      {\n        code: 'KS06',\n        name: 'Gangwon-do',\n      },\n      {\n        code: 'KS18',\n        name: 'Gwangju',\n      },\n      {\n        code: 'KS13',\n        name: 'Gyeonggi-do',\n      },\n      {\n        code: 'KS14',\n        name: 'Gyeongsangbuk-do',\n      },\n      {\n        code: 'KS20',\n        name: 'Gyeongsangnam-do',\n      },\n      {\n        code: 'KS12',\n        name: 'Incheon',\n      },\n      {\n        code: 'KS01',\n        name: 'Jeju-do',\n      },\n      {\n        code: 'KS03',\n        name: 'Jeollabuk-do',\n      },\n      {\n        code: 'KS16',\n        name: 'Jeollanam-do',\n      },\n      {\n        code: 'KS22',\n        name: 'Sejong',\n      },\n      {\n        code: 'KS11',\n        name: 'Seoul',\n      },\n      {\n        code: 'KS21',\n        name: 'Ulsan',\n      },\n    ],\n  },\n  {\n    code: 'KV',\n    id: 2392,\n    name: 'Kosovo',\n    states: [],\n  },\n  {\n    code: 'KW',\n    id: 2276,\n    name: 'Kuwait',\n    states: [\n      {\n        code: 'KU04',\n        name: 'Al Ahmadi',\n      },\n      {\n        code: 'KU07',\n        name: 'Al Farwaniyah',\n      },\n      {\n        code: 'KU05',\n        name: 'Al Jahrah',\n      },\n      {\n        code: 'KU02',\n        name: 'Al Kuwayt',\n      },\n      {\n        code: 'KU08',\n        name: 'Hawalli',\n      },\n      {\n        code: 'KU09',\n        name: 'Mubarak Al-Kabir',\n      },\n    ],\n  },\n  {\n    code: 'KG',\n    id: 2277,\n    name: 'Kyrgyzstan',\n    states: [\n      {\n        code: 'KG09',\n        name: 'Batken',\n      },\n      {\n        code: 'KG01',\n        name: 'Bishkek',\n      },\n      {\n        code: 'KG02',\n        name: 'Chüy',\n      },\n      {\n        code: 'KG03',\n        name: 'Jalal-Abad',\n      },\n      {\n        code: 'KG04',\n        name: 'Naryn',\n      },\n      {\n        code: 'KG10',\n        name: 'Osh [City]',\n      },\n      {\n        code: 'KG08',\n        name: 'Osh',\n      },\n      {\n        code: 'KG06',\n        name: 'Talas',\n      },\n      {\n        code: 'KG07',\n        name: 'Ysyk-Köl',\n      },\n    ],\n  },\n  {\n    code: 'LA',\n    id: 2278,\n    name: \"Lao People's Democratic Republic\",\n    states: [\n      {\n        code: 'LA01',\n        name: 'Attapu',\n      },\n      {\n        code: 'LA22',\n        name: 'Bokeo',\n      },\n      {\n        code: 'LA23',\n        name: 'Bolikhamxai',\n      },\n      {\n        code: 'LA02',\n        name: 'Champasak',\n      },\n      {\n        code: 'LA03',\n        name: 'Houaphan',\n      },\n      {\n        code: 'LA15',\n        name: 'Khammouan',\n      },\n      {\n        code: 'LA16',\n        name: 'Louang Namtha',\n      },\n      {\n        code: 'LA17',\n        name: 'Louangphrabang',\n      },\n      {\n        code: 'LA07',\n        name: 'Oudômxai',\n      },\n      {\n        code: 'LA18',\n        name: 'Phôngsali',\n      },\n      {\n        code: 'LA19',\n        name: 'Saravan',\n      },\n      {\n        code: 'LA20',\n        name: 'Savannakhét',\n      },\n      {\n        code: 'LA27',\n        name: 'Vientiane',\n      },\n      {\n        code: 'LA24',\n        name: 'Vientiane [prefecture]',\n      },\n      {\n        code: 'LA13',\n        name: 'Xaignabouri',\n      },\n      {\n        code: 'LA28',\n        name: 'Xaisômboun',\n      },\n      {\n        code: 'LA26',\n        name: 'Xékong',\n      },\n      {\n        code: 'LA14',\n        name: 'Xiangkhoang',\n      },\n    ],\n  },\n  {\n    code: 'LV',\n    id: 2279,\n    name: 'Latvia',\n    states: [\n      {\n        code: 'LG34',\n        name: 'Adaži',\n      },\n      {\n        code: 'LG35',\n        name: 'Aglona',\n      },\n      {\n        code: 'LG36',\n        name: 'Aizkraukle',\n      },\n      {\n        code: 'LG37',\n        name: 'Aizpute',\n      },\n      {\n        code: 'LG38',\n        name: 'Akniste',\n      },\n      {\n        code: 'LG39',\n        name: 'Aloja',\n      },\n      {\n        code: 'LG40',\n        name: 'Alsunga',\n      },\n      {\n        code: 'LG41',\n        name: 'Aluksne',\n      },\n      {\n        code: 'LG42',\n        name: 'Amata',\n      },\n      {\n        code: 'LG43',\n        name: 'Ape',\n      },\n      {\n        code: 'LG44',\n        name: 'Auce',\n      },\n      {\n        code: 'LG45',\n        name: 'Babite',\n      },\n      {\n        code: 'LG46',\n        name: 'Baldone',\n      },\n      {\n        code: 'LG47',\n        name: 'Baltinava',\n      },\n      {\n        code: 'LG48',\n        name: 'Balvi',\n      },\n      {\n        code: 'LG49',\n        name: 'Bauska',\n      },\n      {\n        code: 'LG50',\n        name: 'Beverina',\n      },\n      {\n        code: 'LG51',\n        name: 'Broceni',\n      },\n      {\n        code: 'LG52',\n        name: 'Burtnieki',\n      },\n      {\n        code: 'LG53',\n        name: 'Carnikava',\n      },\n      {\n        code: 'LG54',\n        name: 'Cesis',\n      },\n      {\n        code: 'LG55',\n        name: 'Cesvaine',\n      },\n      {\n        code: 'LG56',\n        name: 'Cibla',\n      },\n      {\n        code: 'LG57',\n        name: 'Dagda',\n      },\n      {\n        code: 'LG06',\n        name: 'Daugavpils',\n      },\n      {\n        code: 'LG58',\n        name: 'Daugavpils',\n      },\n      {\n        code: 'LG59',\n        name: 'Dobele',\n      },\n      {\n        code: 'LG60',\n        name: 'Dundaga',\n      },\n      {\n        code: 'LG61',\n        name: 'Durbe',\n      },\n      {\n        code: 'LG62',\n        name: 'Engure',\n      },\n      {\n        code: 'LG63',\n        name: 'Ergli',\n      },\n      {\n        code: 'LG64',\n        name: 'Garkalne',\n      },\n      {\n        code: 'LG65',\n        name: 'Grobina',\n      },\n      {\n        code: 'LG66',\n        name: 'Gulbene',\n      },\n      {\n        code: 'LG67',\n        name: 'Iecava',\n      },\n      {\n        code: 'LG68',\n        name: 'Ikškile',\n      },\n      {\n        code: 'LG69',\n        name: 'Ilukste',\n      },\n      {\n        code: 'LG70',\n        name: 'Incukalns',\n      },\n      {\n        code: 'LG71',\n        name: 'Jaunjelgava',\n      },\n      {\n        code: 'LG72',\n        name: 'Jaunpiebalga',\n      },\n      {\n        code: 'LG73',\n        name: 'Jaunpils',\n      },\n      {\n        code: 'LG75',\n        name: 'Jekabpils',\n      },\n      {\n        code: 'LG74',\n        name: 'Jekabpils',\n      },\n      {\n        code: 'LG76',\n        name: 'Jelgava',\n      },\n      {\n        code: 'LG11',\n        name: 'Jelgava',\n      },\n      {\n        code: 'LG13',\n        name: 'Jurmala',\n      },\n      {\n        code: 'LG77',\n        name: 'Kandava',\n      },\n      {\n        code: 'LG78',\n        name: 'Karsava',\n      },\n      {\n        code: 'LG79',\n        name: 'Kegums',\n      },\n      {\n        code: 'LG80',\n        name: 'Kekava',\n      },\n      {\n        code: 'LG81',\n        name: 'Kocenu',\n      },\n      {\n        code: 'LG82',\n        name: 'Koknese',\n      },\n      {\n        code: 'LG83',\n        name: 'Kraslava',\n      },\n      {\n        code: 'LG84',\n        name: 'Krimulda',\n      },\n      {\n        code: 'LG85',\n        name: 'Krustpils',\n      },\n      {\n        code: 'LG86',\n        name: 'Kuldiga',\n      },\n      {\n        code: 'LG87',\n        name: 'Lielvarde',\n      },\n      {\n        code: 'LG16',\n        name: 'Liepaja',\n      },\n      {\n        code: 'LG88',\n        name: 'Ligatne',\n      },\n      {\n        code: 'LG89',\n        name: 'Limbaži',\n      },\n      {\n        code: 'LG90',\n        name: 'Livani',\n      },\n      {\n        code: 'LG91',\n        name: 'Lubana',\n      },\n      {\n        code: 'LG92',\n        name: 'Ludza',\n      },\n      {\n        code: 'LG93',\n        name: 'Madona',\n      },\n      {\n        code: 'LG94',\n        name: 'Malpils',\n      },\n      {\n        code: 'LG95',\n        name: 'Marupe',\n      },\n      {\n        code: 'LG96',\n        name: 'Mazsalaca',\n      },\n      {\n        code: 'LGF1',\n        name: 'Mersraga',\n      },\n      {\n        code: 'LG97',\n        name: 'Naukšeni',\n      },\n      {\n        code: 'LG98',\n        name: 'Nereta',\n      },\n      {\n        code: 'LG99',\n        name: 'Nica',\n      },\n      {\n        code: 'LGA1',\n        name: 'Ogre',\n      },\n      {\n        code: 'LGA2',\n        name: 'Olaine',\n      },\n      {\n        code: 'LGA3',\n        name: 'Ozolnieki',\n      },\n      {\n        code: 'LGA4',\n        name: 'Pargauja',\n      },\n      {\n        code: 'LGA5',\n        name: 'Pavilosta',\n      },\n      {\n        code: 'LGA6',\n        name: 'Plavinas',\n      },\n      {\n        code: 'LGA7',\n        name: 'Preili',\n      },\n      {\n        code: 'LGA8',\n        name: 'Priekule',\n      },\n      {\n        code: 'LGA9',\n        name: 'Priekuli',\n      },\n      {\n        code: 'LGB1',\n        name: 'Rauna',\n      },\n      {\n        code: 'LGB2',\n        name: 'Rezekne',\n      },\n      {\n        code: 'LG23',\n        name: 'Rezekne',\n      },\n      {\n        code: 'LGB3',\n        name: 'Riebini',\n      },\n      {\n        code: 'LG25',\n        name: 'Riga',\n      },\n      {\n        code: 'LGB4',\n        name: 'Roja',\n      },\n      {\n        code: 'LGB5',\n        name: 'Ropaži',\n      },\n      {\n        code: 'LGB6',\n        name: 'Rucava',\n      },\n      {\n        code: 'LGB7',\n        name: 'Rugaji',\n      },\n      {\n        code: 'LGB8',\n        name: 'Rujiena',\n      },\n      {\n        code: 'LGB9',\n        name: 'Rundale',\n      },\n      {\n        code: 'LGC1',\n        name: 'Salacgriva',\n      },\n      {\n        code: 'LGC2',\n        name: 'Sala',\n      },\n      {\n        code: 'LGC3',\n        name: 'Salaspils',\n      },\n      {\n        code: 'LGC4',\n        name: 'Saldus',\n      },\n      {\n        code: 'LGC5',\n        name: 'Saulkrasti',\n      },\n      {\n        code: 'LGC6',\n        name: 'Seja',\n      },\n      {\n        code: 'LGC7',\n        name: 'Sigulda',\n      },\n      {\n        code: 'LGC8',\n        name: 'Skriveri',\n      },\n      {\n        code: 'LGC9',\n        name: 'Skrunda',\n      },\n      {\n        code: 'LGD1',\n        name: 'Smiltene',\n      },\n      {\n        code: 'LGD2',\n        name: 'Stopini',\n      },\n      {\n        code: 'LGD3',\n        name: 'Strenci',\n      },\n      {\n        code: 'LGD4',\n        name: 'Talsi',\n      },\n      {\n        code: 'LGD5',\n        name: 'Tervete',\n      },\n      {\n        code: 'LGD6',\n        name: 'Tukums',\n      },\n      {\n        code: 'LGD7',\n        name: 'Vainode',\n      },\n      {\n        code: 'LGD8',\n        name: 'Valka',\n      },\n      {\n        code: 'LGD9',\n        name: 'Valmiera',\n      },\n      {\n        code: 'LGE1',\n        name: 'Varaklani',\n      },\n      {\n        code: 'LGE2',\n        name: 'Varkava',\n      },\n      {\n        code: 'LGE3',\n        name: 'Vecpiebalga',\n      },\n      {\n        code: 'LGE4',\n        name: 'Vecumnieki',\n      },\n      {\n        code: 'LGE5',\n        name: 'Ventspils',\n      },\n      {\n        code: 'LG32',\n        name: 'Ventspils',\n      },\n      {\n        code: 'LGE6',\n        name: 'Viesite',\n      },\n      {\n        code: 'LGE7',\n        name: 'Vilaka',\n      },\n      {\n        code: 'LGE8',\n        name: 'Vilani',\n      },\n      {\n        code: 'LGE9',\n        name: 'Zilupe',\n      },\n    ],\n  },\n  {\n    code: 'LB',\n    id: 2280,\n    name: 'Lebanon',\n    states: [\n      {\n        code: 'LE10',\n        name: 'Aakkar',\n      },\n      {\n        code: 'LE07',\n        name: 'An Nabatiyah',\n      },\n      {\n        code: 'LE11',\n        name: 'Baalbek-Hermel',\n      },\n      {\n        code: 'LE04',\n        name: 'Beirut',\n      },\n      {\n        code: 'LE08',\n        name: 'Beqaa',\n      },\n      {\n        code: 'LE05',\n        name: 'Mount Lebanon',\n      },\n      {\n        code: 'LE09',\n        name: 'North Lebanon',\n      },\n      {\n        code: 'LE06',\n        name: 'South Lebanon',\n      },\n    ],\n  },\n  {\n    code: 'LS',\n    id: 2281,\n    name: 'Lesotho',\n    states: [\n      {\n        code: 'LT10',\n        name: 'Berea',\n      },\n      {\n        code: 'LT11',\n        name: 'Butha-Buthe',\n      },\n      {\n        code: 'LT12',\n        name: 'Leribe',\n      },\n      {\n        code: 'LT14',\n        name: 'Mafeteng',\n      },\n      {\n        code: 'LT13',\n        name: 'Mafeteng',\n      },\n      {\n        code: 'LT15',\n        name: \"Mohale's Hoek\",\n      },\n      {\n        code: 'LT16',\n        name: 'Mokhotlong',\n      },\n      {\n        code: 'LT17',\n        name: \"Qacha's Nek\",\n      },\n      {\n        code: 'LT18',\n        name: 'Quthing',\n      },\n      {\n        code: 'LT19',\n        name: 'Thaba-Tseka',\n      },\n    ],\n  },\n  {\n    code: 'LR',\n    id: 2282,\n    name: 'Liberia',\n    states: [\n      {\n        code: 'LI15',\n        name: 'Bomi',\n      },\n      {\n        code: 'LI01',\n        name: 'Bong',\n      },\n      {\n        code: 'LI21\\t',\n        name: 'Gbarpolu',\n      },\n      {\n        code: 'LI11',\n        name: 'Grand Bassa',\n      },\n      {\n        code: 'LI12',\n        name: 'Grand Cape Mount',\n      },\n      {\n        code: 'LI19',\n        name: 'Grand Gedeh',\n      },\n      {\n        code: 'LI16',\n        name: 'Grand Kru',\n      },\n      {\n        code: 'LI20',\n        name: 'Lofa',\n      },\n      {\n        code: 'LI17',\n        name: 'Margibi',\n      },\n      {\n        code: 'LI13',\n        name: 'Maryland',\n      },\n      {\n        code: 'LI14',\n        name: 'Montserrado',\n      },\n      {\n        code: 'LI09',\n        name: 'Nimba',\n      },\n      {\n        code: 'LI22',\n        name: 'River Gee',\n      },\n      {\n        code: 'LI18',\n        name: 'Rivercess',\n      },\n      {\n        code: 'LI10',\n        name: 'Sinoe',\n      },\n    ],\n  },\n  {\n    code: 'LY',\n    id: 2380,\n    name: 'Libyan Arab Jamahiriya',\n    states: [],\n  },\n  {\n    code: 'LI',\n    id: 2284,\n    name: 'Liechtenstein',\n    states: [],\n  },\n  {\n    code: 'LT',\n    id: 2285,\n    name: 'Lithuania',\n    states: [\n      {\n        code: 'LH56',\n        name: 'Alytus',\n      },\n      {\n        code: 'LH57',\n        name: 'Kaunas',\n      },\n      {\n        code: 'LH58',\n        name: 'Klaipeda',\n      },\n      {\n        code: 'LH59',\n        name: 'Marijampole',\n      },\n      {\n        code: 'LH60',\n        name: 'Panevežys',\n      },\n      {\n        code: 'LH61',\n        name: 'Siauliai',\n      },\n      {\n        code: 'LH62',\n        name: 'Taurage',\n      },\n      {\n        code: 'LH63',\n        name: 'Telšiai',\n      },\n      {\n        code: 'LH64',\n        name: 'Utena',\n      },\n      {\n        code: 'LH65',\n        name: 'Vilnius',\n      },\n    ],\n  },\n  {\n    code: 'LU',\n    id: 2286,\n    name: 'Luxembourg',\n    states: [\n      {\n        code: 'LU01',\n        name: 'Diekirch',\n      },\n      {\n        code: 'LU02',\n        name: 'Grevenmacher',\n      },\n      {\n        code: 'LU03',\n        name: 'Luxembourg',\n      },\n    ],\n  },\n  {\n    code: 'MO',\n    id: 2287,\n    name: 'Macau',\n    states: [],\n  },\n  {\n    code: 'MK',\n    id: 2288,\n    name: 'Macedonia',\n    states: [],\n  },\n  {\n    code: 'YU',\n    id: 2367,\n    name: 'Macedonia; the Former Yugoslav Republic',\n    states: [],\n  },\n  {\n    code: 'MG',\n    id: 2289,\n    name: 'Madagascar',\n    states: [\n      {\n        code: 'MA05',\n        name: 'Antananarivo',\n      },\n      {\n        code: 'MA01',\n        name: 'Antsiranana',\n      },\n      {\n        code: 'MA02',\n        name: 'Fianarantsoa',\n      },\n      {\n        code: 'MA03',\n        name: 'Mahajanga',\n      },\n      {\n        code: 'MA04',\n        name: 'Toamasina',\n      },\n      {\n        code: 'MA06',\n        name: 'Toliara',\n      },\n    ],\n  },\n  {\n    code: 'MW',\n    id: 2290,\n    name: 'Malawi',\n    states: [\n      {\n        code: 'MI26',\n        name: 'Balaka',\n      },\n      {\n        code: 'MI24',\n        name: 'Blantyre',\n      },\n      {\n        code: 'MI02',\n        name: 'Chikwawa',\n      },\n      {\n        code: 'MI03',\n        name: 'Chiradzulu',\n      },\n      {\n        code: 'MI04',\n        name: 'Chitipa',\n      },\n      {\n        code: 'MI06',\n        name: 'Dedza',\n      },\n      {\n        code: 'MI07',\n        name: 'Dowa',\n      },\n      {\n        code: 'MI08',\n        name: 'Karonga',\n      },\n      {\n        code: 'MI09',\n        name: 'Kasungu',\n      },\n      {\n        code: 'MI27',\n        name: 'Likoma',\n      },\n      {\n        code: 'MI11',\n        name: 'Lilongwe',\n      },\n      {\n        code: 'MI28',\n        name: 'Machinga',\n      },\n      {\n        code: 'MI12',\n        name: 'Mangochi',\n      },\n      {\n        code: 'MI13',\n        name: 'Mchinji',\n      },\n      {\n        code: 'MI29',\n        name: 'Mulanje',\n      },\n      {\n        code: 'MI25',\n        name: 'Mwanza',\n      },\n      {\n        code: 'MI15',\n        name: 'Mzimba',\n      },\n      {\n        code: 'MI31',\n        name: 'Neno',\n      },\n      {\n        code: 'MI17',\n        name: 'Nkhata Bay',\n      },\n      {\n        code: 'MI18',\n        name: 'Nkhotakota',\n      },\n      {\n        code: 'MI19',\n        name: 'Nsanje',\n      },\n      {\n        code: 'MI16',\n        name: 'Ntcheu',\n      },\n      {\n        code: 'MI20',\n        name: 'Ntchisi',\n      },\n      {\n        code: 'MI30',\n        name: 'Phalombe',\n      },\n      {\n        code: 'MI21',\n        name: 'Rumphi',\n      },\n      {\n        code: 'MI22',\n        name: 'Salima',\n      },\n      {\n        code: 'MI05',\n        name: 'Thyolo',\n      },\n      {\n        code: 'MI23',\n        name: 'Zomba',\n      },\n    ],\n  },\n  {\n    code: 'MY',\n    id: 2291,\n    name: 'Malaysia',\n    states: [\n      {\n        code: 'MY01',\n        name: 'Johor',\n      },\n      {\n        code: 'MY02',\n        name: 'Kedah',\n      },\n      {\n        code: 'MY03',\n        name: 'Kelantan',\n      },\n      {\n        code: 'MY04',\n        name: 'Melaka',\n      },\n      {\n        code: 'MY05',\n        name: 'Negeri Sembilan',\n      },\n      {\n        code: 'MY06',\n        name: 'Pahang',\n      },\n      {\n        code: 'MY08',\n        name: 'Perak',\n      },\n      {\n        code: 'MY09',\n        name: 'Perlis',\n      },\n      {\n        code: 'MY07',\n        name: 'Pulau Pinang',\n      },\n      {\n        code: 'MY12',\n        name: 'Sabah',\n      },\n      {\n        code: 'MY13',\n        name: 'Sarawak',\n      },\n      {\n        code: 'MY10',\n        name: 'Selangor',\n      },\n      {\n        code: 'MY11',\n        name: 'Terengganu',\n      },\n      {\n        code: 'MY14',\n        name: 'W.P. Kuala Lumpur',\n      },\n      {\n        code: 'MY15',\n        name: 'W.P. Labuan',\n      },\n      {\n        code: 'MY16',\n        name: 'W.P. Putrajaya',\n      },\n    ],\n  },\n  {\n    code: 'MV',\n    id: 2384,\n    name: 'Maldives; Republic of',\n    states: [],\n  },\n  {\n    code: 'ML',\n    id: 2292,\n    name: 'Mali',\n    states: [\n      {\n        code: 'ML01',\n        name: 'Bamako',\n      },\n      {\n        code: 'ML09',\n        name: 'Gao',\n      },\n      {\n        code: 'ML03',\n        name: 'Kayes',\n      },\n      {\n        code: 'ML10',\n        name: 'Kidal',\n      },\n      {\n        code: 'ML07',\n        name: 'Koulikoro',\n      },\n      {\n        code: 'ML.ME',\n        name: 'Ménaka',\n      },\n      {\n        code: 'ML04',\n        name: 'Mopti',\n      },\n      {\n        code: 'ML05',\n        name: 'Ségou',\n      },\n      {\n        code: 'ML06',\n        name: 'Sikasso',\n      },\n      {\n        code: 'ML.TD',\n        name: 'Taoudénit',\n      },\n      {\n        code: 'ML08',\n        name: 'Timbuktu',\n      },\n    ],\n  },\n  {\n    code: 'MT',\n    id: 2293,\n    name: 'Malta',\n    states: [\n      {\n        code: 'MT.CE',\n        name: 'Central',\n      },\n      {\n        code: 'MT.GO',\n        name: 'Gozo',\n      },\n      {\n        code: 'MT.NO',\n        name: 'Northern',\n      },\n      {\n        code: 'MT.SE',\n        name: 'South Eastern',\n      },\n      {\n        code: 'MT.SO',\n        name: 'Southern',\n      },\n    ],\n  },\n  {\n    code: 'RM',\n    id: 2394,\n    name: 'Marshall Islands',\n    states: [],\n  },\n  {\n    code: 'MQ',\n    id: 2423,\n    name: 'Martinique',\n    states: [],\n  },\n  {\n    code: 'MR',\n    id: 2294,\n    name: 'Mauritania',\n    states: [\n      {\n        code: 'MR07',\n        name: 'Adrar',\n      },\n      {\n        code: 'MR03',\n        name: 'Assaba',\n      },\n      {\n        code: 'MR05',\n        name: 'Brakna',\n      },\n      {\n        code: 'MR08',\n        name: 'Dakhlet Nouadhibou',\n      },\n      {\n        code: 'MR04',\n        name: 'Gorgol',\n      },\n      {\n        code: 'MR10',\n        name: 'Guidimaka',\n      },\n      {\n        code: 'MR01',\n        name: 'Hodh ech Chargui',\n      },\n      {\n        code: 'MR02',\n        name: 'Hodh el Gharbi',\n      },\n      {\n        code: 'MR12',\n        name: 'Inchiri',\n      },\n      {\n        code: 'MR.NN',\n        name: 'Nouakchott Nord',\n      },\n      {\n        code: 'MR13',\n        name: 'Nouakchott Ouest',\n      },\n      {\n        code: 'MR.NS',\n        name: 'Nouakchott Sud',\n      },\n      {\n        code: 'MR09',\n        name: 'Tagant',\n      },\n      {\n        code: 'MR11',\n        name: 'Tiris Zemmour',\n      },\n      {\n        code: 'MR06',\n        name: 'Trarza',\n      },\n    ],\n  },\n  {\n    code: 'MU',\n    id: 2295,\n    name: 'Mauritius',\n    states: [\n      {\n        code: 'MP21',\n        name: 'Agalega Islands',\n      },\n      {\n        code: 'MP12',\n        name: 'Black River',\n      },\n      {\n        code: 'MP22',\n        name: 'Cargados Carajos',\n      },\n      {\n        code: 'MP13',\n        name: 'Flacq',\n      },\n      {\n        code: 'MP14',\n        name: 'Grand Port',\n      },\n      {\n        code: 'MP15',\n        name: 'Moka',\n      },\n      {\n        code: 'MP16',\n        name: 'Pamplemousses',\n      },\n      {\n        code: 'MP17',\n        name: 'Plaines Wilhems',\n      },\n      {\n        code: 'MP18',\n        name: 'Port Louis',\n      },\n      {\n        code: 'MP19',\n        name: 'Rivière du Rempart',\n      },\n      {\n        code: 'MP23',\n        name: 'Rodrigues',\n      },\n      {\n        code: 'MP20',\n        name: 'Savanne',\n      },\n    ],\n  },\n  {\n    code: 'M999',\n    id: 2393,\n    name: 'Mayotte',\n    states: [],\n  },\n  {\n    code: 'MX',\n    id: 2296,\n    name: 'Mexico',\n    states: [\n      {\n        code: 'AGU',\n        name: 'Aguascalientes',\n      },\n      {\n        code: 'BCS',\n        name: 'Baja California Sur',\n      },\n      {\n        code: 'BCN',\n        name: 'Baja California',\n      },\n      {\n        code: 'CAM',\n        name: 'Campeche',\n      },\n      {\n        code: 'CHP',\n        name: 'Chiapas',\n      },\n      {\n        code: 'CHH',\n        name: 'Chihuahua',\n      },\n      {\n        code: 'COA',\n        name: 'Coahuila',\n      },\n      {\n        code: 'COL',\n        name: 'Colima',\n      },\n      {\n        code: 'DIF',\n        name: 'Distrito Federal',\n      },\n      {\n        code: 'DUR',\n        name: 'Durango',\n      },\n      {\n        code: 'GUA',\n        name: 'Guanajuato',\n      },\n      {\n        code: 'GRO',\n        name: 'Guerrero',\n      },\n      {\n        code: 'HID',\n        name: 'Hidalgo',\n      },\n      {\n        code: 'JAL',\n        name: 'Jalisco',\n      },\n      {\n        code: 'MEX',\n        name: 'México',\n      },\n      {\n        code: 'MIC',\n        name: 'Michoacán',\n      },\n      {\n        code: 'MOR',\n        name: 'Morelos',\n      },\n      {\n        code: 'NAY',\n        name: 'Nayarit',\n      },\n      {\n        code: 'NLE',\n        name: 'Nuevo León',\n      },\n      {\n        code: 'OAX',\n        name: 'Oaxaca',\n      },\n      {\n        code: 'PUE',\n        name: 'Puebla',\n      },\n      {\n        code: 'QUE',\n        name: 'Querétaro',\n      },\n      {\n        code: 'ROO',\n        name: 'Quintana Roo',\n      },\n      {\n        code: 'SLP',\n        name: 'San Luis Potosí',\n      },\n      {\n        code: 'SIN',\n        name: 'Sinaloa',\n      },\n      {\n        code: 'SON',\n        name: 'Sonora',\n      },\n      {\n        code: 'TAB',\n        name: 'Tabasco',\n      },\n      {\n        code: 'TAM',\n        name: 'Tamaulipas',\n      },\n      {\n        code: 'TLA',\n        name: 'Tlaxcala',\n      },\n      {\n        code: 'VER',\n        name: 'Veracruz',\n      },\n      {\n        code: 'YUC',\n        name: 'Yucatán',\n      },\n      {\n        code: 'ZAC',\n        name: 'Zacatecas',\n      },\n    ],\n  },\n  {\n    code: 'FM',\n    id: 2297,\n    name: 'Micronesia; Federated States of',\n    states: [\n      {\n        code: 'FM03',\n        name: 'Chuuk',\n      },\n      {\n        code: 'FM01',\n        name: 'Kosrae',\n      },\n      {\n        code: 'FM02',\n        name: 'Pohnpei',\n      },\n      {\n        code: 'FM04',\n        name: 'Yap',\n      },\n    ],\n  },\n  {\n    code: 'MD',\n    id: 2395,\n    name: 'Moldova; Republic of',\n    states: [],\n  },\n  {\n    code: 'MC',\n    id: 2299,\n    name: 'Monaco',\n    states: [],\n  },\n  {\n    code: 'MN',\n    id: 2300,\n    name: 'Mongolia',\n    states: [],\n  },\n  {\n    code: 'MJ',\n    id: 2396,\n    name: 'Montenegro',\n    states: [\n      {\n        code: 'ME-1',\n        name: 'Andrijevica',\n      },\n      {\n        code: 'ME-2',\n        name: 'Bar',\n      },\n      {\n        code: 'ME-3',\n        name: 'Berane',\n      },\n      {\n        code: 'ME-4',\n        name: 'Bijelo Polje',\n      },\n      {\n        code: 'ME-5',\n        name: 'Budva',\n      },\n      {\n        code: 'ME-6',\n        name: 'Cetinje',\n      },\n      {\n        code: 'ME-7',\n        name: 'Danilovgrad',\n      },\n      {\n        code: 'ME-8',\n        name: 'Herceg Novi',\n      },\n      {\n        code: 'ME-9',\n        name: 'Kolašin',\n      },\n      {\n        code: 'ME-10',\n        name: 'Kotor',\n      },\n      {\n        code: 'ME-11',\n        name: 'Mojkovac',\n      },\n      {\n        code: 'ME-12',\n        name: 'Nikšic',\n      },\n      {\n        code: 'ME-13',\n        name: 'Plav',\n      },\n      {\n        code: 'ME-14',\n        name: 'Pljevlja',\n      },\n      {\n        code: 'ME-15',\n        name: 'Plužine',\n      },\n      {\n        code: 'ME-16',\n        name: 'Podgorica',\n      },\n      {\n        code: 'ME-17',\n        name: 'Rožaje',\n      },\n      {\n        code: 'ME-18',\n        name: 'Šavnik',\n      },\n      {\n        code: 'ME-19',\n        name: 'Tivat',\n      },\n      {\n        code: 'ME-20',\n        name: 'Ulcinj',\n      },\n      {\n        code: 'ME-21',\n        name: 'Žabljak',\n      },\n    ],\n  },\n  {\n    code: 'MS',\n    id: 2424,\n    name: 'Montserrat',\n    states: [],\n  },\n  {\n    code: 'MA',\n    id: 2301,\n    name: 'Morocco',\n    states: [\n      {\n        code: 'MA.BK',\n        name: 'Béni Mellal-Khénifra',\n      },\n      {\n        code: 'MA.CS',\n        name: 'Casablanca-Settat',\n      },\n      {\n        code: 'MA.OL',\n        name: 'Dakhla-Oued Ed-Dahab',\n      },\n      {\n        code: 'MA.DT',\n        name: 'Drâa-Tafilalet',\n      },\n      {\n        code: 'MA.FK',\n        name: 'Fès-Meknès',\n      },\n      {\n        code: 'MA.GN',\n        name: 'Guelmim-Oued Noun',\n      },\n      {\n        code: 'MA.OF',\n        name: \"L'oriental\",\n      },\n      {\n        code: 'MA.LS',\n        name: 'Laâyoune-Sakia al Hamra',\n      },\n      {\n        code: 'MA.MS',\n        name: 'Marrakech-Safi',\n      },\n      {\n        code: 'MA.RK',\n        name: 'Rabat-Salé-Kénitra',\n      },\n      {\n        code: 'MA.SS',\n        name: 'Souss-Massa',\n      },\n      {\n        code: 'MA.TC',\n        name: 'Tanger-Tétouan-Al Hoceima',\n      },\n    ],\n  },\n  {\n    code: 'MZ',\n    id: 2302,\n    name: 'Mozambique',\n    states: [\n      {\n        code: 'MZ01',\n        name: 'Cabo Delgado',\n      },\n      {\n        code: 'MZ02',\n        name: 'Gaza',\n      },\n      {\n        code: 'MZ03',\n        name: 'Inhambane',\n      },\n      {\n        code: 'MZ10',\n        name: 'Manica',\n      },\n      {\n        code: 'MZ11',\n        name: 'Maputo [city]',\n      },\n      {\n        code: 'MZ04',\n        name: 'Maputo',\n      },\n      {\n        code: 'MZ06',\n        name: 'Nampula',\n      },\n      {\n        code: 'MZ07',\n        name: 'Niassa',\n      },\n      {\n        code: 'MZ05',\n        name: 'Sofala',\n      },\n      {\n        code: 'MZ08',\n        name: 'Tete',\n      },\n      {\n        code: 'MZ09',\n        name: 'Zambézia',\n      },\n    ],\n  },\n  {\n    code: 'MM',\n    id: 2303,\n    name: 'Myanmar',\n    states: [\n      {\n        code: 'MM.AY',\n        name: 'Ayeyarwady',\n      },\n      {\n        code: 'MM.BA',\n        name: 'Bago',\n      },\n      {\n        code: 'MM.CH',\n        name: 'Chin',\n      },\n      {\n        code: 'MM.KC',\n        name: 'Kachin',\n      },\n      {\n        code: 'MM.KH',\n        name: 'Kayah',\n      },\n      {\n        code: 'MM.KN',\n        name: 'Kayin',\n      },\n      {\n        code: 'MM.MG',\n        name: 'Magway',\n      },\n      {\n        code: 'MM.ML',\n        name: 'Mandalay',\n      },\n      {\n        code: 'MM.MO',\n        name: 'Mon',\n      },\n      {\n        code: 'MM.NY',\n        name: 'Naypyidaw',\n      },\n      {\n        code: 'MM.RA',\n        name: 'Rakhine',\n      },\n      {\n        code: 'MM.SA',\n        name: 'Sagaing',\n      },\n      {\n        code: 'MM.SH',\n        name: 'Shan',\n      },\n      {\n        code: 'MM.TN',\n        name: 'Tanintharyi',\n      },\n      {\n        code: 'MM.YA',\n        name: 'Yangon',\n      },\n    ],\n  },\n  {\n    code: 'NA',\n    id: 2304,\n    name: 'Namibia',\n    states: [\n      {\n        code: 'WA29',\n        name: 'Erongo',\n      },\n      {\n        code: 'WA30',\n        name: 'Hardap',\n      },\n      {\n        code: 'WA31',\n        name: 'Karas',\n      },\n      {\n        code: 'WA40',\n        name: 'Kavango East',\n      },\n      {\n        code: 'WA41',\n        name: 'Kavango West',\n      },\n      {\n        code: 'WA21',\n        name: 'Khomas',\n      },\n      {\n        code: 'WA32',\n        name: 'Kunene',\n      },\n      {\n        code: 'WA33',\n        name: 'Ohangwena',\n      },\n      {\n        code: 'WA35',\n        name: 'Omaheke',\n      },\n      {\n        code: 'WA36',\n        name: 'Omusati',\n      },\n      {\n        code: 'WA37',\n        name: 'Oshana',\n      },\n      {\n        code: 'WA38',\n        name: 'Oshikoto',\n      },\n      {\n        code: 'WA39',\n        name: 'Otjozondjupa',\n      },\n      {\n        code: 'WA28',\n        name: 'Zambezi',\n      },\n    ],\n  },\n  {\n    code: 'NR',\n    id: 2397,\n    name: 'Nauru',\n    states: [],\n  },\n  {\n    code: 'NP',\n    id: 2305,\n    name: 'Nepal',\n    states: [\n      {\n        code: 'NP.FI',\n        name: 'Five',\n      },\n      {\n        code: 'NP.FO',\n        name: 'Four',\n      },\n      {\n        code: 'NP.ON',\n        name: 'One',\n      },\n      {\n        code: 'NP.SE',\n        name: 'Seven',\n      },\n      {\n        code: 'NP.SI',\n        name: 'Six',\n      },\n      {\n        code: 'NP.TH',\n        name: 'Three',\n      },\n      {\n        code: 'NP.TW',\n        name: 'Two',\n      },\n    ],\n  },\n  {\n    code: 'NL',\n    id: 2306,\n    name: 'Netherlands',\n    states: [\n      {\n        code: 'DR',\n        name: 'Drenthe',\n      },\n      {\n        code: 'FL',\n        name: 'Flevoland',\n      },\n      {\n        code: 'FR',\n        name: 'Friesland',\n      },\n      {\n        code: 'GE',\n        name: 'Gelderland',\n      },\n      {\n        code: 'GR',\n        name: 'Groningen',\n      },\n      {\n        code: 'LI',\n        name: 'Limburg',\n      },\n      {\n        code: 'NB',\n        name: 'Noord-Brabant',\n      },\n      {\n        code: 'NH',\n        name: 'Noord-Holland',\n      },\n      {\n        code: 'OV',\n        name: 'Overijssel',\n      },\n      {\n        code: 'UT',\n        name: 'Utrecht',\n      },\n      {\n        code: 'ZE',\n        name: 'Zeeland',\n      },\n      {\n        code: 'ZH',\n        name: 'Zuid-Holland',\n      },\n    ],\n  },\n  {\n    code: 'AN',\n    id: 2425,\n    name: 'Netherlands Antilles',\n    states: [],\n  },\n  {\n    code: 'NC',\n    id: 2426,\n    name: 'New Caledonia',\n    states: [],\n  },\n  {\n    code: 'NZ',\n    id: 2307,\n    name: 'New Zealand',\n    states: [\n      {\n        code: 'AUK',\n        name: 'Auckland',\n      },\n      {\n        code: 'BOP',\n        name: 'Bay of Plenty',\n      },\n      {\n        code: 'CAN',\n        name: 'Canterbury',\n      },\n      {\n        code: 'CIT',\n        name: 'Chatham Islands Territory',\n      },\n      {\n        code: 'GIS',\n        name: 'Gisborne',\n      },\n      {\n        code: 'HKB',\n        name: \"Hawke's Bay\",\n      },\n      {\n        code: 'MWT',\n        name: 'Manawatu-Wanganui',\n      },\n      {\n        code: 'MBH',\n        name: 'Marlborough',\n      },\n      {\n        code: 'NSN',\n        name: 'Nelson',\n      },\n      {\n        code: 'N',\n        name: 'North Island',\n      },\n      {\n        code: 'NTL',\n        name: 'Northland',\n      },\n      {\n        code: 'OTA',\n        name: 'Otago',\n      },\n      {\n        code: 'S',\n        name: 'South Island',\n      },\n      {\n        code: 'STL',\n        name: 'Southland',\n      },\n      {\n        code: 'TKI',\n        name: 'Taranaki',\n      },\n      {\n        code: 'TAS',\n        name: 'Tasman District',\n      },\n      {\n        code: 'WKO',\n        name: 'Waikato',\n      },\n      {\n        code: 'WGN',\n        name: 'Wellington',\n      },\n      {\n        code: 'WTC',\n        name: 'West Coast',\n      },\n    ],\n  },\n  {\n    code: 'NI',\n    id: 2308,\n    name: 'Nicaragua',\n    states: [\n      {\n        code: 'NU01',\n        name: 'Boaco',\n      },\n      {\n        code: 'NU02',\n        name: 'Carazo',\n      },\n      {\n        code: 'NU03',\n        name: 'Chinandega',\n      },\n      {\n        code: 'NU04',\n        name: 'Chontales',\n      },\n      {\n        code: 'NU05',\n        name: 'Estelí',\n      },\n      {\n        code: 'NU06',\n        name: 'Granada',\n      },\n      {\n        code: 'NU07',\n        name: 'Jinotega',\n      },\n      {\n        code: 'NU08',\n        name: 'León',\n      },\n      {\n        code: 'NU09',\n        name: 'Madriz',\n      },\n      {\n        code: 'NU10',\n        name: 'Managua',\n      },\n      {\n        code: 'NU11',\n        name: 'Masaya',\n      },\n      {\n        code: 'NU12',\n        name: 'Matagalpa',\n      },\n      {\n        code: 'NU13',\n        name: 'Nueva Segovia',\n      },\n      {\n        code: 'NU17',\n        name: 'Región Autónoma del Caribe Norte',\n      },\n      {\n        code: 'NU18',\n        name: 'Región Autónoma del Caribe Sur',\n      },\n      {\n        code: 'NU14',\n        name: 'Río San Juan',\n      },\n      {\n        code: 'NU15',\n        name: 'Rivas',\n      },\n    ],\n  },\n  {\n    code: 'NE',\n    id: 2309,\n    name: 'Niger',\n    states: [\n      {\n        code: 'NG01',\n        name: 'Agadez',\n      },\n      {\n        code: 'NG02',\n        name: 'Diffa',\n      },\n      {\n        code: 'NG03',\n        name: 'Dosso',\n      },\n      {\n        code: 'NG04',\n        name: 'Maradi',\n      },\n      {\n        code: 'NG08',\n        name: 'Niamey',\n      },\n      {\n        code: 'NG06',\n        name: 'Tahoua',\n      },\n      {\n        code: 'NG09',\n        name: 'Tillabéri',\n      },\n      {\n        code: 'NG07',\n        name: 'Zinder',\n      },\n    ],\n  },\n  {\n    code: 'NG',\n    id: 2310,\n    name: 'Nigeria',\n    states: [\n      {\n        code: 'NI45',\n        name: 'Abia',\n      },\n      {\n        code: 'NI35',\n        name: 'Adamawa',\n      },\n      {\n        code: 'NI21',\n        name: 'Akwa Ibom',\n      },\n      {\n        code: 'NI25',\n        name: 'Anambra',\n      },\n      {\n        code: 'NI46',\n        name: 'Bauchi',\n      },\n      {\n        code: 'NI52',\n        name: 'Bayelsa',\n      },\n      {\n        code: 'NI26',\n        name: 'Benue',\n      },\n      {\n        code: 'NI27',\n        name: 'Borno',\n      },\n      {\n        code: 'NI22',\n        name: 'Cross River',\n      },\n      {\n        code: 'NI36',\n        name: 'Delta',\n      },\n      {\n        code: 'NI53',\n        name: 'Ebonyi',\n      },\n      {\n        code: 'NI37',\n        name: 'Edo',\n      },\n      {\n        code: 'NI54',\n        name: 'Ekiti',\n      },\n      {\n        code: 'NI47',\n        name: 'Enugu',\n      },\n      {\n        code: 'NI11',\n        name: 'Federal Capital Territory',\n      },\n      {\n        code: 'NI55',\n        name: 'Gombe',\n      },\n      {\n        code: 'NI28',\n        name: 'Imo',\n      },\n      {\n        code: 'NI39',\n        name: 'Jigawa',\n      },\n      {\n        code: 'NI23',\n        name: 'Kaduna',\n      },\n      {\n        code: 'NI29',\n        name: 'Kano',\n      },\n      {\n        code: 'NI24',\n        name: 'Katsina',\n      },\n      {\n        code: 'NI40',\n        name: 'Kebbi',\n      },\n      {\n        code: 'NI41',\n        name: 'Kogi',\n      },\n      {\n        code: 'NI30',\n        name: 'Kwara',\n      },\n      {\n        code: 'NI05',\n        name: 'Lagos',\n      },\n      {\n        code: 'NI56',\n        name: 'Nassarawa',\n      },\n      {\n        code: 'NI31',\n        name: 'Niger',\n      },\n      {\n        code: 'NI16',\n        name: 'Ogun',\n      },\n      {\n        code: 'NI48',\n        name: 'Ondo',\n      },\n      {\n        code: 'NI42',\n        name: 'Osun',\n      },\n      {\n        code: 'NI32',\n        name: 'Oyo',\n      },\n      {\n        code: 'NI49',\n        name: 'Plateau',\n      },\n      {\n        code: 'NI50',\n        name: 'Rivers',\n      },\n      {\n        code: 'NI51',\n        name: 'Sokoto',\n      },\n      {\n        code: 'NI43',\n        name: 'Taraba',\n      },\n      {\n        code: 'NI44',\n        name: 'Yobe',\n      },\n      {\n        code: 'NI57',\n        name: 'Zamfara',\n      },\n    ],\n  },\n  {\n    code: 'NU',\n    id: 2427,\n    name: 'Niue',\n    states: [],\n  },\n  {\n    code: 'NF',\n    id: 2428,\n    name: 'Norfolk Island',\n    states: [],\n  },\n  {\n    code: 'MP',\n    id: 2429,\n    name: 'Northern Mariana Islands',\n    states: [],\n  },\n  {\n    code: 'NO',\n    id: 2311,\n    name: 'Norway',\n    states: [\n      {\n        code: 'NO02',\n        name: 'Akershus',\n      },\n      {\n        code: 'NO09',\n        name: 'Aust-Agder',\n      },\n      {\n        code: 'NO06',\n        name: 'Buskerud',\n      },\n      {\n        code: 'NO20',\n        name: 'Finnmark',\n      },\n      {\n        code: 'NO04',\n        name: 'Hedmark',\n      },\n      {\n        code: 'NO12',\n        name: 'Hordaland',\n      },\n      {\n        code: 'NO22',\n        name: 'Jan Mayen (Arctic Region)',\n      },\n      {\n        code: 'NO15',\n        name: 'Møre og Romsdal',\n      },\n      {\n        code: 'NO17',\n        name: 'Nord-Trøndelag',\n      },\n      {\n        code: 'NO18',\n        name: 'Nordland',\n      },\n      {\n        code: 'NO05',\n        name: 'Oppland',\n      },\n      {\n        code: 'NO03',\n        name: 'Oslo',\n      },\n      {\n        code: 'NO01',\n        name: 'Østfold',\n      },\n      {\n        code: 'NO11',\n        name: 'Rogaland',\n      },\n      {\n        code: 'NO14',\n        name: 'Sogn og Fjordane',\n      },\n      {\n        code: 'NO16',\n        name: 'Sør-Trøndelag',\n      },\n      {\n        code: 'NO21',\n        name: 'Svalbard (Arctic Region)',\n      },\n      {\n        code: 'NO08',\n        name: 'Telemark',\n      },\n      {\n        code: 'NO19',\n        name: 'Troms',\n      },\n      {\n        code: 'NO10',\n        name: 'Vest-Agder',\n      },\n      {\n        code: 'NO07',\n        name: 'Vestfold',\n      },\n    ],\n  },\n  {\n    code: 'OM',\n    id: 2312,\n    name: 'Oman',\n    states: [\n      {\n        code: 'MU01',\n        name: 'Ad Dakhliyah',\n      },\n      {\n        code: 'MU09',\n        name: 'Adh Dhahirah',\n      },\n      {\n        code: 'MU11',\n        name: 'Al Batinah North',\n      },\n      {\n        code: 'MU02',\n        name: 'Al Batinah South',\n      },\n      {\n        code: 'MU10',\n        name: 'Al Buraymi',\n      },\n      {\n        code: 'MU03',\n        name: 'Al Wusta',\n      },\n      {\n        code: 'MU12',\n        name: 'Ash Sharqiyah North',\n      },\n      {\n        code: 'MU04',\n        name: 'Ash Sharqiyah South',\n      },\n      {\n        code: 'MU08',\n        name: 'Dhofar',\n      },\n      {\n        code: 'MU07',\n        name: 'Musandam',\n      },\n      {\n        code: 'MU06',\n        name: 'Muscat',\n      },\n    ],\n  },\n  {\n    code: 'PK',\n    id: 2313,\n    name: 'Pakistan',\n    states: [\n      {\n        code: 'PK06',\n        name: 'Azad Kashmir',\n      },\n      {\n        code: 'PK02',\n        name: 'Balochistan',\n      },\n      {\n        code: 'PK01',\n        name: 'Federally Administered Tribal Areas',\n      },\n      {\n        code: 'PK07',\n        name: 'Gilgit-Baltistan',\n      },\n      {\n        code: 'PK08',\n        name: 'Islamabad',\n      },\n      {\n        code: 'PK03',\n        name: 'Khyber-Pakhtunkhwa',\n      },\n      {\n        code: 'PK04',\n        name: 'Punjab',\n      },\n      {\n        code: 'PK05',\n        name: 'Sindh',\n      },\n    ],\n  },\n  {\n    code: 'PW',\n    id: 2314,\n    name: 'Palau',\n    states: [],\n  },\n  {\n    code: 'PS',\n    id: 2430,\n    name: 'Palestinian Territory; Occupied',\n    states: [],\n  },\n  {\n    code: 'PA',\n    id: 2315,\n    name: 'Panama',\n    states: [\n      {\n        code: 'PM01',\n        name: 'Bocas del Toro',\n      },\n      {\n        code: 'PM02\\t',\n        name: 'Chiriquí',\n      },\n      {\n        code: 'PM03',\n        name: 'Coclé',\n      },\n      {\n        code: 'PM04',\n        name: 'Coclé',\n      },\n      {\n        code: 'PM05',\n        name: 'Darién',\n      },\n      {\n        code: 'PM11',\n        name: 'Emberá',\n      },\n      {\n        code: 'PM06',\n        name: 'Herrera',\n      },\n      {\n        code: 'PM09',\n        name: 'Kuna Yala',\n      },\n      {\n        code: 'PM07',\n        name: 'Los Santos',\n      },\n      {\n        code: 'PM12',\n        name: 'Ngäbe Buglé',\n      },\n      {\n        code: 'PM13',\n        name: 'Panamá Oeste',\n      },\n      {\n        code: 'PM08',\n        name: 'Panamá',\n      },\n      {\n        code: 'PM10',\n        name: 'Veraguas',\n      },\n    ],\n  },\n  {\n    code: 'PG',\n    id: 2316,\n    name: 'Papua New Guinea',\n    states: [\n      {\n        code: 'PP07',\n        name: 'Bougainville',\n      },\n      {\n        code: 'PP01',\n        name: 'Central',\n      },\n      {\n        code: 'PP08',\n        name: 'Chimbu',\n      },\n      {\n        code: 'PP10',\n        name: 'East New Britain',\n      },\n      {\n        code: 'PP11',\n        name: 'East Sepik',\n      },\n      {\n        code: 'PP09',\n        name: 'Eastern Highlands',\n      },\n      {\n        code: 'PP19',\n        name: 'Enga',\n      },\n      {\n        code: 'PP02',\n        name: 'Gulf',\n      },\n      {\n        code: 'PP21',\n        name: 'Hela',\n      },\n      {\n        code: 'PP22',\n        name: 'Jiwaka',\n      },\n      {\n        code: 'PP12',\n        name: 'Madang',\n      },\n      {\n        code: 'PP13',\n        name: 'Manus',\n      },\n      {\n        code: 'PP03',\n        name: 'Milne Bay',\n      },\n      {\n        code: 'PP14',\n        name: 'Morobe',\n      },\n      {\n        code: 'PP20',\n        name: 'National Capital District',\n      },\n      {\n        code: 'PP15',\n        name: 'New Ireland',\n      },\n      {\n        code: 'PP04',\n        name: 'Northern',\n      },\n      {\n        code: 'PP18',\n        name: 'Sandaun',\n      },\n      {\n        code: 'PP05',\n        name: 'Southern Highlands',\n      },\n      {\n        code: 'PP17',\n        name: 'West New Britain',\n      },\n      {\n        code: 'PP06',\n        name: 'Western',\n      },\n      {\n        code: 'PP16',\n        name: 'Western Highlands',\n      },\n    ],\n  },\n  {\n    code: 'PY',\n    id: 2317,\n    name: 'Paraguay',\n    states: [\n      {\n        code: 'PA23',\n        name: 'Alto Paraguay',\n      },\n      {\n        code: 'PA01',\n        name: 'Alto Paraná',\n      },\n      {\n        code: 'PA02',\n        name: 'Amambay',\n      },\n      {\n        code: 'PA22',\n        name: 'Asunción',\n      },\n      {\n        code: 'PA24',\n        name: 'Boquerón',\n      },\n      {\n        code: 'PA04',\n        name: 'Caaguazú',\n      },\n      {\n        code: 'PA05',\n        name: 'Caazapá',\n      },\n      {\n        code: 'PA19',\n        name: 'Canindeyú',\n      },\n      {\n        code: 'PA06',\n        name: 'Central',\n      },\n      {\n        code: 'PA07',\n        name: 'Concepción',\n      },\n      {\n        code: 'PA08',\n        name: 'Cordillera',\n      },\n      {\n        code: 'PA10',\n        name: 'Guairá',\n      },\n      {\n        code: 'PA11',\n        name: 'Itapúa',\n      },\n      {\n        code: 'PA12',\n        name: 'Misiones',\n      },\n      {\n        code: 'PA15',\n        name: 'Paraguarí',\n      },\n      {\n        code: 'PA16',\n        name: 'Presidente Hayes',\n      },\n      {\n        code: 'PA17',\n        name: 'San Pedro',\n      },\n      {\n        code: 'PA13',\n        name: 'Ñeembucú',\n      },\n    ],\n  },\n  {\n    code: 'PE',\n    id: 2318,\n    name: 'Peru',\n    states: [\n      {\n        code: 'PE01',\n        name: 'Amazonas',\n      },\n      {\n        code: 'PE02',\n        name: 'Ancash',\n      },\n      {\n        code: 'PE03',\n        name: 'Apurímac',\n      },\n      {\n        code: 'PE04',\n        name: 'Arequipa',\n      },\n      {\n        code: 'PE05',\n        name: 'Ayacucho',\n      },\n      {\n        code: 'PE06',\n        name: 'Cajamarca',\n      },\n      {\n        code: 'PE07',\n        name: 'Callao',\n      },\n      {\n        code: 'PE08',\n        name: 'Cusco',\n      },\n      {\n        code: 'PE09',\n        name: 'Huancavelica',\n      },\n      {\n        code: 'PE10',\n        name: 'Huánuco',\n      },\n      {\n        code: 'PE11',\n        name: 'Ica',\n      },\n      {\n        code: 'PE12',\n        name: 'Junín',\n      },\n      {\n        code: 'PE13',\n        name: 'La Libertad',\n      },\n      {\n        code: 'PE14',\n        name: 'Lambayeque',\n      },\n      {\n        code: 'PE15',\n        name: 'Lima',\n      },\n      {\n        code: 'PE26',\n        name: 'Lima [Province]',\n      },\n      {\n        code: 'PE16',\n        name: 'Loreto',\n      },\n      {\n        code: 'PE17',\n        name: 'Madre de Dios',\n      },\n      {\n        code: 'PE18',\n        name: 'Moquegua',\n      },\n      {\n        code: 'PE19',\n        name: 'Pasco',\n      },\n      {\n        code: 'PE20',\n        name: 'Piura',\n      },\n      {\n        code: 'PE21',\n        name: 'Puno',\n      },\n      {\n        code: 'PE22',\n        name: 'San Martín',\n      },\n      {\n        code: 'PE23',\n        name: 'Tacna',\n      },\n      {\n        code: 'PE24',\n        name: 'Tumbes',\n      },\n      {\n        code: 'PE25',\n        name: 'Ucayali',\n      },\n    ],\n  },\n  {\n    code: 'PH',\n    id: 2319,\n    name: 'Philippines',\n    states: [\n      {\n        code: 'RP01',\n        name: 'Abra',\n      },\n      {\n        code: 'RP02',\n        name: 'Agusan del Norte',\n      },\n      {\n        code: 'RP03',\n        name: 'Agusan del Sur',\n      },\n      {\n        code: 'RP04',\n        name: 'Aklan',\n      },\n      {\n        code: 'RP05',\n        name: 'Albay',\n      },\n      {\n        code: 'RP06',\n        name: 'Antique',\n      },\n      {\n        code: 'RPH6',\n        name: 'Apayao',\n      },\n      {\n        code: 'RPG8',\n        name: 'Aurora',\n      },\n      {\n        code: 'RP22',\n        name: 'Basilan',\n      },\n      {\n        code: 'RP07',\n        name: 'Bataan',\n      },\n      {\n        code: 'RP08',\n        name: 'Batanes',\n      },\n      {\n        code: 'RP09',\n        name: 'Batangas',\n      },\n      {\n        code: 'RP10',\n        name: 'Benguet',\n      },\n      {\n        code: 'RPH9',\n        name: 'Biliran',\n      },\n      {\n        code: 'RP11',\n        name: 'Bohol',\n      },\n      {\n        code: 'RP12',\n        name: 'Bukidnon',\n      },\n      {\n        code: 'RP13',\n        name: 'Bulacan',\n      },\n      {\n        code: 'RP14',\n        name: 'Cagayan',\n      },\n      {\n        code: 'RP15',\n        name: 'Camarines Norte',\n      },\n      {\n        code: 'RP16',\n        name: 'Camarines Sur',\n      },\n      {\n        code: 'RP17',\n        name: 'Camiguin',\n      },\n      {\n        code: 'RP18',\n        name: 'Capiz',\n      },\n      {\n        code: 'RP19',\n        name: 'Catanduanes',\n      },\n      {\n        code: 'RP20',\n        name: 'Cavite',\n      },\n      {\n        code: 'RP21',\n        name: 'Cebu',\n      },\n      {\n        code: 'RPI6',\n        name: 'Compostela Valley',\n      },\n      {\n        code: 'RP57',\n        name: 'Cotabato',\n      },\n      {\n        code: 'RP26',\n        name: 'Davao Oriental',\n      },\n      {\n        code: 'RPI7',\n        name: 'Davao del Norte',\n      },\n      {\n        code: 'RP25',\n        name: 'Davao del Sur',\n      },\n      {\n        code: 'RPI9',\n        name: 'Dinagat Islands',\n      },\n      {\n        code: 'RP23',\n        name: 'Eastern Samar',\n      },\n      {\n        code: 'RPJ3',\n        name: 'Guimaras',\n      },\n      {\n        code: 'RP27',\n        name: 'Ifugao',\n      },\n      {\n        code: 'RP28',\n        name: 'Ilocos Norte',\n      },\n      {\n        code: 'RP29',\n        name: 'Ilocos Sur',\n      },\n      {\n        code: 'RP30',\n        name: 'Iloilo',\n      },\n      {\n        code: 'RP31',\n        name: 'Isabela',\n      },\n      {\n        code: 'RPJ7',\n        name: 'Kalinga',\n      },\n      {\n        code: 'RP36',\n        name: 'La Union',\n      },\n      {\n        code: 'RP33',\n        name: 'Laguna',\n      },\n      {\n        code: 'RP34',\n        name: 'Lanao del Norte',\n      },\n      {\n        code: 'RP35',\n        name: 'Lanao del Sur',\n      },\n      {\n        code: 'RP37',\n        name: 'Leyte',\n      },\n      {\n        code: 'RP56',\n        name: 'Maguindanao',\n      },\n      {\n        code: 'RP38',\n        name: 'Marinduque',\n      },\n      {\n        code: 'RP39',\n        name: 'Masbate',\n      },\n      {\n        code: 'RPD9',\n        name: 'Metropolitan Manila',\n      },\n      {\n        code: 'RP42',\n        name: 'Misamis Occidental',\n      },\n      {\n        code: 'RP43',\n        name: 'Misamis Oriental',\n      },\n      {\n        code: 'RP44',\n        name: 'Mountain',\n      },\n      {\n        code: 'RPH3',\n        name: 'Negros Occidental',\n      },\n      {\n        code: 'RP46',\n        name: 'Negros Oriental',\n      },\n      {\n        code: 'RP67',\n        name: 'Northern Samar',\n      },\n      {\n        code: 'RP47',\n        name: 'Nueva Ecija',\n      },\n      {\n        code: 'RP48',\n        name: 'Nueva Vizcaya',\n      },\n      {\n        code: 'RP40',\n        name: 'Occidental Mindoro',\n      },\n      {\n        code: 'RP41',\n        name: 'Oriental Mindoro',\n      },\n      {\n        code: 'RP49',\n        name: 'Palawan',\n      },\n      {\n        code: 'RP50',\n        name: 'Pampanga',\n      },\n      {\n        code: 'RP51',\n        name: 'Pangasinan',\n      },\n      {\n        code: 'RPH2',\n        name: 'Quezon',\n      },\n      {\n        code: 'RP68',\n        name: 'Quirino',\n      },\n      {\n        code: 'RP53',\n        name: 'Rizal',\n      },\n      {\n        code: 'RP54',\n        name: 'Romblon',\n      },\n      {\n        code: 'RP55',\n        name: 'Samar',\n      },\n      {\n        code: 'PH72',\n        name: 'Sarangani',\n      },\n      {\n        code: 'RP69',\n        name: 'Siquijor',\n      },\n      {\n        code: 'RP58',\n        name: 'Sorsogon',\n      },\n      {\n        code: 'RP70',\n        name: 'South Cotabato',\n      },\n      {\n        code: 'RP59',\n        name: 'Southern Leyte',\n      },\n      {\n        code: 'RP71',\n        name: 'Sultan Kudarat',\n      },\n      {\n        code: 'RP60',\n        name: 'Sulu',\n      },\n      {\n        code: 'RP61',\n        name: 'Surigao del Norte',\n      },\n      {\n        code: 'RP62',\n        name: 'Surigao del Sur',\n      },\n      {\n        code: 'RPO3',\n        name: 'Tarlac',\n      },\n      {\n        code: 'RPO4',\n        name: 'Tawi-Tawi',\n      },\n      {\n        code: 'RPP1',\n        name: 'Zambales',\n      },\n      {\n        code: 'RPG7',\n        name: 'Zamboanga del Norte',\n      },\n      {\n        code: 'RP65',\n        name: 'Zamboanga del Sur',\n      },\n      {\n        code: 'RP66',\n        name: 'Zamboanga-Sibugay',\n      },\n    ],\n  },\n  {\n    code: 'PN',\n    id: 2431,\n    name: 'Pitcairn',\n    states: [],\n  },\n  {\n    code: 'PL',\n    id: 2320,\n    name: 'Poland',\n    states: [\n      {\n        code: 'PL-DS',\n        name: 'Dolnoslaskie',\n      },\n      {\n        code: 'PL-KP',\n        name: 'Kujawsko-pomorskie',\n      },\n      {\n        code: 'PL-LD',\n        name: 'Lódzkie',\n      },\n      {\n        code: 'PL-LU',\n        name: 'Lubelskie',\n      },\n      {\n        code: 'PL-LB',\n        name: 'Lubuskie',\n      },\n      {\n        code: 'PL-MA',\n        name: 'Malopolskie',\n      },\n      {\n        code: 'PL-MZ',\n        name: 'Mazowieckie',\n      },\n      {\n        code: 'PL-OP',\n        name: 'Opolskie',\n      },\n      {\n        code: 'PL-PK',\n        name: 'Podkarpackie',\n      },\n      {\n        code: 'PL-PD',\n        name: 'Podlaskie',\n      },\n      {\n        code: 'PL-PM',\n        name: 'Pomorskie',\n      },\n      {\n        code: 'PL-SL',\n        name: 'Slaskie',\n      },\n      {\n        code: 'PL-SK',\n        name: 'Swietokrzyskie',\n      },\n      {\n        code: 'PL-WN',\n        name: 'Warminsko-mazurskie',\n      },\n      {\n        code: 'PL-WP',\n        name: 'Wielkopolskie',\n      },\n    ],\n  },\n  {\n    code: 'PT',\n    id: 2321,\n    name: 'Portugal',\n    states: [\n      {\n        code: 'PO23',\n        name: 'Acores Autonomous',\n      },\n      {\n        code: 'PO02',\n        name: 'Aveiro',\n      },\n      {\n        code: 'PO03',\n        name: 'Beja',\n      },\n      {\n        code: 'PO04',\n        name: 'Braga',\n      },\n      {\n        code: 'PO05',\n        name: 'Braganca',\n      },\n      {\n        code: 'PO06',\n        name: 'Castelo Branco',\n      },\n      {\n        code: 'PO07',\n        name: 'Coimbra',\n      },\n      {\n        code: 'PO08',\n        name: 'Evora',\n      },\n      {\n        code: 'PO09',\n        name: 'Faro',\n      },\n      {\n        code: 'PO11',\n        name: 'Guarda',\n      },\n      {\n        code: 'PO13',\n        name: 'Leiria',\n      },\n      {\n        code: 'PO14',\n        name: 'Lisboa',\n      },\n      {\n        code: 'PO10',\n        name: 'Madeira Autonomous',\n      },\n      {\n        code: 'PO16',\n        name: 'Portalegre',\n      },\n      {\n        code: 'PO17',\n        name: 'Porto',\n      },\n      {\n        code: 'PO18',\n        name: 'Santarem',\n      },\n      {\n        code: 'PO19',\n        name: 'Setubal',\n      },\n      {\n        code: 'PO20',\n        name: 'Viana do Castelo',\n      },\n      {\n        code: 'PO21',\n        name: 'Vila Real',\n      },\n      {\n        code: 'PO22',\n        name: 'Viseu',\n      },\n    ],\n  },\n  {\n    code: 'PR',\n    id: 2374,\n    name: 'Puerto Rico',\n    states: [\n      {\n        code: 'PR.AJ',\n        name: 'Adjuntas',\n      },\n      {\n        code: 'PR.AD',\n        name: 'Aguada',\n      },\n      {\n        code: 'PR.AL',\n        name: 'Aguadilla',\n      },\n      {\n        code: 'PR.AB',\n        name: 'Aguas Buenas',\n      },\n      {\n        code: 'PR.AI',\n        name: 'Aibonito',\n      },\n      {\n        code: 'PR.AN',\n        name: 'Añasco',\n      },\n      {\n        code: 'PR.AC',\n        name: 'Arecibo',\n      },\n      {\n        code: 'PR.AR',\n        name: 'Arroyo',\n      },\n      {\n        code: 'PR.BC',\n        name: 'Barceloneta',\n      },\n      {\n        code: 'PR.BQ',\n        name: 'Barranquitas',\n      },\n      {\n        code: 'PR.BY',\n        name: 'Bayamón',\n      },\n      {\n        code: 'PR.CR',\n        name: 'Cabo Rojo',\n      },\n      {\n        code: 'PR.CG',\n        name: 'Caguas',\n      },\n      {\n        code: 'PR.CA',\n        name: 'Camuy',\n      },\n      {\n        code: 'PR.CV',\n        name: 'Canóvanas',\n      },\n      {\n        code: 'PR.CN',\n        name: 'Carolina',\n      },\n      {\n        code: 'PR.CT',\n        name: 'Cataño',\n      },\n      {\n        code: 'PR.CY',\n        name: 'Cayey',\n      },\n      {\n        code: 'PR.CB',\n        name: 'Ceiba',\n      },\n      {\n        code: 'PR.CL',\n        name: 'Ciales',\n      },\n      {\n        code: 'PR.CD',\n        name: 'Cidra',\n      },\n      {\n        code: 'PR.CO',\n        name: 'Coamo',\n      },\n      {\n        code: 'PR.CM',\n        name: 'Comerío',\n      },\n      {\n        code: 'PR.CZ',\n        name: 'Corozal',\n      },\n      {\n        code: 'PR.CU',\n        name: 'Culebra',\n      },\n      {\n        code: 'PR.DO',\n        name: 'Dorado',\n      },\n      {\n        code: 'PR.FJ',\n        name: 'Fajardo',\n      },\n      {\n        code: 'PR.FL',\n        name: 'Florida',\n      },\n      {\n        code: 'PR.GC',\n        name: 'Guánica',\n      },\n      {\n        code: 'PR.GM',\n        name: 'Guayama',\n      },\n      {\n        code: 'PR.GL',\n        name: 'Guayanilla',\n      },\n      {\n        code: 'PR.GB',\n        name: 'Guaynabo',\n      },\n      {\n        code: 'PR.GR',\n        name: 'Gurabo',\n      },\n      {\n        code: 'PR.HA',\n        name: 'Hatillo',\n      },\n      {\n        code: 'PR.HO',\n        name: 'Hormigueros',\n      },\n      {\n        code: 'PR.HU',\n        name: 'Humacao',\n      },\n      {\n        code: 'PR.IS',\n        name: 'Isabela',\n      },\n      {\n        code: 'PR.JY',\n        name: 'Jayuya',\n      },\n      {\n        code: 'PR.JD',\n        name: 'Juana Díaz',\n      },\n      {\n        code: 'PR.JC',\n        name: 'Juncos',\n      },\n      {\n        code: 'PR.LJ',\n        name: 'Lajas',\n      },\n      {\n        code: 'PR.LR',\n        name: 'Lares',\n      },\n      {\n        code: 'PR.LM',\n        name: 'Las Marías',\n      },\n      {\n        code: 'PR.LP',\n        name: 'Las Piedras',\n      },\n      {\n        code: 'PR.LZ',\n        name: 'Loíza',\n      },\n      {\n        code: 'PR.LQ',\n        name: 'Luquillo',\n      },\n      {\n        code: 'PR.MT',\n        name: 'Manatí',\n      },\n      {\n        code: 'PR.MR',\n        name: 'Maricao',\n      },\n      {\n        code: 'PR.MB',\n        name: 'Maunabo',\n      },\n      {\n        code: 'PR.MG',\n        name: 'Mayagüez',\n      },\n      {\n        code: 'PR.MC',\n        name: 'Moca',\n      },\n      {\n        code: 'PR.MV',\n        name: 'Morovis',\n      },\n      {\n        code: 'PR.NG',\n        name: 'Naguabo',\n      },\n      {\n        code: 'PR.NR',\n        name: 'Naranjito',\n      },\n      {\n        code: 'PR.OR',\n        name: 'Orocovis',\n      },\n      {\n        code: 'PR.PT',\n        name: 'Patillas',\n      },\n      {\n        code: 'PR.PN\\t',\n        name: 'Peñuelas',\n      },\n      {\n        code: 'PR.PO',\n        name: 'Ponce',\n      },\n      {\n        code: 'PR.QB',\n        name: 'Quebradillas',\n      },\n      {\n        code: 'PR.RC',\n        name: 'Rincón',\n      },\n      {\n        code: 'PR.RG',\n        name: 'Río Grande',\n      },\n      {\n        code: 'PR.SB',\n        name: 'Sabana Grande',\n      },\n      {\n        code: 'PR.SA',\n        name: 'Salinas',\n      },\n      {\n        code: 'PR.SG',\n        name: 'San Germán',\n      },\n      {\n        code: 'PR.SJ',\n        name: 'San Juan',\n      },\n      {\n        code: 'PR.SL',\n        name: 'San Lorenzo',\n      },\n      {\n        code: 'PR.SS',\n        name: 'San Sebastián',\n      },\n      {\n        code: 'PR.SI',\n        name: 'Santa Isabel',\n      },\n      {\n        code: 'PR.TA',\n        name: 'Toa Alta',\n      },\n      {\n        code: 'PR.TB',\n        name: 'Toa Baja',\n      },\n      {\n        code: 'PR.TJ',\n        name: 'Trujillo Alto',\n      },\n      {\n        code: 'PR.UT',\n        name: 'Utuado',\n      },\n      {\n        code: 'PR.VA',\n        name: 'Vega Alta',\n      },\n      {\n        code: 'PR.VB',\n        name: 'Vega Baja',\n      },\n      {\n        code: 'PR.VQ',\n        name: 'Vieques',\n      },\n      {\n        code: 'PR.VL',\n        name: 'Villalba',\n      },\n      {\n        code: 'PR.YB',\n        name: 'Yabucoa',\n      },\n      {\n        code: 'PR.YU',\n        name: 'Yauco',\n      },\n    ],\n  },\n  {\n    code: 'QA',\n    id: 2322,\n    name: 'Qatar',\n    states: [\n      {\n        code: 'QA01',\n        name: 'Ad Dawhah',\n      },\n      {\n        code: 'QA13',\n        name: 'Al Daayen',\n      },\n      {\n        code: 'QA04',\n        name: 'Al Khawr',\n      },\n      {\n        code: 'QA10',\n        name: 'Al Wakrah',\n      },\n      {\n        code: 'QA14',\n        name: 'Al-Shahaniya',\n      },\n      {\n        code: 'QA06',\n        name: 'Ar Rayyan',\n      },\n      {\n        code: 'QA08',\n        name: 'Madinat ach Shamal',\n      },\n      {\n        code: 'QA09',\n        name: 'Umm Salal',\n      },\n    ],\n  },\n  {\n    code: 'R999',\n    id: 2398,\n    name: 'Reunion',\n    states: [],\n  },\n  {\n    code: 'RO',\n    id: 2323,\n    name: 'Romania',\n    states: [\n      {\n        code: 'RO-AB',\n        name: 'Alba',\n      },\n      {\n        code: 'RO-AR',\n        name: 'Arad',\n      },\n      {\n        code: 'RO-AG',\n        name: 'Arges',\n      },\n      {\n        code: 'RO-BC',\n        name: 'Bacau',\n      },\n      {\n        code: 'RO-BH',\n        name: 'Bihor',\n      },\n      {\n        code: 'RO-BN',\n        name: 'Bistrita-Nasaud',\n      },\n      {\n        code: 'RO-BT',\n        name: 'Botosani',\n      },\n      {\n        code: 'RO-BR',\n        name: 'Braila',\n      },\n      {\n        code: 'RO-BV',\n        name: 'Brasov',\n      },\n      {\n        code: 'RO-B',\n        name: 'Bucuresti',\n      },\n      {\n        code: 'RO-BZ',\n        name: 'Buzau',\n      },\n      {\n        code: 'RO-CL',\n        name: 'Calarasi',\n      },\n      {\n        code: 'RO-CS',\n        name: 'Caras-Severin',\n      },\n      {\n        code: 'RO-CJ',\n        name: 'Cluj',\n      },\n      {\n        code: 'RO-CT',\n        name: 'Constanta',\n      },\n      {\n        code: 'RO-CV',\n        name: 'Covasna',\n      },\n      {\n        code: 'RO-DB',\n        name: 'Dâmbovita',\n      },\n      {\n        code: 'RO-DJ',\n        name: 'Dolj',\n      },\n      {\n        code: 'RO-GL',\n        name: 'Galati',\n      },\n      {\n        code: 'RO-GR',\n        name: 'Giurgiu',\n      },\n      {\n        code: 'RO-GJ',\n        name: 'Gorj',\n      },\n      {\n        code: 'RO-HR',\n        name: 'Harghita',\n      },\n      {\n        code: 'RO-HD',\n        name: 'Hunedoara',\n      },\n      {\n        code: 'RO-IL',\n        name: 'Ialomita',\n      },\n      {\n        code: 'RO-IS',\n        name: 'Iasi',\n      },\n      {\n        code: 'RO-IF',\n        name: 'Ilfov',\n      },\n      {\n        code: 'RO-MM',\n        name: 'Maramures',\n      },\n      {\n        code: 'RO-MH',\n        name: 'Mehedinti',\n      },\n      {\n        code: 'RO-MS',\n        name: 'Mures',\n      },\n      {\n        code: 'RO-NT',\n        name: 'Neamt',\n      },\n      {\n        code: 'RO-OT',\n        name: 'Olt',\n      },\n      {\n        code: 'RO-PH',\n        name: 'Prahova',\n      },\n      {\n        code: 'RO-SJ',\n        name: 'Salaj',\n      },\n      {\n        code: 'RO-SM',\n        name: 'Satu Mare',\n      },\n      {\n        code: 'RO-SB',\n        name: 'Sibiu',\n      },\n      {\n        code: 'RO-SV',\n        name: 'Suceava',\n      },\n      {\n        code: 'RO-TR',\n        name: 'Teleorman',\n      },\n      {\n        code: 'RO-TM',\n        name: 'Timis',\n      },\n      {\n        code: 'RO-TL',\n        name: 'Tulcea',\n      },\n      {\n        code: 'RO-VL',\n        name: 'Vâlcea',\n      },\n      {\n        code: 'RO-VS',\n        name: 'Vaslui',\n      },\n      {\n        code: 'RO-VN',\n        name: 'Vrancea',\n      },\n    ],\n  },\n  {\n    code: 'RU',\n    id: 2324,\n    name: 'Russian Federation',\n    states: [\n      {\n        code: 'RS01',\n        name: 'Adygeya Republic',\n      },\n      {\n        code: 'RS02',\n        name: 'Aginskiy Buryatskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS03',\n        name: 'Altay Republic',\n      },\n      {\n        code: 'RS04',\n        name: 'Altayskiy Kray',\n      },\n      {\n        code: 'RS05',\n        name: \"Amurskaya Oblast'\",\n      },\n      {\n        code: 'RS06',\n        name: \"Arkhangel'skaya Oblast'\",\n      },\n      {\n        code: 'RS07',\n        name: \"Astrakhanskaya Oblast'\",\n      },\n      {\n        code: 'RS08',\n        name: 'Bashkortostan Republic',\n      },\n      {\n        code: 'RS09',\n        name: \"Belgorodskaya Oblast'\",\n      },\n      {\n        code: 'RS10',\n        name: \"Bryanskaya Oblast'\",\n      },\n      {\n        code: 'RS11',\n        name: 'Buryatiya Republic',\n      },\n      {\n        code: 'RSCI',\n        name: 'Chechnya Republic',\n      },\n      {\n        code: 'RS13',\n        name: \"Chelyabinskaya Oblast'\",\n      },\n      {\n        code: 'RS14',\n        name: \"Chitinskaya Oblast'\",\n      },\n      {\n        code: 'RS15',\n        name: 'Chukotskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS16',\n        name: 'Chuvashiya Republic',\n      },\n      {\n        code: 'RS17',\n        name: 'Dagestan Republic',\n      },\n      {\n        code: 'RS18',\n        name: 'Evenkiyskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS20',\n        name: \"Irkutskaya Oblast'\",\n      },\n      {\n        code: 'RS21',\n        name: \"Ivanovskaya Oblast'\",\n      },\n      {\n        code: 'RS22',\n        name: 'Kabardino-Balkariya Republic',\n      },\n      {\n        code: 'RS23',\n        name: \"Kaliningradskaya Oblast'\",\n      },\n      {\n        code: 'RS24',\n        name: 'Kalmykiya Republic',\n      },\n      {\n        code: 'RS25',\n        name: \"Kaluzhskaya Oblast'\",\n      },\n      {\n        code: 'RS26',\n        name: \"Kamchatskaya Oblast'\",\n      },\n      {\n        code: 'RS27',\n        name: 'Karachayevo-Cherkesiya Republic',\n      },\n      {\n        code: 'RS28',\n        name: 'Kareliya Republic',\n      },\n      {\n        code: 'RS29',\n        name: \"Kemerovskaya Oblast'\",\n      },\n      {\n        code: 'RS30',\n        name: 'Khabarovskiy Kray',\n      },\n      {\n        code: 'RS31',\n        name: 'Khakasiya Republic',\n      },\n      {\n        code: 'RS32',\n        name: 'Khanty-Mansiyskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS33',\n        name: \"Kirovskaya Oblast'\",\n      },\n      {\n        code: 'RS34',\n        name: 'Komi Republic',\n      },\n      {\n        code: 'RS36',\n        name: 'Koryakskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS37',\n        name: \"Kostromskaya Oblast'\",\n      },\n      {\n        code: 'RS38',\n        name: 'Krasnodarskiy Kray',\n      },\n      {\n        code: 'RS39',\n        name: 'Krasnoyarskiy Kray',\n      },\n      {\n        code: 'RS40',\n        name: \"Kurganskaya Oblast'\",\n      },\n      {\n        code: 'RS41',\n        name: \"Kurskaya Oblast'\",\n      },\n      {\n        code: 'RS42',\n        name: \"Leningradskaya Oblast'\",\n      },\n      {\n        code: 'RS43',\n        name: \"Lipetskaya Oblast'\",\n      },\n      {\n        code: 'RS44',\n        name: \"Magadanskaya Oblast'\",\n      },\n      {\n        code: 'RS45',\n        name: 'Mariy-El Republic',\n      },\n      {\n        code: 'RS46',\n        name: 'Mordoviya Republic',\n      },\n      {\n        code: 'RS47',\n        name: \"Moskovskaya Oblast'\",\n      },\n      {\n        code: 'RS48',\n        name: 'Moskva Federal City',\n      },\n      {\n        code: 'RS49',\n        name: \"Murmanskaya Oblast'\",\n      },\n      {\n        code: 'RS50',\n        name: 'Nenetskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS51',\n        name: \"Nizhegorodskaya Oblast'\",\n      },\n      {\n        code: 'RS52',\n        name: \"Novgorodskaya Oblast'\",\n      },\n      {\n        code: 'RS53',\n        name: \"Novosibirskaya Oblast'\",\n      },\n      {\n        code: 'RS54',\n        name: \"Omskaya Oblast'\",\n      },\n      {\n        code: 'RS55',\n        name: \"Orenburgskaya Oblast'\",\n      },\n      {\n        code: 'RS56',\n        name: \"Orlovskaya Oblast'\",\n      },\n      {\n        code: 'RS57',\n        name: \"Penzenskaya Oblast'\",\n      },\n      {\n        code: 'RS90',\n        name: 'Permskiy Kray',\n      },\n      {\n        code: 'RS59',\n        name: 'Primorskiy Kray',\n      },\n      {\n        code: 'RS60',\n        name: \"Pskovskaya Oblast'\",\n      },\n      {\n        code: 'RS61',\n        name: \"Rostovskaya Oblast'\",\n      },\n      {\n        code: 'RS62',\n        name: \"Ryazanskaya Oblast'\",\n      },\n      {\n        code: 'RS63',\n        name: 'Sakha (Yakutiya) Republic',\n      },\n      {\n        code: 'RS64',\n        name: \"Sakhalinskaya Oblast'\",\n      },\n      {\n        code: 'RS65',\n        name: \"Samarskaya Oblast'\",\n      },\n      {\n        code: 'RS66',\n        name: 'Sankt-Peterburg Federal City',\n      },\n      {\n        code: 'RS67',\n        name: \"Saratovskaya Oblast'\",\n      },\n      {\n        code: 'RS68',\n        name: 'Severnaya Osetiya-Alaniya Respublika',\n      },\n      {\n        code: 'RS69',\n        name: \"Smolenskaya Oblast'\",\n      },\n      {\n        code: 'RS70',\n        name: \"Stavropol'skiy Kray\",\n      },\n      {\n        code: 'RS71',\n        name: \"Sverdlovskaya Oblast'\",\n      },\n      {\n        code: 'RS72',\n        name: \"Tambovskaya Oblast'\",\n      },\n      {\n        code: 'RS73',\n        name: 'Tatarstan Republic',\n      },\n      {\n        code: 'RS74',\n        name: 'Taymyrskiy (Dolgano-Nenetskiy) Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS75',\n        name: \"Tomskaya Oblast'\",\n      },\n      {\n        code: 'RS76',\n        name: \"Tul'skaya Oblast'\",\n      },\n      {\n        code: 'RS77',\n        name: \"Tverskaya Oblast'\",\n      },\n      {\n        code: 'RS78',\n        name: \"Tyumenskaya Oblast'\",\n      },\n      {\n        code: 'RS79',\n        name: 'Tyva Republic',\n      },\n      {\n        code: 'RS80',\n        name: 'Udmurtiya Republic',\n      },\n      {\n        code: 'RS81',\n        name: \"Ul'yanovskaya Oblast'\",\n      },\n      {\n        code: 'RS82',\n        name: \"Ust'-Ordynskiy Buryatskiy Avtonomnyy Okrug\",\n      },\n      {\n        code: 'RS83',\n        name: \"Vladimirskaya Oblast'\",\n      },\n      {\n        code: 'RS84',\n        name: \"Volgogradskaya Oblast'\",\n      },\n      {\n        code: 'RS85',\n        name: \"Vologodskaya Oblast'\",\n      },\n      {\n        code: 'RS86',\n        name: \"Voronezhskaya Oblast'\",\n      },\n      {\n        code: 'RS87',\n        name: 'Yamalo-Nenetskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS88',\n        name: \"Yaroslavskaya Oblast'\",\n      },\n      {\n        code: 'RS89',\n        name: \"Yevreyskaya Avtonomnaya Oblast'\",\n      },\n    ],\n  },\n  {\n    code: 'RW',\n    id: 2325,\n    name: 'Rwanda',\n    states: [\n      {\n        code: 'RW11',\n        name: 'Eastern',\n      },\n      {\n        code: 'RW12',\n        name: 'Kigali City',\n      },\n      {\n        code: 'RW13',\n        name: 'Northern',\n      },\n      {\n        code: 'RW15',\n        name: 'Southern',\n      },\n      {\n        code: 'RW14',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'BL',\n    id: 2432,\n    name: 'Saint Barthélemy',\n    states: [],\n  },\n  {\n    code: 'SH',\n    id: 2433,\n    name: 'Saint Helena; Ascension and Tristan Da Cunha',\n    states: [],\n  },\n  {\n    code: 'KN',\n    id: 2399,\n    name: 'Saint Kitts and Nevis',\n    states: [],\n  },\n  {\n    code: 'LC',\n    id: 2326,\n    name: 'Saint Lucia',\n    states: [],\n  },\n  {\n    code: 'MF',\n    id: 2434,\n    name: 'Saint Martin',\n    states: [\n      {\n        code: 'MF.SM',\n        name: 'Saint Martin',\n      },\n    ],\n  },\n  {\n    code: 'PM',\n    id: 2435,\n    name: 'Saint Pierre And Miquelon',\n    states: [],\n  },\n  {\n    code: 'VC',\n    id: 2400,\n    name: 'Saint Vincent and Grenadines',\n    states: [],\n  },\n  {\n    code: 'WS',\n    id: 2401,\n    name: 'Samoa',\n    states: [\n      {\n        code: 'WS01',\n        name: \"A'ana\",\n      },\n      {\n        code: 'WS02',\n        name: 'Aiga-i-le-Tai',\n      },\n      {\n        code: 'WS03',\n        name: 'Atua',\n      },\n      {\n        code: 'WS04',\n        name: \"Fa'asaleleaga\",\n      },\n      {\n        code: 'WS05',\n        name: \"Gaga'emauga\",\n      },\n      {\n        code: 'WS07',\n        name: 'Gagaifomauga',\n      },\n      {\n        code: 'WS08',\n        name: 'Palauli',\n      },\n      {\n        code: 'WS09',\n        name: \"Satupa'itea\",\n      },\n      {\n        code: 'WS10',\n        name: 'Tuamasaga',\n      },\n      {\n        code: 'WS06',\n        name: \"Va'a-o-Fonoti\",\n      },\n      {\n        code: 'WS11',\n        name: 'Vaisigano',\n      },\n    ],\n  },\n  {\n    code: 'SM',\n    id: 2327,\n    name: 'San Marino',\n    states: [],\n  },\n  {\n    code: 'TP',\n    id: 2403,\n    name: 'Sao Tome and Principe',\n    states: [],\n  },\n  {\n    code: 'SA',\n    id: 2328,\n    name: 'Saudi Arabia',\n    states: [\n      {\n        code: 'SA02',\n        name: 'Al Bahah',\n      },\n      {\n        code: 'SA15',\n        name: 'Al Hudud ash Shamaliyah',\n      },\n      {\n        code: 'SA20',\n        name: 'Al Jawf',\n      },\n      {\n        code: 'SA05',\n        name: 'Al Madinah',\n      },\n      {\n        code: 'SA08',\n        name: 'Al Qasim',\n      },\n      {\n        code: 'SA10',\n        name: 'Ar Riyad',\n      },\n      {\n        code: 'SA06',\n        name: 'Ash Sharqiyah',\n      },\n      {\n        code: 'SA11',\n        name: 'Asir',\n      },\n      {\n        code: 'SA13',\n        name: \"Ha'il\",\n      },\n      {\n        code: 'SA17',\n        name: 'Jizan',\n      },\n      {\n        code: 'SA14',\n        name: 'Makkah',\n      },\n      {\n        code: 'SA16',\n        name: 'Najran',\n      },\n      {\n        code: 'SA19',\n        name: 'Tabuk',\n      },\n    ],\n  },\n  {\n    code: 'SN',\n    id: 2329,\n    name: 'Senegal',\n    states: [\n      {\n        code: 'SG01',\n        name: 'Dakar',\n      },\n      {\n        code: 'SG03',\n        name: 'Diourbel',\n      },\n      {\n        code: 'SG09',\n        name: 'Fatick',\n      },\n      {\n        code: 'SG16',\n        name: 'Kaffrine',\n      },\n      {\n        code: 'SG10',\n        name: 'Kaolack',\n      },\n      {\n        code: 'SG17',\n        name: 'Kédougou',\n      },\n      {\n        code: 'SG11',\n        name: 'Kolda',\n      },\n      {\n        code: 'SG13',\n        name: 'Louga',\n      },\n      {\n        code: 'SG15',\n        name: 'Matam',\n      },\n      {\n        code: 'SG14',\n        name: 'Saint-Louis',\n      },\n      {\n        code: 'SG18',\n        name: 'Sédhiou',\n      },\n      {\n        code: 'SG05',\n        name: 'Tambacounda',\n      },\n      {\n        code: 'SG07',\n        name: 'Thiès',\n      },\n      {\n        code: 'SG12',\n        name: 'Ziguinchor',\n      },\n    ],\n  },\n  {\n    code: 'RI',\n    id: 2402,\n    name: 'Serbia',\n    states: [\n      {\n        code: 'RS-00',\n        name: 'Belgrade',\n      },\n      {\n        code: 'RS-14',\n        name: 'Borski okrug',\n      },\n      {\n        code: 'RS-11',\n        name: 'Branicevski okrug',\n      },\n      {\n        code: 'RS-23',\n        name: 'Jablanicki okrug',\n      },\n      {\n        code: 'RS-06',\n        name: 'Južnobanatski okrug',\n      },\n      {\n        code: 'RS-04',\n        name: 'Južnobanatski okrug',\n      },\n      {\n        code: 'RS-09',\n        name: 'Kolubarski okrug',\n      },\n      {\n        code: 'RS-25',\n        name: 'Kosovski okrug',\n      },\n      {\n        code: 'RS-28',\n        name: 'Kosovsko-Mitrovacki okrug',\n      },\n      {\n        code: 'RS-29',\n        name: 'Kosovsko-Pomoravski okrug',\n      },\n      {\n        code: 'RS-08',\n        name: 'Macvanski okrug',\n      },\n      {\n        code: 'RS-17',\n        name: 'Moravicki okrug',\n      },\n      {\n        code: 'RS-20',\n        name: 'Nišavski okrug',\n      },\n      {\n        code: 'RS-24',\n        name: 'Pcinjski okrug',\n      },\n      {\n        code: 'RS-26',\n        name: 'Pecki okrug',\n      },\n      {\n        code: 'RS-22',\n        name: 'Pirotski okrug',\n      },\n      {\n        code: 'RS-10',\n        name: 'Podunavski okrug',\n      },\n      {\n        code: 'RS-13',\n        name: 'Pomoravski okrug',\n      },\n      {\n        code: 'RS-27',\n        name: 'Prizrenski okrug',\n      },\n      {\n        code: 'RS-19',\n        name: 'Rasinski okrug',\n      },\n      {\n        code: 'RS-18',\n        name: 'Raška okrug',\n      },\n      {\n        code: 'RS-01',\n        name: 'Severnobacki okrug',\n      },\n      {\n        code: 'RS-03',\n        name: 'Severnobanatski okrug',\n      },\n      {\n        code: 'RS-02',\n        name: 'Srednjebanatski okrug',\n      },\n      {\n        code: 'RS-07',\n        name: 'Sremski okrug',\n      },\n      {\n        code: 'RS-12',\n        name: 'Šumadijski okrug',\n      },\n      {\n        code: 'RS-21',\n        name: 'Toplièki okrug',\n      },\n      {\n        code: 'RS-15',\n        name: 'Zajeèarski okrug',\n      },\n      {\n        code: 'RS-05',\n        name: 'Zapadnobaèki okrug',\n      },\n      {\n        code: 'RS-16',\n        name: 'Zlatiborski okrug',\n      },\n    ],\n  },\n  {\n    code: 'SC',\n    id: 2331,\n    name: 'Seychelles',\n    states: [],\n  },\n  {\n    code: 'SL',\n    id: 2332,\n    name: 'Sierra Leone',\n    states: [\n      {\n        code: 'SL01',\n        name: 'Eastern',\n      },\n      {\n        code: 'SL02',\n        name: 'Northern',\n      },\n      {\n        code: 'SL03',\n        name: 'Southern',\n      },\n      {\n        code: 'SL04',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'SG',\n    id: 2333,\n    name: 'Singapore',\n    states: [\n      {\n        code: 'SG01',\n        name: 'Central Singapore',\n      },\n      {\n        code: 'SG02',\n        name: 'North East',\n      },\n      {\n        code: 'SG03',\n        name: 'North West',\n      },\n      {\n        code: 'SG04',\n        name: 'South East',\n      },\n      {\n        code: 'SG05',\n        name: 'South West',\n      },\n    ],\n  },\n  {\n    code: 'SX',\n    id: 2448,\n    name: 'Sint Maarten',\n    states: [\n      {\n        code: 'SX.SM',\n        name: 'Sint Maarten',\n      },\n    ],\n  },\n  {\n    code: 'SK',\n    id: 2334,\n    name: 'Slovakia',\n    states: [\n      {\n        code: 'SK-BC',\n        name: 'Banskobystrický kraj',\n      },\n      {\n        code: 'SK-BL',\n        name: 'Bratislavský kraj',\n      },\n      {\n        code: 'SK-KI',\n        name: 'Košický kraj',\n      },\n      {\n        code: 'SK-NI',\n        name: 'Nitriansky kraj',\n      },\n      {\n        code: 'SK-PV',\n        name: 'Prešovský kraj',\n      },\n      {\n        code: 'SK-TC',\n        name: 'Trenciansky kraj',\n      },\n      {\n        code: 'SK-TA',\n        name: 'Trnavský kraj',\n      },\n      {\n        code: 'SK-ZI',\n        name: 'Žilinský kraj',\n      },\n    ],\n  },\n  {\n    code: 'SI',\n    id: 2335,\n    name: 'Slovenia',\n    states: [\n      {\n        code: 'SI-001',\n        name: 'Ajdovšcina',\n      },\n      {\n        code: 'SI-195',\n        name: 'Apace',\n      },\n      {\n        code: 'SI-002',\n        name: 'Beltinci',\n      },\n      {\n        code: 'SI-148',\n        name: 'Benedikt',\n      },\n      {\n        code: 'SI-149',\n        name: 'Bistrica ob Sotli',\n      },\n      {\n        code: 'SI-003',\n        name: 'Bled',\n      },\n      {\n        code: 'SI-150',\n        name: 'Bloke',\n      },\n      {\n        code: 'SI-004',\n        name: 'Bohinj',\n      },\n      {\n        code: 'SI-005',\n        name: 'Borovnica',\n      },\n      {\n        code: 'SI-006',\n        name: 'Bovec',\n      },\n      {\n        code: 'SI-151',\n        name: 'Braslovce',\n      },\n      {\n        code: 'SI-007',\n        name: 'Brda',\n      },\n      {\n        code: 'SI-009',\n        name: 'Brežice',\n      },\n      {\n        code: 'SI-008',\n        name: 'Brezovica',\n      },\n      {\n        code: 'SI-152',\n        name: 'Cankova',\n      },\n      {\n        code: 'SI-011',\n        name: 'Celje',\n      },\n      {\n        code: 'SI-012',\n        name: 'Cerklje na Gorenjskem',\n      },\n      {\n        code: 'SI-013',\n        name: 'Cerknica',\n      },\n      {\n        code: 'SI-014',\n        name: 'Cerkno',\n      },\n      {\n        code: 'SI-153',\n        name: 'Cerkvenjak',\n      },\n      {\n        code: 'SI-197',\n        name: 'Cirkulane',\n      },\n      {\n        code: 'SI-015',\n        name: 'Crenšovci',\n      },\n      {\n        code: 'SI-016',\n        name: 'Crna na Koroškem',\n      },\n      {\n        code: 'SI-017',\n        name: 'Crnomelj',\n      },\n      {\n        code: 'SI-018',\n        name: 'Destrnik',\n      },\n      {\n        code: 'SI-019',\n        name: 'Divaca',\n      },\n      {\n        code: 'SI-154',\n        name: 'Dobje',\n      },\n      {\n        code: 'SI-020',\n        name: 'Dobrepolje',\n      },\n      {\n        code: 'SI-155',\n        name: 'Dobrna',\n      },\n      {\n        code: 'SI-021',\n        name: 'Dobrova-Polhov Gradec',\n      },\n      {\n        code: 'SI-156',\n        name: 'Dobrovnik/Dobronak',\n      },\n      {\n        code: 'SI-022',\n        name: 'Dol pri Ljubljani',\n      },\n      {\n        code: 'SI-157',\n        name: 'Dolenjske Toplice',\n      },\n      {\n        code: 'SI-023',\n        name: 'Domžale',\n      },\n      {\n        code: 'SI-024',\n        name: 'Dornava',\n      },\n      {\n        code: 'SI-025',\n        name: 'Dravograd',\n      },\n      {\n        code: 'SI-026',\n        name: 'Duplek',\n      },\n      {\n        code: 'SI-027',\n        name: 'Gorenja vas-Poljane',\n      },\n      {\n        code: 'SI-028',\n        name: 'Gorišnica',\n      },\n      {\n        code: 'SI-207',\n        name: 'Gorje',\n      },\n      {\n        code: 'SI-029',\n        name: 'Gornja Radgona',\n      },\n      {\n        code: 'SI-030',\n        name: 'Gornji Grad',\n      },\n      {\n        code: 'SI-031',\n        name: 'Gornji Petrovci',\n      },\n      {\n        code: 'SI-158',\n        name: 'Grad',\n      },\n      {\n        code: 'SI-032',\n        name: 'Grosuplje',\n      },\n      {\n        code: 'SI-159',\n        name: 'Hajdina',\n      },\n      {\n        code: 'SI-160',\n        name: 'Hoce-Slivnica',\n      },\n      {\n        code: 'SI-161',\n        name: 'Hodoš/Hodos',\n      },\n      {\n        code: 'SI-162',\n        name: 'Horjul',\n      },\n      {\n        code: 'SI-034',\n        name: 'Hrastnik',\n      },\n      {\n        code: 'SI-035',\n        name: 'Hrpelje-Kozina',\n      },\n      {\n        code: 'SI-036',\n        name: 'Idrija',\n      },\n      {\n        code: 'SI-037',\n        name: 'Ig',\n      },\n      {\n        code: 'SI-038',\n        name: 'Ilirska Bistrica',\n      },\n      {\n        code: 'SI-039',\n        name: 'Ivancna Gorica',\n      },\n      {\n        code: 'SI-040',\n        name: 'Izola/Isola',\n      },\n      {\n        code: 'SI-041',\n        name: 'Jesenice',\n      },\n      {\n        code: 'SI-163',\n        name: 'Jezersko',\n      },\n      {\n        code: 'SI-042',\n        name: 'Juršinci',\n      },\n      {\n        code: 'SI-043',\n        name: 'Kamnik',\n      },\n      {\n        code: 'SI-044',\n        name: 'Kanal',\n      },\n      {\n        code: 'SI-045',\n        name: 'Kidricevo',\n      },\n      {\n        code: 'SI-046',\n        name: 'Kobarid',\n      },\n      {\n        code: 'SI-047',\n        name: 'Kobilje',\n      },\n      {\n        code: 'SI-048',\n        name: 'Kocevje',\n      },\n      {\n        code: 'SI-049',\n        name: 'Komen',\n      },\n      {\n        code: 'SI-164',\n        name: 'Komenda',\n      },\n      {\n        code: 'SI-050',\n        name: 'Koper/Capodistria',\n      },\n      {\n        code: 'SI-196',\n        name: 'Kosanjevica na Krki',\n      },\n      {\n        code: 'SI-165',\n        name: 'Kostel',\n      },\n      {\n        code: 'SI-051',\n        name: 'Kozje',\n      },\n      {\n        code: 'SI-052',\n        name: 'Kranj',\n      },\n      {\n        code: 'SI-053',\n        name: 'Kranjska Gora',\n      },\n      {\n        code: 'SI-166',\n        name: 'Križevci',\n      },\n      {\n        code: 'SI-054',\n        name: 'Krško',\n      },\n      {\n        code: 'SI-055',\n        name: 'Kungota',\n      },\n      {\n        code: 'SI-056',\n        name: 'Kuzma',\n      },\n      {\n        code: 'SI-057',\n        name: 'Laško',\n      },\n      {\n        code: 'SI-058',\n        name: 'Lenart',\n      },\n      {\n        code: 'SI-059',\n        name: 'Lendava/Lendva',\n      },\n      {\n        code: 'SI-060',\n        name: 'Litija',\n      },\n      {\n        code: 'SI-061',\n        name: 'Ljubljana',\n      },\n      {\n        code: 'SI-062',\n        name: 'Ljubno',\n      },\n      {\n        code: 'SI-063',\n        name: 'Ljutomer',\n      },\n      {\n        code: 'SI-208',\n        name: 'Log-Dragomer',\n      },\n      {\n        code: 'SI-064',\n        name: 'Logatec',\n      },\n      {\n        code: 'SI-065',\n        name: 'Loška dolina',\n      },\n      {\n        code: 'SI-066',\n        name: 'Loški Potok',\n      },\n      {\n        code: 'SI-167',\n        name: 'Lovrenc na Pohorju',\n      },\n      {\n        code: 'SI-067',\n        name: 'Luce',\n      },\n      {\n        code: 'SI-068',\n        name: 'Lukovica',\n      },\n      {\n        code: 'SI-069',\n        name: 'Majšperk',\n      },\n      {\n        code: 'SI-198',\n        name: 'Makole',\n      },\n      {\n        code: 'SI-070',\n        name: 'Maribor',\n      },\n      {\n        code: 'SI-168',\n        name: 'Markovci',\n      },\n      {\n        code: 'SI-071',\n        name: 'Medvode',\n      },\n      {\n        code: 'SI-072',\n        name: 'Mengeš',\n      },\n      {\n        code: 'SI-073',\n        name: 'Metlika',\n      },\n      {\n        code: 'SI-074',\n        name: 'Mežica',\n      },\n      {\n        code: 'SI-169',\n        name: 'Miklavž na Dravskem polju',\n      },\n      {\n        code: 'SI-075',\n        name: 'Miren-Kostanjevica',\n      },\n      {\n        code: 'SI-170',\n        name: 'Mirna Pec',\n      },\n      {\n        code: 'SI-076',\n        name: 'Mislinja',\n      },\n      {\n        code: 'SI-199',\n        name: 'Mokronog-Trebelno',\n      },\n      {\n        code: 'SI-077',\n        name: 'Moravce',\n      },\n      {\n        code: 'SI-078',\n        name: 'Moravske Toplice',\n      },\n      {\n        code: 'SI-079',\n        name: 'Mozirje',\n      },\n      {\n        code: 'SI-080',\n        name: 'Murska Sobota',\n      },\n      {\n        code: 'SI-081',\n        name: 'Muta',\n      },\n      {\n        code: 'SI-082',\n        name: 'Naklo',\n      },\n      {\n        code: 'SI-083',\n        name: 'Nazarje',\n      },\n      {\n        code: 'SI-084',\n        name: 'Nova Gorica',\n      },\n      {\n        code: 'SI-085',\n        name: 'Novo mesto',\n      },\n      {\n        code: 'SI-086',\n        name: 'Odranci',\n      },\n      {\n        code: 'SI-171',\n        name: 'Oplotnica',\n      },\n      {\n        code: 'SI-087',\n        name: 'Ormož',\n      },\n      {\n        code: 'SI-088',\n        name: 'Osilnica',\n      },\n      {\n        code: 'SI-089',\n        name: 'Pesnica',\n      },\n      {\n        code: 'SI-090',\n        name: 'Piran/Pirano',\n      },\n      {\n        code: 'SI-091',\n        name: 'Pivka',\n      },\n      {\n        code: 'SI-092',\n        name: 'Podcetrtek',\n      },\n      {\n        code: 'SI-172',\n        name: 'Podlehnik',\n      },\n      {\n        code: 'SI-093',\n        name: 'Podvelka',\n      },\n      {\n        code: 'SI-200',\n        name: 'Poljcane',\n      },\n      {\n        code: 'SI-173',\n        name: 'Polzela',\n      },\n      {\n        code: 'SI-094',\n        name: 'Postojna',\n      },\n      {\n        code: 'SI-174',\n        name: 'Prebold',\n      },\n      {\n        code: 'SI-095',\n        name: 'Preddvor',\n      },\n      {\n        code: 'SI-175',\n        name: 'Prevalje',\n      },\n      {\n        code: 'SI-096',\n        name: 'Ptuj',\n      },\n      {\n        code: 'SI-097',\n        name: 'Puconci',\n      },\n      {\n        code: 'SI-098',\n        name: 'Race-Fram',\n      },\n      {\n        code: 'SI-099',\n        name: 'Radece',\n      },\n      {\n        code: 'SI-100',\n        name: 'Radenci',\n      },\n      {\n        code: 'SI-101',\n        name: 'Radlje ob Dravi',\n      },\n      {\n        code: 'SI-102',\n        name: 'Radovljica',\n      },\n      {\n        code: 'SI-103',\n        name: 'Ravne na Koroškem',\n      },\n      {\n        code: 'SI-176',\n        name: 'Razkrižje',\n      },\n      {\n        code: 'SI-209',\n        name: 'Recica ob Savinji',\n      },\n      {\n        code: 'SI-201',\n        name: 'Rence-Vogrsko',\n      },\n      {\n        code: 'SI-177',\n        name: 'Ribnica na Pohorju',\n      },\n      {\n        code: 'SI-104',\n        name: 'Ribnica',\n      },\n      {\n        code: 'SI-106',\n        name: 'Rogaška Slatina',\n      },\n      {\n        code: 'SI-105',\n        name: 'Rogašovci',\n      },\n      {\n        code: 'SI-107',\n        name: 'Rogatec',\n      },\n      {\n        code: 'SI-108',\n        name: 'Ruše',\n      },\n      {\n        code: 'SI-033',\n        name: 'Šalovci',\n      },\n      {\n        code: 'SI-178',\n        name: 'Selnica ob Dravi',\n      },\n      {\n        code: 'SI-109',\n        name: 'Semic',\n      },\n      {\n        code: 'SI-183',\n        name: 'Šempeter-Vrtojba',\n      },\n      {\n        code: 'SI-117',\n        name: 'Šencur',\n      },\n      {\n        code: 'SI-118',\n        name: 'Šentilj',\n      },\n      {\n        code: 'SI-119',\n        name: 'Šentjernej',\n      },\n      {\n        code: 'SI-120',\n        name: 'Šentjur pri Celju',\n      },\n      {\n        code: 'SI-211',\n        name: 'Šentrupert',\n      },\n      {\n        code: 'SI-110',\n        name: 'Sevnica',\n      },\n      {\n        code: 'SI-111',\n        name: 'Sežana',\n      },\n      {\n        code: 'SI-121',\n        name: 'Škocjan',\n      },\n      {\n        code: 'SI-122',\n        name: 'Škofja Loka',\n      },\n      {\n        code: 'SI-123',\n        name: 'Škofljica',\n      },\n      {\n        code: 'SI-112',\n        name: 'Slovenj Gradec',\n      },\n      {\n        code: 'SI-113',\n        name: 'Slovenska Bistrica',\n      },\n      {\n        code: 'SI-114',\n        name: 'Slovenske Konjice',\n      },\n      {\n        code: 'SI-124',\n        name: 'Šmarje pri Jelšah',\n      },\n      {\n        code: 'SI-206',\n        name: 'Šmarješke Toplice',\n      },\n      {\n        code: 'SI-125',\n        name: 'Šmartno ob Paki',\n      },\n      {\n        code: 'SI-194',\n        name: 'Šmartno pri Litiji',\n      },\n      {\n        code: 'SI-194',\n        name: 'Šmartno pri Litiji',\n      },\n      {\n        code: 'SI-179',\n        name: 'Sodražica',\n      },\n      {\n        code: 'SI-180',\n        name: 'Solcava',\n      },\n      {\n        code: 'SI-126',\n        name: 'Šoštanj',\n      },\n      {\n        code: 'SI-202',\n        name: 'Središce ob Dravi',\n      },\n      {\n        code: 'SI-115',\n        name: 'Starše',\n      },\n      {\n        code: 'SI-127',\n        name: 'Štore',\n      },\n      {\n        code: 'SI-203',\n        name: 'Straža',\n      },\n      {\n        code: 'SI-181',\n        name: 'Sveta Ana',\n      },\n      {\n        code: 'SI-204',\n        name: 'Sveta Trojica v Slovenskih Goricah',\n      },\n      {\n        code: 'SI-182',\n        name: 'Sveti Andraž v Slovenskih goricah',\n      },\n      {\n        code: 'SI-116',\n        name: 'Sveti Jurij',\n      },\n      {\n        code: 'SI-210',\n        name: 'Sveti Jurij v Slovenskih Goricah',\n      },\n      {\n        code: 'SI-205',\n        name: 'Sveti Tomaž',\n      },\n      {\n        code: 'SI-184',\n        name: 'Tabor',\n      },\n      {\n        code: 'SI-010',\n        name: 'Tišina',\n      },\n      {\n        code: 'SI-128',\n        name: 'Tolmin',\n      },\n      {\n        code: 'SI-129',\n        name: 'Trbovlje',\n      },\n      {\n        code: 'SI-130',\n        name: 'Trebnje',\n      },\n      {\n        code: 'SI-185',\n        name: 'Trnovska vas',\n      },\n      {\n        code: 'SI-131',\n        name: 'Tržic',\n      },\n      {\n        code: 'SI-186',\n        name: 'Trzin',\n      },\n      {\n        code: 'SI-132',\n        name: 'Turnišce',\n      },\n      {\n        code: 'SI-133',\n        name: 'Velenje',\n      },\n      {\n        code: 'SI-187',\n        name: 'Velika Polana',\n      },\n      {\n        code: 'SI-134',\n        name: 'Velike Lašce',\n      },\n      {\n        code: 'SI-188',\n        name: 'Veržej',\n      },\n      {\n        code: 'SI-135',\n        name: 'Videm',\n      },\n      {\n        code: 'SI-136',\n        name: 'Vipava',\n      },\n      {\n        code: 'SI-137',\n        name: 'Vitanje',\n      },\n      {\n        code: 'SI-138',\n        name: 'Vodice',\n      },\n      {\n        code: 'SI-139',\n        name: 'Vojnik',\n      },\n      {\n        code: 'SI-189',\n        name: 'Vransko',\n      },\n      {\n        code: 'SI-140',\n        name: 'Vrhnika',\n      },\n      {\n        code: 'SI-141',\n        name: 'Vuzenica',\n      },\n      {\n        code: 'SI-142',\n        name: 'Zagorje ob Savi',\n      },\n      {\n        code: 'SI-190',\n        name: 'Žalec',\n      },\n      {\n        code: 'SI-143',\n        name: 'Zavrc',\n      },\n      {\n        code: 'SI-146',\n        name: 'Železniki',\n      },\n      {\n        code: 'SI-191',\n        name: 'Žetale',\n      },\n      {\n        code: 'SI-147',\n        name: 'Žiri',\n      },\n      {\n        code: 'SI-192',\n        name: 'Žirovnica',\n      },\n      {\n        code: 'SI-144',\n        name: 'Zrece',\n      },\n      {\n        code: 'SI-193',\n        name: 'Žužemberk',\n      },\n    ],\n  },\n  {\n    code: 'SB',\n    id: 2336,\n    name: 'Solomon Islands',\n    states: [],\n  },\n  {\n    code: 'SO',\n    id: 2337,\n    name: 'Somalia',\n    states: [\n      {\n        code: 'SO21',\n        name: 'Awdal',\n      },\n      {\n        code: 'SO01',\n        name: 'Bakool',\n      },\n      {\n        code: 'SO02',\n        name: 'Banaadir',\n      },\n      {\n        code: 'SO03',\n        name: 'Bari',\n      },\n      {\n        code: 'SO04',\n        name: 'Bay',\n      },\n      {\n        code: 'SO05',\n        name: 'Galguduud',\n      },\n      {\n        code: 'SO06',\n        name: 'Gedo',\n      },\n      {\n        code: 'SO07',\n        name: 'Hiiraan',\n      },\n      {\n        code: 'SO08',\n        name: 'Jubbada Dhexe',\n      },\n      {\n        code: 'SO09',\n        name: 'Jubbada Hoose',\n      },\n      {\n        code: 'SO10',\n        name: 'Mudug',\n      },\n      {\n        code: 'SO18',\n        name: 'Nugaal',\n      },\n      {\n        code: 'SO12',\n        name: 'Sanaag',\n      },\n      {\n        code: 'SO13',\n        name: 'Shabeellaha Dhexe',\n      },\n      {\n        code: 'SO14',\n        name: 'Shabeellaha Hoose',\n      },\n      {\n        code: 'SO22',\n        name: 'Sool',\n      },\n      {\n        code: 'SO19',\n        name: 'Togdheer',\n      },\n      {\n        code: 'SO20',\n        name: 'Woqooyi Galbeed',\n      },\n    ],\n  },\n  {\n    code: 'ZA',\n    id: 2338,\n    name: 'South Africa',\n    states: [\n      {\n        code: 'SF01',\n        name: 'Cape Province',\n      },\n      {\n        code: 'SF05',\n        name: 'Eastern Cape',\n      },\n      {\n        code: 'SF03',\n        name: 'Free State',\n      },\n      {\n        code: 'SF06',\n        name: 'Gauteng',\n      },\n      {\n        code: 'SF02',\n        name: 'KwaZulu-Natal',\n      },\n      {\n        code: 'SF09',\n        name: 'Limpopo',\n      },\n      {\n        code: 'SF07',\n        name: 'Mpumalanga',\n      },\n      {\n        code: 'SF10',\n        name: 'North-West',\n      },\n      {\n        code: 'SF08',\n        name: 'Northern Cape',\n      },\n      {\n        code: 'SF04',\n        name: 'Transvaal',\n      },\n      {\n        code: 'SF11',\n        name: 'Western Cape',\n      },\n    ],\n  },\n  {\n    code: 'GS',\n    id: 2436,\n    name: 'South Georgia and the South Sandwich Islands',\n    states: [],\n  },\n  {\n    code: 'SS',\n    id: 2447,\n    name: 'South Sudan',\n    states: [\n      {\n        code: 'OD01',\n        name: 'Central Equatoria',\n      },\n      {\n        code: 'OD02',\n        name: 'East Equatoria',\n      },\n      {\n        code: 'OD03',\n        name: 'Jungoli',\n      },\n      {\n        code: 'OD04',\n        name: 'Lakes',\n      },\n      {\n        code: 'OD05',\n        name: 'North Bahr-al-Ghazal',\n      },\n      {\n        code: 'OD06',\n        name: 'Unity',\n      },\n      {\n        code: 'OD07',\n        name: 'Upper Nile',\n      },\n      {\n        code: 'OD08',\n        name: 'Warap',\n      },\n      {\n        code: 'OD09',\n        name: 'West Bahr-al-Ghazal',\n      },\n      {\n        code: 'OD10',\n        name: 'West Equatoria',\n      },\n    ],\n  },\n  {\n    code: 'ES',\n    id: 2339,\n    name: 'Spain',\n    states: [\n      {\n        code: 'SP23',\n        name: 'A Coruña',\n      },\n      {\n        code: 'SP01',\n        name: 'Alava',\n      },\n      {\n        code: 'SP02',\n        name: 'Albacete',\n      },\n      {\n        code: 'SP03',\n        name: 'Alicante',\n      },\n      {\n        code: 'SP04',\n        name: 'Almeria',\n      },\n      {\n        code: 'SP51',\n        name: 'Andalucia',\n      },\n      {\n        code: 'SP52',\n        name: 'Aragon',\n      },\n      {\n        code: 'SP34',\n        name: 'Asturias',\n      },\n      {\n        code: 'SP05',\n        name: 'Avila',\n      },\n      {\n        code: 'SP06',\n        name: 'Badajoz',\n      },\n      {\n        code: 'SP08',\n        name: 'Barcelona',\n      },\n      {\n        code: 'SP09',\n        name: 'Burgos',\n      },\n      {\n        code: 'SP10',\n        name: 'Caceres',\n      },\n      {\n        code: 'SP11',\n        name: 'Cadiz',\n      },\n      {\n        code: 'SP53',\n        name: 'Canarias',\n      },\n      {\n        code: 'SP39',\n        name: 'Cantabria',\n      },\n      {\n        code: 'SP12',\n        name: 'Castellon',\n      },\n      {\n        code: 'SP55',\n        name: 'Castilla y Leon',\n      },\n      {\n        code: 'SP54',\n        name: 'Castilla-La Mancha',\n      },\n      {\n        code: 'SP56',\n        name: 'Cataluna',\n      },\n      {\n        code: 'SP13',\n        name: 'Ciudad Real',\n      },\n      {\n        code: 'SP14',\n        name: 'Cordoba',\n      },\n      {\n        code: 'SP15',\n        name: 'Cuenca',\n      },\n      {\n        code: 'SP57',\n        name: 'Extremadura',\n      },\n      {\n        code: 'SP58',\n        name: 'Galicia',\n      },\n      {\n        code: 'SP16',\n        name: 'Gerona',\n      },\n      {\n        code: 'SP17',\n        name: 'Granada',\n      },\n      {\n        code: 'SP18',\n        name: 'Guadalajara',\n      },\n      {\n        code: 'SP19',\n        name: 'Guipuzcoa',\n      },\n      {\n        code: 'SP20',\n        name: 'Huelva',\n      },\n      {\n        code: 'SP21',\n        name: 'Huesca',\n      },\n      {\n        code: 'SP07',\n        name: 'Islas Baleares',\n      },\n      {\n        code: 'SP22',\n        name: 'Jaen',\n      },\n      {\n        code: 'SP23',\n        name: 'La Coruna',\n      },\n      {\n        code: 'SP27',\n        name: 'La Rioja',\n      },\n      {\n        code: 'SP24',\n        name: 'Las Palmas',\n      },\n      {\n        code: 'SP25',\n        name: 'Leon',\n      },\n      {\n        code: 'SP26',\n        name: 'Lerida',\n      },\n      {\n        code: 'SP28',\n        name: 'Lugo',\n      },\n      {\n        code: 'SP29',\n        name: 'Madrid',\n      },\n      {\n        code: 'SP30',\n        name: 'Malaga',\n      },\n      {\n        code: 'SP31',\n        name: 'Murcia',\n      },\n      {\n        code: 'SP32',\n        name: 'Navarra',\n      },\n      {\n        code: 'SP33',\n        name: 'Orense',\n      },\n      {\n        code: 'SP59',\n        name: 'Pais Vasco',\n      },\n      {\n        code: 'SP35',\n        name: 'Palencia',\n      },\n      {\n        code: 'SP36',\n        name: 'Pontevedra',\n      },\n      {\n        code: 'SP37',\n        name: 'Salamanca',\n      },\n      {\n        code: 'SP38',\n        name: 'Santa Cruz de Tenerife',\n      },\n      {\n        code: 'SP40',\n        name: 'Segovia',\n      },\n      {\n        code: 'SP41',\n        name: 'Sevilla',\n      },\n      {\n        code: 'SP42',\n        name: 'Soria',\n      },\n      {\n        code: 'SP43',\n        name: 'Tarragona',\n      },\n      {\n        code: 'SP44',\n        name: 'Teruel',\n      },\n      {\n        code: 'SP45',\n        name: 'Toledo',\n      },\n      {\n        code: 'SP46',\n        name: 'Valencia',\n      },\n      {\n        code: 'SP60',\n        name: 'Valenciana',\n      },\n      {\n        code: 'SP47',\n        name: 'Valladolid',\n      },\n      {\n        code: 'SP48',\n        name: 'Vizcaya',\n      },\n      {\n        code: 'SP49',\n        name: 'Zamora',\n      },\n      {\n        code: 'SP50',\n        name: 'Zaragoza',\n      },\n    ],\n  },\n  {\n    code: 'LK',\n    id: 2340,\n    name: 'Sri Lanka',\n    states: [],\n  },\n  {\n    code: 'SD',\n    id: 2341,\n    name: 'Sudan',\n    states: [\n      {\n        code: 'SU42',\n        name: 'Blue Nile',\n      },\n      {\n        code: 'SU61',\n        name: 'Central Darfur',\n      },\n      {\n        code: 'SU60',\n        name: 'East Darfur',\n      },\n      {\n        code: 'SU39',\n        name: 'Gedarif',\n      },\n      {\n        code: 'SU38',\n        name: 'Gezira',\n      },\n      {\n        code: 'SU52',\n        name: 'Kassala',\n      },\n      {\n        code: 'SU29',\n        name: 'Khartoum',\n      },\n      {\n        code: 'SU55',\n        name: 'North Darfur',\n      },\n      {\n        code: 'SU56',\n        name: 'North Kordofan',\n      },\n      {\n        code: 'SU43',\n        name: 'Northern',\n      },\n      {\n        code: 'SU36',\n        name: 'Red Sea',\n      },\n      {\n        code: 'SU53',\n        name: 'River Nile',\n      },\n      {\n        code: 'SU58',\n        name: 'Sennar',\n      },\n      {\n        code: 'SU49',\n        name: 'South Darfur',\n      },\n      {\n        code: 'SU50',\n        name: 'South Kordofan',\n      },\n      {\n        code: 'SU47',\n        name: 'West Darfur',\n      },\n      {\n        code: 'SU62',\n        name: 'West Kordofan',\n      },\n      {\n        code: 'SU41',\n        name: 'White Nile',\n      },\n    ],\n  },\n  {\n    code: 'SR',\n    id: 2342,\n    name: 'Suriname',\n    states: [\n      {\n        code: 'NS10',\n        name: 'Brokopondo',\n      },\n      {\n        code: 'NS11',\n        name: 'Commewijne',\n      },\n      {\n        code: 'NS12',\n        name: 'Coronie',\n      },\n      {\n        code: 'NS13',\n        name: 'Marowijne',\n      },\n      {\n        code: 'NS14',\n        name: 'Nickerie',\n      },\n      {\n        code: 'NS16',\n        name: 'Paramaribo',\n      },\n      {\n        code: 'NS15',\n        name: 'Para',\n      },\n      {\n        code: 'NS17',\n        name: 'Saramacca',\n      },\n      {\n        code: 'NS18',\n        name: 'Sipaliwini',\n      },\n      {\n        code: 'NS19',\n        name: 'Wanica',\n      },\n    ],\n  },\n  {\n    code: 'SJ',\n    id: 2437,\n    name: 'Svalbard And Jan Mayen',\n    states: [],\n  },\n  {\n    code: 'SZ',\n    id: 2343,\n    name: 'Swaziland',\n    states: [\n      {\n        code: 'WZ01',\n        name: 'Hhohho',\n      },\n      {\n        code: 'WZ02',\n        name: 'Lubombo',\n      },\n      {\n        code: 'WZ03',\n        name: 'Manzini',\n      },\n      {\n        code: 'WZ04',\n        name: 'Shiselweni',\n      },\n    ],\n  },\n  {\n    code: 'SE',\n    id: 2344,\n    name: 'Sweden',\n    states: [\n      {\n        code: 'SE-K',\n        name: 'Blekinge län',\n      },\n      {\n        code: 'SE-W',\n        name: 'Dalarnas län',\n      },\n      {\n        code: 'SE-X',\n        name: 'Gävleborgs län',\n      },\n      {\n        code: 'SE-I',\n        name: 'Gotlands län',\n      },\n      {\n        code: 'SE-N',\n        name: 'Hallands län',\n      },\n      {\n        code: 'SE-Z',\n        name: 'Jämtlands län',\n      },\n      {\n        code: 'SE-F',\n        name: 'Jönköpings län',\n      },\n      {\n        code: 'SE-H',\n        name: 'Kalmar län',\n      },\n      {\n        code: 'SE-G',\n        name: 'Kronobergs län',\n      },\n      {\n        code: 'SE-BD',\n        name: 'Norrbottens län',\n      },\n      {\n        code: 'SE-M',\n        name: 'Skåne län',\n      },\n      {\n        code: 'SE-D',\n        name: 'Södermanlands län',\n      },\n      {\n        code: 'SE-AB',\n        name: 'Stockholms län',\n      },\n      {\n        code: 'SE-C',\n        name: 'Uppsala län',\n      },\n      {\n        code: 'SE-S',\n        name: 'Värmlands län',\n      },\n      {\n        code: 'SE-AC',\n        name: 'Västerbottens län',\n      },\n      {\n        code: 'SE-Y',\n        name: 'Västernorrlands län',\n      },\n      {\n        code: 'SE-U',\n        name: 'Västmanlands län',\n      },\n      {\n        code: 'SE-O',\n        name: 'Västra Götalands län',\n      },\n      {\n        code: 'SE-T',\n        name: 'Örebro län',\n      },\n      {\n        code: 'SE-E',\n        name: 'Östergötlands län',\n      },\n    ],\n  },\n  {\n    code: 'CH',\n    id: 2345,\n    name: 'Switzerland',\n    states: [\n      {\n        code: 'AG',\n        name: 'Aargau',\n      },\n      {\n        code: 'AR',\n        name: 'Appenzell Ausserrhoden',\n      },\n      {\n        code: 'AI',\n        name: 'Appenzell Innerrhoden',\n      },\n      {\n        code: 'BL',\n        name: 'Basel-Landschaft',\n      },\n      {\n        code: 'BS',\n        name: 'Basel-Stadt',\n      },\n      {\n        code: 'BE',\n        name: 'Bern',\n      },\n      {\n        code: 'FR',\n        name: 'Fribourg',\n      },\n      {\n        code: 'GE',\n        name: 'Genève',\n      },\n      {\n        code: 'GL',\n        name: 'Glarus',\n      },\n      {\n        code: 'GR',\n        name: 'Graubünden',\n      },\n      {\n        code: 'JU',\n        name: 'Jura',\n      },\n      {\n        code: 'LU',\n        name: 'Luzern',\n      },\n      {\n        code: 'NE',\n        name: 'Neuchâtel',\n      },\n      {\n        code: 'NW',\n        name: 'Nidwalden',\n      },\n      {\n        code: 'OW',\n        name: 'Obwalden',\n      },\n      {\n        code: 'SG',\n        name: 'Sankt Gallen',\n      },\n      {\n        code: 'SH',\n        name: 'Schaffhausen',\n      },\n      {\n        code: 'SZ',\n        name: 'Schwyz',\n      },\n      {\n        code: 'SO',\n        name: 'Solothurn',\n      },\n      {\n        code: 'TG',\n        name: 'Thurgau',\n      },\n      {\n        code: 'TI',\n        name: 'Ticino',\n      },\n      {\n        code: 'UR',\n        name: 'Uri',\n      },\n      {\n        code: 'VS',\n        name: 'Valais',\n      },\n      {\n        code: 'VD',\n        name: 'Vaud',\n      },\n      {\n        code: 'ZG',\n        name: 'Zug',\n      },\n      {\n        code: 'ZH',\n        name: 'Zürich',\n      },\n    ],\n  },\n  {\n    code: 'SY',\n    id: 2381,\n    name: 'Syrian Arab Republic',\n    states: [\n      {\n        code: 'SY01',\n        name: 'Al Hasakah',\n      },\n      {\n        code: 'SY09',\n        name: 'Aleppo',\n      },\n      {\n        code: 'SY04',\n        name: 'Ar Raqqah',\n      },\n      {\n        code: 'SY05',\n        name: \"As Suwayda'\",\n      },\n      {\n        code: 'SY13',\n        name: 'Damascus',\n      },\n      {\n        code: 'SY06',\n        name: 'Dar`a',\n      },\n      {\n        code: 'SY07',\n        name: 'Dayr az Zawr',\n      },\n      {\n        code: 'SY10',\n        name: 'Hama',\n      },\n      {\n        code: 'SY11',\n        name: 'Hims',\n      },\n      {\n        code: 'SY12',\n        name: 'Idlib',\n      },\n      {\n        code: 'SY02',\n        name: 'Latakia',\n      },\n      {\n        code: 'SY03',\n        name: 'Quneitra',\n      },\n      {\n        code: 'SY08',\n        name: 'Rif Dimashq',\n      },\n      {\n        code: 'SY14',\n        name: 'Tartus',\n      },\n    ],\n  },\n  {\n    code: 'TW',\n    id: 2375,\n    name: 'Taiwan',\n    states: [\n      {\n        code: 'TW02',\n        name: 'Kaohsiung',\n      },\n      {\n        code: 'TW03',\n        name: 'Taipei',\n      },\n    ],\n  },\n  {\n    code: 'TJ',\n    id: 2348,\n    name: 'Tajikistan',\n    states: [\n      {\n        code: 'TI01',\n        name: 'Badakhshoni Kuni',\n      },\n      {\n        code: 'TI04',\n        name: 'Dushanbe',\n      },\n      {\n        code: 'TI02',\n        name: 'Khatlon',\n      },\n      {\n        code: 'TI05',\n        name: 'Regions of Republican Subordination',\n      },\n      {\n        code: 'TI03',\n        name: 'Sogd',\n      },\n    ],\n  },\n  {\n    code: 'TZ',\n    id: 2349,\n    name: 'Tanzania',\n    states: [\n      {\n        code: 'TZ26',\n        name: 'Arusha',\n      },\n      {\n        code: 'TZ23',\n        name: 'Dar es Salaam',\n      },\n      {\n        code: 'TZ03',\n        name: 'Dodoma',\n      },\n      {\n        code: 'TZ28',\n        name: 'Geita',\n      },\n      {\n        code: 'TZ04',\n        name: 'Iringa',\n      },\n      {\n        code: 'TZ19',\n        name: 'Kagera',\n      },\n      {\n        code: 'TZ29',\n        name: 'Katavi',\n      },\n      {\n        code: 'TZ05',\n        name: 'Kigoma',\n      },\n      {\n        code: 'TZ06',\n        name: 'Kilimanjaro',\n      },\n      {\n        code: 'TZ07',\n        name: 'Lindi',\n      },\n      {\n        code: 'TZ27',\n        name: 'Manyara',\n      },\n      {\n        code: 'TZ08',\n        name: 'Mara',\n      },\n      {\n        code: 'TZ09',\n        name: 'Mbeya',\n      },\n      {\n        code: 'TZ10',\n        name: 'Morogoro',\n      },\n      {\n        code: 'TZ11',\n        name: 'Mtwara',\n      },\n      {\n        code: 'TZ12',\n        name: 'Mwanza',\n      },\n      {\n        code: 'TZ30',\n        name: 'Njombe',\n      },\n      {\n        code: 'TZ13',\n        name: 'Pemba North',\n      },\n      {\n        code: 'TZ20',\n        name: 'Pemba South',\n      },\n      {\n        code: 'TZ02',\n        name: 'Pwani',\n      },\n      {\n        code: 'TZ24',\n        name: 'Rukwa',\n      },\n      {\n        code: 'TZ14',\n        name: 'Ruvuma',\n      },\n      {\n        code: 'TZ15',\n        name: 'Shinyanga',\n      },\n      {\n        code: 'TZ31',\n        name: 'Simiyu',\n      },\n      {\n        code: 'TZ16',\n        name: 'Singida',\n      },\n      {\n        code: 'TZ17',\n        name: 'Tabora',\n      },\n      {\n        code: 'TZ18',\n        name: 'Tanga',\n      },\n      {\n        code: 'TZ22',\n        name: 'Zanzibar North',\n      },\n      {\n        code: 'TZ21',\n        name: 'Zanzibar South and Central',\n      },\n      {\n        code: 'TZ25',\n        name: 'Zanzibar West',\n      },\n    ],\n  },\n  {\n    code: 'TH',\n    id: 2350,\n    name: 'Thailand',\n    states: [\n      {\n        code: 'TH77',\n        name: 'Amnat Charoen',\n      },\n      {\n        code: 'TH35',\n        name: 'Ang Thong',\n      },\n      {\n        code: 'TH40',\n        name: 'Bangkok Metropolis',\n      },\n      {\n        code: 'TH81',\n        name: 'Bueng Kan',\n      },\n      {\n        code: 'TH28',\n        name: 'Buri Ram',\n      },\n      {\n        code: 'TH44',\n        name: 'Chachoengsao',\n      },\n      {\n        code: 'TH32',\n        name: 'Chai Nat',\n      },\n      {\n        code: 'TH26',\n        name: 'Chaiyaphum',\n      },\n      {\n        code: 'TH48',\n        name: 'Chanthaburi',\n      },\n      {\n        code: 'TH02',\n        name: 'Chiang Mai',\n      },\n      {\n        code: 'TH03',\n        name: 'Chiang Rai',\n      },\n      {\n        code: 'TH46',\n        name: 'Chon Buri',\n      },\n      {\n        code: 'TH58',\n        name: 'Chumphon',\n      },\n      {\n        code: 'TH23',\n        name: 'Kalasin',\n      },\n      {\n        code: 'TH11',\n        name: 'Kamphaeng Phet',\n      },\n      {\n        code: 'TH50',\n        name: 'Kanchanaburi',\n      },\n      {\n        code: 'TH22',\n        name: 'Khon Kaen',\n      },\n      {\n        code: 'TH63',\n        name: 'Krabi',\n      },\n      {\n        code: 'TH06',\n        name: 'Lampang',\n      },\n      {\n        code: 'TH05',\n        name: 'Lamphun',\n      },\n      {\n        code: 'TH18',\n        name: 'Loei',\n      },\n      {\n        code: 'TH34',\n        name: 'Lop Buri',\n      },\n      {\n        code: 'TH01',\n        name: 'Mae Hong Son',\n      },\n      {\n        code: 'TH24',\n        name: 'Maha Sarakham',\n      },\n      {\n        code: 'TH78',\n        name: 'Mukdahan',\n      },\n      {\n        code: 'TH43',\n        name: 'Nakhon Nayok',\n      },\n      {\n        code: 'TH53',\n        name: 'Nakhon Pathom',\n      },\n      {\n        code: 'TH73',\n        name: 'Nakhon Phanom',\n      },\n      {\n        code: 'TH27',\n        name: 'Nakhon Ratchasima',\n      },\n      {\n        code: 'TH16',\n        name: 'Nakhon Sawan',\n      },\n      {\n        code: 'TH64',\n        name: 'Nakhon Si Thammarat',\n      },\n      {\n        code: 'TH04',\n        name: 'Nan',\n      },\n      {\n        code: 'TH31',\n        name: 'Narathiwat',\n      },\n      {\n        code: 'TH79',\n        name: 'Nong Bua Lam Phu',\n      },\n      {\n        code: 'TH17',\n        name: 'Nong Khai',\n      },\n      {\n        code: 'TH38',\n        name: 'Nonthaburi',\n      },\n      {\n        code: 'TH39',\n        name: 'Pathum Thani',\n      },\n      {\n        code: 'TH69',\n        name: 'Pattani',\n      },\n      {\n        code: 'TH61',\n        name: 'Phangnga',\n      },\n      {\n        code: 'TH66',\n        name: 'Phatthalung',\n      },\n      {\n        code: 'TH41',\n        name: 'Phayao',\n      },\n      {\n        code: 'TH14',\n        name: 'Phetchabun',\n      },\n      {\n        code: 'TH56',\n        name: 'Phetchaburi',\n      },\n      {\n        code: 'TH13',\n        name: 'Phichit',\n      },\n      {\n        code: 'TH12',\n        name: 'Phitsanulok',\n      },\n      {\n        code: 'TH36',\n        name: 'Phra Nakhon Si Ayutthaya',\n      },\n      {\n        code: 'TH07',\n        name: 'Phrae',\n      },\n      {\n        code: 'TH62',\n        name: 'Phuket',\n      },\n      {\n        code: 'TH74',\n        name: 'Prachin Buri',\n      },\n      {\n        code: 'TH57',\n        name: 'Prachuap Khiri Khan',\n      },\n      {\n        code: 'TH59',\n        name: 'Ranong',\n      },\n      {\n        code: 'TH52',\n        name: 'Ratchaburi',\n      },\n      {\n        code: 'TH47',\n        name: 'Rayong',\n      },\n      {\n        code: 'TH25',\n        name: 'Roi Et',\n      },\n      {\n        code: 'TH80',\n        name: 'Sa Kaeo',\n      },\n      {\n        code: 'TH20',\n        name: 'Sakon Nakhon',\n      },\n      {\n        code: 'TH42',\n        name: 'Samut Prakan',\n      },\n      {\n        code: 'TH55',\n        name: 'Samut Sakhon',\n      },\n      {\n        code: 'TH54',\n        name: 'Samut Songkhram',\n      },\n      {\n        code: 'TH37',\n        name: 'Saraburi',\n      },\n      {\n        code: 'TH67',\n        name: 'Satun',\n      },\n      {\n        code: 'TH30',\n        name: 'Si Sa Ket',\n      },\n      {\n        code: 'TH33',\n        name: 'Sing Buri',\n      },\n      {\n        code: 'TH68',\n        name: 'Songkhla',\n      },\n      {\n        code: 'TH09',\n        name: 'Sukhothai',\n      },\n      {\n        code: 'TH51',\n        name: 'Suphan Buri',\n      },\n      {\n        code: 'TH60',\n        name: 'Surat Thani',\n      },\n      {\n        code: 'TH29',\n        name: 'Surin',\n      },\n      {\n        code: 'TH08',\n        name: 'Tak',\n      },\n      {\n        code: 'TH65',\n        name: 'Trang',\n      },\n      {\n        code: 'TH49',\n        name: 'Trat',\n      },\n      {\n        code: 'TH75',\n        name: 'Ubon Ratchathani',\n      },\n      {\n        code: 'TH76',\n        name: 'Udon Thani',\n      },\n      {\n        code: 'TH15',\n        name: 'Uthai Thani',\n      },\n      {\n        code: 'TH10',\n        name: 'Uttaradit',\n      },\n      {\n        code: 'TH70',\n        name: 'Yala',\n      },\n      {\n        code: 'TH72',\n        name: 'Yasothon',\n      },\n    ],\n  },\n  {\n    code: 'TL',\n    id: 2404,\n    name: 'Timor-Leste',\n    states: [],\n  },\n  {\n    code: 'TG',\n    id: 2351,\n    name: 'Togo',\n    states: [\n      {\n        code: 'TO22',\n        name: 'Centrale',\n      },\n      {\n        code: 'TO23',\n        name: 'Kara',\n      },\n      {\n        code: 'TO24',\n        name: 'Maritime',\n      },\n      {\n        code: 'TO25',\n        name: 'Plateaux',\n      },\n      {\n        code: 'TO26',\n        name: 'Savanes',\n      },\n    ],\n  },\n  {\n    code: 'TK',\n    id: 2438,\n    name: 'Tokelau',\n    states: [],\n  },\n  {\n    code: 'TO',\n    id: 2405,\n    name: 'Tonga',\n    states: [],\n  },\n  {\n    code: 'TT',\n    id: 2352,\n    name: 'Trinidad and Tobago',\n    states: [\n      {\n        code: 'TD01',\n        name: 'Arima',\n      },\n      {\n        code: 'TD13',\n        name: 'Chaguanas',\n      },\n      {\n        code: 'TD14',\n        name: 'Couva/Tabaquite/Talparo',\n      },\n      {\n        code: 'TD15',\n        name: 'Diego Martin',\n      },\n      {\n        code: 'TD11',\n        name: 'Eastern Tobago',\n      },\n      {\n        code: 'TD16',\n        name: 'Mayaro/Rio Claro',\n      },\n      {\n        code: 'TD17',\n        name: 'Penal/Debe',\n      },\n      {\n        code: 'TD18',\n        name: 'Point Fortin',\n      },\n      {\n        code: 'TD05',\n        name: 'Port of Spain',\n      },\n      {\n        code: 'TD19',\n        name: 'Princes Town',\n      },\n      {\n        code: 'TD10',\n        name: 'San Fernando',\n      },\n      {\n        code: 'TD20',\n        name: 'San Juan/Laventille',\n      },\n      {\n        code: 'TD21',\n        name: 'Sangre Grande',\n      },\n      {\n        code: 'TD22',\n        name: 'Siparia',\n      },\n      {\n        code: 'TD23',\n        name: 'Tunapuna/Piarco',\n      },\n      {\n        code: 'TD11',\n        name: 'Western Tobago',\n      },\n    ],\n  },\n  {\n    code: 'TN',\n    id: 2353,\n    name: 'Tunisia',\n    states: [\n      {\n        code: 'TS38',\n        name: 'Ariana',\n      },\n      {\n        code: 'TS17',\n        name: 'Béja',\n      },\n      {\n        code: 'TS27',\n        name: 'Ben Arous',\n      },\n      {\n        code: 'TS18',\n        name: 'Bizerte',\n      },\n      {\n        code: 'TS29',\n        name: 'Gabès',\n      },\n      {\n        code: 'TS30',\n        name: 'Gafsa',\n      },\n      {\n        code: 'TS06',\n        name: 'Jendouba',\n      },\n      {\n        code: 'TS03',\n        name: 'Kairouan',\n      },\n      {\n        code: 'TS02',\n        name: 'Kassérine',\n      },\n      {\n        code: 'TS31',\n        name: 'Kebili',\n      },\n      {\n        code: 'TS14',\n        name: 'Le Kef',\n      },\n      {\n        code: 'TS15',\n        name: 'Mahdia',\n      },\n      {\n        code: 'TS39',\n        name: 'Manouba',\n      },\n      {\n        code: 'TS28',\n        name: 'Médenine',\n      },\n      {\n        code: 'TS16',\n        name: 'Monastir',\n      },\n      {\n        code: 'TS19',\n        name: 'Nabeul',\n      },\n      {\n        code: 'TS32',\n        name: 'Sfax',\n      },\n      {\n        code: 'TS33',\n        name: 'Sidi Bou Zid',\n      },\n      {\n        code: 'TS22',\n        name: 'Siliana',\n      },\n      {\n        code: 'TS23',\n        name: 'Sousse',\n      },\n      {\n        code: 'TS34',\n        name: 'Tataouine',\n      },\n      {\n        code: 'TS35',\n        name: 'Tozeur',\n      },\n      {\n        code: 'TS36',\n        name: 'Tunis',\n      },\n      {\n        code: 'TS37',\n        name: 'Zaghouan',\n      },\n    ],\n  },\n  {\n    code: 'TR',\n    id: 2354,\n    name: 'Turkey',\n    states: [\n      {\n        code: 'TU81',\n        name: 'Adana',\n      },\n      {\n        code: 'TU02',\n        name: 'Adiyaman',\n      },\n      {\n        code: 'TU03',\n        name: 'Afyonkarahisar',\n      },\n      {\n        code: 'TU04',\n        name: 'Agri',\n      },\n      {\n        code: 'TU75',\n        name: 'Aksaray',\n      },\n      {\n        code: 'TU05',\n        name: 'Amasya',\n      },\n      {\n        code: 'TU68',\n        name: 'Ankara',\n      },\n      {\n        code: 'TU07',\n        name: 'Antalya',\n      },\n      {\n        code: 'TU86',\n        name: 'Ardahan',\n      },\n      {\n        code: 'TU08',\n        name: 'Artvin',\n      },\n      {\n        code: 'TU09',\n        name: 'Aydin',\n      },\n      {\n        code: 'TU10',\n        name: 'Balikesir',\n      },\n      {\n        code: 'TU87',\n        name: 'Bartin',\n      },\n      {\n        code: 'TU76',\n        name: 'Batman',\n      },\n      {\n        code: 'TU77',\n        name: 'Bayburt',\n      },\n      {\n        code: 'TU11',\n        name: 'Bilecik',\n      },\n      {\n        code: 'TU12',\n        name: 'Bingöl',\n      },\n      {\n        code: 'TU13',\n        name: 'Bitlis',\n      },\n      {\n        code: 'TU14',\n        name: 'Bolu',\n      },\n      {\n        code: 'TU15',\n        name: 'Burdur',\n      },\n      {\n        code: 'TU16',\n        name: 'Bursa',\n      },\n      {\n        code: 'TU17',\n        name: 'Çanakkale',\n      },\n      {\n        code: 'TU82',\n        name: 'Çankiri',\n      },\n      {\n        code: 'TU19',\n        name: 'Çorum',\n      },\n      {\n        code: 'TU20',\n        name: 'Denizli',\n      },\n      {\n        code: 'TU21',\n        name: 'Diyarbakir',\n      },\n      {\n        code: 'TU93',\n        name: 'Düzce',\n      },\n      {\n        code: 'TU22',\n        name: 'Edirne',\n      },\n      {\n        code: 'TU23',\n        name: 'Elazig',\n      },\n      {\n        code: 'TU24',\n        name: 'Erzincan',\n      },\n      {\n        code: 'TU25',\n        name: 'Erzurum',\n      },\n      {\n        code: 'TU26',\n        name: 'Eskisehir',\n      },\n      {\n        code: 'TU83',\n        name: 'Gaziantep',\n      },\n      {\n        code: 'TU28',\n        name: 'Giresun',\n      },\n      {\n        code: 'TU69',\n        name: 'Gümüshane',\n      },\n      {\n        code: 'TU70',\n        name: 'Hakkari',\n      },\n      {\n        code: 'TU31',\n        name: 'Hatay',\n      },\n      {\n        code: 'TU88',\n        name: 'Igdir',\n      },\n      {\n        code: 'TU33',\n        name: 'Isparta',\n      },\n      {\n        code: 'TU34',\n        name: 'Istanbul',\n      },\n      {\n        code: 'TU35',\n        name: 'Izmir',\n      },\n      {\n        code: 'TU46',\n        name: 'Kahramanmaras',\n      },\n      {\n        code: 'TU89',\n        name: 'Karabük',\n      },\n      {\n        code: 'TU78',\n        name: 'Karaman',\n      },\n      {\n        code: 'TU84',\n        name: 'Kars',\n      },\n      {\n        code: 'TU37',\n        name: 'Kastamonu',\n      },\n      {\n        code: 'TU38',\n        name: 'Kayseri',\n      },\n      {\n        code: 'TU90',\n        name: 'Kilis',\n      },\n      {\n        code: 'TU79',\n        name: 'Kirikkale',\n      },\n      {\n        code: 'TU39',\n        name: 'Kirklareli',\n      },\n      {\n        code: 'TU40',\n        name: 'Kirsehir',\n      },\n      {\n        code: 'TU41',\n        name: 'Kocaeli',\n      },\n      {\n        code: 'TU71',\n        name: 'Konya',\n      },\n      {\n        code: 'TU43',\n        name: 'Kütahya',\n      },\n      {\n        code: 'TU44',\n        name: 'Malatya',\n      },\n      {\n        code: 'TU45',\n        name: 'Manisa',\n      },\n      {\n        code: 'TU72',\n        name: 'Mardin',\n      },\n      {\n        code: 'TU32',\n        name: 'Mersin',\n      },\n      {\n        code: 'TU48',\n        name: 'Mugla',\n      },\n      {\n        code: 'TU49',\n        name: 'Mus',\n      },\n      {\n        code: 'TU50',\n        name: 'Nevsehir',\n      },\n      {\n        code: 'TU73',\n        name: 'Nigde',\n      },\n      {\n        code: 'TU52',\n        name: 'Ordu',\n      },\n      {\n        code: 'TU91',\n        name: 'Osmaniye',\n      },\n      {\n        code: 'TU53',\n        name: 'Rize',\n      },\n      {\n        code: 'TU54',\n        name: 'Sakarya',\n      },\n      {\n        code: 'TU55',\n        name: 'Samsun',\n      },\n      {\n        code: 'TU63',\n        name: 'Sanliurfa',\n      },\n      {\n        code: 'TU74',\n        name: 'Siirt',\n      },\n      {\n        code: 'TU57',\n        name: 'Sinop',\n      },\n      {\n        code: 'TU80',\n        name: 'Sirnak',\n      },\n      {\n        code: 'TU58',\n        name: 'Sivas',\n      },\n      {\n        code: 'TU59',\n        name: 'Tekirdag',\n      },\n      {\n        code: 'TU60',\n        name: 'Tokat',\n      },\n      {\n        code: 'TU61',\n        name: 'Trabzon',\n      },\n      {\n        code: 'TU62',\n        name: 'Tunceli',\n      },\n      {\n        code: 'TU64',\n        name: 'Usak',\n      },\n      {\n        code: 'TU65',\n        name: 'Van',\n      },\n      {\n        code: 'TU92',\n        name: 'Yalova',\n      },\n      {\n        code: 'TU66',\n        name: 'Yozgat',\n      },\n      {\n        code: 'TU85',\n        name: 'Zonguldak',\n      },\n    ],\n  },\n  {\n    code: 'TM',\n    id: 2355,\n    name: 'Turkmenistan',\n    states: [\n      {\n        code: 'TX01',\n        name: 'Ahal',\n      },\n      {\n        code: 'TM.AB',\n        name: 'Ashgabat',\n      },\n      {\n        code: 'TX02',\n        name: 'Balkan',\n      },\n      {\n        code: 'TX03',\n        name: 'Dashoguz',\n      },\n      {\n        code: 'TX04',\n        name: 'Lebap',\n      },\n      {\n        code: 'TX05',\n        name: 'Mary',\n      },\n    ],\n  },\n  {\n    code: 'TC',\n    id: 2439,\n    name: 'Turks and Caicos Islands',\n    states: [],\n  },\n  {\n    code: 'TV',\n    id: 2440,\n    name: 'Tuvalu',\n    states: [],\n  },\n  {\n    code: 'UG',\n    id: 2356,\n    name: 'Uganda',\n    states: [\n      {\n        code: 'UG.AI',\n        name: 'Abim',\n      },\n      {\n        code: 'UG.AD',\n        name: 'Adjumani',\n      },\n      {\n        code: 'UG.AG',\n        name: 'Agago',\n      },\n      {\n        code: 'UG.AL',\n        name: 'Alebtong',\n      },\n      {\n        code: 'UG.AT',\n        name: 'Amolatar',\n      },\n      {\n        code: 'UG.AZ',\n        name: 'Amudat',\n      },\n      {\n        code: 'UG.AM',\n        name: 'Amuria',\n      },\n      {\n        code: 'UG.AY',\n        name: 'Amuru',\n      },\n      {\n        code: 'UG.AQ',\n        name: 'Apac',\n      },\n      {\n        code: 'UG.AX',\n        name: 'Arua',\n      },\n      {\n        code: 'UG.BD',\n        name: 'Budaka',\n      },\n      {\n        code: 'UG.BA',\n        name: 'Bududa',\n      },\n      {\n        code: 'UG.BI',\n        name: 'Bugiri',\n      },\n      {\n        code: 'UG.BH',\n        name: 'Buhweju',\n      },\n      {\n        code: 'UG.BZ',\n        name: 'Buikwe',\n      },\n      {\n        code: 'UG.BE',\n        name: 'Bukedea',\n      },\n      {\n        code: 'UG.BM',\n        name: 'Bukomansimbi',\n      },\n      {\n        code: 'UG.BW',\n        name: 'Bukwo',\n      },\n      {\n        code: 'UG.BB',\n        name: 'Bulambuli',\n      },\n      {\n        code: 'UG.BL',\n        name: 'Buliisa',\n      },\n      {\n        code: 'UG.BX',\n        name: 'Bundibugyo',\n      },\n      {\n        code: 'UG.BC',\n        name: 'Bushenyi',\n      },\n      {\n        code: 'UG.BU',\n        name: 'Busia',\n      },\n      {\n        code: 'UG.BJ',\n        name: 'Butaleja',\n      },\n      {\n        code: 'UG.BT',\n        name: 'Butambala',\n      },\n      {\n        code: 'UG.BV',\n        name: 'Buvuma',\n      },\n      {\n        code: 'UG.BY',\n        name: 'Buyende',\n      },\n      {\n        code: 'UG.DO',\n        name: 'Dokolo',\n      },\n      {\n        code: 'UG.GM',\n        name: 'Gomba',\n      },\n      {\n        code: 'UG.GL',\n        name: 'Gulu',\n      },\n      {\n        code: 'UG.HO',\n        name: 'Hoima',\n      },\n      {\n        code: 'UG.IB',\n        name: 'Ibanda',\n      },\n      {\n        code: 'UG.IC',\n        name: 'Iganga',\n      },\n      {\n        code: 'UG.NG',\n        name: 'Isingiro',\n      },\n      {\n        code: 'UG.JI',\n        name: 'Jinja',\n      },\n      {\n        code: 'UG.AB',\n        name: 'Kaabong',\n      },\n      {\n        code: 'UG.KA',\n        name: 'Kabale',\n      },\n      {\n        code: 'UG.BR',\n        name: 'Kabarole',\n      },\n      {\n        code: 'UG.KD',\n        name: 'Kaberamaido',\n      },\n      {\n        code: 'UG.KN',\n        name: 'Kalangala',\n      },\n      {\n        code: 'UG.RO',\n        name: 'Kaliro',\n      },\n      {\n        code: 'UG.QA',\n        name: 'Kalungu',\n      },\n      {\n        code: 'UG.KM',\n        name: 'Kampala',\n      },\n      {\n        code: 'UG.QU',\n        name: 'Kamuli',\n      },\n      {\n        code: 'UG.KE',\n        name: 'Kamwenge',\n      },\n      {\n        code: 'UG.UU',\n        name: 'Kanungu',\n      },\n      {\n        code: 'UG.QP',\n        name: 'Kapchorwa',\n      },\n      {\n        code: 'UG.KS',\n        name: 'Kasese',\n      },\n      {\n        code: 'UG.KK',\n        name: 'Katakwi',\n      },\n      {\n        code: 'UG.KY',\n        name: 'Kayunga',\n      },\n      {\n        code: 'UG.KI',\n        name: 'Kibaale',\n      },\n      {\n        code: 'UG.QO',\n        name: 'Kiboga',\n      },\n      {\n        code: 'UG.QB',\n        name: 'Kibuku',\n      },\n      {\n        code: 'UG.KH',\n        name: 'Kiruhuura',\n      },\n      {\n        code: 'UG.QD',\n        name: 'Kiryandongo',\n      },\n      {\n        code: 'UG.KR',\n        name: 'Kisoro',\n      },\n      {\n        code: 'UG.QT',\n        name: 'Kitgum',\n      },\n      {\n        code: 'UG.OK',\n        name: 'Koboko',\n      },\n      {\n        code: 'UG.QL',\n        name: 'Kole',\n      },\n      {\n        code: 'UG.KF',\n        name: 'Kotido',\n      },\n      {\n        code: 'UG.QM',\n        name: 'Kumi',\n      },\n      {\n        code: 'UG.QW',\n        name: 'Kween',\n      },\n      {\n        code: 'UG.QZ',\n        name: 'Kyankwanzi',\n      },\n      {\n        code: 'UG.QG',\n        name: 'Kyegegwa',\n      },\n      {\n        code: 'UG.QJ',\n        name: 'Kyenjojo',\n      },\n      {\n        code: 'UG.LM',\n        name: 'Lamwo',\n      },\n      {\n        code: 'UG.LL',\n        name: 'Lira',\n      },\n      {\n        code: 'UG.LK',\n        name: 'Luuka',\n      },\n      {\n        code: 'UG.LW',\n        name: 'Luwero',\n      },\n      {\n        code: 'UG.LE',\n        name: 'Lwengo',\n      },\n      {\n        code: 'UG.LY',\n        name: 'Lyantonde',\n      },\n      {\n        code: 'UG.MW',\n        name: 'Manafwa',\n      },\n      {\n        code: 'UG.MQ',\n        name: 'Masaka',\n      },\n      {\n        code: 'UG.MZ',\n        name: 'Masindi',\n      },\n      {\n        code: 'UG.MG',\n        name: 'Mayuge',\n      },\n      {\n        code: 'UG.ME',\n        name: 'Mbale',\n      },\n      {\n        code: 'UG.RR',\n        name: 'Mbarara',\n      },\n      {\n        code: 'UG.MM',\n        name: 'Mitoma',\n      },\n      {\n        code: 'UG.TY',\n        name: 'Mityana',\n      },\n      {\n        code: 'UG.MX',\n        name: 'Moroto',\n      },\n      {\n        code: 'UG.MY',\n        name: 'Moyo',\n      },\n      {\n        code: 'UG.MJ',\n        name: 'Mpigi',\n      },\n      {\n        code: 'UG.MD',\n        name: 'Mubende',\n      },\n      {\n        code: 'UG.MV',\n        name: 'Mukono',\n      },\n      {\n        code: 'UG.NI',\n        name: 'Nakapiripirit',\n      },\n      {\n        code: 'UG.NK',\n        name: 'Nakaseke',\n      },\n      {\n        code: 'UG.NA',\n        name: 'Nakasongola',\n      },\n      {\n        code: 'UG.NY',\n        name: 'Namayingo',\n      },\n      {\n        code: 'UG.BK',\n        name: 'Namutumba',\n      },\n      {\n        code: 'UG.NQ',\n        name: 'Napak',\n      },\n      {\n        code: 'UG.NB',\n        name: 'Nebbi',\n      },\n      {\n        code: 'UG.NR',\n        name: 'Ngora',\n      },\n      {\n        code: 'UG.NO',\n        name: 'Ntoroko',\n      },\n      {\n        code: 'UG.NT',\n        name: 'Ntungamo',\n      },\n      {\n        code: 'UG.NW',\n        name: 'Nwoya',\n      },\n      {\n        code: 'UG.MH',\n        name: 'Nyadri',\n      },\n      {\n        code: 'UG.OT',\n        name: 'Otuke',\n      },\n      {\n        code: 'UG.OY',\n        name: 'Oyam',\n      },\n      {\n        code: 'UG.PR',\n        name: 'Pader',\n      },\n      {\n        code: 'UG.PS',\n        name: 'Pallisa',\n      },\n      {\n        code: 'UG.RI',\n        name: 'Rakai',\n      },\n      {\n        code: 'UG.RZ',\n        name: 'Rubirizi',\n      },\n      {\n        code: 'UG.RK',\n        name: 'Rukungiri',\n      },\n      {\n        code: 'UG.SE',\n        name: 'Sembabule',\n      },\n      {\n        code: 'UG.SX',\n        name: 'Serere',\n      },\n      {\n        code: 'UG.SH',\n        name: 'Sheema',\n      },\n      {\n        code: 'UG.SK',\n        name: 'Sironko',\n      },\n      {\n        code: 'UG.ST',\n        name: 'Soroti',\n      },\n      {\n        code: 'UG.TR',\n        name: 'Tororo',\n      },\n      {\n        code: 'UG.WA',\n        name: 'Wakiso',\n      },\n      {\n        code: 'UG.YU',\n        name: 'Yumbe',\n      },\n      {\n        code: 'UG.ZO',\n        name: 'Zombo',\n      },\n    ],\n  },\n  {\n    code: 'UA',\n    id: 2357,\n    name: 'Ukraine',\n    states: [\n      {\n        code: 'UP01',\n        name: 'Cherkasy',\n      },\n      {\n        code: 'UP02',\n        name: 'Chernihiv',\n      },\n      {\n        code: 'UP03',\n        name: 'Chernivtsi',\n      },\n      {\n        code: 'UP11',\n        name: 'Crimea',\n      },\n      {\n        code: 'UP04',\n        name: \"Dnipropetrovs'k\",\n      },\n      {\n        code: 'UP05',\n        name: \"Donets'k\",\n      },\n      {\n        code: 'UP06',\n        name: \"Ivano-Frankivs'k\",\n      },\n      {\n        code: 'UP07',\n        name: 'Kharkiv',\n      },\n      {\n        code: 'UP08',\n        name: 'Kherson',\n      },\n      {\n        code: 'UP09',\n        name: \"Khmel'nyts'kyy\",\n      },\n      {\n        code: 'UP13',\n        name: 'Kiev',\n      },\n      {\n        code: 'UP12',\n        name: 'Kiev City',\n      },\n      {\n        code: 'UP10',\n        name: 'Kirovohrad',\n      },\n      {\n        code: 'UP15',\n        name: \"L'viv\",\n      },\n      {\n        code: 'UP14',\n        name: \"Luhans'k\",\n      },\n      {\n        code: 'UP16',\n        name: 'Mykolayiv',\n      },\n      {\n        code: 'UP17',\n        name: 'Odessa',\n      },\n      {\n        code: 'UP18',\n        name: 'Poltava',\n      },\n      {\n        code: 'UP19',\n        name: 'Rivne',\n      },\n      {\n        code: 'UP20',\n        name: \"Sevastopol' City\",\n      },\n      {\n        code: 'UP21',\n        name: 'Sumy',\n      },\n      {\n        code: 'UP22',\n        name: \"Ternopil'\",\n      },\n      {\n        code: 'UP25',\n        name: 'Transcarpathia',\n      },\n      {\n        code: 'UP23',\n        name: 'Vinnytsya',\n      },\n      {\n        code: 'UP24',\n        name: 'Volyn',\n      },\n      {\n        code: 'UP26',\n        name: 'Zaporizhzhya',\n      },\n      {\n        code: 'UP27',\n        name: 'Zhytomyr',\n      },\n    ],\n  },\n  {\n    code: 'AE',\n    id: 2358,\n    name: 'United Arab Emirates',\n    states: [\n      {\n        code: 'AE02',\n        name: \"'Ajman\",\n      },\n      {\n        code: 'AE01',\n        name: 'Abu Dhabi',\n      },\n      {\n        code: 'AE04',\n        name: 'Al Fujayrah',\n      },\n      {\n        code: 'AE03',\n        name: 'Dubai',\n      },\n      {\n        code: 'AE05',\n        name: \"Ra's al Khaymah\",\n      },\n      {\n        code: 'AE06',\n        name: 'Sharjah',\n      },\n      {\n        code: 'AE07',\n        name: 'Umm al Qaywayn',\n      },\n    ],\n  },\n  {\n    code: 'UM',\n    id: 2441,\n    name: 'United States Minor Outlying Islands',\n    states: [],\n  },\n  {\n    code: 'UY',\n    id: 2360,\n    name: 'Uruguay',\n    states: [],\n  },\n  {\n    code: 'UZ',\n    id: 2361,\n    name: 'Uzbekistan',\n    states: [\n      {\n        code: 'UZ01',\n        name: 'Andijon',\n      },\n      {\n        code: 'UZ02',\n        name: 'Buxoro',\n      },\n      {\n        code: 'UZ03',\n        name: 'Farg`ona',\n      },\n      {\n        code: 'UZ15',\n        name: 'Jizzax',\n      },\n      {\n        code: 'UZ09',\n        name: 'Karakalpakstan',\n      },\n      {\n        code: 'UZ08',\n        name: 'Kashkadarya',\n      },\n      {\n        code: 'UZ06',\n        name: 'Namangan',\n      },\n      {\n        code: 'UZ07',\n        name: 'Navoi',\n      },\n      {\n        code: 'UZ10',\n        name: 'Samarkand',\n      },\n      {\n        code: 'UZ16',\n        name: 'Sirdaryo',\n      },\n      {\n        code: 'UZ12',\n        name: 'Surxondaryo',\n      },\n      {\n        code: 'UZ13',\n        name: 'Tashkent City',\n      },\n      {\n        code: 'UZ14',\n        name: 'Tashkent',\n      },\n      {\n        code: 'UZ05',\n        name: 'Xorazm',\n      },\n    ],\n  },\n  {\n    code: 'NH',\n    id: 2406,\n    name: 'Vanuatu',\n    states: [],\n  },\n  {\n    code: 'VE',\n    id: 2363,\n    name: 'Venezuela; Bolivarian Republic of',\n    states: [\n      {\n        code: 'VE01',\n        name: 'Amazonas',\n      },\n      {\n        code: 'VE02',\n        name: 'Anzoátegui',\n      },\n      {\n        code: 'VE03',\n        name: 'Apure',\n      },\n      {\n        code: 'VE04',\n        name: 'Aragua',\n      },\n      {\n        code: 'VE05',\n        name: 'Barinas',\n      },\n      {\n        code: 'VE06',\n        name: 'Bolívar',\n      },\n      {\n        code: 'VE07',\n        name: 'Carabobo',\n      },\n      {\n        code: 'VE08',\n        name: 'Cojedes',\n      },\n      {\n        code: 'VE09',\n        name: 'Delta Amacuro',\n      },\n      {\n        code: 'VE24',\n        name: 'Dependencias Federales',\n      },\n      {\n        code: 'VE25',\n        name: 'Distrito Capital',\n      },\n      {\n        code: 'VE11',\n        name: 'Falcón',\n      },\n      {\n        code: 'VE12',\n        name: 'Guárico',\n      },\n      {\n        code: 'VE13',\n        name: 'Lara',\n      },\n      {\n        code: 'VE14',\n        name: 'Mérida',\n      },\n      {\n        code: 'VE15',\n        name: 'Miranda',\n      },\n      {\n        code: 'VE16',\n        name: 'Monagas',\n      },\n      {\n        code: 'VE17',\n        name: 'Nueva Esparta',\n      },\n      {\n        code: 'VE18',\n        name: 'Portuguesa',\n      },\n      {\n        code: 'VE19',\n        name: 'Sucre',\n      },\n      {\n        code: 'VE20',\n        name: 'Táchira',\n      },\n      {\n        code: 'VE21',\n        name: 'Trujillo',\n      },\n      {\n        code: 'VE26',\n        name: 'Vargas',\n      },\n      {\n        code: 'VE22',\n        name: 'Yaracuy',\n      },\n      {\n        code: 'VE23',\n        name: 'Zulia',\n      },\n    ],\n  },\n  {\n    code: 'VN',\n    id: 2364,\n    name: 'Vietnam',\n    states: [\n      {\n        code: 'VM01',\n        name: 'An Giang',\n      },\n      {\n        code: 'VM45',\n        name: 'Ba Ria-Vung Tau',\n      },\n      {\n        code: 'VM72',\n        name: 'Bac Can',\n      },\n      {\n        code: 'VM71',\n        name: 'Bac Giang',\n      },\n      {\n        code: 'VM73',\n        name: 'Bac Lieu',\n      },\n      {\n        code: 'VM74',\n        name: 'Bac Ninh',\n      },\n      {\n        code: 'VM03',\n        name: 'Ben Tre',\n      },\n      {\n        code: 'VM46',\n        name: 'Binh Dinh',\n      },\n      {\n        code: 'VM75',\n        name: 'Binh Duong',\n      },\n      {\n        code: 'VM76',\n        name: 'Binh Phuoc',\n      },\n      {\n        code: 'VM47',\n        name: 'Binh Thuan',\n      },\n      {\n        code: 'VM77',\n        name: 'Ca Mau',\n      },\n      {\n        code: 'VM87',\n        name: 'Can Tho',\n      },\n      {\n        code: 'VM05',\n        name: 'Cao Bang',\n      },\n      {\n        code: 'VM78',\n        name: 'Da Nang',\n      },\n      {\n        code: 'VM88',\n        name: 'Dac Lac',\n      },\n      {\n        code: 'VM91',\n        name: 'Dac Nong',\n      },\n      {\n        code: 'VM92',\n        name: 'Dien Bien',\n      },\n      {\n        code: 'VM43',\n        name: 'Dong Nai',\n      },\n      {\n        code: 'VM09',\n        name: 'Dong Thap',\n      },\n      {\n        code: 'VM49',\n        name: 'Gia Lai',\n      },\n      {\n        code: 'VM50',\n        name: 'Ha Giang',\n      },\n      {\n        code: 'VM80',\n        name: 'Ha Nam',\n      },\n      {\n        code: 'VM52',\n        name: 'Ha Tinh',\n      },\n      {\n        code: 'VM79',\n        name: 'Hai Duong',\n      },\n      {\n        code: 'VM13',\n        name: 'Haiphong',\n      },\n      {\n        code: 'VM44',\n        name: 'Hanoi',\n      },\n      {\n        code: 'VM93',\n        name: 'Hau Giang',\n      },\n      {\n        code: 'VM20',\n        name: 'Ho Chi Minh',\n      },\n      {\n        code: 'VM53',\n        name: 'Hoa Binh',\n      },\n      {\n        code: 'VM81',\n        name: 'Hung Yen',\n      },\n      {\n        code: 'VM54',\n        name: 'Khanh Hoa',\n      },\n      {\n        code: 'VM21',\n        name: 'Kien Giang',\n      },\n      {\n        code: 'VM55',\n        name: 'Kon Tum',\n      },\n      {\n        code: 'VM89',\n        name: 'Lai Chau',\n      },\n      {\n        code: 'VM23',\n        name: 'Lam Dong',\n      },\n      {\n        code: 'VM39',\n        name: 'Lang Son',\n      },\n      {\n        code: 'VM90',\n        name: 'Lao Cai',\n      },\n      {\n        code: 'VM24',\n        name: 'Long An',\n      },\n      {\n        code: 'VM82',\n        name: 'Nam Dinh',\n      },\n      {\n        code: 'VM58',\n        name: 'Nghe An',\n      },\n      {\n        code: 'VM59',\n        name: 'Ninh Binh',\n      },\n      {\n        code: 'VM60',\n        name: 'Ninh Thuan',\n      },\n      {\n        code: 'VM83',\n        name: 'Phu Tho',\n      },\n      {\n        code: 'VM61',\n        name: 'Phu Yen',\n      },\n      {\n        code: 'VM62',\n        name: 'Quang Binh',\n      },\n      {\n        code: 'VM84',\n        name: 'Quang Nam',\n      },\n      {\n        code: 'VM63',\n        name: 'Quang Ngai',\n      },\n      {\n        code: 'VM30',\n        name: 'Quang Ninh',\n      },\n      {\n        code: 'VM64',\n        name: 'Quang Tri',\n      },\n      {\n        code: 'VM65',\n        name: 'Soc Trang',\n      },\n      {\n        code: 'VM32',\n        name: 'Son La',\n      },\n      {\n        code: 'VM33',\n        name: 'Tay Ninh',\n      },\n      {\n        code: 'VM35',\n        name: 'Thai Binh',\n      },\n      {\n        code: 'VM85',\n        name: 'Thai Nguyen',\n      },\n      {\n        code: 'VM34',\n        name: 'Thanh Hoa',\n      },\n      {\n        code: 'VM66',\n        name: 'Thua Thien-Hue',\n      },\n      {\n        code: 'VM37',\n        name: 'Tien Giang',\n      },\n      {\n        code: 'VM67',\n        name: 'Tra Vinh',\n      },\n      {\n        code: 'VM68',\n        name: 'Tuyen Quang',\n      },\n      {\n        code: 'VM69',\n        name: 'Vinh Long',\n      },\n      {\n        code: 'VM86',\n        name: 'Vinh Phuc',\n      },\n      {\n        code: 'VM70',\n        name: 'Yen Bai',\n      },\n    ],\n  },\n  {\n    code: 'VG',\n    id: 2446,\n    name: 'Virgin Islands; British',\n    states: [\n      {\n        code: 'VG.VI',\n        name: 'British Virgin Islands',\n      },\n    ],\n  },\n  {\n    code: 'VI',\n    id: 2442,\n    name: 'Virgin Islands; U.S.',\n    states: [\n      {\n        code: '010',\n        name: 'Saint Croix',\n      },\n      {\n        code: '020',\n        name: 'Saint John',\n      },\n      {\n        code: '030',\n        name: 'Saint Thomas',\n      },\n    ],\n  },\n  {\n    code: 'WF',\n    id: 2443,\n    name: 'Wallis and Futuna',\n    states: [],\n  },\n  {\n    code: 'EH',\n    id: 2444,\n    name: 'Western Sahara',\n    states: [],\n  },\n  {\n    code: 'YE',\n    id: 2382,\n    name: 'Yemen',\n    states: [\n      {\n        code: 'YM01',\n        name: 'Abyan',\n      },\n      {\n        code: 'YM20',\n        name: \"Al Bayda'\",\n      },\n      {\n        code: 'YM18',\n        name: \"Al Dali'\",\n      },\n      {\n        code: 'YM08',\n        name: 'Al Hudaydah',\n      },\n      {\n        code: 'YM21',\n        name: 'Al Jawf',\n      },\n      {\n        code: 'YM03',\n        name: 'Al Mahrah',\n      },\n      {\n        code: 'YM10',\n        name: 'Al Mahwit',\n      },\n      {\n        code: 'YM19',\n        name: 'Amran',\n      },\n      {\n        code: 'YM11',\n        name: 'Dhamar',\n      },\n      {\n        code: 'YM04',\n        name: 'Hadramawt',\n      },\n      {\n        code: 'YM22',\n        name: 'Hajjah',\n      },\n      {\n        code: 'YM23',\n        name: 'Ibb',\n      },\n      {\n        code: 'YM24',\n        name: 'Lahij',\n      },\n      {\n        code: 'YM14',\n        name: \"Ma'rib\",\n      },\n      {\n        code: 'YM27',\n        name: 'Raymah',\n      },\n      {\n        code: 'YM15',\n        name: 'Sa`dah',\n      },\n      {\n        code: 'YM16',\n        name: \"San`a'\",\n      },\n      {\n        code: 'YM26',\n        name: \"San`a' [City]\",\n      },\n      {\n        code: 'YM05',\n        name: 'Shabwah',\n      },\n      {\n        code: 'YM28',\n        name: 'Socotra',\n      },\n      {\n        code: 'YM25',\n        name: 'Ta`izz',\n      },\n      {\n        code: 'YM02',\n        name: '`Adan',\n      },\n    ],\n  },\n  {\n    code: 'ZM',\n    id: 2369,\n    name: 'Zambia',\n    states: [\n      {\n        code: 'ZA02',\n        name: 'Central',\n      },\n      {\n        code: 'ZA08',\n        name: 'Copperbelt',\n      },\n      {\n        code: 'ZA03',\n        name: 'Eastern',\n      },\n      {\n        code: 'ZA04',\n        name: 'Luapula',\n      },\n      {\n        code: 'ZA09',\n        name: 'Lusaka',\n      },\n      {\n        code: 'ZA10',\n        name: 'Muchinga',\n      },\n      {\n        code: 'ZA06',\n        name: 'North-Western',\n      },\n      {\n        code: 'ZA05',\n        name: 'Northern',\n      },\n      {\n        code: 'ZA07',\n        name: 'Southern',\n      },\n      {\n        code: 'ZA01',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'ZW',\n    id: 2370,\n    name: 'Zimbabwe',\n    states: [\n      {\n        code: 'ZI09',\n        name: 'Bulawayo',\n      },\n      {\n        code: 'ZI10',\n        name: 'Harare',\n      },\n      {\n        code: 'ZI01',\n        name: 'Manicaland',\n      },\n      {\n        code: 'ZI03',\n        name: 'Mashonaland Central',\n      },\n      {\n        code: 'ZI04',\n        name: 'Mashonaland East',\n      },\n      {\n        code: 'ZI05',\n        name: 'Mashonaland West',\n      },\n      {\n        code: 'ZI08',\n        name: 'Masvingo',\n      },\n      {\n        code: 'ZI06',\n        name: 'Matabeleland North',\n      },\n      {\n        code: 'ZI07',\n        name: 'Matabeleland South',\n      },\n      {\n        code: 'ZI02',\n        name: 'Midlands',\n      },\n    ],\n  },\n  {\n    code: 'NONE',\n    id: 2378,\n    name: '- None Specified -',\n    states: [],\n  },\n];\n\n/**\n * Gets all countries\n */\nexport function getCountries(): string[] {\n  return COUNTRIES.map((country) => country.name);\n}\n\n/**\n * Gets a country by country ID\n */\nexport function findByCountryId(id: number):\n  | {\n      [key: string]: any;\n    }\n  | undefined {\n  return COUNTRIES.find((country) => country.id === id);\n}\n\n/**\n * Gets a country by country name\n * @param name - Name of country to find\n */\nexport function findByCountryName(name: string):\n  | {\n      [key: string]: any;\n    }\n  | undefined {\n  return COUNTRIES.find((country) => country.name === name.trim());\n}\n\n/**\n * Gets a country by country code\n * @param code - Code of country to find\n */\nexport function findByCountryCode(code: string):\n  | {\n      [key: string]: any;\n    }\n  | undefined {\n  return COUNTRIES.find((country) => country.code === code.trim());\n}\n\n/**\n * Gets states by country name\n * @param name - Name of the country to search by\n */\nexport function getStateObjects(name: string) {\n  if (name) {\n    const foundCountry = COUNTRIES.find((country) => country.name === name.trim());\n    return (foundCountry && foundCountry.states) || [];\n  }\n  return [];\n}\n\n/**\n * Gets state names by country name\n * @param name - Name of the country to search by\n */\nexport function getStates(name: string): string[] {\n  return getStateObjects(name).map((state) => state.name);\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nexport function BooleanInput(): any {\n  return (target: any, propertyKey: string | symbol) => {\n    const key = Symbol();\n    return {\n      get() {\n        return this[key] || false;\n      },\n      set(value: boolean | string) {\n        this[key] = coerceBooleanProperty(value);\n      },\n    };\n  };\n}\n","/**\n * A Promise that uses the deferred anti-pattern\n */\nexport interface DeferredPromise<T = any> extends Promise<T> {\n  resolve: (value?: unknown) => void;\n  reject: (reason?: any) => void;\n}\n\nexport function Deferred(): DeferredPromise {\n  const temp: any = {};\n  const promise: any = new Promise((resolve: any, reject: any) => {\n    temp.resolve = resolve;\n    temp.reject = reject;\n  });\n  promise.resolve = temp.resolve;\n  promise.reject = temp.reject;\n  return promise;\n}\n","import { isDevMode } from '@angular/core';\n\nconst notifications: { [key: string]: boolean } = {};\n\nexport function notify(message: string): void {\n  if (!isDevMode() || message in notifications) {\n    return;\n  }\n  notifications[message] = true;\n  console.warn(message); // tslint:disable-line\n}\n","// NG2\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\n// APP\nimport { Helpers } from '../../../utils/Helpers';\nimport { notify } from '../../../utils/notifier/notifier.util';\nimport { IMaskOptions } from '../Control';\nimport { NovoControlGroupAddConfig } from '../ControlGroup';\n\nexport interface NovoGroupedControlConfig {\n  label?: string;\n  icon?: string;\n  add?: NovoControlGroupAddConfig;\n  remove?: boolean;\n  key: string;\n  initialValue?: {}[];\n}\n\nclass ControlConfig {\n  alwaysActive?: Boolean;\n  allowInvalidDate?: boolean;\n  appendToBody: boolean; // Deprecated;\n  associatedEntity: string;\n  asyncValidators?: Array<any>;\n  checkboxLabel: string;\n  closeOnSelect: boolean;\n  config: any;\n  controlType: string;\n  currencyFormat: string;\n  customControl?: any;\n  customControlConfig?: any;\n  dataSpecialization: string;\n  dataType: string;\n  dateFormat?: string;\n  description?: string;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  encrypted: boolean;\n  endDate?: Date | Number;\n  fileBrowserImageUploadUrl?: string;\n  forceClear: EventEmitter<any>;\n  headerConfig: any;\n  hidden: boolean;\n  interactions: Array<{ event?: 'change' | 'focus' | string; invokeOnInit?: boolean; script? }>;\n  isEmpty?: Function;\n  key: string;\n  label: string;\n  maskOptions?: IMaskOptions;\n  maxlength: number;\n  metaType: string;\n  military?: boolean;\n  minimal?: boolean;\n  minlength: number;\n  multiple: boolean;\n  name: string;\n  options: Array<any>;\n  optionsType: string;\n  parentScrollSelector: string;\n  placeholder: string;\n  readOnly: boolean; // \"disabled\", so it appears in the model still;\n  removeTooltipArrow?: boolean;\n  required: boolean;\n  restrictFieldInteractions?: boolean;\n  sortOrder: number;\n  startDate?: Date | Number;\n  startupFocus?: boolean;\n  subType?: string;\n  template?: any;\n  textMaskEnabled?: boolean;\n  tooltip?: string;\n  tooltipAutoPosition?: boolean;\n  tooltipPosition?: string;\n  tooltipPreline?: boolean;\n  tooltipSize?: string;\n  type: string;\n  validators: Array<any>;\n  value: any;\n  warning?: string;\n  width: number;\n  layoutOptions?: {\n    customActions?: boolean;\n    download?: boolean;\n    draggable?: boolean;\n    edit?: boolean;\n    iconStyle?: string;\n    labelStyle?: string;\n    order?: string;\n    removable?: boolean;\n    customValidation?: { action: string; fn: Function }[];\n    removableWhenNew?: boolean;\n  };\n  tipWell?: {\n    button?: boolean;\n    icon?: string;\n    tip: string;\n  };\n  isEmbedded = false;\n  isInlineEmbedded = false;\n  weekStart?: number;\n  highlighted = false;\n  disabledDateMessage?: string;\n}\n\nexport type NovoControlConfig = Partial<ControlConfig>;\n\nexport class BaseControl extends ControlConfig {\n  __type: string = 'BaseControl';\n  __config: NovoControlConfig;\n\n  constructor(type: string = 'BaseControl', config: NovoControlConfig = {}) {\n    super();\n    this.__type = type;\n    this.__config = config;\n    this.alwaysActive = config.alwaysActive;\n    this.validators = config.validators || [];\n    this.asyncValidators = config.asyncValidators || [];\n    this.value = config.value;\n    this.key = config.key || '';\n    this.label = config.label || '';\n    this.checkboxLabel = config.checkboxLabel;\n    this.name = config.name || '';\n    this.required = !!config.required;\n    this.hidden = !!config.hidden;\n    this.encrypted = !!config.encrypted;\n    this.sortOrder = config.sortOrder === undefined ? 1 : config.sortOrder;\n    this.controlType = config.controlType || '';\n    this.type = config.type;\n    this.subType = config.subType;\n    this.metaType = config.metaType;\n    this.placeholder = config.placeholder || '';\n    this.config = config.config || null;\n    this.dirty = !!(config.value !== undefined && config.value !== null);\n    this.multiple = !!config.multiple;\n    this.headerConfig = config.headerConfig || null;\n    this.currencyFormat = config.currencyFormat || null;\n    this.associatedEntity = config.associatedEntity || null;\n    this.optionsType = config.optionsType || null;\n    this.options = config.options || [];\n    this.forceClear = new EventEmitter();\n    this.readOnly = !!config.readOnly || !!config.disabled;\n    this.disabled = !!config.disabled;\n    this.enabled = true;\n    this.layoutOptions = config.layoutOptions || {};\n    this.military = !!config.military;\n    this.dateFormat = config.dateFormat;\n    this.textMaskEnabled = config.textMaskEnabled;\n    this.maskOptions = config.maskOptions;\n    this.allowInvalidDate = config.allowInvalidDate;\n    this.startDate = config.startDate;\n    this.endDate = config.endDate;\n    this.restrictFieldInteractions = !!config.restrictFieldInteractions;\n    this.highlighted = !!config.highlighted;\n    if (!Helpers.isEmpty(config.warning)) {\n      this.warning = config.warning;\n    }\n\n    if (this.required) {\n      this.validators.push(Validators.required);\n    }\n    if (!Helpers.isBlank(config.maxlength)) {\n      this.maxlength = config.maxlength;\n      this.validators.push(Validators.maxLength(this.maxlength));\n    }\n    if (!Helpers.isBlank(config.minlength)) {\n      this.minlength = config.minlength;\n      this.validators.push(Validators.minLength(this.minlength));\n    }\n    this.closeOnSelect = !!config.closeOnSelect;\n    this.interactions = config.interactions;\n    this.dataSpecialization = config.dataSpecialization;\n    this.dataType = config.dataType;\n    this.appendToBody = !!config.appendToBody;\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    this.parentScrollSelector = config.parentScrollSelector;\n    this.description = config.description;\n    if (config.tooltip) {\n      this.tooltip = config.tooltip;\n      this.tooltipPosition = config.tooltipPosition;\n      this.tooltipSize = config.tooltipSize;\n      this.tooltipPreline = config.tooltipPreline;\n      this.removeTooltipArrow = config.removeTooltipArrow;\n      this.tooltipAutoPosition = config.tooltipAutoPosition;\n    }\n    this.template = config.template;\n    this.customControlConfig = config.customControlConfig;\n    this.tipWell = config.tipWell;\n    this.width = config.width;\n    this.startupFocus = !!config.startupFocus;\n    if (config.fileBrowserImageUploadUrl) {\n      this.fileBrowserImageUploadUrl = config.fileBrowserImageUploadUrl;\n    }\n    if (config.isEmpty) {\n      this.isEmpty = config.isEmpty;\n    }\n    this.weekStart = config.weekStart || 0;\n    this.disabledDateMessage = config.disabledDateMessage;\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class AceEditorControl extends BaseControl {\n  controlType = 'ace-editor';\n\n  constructor(config: NovoControlConfig) {\n    super('AceEditorControl', config);\n  }\n}\n","import { Helpers } from './../../utils/Helpers';\n\nconst MAX_INTEGER = 2147483647;\nconst MIN_YEAR = 1753;\n\nexport class FormValidators {\n  private showStateRequiredFlag(subfield, control): boolean {\n    return (\n      subfield === 'state' &&\n      !Helpers.isEmpty(control.config.state) &&\n      control.config.state.required &&\n      Helpers.isBlank(control.value.state) &&\n      control.config.state.updated &&\n      !Helpers.isBlank(control.value.countryName) &&\n      control.config.state.pickerConfig &&\n      control.config.state.pickerConfig.defaultOptions &&\n      control.config.state.pickerConfig.defaultOptions.length > 0\n    );\n  }\n\n  // Makes sure the control value does not exceed the max integer value\n  static maxInteger(control) {\n    return control.value < MAX_INTEGER ? null : { integerTooLarge: true };\n  }\n\n  // Makes sure the control value is above the minimum year\n  static minYear(control) {\n    if (!control.value) {\n      return null;\n    }\n    return control.value >= MIN_YEAR ? null : { minYear: true };\n  }\n\n  // Makes sure the control value does not exceed the max number value\n  static maxDouble(control) {\n    return control.value < Number.MAX_SAFE_INTEGER ? null : { doubleTooLarge: true };\n  }\n\n  // Make sure the control value is an email\n  static isEmail(control) {\n    const EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    return !control.value || EMAIL_REGEXP.test(control.value) ? null : { invalidEmail: true };\n  }\n  // Makes sure the control value is a valid address\n  static isValidAddress(control) {\n    const fieldList: string[] = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n    const invalidAddressFields: string[] = [];\n    const maxlengthFields: string[] = [];\n    let returnVal: {\n      invalidAddress?: boolean;\n      invalidAddressFields?: string[];\n      invalidAddressForForm?: boolean;\n      maxlength?: boolean;\n      maxlengthFields?: string[];\n    } = null;\n    let maxlengthError: boolean = false;\n    const showCountryRequiredFlag = (subfield, ctrl) => {\n      return (\n        subfield === 'countryID' &&\n        !Helpers.isEmpty(ctrl.config.countryID) &&\n        ctrl.config.countryID.required &&\n        Helpers.isBlank(ctrl.value.countryName) &&\n        ctrl.config.countryID.updated\n      );\n    };\n\n    const showStateRequiredFlag = (subfield, ctrl): boolean => {\n      return (\n        subfield === 'state' &&\n        !Helpers.isEmpty(ctrl.config.state) &&\n        ctrl.config.state.required &&\n        Helpers.isBlank(ctrl.value.state) &&\n        ctrl.config.state.updated &&\n        !Helpers.isBlank(ctrl.value.countryName) &&\n        ctrl.config.state.pickerConfig &&\n        ctrl.config.state.pickerConfig.defaultOptions &&\n        ctrl.config.state.pickerConfig.defaultOptions.length > 0\n      );\n    };\n\n    if (control.value && control.config) {\n      let valid = true;\n      let formValidity = true;\n      fieldList.forEach((subfield: string) => {\n        if (!Helpers.isEmpty(control.config[subfield])) {\n          if (\n            (['countryID', 'state'].indexOf(subfield) === -1 &&\n              control.config[subfield].required &&\n              !Helpers.isBlank(control.value[subfield]) &&\n              Helpers.isEmpty(control.value[subfield])) ||\n            showCountryRequiredFlag(subfield, control) ||\n            showStateRequiredFlag(subfield, control)\n          ) {\n            valid = false;\n            invalidAddressFields.push(control.config[subfield].label);\n          }\n          if (\n            ((subfield !== 'countryID' && control.config[subfield].required && Helpers.isEmpty(control.value[subfield])) ||\n              (subfield === 'countryID' &&\n                !Helpers.isEmpty(control.config.countryID) &&\n                control.config.countryID.required &&\n                Helpers.isEmpty(control.value.countryName))) &&\n            !(\n              subfield === 'state' &&\n              !Helpers.isBlank(control.value.countryName) &&\n              control.config.state.pickerConfig &&\n              control.config.state.pickerConfig.defaultOptions &&\n              control.config.state.pickerConfig.defaultOptions.length === 0\n            )\n          ) {\n            formValidity = false;\n          }\n          if (\n            !Helpers.isEmpty(control.config[subfield].maxlength) &&\n            !Helpers.isEmpty(control.value[subfield]) &&\n            control.value[subfield].length > control.config[subfield].maxlength\n          ) {\n            maxlengthError = true;\n            maxlengthFields.push(subfield);\n            formValidity = false;\n          }\n        }\n      });\n      if (!valid || !formValidity || maxlengthError) {\n        returnVal = {};\n      }\n      if (!valid) {\n        returnVal.invalidAddress = true;\n        returnVal.invalidAddressFields = invalidAddressFields;\n      }\n      if (!formValidity) {\n        returnVal.invalidAddressForForm = true;\n      }\n      if (maxlengthError) {\n        returnVal.maxlength = true;\n        returnVal.maxlengthFields = maxlengthFields;\n      }\n      return returnVal;\n    }\n    return null;\n  }\n}\n","// APP\nimport { FormValidators } from '../../FormValidators';\nimport { BaseControl, NovoControlConfig } from '../BaseControl';\n\nexport class AddressControl extends BaseControl {\n  controlType = 'address';\n  constructor(config: NovoControlConfig) {\n    super('AddressControl', config);\n    this.validators.push(FormValidators.isValidAddress);\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class CheckListControl extends BaseControl {\n  controlType = 'checklist';\n\n  constructor(config: NovoControlConfig) {\n    super('CheckListControl', config);\n    this.options = config.options || [];\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class CheckboxControl extends BaseControl {\n  controlType = 'checkbox';\n\n  constructor(config: NovoControlConfig) {\n    super('CheckboxControl', config);\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class CustomControl extends BaseControl {\n  controlType = 'custom';\n\n  constructor(config: NovoControlConfig) {\n    super(config.template, config);\n    this.controlType = config.template;\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class DateControl extends BaseControl {\n  controlType = 'date';\n\n  constructor(config: NovoControlConfig) {\n    super('DateControl', config);\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class DateTimeControl extends BaseControl {\n  controlType = 'date-time';\n\n  constructor(config: NovoControlConfig) {\n    super('DateTimeControl', config);\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class EditorControl extends BaseControl {\n  controlType = 'editor';\n  minimal: boolean = false;\n\n  constructor(config: NovoControlConfig) {\n    super('EditorControl', config);\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class FileControl extends BaseControl {\n  controlType = 'file';\n\n  constructor(config: NovoControlConfig) {\n    super('FileControl', config);\n    // TODO - translate\n    this.placeholder = config.placeholder;\n    this.multiple = config.multiple;\n  }\n}\n","// APP\nimport { NovoGroupedControlConfig } from './../BaseControl';\n\nexport class GroupedControl implements NovoGroupedControlConfig {\n  public __type: string;\n  key: string;\n\n  constructor(config: NovoGroupedControlConfig) {\n    this.__type = 'GroupedControl';\n    Object.keys(config).forEach((key) => (this[key] = config[key]));\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class NativeSelectControl extends BaseControl {\n  controlType = 'native-select';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('NativeSelectControl', config);\n    this.options = config.options || [];\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class PickerControl extends BaseControl {\n  controlType = 'picker';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('PickerControl', config);\n    this.options = config.options || [];\n  }\n}\n\nexport class TablePickerControl extends PickerControl {\n  constructor(config: NovoControlConfig) {\n    super(Object.assign(config, { parentScrollSelector: '.table-container' }));\n    this.__type = 'TablePickerControl';\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from '../BaseControl';\n\nexport class QuickNoteControl extends BaseControl {\n  controlType = 'quick-note';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('QuickNoteControl', config);\n    this.options = config.options || [];\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class RadioControl extends BaseControl {\n  controlType = 'radio';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('RadioControl', config);\n    this.options = config.options || [];\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class ReadOnlyControl extends BaseControl {\n  controlType = 'read-only';\n\n  constructor(config: NovoControlConfig) {\n    super('ReadOnlyControl', config);\n    config.readOnly = true;\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class SelectControl extends BaseControl {\n  controlType = 'select';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('SelectControl', config);\n    this.options = config.options || [];\n    this.placeholder = config.placeholder || '';\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from '../BaseControl';\n\nexport class SwitchControl extends BaseControl {\n  controlType = 'switch';\n\n  constructor(config: NovoControlConfig) {\n    super('SwitchControl', config);\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class TextAreaControl extends BaseControl {\n  controlType = 'text-area';\n\n  constructor(config: NovoControlConfig) {\n    super('TextAreaControl', config);\n  }\n}\n","// APP\nimport { FormValidators } from './../../FormValidators';\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class TextBoxControl extends BaseControl {\n  controlType: string = 'textbox';\n  type: string;\n  subType: string;\n\n  constructor(config: NovoControlConfig) {\n    super('TextBoxControl', config);\n    this.type = this.getTextboxType(config.type) || '';\n    this.subType = config.type || '';\n    this.setValidators(this.subType);\n  }\n\n  setValidators(type) {\n    switch (type) {\n      case 'email':\n        this.validators.push(FormValidators.isEmail);\n        break;\n      case 'number':\n      case 'currency':\n        this.validators.push(FormValidators.maxInteger);\n        break;\n      case 'float':\n      case 'percentage':\n        this.validators.push(FormValidators.maxDouble);\n        break;\n      case 'year':\n        this.validators.push(FormValidators.minYear);\n        break;\n      default:\n        break;\n    }\n  }\n\n  getTextboxType(type) {\n    switch (type) {\n      case 'percentage':\n      case 'currency':\n      case 'float':\n      case 'year':\n        return 'number';\n      default:\n        return type;\n    }\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class TilesControl extends BaseControl {\n  controlType = 'tiles';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('TilesControl', config);\n    this.options = config.options || [];\n  }\n}\n","// APP\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\n\nexport class TimeControl extends BaseControl {\n  controlType = 'time';\n\n  constructor(config: NovoControlConfig) {\n    super('TimeControl', config);\n  }\n}\n","// APP\nimport { findTimeZone, getZonedTime, listTimeZones } from 'timezone-support';\nimport { formatZonedTime } from 'timezone-support/dist/parse-format';\nimport { BaseControl, NovoControlConfig } from '../BaseControl';\n\nexport class TimezoneControl extends BaseControl {\n  controlType = 'timezone';\n  options = [];\n\n  constructor(config: NovoControlConfig) {\n    super('TimezoneControl', config);\n    this.options = this.buildTimezones(new Date());\n    this.placeholder = config.placeholder || '';\n    // current timezone\n    const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    this.value = tz;\n  }\n\n  private buildTimezones = (compareDate: Date) => {\n    const timezones = listTimeZones()\n      .map((zone) => {\n        const timezone = findTimeZone(zone);\n        const zonedTime = getZonedTime(compareDate, timezone);\n        const formatted = formatZonedTime(zonedTime, `z - [${zone}] ([GMT] Z)`).replace('_', ' ');\n\n        const option = {\n          value: zone,\n          label: formatted,\n          offset: zonedTime.zone.offset,\n        };\n        // if (this.props.mapLabels) {\n        //   option.label = this.props.mapLabels(option);\n        // }\n        return option;\n      })\n      // Formats 'noisy' timezones without a letter acronym.\n      .map((option) => {\n        const rgx = /(^(\\+|-)\\d+\\s- )/;\n        const matches = option.label.match(rgx);\n        if (matches) {\n          const prefix = matches[0];\n          option.label = option.label.split(prefix)[1];\n        }\n        return option;\n      })\n      // Sorts W -> E, prioritizes america. could be more nuanced based on system tz but simple for now\n      .sort((a, b) => {\n        const offsetDelta = b.offset - a.offset;\n        if (offsetDelta !== 0) {\n          return offsetDelta;\n        }\n        if (a.label < b.label) {\n          return -1;\n        }\n        if (a.label > b.label) {\n          return 1;\n        }\n        return 0;\n      });\n    return timezones;\n  };\n}\n","import { BaseControl } from './BaseControl';\nimport {\n  AddressControl,\n  CheckboxControl,\n  CheckListControl,\n  DateTimeControl,\n  EditorControl,\n  FileControl,\n  NativeSelectControl,\n  PickerControl,\n  QuickNoteControl,\n  RadioControl,\n  ReadOnlyControl,\n  SelectControl,\n  SwitchControl,\n  TablePickerControl,\n  TextAreaControl,\n  TextBoxControl,\n  TilesControl,\n  TimeControl,\n} from './index';\n\nexport class ControlFactory {\n  static create(type: string, config: BaseControl): BaseControl {\n    switch (type) {\n      case 'AddressControl':\n        return new AddressControl(config);\n      case 'CheckboxControl':\n        return new CheckboxControl(config);\n      case 'CheckListControl':\n        return new CheckListControl(config);\n      case 'CheckListControl':\n        return new CheckListControl(config);\n      case 'DateTimeControl':\n        return new DateTimeControl(config);\n      case 'EditorControl':\n        return new EditorControl(config);\n      case 'FileControl':\n        return new FileControl(config);\n      case 'NativeSelectControl':\n        return new NativeSelectControl(config);\n      case 'PickerControl':\n        return new PickerControl(config);\n      case 'TablePickerControl':\n        return new TablePickerControl(config);\n      case 'QuickNoteControl':\n        return new QuickNoteControl(config);\n      case 'RadioControl':\n        return new RadioControl(config);\n      case 'ReadOnlyControl':\n        return new ReadOnlyControl(config);\n      case 'TextAreaControl':\n        return new TextAreaControl(config);\n      case 'TextBoxControl':\n        return new TextBoxControl(config);\n      case 'SelectControl':\n        return new SelectControl(config);\n      case 'SwitchControl':\n        return new SwitchControl(config);\n      case 'TilesControl':\n        return new TilesControl(config);\n      case 'TimeControl':\n        return new TimeControl(config);\n      default:\n        console.warn(\n          '[ControlFactory] - unable to find control for type. Make sure to set \"editorType\" and \"editorConfig\" on your column',\n          type,\n        );\n        return null;\n    }\n  }\n}\n","// NG2\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { IMaskOptions } from './Control';\n// APP\nimport { NovoControlConfig } from './FormControls';\n\nexport class NovoFormControl extends FormControl {\n  displayValueChanges: EventEmitter<any> = new EventEmitter<any>();\n  hidden: boolean;\n  encrypted: boolean;\n  key: string;\n  required: boolean;\n  readOnly: boolean;\n  hasRequiredValidator: boolean;\n  label: string;\n  tooltip: string;\n  tooltipPosition: string;\n  tooltipSize?: string;\n  tooltipPreline?: boolean;\n  removeTooltipArrow?: boolean;\n  tooltipAutoPosition?: boolean;\n  initialValue: any;\n  valueHistory = [];\n  validators: any;\n  config: any;\n  sortOrder: number;\n  controlType: string;\n  placeholder: string;\n  minimal: boolean;\n  multiple: boolean;\n  headerConfig: any;\n  optionsType: string;\n  maxlength: number;\n  minlength: number;\n  options: Array<any>;\n  type: string;\n  subType: string;\n  name: string;\n  closeOnSelect: boolean;\n  interactions: Array<Object>;\n  appendToBody: boolean; // Deprecated\n  parentScrollSelector: string;\n  description?: string;\n  layoutOptions?: { order?: string; download?: boolean; labelStyle?: string; draggable?: boolean; iconStyle?: string };\n  military?: boolean;\n  dateFormat?: string;\n  currencyFormat?: string;\n  startDate?: Date | Number;\n  endDate?: Date | Number;\n  weekStart?: number;\n  textMaskEnabled?: boolean;\n  maskOptions: IMaskOptions;\n  allowInvalidDate?: boolean;\n  tipWell?: {\n    tip: string;\n    icon?: string;\n    button?: boolean;\n    sanitize?: boolean;\n  };\n  rawValue?: any;\n  customControlConfig?: any;\n  checkboxLabel?: string;\n  restrictFieldInteractions?: boolean;\n  warning?: string;\n  highlighted?: boolean;\n  disabledDateMessage?: string;\n  private historyTimeout: any;\n\n  constructor(value: any, control: NovoControlConfig) {\n    super(value, control.validators, control.asyncValidators);\n    this.validators = control.validators;\n    this.initialValue = value;\n    this.valueHistory.push(value);\n    this.key = control.key;\n    this.label = control.label;\n    this.readOnly = control.readOnly;\n    this.hidden = control.hidden;\n    this.encrypted = control.encrypted;\n    this.config = control.config;\n    this.type = control.type;\n    this.subType = control.subType;\n    this.required = control.required;\n    this.hasRequiredValidator = this.required;\n    this.tooltip = control.tooltip;\n    this.tooltipPosition = control.tooltipPosition;\n    this.tooltipSize = control.tooltipSize;\n    this.tooltipPreline = control.tooltipPreline;\n    this.removeTooltipArrow = control.removeTooltipArrow;\n    this.tooltipAutoPosition = control.tooltipAutoPosition;\n    this.label = control.label;\n    this.name = control.name;\n    this.required = control.required;\n    this.sortOrder = control.sortOrder;\n    this.controlType = control.controlType;\n    this.placeholder = control.placeholder;\n    this.minimal = control.minimal;\n    this.multiple = control.multiple;\n    this.headerConfig = control.headerConfig;\n    this.optionsType = control.optionsType;\n    this.readOnly = control.readOnly;\n    this.layoutOptions = control.layoutOptions;\n    this.military = control.military;\n    this.dateFormat = control.dateFormat;\n    this.currencyFormat = control.currencyFormat;\n    this.startDate = control.startDate;\n    this.endDate = control.endDate;\n    this.weekStart = control.weekStart;\n    this.textMaskEnabled = control.textMaskEnabled;\n    this.textMaskEnabled = control.textMaskEnabled;\n    this.maskOptions = control.maskOptions;\n    this.allowInvalidDate = control.allowInvalidDate;\n    this.maxlength = control.maxlength;\n    this.minlength = control.minlength;\n    this.closeOnSelect = control.closeOnSelect;\n    this.interactions = control.interactions;\n    this.checkboxLabel = control.checkboxLabel;\n    this.restrictFieldInteractions = control.restrictFieldInteractions;\n    this.appendToBody = control.appendToBody;\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    this.parentScrollSelector = control.parentScrollSelector;\n    this.description = control.description;\n    this.options = control.options;\n    this.tipWell = control.tipWell;\n    this.customControlConfig = control.customControlConfig;\n    this.warning = control.warning;\n    this.disabledDateMessage = control.disabledDateMessage;\n\n    // Reactive Form, need to enable/disable, can't bind to [disabled]\n    if (this.readOnly) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * @param clearValue - flag to reset the control's value\n   */\n  hide(clearValue: boolean = true): void {\n    this.hidden = true;\n    if (clearValue) {\n      this.setValue(null);\n    }\n  }\n\n  show(): void {\n    this.hidden = false;\n  }\n\n  setRequired(isRequired: boolean): void {\n    this.required = isRequired;\n    // Update validators to have the required\n    if (this.required && !this.hasRequiredValidator) {\n      const validators: any = [...this.validators];\n      validators.push(Validators.required);\n      // TODO: duplicated below\n      this.setValidators(validators);\n      this.updateValueAndValidity({ emitEvent: false });\n      this.hasRequiredValidator = this.required;\n    } else if (!this.required && this.hasRequiredValidator) {\n      let validators: any = [...this.validators];\n      validators = validators.filter((val) => val !== Validators.required);\n      // TODO: duplicated above\n      this.setValidators(validators);\n      this.updateValueAndValidity({ emitEvent: false });\n      this.hasRequiredValidator = this.required;\n    }\n  }\n\n  setValue(\n    value: any,\n    {\n      onlySelf,\n      emitEvent,\n      emitModelToViewChange,\n      emitViewToModelChange,\n    }: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    } = {},\n  ) {\n    this.markAsDirty();\n    this.markAsTouched();\n    this.displayValueChanges.emit(value);\n    super.setValue(value, { onlySelf, emitEvent, emitModelToViewChange, emitViewToModelChange });\n\n    // History\n    clearTimeout(this.historyTimeout);\n    this.historyTimeout = setTimeout(() => {\n      this.valueHistory.push(value);\n    }, 300);\n  }\n\n  setReadOnly(isReadOnly: boolean): void {\n    this.readOnly = isReadOnly;\n    if (this.readOnly) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Disables the control. This means the control will be exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children will be disabled to maintain the model.\n   */\n  disable(opts: { onlySelf?: boolean; emitEvent?: boolean } = { emitEvent: false }): void {\n    if (typeof opts.emitEvent === 'undefined') {\n      opts.emitEvent = false;\n    }\n    super.disable(opts);\n  }\n\n  enable(opts: { onlySelf?: boolean; emitEvent?: boolean } = { emitEvent: false }): void {\n    if (typeof opts.emitEvent === 'undefined') {\n      opts.emitEvent = false;\n    }\n    super.enable(opts);\n  }\n\n  markAsInvalid(message: string): void {\n    this.markAsDirty();\n    this.markAsTouched();\n    this.setErrors(Object.assign({}, this.errors, { custom: message }));\n  }\n\n  markAsValid(): void {\n    this.setErrors(null);\n  }\n}\n","// NG\nimport { EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n// App\nimport { IFieldInteractionEvent } from './FormInterfaces';\nimport { NovoFormControl } from './NovoFormControl';\n\nexport class NovoFormGroup extends FormGroup {\n  public fieldInteractionEvents: EventEmitter<IFieldInteractionEvent> = new EventEmitter();\n  public layout: string;\n  public edit: boolean;\n  public currentEntity: string;\n  public currentEntityId: string;\n  public associations: object;\n  public fieldsets: any[];\n  public _value: any;\n  public controls: { [key: string]: any };\n  public novoControls: any[];\n\n  get value() {\n    return this.getRawValue(); // The value property on Angular form groups do not include disabled form control values.  Find way to address this.\n  }\n\n  set value(v: any) {\n    this._value = v;\n  }\n\n  public enableAllControls(): void {\n    for (const key in this.controls) {\n      if ((this.controls[key] as NovoFormControl).readOnly) {\n        (this.controls[key] as NovoFormControl).readOnly = false;\n        this.controls[key].enable();\n      }\n    }\n  }\n\n  public disableAllControls(): void {\n    for (const key in this.controls) {\n      if (!(this.controls[key] as NovoFormControl).readOnly) {\n        (this.controls[key] as NovoFormControl).readOnly = true;\n        this.controls[key].disable();\n      }\n    }\n  }\n}\n","// NG2\nimport { Inject, Injectable, LOCALE_ID, Optional } from '@angular/core';\n//  import DateTimeFormatPart = Intl.DateTimeFormatPart;\n\ninterface TimeFormatParts {\n  hour: string;\n  minute: string;\n  dayPeriod?: string;\n}\n\nexport interface BigDecimalFormatOptions extends Intl.NumberFormatOptions {\n  useAccountingFormat?: boolean; // Render negative numbers using parens. True: \"(3.14)\", False: \"-3.14\"\n}\n\n@Injectable()\nexport class NovoLabelService {\n  filters = 'Filter';\n  clear = 'Clear';\n  sort = 'Sort';\n  distributionListOwner = 'Owner';\n  dateAdded = 'Date Added';\n  emptyTableMessage = 'No Records to display...';\n  noMatchingRecordsMessage = 'No Matching Records';\n  erroredTableMessage = 'Oops! An error occurred.';\n  pickerError = 'Oops! An error occurred.';\n  pickerTextFieldEmpty = 'Begin typing to see results.';\n  pickerEmpty = 'No results to display...';\n  tabbedGroupPickerEmpty = 'No results found';\n  quickNoteError = 'Oops! An error occurred.';\n  quickNoteEmpty = 'No results to display...';\n  required = 'Required';\n  numberTooLarge = 'Number is too large';\n  save = 'Save';\n  cancel = 'Cancel';\n  next = 'Next';\n  itemsPerPage = 'Items per page:';\n  select = 'Select...';\n  selected = 'Selected';\n  selectAllOnPage = 'Select all on page';\n  deselectAll = 'Deselect all';\n  refresh = 'Refresh';\n  close = 'Close';\n  move = 'Move';\n  startDate = 'Start Date';\n  endDate = 'End Date';\n  rate = 'Rate';\n  more = 'more';\n  clearAll = 'CLEAR ALL';\n  clearAllNormalCase = 'Clear All';\n  clearSort = 'Clear Sort';\n  clearFilter = 'Clear Filter';\n  clearSelected = 'Clear Selected';\n  today = 'Today';\n  now = 'Now';\n  isRequired = 'is required';\n  notValidYear = 'is not a valid year';\n  isTooLarge = 'is too large';\n  invalidAddress = 'requires at least one field filled out';\n  invalidEmail = 'requires a valid email (ex. abc@123.com)';\n  minLength = 'is required to be a minimum length of';\n  past1Day = 'Past 1 Day';\n  past7Days = 'Past 7 Days';\n  past30Days = 'Past 30 Days';\n  past90Days = 'Past 90 Days';\n  past1Year = 'Past 1 Year';\n  next1Day = 'Next 1 Day';\n  next7Days = 'Next 7 Days';\n  next30Days = 'Next 30 Days';\n  next90Days = 'Next 90 Days';\n  next1Year = 'Next 1 Year';\n  customDateRange = 'Custom Date Range';\n  backToPresetFilters = 'Back to Preset Filters';\n  okGotIt = 'Ok, Got it';\n  address = 'Address';\n  address1 = 'Address';\n  apt = 'Apt'; // TODO delete\n  address2 = 'Apt';\n  city = 'City / Locality';\n  state = 'State / Region';\n  zip = 'Postal Code';\n  zipCode = 'Postal Code'; // TODO delete\n  country = 'Country';\n  or = 'or';\n  clickToBrowse = 'click to browse';\n  chooseAFile = 'Choose a file';\n  no = 'No';\n  yes = 'Yes';\n  search = 'SEARCH';\n  noItems = 'There are no items';\n  dateFormat = 'MM/dd/yyyy';\n  dateFormatPlaceholder = 'MM/DD/YYYY';\n  localDatePlaceholder = 'mm/dd/yyyy';\n  timeFormatPlaceholderAM = 'hh:mm AM';\n  timeFormatPlaceholder24Hour = 'HH:mm';\n  timeFormatAM = 'AM';\n  timeFormatPM = 'PM';\n  confirmChangesModalMessage = 'Are you sure you want to change this field?';\n  promptModalMessage = 'Do you want to perform the following changes?';\n  asyncFailure = 'Async validation was not called within the 10s threshold, you might want to reload the page to try again';\n  previous = 'Previous';\n  actions = 'Actions';\n  all = 'All';\n  groupedMultiPickerEmpty = 'No items to display';\n  groupedMultiPickerSelectCategory = 'Select a category from the left to get started';\n  add = 'Add';\n  encryptedFieldTooltip = 'This data has been stored at the highest level of security';\n  noStatesForCountry = 'No states available for the selected country';\n  selectCountryFirst = 'Please select a country before selecting a state';\n  invalidIntegerInput = 'Special characters are not allowed for';\n  maxRecordsReached = 'Sorry, you have reached the maximum number of records allowed for this field';\n  selectFilterOptions = 'Please select one or more filter options below.';\n\n  constructor(\n    @Optional()\n    @Inject(LOCALE_ID)\n    public userLocale = 'en-US',\n  ) {}\n\n  maxlengthMetWithField(field: string, maxlength: number): string {\n    return `Sorry, you have reached the maximum character count of ${maxlength} for ${field}.`;\n  }\n\n  maxlengthMet(maxlength: number): string {\n    return `Sorry, you have reached the maximum character count of ${maxlength} for this field.`;\n  }\n\n  invalidMaxlengthWithField(field: string, maxlength: number): string {\n    return `Sorry, you have exceeded the maximum character count of ${maxlength} for ${field}.`;\n  }\n\n  invalidMaxlength(maxlength: number): string {\n    return `Sorry, you have exceeded the maximum character count of ${maxlength} for this field.`;\n  }\n\n  getToManyPlusMore(toMany: { quantity: number }): string {\n    return `+${toMany.quantity} more`;\n  }\n\n  selectedRecords(selected: number) {\n    return `${selected} records are selected.`;\n  }\n\n  showingXofXResults(shown: number, total: number) {\n    return `Showing ${shown} of ${total} Results.`;\n  }\n\n  totalRecords(total: number, select = false) {\n    return select ? `Select all ${total} records.` : `De-select remaining ${total} records.`;\n  }\n\n  dateFormatString(): string {\n    return this.dateFormat;\n  }\n\n  localizedDatePlaceholder(): string {\n    return this.localDatePlaceholder;\n  }\n\n  tabbedGroupClearSuggestion(tabLabelPlural: string): string {\n    return `Clear your search to see all ${tabLabelPlural}.`;\n  }\n\n  formatDateWithFormat(value: any, format: Intl.DateTimeFormatOptions) {\n    const date = value instanceof Date ? value : new Date(value);\n    if (date.getTime() !== date.getTime()) {\n      return value;\n    }\n    return new Intl.DateTimeFormat(this.userLocale, format).format(date);\n  }\n\n  formatToTimeOnly(param) {}\n\n  formatToDateOnly(param) {}\n\n  formatTimeWithFormat(value: any, format: Intl.DateTimeFormatOptions): string {\n    const date = value instanceof Date ? value : new Date(value);\n    if (date.getTime() !== date.getTime()) {\n      return value;\n    }\n    const timeParts: { [type: string]: string } = Intl.DateTimeFormat(this.userLocale, format)\n      .formatToParts(date)\n      .reduce((obj, part) => {\n        obj[part.type] = part.value;\n        return obj;\n      }, {});\n    const dayPeriod = timeParts.dayPeriod ? timeParts.dayPeriod : '';\n    const res = `${timeParts.hour}:${timeParts.minute} ${dayPeriod}`;\n    return res;\n  }\n\n  getWeekdays(weekStartsOn = 0): string[] {\n    function getDay(dayOfWeek) {\n      const dt = new Date();\n      return dt.setDate(dt.getDate() - dt.getDay() + dayOfWeek);\n    }\n\n    let weekdays = [getDay(0), getDay(1), getDay(2), getDay(3), getDay(4), getDay(5), getDay(6)].reduce((weekdays, dt) => {\n      weekdays.push(new Intl.DateTimeFormat(this.userLocale, { weekday: 'long' }).format(dt));\n      return weekdays;\n    }, []);\n\n    if (weekStartsOn > 0 && weekStartsOn <= 6) {\n      const newStart = weekdays.splice(weekStartsOn);\n      weekdays = [...newStart, ...weekdays];\n    }\n    return weekdays;\n  }\n\n  getMonths(): string[] {\n    function getMonth(month) {\n      const dt = new Date();\n      return dt.setMonth(month, 1);\n    }\n\n    return [\n      getMonth(0),\n      getMonth(1),\n      getMonth(2),\n      getMonth(3),\n      getMonth(4),\n      getMonth(5),\n      getMonth(6),\n      getMonth(7),\n      getMonth(8),\n      getMonth(9),\n      getMonth(10),\n      getMonth(11),\n    ].reduce((months, dt) => {\n      months.push(new Intl.DateTimeFormat(this.userLocale, { month: 'long' }).format(dt));\n      return months;\n    }, []);\n  }\n\n  getProperty(value: string) {\n    return this[value];\n  }\n\n  getRangeText(page: number, pageSize: number, length: number, short: boolean): string {\n    if (length === 0 || pageSize === 0) {\n      return `Displaying 0 of ${length}`;\n    }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n\n    return short ? `${startIndex + 1} - ${endIndex}/${length}` : `Displaying ${startIndex + 1} - ${endIndex} of ${length}`;\n  }\n\n  formatCurrency(value: number): string {\n    const options = { style: 'currency', currency: 'USD' };\n    return new Intl.NumberFormat(this.userLocale, options).format(value);\n  }\n\n  /**\n   * Extends the Intl.numberFormat capability with two extra features:\n   *  - Does NOT round values, but instead truncates to maximumFractionDigits\n   *  - By default uses accounting format for negative numbers: (3.14) instead of -3.14.\n   *\n   * @param value           The number value to convert to string\n   * @param overrideOptions Allows for overriding options used and passed to Intl.NumberFormat()\n   */\n  formatBigDecimal(value: number, overrideOptions?: BigDecimalFormatOptions): string {\n    const defaultOptions: BigDecimalFormatOptions = {\n      style: 'decimal',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n      useAccountingFormat: true,\n    };\n    const options: BigDecimalFormatOptions = Object.assign(defaultOptions, overrideOptions);\n    const truncatedValue = this.truncateToPrecision(value, options.maximumFractionDigits);\n    let _value = new Intl.NumberFormat(this.userLocale, options).format(truncatedValue);\n    if (value < 0) {\n      _value = options.useAccountingFormat ? `(${_value.slice(1)})` : `-${_value.slice(1)}`;\n    }\n    return _value;\n  }\n\n  /**\n   * Performs a string-based truncating of a number with no rounding\n   */\n  truncateToPrecision(value: number, precision: number) {\n    let valueAsString = value ? value.toString() : '0';\n    const decimalIndex = valueAsString.indexOf('.');\n    if (decimalIndex > -1 && decimalIndex + precision + 1 < valueAsString.length) {\n      valueAsString = valueAsString.substring(0, valueAsString.indexOf('.') + precision + 1);\n    }\n    return Number(valueAsString);\n  }\n\n  formatNumber(value, options?: Intl.NumberFormatOptions) {\n    return new Intl.NumberFormat(this.userLocale, options).format(value);\n  }\n\n  formatDateShort(value: string | number | Date) {\n    const options: Intl.DateTimeFormatOptions = {\n      // DD/MM/YYYY, HH:MM A - 02/14/2017, 1:17 PM\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n    };\n    const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n\n  formatTime(value: string | number | Date) {\n    const options: Intl.DateTimeFormatOptions = {\n      // HH:MM A - 1:17 PM\n      hour: 'numeric',\n      minute: '2-digit',\n    };\n    const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n\n  formatDate(value: string | number | Date) {\n    const options: Intl.DateTimeFormatOptions = {\n      // DD/MM/YYYY - 02/14/2017\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    };\n    const _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n}\n\nexport const NOVO_ELEMENTS_LABELS_PROVIDERS = [{ provide: NovoLabelService, useClass: NovoLabelService }];\n","// NG2\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { ChangeDetectorRef, Directive, ElementRef, Input } from '@angular/core';\n// Vendor\nimport { from, Observable } from 'rxjs';\n// APP\nimport { Helpers } from '../../../../utils/Helpers';\nimport { NovoControlConfig } from '../../../form/controls/BaseControl';\n\n/**\n * @description This is the actual list of matches that gets injected into the DOM. It's also the piece that can be\n * overwritten if custom list options are needed.\n */\n@Directive()\nexport class BasePickerResults {\n  _term: string = '';\n  selected: Array<any> = [];\n  @Input() matches: any = [];\n  hasError: boolean = false;\n  isLoading: boolean = false;\n  isStatic: boolean = true;\n  _config: NovoControlConfig['config'];\n  activeMatch: any;\n  parent: any;\n  element: ElementRef;\n  ref: ChangeDetectorRef;\n  page: number = 0;\n  lastPage: boolean = false;\n  autoSelectFirstOption: boolean = true;\n  overlay: OverlayRef;\n  optionsFunctionHasChanged: boolean = false;\n  private selectingMatches: boolean = false;\n  private scrollHandler: any;\n\n  constructor(element: ElementRef, ref: ChangeDetectorRef) {\n    this.element = element;\n    this.ref = ref;\n    this.scrollHandler = this.onScrollDown.bind(this);\n  }\n\n  cleanUp(): void {\n    const element: Element = this.getListElement();\n    if (element && element.hasAttribute('scrollListener')) {\n      element.removeAttribute('scrollListener');\n      element.removeEventListener('scroll', this.scrollHandler);\n    }\n  }\n\n  onScrollDown(event: WheelEvent) {\n    const element: any = event.target;\n    if (element) {\n      const offset = element.offsetHeight + element.scrollTop;\n      const bottom = element.scrollHeight - 300;\n      if (offset >= bottom) {\n        event.stopPropagation();\n        if (!this.lastPage && !this.isLoading) {\n          this.processSearch();\n        }\n      }\n    }\n  }\n\n  get term() {\n    return this._term;\n  }\n\n  set term(value) {\n    if (this.shouldSearch(value)) {\n      this._term = value;\n      this.page = 0;\n      this.optionsFunctionHasChanged = false;\n      this.matches = [];\n      this.processSearch(true);\n    } else {\n      this.addScrollListener();\n    }\n  }\n\n  set config(value: NovoControlConfig['config']) {\n    if (this.config && this.config.options !== value.options) {\n      this.optionsFunctionHasChanged = true; // reset page so that new options call is used to search\n    }\n    this._config = value;\n  }\n\n  get config(): NovoControlConfig['config'] {\n    return this._config;\n  }\n\n  shouldSearch(value: unknown): boolean {\n    const termHasChanged = value !== this._term;\n    const optionsNotYetCalled = this.page === 0;\n\n    return termHasChanged || optionsNotYetCalled || this.optionsFunctionHasChanged;\n  }\n\n  addScrollListener(): void {\n    if (this.config.enableInfiniteScroll) {\n      const element: Element = this.getListElement();\n      if (element && !element.hasAttribute('scrollListener')) {\n        element.setAttribute('scrollListener', 'true');\n        element.addEventListener('scroll', this.scrollHandler);\n      }\n    }\n  }\n\n  processSearch(shouldReset?: boolean) {\n    this.hasError = false;\n    this.isLoading = true;\n    this.ref.markForCheck();\n    this.search(this.term).subscribe(\n      (results: any) => {\n        if (shouldReset) {\n          this.matches = [];\n        }\n        if (this.isStatic) {\n          this.matches = this.filterData(results);\n        } else {\n          this.matches = this.matches.concat(results);\n          this.lastPage = results && !results.length;\n        }\n        if (this.matches.length > 0 && this.autoSelectFirstOption && !this.selectingMatches) {\n          this.nextActiveMatch();\n        }\n        this.isLoading = false;\n        this.ref.markForCheck();\n        setTimeout(() => {\n          this.overlay.updatePosition();\n          this.addScrollListener();\n        }); // @bkimball: This was added for Dylan Schulte, 9.18.2017 4:14PM EST, you're welcome!\n      },\n      (err) => {\n        this.hasError = this.term && this.term.length !== 0;\n        this.isLoading = false;\n        this.lastPage = true;\n        if (this.term && this.term.length !== 0) {\n          console.error(err); // tslint:disable-lineno\n        }\n        this.ref.markForCheck();\n      },\n    );\n  }\n\n  search(term, mode?): Observable<any> {\n    const options = this.config.options;\n    return from(\n      new Promise((resolve, reject) => {\n        // Check if there is match data\n        if (options) {\n          // Resolve the data\n          if (Array.isArray(options)) {\n            this.isStatic = true;\n            // Arrays are returned immediately\n            resolve(this.structureArray(options));\n          } else if (this.shouldCallOptionsFunction(term)) {\n            if (\n              (options.hasOwnProperty('reject') && options.hasOwnProperty('resolve')) ||\n              Object.getPrototypeOf(options).hasOwnProperty('then')\n            ) {\n              this.isStatic = false;\n              // Promises (ES6 or Deferred) are resolved whenever they resolve\n              options.then(this.structureArray.bind(this)).then(resolve, reject);\n            } else if (typeof options === 'function') {\n              this.isStatic = false;\n              // Promises (ES6 or Deferred) are resolved whenever they resolve\n              options(term, ++this.page)\n                .then(this.structureArray.bind(this))\n                .then(resolve, reject);\n            } else {\n              // All other kinds of data are rejected\n              reject('The data provided is not an array or a promise');\n              throw new Error('The data provided is not an array or a promise');\n            }\n          } else {\n            if (this.config.defaultOptions) {\n              this.isStatic = false;\n              if (typeof this.config.defaultOptions === 'function') {\n                const defaultOptions = this.config.defaultOptions(term, ++this.page);\n                if (Object.getPrototypeOf(defaultOptions).hasOwnProperty('then')) {\n                  defaultOptions.then(this.structureArray.bind(this)).then(resolve, reject);\n                } else {\n                  resolve(this.structureArray(defaultOptions));\n                }\n              } else {\n                resolve(this.structureArray(this.config.defaultOptions));\n              }\n            } else {\n              // No search term gets rejected\n              reject('No search term');\n            }\n          }\n        } else {\n          // No data gets rejected\n          reject('error');\n        }\n      }),\n    );\n  }\n\n  shouldCallOptionsFunction(term: string): boolean {\n    if (this.config && 'minSearchLength' in this.config && Number.isInteger(this.config.minSearchLength)) {\n      return typeof term === 'string' && term.length >= this.config.minSearchLength;\n    } else {\n      return !!(term && term.length);\n    }\n  }\n\n  /**\n   * @param collection - the data once getData resolves it\n   *\n   * @description This function structures an array of nodes into an array of objects with a\n   * 'name' field by default.\n   */\n  structureArray(collection: any): any {\n    const dataArray = collection.data ? collection.data : collection;\n    if (dataArray && (typeof dataArray[0] === 'string' || typeof dataArray[0] === 'number')) {\n      return collection.map((item) => {\n        return {\n          value: item,\n          label: item,\n        };\n      });\n    }\n    return dataArray.map((data) => {\n      let value = this.config.field ? data[this.config.field] : data.value || data;\n      if (this.config.valueFormat) {\n        value = Helpers.interpolate(this.config.valueFormat, data);\n      }\n      const label = this.config.format ? Helpers.interpolate(this.config.format, data) : data.label || String(value);\n      return { value, label, data };\n    });\n  }\n\n  /**\n   * @param matches - Collection of objects=\n   *\n   * @description This function loops through the picker options and creates a filtered list of objects that contain\n   * the newSearch.\n   */\n  filterData(matches): Array<any> {\n    if (this.term && matches) {\n      return matches.filter((match) => {\n        return ~String(match.label).toLowerCase().indexOf(this.term.toLowerCase());\n      });\n    }\n    // Show no recent results template\n    return matches;\n  }\n\n  /**\n   * @description This function is called when the user presses the enter key to call the selectMatch method.\n   */\n  selectActiveMatch() {\n    this.selectMatch();\n  }\n\n  /**\n   * @description This function sets activeMatch to the match before the current node.\n   */\n  prevActiveMatch() {\n    const index = this.matches.indexOf(this.activeMatch);\n    this.activeMatch = this.matches[index - 1 < 0 ? this.matches.length - 1 : index - 1];\n    this.scrollToActive();\n    this.ref.markForCheck();\n  }\n\n  /**\n   * @description This function sets activeMatch to the match after the current node.\n   */\n  nextActiveMatch() {\n    const index = this.matches.indexOf(this.activeMatch);\n    this.activeMatch = this.matches[index + 1 > this.matches.length - 1 ? 0 : index + 1];\n    this.scrollToActive();\n    this.ref.markForCheck();\n  }\n\n  getListElement() {\n    return this.element.nativeElement;\n  }\n\n  getChildrenOfListElement() {\n    let children = [];\n    if (this.getListElement()) {\n      children = this.getListElement().children;\n    }\n    return children;\n  }\n\n  scrollToActive() {\n    const list = this.getListElement();\n    const items = this.getChildrenOfListElement();\n    const index = this.matches.indexOf(this.activeMatch);\n    const item = items[index];\n    if (item) {\n      list.scrollTop = item.offsetTop;\n    }\n  }\n\n  /**\n   * @description\n   */\n  selectActive(match) {\n    this.activeMatch = match;\n  }\n\n  /**\n   * @description\n   */\n  isActive(match) {\n    return this.activeMatch === match;\n  }\n\n  /**\n   * @description\n   */\n  selectMatch(event?: any, item?: any) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    const selected = this.activeMatch;\n    if (selected && this.parent) {\n      this.parent.value = selected;\n      this.selectingMatches = true;\n      if (this.parent.closeOnSelect) {\n        this.parent.hideResults();\n        this.selectingMatches = false;\n      }\n    }\n    this.ref.markForCheck();\n    return false;\n  }\n\n  /**\n   * @description This function captures the whole query string and replace it with the string that will be used to\n   * match.\n   */\n  escapeRegexp(queryToEscape) {\n    // Ex: if the capture is \"a\" the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  /**\n   * @description This function should return a <strong>-tag wrapped HTML string.\n   */\n  highlight(match, query) {\n    // Replaces the capture string with a the same string inside of a \"strong\" tag\n    return query ? match.replace(new RegExp(this.escapeRegexp(query.trim()), 'gi'), '<strong>$&</strong>') : match;\n  }\n\n  preselected(match) {\n    let selected = this.selected;\n    if (this.config && this.config.selected) {\n      selected = [...this.selected, ...this.config.selected];\n    }\n    if (this.config && this.config.preselected) {\n      const preselectedFunc: Function = this.config.preselected;\n      return (\n        selected.findIndex((item) => {\n          return preselectedFunc(match, item);\n        }) !== -1\n      );\n    }\n    return (\n      selected.findIndex((item) => {\n        let isPreselected = false;\n        if (item && item.value && match && match.value) {\n          if (item.value.id && match.value.id) {\n            isPreselected = item.value.id === match.value.id;\n          } else if (item.value instanceof Object && item.value.hasOwnProperty('value')) {\n            isPreselected = item.value.value === match.value;\n          } else {\n            isPreselected = item.value === match.value;\n          }\n        }\n        return isPreselected;\n      }) !== -1\n    );\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// Vendor\n// APP\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n@Component({\n  selector: 'entity-picker-result',\n  template: `\n    <novo-list-item *ngIf=\"match.data\" (click)=\"select.next(match.data)\">\n      <novo-item-header>\n        <novo-item-avatar [icon]=\"getIconForResult(match.data)\"></novo-item-avatar>\n        <novo-item-title> <span [innerHtml]=\"highlight(getNameForResult(match.data), term)\"></span> </novo-item-title>\n      </novo-item-header>\n      <novo-item-content direction=\"horizontal\">\n        <!-- COMPANY 1 -->\n        <novo-text smaller class=\"company\" *ngIf=\"match.data.companyName || match.data?.clientCorporation?.name\">\n          <i class=\"bhi-company company\"></i>\n          <span [innerHtml]=\"highlight(match.data.companyName || match.data?.clientCorporation?.name, term)\"></span>\n        </novo-text>\n        <!-- CLIENT CONTACT -->\n        <novo-text smaller class=\"contact\" *ngIf=\"match.data?.clientContact?.firstName\">\n          <i class=\"bhi-person contact person\"></i>\n          <span [innerHtml]=\"highlight(match.data.clientContact.firstName + ' ' + match.data.clientContact.lastName, term)\"></span>\n        </novo-text>\n        <!-- CANDIDATE -->\n        <novo-text smaller class=\"candidate\" *ngIf=\"match.data.candidate && match.data.searchEntity === 'Placement'\">\n          <i class=\"bhi-candidate candidate\"></i>\n          <span [innerHtml]=\"highlight(match.data.candidate.firstName + ' ' + match.data.candidate.lastName, term)\"></span>\n        </novo-text>\n        <!-- START & END DATE -->\n        <novo-text smaller class=\"start-date\" *ngIf=\"match.data.dateBegin && match.data.searchEntity === 'Placement'\">\n          <i class=\"bhi-calendar\"></i>\n          <span [innerHtml]=\"renderTimestamp(match.data.dateBegin) + ' - ' + renderTimestamp(match.data.dateEnd)\"></span>\n        </novo-text>\n        <!-- START Date -->\n        <novo-text smaller class=\"start-date\" *ngIf=\"match.data.startTime && match.data.searchEntity === 'JobShift'\">\n          <i class=\"bhi-calendar\"></i>\n          <span [innerHtml]=\"renderTimestamp(match.data.startTime)\"></span>\n        </novo-text>\n        <!-- START & END TIME -->\n        <novo-text smaller class=\"start-time\" *ngIf=\"match.data.startTime && match.data.searchEntity === 'JobShift'\">\n          <i class=\"bhi-clock\"></i>\n          <span [innerHtml]=\"renderTimeNoOffset(match.data.startTime) + ' - ' + renderTimeNoOffset(match.data.endTime)\"></span>\n        </novo-text>\n        <!-- JOBORDER -->\n        <novo-text smaller class=\"job\" *ngIf=\"match.data.jobOrder && match.data.searchEntity === 'JobShift'\">\n          <i class=\"bhi-job job\"></i>\n          <span [innerHtml]=\"highlight(match.data.jobOrder.title, term)\"></span>\n        </novo-text>\n        <!-- OPENINGS -->\n        <novo-text smaller class=\"openings\" *ngIf=\"match.data.openings && match.data.searchEntity === 'JobShift'\">\n          <i class=\"bhi-candidate\"></i>\n          <span>{{ match.data.numAssigned }} / {{ match.data.openings }}</span>\n        </novo-text>\n        <!-- EMAIL -->\n        <novo-text smaller class=\"email\" *ngIf=\"match.data.email\">\n          <i class=\"bhi-email\"></i> <span [innerHtml]=\"highlight(match.data.email, term)\"></span>\n        </novo-text>\n        <!-- PHONE -->\n        <novo-text smaller class=\"phone\" *ngIf=\"match.data.phone\">\n          <i class=\"bhi-phone\"></i> <span [innerHtml]=\"highlight(match.data.phone, term)\"></span>\n        </novo-text>\n        <!-- ADDRESS -->\n        <novo-text smaller class=\"location\" *ngIf=\"match.data.address && (match.data.address.city || match.data.address.state)\">\n          <i class=\"bhi-location\"></i> <span *ngIf=\"match.data.address.city\" [innerHtml]=\"highlight(match.data.address.city, term)\"></span>\n          <span *ngIf=\"match.data.address.city && match.data.address.state\">, </span>\n          <span *ngIf=\"match.data.address.state\" [innerHtml]=\"highlight(match.data.address.state, term)\"></span>\n        </novo-text>\n        <!-- STATUS -->\n        <novo-text smaller class=\"status\" *ngIf=\"match.data.status\">\n          <i class=\"bhi-info\"></i> <span [innerHtml]=\"highlight(match.data.status, term)\"></span>\n        </novo-text>\n        <!-- OWNER -->\n        <novo-text smaller class=\"owner\" *ngIf=\"match.data.owner && match.data.owner.name && match.data.searchEntity === 'Candidate'\">\n          <i class=\"bhi-person\"></i> <span [innerHtml]=\"highlight(match.data.owner.name, term)\"></span>\n        </novo-text>\n        <!-- PRIMARY DEPARTMENT -->\n        <novo-text\n          smaller\n          class=\"primary-department\"\n          *ngIf=\"match.data.primaryDepartment && match.data.primaryDepartment.name && match.data.searchEntity === 'CorporateUser'\"\n        >\n          <i class=\"bhi-department\"></i> <span [innerHtml]=\"highlight(match.data.primaryDepartment.name, term)\"></span>\n        </novo-text>\n        <!-- OCCUPATION -->\n        <novo-text smaller class=\"occupation\" *ngIf=\"match.data.occupation && match.data.searchEntity === 'CorporateUser'\">\n          <i class=\"bhi-occupation\"></i> <span [innerHtml]=\"highlight(match.data.occupation, term)\"></span>\n        </novo-text>\n      </novo-item-content>\n    </novo-list-item>\n  `,\n})\nexport class EntityPickerResult {\n  @Input() match: any;\n  @Input() term: any;\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  constructor(public labels: NovoLabelService) {}\n\n  /**\n   * @description This function captures the whole query string and replace it with the string that will be used to\n   * match.\n   */\n  escapeRegexp(queryToEscape) {\n    // Ex: if the capture is \"a\" the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  /**\n   * @description This function should return a <strong>-tag wrapped HTML string.\n   */\n  highlight(match, query) {\n    // Replaces the capture string with a the same string inside of a \"strong\" tag\n    return query && match ? match.replace(new RegExp(this.escapeRegexp(query.trim()), 'gi'), '<strong>$&</strong>') : match;\n  }\n\n  getIconForResult(result?: any): string {\n    if (result) {\n      switch (result.searchEntity) {\n        case 'ClientContact':\n          return 'person contact';\n        case 'ClientCorporation':\n          return 'company';\n        case 'Opportunity':\n          return 'opportunity';\n        case 'Candidate':\n          return 'candidate';\n        case 'Lead':\n          return 'lead';\n        case 'JobOrder':\n          return 'job';\n        case 'Placement':\n          return 'star placement';\n        case 'CorporateUser':\n          return 'user';\n        case 'CorporationDepartment':\n          return 'department';\n        case 'JobShift':\n          return 'timetable contract';\n        default:\n          return '';\n      }\n    }\n    return '';\n  }\n\n  renderTimestamp(date?: any) {\n    let timestamp = '';\n    if (date) {\n      timestamp = this.labels.formatDateWithFormat(date, { year: 'numeric', month: 'numeric', day: 'numeric' });\n    }\n    return timestamp;\n  }\n\n  renderTime(dateStr?: string) {\n    let timestamp = '';\n    if (dateStr) {\n      timestamp = this.labels.formatTime(new Date(dateStr));\n    }\n    return timestamp;\n  }\n\n  renderTimeNoOffset(dateStr?: string) {\n    let timestamp = '';\n    if (dateStr) {\n      dateStr = dateStr.slice(0, 19);\n      timestamp = this.labels.formatTime(dateStr);\n    }\n    return timestamp;\n  }\n\n  getNameForResult(result?: any) {\n    if (result) {\n      switch (result.searchEntity) {\n        case 'Lead':\n        case 'CorporateUser':\n        case 'ClientContact':\n        case 'Candidate':\n        case 'Person':\n          if ('firstName' in result) {\n            return `${result.firstName} ${result.lastName}`.trim();\n          }\n          return `${result.name || ''}`.trim();\n        case 'ClientCorporation':\n          return `${result.name || ''}`.trim();\n        case 'Opportunity':\n        case 'JobOrder':\n          return `${result.id} | ${result.title || ''}`.trim();\n        case 'Placement':\n          let label = `${result.id}`;\n          if (result.candidate || result.jobOrder) {\n            if (result.candidate && result.jobOrder) {\n              label = `${label} | ${result.candidate.firstName} ${result.candidate.lastName} - ${result.jobOrder.title}`.trim();\n            } else if (result.jobOrder) {\n              label = `${label} | ${result.jobOrder.title}`.trim();\n            } else {\n              label = `${label} | ${result.candidate.firstName} ${result.candidate.lastName}`.trim();\n            }\n          }\n          return label;\n        case 'JobShift':\n          return `${result.jobOrder?.title} @ ${result.jobOrder?.clientCorporation?.name || ''}`.trim();\n        default:\n          return `${result.name || ''}`.trim();\n      }\n    }\n    return '';\n  }\n}\n\n@Component({\n  selector: 'entity-picker-results',\n  template: `\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <entity-picker-result\n        *ngFor=\"let match of matches\"\n        [match]=\"match\"\n        [term]=\"term\"\n        [ngClass]=\"{ active: isActive(match) }\"\n        (click)=\"selectMatch($event, match)\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n      </entity-picker-result>\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches.length > 0\"></novo-loading>\n    </novo-list>\n    <div class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</div>\n    <div class=\"picker-null-results\" *ngIf=\"hasNonErrorMessage && term !== ''\">{{ labels.pickerEmpty }}</div>\n    <div class=\"picker-null-results\" *ngIf=\"hasNonErrorMessage && term === ''\">{{ labels.pickerTextFieldEmpty }}</div>\n  `,\n  host: {\n    class: 'novo-entity-picker-results',\n  },\n})\nexport class EntityPickerResults extends BasePickerResults {\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  constructor(element: ElementRef, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n\n  get hasNonErrorMessage() {\n    return !this.isLoading && !this.matches.length && !this.hasError;\n  }\n\n  getListElement() {\n    return this.element.nativeElement.querySelector('novo-list');\n  }\n\n  selectMatch(event?: any, item?: any) {\n    this.select.next(item);\n    return super.selectMatch(event, item);\n  }\n}\n","// NG2\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n// App\n\n@Injectable()\nexport class OptionsService {\n  constructor() {}\n\n  getOptionsConfig(http: HttpClient, field: any, config: { token?: string; restUrl?: string; military?: boolean }): any {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query) => {\n        return new Promise((resolve, reject) => {\n          if (query && query.length) {\n            const exp = new RegExp('^(?:[a-z]+:)?//', 'i');\n            let endpoint;\n            if (exp.test(field.optionsUrl)) {\n              const url = new URL(field.optionsUrl);\n              url.searchParams.set('filter', query || '');\n              endpoint = url.toString();\n            } else {\n              // Construct relative url (host will not be used but is required for construction)\n              const url = new URL(`http://placeholder.com/${field.optionsUrl}`);\n              url.searchParams.set('filter', query || '');\n              endpoint = `${url.pathname}${url.search}`;\n            }\n            http.get(endpoint).subscribe(resolve, reject);\n          } else {\n            resolve([]);\n          }\n        });\n      },\n    };\n  }\n}\n","// NG\nimport { Injectable } from '@angular/core';\nimport * as dateFns from 'date-fns';\n// App\nimport {\n  AddressControl,\n  BaseControl,\n  CheckboxControl,\n  CheckListControl,\n  CustomControl,\n  DateControl,\n  DateTimeControl,\n  EditorControl,\n  FileControl,\n  NovoControlConfig,\n  PickerControl,\n  RadioControl,\n  SelectControl,\n  SwitchControl,\n  TextAreaControl,\n  TextBoxControl,\n  TilesControl,\n  TimeControl,\n  TimezoneControl,\n} from '../../elements/form/FormControls';\nimport { FormField, NovoFieldset } from '../../elements/form/FormInterfaces';\nimport { NovoFormControl } from '../../elements/form/NovoFormControl';\nimport { NovoFormGroup } from '../../elements/form/NovoFormGroup';\nimport { EntityPickerResult, EntityPickerResults } from '../../elements/picker/extras/entity-picker-results/EntityPickerResults';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../Helpers';\nimport { OptionsService } from './../../services/options/OptionsService';\n\n@Injectable()\nexport class FormUtils {\n  ASSOCIATED_ENTITY_LIST: string[] = [\n    'Candidate',\n    'ClientContact',\n    'ClientCorporation',\n    'CorporationDepartment',\n    'Lead',\n    'Opportunity',\n    'JobOrder',\n    'CorporateUser',\n    'Person',\n    'Placement',\n    'JobShift',\n  ];\n  ENTITY_PICKER_LIST: string[] = [\n    'Candidate',\n    'CandidateText',\n    'Client',\n    'ClientText',\n    'ClientContact',\n    'ClientContactText',\n    'ClientCorporation',\n    'ClientCorporationText',\n    'Lead',\n    'LeadText',\n    'Opportunity',\n    'OpportunityText',\n    'JobOrder',\n    'JobOrderText',\n    'CorporateUser',\n    'CorporateUserText',\n    'Person',\n    'PersonText',\n    'Placement',\n    'JobShift',\n  ];\n\n  constructor(public labels: NovoLabelService, public optionsService: OptionsService) {}\n\n  toFormGroup(controls: Array<any>): NovoFormGroup {\n    const group: any = {};\n    controls.forEach((control) => {\n      const value = Helpers.isBlank(control.value) ? '' : control.value;\n      group[control.key] = new NovoFormControl(value, control);\n    });\n    return new NovoFormGroup(group);\n  }\n\n  emptyFormGroup(): NovoFormGroup {\n    return new NovoFormGroup({});\n  }\n\n  addControls(formGroup: NovoFormGroup, controls: Array<NovoControlConfig>): void {\n    controls.forEach((control) => {\n      const value = Helpers.isBlank(control.value) ? '' : control.value;\n      const formControl = new NovoFormControl(value, control);\n      formGroup.addControl(control.key, formControl);\n    });\n  }\n\n  removeControls(formGroup: NovoFormGroup, controls: Array<NovoControlConfig>): void {\n    controls.forEach((control) => {\n      formGroup.removeControl(control.key);\n    });\n  }\n\n  toFormGroupFromFieldset(fieldsets: Array<NovoFieldset>): NovoFormGroup {\n    const controls: Array<NovoFormControl> = [];\n    fieldsets.forEach((fieldset) => {\n      controls.push(...fieldset.controls);\n    });\n    return this.toFormGroup(controls);\n  }\n\n  hasAssociatedEntity(field: FormField): boolean {\n    return !!(field.associatedEntity && ~this.ASSOCIATED_ENTITY_LIST.indexOf(field.associatedEntity.entity));\n  }\n\n  determineInputType(field: FormField): string {\n    let type: string;\n    const dataSpecializationTypeMap = {\n      DATETIME: 'datetime',\n      TIME: 'time',\n      MONEY: 'currency',\n      PERCENTAGE: 'percentage',\n      HTML: 'editor',\n      'HTML-MINIMAL': 'editor-minimal',\n      YEAR: 'year',\n      WORKFLOW_OPTIONS: 'select',\n      SPECIALIZED_OPTIONS: 'select',\n      ALL_WORKFLOW_OPTIONS: 'select',\n      WorkflowOptionsLookup: 'select',\n      SpecializedOptionsLookup: 'select',\n      SimplifiedOptionsLookup: 'select',\n      AllWorkflowOptionsLookup: 'select',\n    };\n    const dataTypeToTypeMap = {\n      Timestamp: 'date',\n      Date: 'date',\n      Boolean: 'tiles',\n    };\n    const inputTypeToTypeMap = {\n      CHECKBOX: 'radio',\n      RADIO: 'radio',\n      SELECT: 'select',\n      TILES: 'tiles',\n    };\n    const inputTypeMultiToTypeMap = {\n      CHECKBOX: 'checklist',\n      RADIO: 'checklist',\n      SELECT: 'chips',\n    };\n    const typeToTypeMap = {\n      file: 'file',\n      COMPOSITE: 'address',\n    };\n    const numberDataTypeToTypeMap = {\n      Double: 'float',\n      BigDecimal: 'float',\n      Integer: 'number',\n    };\n    if (field.type === 'TO_MANY') {\n      if (this.hasAssociatedEntity(field)) {\n        if (field.multiValue === false) {\n          type = 'entitypicker';\n        } else {\n          type = 'entitychips';\n        }\n      } else {\n        if (field.multiValue === false) {\n          type = 'picker';\n        } else {\n          type = 'chips';\n        }\n      }\n    } else if (field.type === 'TO_ONE') {\n      if (\n        'SYSTEM' === field.dataSpecialization &&\n        ['WorkflowOptionsLookup', 'SpecializedOptionsLookup', 'AllWorkflowOptionsLookup'].includes(field.dataType)\n      ) {\n        type = dataSpecializationTypeMap[field.dataType];\n      } else if (['WORKFLOW_OPTIONS', 'SPECIALIZED_OPTIONS', 'ALL_WORKFLOW_OPTIONS'].includes(field.dataSpecialization)) {\n        type = dataSpecializationTypeMap[field.dataSpecialization];\n      } else if (['SimplifiedOptionsLookup', 'SpecializedOptionsLookup'].includes(field.dataType)) {\n        if (field.options && Object.keys(inputTypeToTypeMap).indexOf(field.inputType) > -1 && !field.multiValue) {\n          type = inputTypeToTypeMap[field.inputType];\n        } else if (field.options && Object.keys(inputTypeMultiToTypeMap).indexOf(field.inputType) > -1 && field.multiValue) {\n          type = inputTypeMultiToTypeMap[field.inputType];\n        } else {\n          type = dataSpecializationTypeMap[field.dataType];\n        }\n      } else if (this.hasAssociatedEntity(field)) {\n        type = 'entitypicker'; // TODO!\n      } else {\n        type = 'picker';\n      }\n    } else if (field.optionsUrl && field.inputType === 'SELECT') {\n      if (field.optionsType && ~this.ENTITY_PICKER_LIST.indexOf(field.optionsType)) {\n        type = 'entitypicker'; // TODO!\n      } else {\n        type = 'picker';\n      }\n    } else if (Object.keys(dataSpecializationTypeMap).indexOf(field.dataSpecialization) > -1) {\n      type = dataSpecializationTypeMap[field.dataSpecialization];\n    } else if (Object.keys(dataTypeToTypeMap).indexOf(field.dataType) > -1) {\n      type = dataTypeToTypeMap[field.dataType];\n    } else if (field.inputType === 'TEXTAREA') {\n      type = 'textarea';\n    } else if (field.options && Object.keys(inputTypeToTypeMap).indexOf(field.inputType) > -1 && !field.multiValue) {\n      type = inputTypeToTypeMap[field.inputType];\n    } else if (field.options && Object.keys(inputTypeMultiToTypeMap).indexOf(field.inputType) > -1 && field.multiValue) {\n      type = inputTypeMultiToTypeMap[field.inputType];\n    } else if (Object.keys(typeToTypeMap).indexOf(field.type) > -1) {\n      type = typeToTypeMap[field.type];\n    } else if (Object.keys(numberDataTypeToTypeMap).indexOf(field.dataType) > -1) {\n      type = numberDataTypeToTypeMap[field.dataType];\n    } /* else {\n            throw new Error('FormUtils: This field type is unsupported.');\n        }*/\n    return type;\n  }\n\n  isFieldEncrypted(key: string): boolean {\n    return key.indexOf('customEncrypted') > -1;\n  }\n\n  getControlForField(\n    field: any,\n    http,\n    config: { token?: string; restUrl?: string; military?: boolean; weekStart?: number },\n    overrides?: any,\n    forTable: boolean = false,\n    fieldData?: any,\n  ) {\n    // TODO: if field.type overrides `determineInputType` we should use it in that method or use this method\n    // TODO: (cont.) as the setter of the field argument\n    let type: string = this.determineInputType(field) || field.type;\n    let control: any;\n    const controlConfig: NovoControlConfig = {\n      metaType: field.type,\n      type,\n      key: field.name,\n      label: field.label,\n      placeholder: field.hint || '',\n      required: field.required || field.systemRequired,\n      hidden: !field.required,\n      encrypted: this.isFieldEncrypted(field.name ? field.name.toString() : ''),\n      value: field.value || field.defaultValue,\n      sortOrder: field.sortOrder,\n      associatedEntity: field.associatedEntity,\n      optionsType: field.optionsType,\n      multiple: field.multiValue,\n      readOnly: !!field.disabled || !!field.readOnly,\n      disabled: field.disabled,\n      maxlength: field.maxLength,\n      interactions: field.interactions,\n      dataSpecialization: field.dataSpecialization,\n      dataType: field.dataType,\n      description: field.description || '',\n      tooltip: field.tooltip,\n      tooltipPosition: field.tooltipPosition,\n      customControl: field.customControl,\n      template: field.template,\n      customControlConfig: field.customControlConfig,\n      restrictFieldInteractions: field.restrictFieldInteractions,\n      validators: field.validators,\n      warning: field.warning,\n      config: field.config || {},\n      closeOnSelect: field.closeOnSelect,\n      layoutOptions: field.layoutOptions,\n    };\n    this.inferDateRange(controlConfig, field);\n    // TODO: getControlOptions should always return the correct format\n    const optionsConfig = this.getControlOptions(field, http, config, fieldData);\n    if (Array.isArray(optionsConfig) && !(type === 'chips' || type === 'picker')) {\n      controlConfig.options = optionsConfig;\n    } else if (Array.isArray(optionsConfig) && (type === 'chips' || type === 'picker')) {\n      controlConfig.config = {\n        options: optionsConfig,\n      };\n    } else if (optionsConfig) {\n      controlConfig.config = {\n        ...optionsConfig,\n        ...(controlConfig && controlConfig.config),\n      };\n    }\n\n    if (type === 'year') {\n      controlConfig.maxlength = 4;\n    }\n    // TODO: Overrides should be an iterable of all properties (potentially a private method)\n    let overrideResultsTemplate;\n    let overridePreviewTemplate;\n    if (overrides && overrides[field.name]) {\n      if (overrides[field.name].resultsTemplate) {\n        overrideResultsTemplate = overrides[field.name].resultsTemplate;\n        controlConfig.config.resultsTemplate = overrideResultsTemplate;\n        delete overrides[field.name].resultsTemplate;\n      }\n      if (overrides[field.name].overridePreviewTemplate) {\n        overrideResultsTemplate = overrides[field.name].overridePreviewTemplate;\n        controlConfig.config.overridePreviewTemplate = overrideResultsTemplate;\n        delete overrides[field.name].overridePreviewTemplate;\n      }\n      if (overrides[field.name].pickerCallback) {\n        controlConfig.config.callback = overrides[field.name].pickerCallback;\n      }\n      if (overrides[field.name].type) {\n        type = overrides[field.name].type;\n      }\n      if (overrides[field.name].columns) {\n        controlConfig.config.columns = overrides[field.name].columns;\n        controlConfig.closeOnSelect = true;\n        delete controlConfig.label;\n      }\n      if (overrides[field.name].warning) {\n        controlConfig.warning = overrides[field.name].warning;\n      }\n      Object.assign(controlConfig, overrides[field.name]);\n    }\n\n    switch (type) {\n      case 'entitychips':\n        // TODO: This doesn't belong in this codebase\n        controlConfig.multiple = true;\n        controlConfig.config.resultsTemplate = overrideResultsTemplate || EntityPickerResults;\n        controlConfig.config.previewTemplate = overridePreviewTemplate || EntityPickerResult;\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'chips':\n        controlConfig.multiple = true;\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'entitypicker':\n        // TODO: This doesn't belong in this codebase\n        controlConfig.config.resultsTemplate = overrideResultsTemplate || EntityPickerResults;\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'picker':\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'datetime':\n        controlConfig.military = config ? !!config.military : false;\n        controlConfig.weekStart = config && config.weekStart ? config.weekStart : 0;\n        control = new DateTimeControl(controlConfig);\n        break;\n      case 'date':\n        controlConfig.dateFormat = field.dateFormat;\n        controlConfig.textMaskEnabled = field.textMaskEnabled;\n        controlConfig.allowInvalidDate = field.allowInvalidDate;\n        controlConfig.military = config ? !!config.military : false;\n        controlConfig.weekStart = config && config.weekStart ? config.weekStart : 0;\n        control = new DateControl(controlConfig);\n        break;\n      case 'time':\n        controlConfig.military = config ? !!config.military : false;\n        control = new TimeControl(controlConfig);\n        break;\n      case 'native-time':\n      case 'native-date':\n      case 'native-week':\n      case 'native-year':\n      case 'native-datetime-local':\n      case 'native-tel':\n      case 'native-email':\n      case 'native-url':\n      case 'native-number':\n        control = new CustomControl({ ...controlConfig, template: 'native-input', type: type.replace('native-', ''), alwaysActive: true });\n        break;\n      case 'timezone':\n        control = new TimezoneControl(controlConfig);\n        break;\n      case 'currency':\n      case 'money':\n      case 'email':\n      case 'percentage':\n      case 'float':\n      case 'number':\n      case 'year':\n        // TODO: Only types from `determineInputType` should be used in this class\n        if (type === 'money') {\n          type = 'currency';\n        }\n        controlConfig.type = type;\n        control = new TextBoxControl(controlConfig);\n        break;\n      case 'text':\n        control = new TextBoxControl(controlConfig);\n        break;\n      case 'textarea':\n        control = new TextAreaControl(controlConfig);\n        break;\n      case 'editor':\n        control = new EditorControl(controlConfig);\n        break;\n      case 'editor-minimal':\n        control = new EditorControl(controlConfig);\n        control.minimal = true;\n        break;\n      case 'tiles':\n        control = new TilesControl(controlConfig);\n        break;\n      case 'checkbox':\n        controlConfig.checkboxLabel = field.checkboxLabel;\n        control = new CheckboxControl(controlConfig);\n        break;\n      case 'switch':\n        control = new SwitchControl(controlConfig);\n        break;\n      case 'checklist':\n        control = new CheckListControl(controlConfig);\n        break;\n      case 'radio':\n        control = new RadioControl(controlConfig);\n        break;\n      case 'select':\n        control = new SelectControl(controlConfig);\n        break;\n      case 'address':\n        controlConfig.required = field.required || false;\n        if (Helpers.isBlank(controlConfig.config)) {\n          controlConfig.config = {};\n        }\n        controlConfig.config.required = field.required;\n        controlConfig.config.readOnly = controlConfig.readOnly;\n        if (field.fields && field.fields.length) {\n          for (const subfield of field.fields) {\n            controlConfig.config[subfield.name] = {\n              required: !!subfield.required,\n              hidden: !!subfield.readOnly,\n            };\n            if (!Helpers.isEmpty(subfield.label)) {\n              controlConfig.config[subfield.name].label = subfield.label;\n            }\n            if (!Helpers.isEmpty(subfield.maxLength)) {\n              controlConfig.config[subfield.name].maxlength = subfield.maxLength;\n            }\n            controlConfig.required = controlConfig.required || subfield.required;\n            if (subfield.defaultValue) {\n              if (Helpers.isBlank(controlConfig.value)) {\n                controlConfig.value = {};\n              }\n              controlConfig.value[subfield.name] = subfield.defaultValue;\n            } else if (subfield.name === 'countryID') {\n              if (Helpers.isBlank(controlConfig.value)) {\n                controlConfig.value = {};\n              }\n              controlConfig.value[subfield.name] = 1;\n            }\n            if (subfield.name === 'state' || subfield.name === 'countryID') {\n              if (subfield.name === 'countryID') {\n                subfield.optionsType = 'Country';\n              }\n              if (!subfield.optionsUrl) {\n                subfield.optionsUrl = `options/${subfield.optionsType}`;\n              }\n              controlConfig.config[subfield.name].pickerConfig = this.getControlOptions(subfield, http, config, fieldData);\n            }\n          }\n        }\n        controlConfig.isEmpty = this.isAddressEmpty;\n        control = new AddressControl(controlConfig);\n        break;\n      case 'file':\n        control = new FileControl(controlConfig);\n        break;\n      case 'custom':\n        control = new CustomControl(controlConfig);\n        break;\n      default:\n        control = new TextBoxControl(controlConfig);\n        break;\n    }\n    return control;\n  }\n\n  private shouldCreateControl(field): boolean {\n    if (field.systemRequired) {\n      field.readOnly = false;\n    }\n\n    return (\n      field.name !== 'id' &&\n      (!['SYSTEM', 'SECTION_HEADER'].includes(field.dataSpecialization) ||\n        ['address', 'billingAddress', 'secondaryAddress'].includes(field.name)) &&\n      !field.readOnly\n    );\n  }\n\n  toControls(\n    meta,\n    currencyFormat,\n    http,\n    config: { token?: string; restUrl?: string; military?: boolean; weekStart?: number },\n    overrides?: any,\n    forTable: boolean = false,\n  ) {\n    const controls = [];\n    if (meta && meta.fields) {\n      const fields = meta.fields;\n      fields.forEach((field) => {\n        if (this.shouldCreateControl(field)) {\n          const control = this.getControlForField(field, http, config, overrides, forTable);\n          // Set currency format\n          if (control.subType === 'currency') {\n            control.currencyFormat = currencyFormat;\n          }\n          // Add to controls\n          controls.push(control);\n        }\n      });\n    }\n    return controls;\n  }\n\n  toTableControls(meta, currencyFormat, http, config: { token?: string; restUrl?: string; military?: boolean }, overrides?: any) {\n    const controls = this.toControls(meta, currencyFormat, http, config, overrides, true);\n    const ret = {};\n    controls.forEach((control: BaseControl) => {\n      ret[control.key] = {\n        editorType: control.__type,\n        editorConfig: control.__config,\n      };\n    });\n    return ret;\n  }\n\n  toFieldSets(\n    meta,\n    currencyFormat,\n    http,\n    config: { token?: string; restUrl?: string; military?: boolean; weekStart?: number },\n    overrides?,\n    data?: { [key: string]: any },\n  ) {\n    const fieldsets: Array<NovoFieldset> = [];\n    let formFields = [];\n\n    if (meta && meta.fields) {\n      formFields = this.getFormFields(meta);\n\n      formFields.forEach((field) => {\n        if (this.isHeader(field)) {\n          if (field.enabled) {\n            this.insertHeaderToFieldsets(fieldsets, field);\n          }\n        } else if (this.isEmbeddedField(field)) {\n          this.insertHeaderToFieldsets(fieldsets, field);\n\n          const embeddedFields = this.getEmbeddedFields(field);\n\n          embeddedFields.forEach((embeddedField) => {\n            if (this.shouldCreateControl(embeddedField)) {\n              let control = this.createControl(embeddedField, data, http, config, overrides, currencyFormat);\n              control = this.markControlAsEmbedded(control, field.dataSpecialization ? field.dataSpecialization.toLowerCase() : null);\n              fieldsets[fieldsets.length - 1].controls.push(control);\n            } else if (this.isHeader(embeddedField)) {\n              this.insertHeaderToFieldsets(fieldsets, embeddedField);\n            }\n          });\n        } else if (this.shouldCreateControl(field)) {\n          let control = this.createControl(field, data, http, config, overrides, currencyFormat);\n          if (field.inlineEmbeddedAssociatedEntityField) {\n            control = this.markControlAsEmbedded(control, 'inline_embedded');\n          }\n\n          if (fieldsets.length === 0) {\n            fieldsets.push({ controls: [] });\n          }\n\n          fieldsets[fieldsets.length - 1].controls.push(control);\n        }\n      });\n    }\n    if (fieldsets.length > 0) {\n      return fieldsets;\n    } else {\n      return [\n        {\n          controls: this.toControls(meta, currencyFormat, http, config),\n        },\n      ];\n    }\n  }\n\n  private isEmbeddedField(field) {\n    return field.dataSpecialization && ['embedded'].includes(field.dataSpecialization.toLowerCase()) && !field.readOnly;\n  }\n\n  private createControl(field, data, http, config, overrides, currencyFormat) {\n    const fieldData = this.isEmbeddedFieldData(field, data) ? this.getEmbeddedFieldData(field, data) : this.getFieldData(field, data);\n    const control = this.getControlForField(field, http, config, overrides, undefined, fieldData);\n    // Set currency format\n    if (control.subType === 'currency') {\n      control.currencyFormat = currencyFormat;\n    }\n    return control;\n  }\n\n  private isEmbeddedFieldData(field, data) {\n    return data && field.name.includes('.');\n  }\n\n  private getFieldData(field, data) {\n    return (data && data[field.name]) || null;\n  }\n\n  private getEmbeddedFieldData(field, data) {\n    const [parentFieldName, fieldName] = field.name.split('.');\n    return (data && data[parentFieldName] && data[parentFieldName][fieldName]) || null;\n  }\n\n  private getFormFields(meta) {\n    const sectionHeaders = meta.sectionHeaders\n      ? meta.sectionHeaders.map((element) => {\n          element.isSectionHeader = true;\n          return element;\n        })\n      : [];\n\n    let fields = meta.fields.map((field) => {\n      field.parentEntity = meta.entity;\n      if (!field.hasOwnProperty('sortOrder')) {\n        field.sortOrder = Number.MAX_SAFE_INTEGER - 1;\n      }\n      return field;\n    });\n\n    // build list of fields that should be displayed inline but belong to associated entities\n    const inlineEmbeddedAssociatedEntityFields = this.getInlineEmbeddedFields(fields);\n\n    // remove the inline embedded fields because the associated entity fields were extracted above\n    // and will be added to the regular list of fields. This prevents the fields from being added multiple times.\n    fields = fields.filter((f) => !f.dataSpecialization || f.dataSpecialization.toLowerCase() !== 'inline_embedded');\n\n    // sort fields\n    return [...sectionHeaders, ...fields, ...inlineEmbeddedAssociatedEntityFields].sort(Helpers.sortByField(['sortOrder', 'name']));\n  }\n\n  private getInlineEmbeddedFields(fields) {\n    let inlineEmbeddedAssociatedEntityFields = [];\n    fields\n      .filter((f) => f.dataSpecialization && f.dataSpecialization.toLowerCase() === 'inline_embedded')\n      .forEach((f) => {\n        inlineEmbeddedAssociatedEntityFields = [...inlineEmbeddedAssociatedEntityFields, ...this.getAssociatedFieldsForInlineEmbedded(f)];\n      });\n    return inlineEmbeddedAssociatedEntityFields;\n  }\n\n  private getAssociatedFieldsForInlineEmbedded(field) {\n    let associatedEntityFields = [];\n    associatedEntityFields = this.getEmbeddedFields(field).map((aef) => {\n      aef.inlineEmbeddedAssociatedEntityField = true;\n      return aef;\n    });\n    return associatedEntityFields;\n  }\n\n  private getEmbeddedFields(subHeader) {\n    return subHeader.associatedEntity.fields\n      .filter((field) => field.name !== 'id')\n      .map((field) => {\n        if (!field.name.startsWith(`${subHeader.name}.`)) {\n          field.name = `${subHeader.name}.${field.name}`;\n        }\n        return field;\n      })\n      .sort(Helpers.sortByField(['sortOrder', 'name']));\n  }\n\n  private isHeader(field): boolean {\n    return (\n      !Helpers.isBlank(field) &&\n      ((field.hasOwnProperty('isSectionHeader') && field.isSectionHeader) ||\n        (field.dataSpecialization && field.dataSpecialization.toLowerCase() === 'section_header'))\n    );\n  }\n\n  private insertHeaderToFieldsets(fieldsets, field) {\n    const constantProperties = {\n      controls: [],\n      isEmbedded: field.dataSpecialization && field.dataSpecialization.toLowerCase() === 'embedded',\n      isInlineEmbedded: field.dataSpecialization && field.dataSpecialization.toLowerCase() === 'inline_embedded',\n      key: field.name,\n    };\n    if (field.name && field.name.startsWith('customObject') && field.associatedEntity && field.associatedEntity.label) {\n      fieldsets.push({\n        title: field.associatedEntity.label || field.label,\n        icon: field.icon || 'bhi-card-expand',\n        ...constantProperties,\n      });\n    } else {\n      fieldsets.push({\n        title: field.label,\n        icon: field.icon || 'bhi-section',\n        ...constantProperties,\n      });\n    }\n  }\n\n  private markControlAsEmbedded(control, dataSpecialization?: 'embedded' | 'inline_embedded') {\n    if (Helpers.isBlank(control.config)) {\n      control.config = {};\n    }\n    control.config.embedded = true;\n    control.isEmbedded = dataSpecialization === 'embedded';\n    control.isInlineEmbedded = dataSpecialization === 'inline_embedded';\n    return control;\n  }\n\n  getControlOptions(field: any, http: any, config: { token?: string; restUrl?: string; military?: boolean }, fieldData?: any): any {\n    // TODO: The token property of config is the only property used; just pass in `token: string`\n    if (field.dataType === 'Boolean' && !field.options) {\n      // TODO: dataType should only be determined by `determineInputType` which doesn't ever return 'Boolean' it\n      // TODO: (cont.) returns `tiles`\n      return [\n        { value: false, label: this.labels.no },\n        { value: true, label: this.labels.yes },\n      ];\n    } else if (field.dataSpecialization === 'ALL_WORKFLOW_OPTIONS' && field.options) {\n      return field.options;\n    } else if (field.workflowOptions) {\n      return this.getWorkflowOptions(field.workflowOptions, fieldData);\n    } else if (\n      field.dataSpecialization === 'SPECIALIZED_OPTIONS' ||\n      (field.options && ['SpecializedOptionsLookup', 'SimplifiedOptionsLookup'].includes(field.dataType))\n    ) {\n      return field.options;\n    } else if (field.optionsUrl) {\n      return this.optionsService.getOptionsConfig(http, field, config);\n    } else if (Array.isArray(field.options) && field.type === 'chips') {\n      const options = field.options;\n      return {\n        field: 'value',\n        format: '$label',\n        options,\n      };\n    } else if (field.options) {\n      return field.options;\n    }\n    return null;\n  }\n\n  private getWorkflowOptions(\n    workflowOptions: { [key: string]: any },\n    fieldData: { id?: number; value?: string | number; label?: string | number } | null,\n  ): Array<{ id?: number; value?: string | number; label?: string | number }> {\n    let currentValue: { id?: number; value?: string | number; label?: string | number } = null;\n    let currentWorkflowOption: number | string = 'initial';\n    if (fieldData?.id) {\n      currentValue = { ...fieldData, value: fieldData.id, label: fieldData.label || fieldData.id };\n      currentWorkflowOption = fieldData.id;\n    }\n    const updateWorkflowOptions: Array<{ id?: number; value?: string | number; label?: string | number }> =\n      workflowOptions[currentWorkflowOption] || [];\n\n    // Ensure that the current value is added to the beginning of the options list\n    if (currentValue && !updateWorkflowOptions.find((option) => option.value === currentValue.value)) {\n      updateWorkflowOptions.unshift(currentValue);\n    }\n\n    return updateWorkflowOptions;\n  }\n\n  setInitialValues(controls: Array<NovoControlConfig>, values: any, keepClean?: boolean, keyOverride?: string) {\n    for (let i = 0; i < controls.length; i++) {\n      const control = controls[i];\n      const key = keyOverride ? control.key.replace(keyOverride, '') : control.key;\n      let value = values[key];\n\n      if (Helpers.isBlank(value)) {\n        continue;\n      }\n\n      if (Array.isArray(value) && value.length === 0) {\n        continue;\n      }\n\n      if (Array.isArray(value) && value.length > 0) {\n        value = value.filter((val) => !(Object.keys(val).length === 0 && val.constructor === Object));\n        if (value.length === 0) {\n          continue;\n        }\n      }\n\n      if (value.data && value.data.length === 0) {\n        continue;\n      }\n\n      if (Object.keys(value).length === 0 && value.constructor === Object) {\n        continue;\n      }\n\n      if (control.dataType === 'Date' && typeof value === 'string' && control.optionsType !== 'skipConversion') {\n        value = dateFns.startOfDay(value);\n      }\n\n      control.value = value;\n      // TODO: keepClean is not required, but is always used. It should default (to true?)\n      control.dirty = !keepClean;\n    }\n  }\n\n  setInitialValuesFieldsets(fieldsets: Array<NovoFieldset>, values, keepClean?: boolean) {\n    fieldsets.forEach((fieldset) => {\n      this.setInitialValues(fieldset.controls, values, keepClean);\n    });\n  }\n\n  forceShowAllControls(controls: Array<NovoControlConfig>) {\n    controls.forEach((control) => {\n      control.hidden = false;\n    });\n  }\n\n  forceShowAllControlsInFieldsets(fieldsets: Array<NovoFieldset>) {\n    fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        control.hidden = false;\n      });\n    });\n  }\n\n  forceValidation(form: NovoFormGroup): void {\n    Object.keys(form.controls).forEach((key: string) => {\n      const control: any = form.controls[key];\n      if (control.required && Helpers.isBlank(form.value[control.key])) {\n        control.markAsDirty();\n        control.markAsTouched();\n      }\n    });\n  }\n\n  isAddressEmpty(control: any): boolean {\n    const fieldList: string[] = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n    let valid: boolean = true;\n    if (control.value && control.config) {\n      fieldList.forEach((subfield: string) => {\n        if (\n          ((subfield !== 'countryID' &&\n            !Helpers.isEmpty(control.config[subfield]) &&\n            control.config[subfield].required &&\n            (Helpers.isBlank(control.value[subfield]) || Helpers.isEmpty(control.value[subfield]))) ||\n            (subfield === 'countryID' &&\n              !Helpers.isEmpty(control.config.countryID) &&\n              control.config.countryID.required &&\n              Helpers.isEmpty(control.value.countryName))) &&\n          !(\n            subfield === 'state' &&\n            !Helpers.isBlank(control.value.countryName) &&\n            control.config.state.pickerConfig &&\n            control.config.state.pickerConfig.defaultOptions &&\n            control.config.state.pickerConfig.defaultOptions.length === 0\n          )\n        ) {\n          valid = false;\n        }\n      });\n    }\n    return valid;\n  }\n\n  private getStartDateFromRange(dateRange: { minDate: string; minOffset: number }): Date {\n    if (dateRange.minDate) {\n      return dateFns.parse(dateRange.minDate);\n    } else if (dateRange.minOffset) {\n      return dateFns.addDays(dateFns.startOfToday(), dateRange.minOffset);\n    }\n  }\n\n  private getEndDateFromRange(dateRange: { maxDate: string; minOffset: number }): Date {\n    if (dateRange.maxDate) {\n      return dateFns.parse(dateRange.maxDate);\n    } else if (dateRange.minOffset) {\n      return dateFns.addDays(dateFns.startOfToday(), dateRange.minOffset);\n    }\n  }\n\n  /**\n   * Get the min start date and max end date of a Date base on field data.\n   */\n\n  private inferDateRange(controlConfig, field): void {\n    if (field.dataType === 'Date' && field.allowedDateRange) {\n      controlConfig.startDate = this.getStartDateFromRange(field.allowedDateRange);\n      controlConfig.endDate = this.getEndDateFromRange(field.allowedDateRange);\n      controlConfig.disabledDateMessage = field.allowedDateRange?.disabledDateMessage;\n    }\n  }\n\n  inflateEmbeddedProperties(data: object): object {\n    if (data) {\n      Object.keys(data)\n        .filter((fieldName) => fieldName.includes('.'))\n        .forEach((field) => {\n          const [parentFieldName, fieldName] = field.split('.');\n          if (!data[parentFieldName]) {\n            data[parentFieldName] = {};\n          }\n          data[parentFieldName][fieldName] = data[field];\n          delete data[field];\n        });\n    }\n\n    return data;\n  }\n}\n","/**\n * A const enum that includes all non-printable string values one can expect from $event.key.\n * For example, this enum includes values like \"CapsLock\", \"Backspace\", and \"AudioVolumeMute\",\n * but does not include values like \"a\", \"A\", \"#\", \"é\", or \"¿\".\n * Auto generated from MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Speech_recognition_keys\n */\nexport declare const enum Key {\n  /**\n   * The user agent wasn't able to map the event's virtual keycode to a specific key value.\n   * This can happen due to hardware or software constraints, or because of constraints around the platform on which the user agent is running.\n   */\n  Unidentified = 'Unidentified',\n\n  /** The Alt (Alternative) key. */\n  Alt = 'Alt',\n\n  /** The AltGr or AltGraph (Alternate Graphics) key. Enables the ISO Level 3 shift modifier (where Shift is the level 2 modifier). */\n  AltGraph = 'AltGraph',\n\n  /** The Caps Lock key. Toggles the capital character lock on and off for subsequent input. */\n  CapsLock = 'CapsLock',\n\n  /** The Control, Ctrl, or Ctl key. Allows typing control characters. */\n  Control = 'Control',\n\n  /** The Fn (Function modifier) key. Used to allow generating function key (F1–F15, for instance) characters on keyboards without a dedicated function key area. Often handled in hardware so that events aren't generated for this key. */\n  Fn = 'Fn',\n\n  /** The FnLock or F-Lock (Function Lock) key.Toggles the function key mode described by \"Fn\" on and off. Often handled in hardware so that events aren't generated for this key. */\n  FnLock = 'FnLock',\n\n  /** The Hyper key. */\n  Hyper = 'Hyper',\n\n  /** The Meta key. Allows issuing special command inputs. This is the Windows logo key, or the Command or ⌘ key on Mac keyboards. */\n  Meta = 'Meta',\n\n  /** The NumLock (Number Lock) key. Toggles the numeric keypad between number entry some other mode (often directional arrows). */\n  NumLock = 'NumLock',\n\n  /** The Scroll Lock key. Toggles between scrolling and cursor movement modes. */\n  ScrollLock = 'ScrollLock',\n\n  /** The Shift key. Modifies keystrokes to allow typing upper (or other) case letters, and to support typing punctuation and other special characters. */\n  Shift = 'Shift',\n\n  /** The Super key. */\n  Super = 'Super',\n\n  /** The Symbol modifier key (found on certain virtual keyboards). */\n  Symbol = 'Symbol',\n\n  /** The Symbol Lock key. */\n  SymbolLock = 'SymbolLock',\n\n  /** The Enter or ↵ key (sometimes labeled Return). */\n  Enter = 'Enter',\n\n  /** The Horizontal Tab key, Tab. */\n  Tab = 'Tab',\n\n  /** The down arrow key. */\n  ArrowDown = 'ArrowDown',\n\n  /** The left arrow key. */\n  ArrowLeft = 'ArrowLeft',\n\n  /** The right arrow key. */\n  ArrowRight = 'ArrowRight',\n\n  /** The up arrow key. */\n  ArrowUp = 'ArrowUp',\n\n  /** The End key. Moves to the end of content. */\n  End = 'End',\n\n  /** The Home key. Moves to the start of content. */\n  Home = 'Home',\n\n  /** The Page Down (or PgDn) key. Scrolls down or displays the next page of content. */\n  PageDown = 'PageDown',\n\n  /** The Page Up (or PgUp) key. Scrolls up or displays the previous page of content. */\n  PageUp = 'PageUp',\n\n  /** The Backspace key. This key is labeled Delete on Mac keyboards. */\n  Backspace = 'Backspace',\n\n  /** The Clear key. Removes the currently selected input. */\n  Clear = 'Clear',\n\n  /** The Copy key (on certain extended keyboards). */\n  Copy = 'Copy',\n\n  /** The Cursor Select key, CrSel. */\n  CrSel = 'CrSel',\n\n  /** The Cut key (on certain extended keyboards). */\n  Cut = 'Cut',\n\n  /** The Delete key, Del. */\n  Delete = 'Delete',\n\n  /** Erase to End of Field. Deletes all characters from the current cursor position to the end of the current field. */\n  EraseEof = 'EraseEof',\n\n  /** The ExSel (Extend Selection) key. */\n  ExSel = 'ExSel',\n\n  /** The Insert key, Ins. Toggles between inserting and overwriting text. */\n  Insert = 'Insert',\n\n  /** Paste from the clipboard. */\n  Paste = 'Paste',\n\n  /** Redo the last action. */\n  Redo = 'Redo',\n\n  /** Undo the last action. */\n  Undo = 'Undo',\n\n  /** The Accept, Commit, or OK key or button. Accepts the currently selected option or input method sequence conversion. */\n  Accept = 'Accept',\n\n  /** The Again key. Redoes or repeats a previous action. */\n  Again = 'Again',\n\n  /** The Attn (Attention) key. */\n  Attn = 'Attn',\n\n  /** The Cancel key. */\n  Cancel = 'Cancel',\n\n  /** Shows the context menu. Typically found between the Windows (or OS) key and the Control key on the right side of the keyboard. */\n  ContextMenu = 'ContextMenu',\n\n  /** The Esc (Escape) key. Typically used as an exit, cancel, or \"escape this operation\" button. Historically, the Escape character was used to signal the start of a special control sequence of characters called an \"escape sequence.\" */\n  Escape = 'Escape',\n\n  /** The Execute key. */\n  Execute = 'Execute',\n\n  /** The Find key. Opens an interface (typically a dialog box) for performing a find/search operation. */\n  Find = 'Find',\n\n  /** The Finish key. */\n  Finish = 'Finish',\n\n  /** The Help key. Opens or toggles the display of help information. */\n  Help = 'Help',\n\n  /**\n   * The Pause key. Pauses the current application or state, if applicable.\n   * Note: This shouldn't be confused with the \"MediaPause\" key value, which is used for media controllers, rather than to control applications and processes.\n   */\n  Pause = 'Pause',\n\n  /**\n   * The Play key. Resumes a previously paused application, if applicable.\n   * Note: This shouldn't be confused with the \"MediaPlay\" key value, which is used for media controllers, rather than to control applications and processes.\n   */\n  Play = 'Play',\n\n  /** The Props (Properties) key. */\n  Props = 'Props',\n\n  /** The Select key. */\n  Select = 'Select',\n\n  /** The ZoomIn key. */\n  ZoomIn = 'ZoomIn',\n\n  /** The ZoomOut key. */\n  ZoomOut = 'ZoomOut',\n\n  /** The Brightness Down key. Typically used to reduce the brightness of the display. */\n  BrightnessDown = 'BrightnessDown',\n\n  /** The Brightness Up key. Typically increases the brightness of the display. */\n  BrightnessUp = 'BrightnessUp',\n\n  /** The Eject key. Ejects removable media (or toggles an optical storage device tray open and closed). */\n  Eject = 'Eject',\n\n  /** The LogOff key. */\n  LogOff = 'LogOff',\n\n  /**\n   * The Power button or key, to toggle power on and off.\n   * Note: Not all systems pass this key through to the user agent.\n   */\n  Power = 'Power',\n\n  /** The PowerOff or PowerDown key. Shuts off the system. */\n  PowerOff = 'PowerOff',\n\n  /** The PrintScreen or PrtScr key. Sometimes SnapShot. Captures the screen and prints it or saves it to disk. */\n  PrintScreen = 'PrintScreen',\n\n  /** The Hibernate key. This saves the state of the computer to disk and then shuts down; the computer can be returned to its previous state by restoring the saved state information. */\n  Hibernate = 'Hibernate',\n\n  /** The Standby key. (Also known as Suspend or Sleep.) This turns off the display and puts the computer in a low power consumption mode, without completely powering off. */\n  Standby = 'Standby',\n\n  /** The WakeUp key. Used to wake the computer from the hibernation or standby modes. */\n  WakeUp = 'WakeUp',\n\n  /** The All Candidates key, which starts multi-candidate mode, in which multiple candidates are displayed for the ongoing input. */\n  AllCandidates = 'AllCandidates',\n\n  /** The Alphanumeric key. */\n  Alphanumeric = 'Alphanumeric',\n\n  /** The Code Input key, which enables code input mode, which lets the user enter characters by typing their code points (their Unicode character numbers, typically). */\n  CodeInput = 'CodeInput',\n\n  /** The Compose key. */\n  Compose = 'Compose',\n\n  /** The Convert key, which instructs the IME to convert the current input method sequence into the resulting character. */\n  Convert = 'Convert',\n\n  /**\n   * A dead \"combining\" key; that is, a key which is used in tandem with other keys to generate accented and other modified characters. If pressed by itself, it doesn't generate a character.\n   * If you wish to identify which specific dead key was pressed (in cases where more than one exists), you can do so by examining the KeyboardEvent's associated compositionupdate event's  data property.\n   */\n  Dead = 'Dead',\n\n  /** The Final (Final Mode) key is used on some Asian keyboards to enter final mode when using IMEs. */\n  FinalMode = 'FinalMode',\n\n  /** Switches to the first character group on an ISO/IEC 9995 keyboard. Each key may have multiple groups of characters, each in its own column. Pressing this key instructs the device to interpret keypresses as coming from the first column on subsequent keystrokes. */\n  GroupFirst = 'GroupFirst',\n\n  /** Switches to the last character group on an ISO/IEC 9995 keyboard. */\n  GroupLast = 'GroupLast',\n\n  /** Switches to the next character group on an ISO/IEC 9995 keyboard. */\n  GroupNext = 'GroupNext',\n\n  /** Switches to the previous character group on an ISO/IEC 9995 keyboard. */\n  GroupPrevious = 'GroupPrevious',\n\n  /** The Mode Change key. Toggles or cycles among input modes of IMEs. */\n  ModeChange = 'ModeChange',\n\n  /** The Next Candidate function key. Selects the next possible match for the ongoing input. */\n  NextCandidate = 'NextCandidate',\n\n  /** The NonConvert (\"Don't convert\") key. This accepts the current input method sequence without running conversion when using an IME. */\n  NonConvert = 'NonConvert',\n\n  /** The Previous Candidate key. Selects the previous possible match for the ongoing input. */\n  PreviousCandidate = 'PreviousCandidate',\n\n  /** The Process key. Instructs the IME to process the conversion. */\n  Process = 'Process',\n\n  /** The Single Candidate key. Enables single candidate mode (as opposed to multi-candidate mode); in this mode, only one candidate is displayed at a time. */\n  SingleCandidate = 'SingleCandidate',\n\n  /** The Hangul (Korean character set) mode key, which toggles between Hangul and English entry modes. */\n  HangulMode = 'HangulMode',\n\n  /** Selects the Hanja mode, for converting Hangul characters to the more specific Hanja characters. */\n  HanjaMode = 'HanjaMode',\n\n  /** Selects the Junja mode, in which Korean is represented using single-byte Latin characters. */\n  JunjaMode = 'JunjaMode',\n\n  /** The Eisu key. This key's purpose is defined by the IME, but may be used to close the IME. */\n  Eisu = 'Eisu',\n\n  /** The Hankaku (half-width characters) key. */\n  Hankaku = 'Hankaku',\n\n  /** The Hiragana key; selects Kana characters mode. */\n  Hiragana = 'Hiragana',\n\n  /** Toggles between the Hiragana and Katakana writing systems. */\n  HiraganaKatakana = 'HiraganaKatakana',\n\n  /** The Kana Mode (Kana Lock) key. */\n  KanaMode = 'KanaMode',\n\n  /** The Kanji Mode key. Enables entering Japanese text using the ideographic characters of Chinese origin. */\n  KanjiMode = 'KanjiMode',\n\n  /** The Katakana key. */\n  Katakana = 'Katakana',\n\n  /** The Romaji key; selects the Roman character set. */\n  Romaji = 'Romaji',\n\n  /** The Zenkaku (full width) characters key. */\n  Zenkaku = 'Zenkaku',\n\n  /** The Zenkaku/Hankaku (full width/half width) toggle key. */\n  ZenkakuHanaku = 'ZenkakuHanaku',\n\n  /** The first general-purpose function key, F1. */\n  F1 = 'F1',\n\n  /** The F2 key. */\n  F2 = 'F2',\n\n  /** The F3 key. */\n  F3 = 'F3',\n\n  /** The F4 key. */\n  F4 = 'F4',\n\n  /** The F5 key. */\n  F5 = 'F5',\n\n  /** The F6 key. */\n  F6 = 'F6',\n\n  /** The F7 key. */\n  F7 = 'F7',\n\n  /** The F8 key. */\n  F8 = 'F8',\n\n  /** The F9 key. */\n  F9 = 'F9',\n\n  /** The F10 key. */\n  F10 = 'F10',\n\n  /** The F11 key. */\n  F11 = 'F11',\n\n  /** The F12 key. */\n  F12 = 'F12',\n\n  /** The F13 key. */\n  F13 = 'F13',\n\n  /** The F14 key. */\n  F14 = 'F14',\n\n  /** The F15 key. */\n  F15 = 'F15',\n\n  /** The F16 key. */\n  F16 = 'F16',\n\n  /** The F17 key. */\n  F17 = 'F17',\n\n  /** The F18 key. */\n  F18 = 'F18',\n\n  /** The F19 key. */\n  F19 = 'F19',\n\n  /** The F20 key. */\n  F20 = 'F20',\n\n  /** The first general-purpose virtual function key. */\n  Soft1 = 'Soft1',\n\n  /** The second general-purpose virtual function key. */\n  Soft2 = 'Soft2',\n\n  /** The third general-purpose virtual function key. */\n  Soft3 = 'Soft3',\n\n  /** The fourth general-purpose virtual function key. */\n  Soft4 = 'Soft4',\n\n  /** Presents a list of recently-used applications which lets the user change apps quickly. */\n  AppSwitch = 'AppSwitch',\n\n  /** The Call key. Dials the number which has been entered. */\n  Call = 'Call',\n\n  /** The Camera key. Activates the camera. */\n  Camera = 'Camera',\n\n  /** The Focus key. Focuses the camera. */\n  CameraFocus = 'CameraFocus',\n\n  /** The End Call or Hang Up button. */\n  EndCall = 'EndCall',\n\n  /** The Back button. */\n  GoBack = 'GoBack',\n\n  /** The Home button. Returns the user to the phone's main screen (usually an application launcher). */\n  GoHome = 'GoHome',\n\n  /** The Headset Hook key. This is typically actually a button on the headset which is used to hang up calls and play or pause media. */\n  HeadsetHook = 'HeadsetHook',\n\n  /** The Redial button. Redials the last-called number. */\n  LastNumberRedial = 'LastNumberRedial',\n\n  /** The Notification key. */\n  Notification = 'Notification',\n\n  /** A button which cycles among the notification modes: silent, vibrate, ring, and so forth. */\n  MannerMode = 'MannerMode',\n\n  /** The Voice Dial key. Initiates voice dialing. */\n  VoiceDial = 'VoiceDial',\n\n  /** Switches to the previous channel. */\n  ChannelDown = 'ChannelDown',\n\n  /** Switches to the next channel. */\n  ChannelUp = 'ChannelUp',\n\n  /** Starts, continues, or increases the speed of fast forwarding the media. */\n  MediaFastForward = 'MediaFastForward',\n\n  /**\n   * Pauses the currently playing media.\n   * Note: Some older applications use \"Pause\", but this is not correct.\n   */\n  MediaPause = 'MediaPause',\n\n  /** Starts or continues playing media at normal speed, if not already doing so. Has no effect otherwise. */\n  MediaPlay = 'MediaPlay',\n\n  /** Toggles between playing and pausing the current media. */\n  MediaPlayPause = 'MediaPlayPause',\n\n  /** Starts or resumes recording media. */\n  MediaRecord = 'MediaRecord',\n\n  /** Starts, continues, or increases the speed of rewinding the media. */\n  MediaRewind = 'MediaRewind',\n\n  /** Stops the current media activity (such as playing, recording, pausing, forwarding, or rewinding). Has no effect if the media is currently stopped already. */\n  MediaStop = 'MediaStop',\n\n  /** Seeks to the next media or program track. */\n  MediaTrackNext = 'MediaTrackNext',\n\n  /** Seeks to the previous media or program track. */\n  MediaTrackPrevious = 'MediaTrackPrevious',\n\n  /** Adjusts audio balance toward the left. */\n  AudioBalanceLeft = 'AudioBalanceLeft',\n\n  /** Adjusts audio balance toward the right. */\n  AudioBalanceRight = 'AudioBalanceRight',\n\n  /** Decreases the amount of bass. */\n  AudioBassDown = 'AudioBassDown',\n\n  /** Reduces bass boosting or cycles downward through bass boost modes or states. */\n  AudioBassBoostDown = 'AudioBassBoostDown',\n\n  /** Toggles bass boosting on and off. */\n  AudioBassBoostToggle = 'AudioBassBoostToggle',\n\n  /** Increases the amoung of bass boosting, or cycles upward through a set of bass boost modes or states. */\n  AudioBassBoostUp = 'AudioBassBoostUp',\n\n  /** Increases the amount of bass. */\n  AudioBassUp = 'AudioBassUp',\n\n  /** Adjusts the audio fader toward the front. */\n  AudioFaderFront = 'AudioFaderFront',\n\n  /** Adjusts the audio fader toward the rear. */\n  AudioFaderRear = 'AudioFaderRear',\n\n  /** Selects the next available surround sound mode. */\n  AudioSurroundModeNext = 'AudioSurroundModeNext',\n\n  /** Decreases the amount of treble. */\n  AudioTrebleDown = 'AudioTrebleDown',\n\n  /** Increases the amount of treble. */\n  AudioTrebleUp = 'AudioTrebleUp',\n\n  /** Decreases the audio volume. */\n  AudioVolumeDown = 'AudioVolumeDown',\n\n  /** Mutes the audio. */\n  AudioVolumeMute = 'AudioVolumeMute',\n\n  /** Increases the audio volume. */\n  AudioVolumeUp = 'AudioVolumeUp',\n\n  /** Toggles the microphone on and off. */\n  MicrophoneToggle = 'MicrophoneToggle',\n\n  /** Decreases the microphone's input volume. */\n  MicrophoneVolumeDown = 'MicrophoneVolumeDown',\n\n  /** Mutes the microphone input. */\n  MicrophoneVolumeMute = 'MicrophoneVolumeMute',\n\n  /** Increases the microphone's input volume. */\n  MicrophoneVolumeUp = 'MicrophoneVolumeUp',\n\n  /** Switches into TV viewing mode. */\n  TV = 'TV',\n\n  /** Toggles 3D TV mode on and off. */\n  TV3DMode = 'TV3DMode',\n\n  /** Toggles between antenna and cable inputs. */\n  TVAntennaCable = 'TVAntennaCable',\n\n  /** Toggles audio description mode on and off. */\n  TVAudioDescription = 'TVAudioDescription',\n\n  /** Decreases trhe audio description's mixing volume; reduces the volume of the audio descriptions relative to the program sound. */\n  TVAudioDescriptionMixDown = 'TVAudioDescriptionMixDown',\n\n  /** Increases the audio description's mixing volume; increases the volume of the audio descriptions relative to the program sound. */\n  TVAudioDescriptionMixUp = 'TVAudioDescriptionMixUp',\n\n  /** Displays or hides the media contents available for playback (this may be a channel guide showing the currently airing programs, or a list of media files to play). */\n  TVContentsMenu = 'TVContentsMenu',\n\n  /** Displays or hides the TV's data service menu. */\n  TVDataService = 'TVDataService',\n\n  /** Cycles the input mode on an external TV. */\n  TVInput = 'TVInput',\n\n  /** Switches to the input \"Component 1.\" */\n  TVInputComponent1 = 'TVInputComponent1',\n\n  /** Switches to the input \"Component 2.\" */\n  TVInputComponent2 = 'TVInputComponent2',\n\n  /** Switches to the input \"Composite 1.\" */\n  TVInputComposite1 = 'TVInputComposite1',\n\n  /** Switches to the input \"Composite 2.\" */\n  TVInputComposite2 = 'TVInputComposite2',\n\n  /** Switches to the input \"HDMI 1.\" */\n  TVInputHDMI1 = 'TVInputHDMI1',\n\n  /** Switches to the input \"HDMI 2.\" */\n  TVInputHDMI2 = 'TVInputHDMI2',\n\n  /** Switches to the input \"HDMI 3.\" */\n  TVInputHDMI3 = 'TVInputHDMI3',\n\n  /** Switches to the input \"HDMI 4.\" */\n  TVInputHDMI4 = 'TVInputHDMI4',\n\n  /** Switches to the input \"VGA 1.\" */\n  TVInputVGA1 = 'TVInputVGA1',\n\n  /** The Media Context menu key. */\n  TVMediaContext = 'TVMediaContext',\n\n  /** Toggle the TV's network connection on and off. */\n  TVNetwork = 'TVNetwork',\n\n  /** Put the TV into number entry mode. */\n  TVNumberEntry = 'TVNumberEntry',\n\n  /** The device's power button. */\n  TVPower = 'TVPower',\n\n  /** Radio button. */\n  TVRadioService = 'TVRadioService',\n\n  /** Satellite button. */\n  TVSatellite = 'TVSatellite',\n\n  /** Broadcast Satellite button. */\n  TVSatelliteBS = 'TVSatelliteBS',\n\n  /** Communication Satellite button. */\n  TVSatelliteCS = 'TVSatelliteCS',\n\n  /** Toggles among available satellites. */\n  TVSatelliteToggle = 'TVSatelliteToggle',\n\n  /** Selects analog terrestrial television service (analog cable or antenna reception). */\n  TVTerrestrialAnalog = 'TVTerrestrialAnalog',\n\n  /** Selects digital terrestrial television service (digital cable or antenna receiption). */\n  TVTerrestrialDigital = 'TVTerrestrialDigital',\n\n  /** Timer programming button. */\n  TVTimer = 'TVTimer',\n\n  /** Changes the input mode on an external audio/video receiver (AVR) unit. */\n  AVRInput = 'AVRInput',\n\n  /** Toggles the power on an external AVR unit. */\n  AVRPower = 'AVRPower',\n\n  /** General-purpose media function key, color-coded red. This has index 0 among the colored keys. */\n  ColorF0Red = 'ColorF0Red',\n\n  /** General-purpose media funciton key, color-coded green. This has index 1 among the colored keys. */\n  ColorF1Green = 'ColorF1Green',\n\n  /** General-purpose media funciton key, color-coded yellow. This has index 2 among the colored keys. */\n  ColorF2Yellow = 'ColorF2Yellow',\n\n  /** General-purpose media funciton key, color-coded blue. This has index 3 among the colored keys. */\n  ColorF3Blue = 'ColorF3Blue',\n\n  /** General-purpose media funciton key, color-coded grey. This has index 4 among the colored keys. */\n  ColorF4Grey = 'ColorF4Grey',\n\n  /** General-purpose media funciton key, color-coded brown. This has index 5 among the colored keys. */\n  ColorF5Brown = 'ColorF5Brown',\n\n  /** Toggles closed captioning on and off. */\n  ClosedCaptionToggle = 'ClosedCaptionToggle',\n\n  /** Adjusts the brightness of the device by toggling between two brightness levels or by cycling among multiple brightness levels. */\n  Dimmer = 'Dimmer',\n\n  /** Cycles among video sources. */\n  DisplaySwap = 'DisplaySwap',\n\n  /** Switches the input source to the Digital Video Recorder (DVR). */\n  DVR = 'DVR',\n\n  /** The Exit button, which exits the curreent application or menu. */\n  Exit = 'Exit',\n\n  /** Clears the program or content stored in the first favorites list slot. */\n  FavoriteClear0 = 'FavoriteClear0',\n\n  /** Clears the program or content stored in the second favorites list slot. */\n  FavoriteClear1 = 'FavoriteClear1',\n\n  /** Clears the program or content stored in the third favorites list slot. */\n  FavoriteClear2 = 'FavoriteClear2',\n\n  /** Clears the program or content stored in the fourth favorites list slot. */\n  FavoriteClear3 = 'FavoriteClear3',\n\n  /** Selects (recalls) the program or content stored in the first favorites list slot. */\n  FavoriteRecall0 = 'FavoriteRecall0',\n\n  /** Selects (recalls) the program or content stored in the second favorites list slot. */\n  FavoriteRecall1 = 'FavoriteRecall1',\n\n  /** Selects (recalls) the program or content stored in the third favorites list slot. */\n  FavoriteRecall2 = 'FavoriteRecall2',\n\n  /** Selects (recalls) the program or content stored in the fourth favorites list slot. */\n  FavoriteRecall3 = 'FavoriteRecall3',\n\n  /** Stores the current program or content into the first favorites list slot. */\n  FavoriteStore0 = 'FavoriteStore0',\n\n  /** Stores the current program or content into the second favorites list slot. */\n  FavoriteStore1 = 'FavoriteStore1',\n\n  /** Stores the current program or content into the third favorites list slot. */\n  FavoriteStore2 = 'FavoriteStore2',\n\n  /** Stores the current program or content into the fourth favorites list slot. */\n  FavoriteStore3 = 'FavoriteStore3',\n\n  /** Toggles the display of the program or content guide. */\n  Guide = 'Guide',\n\n  /** If the guide is currently displayed, this button tells the guide to display the next day's content. */\n  GuideNextDay = 'GuideNextDay',\n\n  /** If the guide is currently displayed, this button tells the guide to display the previous day's content. */\n  GuidePreviousDay = 'GuidePreviousDay',\n\n  /** Toggles the display of information about the currently selected content, program, or media. */\n  Info = 'Info',\n\n  /** Tells the device to perform an instant replay (typically some form of jumping back a short amount of time then playing it again, possibly but not usually in slow motion). */\n  InstantReplay = 'InstantReplay',\n\n  /** Opens content liniked to the current program, if available and possible. */\n  Link = 'Link',\n\n  /** Lists the current program. */\n  ListProgram = 'ListProgram',\n\n  /** Toggles a display listing currently available live content or programs. */\n  LiveContent = 'LiveContent',\n\n  /** Locks or unlocks the currently selected content or pgoram. */\n  Lock = 'Lock',\n\n  /** Presents a list of media applications, such as photo viewers, audio and video players, and games. [1] */\n  MediaApps = 'MediaApps',\n\n  /** The Audio Track key. */\n  MediaAudioTrack = 'MediaAudioTrack',\n\n  /** Jumps back to the last-viewed content, program, or other media. */\n  MediaLast = 'MediaLast',\n\n  /** Skips backward to the previous content or program. */\n  MediaSkipBackward = 'MediaSkipBackward',\n\n  /** Skips forward to the next content or program. */\n  MediaSkipForward = 'MediaSkipForward',\n\n  /** Steps backward to the previous content or program. */\n  MediaStepBackward = 'MediaStepBackward',\n\n  /** Steps forward to the next content or program. */\n  MediaStepForward = 'MediaStepForward',\n\n  /** Top Menu button. Opens the media's main menu (e.g., for a DVD or Blu-Ray disc). */\n  MediaTopMenu = 'MediaTopMenu',\n\n  /** Navigates into a submenu or option. */\n  NavigateIn = 'NavigateIn',\n\n  /** Navigates to the next item. */\n  NavigateNext = 'NavigateNext',\n\n  /** Navigates out of the current screen or menu. */\n  NavigateOut = 'NavigateOut',\n\n  /** Navigates to the previous item. */\n  NavigatePrevious = 'NavigatePrevious',\n\n  /** Cycles to the next channel in the favorites list. */\n  NextFavoriteChannel = 'NextFavoriteChannel',\n\n  /** Cycles to the next saved user profile, if this feature is supported and multiple profiles exist. */\n  NextUserProfile = 'NextUserProfile',\n\n  /** Opens the user interface for selecting on demand content or programs to watch. */\n  OnDemand = 'OnDemand',\n\n  /** Starts the process of pairing the remote with a device to be controlled. */\n  Pairing = 'Pairing',\n\n  /** A button to move the picture-in-picture view downward. */\n  PinPDown = 'PinPDown',\n\n  /** A button to control moving the picture-in-picture view. */\n  PinPMove = 'PinPMove',\n\n  /** Toggles display of th epicture-in-picture view on and off. */\n  PinPToggle = 'PinPToggle',\n\n  /** A button to move the picture-in-picture view upward. */\n  PinPUp = 'PinPUp',\n\n  /** Decreases the media playback rate. */\n  PlaySpeedDown = 'PlaySpeedDown',\n\n  /** Returns the media playback rate to normal. */\n  PlaySpeedReset = 'PlaySpeedReset',\n\n  /** Increases the media playback rate. */\n  PlaySpeedUp = 'PlaySpeedUp',\n\n  /** Toggles random media (also known as \"shuffle mode\") on and off. */\n  RandomToggle = 'RandomToggle',\n\n  /** A code sent when the remote control's battery is low. This doesn't actually correspond to a physical key at all. */\n  RcLowBattery = 'RcLowBattery',\n\n  /** Cycles among the available media recording speeds. */\n  RecordSpeedNext = 'RecordSpeedNext',\n\n  /** Toggles radio frequency (RF) input bypass mode on and off. RF bypass mode passes RF input directly to the RF output without any processing or filtering. */\n  RfBypass = 'RfBypass',\n\n  /** Toggles the channel scan mode on and off. This is a mode which flips through channels automatically until the user stops the scan. */\n  ScanChannelsToggle = 'ScanChannelsToggle',\n\n  /** Cycles through the available screen display modes. */\n  ScreenModeNext = 'ScreenModeNext',\n\n  /** Toggles display of the device's settings screen on and off. */\n  Settings = 'Settings',\n\n  /** Toggles split screen display mode on and off. */\n  SplitScreenToggle = 'SplitScreenToggle',\n\n  /** Cycles among input modes on an external set-top box (STB). */\n  STBInput = 'STBInput',\n\n  /** Toggles on and off an external STB. */\n  STBPower = 'STBPower',\n\n  /** Toggles the display of subtitles on and off if they're available. */\n  Subtitle = 'Subtitle',\n\n  /** Toggles display of teletext, if available. */\n  Teletext = 'Teletext',\n\n  /** Cycles through the available video modes. */\n  VideoModeNext = 'VideoModeNext',\n\n  /** Causes the device to identify itself in some fashion, such as by flashing a light, briefly changing the brightness of indicator lights, or emitting a tone. */\n  Wink = 'Wink',\n\n  /** Toggles between full-screen and scaled content display, or otherwise change the magnification level. */\n  ZoomToggle = 'ZoomToggle',\n\n  /** Presents a list of possible corrections for a word which was incorrectly identified. */\n  SpeechCorrectionList = 'SpeechCorrectionList',\n\n  /** Toggles between dictation mode and command/control mode. This lets the speech engine know whether to interpret spoken words as input text or as commands. */\n  SpeechInputToggle = 'SpeechInputToggle',\n\n  /** Closes the current document or message. Must not exit the application. */\n  Close = 'Close',\n\n  /** Creates a new document or message. */\n  New = 'New',\n\n  /** Opens an existing document or message. */\n  Open = 'Open',\n\n  /** Prints the current document or message. */\n  Print = 'Print',\n\n  /** Saves the current document or message. */\n  Save = 'Save',\n\n  /** Starts spell checking the current document. */\n  SpellCheck = 'SpellCheck',\n\n  /** Opens the user interface to forward a message. */\n  MailForward = 'MailForward',\n\n  /** Opens the user interface to reply to a message. */\n  MailReply = 'MailReply',\n\n  /** Sends the current message. */\n  MailSend = 'MailSend',\n\n  /** The Calculator key, often labeled with an icon. This is often used as a generic application launcher key (APPCOMMAND_LAUNCH_APP2). */\n  LaunchCalculator = 'LaunchCalculator',\n\n  /** The Calendar key. Often labeled with an icon. */\n  LaunchCalendar = 'LaunchCalendar',\n\n  /** The Contacts key. */\n  LaunchContacts = 'LaunchContacts',\n\n  /** The Mail key. Often labeled with an icon. */\n  LaunchMail = 'LaunchMail',\n\n  /** The Media Player key. */\n  LaunchMediaPlayer = 'LaunchMediaPlayer',\n\n  /** The Music Player key. Often labeled with an icon. */\n  LaunchMusicPlayer = 'LaunchMusicPlayer',\n\n  /** The My Computer key on Windows keyboards. This is often used as a generic application launcher key (APPCOMMAND_LAUNCH_APP1). */\n  LaunchMyComputer = 'LaunchMyComputer',\n\n  /** The Phone key. Opens the phone dialer application (if one is present). */\n  LaunchPhone = 'LaunchPhone',\n\n  /** The Screen Saver key. */\n  LaunchScreenSaver = 'LaunchScreenSaver',\n\n  /** The Spreadsheet key. This key may be labeled with an icon. */\n  LaunchSpreadsheet = 'LaunchSpreadsheet',\n\n  /** The Web Browser key. This key is frequently labeled with an icon. */\n  LaunchWebBrowser = 'LaunchWebBrowser',\n\n  /** The WebCam key. Opens the webcam application. */\n  LaunchWebCam = 'LaunchWebCam',\n\n  /** The Word Processor key. This may be an icon of a specific word processor application, or a generic document icon. */\n  LaunchWordProcessor = 'LaunchWordProcessor',\n\n  /** The first generic application launcher button. */\n  LaunchApplication1 = 'LaunchApplication1',\n\n  /** The second generic application launcher button. */\n  LaunchApplication2 = 'LaunchApplication2',\n\n  /** The third generic application launcher button. */\n  LaunchApplication3 = 'LaunchApplication3',\n\n  /** The fourth generic application launcher button. */\n  LaunchApplication4 = 'LaunchApplication4',\n\n  /** The fifth generic application launcher button. */\n  LaunchApplication5 = 'LaunchApplication5',\n\n  /** The sixth generic application launcher button. */\n  LaunchApplication6 = 'LaunchApplication6',\n\n  /** The seventh generic application launcher button. */\n  LaunchApplication7 = 'LaunchApplication7',\n\n  /** The eighth generic application launcher button. */\n  LaunchApplication8 = 'LaunchApplication8',\n\n  /** The ninth generic application launcher button. */\n  LaunchApplication9 = 'LaunchApplication9',\n\n  /** The 10th generic application launcher button. */\n  LaunchApplication10 = 'LaunchApplication10',\n\n  /** The 11th generic application launcher button. */\n  LaunchApplication11 = 'LaunchApplication11',\n\n  /** The 12th generic application launcher button. */\n  LaunchApplication12 = 'LaunchApplication12',\n\n  /** The 13th generic application launcher button. */\n  LaunchApplication13 = 'LaunchApplication13',\n\n  /** The 14th generic application launcher button. */\n  LaunchApplication14 = 'LaunchApplication14',\n\n  /** The 15th generic application launcher button. */\n  LaunchApplication15 = 'LaunchApplication15',\n\n  /** The 16th generic application launcher button. */\n  LaunchApplication16 = 'LaunchApplication16',\n\n  /** Navigates to the previous content or page in the current Web view's history. */\n  BrowserBack = 'BrowserBack',\n\n  /** Opens the user's list of bookmarks/favorites. */\n  BrowserFavorites = 'BrowserFavorites',\n\n  /** Navigates to the next content or page in the current Web view's history. */\n  BrowserForward = 'BrowserForward',\n\n  /** Navigates to the user's preferred home page. */\n  BrowserHome = 'BrowserHome',\n\n  /** Refreshes the current page or content. */\n  BrowserRefresh = 'BrowserRefresh',\n\n  /** Activates the user's preferred search engine or the search interface within their browser. */\n  BrowserSearch = 'BrowserSearch',\n\n  /** Stops loading the currently displayed Web view or content. */\n  BrowserStop = 'BrowserStop',\n\n  /**\n   * The decimal point key (typically . or , depending on the region).\n   * In newer browsers, this value to be the character generated by the decimal key (one of those two characters). [1]\n   */\n  Decimal = 'Decimal',\n\n  /** The 11 key found on certain media numeric keypads. */\n  Key11 = 'Key11',\n\n  /** The 12 key found on certain media numeric keypads. */\n  Key12 = 'Key12',\n\n  /** The numeric keypad's multiplication key, *. */\n  Multiply = 'Multiply',\n\n  /** The numeric keypad's addition key, +. */\n  Add = 'Add',\n\n  /** The numeric keypad's division key, /. */\n  Divide = 'Divide',\n\n  /** The numeric keypad's subtraction key, -. */\n  Subtract = 'Subtract',\n\n  /**\n   * The numeric keypad's places separator character.\n   * (In the United States this is a comma, but elsewhere it is frequently a period.)\n   */\n  Separator = 'Separator',\n\n  /**\n   * The Spacebar\n   */\n  Space = ' ',\n}\n\nexport const isAlphaNumeric = (letter: string) => {\n  return 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'.includes(letter.toUpperCase());\n};\n","// NG2\nimport { ElementRef, EventEmitter, Injectable, OnDestroy } from '@angular/core';\n// APP\nimport { Helpers } from '../Helpers';\n\n/**\n * Outside click helper, makes to set the element as inactive when clicking outside of it\n */\n@Injectable()\nexport class OutsideClick implements OnDestroy {\n  element: ElementRef;\n  otherElement: ElementRef;\n  active: boolean = false;\n  onOutsideClick: EventListenerOrEventListenerObject;\n  onActiveChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(element: ElementRef) {\n    // Component element\n    this.element = element;\n    // Outside click handler\n    // Property because `this.func.bind(this)` returns a new function each time\n    this.onOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  /**\n   * When the element is destroyed, make sure to remove the handler\n   */\n  ngOnDestroy() {\n    window.removeEventListener('click', this.onOutsideClick);\n  }\n\n  /**\n   * Toggles the element as active and adds/removes the outside click handler\n   */\n  public toggleActive(event?: MouseEvent, forceValue?: boolean): void {\n    // Reverse the active property (if forceValue, use that)\n    this.active = !Helpers.isBlank(forceValue) ? forceValue : !this.active;\n    // Bind window click events to hide on outside click\n    if (this.active) {\n      window.addEventListener('click', this.onOutsideClick);\n    } else {\n      window.removeEventListener('click', this.onOutsideClick);\n    }\n    // Fire the active change event\n    this.onActiveChange.emit(this.active);\n  }\n\n  /**\n   * When clicking outside, checks the element and closes if outside\n   */\n  public handleOutsideClick(event: MouseEvent): void {\n    // If the elements doesn't contain the target element, it is an outside click\n    let outsideClick = !this.element.nativeElement.contains(event.target);\n    if (this.otherElement && outsideClick) {\n      outsideClick = !this.otherElement.nativeElement.contains(event.target);\n    }\n    if (outsideClick) {\n      this.toggleActive(event, false);\n    }\n  }\n}\n","// NG2\nimport { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { BooleanInput } from '../../utils';\n\n@Component({\n  selector: 'novo-button,button[theme]',\n  host: {\n    class: 'novo-button',\n    '[attr.theme]': 'theme',\n    '[attr.color]': 'color',\n    '[attr.icon]': 'icon',\n    '[attr.loading]': 'loading',\n    '[attr.side]': 'side',\n    '[attr.size]': 'size',\n    '[attr.role]': \"'button'\",\n  },\n  styleUrls: [\n    './styles/button.scss',\n    './styles/button-standard.scss',\n    './styles/button-primary.scss',\n    './styles/button-secondary.scss',\n    './styles/button-fab.scss',\n    './styles/button-icon.scss',\n    './styles/button-dialogue.scss',\n    './styles/button-other.scss',\n  ],\n\n  template: `\n    <!--Left Icon-->\n    <i *ngIf=\"icon && side === 'left' && !loading\" [ngClass]=\"icon\" class=\"novo-button-icon novo-button-icon-left\"></i>\n    <!--Transcluded Content-->\n    <span #textContent class=\"button-contents\"><ng-content></ng-content></span>\n    <!--Right Icon-->\n    <i *ngIf=\"icon && side === 'right' && !loading\" [ngClass]=\"icon\" class=\"novo-button-icon novo-button-icon-right\"></i>\n    <!--Loading-->\n    <i *ngIf=\"loading\" class=\"loading novo-button-loading\">\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"18.2px\"\n        height=\"18.5px\"\n        viewBox=\"0 0 18.2 18.5\"\n        style=\"enable-background:new 0 0 18.2 18.5;\"\n        xml:space=\"preserve\"\n      >\n        <style type=\"text/css\">\n          .spinner {\n            fill: #ffffff;\n          }\n        </style>\n        <path\n          class=\"spinner\"\n          d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                        c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                        c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"\n        />\n      </svg>\n    </i>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoButtonElement {\n  /**\n   * The text color of the button. Should be used for Icon buttons. see theme.\n   */\n  @Input() color: string;\n  /**\n   * The side of the button to display the icon.\n   * @deprecated\n   */\n  @Input() side: string = 'right';\n  /**\n   * \tSets the size of the button. One of: sm, lg\n   */\n  @Input() size: string;\n  /**\n   * The base styling to apply to the button.\n   */\n  @Input() theme: string = 'dialogue';\n  /**\n   * Conditionally show a spinner over the top of a button.\n   */\n  @Input() loading: boolean;\n  /**\n   * Optionally display `bullhorn-icon` with the button along with the text.\n   * @deprecated\n   */\n  @Input()\n  set icon(icon: string) {\n    if (icon) {\n      this._icon = `bhi-${icon}`;\n    }\n  }\n  get icon(): string {\n    return this._icon;\n  }\n\n  /**\n   * Make the button non-interactive.\n   */\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-button-disabled')\n  disabled: boolean = false;\n\n  private _icon: string;\n\n  constructor(public element: ElementRef) {}\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this.element.nativeElement.focus(options);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoButtonElement } from './Button';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoButtonElement],\n  exports: [NovoButtonElement],\n})\nexport class NovoButtonModule {}\n","// NG2\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'novo-tooltip',\n  templateUrl: './Tooltip.html',\n  styleUrls: ['./Tooltip.scss'],\n  animations: [\n    trigger('state', [\n      state('initial, void, hidden', style({ opacity: '0' })),\n      state('visible', style({ opacity: '1' })),\n      transition('* => visible', [\n        style({\n          opacity: 0,\n        }),\n        animate('0.3s 0.1s ease-in'),\n      ]),\n      transition('* => hidden', [\n        style({\n          opacity: 1,\n        }),\n        animate('0.3s 0.1s ease-in'),\n      ]),\n    ]),\n  ],\n})\nexport class NovoTooltip {\n  public message: string;\n  public hidden: boolean;\n  public tooltipType: string;\n  public rounded: boolean;\n  public size: string;\n  public positionStrategy: any;\n  public preline: boolean;\n  public noAnimate: boolean;\n  public position: string;\n  public isHTML: boolean;\n}\n","// NG\nimport {\n  ConnectedPositionStrategy,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConfig,\n  OverlayConnectionPosition,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, Input, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\n// APP\nimport { NovoTooltip } from './Tooltip.component';\n\n@Directive({\n  selector: '[tooltip]',\n  host: {\n    '[attr.data-hint]': 'tooltip',\n  },\n})\nexport class TooltipDirective implements OnDestroy, OnInit {\n  @Input()\n  tooltip: string;\n  @Input('tooltipPosition')\n  position: string = 'top';\n  @Input('tooltipType')\n  type: string = 'normal';\n  @Input('tooltipSize')\n  size: string;\n  @Input('tooltipBounce')\n  bounce: string;\n  @Input('tooltipNoAnimate')\n  noAnimate: boolean;\n  @Input('tooltipRounded')\n  rounded: boolean;\n  @Input('tooltipAlways')\n  always: boolean;\n  @Input('tooltipActive')\n  active: boolean = true;\n  @Input('tooltipPreline')\n  preline: boolean;\n  @Input('removeTooltipArrow')\n  removeArrow: boolean = false;\n  @Input('tooltipAutoPosition')\n  autoPosition: boolean = false;\n  @Input('tooltipIsHTML')\n  isHTML: boolean;\n\n  private tooltipInstance: NovoTooltip | null;\n  private portal: ComponentPortal<NovoTooltip>;\n  private overlayRef: OverlayRef;\n\n  constructor(protected overlay: Overlay, private viewContainerRef: ViewContainerRef, private elementRef: ElementRef) {}\n  isPosition(position: string): boolean {\n    return position.toLowerCase() === (this.position || '').toLowerCase();\n  }\n\n  isType(type: string): boolean {\n    return type.toLowerCase() === (this.type || '').toLowerCase();\n  }\n\n  isSize(size: string): boolean {\n    return size.toLowerCase() === (this.size || '').toLowerCase();\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if (this.tooltip && this.active && !this.always) {\n      this.show();\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    if (this.overlayRef && !this.always) {\n      this.hide();\n      this.overlayRef.dispose();\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.tooltip && this.always && this.active) {\n      this.show();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.overlayRef && !this.always) {\n      this.hide();\n      this.overlayRef.dispose();\n    }\n  }\n\n  private show(): void {\n    const overlayState = new OverlayConfig();\n    overlayState.positionStrategy = this.getPosition();\n\n    if (this.always) {\n      overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n    } else {\n      overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n    }\n    overlayState.scrollStrategy.enable();\n\n    this.overlayRef = this.overlay.create(overlayState);\n\n    this.overlayRef.detach();\n    this.portal = this.portal || new ComponentPortal(NovoTooltip, this.viewContainerRef);\n\n    const tooltipInstance = this.overlayRef.attach(this.portal).instance;\n    tooltipInstance.message = this.tooltip;\n    tooltipInstance.tooltipType = this.type;\n    tooltipInstance.rounded = this.rounded;\n    tooltipInstance.size = this.size;\n    tooltipInstance.preline = this.preline;\n    tooltipInstance.noAnimate = this.noAnimate;\n    tooltipInstance.position = this.removeArrow ? 'no-arrow' : this.position;\n    tooltipInstance.isHTML = this.isHTML;\n  }\n\n  private hide(): void {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n    }\n  }\n\n  private getPosition(): ConnectedPositionStrategy {\n    let strategy: ConnectedPositionStrategy;\n    let originPosition: OriginConnectionPosition;\n    let overlayPosition: OverlayConnectionPosition;\n    let offsetX: number;\n    let offsetY: number;\n\n    switch (this.position) {\n      case 'right':\n        originPosition = { originX: 'end', originY: 'center' };\n        overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        offsetX = 8;\n        offsetY = 0;\n        break;\n      case 'bottom':\n        originPosition = { originX: 'center', originY: 'bottom' };\n        overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        offsetX = 0;\n        offsetY = 8;\n        break;\n      case 'top':\n        originPosition = { originX: 'center', originY: 'top' };\n        overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        offsetX = 0;\n        offsetY = -8;\n        break;\n      case 'left':\n        originPosition = { originX: 'start', originY: 'center' };\n        overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        offsetX = -8;\n        offsetY = 0;\n        break;\n      case 'top-left':\n        originPosition = { originX: 'start', originY: 'top' };\n        overlayPosition = { overlayX: 'end', overlayY: 'bottom' };\n        offsetX = 8;\n        offsetY = -8;\n        break;\n      case 'bottom-left':\n        originPosition = { originX: 'start', originY: 'bottom' };\n        overlayPosition = { overlayX: 'end', overlayY: 'top' };\n        offsetX = 8;\n        offsetY = 8;\n        break;\n      case 'top-right':\n        originPosition = { originX: 'end', originY: 'top' };\n        overlayPosition = { overlayX: 'start', overlayY: 'bottom' };\n        offsetX = -8;\n        offsetY = -8;\n        break;\n      case 'bottom-right':\n        originPosition = { originX: 'end', originY: 'bottom' };\n        overlayPosition = { overlayX: 'start', overlayY: 'top' };\n        offsetX = -8;\n        offsetY = 8;\n        break;\n\n      default:\n        break;\n    }\n    strategy = this.overlay\n      .position()\n      .connectedTo(this.elementRef, originPosition, overlayPosition)\n      .withOffsetX(offsetX)\n      .withOffsetY(offsetY);\n\n    return this.autoPosition ? this.withFallbackStrategy(strategy) : strategy;\n  }\n  private withFallbackStrategy(strategy: ConnectedPositionStrategy): ConnectedPositionStrategy {\n    strategy\n      .withFallbackPosition({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }, 0, 8)\n      .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, 0, 8)\n      .withFallbackPosition({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }, 8, 0)\n      .withFallbackPosition({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }, -8, 0)\n      .withFallbackPosition({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }, 0, -8)\n      .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, 0, 8)\n      .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, 0, -8)\n      .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, 0, -8)\n      .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, 8, -8)\n      .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, 8, 8)\n      .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, -8, -8)\n      .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, -8, 8);\n\n    return strategy;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoTooltip } from './Tooltip.component';\n// APP\nimport { TooltipDirective } from './Tooltip.directive';\n\n@NgModule({\n  declarations: [TooltipDirective, NovoTooltip],\n  exports: [TooltipDirective],\n  imports: [CommonModule],\n})\nexport class NovoTooltipModule {}\n","import { Component, EventEmitter, Inject, Input, LOCALE_ID, Output } from '@angular/core';\nimport * as dateFns from 'date-fns';\n\n@Component({\n  selector: 'novo-agenda-date-change',\n  template: `\n    <div class=\"cal-date-change\">\n      <i class=\"bhi-arrow-left\" (click)=\"subtractDate()\"></i>\n      <span [ngSwitch]=\"view\">\n        <span *ngSwitchCase=\"'month'\">{{ (viewDate | month: locale) + ' ' + (viewDate | year: locale) }}</span>\n        <span *ngSwitchCase=\"'week'\">{{\n          (startOfWeek | monthday: locale:'long') + ' - ' + (endOfWeek | endofweekdisplay: startOfWeek:locale:'long')\n        }}</span>\n        <span *ngSwitchCase=\"'day'\">{{\n          (viewDate | weekday: locale:'long') + ', ' + (viewDate | month: locale) + ' ' + (viewDate | dayofmonth: locale)\n        }}</span>\n      </span>\n      <i class=\"bhi-arrow-right\" (click)=\"addDate()\"></i>\n    </div>\n  `,\n})\nexport class NovoAgendaDateChangeElement {\n  /**\n   * The current view\n   */\n  @Input()\n  view: string;\n\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  @Input()\n  locale: string;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output()\n  viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  subtractDate(): void {\n    this.changeDate(-1);\n  }\n\n  addDate(): void {\n    this.changeDate(1);\n  }\n\n  changeDate(unit: number): void {\n    const addFn: any = {\n      day: dateFns.addDays,\n      week: dateFns.addWeeks,\n      month: dateFns.addMonths,\n    }[this.view];\n\n    this.viewDateChange.emit(addFn(this.viewDate, unit));\n  }\n\n  get startOfWeek() {\n    return dateFns.startOfWeek(this.viewDate);\n  }\n\n  get endOfWeek() {\n    return dateFns.endOfWeek(this.viewDate);\n  }\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-event-type-legend',\n  template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-event-legend\">\n        <div\n          class=\"cal-event-type\"\n          *ngFor=\"let type of events | groupBy: 'type'\"\n          (click)=\"$event.stopPropagation(); eventTypeClicked.emit({ event: type?.key })\"\n        >\n          <div class=\"cal-event-type-swatch\"></div>\n          <div>{{ type?.key }}</div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{ events: events, eventTypeClicked: eventTypeClicked }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoEventTypeLegendElement {\n  @Input()\n  events: CalendarEvent[];\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  eventTypeClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-all-day-event',\n  template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-all-day-event\" [style.backgroundColor]=\"event.color.secondary\" [style.borderColor]=\"event.color.primary\">\n        {{ event.title }}\n        <!--<novo-agenda-event-title\n          [event]=\"event\"\n          view=\"day\"\n          (click)=\"eventClicked.emit()\">\n        </novo-agenda-event-title>\n        <novo-agenda-event-actions [event]=\"event\"></novo-agenda-event-actions>-->\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        eventClicked: eventClicked\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoAgendaAllDayEventElement {\n  @Input()\n  event: CalendarEvent;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { DayViewEvent } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-day-event',\n  template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-event\"\n        [style.borderColor]=\"dayEvent.event.color.secondary\"\n        [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n        [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n        [ngClass]=\"dayEvent.event.cssClass\"\n        [tooltip]=\"dayEvent.event.description\"\n        [tooltipPosition]=\"tooltipPosition\"\n        (click)=\"eventClicked.emit({ event: dayEvent.event })\"\n      >\n        <div class=\"cal-event-ribbon\" [style.backgroundColor]=\"dayEvent.event.color.primary\"></div>\n        <div class=\"cal-event-group\">\n          <div class=\"cal-event-title\">{{ dayEvent.event.title }}</div>\n          <div class=\"cal-event-description\">{{ dayEvent.event?.description }}</div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{ dayEvent: dayEvent, tooltipPosition: tooltipPosition, eventClicked: eventClicked }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoAgendaDayEventElement {\n  @Input()\n  dayEvent: DayViewEvent;\n\n  @Input()\n  tooltipPosition: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n  DayView,\n  DayViewHour,\n  getDayView,\n  getDayViewHourGrid,\n} from '../../../utils/calendar-utils/CalendarUtils';\n\n/**\n * @hidden\n */\nconst SEGMENT_HEIGHT: number = 30;\n\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * &lt;novo-agenda-day\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-agenda-day&gt;\n * ```\n */\n@Component({\n  selector: 'novo-agenda-day',\n  template: `\n    <div class=\"cal-day-view\" #dayViewContainer>\n      <novo-agenda-all-day-event\n        *ngFor=\"let event of view.allDayEvents\"\n        [event]=\"event\"\n        [customTemplate]=\"allDayEventTemplate\"\n        (eventClicked)=\"eventClicked.emit({ event: event })\"\n      >\n      </novo-agenda-all-day-event>\n      <div class=\"cal-hour-rows\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events\"\n            class=\"cal-event-container\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\"\n          >\n            <novo-agenda-day-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPosition]=\"tooltipPosition\"\n              [customTemplate]=\"eventTemplate\"\n              (eventClicked)=\"eventClicked.emit($event)\"\n            >\n            </novo-agenda-day-event>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"view?.width + 70\">\n          <novo-agenda-day-hour-segment\n            *ngFor=\"let segment of hour.segments\"\n            [segment]=\"segment\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (click)=\"hourSegmentClicked.emit({ date: segment.date })\"\n          >\n          </novo-agenda-day-hour-segment>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NovoAgendaDayViewElement implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   */\n  @Input()\n  events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input()\n  hourSegments: number = 2;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input()\n  dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input()\n  dayEndMinute: number = 59;\n\n  /**\n   * The width in pixels of each event on the view\n   */\n  @Input()\n  eventWidth: number = 150;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input()\n  refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input()\n  locale: string;\n\n  /**\n   * A function that will be called before each hour segment is called. The first argument will contain the hour segment.\n   * If you add the `cssClass` property to the segment it will add that class to the hour segment in the template\n   */\n  @Input()\n  hourSegmentModifier: Function;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input()\n  eventSnapSize: number = 30;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input()\n  tooltipPosition: string = 'top';\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input()\n  hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for all day events\n   */\n  @Input()\n  allDayEventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input()\n  eventTemplate: TemplateRef<any>;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  view: DayView;\n\n  /**\n   * @hidden\n   */\n  width: number = 0;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResize: {\n    originalTop: number;\n    originalHeight: number;\n    edge: string;\n  };\n\n  /**\n   * @hidden\n   */\n  validateDrag: Function;\n\n  /**\n   * @hidden\n   */\n  validateResize: Function;\n\n  /**\n   * @hidden\n   */\n  constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.detectChanges();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute) {\n      this.refreshHourGrid();\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.eventWidth\n    ) {\n      this.refreshView();\n    }\n  }\n\n  /*\n    eventDropped(dropEvent: {dropData?: {event?: CalendarEvent}}, segment: DayViewHourSegment): void {\n      if (dropEvent.dropData && dropEvent.dropData.event) {\n        this.eventTimesChanged.emit({event: dropEvent.dropData.event, newStart: segment.date});\n      }\n    }\n\n    resizeStarted(event: DayViewEvent, resizeEvent: ResizeEvent, dayViewContainer: HTMLElement): void {\n      this.currentResize = {\n        originalTop: event.top,\n        originalHeight: event.height,\n        edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n      };\n      const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(dayViewContainer);\n      this.validateResize = ({rectangle}) => resizeHelper.validateResize({rectangle});\n      this.cdr.detectChanges();\n    }\n\n    resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n      if (resizeEvent.edges.top) {\n        event.top = this.currentResize.originalTop + +resizeEvent.edges.top;\n        event.height = this.currentResize.originalHeight - +resizeEvent.edges.top;\n      } else if (resizeEvent.edges.bottom) {\n        event.height = this.currentResize.originalHeight + +resizeEvent.edges.bottom;\n      }\n    }\n\n    resizeEnded(dayEvent: DayViewEvent): void {\n\n      let pixelsMoved: number;\n      if (this.currentResize.edge === 'top') {\n        pixelsMoved = (dayEvent.top - this.currentResize.originalTop);\n      } else {\n        pixelsMoved = (dayEvent.height - this.currentResize.originalHeight);\n      }\n\n      dayEvent.top = this.currentResize.originalTop;\n      dayEvent.height = this.currentResize.originalHeight;\n\n      const pixelAmountInMinutes: number = MINUTES_IN_HOUR / (this.hourSegments * SEGMENT_HEIGHT);\n      const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\n      let newStart: Date = dayEvent.event.start;\n      let newEnd: Date = dayEvent.event.end;\n      if (this.currentResize.edge === 'top') {\n        newStart = addMinutes(newStart, minutesMoved);\n      } else if (newEnd) {\n        newEnd = addMinutes(newEnd, minutesMoved);\n      }\n\n      this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\n      this.currentResize = null;\n\n    }\n\n    dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\n      const dragHelper: CalendarDragHelper = new CalendarDragHelper(dayViewContainer, event);\n      this.validateDrag = ({x, y}) => !this.currentResize && dragHelper.validateDrag({x, y});\n      this.cdr.detectChanges();\n    }\n\n    eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\n      const pixelAmountInMinutes: number = MINUTES_IN_HOUR / (this.hourSegments * SEGMENT_HEIGHT);\n      const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\n      const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\n      let newEnd: Date;\n      if (dayEvent.event.end) {\n        newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n      }\n      this.eventTimesChanged.emit({newStart, newEnd, event: dayEvent.event});\n    }\n    */\n\n  private refreshHourGrid(): void {\n    this.hours = getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n    });\n    if (this.hourSegmentModifier) {\n      this.hours.forEach((hour) => {\n        hour.segments.forEach((segment) => this.hourSegmentModifier(segment));\n      });\n    }\n  }\n\n  private refreshView(): void {\n    this.view = getDayView({\n      events: this.events,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n      eventWidth: this.eventWidth,\n      segmentHeight: SEGMENT_HEIGHT,\n    });\n  }\n\n  private refreshAll(): void {\n    this.refreshHourGrid();\n    this.refreshView();\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-day-hour-segment',\n  template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-hour-segment\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\">\n          {{ segment.date | hours: locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoAgendaHourSegmentElement {\n  @Input()\n  segment: DayViewHourSegment;\n\n  @Input()\n  locale: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { CalendarEvent, CalendarEventResponse, MonthViewDay } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-month-day',\n  template: `\n    <ng-template #defaultTemplate>\n      <div class=\"agenda-day-top\">\n        <span class=\"agenda-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"agenda-day-number\">{{ day.date | dayofmonth: locale }}</span>\n      </div>\n      <div class=\"agenda-events\">\n        <div\n          class=\"agenda-event\"\n          *ngFor=\"let type of day.events | groupBy: 'type'\"\n          [style.backgroundColor]=\"type?.value[0]?.color.primary\"\n          [ngClass]=\"type?.value[0]?.cssClass\"\n          (click)=\"$event.stopPropagation(); eventClicked.emit({ event: type?.value[0] })\"\n        >\n          {{ type?.value.length }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        locale: locale,\n        tooltipPosition: tooltipPosition,\n        eventClicked: eventClicked,\n        accepted: accepted,\n        rejected: rejected,\n        maybes: maybes\n      }\"\n    >\n    </ng-template>\n  `,\n  host: {\n    '[class]': '\"agenda-cell agenda-day-cell \" + day?.cssClass',\n    '[class.agenda-day-accepted]': 'accepted.length',\n    '[class.agenda-day-rejected]': 'rejected.length',\n    '[class.agenda-past]': 'day.isPast',\n    '[class.agenda-today]': 'day.isToday',\n    '[class.agenda-future]': 'day.isFuture',\n    '[class.agenda-weekend]': 'day.isWeekend',\n    '[class.agenda-in-month]': 'day.inMonth',\n    '[class.agenda-out-month]': '!day.inMonth',\n    '[class.agenda-has-events]': 'day.events.length > 0',\n    '[style.backgroundColor]': 'day.backgroundColor',\n  },\n})\nexport class NovoAgendaMonthDayElement {\n  @Input()\n  day: MonthViewDay;\n\n  @Input()\n  locale: string;\n\n  @Input()\n  tooltipPosition: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n\n  get accepted(): Array<CalendarEvent> {\n    if (!this.day) {\n      return [];\n    }\n    return this.day.events.filter((evt) => {\n      return evt.response === CalendarEventResponse.Accepted;\n    });\n  }\n\n  get rejected(): Array<CalendarEvent> {\n    if (!this.day) {\n      return [];\n    }\n    return this.day.events.filter((evt) => {\n      return evt.response === CalendarEventResponse.Rejected;\n    });\n  }\n\n  get maybes(): Array<CalendarEvent> {\n    if (!this.day) {\n      return [];\n    }\n    return this.day.events.filter((evt) => {\n      return evt.response === CalendarEventResponse.Maybe;\n    });\n  }\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport * as dateFns from 'date-fns';\nimport { WeekDay } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-month-header',\n  template: `\n    <ng-template #defaultTemplate>\n      <div class=\"agenda-header\">\n        <div class=\"agenda-header-top\">\n          <novo-button theme=\"icon\" icon=\"previous\" (click)=\"prevMonth($event)\"></novo-button>\n          <div class=\"agenda-month\">{{ viewDate | month: locale }}</div>\n          <novo-button theme=\"icon\" icon=\"next\" (click)=\"nextMonth($event)\"></novo-button>\n        </div>\n        <div class=\"agenda-weekdays\">\n          <div\n            class=\"agenda-weekday\"\n            *ngFor=\"let day of days\"\n            [class.agenda-past]=\"day.isPast\"\n            [class.agenda-today]=\"day.isToday\"\n            [class.agenda-future]=\"day.isFuture\"\n            [class.agenda-weekend]=\"day.isWeekend\"\n          >\n            {{ day.date | weekday: locale }}\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{ days: days, locale: locale, viewDate: viewDate }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoAgendaMonthHeaderElement {\n  @Input()\n  viewDate: Date;\n\n  @Input()\n  days: WeekDay[];\n\n  @Input()\n  locale: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output()\n  viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  prevMonth(event: Event) {\n    this.viewDateChange.emit(dateFns.subMonths(this.viewDate, 1));\n  }\n\n  nextMonth(event: Event) {\n    this.viewDateChange.emit(dateFns.addMonths(this.viewDate, 1));\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport * as dateFns from 'date-fns';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n  getMonthView,\n  getWeekViewHeader,\n  MonthView,\n  MonthViewDay,\n  WeekDay,\n} from '../../../utils/calendar-utils/CalendarUtils';\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```\n * &lt;novo-agenda-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-agenda-month-view&gt;\n * ```\n */\n@Component({\n  selector: 'novo-agenda-month',\n  template: `\n    <div class=\"agenda-month-view\">\n      <novo-agenda-month-header\n        [(viewDate)]=\"viewDate\"\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (viewDateChange)=\"refreshAll()\"\n      >\n      </novo-agenda-month-header>\n      <div class=\"agenda-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets\">\n          <div class=\"agenda-cell-row\">\n            <novo-agenda-month-day\n              *ngFor=\"let day of view.days | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek\"\n              [day]=\"day\"\n              [locale]=\"locale\"\n              [customTemplate]=\"cellTemplate\"\n              (click)=\"dayClicked.emit({ day: day })\"\n              (eventClicked)=\"eventClicked.emit({ day: day, event: $event.event })\"\n            >\n            </novo-agenda-month-day>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NovoAgendaMonthViewElement implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   */\n  @Input()\n  events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input()\n  excludeDays: number[] = [];\n\n  /**\n   * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\n   * If you add the `cssClass` property to the cell it will add that class to the cell in the template\n   */\n  @Input()\n  dayModifier: Function;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input()\n  refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input()\n  locale: string = 'en-US';\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input()\n  tooltipPosition: string = 'top';\n\n  /**\n   * The start number of the week\n   */\n  @Input()\n  weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input()\n  headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input()\n  cellTemplate: TemplateRef<any>;\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked: EventEmitter<{ day: MonthViewDay }> = new EventEmitter<{ day: MonthViewDay }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked: EventEmitter<{ day: any; event: CalendarEvent }> = new EventEmitter<{ day: any; event: CalendarEvent }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  @Output()\n  viewDateChange: EventEmitter<Date> = new EventEmitter<Date>();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays) {\n      this.refreshHeader();\n    }\n    if (changes.viewDate || changes.events || changes.excludeDays) {\n      this.refreshBody();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\n    const year: number = dateFns.getYear(day.date);\n    const month: number = dateFns.getMonth(day.date);\n    const date: number = dateFns.getDate(day.date);\n    const newStart: Date = dateFns.setYear(dateFns.setMonth(dateFns.setDate(event.start, date), month), year);\n    let newEnd: Date;\n    if (event.end) {\n      const secondsDiff: number = dateFns.differenceInSeconds(newStart, event.start);\n      newEnd = dateFns.addSeconds(event.end, secondsDiff);\n    }\n    this.eventTimesChanged.emit({ event, newStart, newEnd });\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n    });\n  }\n\n  private refreshBody(): void {\n    this.view = getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n    });\n    if (this.dayModifier) {\n      this.view.days.forEach((day) => this.dayModifier(day));\n    }\n  }\n\n  public refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n    this.viewDateChange.emit(this.viewDate);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'dayofmonth' })\nexport class DayOfMonthPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n  transform(date: Date, locale: string = this.locale, method: string = 'numeric'): string {\n    return new Intl.DateTimeFormat(locale, { day: method }).format(date);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'endofweekdisplay' })\nexport class EndOfWeekDisplayPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n\n  transform(endOfWeek: Date, startOfWeek: Date, locale: string = this.locale, method: string = 'short'): String {\n    if (endOfWeek.getMonth() === startOfWeek.getMonth()) {\n      return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(endOfWeek);\n    }\n\n    return new Intl.DateTimeFormat(locale, { month: method, day: 'numeric' }).format(endOfWeek);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'hours' })\nexport class HoursPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n  transform(date: Date, locale: string = this.locale, method: string = 'numeric'): string {\n    return new Intl.DateTimeFormat(locale, { hour: method }).format(date);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'month' })\nexport class MonthPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n  transform(date: Date, locale: string = this.locale, method: string = 'long'): string {\n    return new Intl.DateTimeFormat(locale, { month: method }).format(date);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'monthday' })\nexport class MonthDayPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n  transform(date: Date, locale: string = this.locale, method: string = 'short'): string {\n    return new Intl.DateTimeFormat(locale, { month: method, day: 'numeric' }).format(date);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'weekday' })\nexport class WeekdayPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n  transform(date: Date, locale: string = this.locale, method: string = 'short'): string {\n    return new Intl.DateTimeFormat(locale, { weekday: method }).format(date);\n  }\n}\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'year' })\nexport class YearPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string = 'en-US') {}\n  transform(date: Date, locale: string = this.locale, method: string = 'numeric'): string {\n    return new Intl.DateTimeFormat(locale, { year: method }).format(date);\n  }\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { WeekViewEvent } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-week-event',\n  template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-event\"\n        [class.cal-starts-within-week]=\"!weekEvent.startsBeforeWeek\"\n        [class.cal-ends-within-week]=\"!weekEvent.endsAfterWeek\"\n        [ngClass]=\"weekEvent.event?.cssClass\"\n        [tooltip]=\"weekEvent.event.description\"\n        [tooltipPosition]=\"tooltipPosition\"\n        (click)=\"eventClicked.emit({ event: weekEvent.event })\"\n      >\n        <div class=\"cal-event-ribbon\" [style.backgroundColor]=\"weekEvent.event.color.primary\"></div>\n        <div class=\"cal-event-title\">{{ weekEvent.event?.title }}</div>\n        <div class=\"cal-event-description\">{{ weekEvent.event?.description }}</div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{ weekEvent: weekEvent, tooltipPosition: tooltipPosition, eventClicked: eventClicked }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoAgendaWeekEventElement {\n  @Input()\n  weekEvent: WeekViewEvent;\n\n  @Input()\n  tooltipPosition: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { CalendarEvent, WeekDay } from '../../../utils/calendar-utils/CalendarUtils';\n\n@Component({\n  selector: 'novo-agenda-week-header',\n  template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [class.cal-drag-over]=\"day.dragOver\"\n          (click)=\"dayClicked.emit({ date: day.date })\"\n          mwlDroppable\n          (dragEnter)=\"day.dragOver = true\"\n          (dragLeave)=\"day.dragOver = false\"\n          (drop)=\"day.dragOver = false; eventDropped.emit({ event: $event.dropData.event, newStart: day.date })\"\n        >\n          <b>{{ day.date | weekday: locale:'long' }}</b\n          ><br />\n          <span>{{ day.date | monthday: locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{ days: days, locale: locale, dayClicked: dayClicked, eventDropped: eventDropped }\"\n    >\n    </ng-template>\n  `,\n})\nexport class NovoAgendaWeekHeaderElement {\n  @Input()\n  days: WeekDay[];\n\n  @Input()\n  locale: string;\n\n  @Input()\n  customTemplate: TemplateRef<any>;\n\n  @Output()\n  dayClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n\n  @Output()\n  eventDropped: EventEmitter<{ event: CalendarEvent; newStart: Date }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n  DayViewHour,\n  getDayViewHourGrid,\n  getWeekView,\n  getWeekViewHeader,\n  WeekDay,\n  WeekViewEventRow,\n} from '../../../utils/calendar-utils/CalendarUtils';\n\n/**\n * @hidden\n */\nconst SEGMENT_HEIGHT: number = 30;\n\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * &lt;novo-agenda-week\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-agenda-week&gt;\n * ```\n */\n@Component({\n  selector: 'novo-agenda-week',\n  template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <novo-agenda-week-header [days]=\"days\" [locale]=\"locale\" [customTemplate]=\"headerTemplate\" (dayClicked)=\"dayClicked.emit($event)\">\n      </novo-agenda-week-header>\n      <div *ngFor=\"let eventRow of eventRows\" #eventRowContainer>\n        <div\n          class=\"cal-event-container\"\n          #event\n          *ngFor=\"let weekEvent of eventRow.row\"\n          [style.width]=\"(100 / days.length) * weekEvent.span + '%'\"\n          [style.marginTop.px]=\"weekEvent.top\"\n          [style.height.px]=\"weekEvent.height\"\n          [style.marginLeft]=\"(100 / days.length) * weekEvent.offset + '%'\"\n        >\n          <novo-agenda-week-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPosition]=\"tooltipPosition\"\n            [customTemplate]=\"eventTemplate\"\n            (eventClicked)=\"eventClicked.emit($event)\"\n          >\n          </novo-agenda-week-event>\n        </div>\n      </div>\n      <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"70\">\n        <novo-agenda-day-hour-segment\n          *ngFor=\"let segment of hour.segments\"\n          [segment]=\"segment\"\n          [locale]=\"locale\"\n          [customTemplate]=\"hourSegmentTemplate\"\n          (click)=\"hourSegmentClicked.emit({ date: segment.date })\"\n        >\n        </novo-agenda-day-hour-segment>\n      </div>\n    </div>\n  `,\n})\nexport class NovoAgendaWeekViewElement implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input()\n  viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   */\n  @Input()\n  events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input()\n  excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input()\n  refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input()\n  locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input()\n  tooltipPosition: string = 'bottom';\n\n  /**\n   * The start number of the week\n   */\n  @Input()\n  weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input()\n  headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input()\n  eventTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input()\n  precision: 'days' | 'minutes' = 'days';\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input()\n  hourSegments: number = 2;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input()\n  dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input()\n  dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input()\n  dayEndMinute: number = 59;\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input()\n  hourSegmentTemplate: TemplateRef<any>;\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n  /**\n   * Called when a header week day is clicked\n   */\n  @Output()\n  dayClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  eventRows: WeekViewEventRow[] = [];\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResize: {\n    originalOffset: number;\n    originalSpan: number;\n    edge: string;\n  };\n\n  /**\n   * @hidden\n   */\n  validateDrag: Function;\n\n  /**\n   * @hidden\n   */\n  validateResize: Function;\n\n  /**\n   * @hidden\n   */\n  constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.detectChanges();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events || changes.viewDate || changes.excludeDays) {\n      this.refreshBody();\n    }\n\n    if (changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute) {\n      this.refreshHourGrid();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /*\n    resizeStarted(weekViewContainer: HTMLElement, weekEvent: WeekViewEvent, resizeEvent: ResizeEvent): void {\n      this.currentResize = {\n        originalOffset: weekEvent.offset,\n        originalSpan: weekEvent.span,\n        edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n      };\n      const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(weekViewContainer, this.getDayColumnWidth(weekViewContainer));\n      this.validateResize = ({rectangle}) => resizeHelper.validateResize({rectangle});\n      this.cdr.detectChanges();\n    }\n\n    resizing(weekEvent: WeekViewEvent, resizeEvent: ResizeEvent, dayWidth: number): void {\n      if (resizeEvent.edges.left) {\n        const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n        weekEvent.offset = this.currentResize.originalOffset + diff;\n        weekEvent.span = this.currentResize.originalSpan - diff;\n      } else if (resizeEvent.edges.right) {\n        const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n        weekEvent.span = this.currentResize.originalSpan + diff;\n      }\n    }\n\n    resizeEnded(weekEvent: WeekViewEvent): void {\n\n      let daysDiff: number;\n      if (this.currentResize.edge === 'left') {\n        daysDiff = weekEvent.offset - this.currentResize.originalOffset;\n      } else {\n        daysDiff = weekEvent.span - this.currentResize.originalSpan;\n      }\n\n      weekEvent.offset = this.currentResize.originalOffset;\n      weekEvent.span = this.currentResize.originalSpan;\n\n      let newStart: Date = weekEvent.event.start;\n      let newEnd: Date = weekEvent.event.end;\n      if (this.currentResize.edge === 'left') {\n        newStart = addDays(newStart, daysDiff);\n      } else if (newEnd) {\n        newEnd = addDays(newEnd, daysDiff);\n      }\n\n      this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n      this.currentResize = null;\n\n    }\n\n    eventDragged(weekEvent: WeekViewEvent, draggedByPx: number, dayWidth: number): void {\n\n      const daysDragged: number = draggedByPx / dayWidth;\n      const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n      let newEnd: Date;\n      if (weekEvent.event.end) {\n        newEnd = addDays(weekEvent.event.end, daysDragged);\n      }\n\n      this.eventTimesChanged.emit({newStart, newEnd, event: weekEvent.event});\n\n    }\n\n    dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n      const dragHelper: CalendarDragHelper = new CalendarDragHelper(weekViewContainer, event);\n      this.validateDrag = ({x, y}) => !this.currentResize && dragHelper.validateDrag({x, y});\n      this.cdr.detectChanges();\n    }\n    */\n\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  private refreshHeader(): void {\n    this.days = getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n    });\n  }\n\n  private refreshBody(): void {\n    this.eventRows = getWeekView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      hourSegments: this.hourSegments,\n      segmentHeight: SEGMENT_HEIGHT,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n      // precision: this.precision\n    });\n  }\n\n  private refreshHourGrid(): void {\n    this.hours = getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute,\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute,\n      },\n    });\n    // if (this.hourSegmentModifier) {\n    //   this.hours.forEach(hour => {\n    //     hour.segments.forEach(segment => this.hourSegmentModifier(segment));\n    //   });\n    // }\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshHourGrid();\n    this.refreshBody();\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoPipesModule } from '../../pipes/Pipes.module';\n// APP\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { NovoAgendaDateChangeElement } from './common/AgendaDateChange';\n// Common Elements\nimport { NovoEventTypeLegendElement } from './common/EventTypeLegend';\nimport { NovoAgendaAllDayEventElement } from './day/AgendaAllDayEvent';\nimport { NovoAgendaDayEventElement } from './day/AgendaDayEvent';\n// Day View\nimport { NovoAgendaDayViewElement } from './day/AgendaDayView';\nimport { NovoAgendaHourSegmentElement } from './day/AgendaHourSegment';\nimport { NovoAgendaMonthDayElement } from './month/AgendaMonthDay';\nimport { NovoAgendaMonthHeaderElement } from './month/AgendaMonthHeader';\n// Month View\nimport { NovoAgendaMonthViewElement } from './month/AgendaMonthView';\nimport { DayOfMonthPipe } from './pipe/DayOfMonth.pipe';\nimport { EndOfWeekDisplayPipe } from './pipe/EndOfWeekDisplayPipe.pipe';\nimport { HoursPipe } from './pipe/Hours.pipe';\nimport { MonthPipe } from './pipe/Month.pipe';\nimport { MonthDayPipe } from './pipe/MonthDay.pipe';\n// Common\nimport { WeekdayPipe } from './pipe/Weekday.pipe';\nimport { YearPipe } from './pipe/Year.pipe';\nimport { NovoAgendaWeekEventElement } from './week/AgendaWeekEvent';\nimport { NovoAgendaWeekHeaderElement } from './week/AgendaWeekHeader';\n// Week View\nimport { NovoAgendaWeekViewElement } from './week/AgendaWeekView';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule, NovoTooltipModule, NovoPipesModule],\n  declarations: [\n    NovoEventTypeLegendElement,\n    NovoAgendaMonthViewElement,\n    NovoAgendaMonthHeaderElement,\n    NovoAgendaMonthDayElement,\n    NovoAgendaWeekViewElement,\n    NovoAgendaWeekHeaderElement,\n    NovoAgendaWeekEventElement,\n    NovoAgendaDayViewElement,\n    NovoAgendaDayEventElement,\n    NovoAgendaHourSegmentElement,\n    NovoAgendaAllDayEventElement,\n    NovoAgendaDateChangeElement,\n    WeekdayPipe,\n    DayOfMonthPipe,\n    MonthPipe,\n    MonthDayPipe,\n    YearPipe,\n    HoursPipe,\n    EndOfWeekDisplayPipe,\n  ],\n  exports: [\n    NovoEventTypeLegendElement,\n    NovoAgendaMonthViewElement,\n    NovoAgendaMonthHeaderElement,\n    NovoAgendaMonthDayElement,\n    NovoAgendaWeekViewElement,\n    NovoAgendaWeekHeaderElement,\n    NovoAgendaWeekEventElement,\n    NovoAgendaDayViewElement,\n    NovoAgendaDayEventElement,\n    NovoAgendaHourSegmentElement,\n    NovoAgendaAllDayEventElement,\n    NovoAgendaDateChangeElement,\n    WeekdayPipe,\n    DayOfMonthPipe,\n    MonthPipe,\n    MonthDayPipe,\n    YearPipe,\n    HoursPipe,\n    EndOfWeekDisplayPipe,\n  ],\n})\nexport class NovoAgendaModule {}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { AsideComponent } from './aside.component';\n\nexport class NovoAsideRef<T = any, R = any> {\n  constructor(public component: any, public params: T, private overlayRef: OverlayRef) {}\n\n  private _beforeClose = new Subject<R>();\n  private _afterClosed = new Subject<R>();\n  isClosed: boolean = false;\n  componentInstance: AsideComponent;\n\n  // Gets a promise that is resolved when the dialog is closed.\n  get onClosed(): Promise<R> {\n    return this._afterClosed.toPromise();\n  }\n\n  afterClosed(): Observable<R> {\n    return this._afterClosed.asObservable();\n  }\n\n  beforeClose(): Observable<R> {\n    return this._beforeClose.asObservable();\n  }\n\n  close(result?: R): void {\n    // Listen for animation 'start' events\n    this.componentInstance.animationStateChanged\n      .pipe(\n        filter((event) => event.phaseName === 'start'),\n        take(1),\n      )\n      .subscribe(() => {\n        this._beforeClose.next(result);\n        this._beforeClose.complete();\n        this.overlayRef.detachBackdrop();\n      });\n\n    // Listen for animation 'done' events\n    this.componentInstance.animationStateChanged\n      .pipe(\n        filter((event) => event.phaseName === 'done' && event.toState === 'leave'),\n        take(1),\n      )\n      .subscribe(() => {\n        this.isClosed = true;\n        this.overlayRef.dispose();\n        this._afterClosed.next(result);\n        this._afterClosed.complete();\n\n        // Make sure to also clear the reference to the\n        // component instance to avoid memory leaks\n        this.componentInstance = null;\n      });\n\n    // Start exit animation\n    this.componentInstance.startExitAnimation();\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nexport const slideInOut = trigger('slideInOut', [\n  state('void', style({ transform: 'translateX(100%)' })),\n  state('enter', style({ transform: 'none' })),\n  state('leave', style({ transform: 'translateX(100%)' })),\n  transition('* => *', animate('800ms cubic-bezier(0.2, 1, 0.3, 1)')),\n]);\n","import { AnimationEvent } from '@angular/animations';\nimport { ComponentPortal, Portal } from '@angular/cdk/portal';\nimport { Component, EventEmitter, Injector, Output } from '@angular/core';\nimport { NovoAsideRef } from './aside-ref';\nimport { slideInOut } from './aside.animation';\n\n@Component({\n  selector: 'novo-aside',\n  templateUrl: './aside.component.html',\n  styleUrls: ['./aside.component.scss'],\n  animations: [slideInOut],\n})\nexport class AsideComponent {\n  @Output() animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  animationState: 'void' | 'enter' | 'leave' = 'enter';\n\n  component: Portal<any>;\n\n  constructor(private injector: Injector, private asideRef: NovoAsideRef) {\n    this.component = new ComponentPortal(asideRef.component, null, injector);\n  }\n\n  onAnimationStart(event: AnimationEvent) {\n    this.animationStateChanged.emit(event);\n  }\n\n  onAnimationDone(event: AnimationEvent) {\n    this.animationStateChanged.emit(event);\n  }\n\n  startExitAnimation() {\n    this.animationState = 'leave';\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, Injector } from '@angular/core';\nimport { NovoAsideRef } from './aside-ref';\nimport { AsideComponent } from './aside.component';\n\ninterface AsideConfig extends OverlayConfig {\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n}\n\nconst DEFAULT_CONFIG: AsideConfig = {\n  hasBackdrop: true,\n  backdropClass: 'aside-overlay-backdrop',\n  panelClass: 'aside-overlay-panel',\n};\n\n@Injectable({ providedIn: 'root' })\nexport class NovoAsideService {\n  constructor(private injector: Injector, private overlay: Overlay) {}\n\n  open<R = any>(component, params = {}, config = {}) {\n    // Override default configuration\n    const asideConfig = this.getOverlayConfig({ ...DEFAULT_CONFIG, ...config });\n\n    // Returns an OverlayRef which is a PortalHost\n    const overlayRef = this.createOverlay(asideConfig);\n\n    // Instantiate remote control\n    const asideRef = new NovoAsideRef<typeof params, R>(component, params, overlayRef);\n\n    const overlayComponent = this.attachAsideContainer(AsideComponent, overlayRef, asideConfig, asideRef);\n\n    // Pass the instance of the overlay component to the remote control\n    asideRef.componentInstance = overlayComponent;\n\n    overlayRef.backdropClick().subscribe(() => asideRef.close());\n\n    return asideRef;\n  }\n\n  private createOverlay(config: AsideConfig) {\n    return this.overlay.create(config);\n  }\n\n  private attachAsideContainer(component, overlayRef: OverlayRef, config: AsideConfig, asideRef: NovoAsideRef) {\n    const injector = this.createInjector(config, asideRef);\n\n    const containerPortal = new ComponentPortal(component, null, injector);\n    const containerRef: ComponentRef<any> = overlayRef.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private createInjector(config: AsideConfig, asideRef: NovoAsideRef): PortalInjector {\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(NovoAsideRef, asideRef);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n  private getOverlayConfig(config: AsideConfig): AsideConfig {\n    // const positionStrategy = this.overlay.position().global().centerHorizontally().centerVertically();\n    const scrollStrategy = config.hasBackdrop ? this.overlay.scrollStrategies.block() : this.overlay.scrollStrategies.noop();\n\n    return {\n      scrollStrategy,\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n    };\n  }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { NgModule } from '@angular/core';\nimport { AsideComponent } from './aside.component';\nimport { NovoAsideService } from './aside.service';\n\n@NgModule({\n  imports: [OverlayModule, PortalModule],\n  declarations: [AsideComponent],\n  providers: [NovoAsideService],\n  entryComponents: [AsideComponent],\n})\nexport class NovoAsideModule {}\n","// NG2\nimport { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'novo-avatar',\n  styleUrls: ['./Avatar.scss'],\n  template: '<img *ngIf=\"src\" [src]=\"src\"/>',\n})\nexport class NovoAvatarElement implements OnInit {\n  @Input() source: any;\n  @Input() label: string;\n  @Input() theme: string;\n  @Input() image: string;\n\n  @Input()\n  size: string = 'medium';\n\n  @Input()\n  shape: string = 'round';\n\n  @Input()\n  color: string;\n\n  @HostBinding('class')\n  get hb_classBinding() {\n    return [`avatar-size-${this.size}`, `avatar-shape-${this.shape}`, `avatar-color-${this.color}`];\n  }\n\n  @HostBinding('style.backgroundImage')\n  get background(): string {\n    if (!this.image && !this.source.profileImage) return;\n    return `url(${this.image || this.source.profileImage})`;\n  }\n\n  src: any;\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  ngOnInit(): any {\n    let src: any;\n    if ((this.source && this.source !== '') || this.label) {\n      if (this.source.profileImage) {\n        // this.src = this.source.profileImage;\n        return;\n      } else if (this.source.logo) {\n        src = this.source.logo;\n      } else {\n        const first: any =\n          this.label || this.source.firstName\n            ? this.source.firstName.charAt(0)\n            : this.source.name\n            ? this.source.name.charAt(0)\n            : this.source.username\n            ? this.source.username.charAt(0)\n            : '';\n        const last: any = this.source.lastName ? this.source.lastName.charAt(0) : '';\n\n        // Defining Colors\n        const colors: any = [\n          '#1abc9c',\n          '#16a085',\n          '#f1c40f',\n          '#f39c12',\n          '#2ecc71',\n          '#27ae60',\n          '#e67e22',\n          '#d35400',\n          '#3498db',\n          '#2980b9',\n          '#e74c3c',\n          '#c0392b',\n          '#9b59b6',\n          '#8e44ad',\n          '#bdc3c7',\n          '#34495e',\n          '#2c3e50',\n          '#95a5a6',\n          '#7f8c8d',\n          '#ec87bf',\n          '#d870ad',\n          '#f69785',\n          '#9ba37e',\n          '#b49255',\n          '#b49255',\n          '#a94136',\n        ];\n        const lighterColors: any = [\n          '#15D6B0',\n          '#16A069',\n          '#F1D60F',\n          '#F3AC12',\n          '#2ED85B',\n          '#28BC7F',\n          '#E66322',\n          '#D3002B',\n          '#6534DB',\n          '#29B2B9',\n          '#E73C63',\n          '#DB6D31',\n          '#CB48B5',\n          '#6944AD',\n          '#38536D',\n          '#3D6473',\n          '#394A6C',\n          '#92BCB7',\n          '#7D99A2',\n          '#F14F76',\n          '#CB5CDA',\n          '#FFB475',\n          '#B9CE6E',\n          '#DDAA4F',\n          '#CD6F45',\n          '#B9354A',\n        ];\n        const settings: any = {\n          // Default settings\n          textColor: '#ffffff',\n          height: 100,\n          width: 100,\n          fontSize: 50,\n          fontWeight: 400,\n          fontFamily: 'HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica, Arial,Lucida Grande, sans-serif',\n        };\n\n        // making the text object\n        const colorIndex: any = Math.floor((first.charCodeAt(0) - 65) % colors.length);\n\n        const cobj: any = document.createElement('text');\n        cobj.setAttribute('text-anchor', 'middle');\n        cobj.setAttribute('x', '50%');\n        cobj.setAttribute('y', '50%');\n        cobj.setAttribute('dy', '0.35em');\n        cobj.setAttribute('pointer-events', 'auto');\n        cobj.setAttribute('fill', settings.textColor);\n        cobj.setAttribute('font-family', settings.fontFamily);\n        cobj.style.fontWeight = settings.fontWeight;\n        cobj.style.fontSize = `${settings.fontSize}px`;\n\n        const ltrs: any = document.createTextNode(this.label || first + last);\n        cobj.appendChild(ltrs);\n\n        const svg: any = document.createElement('svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('pointer-events', 'none');\n        svg.setAttribute('width', settings.width);\n        svg.setAttribute('height', settings.height);\n\n        // this.setPrefixedValue(svg, 'background', colors[colorIndex]);\n        this.setPrefixedValue(svg, 'background', `linear-gradient(-45deg, ${colors[colorIndex]} 0%, ${lighterColors[colorIndex]} 100%)`);\n\n        svg.style.width = `${settings.width}px`;\n        svg.style.height = `${settings.height}px`;\n        svg.appendChild(cobj);\n\n        const top: any = document.createElement('div');\n        top.appendChild(svg);\n\n        const svgHtml: any = window.btoa(unescape(encodeURIComponent(top.innerHTML)));\n        src = `data:image/svg+xml;base64, ${svgHtml}`;\n      }\n      this.src = this.sanitizer.bypassSecurityTrustUrl(src);\n    }\n  }\n\n  setPrefixedValue(elm: any, prop: any, value: any): any {\n    const prefixes: any = ['-moz-', '-webkit-', '-o-', '-ms-', '-khtml-'];\n\n    // Clear\n    elm.style[prop] = '';\n    const starting: any = elm.style[prop];\n\n    // Try raw first\n    try {\n      elm.style[prop] = value;\n      if (elm.style[prop] !== starting) {\n        return;\n      }\n    } catch (e) {\n      // no op\n    }\n\n    // Try prefixes\n    for (let i = 0; i < prefixes.length; ++i) {\n      const v = prefixes[i] + value;\n      try {\n        elm.style[prop] = v;\n        if (elm.style[prop] !== starting) {\n          return;\n        }\n      } catch (e2) {\n        // no op\n      }\n    }\n  }\n\n  private _isValidURL(str: string) {\n    const pattern = new RegExp(\n      '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$',\n      'i',\n    ); // fragment locator\n    return !!pattern.test(str);\n  }\n}\n","// NG2\nimport { AfterViewInit, Component, Input, QueryList, ViewChildren } from '@angular/core';\nimport { NovoAvatarElement } from './Avatar';\n\n@Component({\n  selector: 'novo-avatar-stack',\n  styleUrls: ['./AvatarStack.scss'],\n  template: `\n    <ng-content></ng-content>\n    <novo-avatar *ngIf=\"showTotal\" label=\"+5\"></novo-avatar>\n  `,\n})\nexport class NovoAvatarStackElement implements AfterViewInit {\n  @Input()\n  total: number = 0;\n  @ViewChildren(NovoAvatarElement)\n  viewChildren!: QueryList<NovoAvatarElement>;\n\n  showTotal: boolean = false;\n  remainingCount: number = 0;\n  ngAfterViewInit() {\n    // viewChildren is set\n    if (this.total - this.viewChildren.length > 0) {\n      this.remainingCount = this.total - this.viewChildren.length;\n      this.showTotal = true;\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoAvatarElement } from './Avatar';\nimport { NovoAvatarStackElement } from './AvatarStack';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoAvatarElement, NovoAvatarStackElement],\n  exports: [NovoAvatarElement, NovoAvatarStackElement],\n})\nexport class NovoAvatarModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class BreadcrumbService {\n  constructor(private router: Router) {}\n  navigateTo($event, item) {\n    if ($event.button !== 0 || $event.ctrlKey || $event.metaKey || $event.shiftKey) {\n      return;\n    }\n    if (typeof item.target === 'string' && item.target !== '_self') {\n      return;\n    }\n    $event.preventDefault();\n    this.router.navigateByUrl(item.link);\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { BreadcrumbService } from './Breadcrumb.service';\nimport { SourceConfig } from './Breadcrumb.types';\n\n@Component({\n  selector: 'novo-breadcrumb',\n  templateUrl: './Breadcrumb.html',\n  styleUrls: ['./Breadcrumb.scss'],\n})\nexport class BreadcrumbElement {\n  @Input() separatorIcon: TemplateRef<any>;\n  @Input() source: Array<SourceConfig> = [];\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  navigateTo($event, item) {\n    this.breadcrumbService.navigateTo($event, item);\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { BreadcrumbElement } from '../Breadcrumb';\nimport { BreadcrumbService } from '../Breadcrumb.service';\nimport { MenuConfig } from '../Breadcrumb.types';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'novo-breadcrumb-item',\n  templateUrl: './BreadcrumbItem.html',\n  styleUrls: ['./BreadcrumbItem.scss'],\n})\nexport class BreadcrumbItemElement implements OnInit {\n  @Input() showMenu = false;\n  @Input() customMenuTemplate: TemplateRef<any>;\n  @Input() menuList: Array<MenuConfig>;\n  @Input() isSearch = false;\n  @Output() toggleEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  menuListDisplay: Array<MenuConfig>;\n  isOpen: boolean;\n\n  constructor(public breadcrumbComponent: BreadcrumbElement, private breadcrumbService: BreadcrumbService) {}\n  ngOnInit(): void {\n    this.menuListDisplay = this.menuList;\n  }\n  onToggle($event) {\n    this.isOpen = $event;\n    this.toggleEvent.emit($event);\n  }\n  searchEvent($event) {\n    if (this.menuList) {\n      this.menuListDisplay = this.menuList.filter((item) => item.name.toLowerCase().includes($event.toLowerCase()));\n    }\n  }\n  navigateTo($event, item) {\n    this.breadcrumbService.navigateTo($event, item);\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport class NovoThemeOptions {\n  themeName: string;\n}\nexport interface ThemeChangeEvent {\n  themeName: string;\n  options?: NovoThemeOptions;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NovoTheme {\n  private _defaultTheme: NovoThemeOptions = { themeName: 'modern-light' };\n  private _currentTheme: NovoThemeOptions;\n\n  onThemeChange: EventEmitter<ThemeChangeEvent> = new EventEmitter<ThemeChangeEvent>();\n\n  /** Name of the theme being used. defaults to `modern-light` */\n  get themeName() {\n    return this._currentTheme?.themeName || this._defaultTheme.themeName;\n  }\n  set themeName(value: string) {\n    this._currentTheme = { themeName: value };\n    this.changeTheme(this._currentTheme);\n  }\n\n  public use(options: NovoThemeOptions): Observable<any> {\n    // future: don't change the theme if the theme given is already selected\n    this.changeTheme(options);\n    // this might become async in future\n    return of(options);\n  }\n\n  /**\n   * Changes the current theme\n   */\n  private changeTheme(theme: NovoThemeOptions): void {\n    this._currentTheme = theme;\n    this.onThemeChange.emit({ themeName: theme.themeName, options: theme });\n  }\n}\n\n/* FUTURE THOUGHTS */\n/**\n getComputedStyle(document.documentElement)\n    .getPropertyValue('--my-variable-name'); // #999999\n \n document.documentElement.style\n    .setProperty('--my-variable-name', 'pink');\n*/\n","// tslint:disable: directive-selector\nimport { ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoTheme, ThemeChangeEvent } from '../theme/theme-options';\n\n@Directive({\n  selector: '[accent]',\n})\nexport class AccentColorDirective {\n  private subscription: Subscription;\n\n  @Input() accent: string;\n\n  @HostBinding('class')\n  get hb_textColor() {\n    // Support legacy classic theme... for now\n    if (this.theme.themeName === 'classic') {\n      return `novo-theme-${this.accent}`;\n    }\n    return `novo-accent-${this.accent}`;\n  }\n\n  constructor(private el: ElementRef, private theme: NovoTheme, protected cdr: ChangeDetectorRef) {\n    this.subscription = this.theme.onThemeChange.subscribe((event: ThemeChangeEvent) => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  onDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","// tslint:disable: directive-selector\nimport { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[bg]',\n})\nexport class BackgroundColorDirective {\n  @Input() bg: string;\n\n  @HostBinding('class')\n  get hb_bgColor() {\n    return isValidColor(this.bg) ? 'novo-background-custom' : `novo-background-${this.bg}`;\n  }\n  @HostBinding('style.background-color')\n  get hb_bgStyle() {\n    return isValidColor(this.bg) ? this.bg : null;\n  }\n\n  constructor(private el: ElementRef) {}\n}\n\nfunction isValidColor(color: string) {\n  return color.startsWith('#') || color.startsWith('rgb');\n}\n","// tslint:disable: directive-selector\nimport { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n@Directive({\n  selector: '[border], [bb], [borderBottom], [bt], [borderTop], [bl], [borderLeft], [br], [borderRight], [bx], [borderX], [by], [borderY]',\n})\nexport class BorderDirective {\n  @Input() borderStyle = 'solid';\n  @Input() borderColor = '#eaecef';\n  @Input() borderWidth = 1;\n\n  @Input() border: string;\n  @Input() borderLeft: string;\n  @Input() bl: string;\n  @Input() borderRight: string;\n  @Input() br: string;\n  @Input() borderTop: string;\n  @Input() bt: string;\n  @Input() borderBottom: string;\n  @Input() bb: string;\n  @Input() borderX: string;\n  @Input() bx: string;\n  @Input() borderY: string;\n  @Input() by: string;\n\n  // @HostBinding('style.borderStyle') get getBorderStyle() {\n  //   return this.border;\n  // }\n\n  // @HostBinding('style.borderWidth') get getBorderWidth() {\n  //   return this.width;\n  // }\n\n  // @HostBinding('style.borderColor') get getBorderColor() {\n  //   return this.borderColor;\n  // }\n\n  @HostBinding('class') get hb_border() {\n    return `border-${this.border}`;\n  }\n  @HostBinding('style.border-left') get hb_border_left() {\n    return this.borderLeft || this.bl || this.bx || this.borderX;\n  }\n  @HostBinding('style.border-right') get hb_border_right() {\n    return this.borderRight || this.bt || this.bx || this.borderX;\n  }\n  @HostBinding('style.border-top') get hb_border_top() {\n    return this.borderTop || this.bt || this.by || this.borderY;\n  }\n  @HostBinding('style.border-bottom') get hb_border_bottom() {\n    return this.borderBottom || this.bt || this.by || this.borderY;\n  }\n\n  constructor(private el: ElementRef) {}\n}\n","// tslint:disable: directive-selector\nimport { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[txc]',\n})\nexport class TextColorDirective {\n  @Input() txc: string;\n\n  @HostBinding('class')\n  get hb_textColor() {\n    return isValidColor(this.txc) ? 'novo-text-custom' : `novo-text-${this.txc}`;\n  }\n  @HostBinding('style.color')\n  get hb_textStyle() {\n    return isValidColor(this.txc) ? this.txc : null;\n  }\n\n  constructor(private el: ElementRef) {}\n}\n\nfunction isValidColor(color: string) {\n  return color.startsWith('#') || color.startsWith('rgb');\n}\n","// tslint:disable: directive-selector\nimport { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[fill]',\n})\nexport class FillColorDirective {\n  @Input() fill: string;\n\n  @HostBinding('class')\n  get hb_textColor() {\n    return `novo-fill-${this.fill}`;\n  }\n\n  constructor(private el: ElementRef) {}\n}\n","import { Directive, ElementRef, HostBinding, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[flex]',\n})\nexport class FlexDirective {\n  // @HostBinding('style.align-items')\n  // @Input()\n  // align: string = 'center';\n\n  // @HostBinding('style.justify-content')\n  // @Input()\n  // justify: string = 'flex-start';\n\n  // @HostBinding('style.flex-flow')\n  // @Input()\n  // flow: string = 'row nowrap';\n\n  private _flex: string;\n\n  @HostBinding('style.flex')\n  @Input()\n  public get flex(): string {\n    return this._flex;\n  }\n\n  public set flex(value: string) {\n    if (!value) {\n      this._flex = '1 1 auto';\n    } else {\n      this._flex = value;\n    }\n  }\n\n  constructor(private readonly el: ElementRef, private readonly renderer: Renderer2) {\n    // this.renderer.setStyle(this.el.nativeElement, 'display', 'flex');\n  }\n}\n","// tslint:disable: directive-selector\nimport { Directive, HostBinding, Input } from '@angular/core';\nimport * as tokens from 'novo-design-tokens';\n/*\nProp\tCSS Property\tTheme Field\nm, margin\tmargin\tspace\nmt, marginTop\tmargin-top\tspace\nmr, marginRight\tmargin-right\tspace\nmb, marginBottom\tmargin-bottom\tspace\nml, marginLeft\tmargin-left\tspace\nmx\tmargin-left and margin-right\tspace\nmy\tmargin-top and margin-bottom\tspace\np, padding\tpadding\tspace\npt, paddingTop\tpadding-top\tspace\npr, paddingRight\tpadding-right\tspace\npb, paddingBottom\tpadding-bottom\tspace\npl, paddingLeft\tpadding-left\tspace\npx\tpadding-left and padding-right\tspace\npy\tpadding-top and padding-bottom\tspace\n*/\n\n/*\n// Selectors generated with the following code\nconst directions = ['Top', 'Right', 'Bottom', 'Left', 'X', 'Y'];\nconst abbrDirections = directions.map((d) => d.slice(0, 1).toLowerCase());\nconst marginAttrs = [\n  '[m]',\n  '[margin]',\n  ...directions.map((dir) => `[margin${dir}]`),\n  ...abbrDirections.map((dir) => `[m${dir}]`),\n];\nconst paddingAttrs = [\n  '[p]',\n  '[padding]',\n  ...directions.map((dir) => `[padding${dir}]`),\n  ...abbrDirections.map((dir) => `[p${dir}]`),\n];\n\nconst selectors = [...marginAttrs, ...paddingAttrs];\n*/\n\nexport const getSpacingToken = (value: string) => {\n  if (Object.keys(tokens.spacing).includes(value)) {\n    return tokens.spacing[value];\n  }\n  // TODO: Maybe Validate Value ie.(rem, px)\n  return value;\n};\n\n@Directive({\n  // tslint:disable-next-line: max-line-length\n  selector: '[m],[margin],[marginTop],[marginRight],[marginBottom],[marginLeft],[marginX],[marginY],[mt],[mr],[mb],[ml],[mx],[my]',\n})\nexport class MarginDirective {\n  // Margin\n  @Input() margin: string;\n  @Input() m: string;\n  @Input() marginLeft: string;\n  @Input() ml: string;\n  @Input() marginRight: string;\n  @Input() mr: string;\n  @Input() marginTop: string;\n  @Input() mt: string;\n  @Input() marginBottom: string;\n  @Input() mb: string;\n  @Input() marginX: string;\n  @Input() mx: string;\n  @Input() marginY: string;\n  @Input() my: string;\n\n  // @HostBinding('style.margin') get hb_margin() {\n  //   return getSpacingToken(this.margin || this.m);\n  // }\n  @HostBinding('class') get hb_margin() {\n    return `margin-${this.margin || this.m}`;\n  }\n\n  @HostBinding('style.margin-left') get hb_margin_left() {\n    return getSpacingToken(this.marginLeft || this.ml || this.mx || this.marginX);\n  }\n  @HostBinding('style.margin-right') get hb_margin_right() {\n    return getSpacingToken(this.marginRight || this.mr || this.mx || this.marginX);\n  }\n  @HostBinding('style.margin-top') get hb_margin_top() {\n    return getSpacingToken(this.marginTop || this.mt || this.my || this.marginY);\n  }\n  @HostBinding('style.margin-bottom') get hb_margin_bottom() {\n    return getSpacingToken(this.marginBottom || this.mb || this.my || this.marginY);\n  }\n}\n\n@Directive({\n  // tslint:disable-next-line: max-line-length\n  selector: '[p],[padding],[paddingTop],[paddingRight],[paddingBottom],[paddingLeft],[paddingX],[paddingY],[pt],[pr],[pb],[pl],[px],[py]',\n})\nexport class PaddingDirective {\n  // Padding\n  @Input() padding: string;\n  @Input() p: string;\n  @Input() paddingLeft: string;\n  @Input() pl: string;\n  @Input() paddingRight: string;\n  @Input() pr: string;\n  @Input() paddingTop: string;\n  @Input() pt: string;\n  @Input() paddingBottom: string;\n  @Input() pb: string;\n  @Input() paddingX: string;\n  @Input() px: string;\n  @Input() paddingY: string;\n  @Input() py: string;\n\n  @HostBinding('class') get hb_padding() {\n    return `padding-${this.padding || this.p}`;\n  }\n  // @HostBinding('class') get hb_padding() {\n  //   return `padding-${this.padding || this.p}`;\n  // }\n\n  @HostBinding('style.padding-left') get hb_padding_left() {\n    return getSpacingToken(this.paddingLeft || this.pl || this.px || this.paddingX);\n  }\n  @HostBinding('style.padding-right') get hb_padding_right() {\n    return getSpacingToken(this.paddingRight || this.pr || this.px || this.paddingX);\n  }\n  @HostBinding('style.padding-top') get hb_padding_top() {\n    return getSpacingToken(this.paddingTop || this.pt || this.py || this.paddingY);\n  }\n  @HostBinding('style.padding-bottom') get hb_padding_bottom() {\n    return getSpacingToken(this.paddingBottom || this.pb || this.py || this.paddingY);\n  }\n}\n\n@Directive({\n  selector: '[gap]',\n})\nexport class GapDirective {\n  @Input() gap: string;\n\n  @HostBinding('style.gap')\n  get hb_gap() {\n    return getSpacingToken(this.gap);\n  }\n}\n","// tslint:disable: directive-selector\nimport { Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[theme]',\n})\nexport class ThemeColorDirective {\n  @Input() theme: string;\n\n  @HostBinding('class')\n  get hb_textColor() {\n    return `novo-theme-${this.theme}`;\n  }\n\n  constructor(private el: ElementRef) {}\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[novoTemplate]',\n})\nexport class NovoTemplate {\n  @Input() type: string;\n  @Input('novoTemplate') name: string;\n\n  constructor(public template: TemplateRef<any>) {}\n\n  getType(): string {\n    return this.name;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject, Input, Optional, ViewEncapsulation } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type NovoPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\nexport type NovoPseudoCheckboxShape = 'box' | 'circle' | 'line';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `novo-primary .novo-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<novo-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'novo-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.component.scss'],\n  template: ` <i\n    [class.bhi-checkbox-empty]=\"state === 'unchecked' && shape === 'box'\"\n    [class.bhi-checkbox-filled]=\"state === 'checked' && shape === 'box'\"\n    [class.bhi-checkbox-indeterminate]=\"state === 'indeterminate' && shape === 'box'\"\n    [class.bhi-circle-o]=\"state === 'unchecked' && shape === 'circle'\"\n    [class.bhi-check-circle-filled]=\"state === 'checked' && shape === 'circle'\"\n    [class.bhi-circle]=\"state === 'indeterminate' && shape === 'circle'\"\n    [class.bhi-box-empty]=\"state === 'unchecked' && shape === 'line'\"\n    [class.bhi-check]=\"state === 'checked' && shape === 'line'\"\n    [class.bhi-box-minus-o]=\"state === 'indeterminate' && shape === 'line'\"\n  ></i>`,\n  host: {\n    class: 'novo-pseudo-checkbox',\n    '[class.novo-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.novo-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.novo-pseudo-checkbox-disabled]': 'disabled',\n    '[class._novo-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class NovoPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: NovoPseudoCheckboxState = 'unchecked';\n  /** Display state of the checkbox. */\n  @Input() shape: NovoPseudoCheckboxShape = 'box';\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n","import { NgModule } from '@angular/core';\nimport { NovoPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox.component';\n// import {NovoCommonModule} from '../common-behaviors/common-module';\n\n@NgModule({\n  imports: [],\n  exports: [NovoPseudoCheckbox],\n  declarations: [NovoPseudoCheckbox],\n})\nexport class NovoPseudoCheckboxModule {}\n\nexport * from './pseudo-checkbox/pseudo-checkbox.component';\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Constructor } from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    protected _disabled: boolean = false;\n\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value: any) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface NovoOptionParentComponent {\n  multiple?: boolean;\n  inertGroups?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const NOVO_OPTION_PARENT_COMPONENT = new InjectionToken<NovoOptionParentComponent>('NOVO_OPTION_PARENT_COMPONENT');\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, Directive, Inject, InjectionToken, Optional, ViewEncapsulation } from '@angular/core';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '../mixins/disabled.mixin';\nimport { NovoOptionParentComponent, NOVO_OPTION_PARENT_COMPONENT } from './option-parent';\n\n// Notes on the accessibility pattern used for `novo-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `novo-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<novo-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<novo-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n\n// Boilerplate for applying mixins to NovoOptgroup.\n@Directive()\nexport class NovoOptgroupBase implements CanDisable {\n  disabled: boolean;\n\n  /** Label for the option group. */\n  label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `novo-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n\n  /** Whether the group is in inert a11y mode. */\n  _inert: boolean;\n}\nexport const NovoOptgroupMixinBase: CanDisableCtor & typeof NovoOptgroupBase = mixinDisabled(NovoOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Injection token that can be used to reference instances of `NovoOptgroup`. It serves as\n * alternative token to the actual `NovoOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nexport const NOVO_OPTGROUP = new InjectionToken<NovoOptgroup>('NovoOptgroup');\n\n/**\n * Component that is used to group instances of `novo-option`.\n */\n@Component({\n  selector: 'novo-optgroup',\n  exportAs: 'novoOptgroup',\n  templateUrl: 'optgroup.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled', 'label'],\n  styleUrls: ['optgroup.component.scss'],\n  host: {\n    class: 'novo-optgroup',\n    '[attr.role]': '_inert ? null : \"group\"',\n    '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n    '[attr.aria-labelledby]': '_inert ? null : _labelId',\n    '[class.novo-optgroup-disabled]': 'disabled',\n  },\n  providers: [{ provide: NOVO_OPTGROUP, useExisting: NovoOptgroup }],\n})\nexport class NovoOptgroup extends NovoOptgroupMixinBase {\n  constructor(@Inject(NOVO_OPTION_PARENT_COMPONENT) @Optional() parent?: NovoOptionParentComponent) {\n    super();\n    this._inert = parent?.inertGroups ?? false;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import { FocusableOption, FocusOptions, FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { BooleanInput, Key } from '../../../utils';\nimport { NovoOptgroup, NovoOptgroupBase, NOVO_OPTGROUP } from './optgroup.component';\nimport { NovoOptionParentComponent, NOVO_OPTION_PARENT_COMPONENT } from './option-parent';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by NovoOption when selected or deselected. */\nexport class NovoOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: NovoOptionBase,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false,\n  ) {}\n}\n\n@Directive()\nexport class NovoOptionBase implements FocusableOption, AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n  private _clickCapture: Subscription;\n  private _clickPassive: Subscription;\n\n  /** TODO: deprecate maybe, check support for table headers */\n  @BooleanInput()\n  @Input()\n  keepOpen: boolean = false;\n\n  @BooleanInput()\n  @Input()\n  inert: boolean = false;\n\n  /** If there is no parent then nothing is managing the selection. */\n  get selectable() {\n    return this._parent;\n  }\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `novo-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() {\n    return (this.group && this.group.disabled) || this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  @Input()\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: any) {\n    this._selected = coerceBooleanProperty(value);\n  }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<NovoOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(NOVO_OPTION_PARENT_COMPONENT) private _parent: NovoOptionParentComponent,\n    @Optional() @Inject(NOVO_OPTGROUP) readonly group: NovoOptgroupBase,\n  ) {\n    // (click) is overridden when defined by user.\n    this._clickCapture = fromEvent<MouseEvent>(this._element.nativeElement, 'click', { capture: true }).subscribe((evt: MouseEvent) => {\n      this._handleDisabledClick(evt);\n    });\n    this._clickPassive = fromEvent<MouseEvent>(this._element.nativeElement, 'click').subscribe((evt: MouseEvent) => {\n      setTimeout(() => this._handlePassiveClick(evt));\n    });\n  }\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(_origin?: FocusOrigin, options?: FocusOptions): void {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `NovoOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  _handleDisabledClick(event: MouseEvent) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n    }\n  }\n  _handlePassiveClick(event: MouseEvent) {\n    if (!this.inert) {\n      this._selectViaInteraction();\n    }\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.target instanceof HTMLInputElement && event.key === Key.Enter) {\n      this._emitSelectionChangeEvent(!this.keepOpen);\n    } else if (\n      !(event.target instanceof HTMLInputElement) &&\n      (event.key === Key.Enter || event.key === Key.Space) &&\n      !hasModifierKey(event)\n    ) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(!this.keepOpen);\n    }\n  }\n\n  /**\n   * Force a click event\n   */\n  _clickViaInteraction(): void {\n    if (!this.disabled) {\n      this._element.nativeElement.click();\n    }\n  }\n\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected(): boolean | null {\n    return this.selected || (this.multiple ? false : null);\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `novo-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._clickCapture.unsubscribe();\n    this._clickPassive.unsubscribe();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new NovoOptionSelectionChange(this, isUserInput));\n  }\n}\n\n/**\n * Single option inside of a `<novo-select>` element.\n */\n@Component({\n  selector: 'novo-option',\n  exportAs: 'novoOption',\n  host: {\n    role: 'option',\n    '[id]': 'id',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-selected]': '_getAriaSelected()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.novo-active]': 'active',\n    '[class.novo-selected]': 'selectable && selected',\n    '[class.novo-option-multiple]': 'multiple',\n    '[class.novo-option-disabled]': 'disabled',\n    '[class.novo-option-inert]': 'inert',\n    '(keydown)': '_handleKeydown($event)',\n    class: 'novo-option novo-focus-indicator',\n  },\n  inputs: ['selected', 'keepOpen', 'inert', 'value', 'inert', 'disabled'],\n  styleUrls: ['option.component.scss'],\n  templateUrl: 'option.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoOption extends NovoOptionBase {\n  constructor(\n    element: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(NOVO_OPTION_PARENT_COMPONENT) parent: NovoOptionParentComponent,\n    @Optional() @Inject(NOVO_OPTGROUP) group: NovoOptgroup,\n  ) {\n    super(element, changeDetectorRef, parent, group);\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n  optionIndex: number,\n  options: QueryList<NovoOption>,\n  optionGroups: QueryList<NovoOptgroup>,\n): number {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n  optionOffset: number,\n  optionHeight: number,\n  currentScrollPosition: number,\n  panelHeight: number,\n): number {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoPseudoCheckboxModule } from '../selection/index';\nimport { NovoOptgroup } from './optgroup.component';\nimport { NovoOption } from './option.component';\n\n@NgModule({\n  imports: [CommonModule, NovoPseudoCheckboxModule],\n  exports: [NovoOption, NovoOptgroup],\n  declarations: [NovoOption, NovoOptgroup],\n})\nexport class NovoOptionModule {}\n\nexport * from './optgroup.component';\nexport * from './option-parent';\nexport * from './option.component';\n","import { Directive, ElementRef, HostBinding, Input } from '@angular/core';\nimport { BooleanInput } from '../../../../utils';\nimport { TypographyLength, TypographySize, TypographyWeight } from '../text.types';\n\n@Directive()\nexport class NovoBaseTextElement {\n  @Input()\n  size: TypographySize;\n  @Input()\n  weight: TypographyWeight;\n  @Input()\n  lineLength: TypographyLength;\n  @Input()\n  color: string;\n\n  @HostBinding('class')\n  get hb_classBinding(): string {\n    return [\n      this.color ? `text-color-${this.color}` : null,\n      this.lineLength ? `text-length-${this.lineLength}` : null,\n      this.size ? `text-size-${this.size}` : null,\n      this.weight ? `text-weight-${this.weight}` : null,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  @HostBinding('class.text-disabled')\n  @Input()\n  @BooleanInput()\n  disabled: boolean;\n\n  @HostBinding('class.text-color-empty')\n  @Input()\n  @BooleanInput()\n  muted: boolean;\n\n  @HostBinding('class.text-color-negative')\n  @Input()\n  @BooleanInput()\n  error: boolean;\n\n  @HostBinding('class.margin-before')\n  @Input()\n  @BooleanInput()\n  marginBefore: boolean;\n\n  @HostBinding('class.margin-after')\n  @Input()\n  @BooleanInput()\n  marginAfter: boolean;\n\n  @HostBinding('class.text-nowrap')\n  @Input()\n  @BooleanInput()\n  nowrap: boolean;\n\n  @HostBinding('class.text-size-smaller')\n  @Input()\n  @BooleanInput()\n  smaller: boolean;\n\n  @HostBinding('class.text-size-larger')\n  @Input()\n  @BooleanInput()\n  larger: boolean;\n\n  @HostBinding('class.text-weight-thin')\n  @Input()\n  @BooleanInput()\n  thin: boolean;\n\n  @HostBinding('class.text-weight-lighter')\n  @Input()\n  @BooleanInput()\n  lighter: boolean;\n\n  @HostBinding('class.text-weight-light')\n  @Input()\n  @BooleanInput()\n  light: boolean;\n\n  @HostBinding('class.text-weight-medium')\n  @Input()\n  @BooleanInput()\n  medium: boolean;\n\n  @HostBinding('class.text-weight-bold')\n  @Input()\n  @BooleanInput()\n  bold: boolean;\n\n  @HostBinding('class.text-weight-bolder')\n  @Input()\n  @BooleanInput()\n  bolder: boolean;\n\n  @HostBinding('class.text-weight-extrabold')\n  @Input()\n  @BooleanInput()\n  extrabold: boolean;\n\n  constructor(protected element: ElementRef) {}\n\n  get nativeElement() {\n    return this.element.nativeElement;\n  }\n}\n","// NG2\nimport { Component } from '@angular/core';\nimport { NovoBaseTextElement } from '../base/base-text.component';\n\n/**\n * Tag Example\n * <novo-title size=\"sm\" disabled>Label</novo-title\n * <novo-title small disabled>Label</novo-title>\n * <novo-title large disabled>Label</novo-title>\n * <novo-title error>Label</novo-title>\n * <novo-title muted>Label</novo-title>\n * <novo-title class=\"tc-grapefruit\">Label</novo-title>\n * <novo-title color=\"grapefruit\">Label</novo-title>\n */\n\n@Component({\n  selector: 'novo-caption,[novo-caption]',\n  template: ` <ng-content></ng-content> `,\n  styleUrls: ['./caption.scss'],\n  host: {\n    class: 'novo-caption',\n  },\n})\nexport class NovoCaption extends NovoBaseTextElement {}\n","// NG2\nimport { Component } from '@angular/core';\nimport { NovoBaseTextElement } from '../base/base-text.component';\n\n/**\n * Tag Example\n * <novo-label size=\"sm\" disabled>Label</novo-label\n * <novo-label small disabled>Label</novo-label>\n * <novo-label large disabled>Label</novo-label>\n * <novo-label error>Label</novo-label>\n * <novo-label muted>Label</novo-label>\n * <novo-label class=\"tc-grapefruit\">Label</novo-label>\n * <novo-label color=\"grapefruit\">Label</novo-label>\n */\n\n@Component({\n  selector: 'novo-label,[novo-label]',\n  template: ` <ng-content></ng-content> `,\n  styleUrls: ['./label.scss'],\n  host: {\n    class: 'novo-label',\n  },\n})\nexport class NovoLabel extends NovoBaseTextElement {}\n","// NG2\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { NovoBaseTextElement } from '../base/base-text.component';\n\n/**\n * Tag Example\n * <novo-text size=\"small\" disabled>Label</novo-text\n * <novo-text small disabled>Label</novo-text>\n * <novo-text large disabled>Label</novo-text>\n * <novo-text error>Label</novo-text>\n * <novo-text muted>Label</novo-text>\n * <novo-text class=\"tc-grapefruit\">Label</novo-text>\n * <novo-text color=\"grapefruit\">Label</novo-text>\n */\n\n@Component({\n  selector: 'novo-link',\n  template: `<a [attr.href]=\"href\"><ng-content></ng-content></a>`,\n  styleUrls: ['./link.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'novo-link',\n  },\n})\nexport class NovoLink extends NovoBaseTextElement {\n  @Input()\n  href: string;\n}\n","// NG2\nimport { Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\nimport { BooleanInput } from '../../../../utils';\nimport { NovoBaseTextElement } from '../base/base-text.component';\n\n/**\n * Tag Example\n * <novo-text size=\"small\" disabled>Label</novo-text\n * <novo-text small disabled>Label</novo-text>\n * <novo-text large disabled>Label</novo-text>\n * <novo-text error>Label</novo-text>\n * <novo-text muted>Label</novo-text>\n * <novo-text class=\"tc-grapefruit\">Label</novo-text>\n * <novo-text color=\"grapefruit\">Label</novo-text>\n */\n\n@Component({\n  selector: 'novo-text,[novo-text]',\n  template: ` <ng-content></ng-content> `,\n  styleUrls: ['./text.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'novo-text',\n  },\n})\nexport class NovoText extends NovoBaseTextElement {\n  @HostBinding('class.text-block')\n  @Input()\n  @BooleanInput()\n  block: boolean;\n}\n","// NG2\nimport { Component } from '@angular/core';\nimport { TypographyWeight } from '..';\nimport { NovoBaseTextElement } from '../base/base-text.component';\n\n/**\n * Tag Example\n * <novo-title size=\"sm\" disabled>Label</novo-title\n * <novo-title small disabled>Label</novo-title>\n * <novo-title large disabled>Label</novo-title>\n * <novo-title error>Label</novo-title>\n * <novo-title muted>Label</novo-title>\n * <novo-title class=\"tc-grapefruit\">Label</novo-title>\n * <novo-title color=\"grapefruit\">Label</novo-title>\n */\n\n@Component({\n  selector: 'novo-title,[novo-title]',\n  template: ` <ng-content></ng-content> `,\n  styleUrls: ['./title.scss'],\n  host: {\n    class: 'novo-title',\n  },\n})\nexport class NovoTitle extends NovoBaseTextElement {\n  weight: TypographyWeight = 'medium';\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AccentColorDirective } from './directives/accent.directive';\nimport { BackgroundColorDirective } from './directives/bg.directive';\nimport { BorderDirective } from './directives/border.directive';\nimport { TextColorDirective } from './directives/color.directive';\nimport { FillColorDirective } from './directives/fill.directive';\nimport { FlexDirective } from './directives/flex.directive';\nimport { GapDirective, MarginDirective, PaddingDirective } from './directives/space.directive';\nimport { ThemeColorDirective } from './directives/theme.directive';\nimport { NovoTemplate } from './novo-template/novo-template.directive';\nimport { NovoOptionModule } from './option';\nimport { NovoCaption } from './typography/caption/caption.component';\nimport { NovoLabel } from './typography/label/label.component';\nimport { NovoLink } from './typography/link/link.component';\nimport { NovoText } from './typography/text/text.component';\nimport { NovoTitle } from './typography/title/title.component';\n@NgModule({\n  imports: [CommonModule, NovoOptionModule],\n  exports: [\n    NovoTemplate,\n    NovoText,\n    NovoTitle,\n    NovoCaption,\n    NovoLabel,\n    NovoLink,\n    MarginDirective,\n    PaddingDirective,\n    BackgroundColorDirective,\n    TextColorDirective,\n    BorderDirective,\n    GapDirective,\n    AccentColorDirective,\n    FillColorDirective,\n    FlexDirective,\n    ThemeColorDirective,\n  ],\n  declarations: [\n    NovoTemplate,\n    NovoText,\n    NovoTitle,\n    NovoCaption,\n    NovoLabel,\n    NovoLink,\n    MarginDirective,\n    PaddingDirective,\n    BackgroundColorDirective,\n    TextColorDirective,\n    BorderDirective,\n    GapDirective,\n    AccentColorDirective,\n    FillColorDirective,\n    FlexDirective,\n    ThemeColorDirective,\n  ],\n})\nexport class NovoCommonModule {}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","import { Constructor } from './constructor';\nimport { HasElementRef } from './types';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n\n  /** Default color to fall back to if no value is set. */\n  defaultColor: ThemePalette | undefined;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n    defaultColor = defaultColor;\n\n    get color(): ThemePalette {\n      return this._color;\n    }\n    set color(value: ThemePalette) {\n      const colorPalette = value || this.defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`novo-color-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`novo-color-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { ErrorStateMatcher } from '../error/error-options';\nimport { Constructor } from './constructor';\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState(): void;\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? (this.ngControl.control as FormControl) : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","import { NovoOverlayTemplateComponent } from '../overlay';\nimport { AbstractConstructor, Constructor } from './constructor';\nimport { CanDisable } from './disabled.mixin';\n\n/** @docs-private */\nexport interface HasOverlay {\n  overlay: NovoOverlayTemplateComponent;\n  readonly panelOpen: boolean;\n\n  openPanel(): void;\n  closePanel(): void;\n  togglePanel(): void;\n}\n\n/** @docs-private */\nexport type HasOverlayCtor = Constructor<HasOverlay>;\n\n/** Mixin to augment a directive with a `overlay` property. */\nexport function mixinOverlay<T extends AbstractConstructor<CanDisable>>(base: T): HasOverlayCtor & T {\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  abstract class Mixin extends (base as unknown as Constructor<CanDisable>) {\n    abstract overlay: NovoOverlayTemplateComponent;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    openPanel(): void {\n      if (!this.disabled) {\n        this.overlay.openPanel();\n      }\n    }\n\n    closePanel(): void {\n      this.overlay.closePanel();\n    }\n\n    togglePanel(): void {\n      if (this.panelOpen) {\n        this.closePanel();\n      } else {\n        this.openPanel();\n      }\n    }\n\n    get panelOpen(): boolean {\n      return this.overlay && this.overlay.panelOpen;\n    }\n  }\n\n  // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n  return Mixin as unknown as T & Constructor<HasOverlay>;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Constructor } from './constructor';\n\n/** @docs-private */\nexport interface CanRequire {\n  /** Whether the component is required. */\n  required: boolean;\n}\n\n/** @docs-private */\nexport type CanRequireCtor = Constructor<CanRequire>;\n\n/** Mixin to augment a directive with a `required` property. */\nexport function mixinRequired<T extends Constructor<{}>>(base: T): CanRequireCtor & T {\n  return class extends base {\n    private _required: boolean = false;\n\n    get required() {\n      return this._required;\n    }\n    set required(value: any) {\n      this._required = coerceBooleanProperty(value);\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","import { Constructor } from './constructor';\nimport { HasElementRef } from './types';\n\n/** Possible size palette values. */\nexport type ElementSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | 'body' | undefined;\n\n/** @docs-private */\nexport interface CanSize {\n  /** Theme size palette for the component. */\n  size: ElementSize;\n\n  /** Default size to fall back to if no value is set. */\n  defaultSize: ElementSize | undefined;\n}\n\n/** @docs-private */\nexport type CanSizeCtor = Constructor<CanSize>;\n\n/** Mixin to augment a directive with a `size` property. */\nexport function mixinSize<T extends Constructor<HasElementRef>>(base: T, defaultSize?: ElementSize): CanSizeCtor & T {\n  return class extends base {\n    private _size: ElementSize;\n    defaultSize = defaultSize;\n\n    get size(): ElementSize {\n      return this._size;\n    }\n    set size(value: ElementSize) {\n      const size = value || this.defaultSize;\n      if (size !== this._size) {\n        if (this._size) {\n          this._elementRef.nativeElement.classList.remove(`novo-size-${this._size}`);\n        }\n        if (size) {\n          this._elementRef.nativeElement.classList.add(`novo-size-${size}`);\n        }\n\n        this._size = size;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n      // Set the default size that can be specified from the mixin.\n      this.size = defaultSize;\n    }\n  };\n}\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { AbstractConstructor, Constructor } from './constructor';\nimport { CanDisable } from './disabled.mixin';\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n\n  /** Tabindex to which to fall back to if no value is set. */\n  defaultTabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends AbstractConstructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  abstract class Mixin extends (base as unknown as Constructor<CanDisable>) {\n    private _tabIndex: number = defaultTabIndex;\n    defaultTabIndex = defaultTabIndex;\n\n    get tabIndex(): number {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  }\n\n  // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n  return Mixin as unknown as T & Constructor<HasTabIndex>;\n}\n","// Angular\nimport {\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n// Vendor\nimport { fromEvent, merge, Observable, of as observableOf, Subscription } from 'rxjs';\nimport { filter, first, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'novo-overlay-template',\n  template: `\n    <ng-template>\n      <div class=\"novo-overlay-panel\" role=\"listbox\" [id]=\"id\" #panel><ng-content></ng-content></div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoOverlayTemplateComponent implements OnDestroy {\n  public id: string = `novo-overlay-${Date.now()}`;\n\n  @ViewChild(TemplateRef)\n  public template: TemplateRef<any>;\n  @ViewChild('panel')\n  public panel: ElementRef;\n\n  @Input()\n  public position:\n    | 'default'\n    | 'right'\n    | 'above-below'\n    | 'right-above-below'\n    | 'center'\n    | 'bottom'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'top-left'\n    | 'top-right' = 'default';\n  @Input()\n  public scrollStrategy: 'reposition' | 'block' | 'close' = 'reposition';\n  @Input()\n  public width: number;\n  @Input()\n  public height: number;\n  @Input()\n  public closeOnSelect: boolean = true;\n\n  @Output()\n  public select: EventEmitter<any> = new EventEmitter();\n  @Output()\n  public opening: EventEmitter<any> = new EventEmitter();\n  @Output()\n  public closing: EventEmitter<any> = new EventEmitter();\n\n  public overlayRef: OverlayRef | null;\n  public portal: TemplatePortal<any>;\n\n  // The subscription for closing actions (some are bound to document)\n  protected closingActionsSubscription: Subscription;\n  private _parent: ElementRef;\n\n  constructor(\n    protected overlay: Overlay,\n    protected viewContainerRef: ViewContainerRef,\n    protected zone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    @Optional()\n    @Inject(DOCUMENT)\n    protected document: any,\n  ) {}\n\n  public ngOnDestroy(): void {\n    this.destroyOverlay();\n  }\n\n  get panelOpen(): boolean {\n    return this.overlayRef && this.overlayRef.hasAttached();\n  }\n\n  @Input()\n  public set parent(value: ElementRef) {\n    this._parent = value;\n    this.checkSizes();\n  }\n\n  public get parent(): ElementRef {\n    return this._parent;\n  }\n\n  public openPanel(): void {\n    if (!this.overlayRef) {\n      this.createOverlay(this.template);\n    } else {\n      this.checkSizes();\n    }\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n    this.changeDetectorRef.markForCheck();\n    setTimeout(() => {\n      if (this.overlayRef) {\n        this.overlayRef.updatePosition();\n        this.opening.emit(true);\n        setTimeout(() => {\n          // TODO: @charlesabarnes Remove this once we remove table\n          if (this.overlayRef) {\n            this.overlayRef.updatePosition();\n          }\n        });\n      }\n    });\n  }\n\n  public closePanel(): void {\n    this.zone.run(() => {\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n        this.closingActionsSubscription.unsubscribe();\n      }\n      this.closing.emit(false);\n      if (this.panelOpen) {\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  public onClosingAction(event: any): void {\n    this.closePanel();\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  public get panelClosingActions(): Observable<any> {\n    return merge(\n      // this.overlayTemplate._keyManager.tabOut,\n      this.outsideClickStream,\n    );\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  protected get outsideClickStream(): Observable<any> {\n    if (!this.document) {\n      return observableOf();\n    }\n\n    return merge(fromEvent(this.document, 'mouseup'), fromEvent(this.document, 'touchend')).pipe(\n      filter((event: MouseEvent | TouchEvent) => {\n        const clickTarget: HTMLElement = event.target as HTMLElement;\n        const clicked: boolean =\n          this.panelOpen &&\n          clickTarget !== this.getConnectedElement().nativeElement &&\n          !this.getConnectedElement().nativeElement.contains(clickTarget) &&\n          !!this.overlayRef &&\n          !this.overlayRef.overlayElement.contains(clickTarget);\n        // &&!Array.from(document.querySelectorAll('.cdk-overlay-container')).some((el) => el.contains(clickTarget));\n        if (this.panelOpen && !!this.overlayRef && this.overlayRef.overlayElement.contains(clickTarget) && this.closeOnSelect) {\n          this.select.emit(event);\n        }\n        return clicked;\n      }),\n    );\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  protected subscribeToClosingActions(): Subscription {\n    const firstStable: Observable<any> = this.zone.onStable.asObservable().pipe(first());\n    // const valueChanges = Observable.from(this.value);\n    // When the zone is stable initially, and when the option list changes...\n    return (\n      merge(firstStable)\n        .pipe(\n          // create a new stream of panelClosingActions, replacing any previous streams\n          // that were created, and flatten it so our stream only emits closing events...\n          switchMap(() => {\n            return this.panelClosingActions;\n          }),\n          // when the first closing event occurs...\n          first(),\n        )\n        // set the value, close the panel, and complete.\n        .subscribe((event: any) => this.onClosingAction(event))\n    );\n  }\n\n  protected createOverlay(template: TemplateRef<any>): void {\n    this.portal = new TemplatePortal(template, this.viewContainerRef);\n    this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    this.overlayRef.backdropClick().subscribe(() => this.closePanel());\n  }\n\n  protected destroyOverlay(): void {\n    if (this.overlayRef) {\n      this.closePanel();\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n  }\n\n  protected getOverlayConfig(): OverlayConfig {\n    const config: OverlayConfig = new OverlayConfig();\n\n    if (!this.width) {\n      config.width = this.getHostWidth();\n    } else {\n      config.width = this.width;\n    }\n\n    if (this.height) {\n      config.height = this.height;\n    }\n\n    config.positionStrategy = this.getPosition();\n    config.hasBackdrop = false;\n    config.direction = 'ltr';\n    config.scrollStrategy = this.getScrollStrategy();\n\n    return config;\n  }\n\n  /**\n   * Supports the following position strategies:\n   * 'default', 'right', 'bottom', 'center', 'bottom-left', 'bottom-right', 'top-left', 'top-right'\n   */\n  protected getPosition(): ConnectedPositionStrategy {\n    if (this.position === 'center') {\n      return this.overlay\n        .position()\n        .connectedTo(this.getConnectedElement(), { originX: 'start', originY: 'center' }, { overlayX: 'start', overlayY: 'center' })\n        .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' });\n    }\n\n    const [originX, fallbackX]: HorizontalConnectionPos[] = this.position.includes('right') ? ['end', 'start'] : ['start', 'end'];\n    const [originY, overlayY]: VerticalConnectionPos[] = this.position.includes('top') ? ['top', 'bottom'] : ['bottom', 'top'];\n\n    let strategy: ConnectedPositionStrategy = this.overlay\n      .position()\n      .connectedTo(this.getConnectedElement(), { originX, originY }, { overlayX: originX, overlayY })\n      .withDirection('ltr');\n\n    if (this.position === 'bottom') {\n      strategy = strategy.withFallbackPosition({ originX: fallbackX, originY: 'bottom' }, { overlayX: fallbackX, overlayY: 'top' });\n    } else if (this.position === 'right' || this.position === 'default' || this.position.includes('above-below')) {\n      strategy = strategy\n        .withFallbackPosition({ originX, originY: 'top' }, { overlayX: originX, overlayY: 'bottom' })\n        .withFallbackPosition({ originX: fallbackX, originY: 'bottom' }, { overlayX: fallbackX, overlayY: 'top' })\n        .withFallbackPosition({ originX: fallbackX, originY: 'top' }, { overlayX: fallbackX, overlayY: 'bottom' });\n      if (!this.position.includes('above-below')) {\n        strategy = strategy\n          .withFallbackPosition({ originX, originY: 'center' }, { overlayX: originX, overlayY: 'center' })\n          .withFallbackPosition({ originX: fallbackX, originY: 'center' }, { overlayX: fallbackX, overlayY: 'center' });\n      }\n    }\n    return strategy;\n  }\n\n  protected getScrollStrategy(): ScrollStrategy {\n    switch (this.scrollStrategy) {\n      case 'block':\n        return this.overlay.scrollStrategies.block();\n      case 'reposition':\n        return this.overlay.scrollStrategies.reposition();\n      default:\n        return this.overlay.scrollStrategies.close();\n    }\n  }\n\n  protected checkSizes(): void {\n    if (this.overlayRef) {\n      if (!this.width) {\n        this.overlayRef.getConfig().width = this.getHostWidth();\n      }\n      if (this.height) {\n        this.overlayRef.getConfig().height = this.height;\n      }\n      this.overlayRef.updateSize(this.overlayRef.getConfig());\n      this.overlayRef.updatePosition();\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  protected getConnectedElement(): ElementRef {\n    return this.parent;\n  }\n\n  protected getHostWidth(): number {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n}\n","// NG2\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// APP\nimport { NovoOverlayTemplateComponent } from './Overlay';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OverlayModule, ScrollingModule],\n  declarations: [NovoOverlayTemplateComponent],\n  exports: [NovoOverlayTemplateComponent, ScrollingModule],\n})\nexport class NovoOverlayModule {}\n","// NG2\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\n// Vendor\nimport { merge, of, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BooleanInput } from '../../utils';\n// App\nimport { Key } from '../../utils/key-codes';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { NovoButtonElement } from '../button';\nimport {\n  CanDisableCtor,\n  HasOverlayCtor,\n  HasTabIndexCtor,\n  mixinDisabled,\n  mixinOverlay,\n  mixinTabIndex,\n  NovoOptgroup,\n  NovoOption,\n  NovoOptionSelectionChange,\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n} from '../common';\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\n\n@Directive({\n  selector: '[dropdownTrigger]',\n  host: {\n    class: 'novo-dropdown-trigger',\n  },\n})\nexport class NovoDropDownTrigger {\n  constructor(public element: ElementRef) {}\n}\n\n// Create Base Class from Mixins\n// Boilerplate for applying mixins\nclass NovoDropdownBase {\n  constructor() {}\n}\nconst NovoDropdowMixins: HasOverlayCtor & CanDisableCtor & HasTabIndexCtor & typeof NovoDropdownBase = mixinOverlay(\n  mixinTabIndex(mixinDisabled(NovoDropdownBase), 1),\n);\n\n@Component({\n  selector: 'novo-dropdown',\n  template: `\n    <ng-content select=\"button,novo-button,[dropdownTrigger]\" #trigger></ng-content>\n    <novo-overlay-template [parent]=\"element\" [width]=\"width\" [position]=\"side\" [scrollStrategy]=\"scrollStrategy\">\n      <div #panel class=\"dropdown-container {{ containerClass }}\" [style.height.px]=\"height\" [class.has-height]=\"!!height\">\n        <ng-content></ng-content>\n      </div>\n    </novo-overlay-template>\n  `,\n  // providers: [{ provide: NOVO_OPTION_PARENT_COMPONENT, useExisting: NovoDropdownElement }],\n  host: {\n    '[attr.tabIndex]': 'disabled ? -1 : 0',\n  },\n})\nexport class NovoDropdownElement extends NovoDropdowMixins implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {\n  @Input()\n  parentScrollSelector: string;\n  @Input()\n  parentScrollAction: string = 'close';\n  @Input()\n  containerClass: string;\n  @Input()\n  side:\n    | 'default'\n    | 'right'\n    | 'above-below'\n    | 'right-above-below'\n    | 'center'\n    | 'bottom'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'top-left'\n    | 'top-right' = 'default';\n  @Input()\n  scrollStrategy: 'reposition' | 'block' | 'close' = 'reposition';\n\n  /**\n   * Keep dropdown open after an item is selected\n   */\n  @Input()\n  @BooleanInput()\n  keepOpen: boolean = false;\n\n  @Input()\n  height: number;\n  @Input()\n  width: number = -1; // Defaults to dynamic width (no hardcoded width value and no host width lookup)\n  @Input()\n  appendToBody: boolean = false; // Deprecated\n  @Output()\n  toggled: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  @ContentChild(NovoButtonElement)\n  _button: NovoButtonElement;\n  @ContentChild(NovoDropDownTrigger)\n  _trigger: NovoDropDownTrigger;\n\n  @ContentChildren(NovoOptgroup, { descendants: true })\n  optionGroups: QueryList<NovoOptgroup>;\n  @ContentChildren(NovoOption, { descendants: true })\n  options: QueryList<NovoOption>;\n  @ViewChild('panel')\n  panel: ElementRef;\n\n  private clickHandler: any;\n  private closeHandler: any;\n  private _selectedOptionChanges = Subscription.EMPTY;\n  /** The Subject to complete all subscriptions when destroyed. */\n  private _onDestroy: Subject<void> = new Subject();\n  /** The FocusKeyManager which handles focus. */\n  private _keyManager: ActiveDescendantKeyManager<NovoOption>;\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean {\n    return this._multiple;\n  }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n  private _multiple: boolean = false;\n\n  get button() {\n    return this._trigger || this._button;\n  }\n\n  constructor(public element: ElementRef, private ref: ChangeDetectorRef) {\n    super();\n    this.clickHandler = this.togglePanel.bind(this);\n    this.closeHandler = this.closePanel.bind(this);\n  }\n\n  public ngOnInit(): void {\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n  }\n\n  public ngAfterContentInit(): void {\n    // Add a click handler to the button to toggle the menu\n    this.button.element.nativeElement.addEventListener('click', this.clickHandler);\n    this.button.element.nativeElement.tabIndex = -1;\n    this.options.changes.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this._initKeyManager();\n      this._watchSelectionEvents();\n    });\n    this._initKeyManager();\n    this._watchSelectionEvents();\n    this.focus();\n  }\n\n  public ngAfterViewInit(): void {\n    this._watchPanelEvents();\n  }\n\n  public ngOnDestroy(): void {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    // Remove listener\n    if (this.button) {\n      this.button.element.nativeElement.removeEventListener('click', this.clickHandler);\n    }\n  }\n\n  focus(options?: FocusOptions): void {\n    if (!this.disabled) {\n      this.element.nativeElement.focus(options);\n    }\n  }\n\n  public set items(items: QueryList<NovoItemElement>) {\n    // this._items = items;\n    // this.activeIndex = -1;\n    // // Get the innerText of all the items to allow for searching\n    // this._textItems = items.map((item: NovoItemElement) => {\n    //   return item.element.nativeElement.innerText;\n    // });\n  }\n\n  /** Handles all keydown events on the select. */\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n\n  /** Handles keyboard events while the select is closed. */\n  private _handleClosedKeydown(event: KeyboardEvent): void {\n    const key = event.key;\n    const isArrowKey = key === Key.ArrowDown || key === Key.ArrowUp || key === Key.ArrowLeft || key === Key.ArrowRight;\n    const isOpenKey = key === Key.Enter || key === Key.Space;\n    const manager = this._keyManager;\n    // Open the select on ALT + arrow key to match the native <select>\n    if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.openPanel();\n    }\n  }\n\n  /** Handles keyboard events when the selected is open. */\n  private _handleOpenKeydown(event: KeyboardEvent): void {\n    const manager = this._keyManager;\n    const key = event.key;\n    const isArrowKey = key === Key.ArrowDown || key === Key.ArrowUp;\n    const isTyping = manager.isTyping();\n    const isInputField = event.target;\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.closePanel();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (key === Key.Enter || key === Key.Space) && manager.activeItem && !hasModifierKey(event)) {\n      event.preventDefault();\n      this._multiple ? manager.activeItem._selectViaInteraction() : manager.activeItem._clickViaInteraction();\n    } else if (!isTyping && this._multiple && ['a', 'A'].includes(key) && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some((opt) => !opt.disabled && !opt.selected);\n      this.options.forEach((option) => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else if (Key.Escape === key) {\n      this.closePanel();\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  private _watchPanelEvents() {\n    const panelStateChanges = merge(this.overlay.opening, this.overlay.closing);\n    panelStateChanges.pipe(takeUntil(this._onDestroy)).subscribe((event: boolean) => this.toggled.emit(event));\n  }\n\n  private _watchSelectionEvents() {\n    const selectionEvents = this.options ? merge(...this.options.map((option) => option.onSelectionChange)) : of();\n    this._selectedOptionChanges.unsubscribe();\n    this._selectedOptionChanges = selectionEvents.pipe(takeUntil(this._onDestroy)).subscribe((event: NovoOptionSelectionChange) => {\n      // this.handleSelection(event.source, event.isUserInput);\n      if (event.isUserInput && !this.multiple) {\n        this._clearPreviousSelectedOption(this._keyManager.activeItem);\n        if (!this.keepOpen && this.panelOpen) {\n          this.closePanel();\n          this.focus();\n        }\n      }\n    });\n  }\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: NovoOption) {\n    this.options.forEach((option) => {\n      if (option !== skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<NovoOption>(this.options).withTypeAhead(250).withHomeAndEnd();\n    // .withAllowedModifierKeys(['shiftKey']);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      if (this.panelOpen) {\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.closePanel();\n      }\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      if (this.panelOpen && this.overlay) {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n      }\n    });\n  }\n\n  /** Scrolls the active option into view. */\n  protected _scrollOptionIntoView(index: number): void {\n    const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n    const itemHeight = this._getItemHeight();\n    this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n      (index + labelCount) * itemHeight,\n      itemHeight,\n      this.panel.nativeElement.scrollTop,\n      this.panel.nativeElement.offsetHeight,\n    );\n  }\n\n  /** Calculates the height of the select's options. */\n  private _getItemHeight(): number {\n    let [first] = this.options;\n    if (first) {\n      return first._getHostElement().offsetHeight;\n    }\n    return 0;\n  }\n}\n\n// Deprecated below here ---------------------------\n\n@Component({\n  selector: 'item',\n  template: '<novo-option><ng-content></ng-content></novo-option>',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.active]': 'active',\n  },\n})\nexport class NovoItemElement {\n  @Input()\n  public disabled: boolean;\n  @Input()\n  public keepOpen: boolean = false;\n  @Output()\n  public action: EventEmitter<any> = new EventEmitter();\n\n  public active: boolean = false;\n\n  constructor(private dropdown: NovoDropdownElement, public element: ElementRef) {\n    notify(`'item' element has been deprecated. Please use 'novo-option' and 'novo-optgroup'.`);\n  }\n\n  @HostListener('click', ['$event'])\n  public onClick(event: Event): void {\n    // Poor man's disable\n    if (!this.disabled) {\n      // Close if keepOpen is false\n      if (!this.keepOpen) {\n        this.dropdown.closePanel();\n      }\n      // Emit the action\n      this.action.emit({ originalEvent: event });\n    }\n  }\n}\n\n@Component({\n  selector: 'list',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoDropdownListElement implements AfterContentInit {\n  @ContentChildren(NovoItemElement)\n  public items: QueryList<NovoItemElement>;\n\n  constructor(private dropdown: NovoDropdownElement) {\n    notify(`'list' element has been deprecated. Please use novo-option and novo-optgroup.`);\n  }\n\n  public ngAfterContentInit(): void {\n    this.dropdown.items = this.items;\n    this.items.changes.subscribe(() => {\n      this.dropdown.items = this.items;\n    });\n  }\n}\n\n@Component({\n  selector: 'dropdown-item-header',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoDropDownItemHeaderElement {\n  constructor() {\n    notify(`'dropdown-item-header' element has been deprecated. Please use novo-option and novo-optgroup.`);\n  }\n}\n","// NG2\nimport { NgModule } from '@angular/core';\nimport { NovoOptionModule } from '../common';\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\n// APP\nimport {\n  NovoDropdownElement,\n  NovoDropDownItemHeaderElement,\n  NovoDropdownListElement,\n  NovoDropDownTrigger,\n  NovoItemElement,\n} from './Dropdown';\n\n@NgModule({\n  imports: [NovoOverlayModule, NovoOptionModule],\n  declarations: [NovoDropdownElement, NovoItemElement, NovoDropdownListElement, NovoDropDownItemHeaderElement, NovoDropDownTrigger],\n  exports: [NovoDropdownElement, NovoItemElement, NovoDropdownListElement, NovoDropDownItemHeaderElement, NovoDropDownTrigger],\n})\nexport class NovoDropdownModule {}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { BooleanInput } from '../../utils/decorators/BooleanInput';\nimport { TypographySize } from '../common/typography';\n\n@Component({\n  selector: 'novo-icon',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <i [class]=\"iconName\"\n      ><span (cdkObserveContent)=\"projectContentChanged($event)\"><ng-content></ng-content></span\n    ></i>\n  `,\n  host: {\n    class: 'novo-icon',\n  },\n})\nexport class NovoIconComponent implements AfterViewInit {\n  @HostBinding('class.novo-icon-raised')\n  @Input()\n  public raised: boolean;\n\n  @HostBinding('attr.theme')\n  @Input()\n  public theme: string;\n  @Input()\n  public color: string;\n  @HostBinding('attr.role')\n  public role: string = 'img';\n  @HostBinding('attr.aria-label')\n  public ariaLabel: string;\n\n  @Input()\n  public size: TypographySize;\n\n  @HostBinding('class.text-size-smaller')\n  @Input()\n  @BooleanInput()\n  public smaller: boolean;\n\n  @HostBinding('class.text-size-larger')\n  @Input()\n  @BooleanInput()\n  public larger: boolean;\n\n  @Input()\n  set alt(value: string) {\n    this.ariaLabel = value;\n  }\n\n  get alt(): string {\n    return this.ariaLabel;\n  }\n\n  @Input()\n  set name(iconName: string) {\n    this.iconName = `bhi-${iconName}`;\n  }\n\n  get name(): string {\n    return this.iconName;\n  }\n\n  @HostBinding('class')\n  get hb_classBinding(): string {\n    return [this.color ? `text-color-${this.color}` : null, this.size ? `text-size-${this.size}` : null].filter(Boolean).join(' ');\n  }\n\n  public iconName: string;\n\n  constructor(public element: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  public ngAfterViewInit(): void {\n    if (this.element.nativeElement.textContent.trim()) {\n      Promise.resolve().then(() => {\n        this.name = this.element.nativeElement.textContent.trim();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  public projectContentChanged(record: MutationRecord) {\n    this.name = this.element.nativeElement.textContent.trim();\n    this.cdr.detectChanges();\n  }\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { NgModule } from '@angular/core';\nimport { NovoIconComponent } from './Icon';\n\n@NgModule({\n  imports: [ObserversModule],\n  exports: [NovoIconComponent],\n  declarations: [NovoIconComponent],\n})\nexport class NovoIconModule {}\n","// NG2\nimport { Component, ContentChild, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'novo-list',\n  host: {\n    class: 'novo-list',\n    '[class.vertical-list]': 'direction === \"vertical\"',\n    '[class.horizontal-list]': 'direction === \"horizontal\"',\n    '[attr.theme]': 'theme',\n  },\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoListElement {\n  @Input()\n  theme: string;\n  @Input()\n  direction: string;\n\n  constructor(public element: ElementRef) {}\n}\n\n@Component({\n  selector: 'item-avatar, novo-item-avatar',\n  template: ` <novo-icon *ngIf=\"icon\" [color]=\"color || icon\">{{ icon }}</novo-icon> `,\n  host: {\n    class: 'novo-item-avatar',\n  },\n})\nexport class NovoItemAvatarElement {\n  @Input()\n  icon: string;\n  @Input()\n  color: string;\n}\n\n@Component({\n  selector: 'item-title, novo-item-title',\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'novo-item-title',\n  },\n})\nexport class NovoItemTitleElement {}\n\n@Component({\n  selector: 'item-header, novo-item-header',\n  template: `\n    <novo-title class=\"novo-item-header-container\" size=\"md\">\n      <ng-content select=\"item-avatar, novo-item-avatar\"></ng-content>\n      <ng-content select=\"item-title, novo-item-title\"></ng-content>\n      <ng-content select=\"item-header-end, novo-item-header-end\"></ng-content>\n    </novo-title>\n  `,\n  host: {\n    class: 'novo-item-header',\n  },\n})\nexport class NovoItemHeaderElement {}\n\n@Component({\n  selector: 'item-header-end, novo-item-header-end',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'novo-item-header-end',\n  },\n})\nexport class NovoItemDateElement {}\n\n@Component({\n  selector: 'item-content, novo-item-content',\n  host: {\n    class: 'novo-item-content',\n    '[class.vertical-list]': 'direction === \"vertical\"',\n    '[class.horizontal-list]': 'direction === \"horizontal\"',\n  },\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoItemContentElement {\n  @Input()\n  direction: string;\n}\n\n@Component({\n  selector: 'item-end, novo-item-end',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'novo-item-end',\n  },\n})\nexport class NovoItemEndElement {}\n\n@Component({\n  selector: 'novo-list-item, a[list-item], button[list-item]',\n  template: `\n    <div class=\"list-item\" [ngClass]=\"{ avatar: avatar }\" *ngIf=\"_content || _header\">\n      <ng-content select=\"item-header, novo-item-header\"></ng-content>\n      <ng-content select=\"item-content, novo-item-content\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n    <ng-content select=\"item-end, novo-item-end\"></ng-content>\n  `,\n  host: {\n    class: 'novo-list-item',\n  },\n})\nexport class NovoListItemElement implements OnInit {\n  avatar: boolean = false;\n  @ContentChild(NovoItemContentElement) _content: NovoItemContentElement;\n  @ContentChild(NovoItemHeaderElement) _header: NovoItemHeaderElement;\n\n  constructor(private element: ElementRef) {}\n\n  ngOnInit() {\n    this.avatar = !!this.element.nativeElement.querySelector('item-avatar');\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoCommonModule } from '../common';\nimport { NovoIconModule } from '../icon';\n// APP\nimport {\n  NovoItemAvatarElement,\n  NovoItemContentElement,\n  NovoItemDateElement,\n  NovoItemEndElement,\n  NovoItemHeaderElement,\n  NovoItemTitleElement,\n  NovoListElement,\n  NovoListItemElement,\n} from './List';\n\n@NgModule({\n  imports: [CommonModule, NovoCommonModule, NovoIconModule],\n  declarations: [\n    NovoListElement,\n    NovoListItemElement,\n    NovoItemAvatarElement,\n    NovoItemTitleElement,\n    NovoItemContentElement,\n    NovoItemEndElement,\n    NovoItemHeaderElement,\n    NovoItemDateElement,\n  ],\n  exports: [\n    NovoListElement,\n    NovoListItemElement,\n    NovoItemAvatarElement,\n    NovoItemTitleElement,\n    NovoItemHeaderElement,\n    NovoItemContentElement,\n    NovoItemEndElement,\n    NovoItemDateElement,\n  ],\n})\nexport class NovoListModule {}\n","// NG2\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Component,\n  ContentChildren,\n  Directive,\n  EmbeddedViewRef,\n  HostBinding,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'novo-loading',\n  template: `\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n  `,\n})\nexport class NovoLoadingElement {\n  /**\n   * **deprecated** please use `color`.\n   * @deprecated\n   **/\n  @Input()\n  set theme(value: string) {\n    console.warn(`'theme' property is deprecated, please use 'color'.`);\n    this.color = value;\n  }\n  get theme(): string {\n    return this.color;\n  }\n\n  @Input()\n  color: string;\n\n  @Input()\n  size: string = 'medium';\n\n  @HostBinding('class')\n  get hb_class() {\n    return [`color-${this.color}`, `size-${this.size}`].join(' ');\n  }\n}\n\n@Component({\n  selector: 'novo-spinner',\n  template: `\n    <div class=\"dot1 dot\"></div>\n    <div class=\"dot2 dot\"></div>\n    <div class=\"dot3 dot\"></div>\n    <div class=\"dot4 dot\"></div>\n    <div class=\"dot5 dot\"></div>\n    <div class=\"dot6 dot\"></div>\n    <div class=\"dot7 dot\"></div>\n    <div class=\"dot8 dot\"></div>\n    <div class=\"dot9 dot\"></div>\n    <div class=\"dot10 dot\"></div>\n    <div class=\"dot11 dot\"></div>\n    <div class=\"dot12 dot\"></div>\n  `,\n})\nexport class NovoSpinnerElement {\n  /**\n   * **deprecated** please use `color`.\n   * @deprecated\n   **/\n  @Input()\n  set theme(value: string) {\n    console.warn(`'theme' property is deprecated, please use 'color'.`);\n    this.color = value;\n  }\n  get theme(): string {\n    return this.color;\n  }\n\n  @Input()\n  color: string;\n\n  @Input()\n  size: string = 'medium';\n\n  private _inverse: boolean;\n  get inverse(): boolean {\n    return this._inverse;\n  }\n  @Input()\n  set inverse(value: boolean) {\n    this._inverse = coerceBooleanProperty(value);\n  }\n\n  @HostBinding('class')\n  get hb_class() {\n    return [this.inverse ? 'color-white' : `color-${this.color}`, `size-${this.size}`].join(' ');\n  }\n}\n\n@Directive({\n  selector: '[skeleton]',\n})\nexport class NovoSkeletonDirective {\n  @HostBinding('class.skeleton')\n  skeleton: boolean = true;\n}\n@Directive({\n  selector: '[loaded]',\n})\nexport class NovoLoadedDirective {}\n\n@Directive({\n  selector: '[isLoading]',\n})\nexport class NovoIsLoadingDirective {\n  @ContentChildren(NovoSkeletonDirective, { read: TemplateRef })\n  public skeletonTemplates: QueryList<TemplateRef<any>>;\n  @ContentChildren(NovoLoadedDirective, { read: TemplateRef })\n  public loadedTemplates: QueryList<TemplateRef<any>>;\n\n  private hasView = false;\n  private skeletonViews: EmbeddedViewRef<NovoSkeletonDirective>[] = [];\n  private loadedViews: EmbeddedViewRef<NovoLoadedDirective>[] = [];\n\n  constructor(private viewContainer: ViewContainerRef) {}\n\n  @Input()\n  set isLoading(condition: boolean) {\n    if (!condition && !this.hasView) {\n      this.destroyViews(this.loadedViews);\n      this.skeletonViews = this.createViews(this.skeletonTemplates);\n      this.hasView = true;\n    } else if (condition && this.hasView) {\n      this.destroyViews(this.skeletonViews);\n      this.loadedViews = this.createViews(this.loadedTemplates);\n      this.hasView = false;\n    }\n  }\n  createViews(templates: QueryList<TemplateRef<any>>) {\n    return templates && templates.map((v, i) => this.viewContainer.createEmbeddedView(v, null, i));\n  }\n  destroyViews(views: EmbeddedViewRef<any>[]) {\n    if (views) {\n      for (const view of views) {\n        view.destroy();\n      }\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoIsLoadingDirective, NovoLoadedDirective, NovoLoadingElement, NovoSkeletonDirective, NovoSpinnerElement } from './Loading';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoLoadingElement, NovoSpinnerElement, NovoIsLoadingDirective, NovoLoadedDirective, NovoSkeletonDirective],\n  exports: [NovoLoadingElement, NovoSpinnerElement, NovoIsLoadingDirective, NovoLoadedDirective, NovoSkeletonDirective],\n})\nexport class NovoLoadingModule {}\n","// NG2\nimport { ChangeDetectorRef, Component, EventEmitter, forwardRef, HostBinding, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, Key } from '../../utils';\n\n// Value accessor for the component (supports ngModel)\nconst SWITCH_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoSwitchElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-switch',\n  providers: [SWITCH_VALUE_ACCESSOR],\n  template: `\n    <div (click)=\"toggle($event)\">\n      <div class=\"novo-switch-container\">\n        <div class=\"novo-switch-bar\"></div>\n        <div class=\"novo-switch-thumb-container\">\n          <div class=\"novo-switch-thumb\">\n            <novo-icon *ngIf=\"!value\" smaller>{{ icons[0] }}</novo-icon>\n            <novo-icon *ngIf=\"value\" smaller>{{ icons[1] }}</novo-icon>\n          </div>\n        </div>\n      </div>\n      <div class=\"novo-switch-label\"><ng-content></ng-content></div>\n    </div>\n  `,\n  host: {\n    role: 'checkbox',\n    class: 'novo-switch',\n    '[attr.aria-checked]': 'value',\n    '[attr.aria-disabled]': 'disabled',\n    '(keydown)': 'onKeydown($event)',\n    '[class]': 'theme',\n  },\n})\nexport class NovoSwitchElement implements ControlValueAccessor {\n  @Input()\n  theme: string = 'ocean';\n\n  @Input()\n  icons: [string, string] = ['x', 'check'];\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-switch-disabled')\n  disabled: boolean = false;\n\n  @Output()\n  onChange: EventEmitter<any> = new EventEmitter();\n\n  private _value: boolean;\n  public get value(): boolean {\n    return this._value;\n  }\n  public set value(value: boolean) {\n    this._value = value;\n  }\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(private ref: ChangeDetectorRef) {}\n\n  onKeydown(event: KeyboardEvent) {\n    if (event.key === Key.Space) {\n      event.preventDefault();\n      this.toggle(event);\n    }\n  }\n\n  toggle(event) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    if (this.disabled) {\n      return;\n    }\n\n    this.value = !this.value;\n    this.onChange.next(this.value);\n    this.onModelChange(this.value);\n    this.ref.markForCheck();\n  }\n\n  writeValue(model: boolean): void {\n    this.value = model;\n    this.ref.markForCheck();\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoIconModule } from '../icon';\nimport { NovoSwitchElement } from './Switch';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoIconModule],\n  declarations: [NovoSwitchElement],\n  exports: [NovoSwitchElement],\n})\nexport class NovoSwitchModule {}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef } from '@angular/core';\n// Vendor\nimport { from, Observable } from 'rxjs';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { Helpers } from '../../../../utils/Helpers';\n// APP\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n/**\n * @description This is the actual list of matches that gets injected into the DOM.\n */\n@Component({\n  selector: 'checklist-picker-results',\n  host: {\n    class: 'active picker-results',\n  },\n  template: `\n    <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n    <ul *ngIf=\"matches.length > 0\">\n      <span *ngFor=\"let section of matches; let i = index\">\n        <li class=\"header caption\" *ngIf=\"section.data.length > 0\">{{ section.label || section.type }}</li>\n        <li\n          *ngFor=\"let match of section.data; let i = index\"\n          [ngClass]=\"{ checked: match.checked }\"\n          (click)=\"selectMatch($event, match)\"\n          [class.active]=\"match === activeMatch\"\n          (mouseenter)=\"selectActive(match)\"\n        >\n          <label>\n            <i\n              [ngClass]=\"{\n                'bhi-checkbox-empty': !match.checked,\n                'bhi-checkbox-filled': match.checked,\n                'bhi-checkbox-indeterminate': match.indeterminate\n              }\"\n            ></i>\n            {{ match.label }}\n          </label>\n        </li>\n      </span>\n    </ul>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null-results\" *ngIf=\"!isLoading && !matches.length && !hasError && term !== ''\">{{ labels.pickerEmpty }}</p>\n  `,\n})\nexport class ChecklistPickerResults extends BasePickerResults {\n  filteredMatches: any;\n\n  constructor(element: ElementRef, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n\n  search(): Observable<any> {\n    const options = this.config.options;\n    // only set this the first time\n    return from(\n      new Promise((resolve, reject) => {\n        // Check if there is match data\n        if (options) {\n          // Resolve the data\n          if (Array.isArray(options)) {\n            this.isStatic = true;\n            // Arrays are returned immediately\n            resolve(options);\n          } else {\n            // All other kinds of data are rejected\n            reject('The data provided is not an array or a promise');\n            throw new Error('The data provided is not an array or a promise');\n          }\n        } else {\n          // No data gets rejected\n          reject('error');\n        }\n      }),\n    );\n  }\n\n  /**\n   * @param matches - Collection of objects=\n   *\n   * @description This function loops through the picker options and creates a filtered list of objects that contain\n   * the newSearch.\n   */\n  filterData(matches): any {\n    if (this.term && matches) {\n      this.filteredMatches = matches.map((section) => {\n        const items = section.originalData.filter((match) => {\n          return ~String(match.label).toLowerCase().indexOf(this.term.toLowerCase());\n        });\n        section.data = items;\n        return section;\n      }, this);\n      return this.filteredMatches;\n    } else if (this.term === '') {\n      matches.forEach((section) => {\n        section.data = section.originalData;\n      });\n      return matches;\n    }\n    // Show no recent results template\n    return matches;\n  }\n\n  selectMatch(event, item) {\n    Helpers.swallowEvent(event);\n    if (item.indeterminate) {\n      item.indeterminate = false;\n      item.checked = true;\n    } else {\n      item.checked = !item.checked;\n    }\n\n    const selected = this.activeMatch;\n    if (selected) {\n      this.parent.value = selected;\n    }\n    this.ref.markForCheck();\n    return false;\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef, HostBinding } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// Vendor\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n@Component({\n  selector: 'distribution-list-picker-results',\n  template: `\n    <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\">\n      <novo-loading theme=\"line\"></novo-loading>\n    </section>\n    <novo-list direction=\"vertical\" *ngIf=\"matches?.length > 0 && !hasError\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-header>\n          <item-title>\n            <span [innerHtml]=\"sanitizeHTML(match.label)\"></span>\n          </item-title>\n        </item-header>\n        <item-content direction=\"horizontal\">\n          <p>\n            <span class=\"label\">{{ labels.distributionListOwner }}: </span><span>{{ match?.data?.owner?.name }}</span>\n          </p>\n          <p>\n            <span class=\"label\">{{ labels.dateAdded }}: </span\n            ><span>{{ labels.formatDateWithFormat(match?.data?.dateAdded, { year: 'numeric', month: 'numeric', day: 'numeric' }) }}</span>\n          </p>\n        </item-content>\n      </novo-list-item>\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches?.length > 0\"></novo-loading>\n    </novo-list>\n  `,\n})\nexport class DistributionListPickerResults extends BasePickerResults {\n  @HostBinding('class.active')\n  active: boolean = true;\n  @HostBinding('hidden')\n  get isHidden(): boolean {\n    return this.matches.length === 0;\n  }\n\n  constructor(element: ElementRef, private sanitizer: DomSanitizer, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n    this.sanitizer = sanitizer;\n  }\n\n  getListElement(): any {\n    return this.element.nativeElement.querySelector('novo-list');\n  }\n\n  sanitizeHTML(html: any): any {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { Helpers } from '../../../../utils/Helpers';\nimport { NovoListElement } from '../../../list/List';\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n@Component({\n  selector: 'grouped-multi-picker-results',\n  template: `\n    <div class=\"grouped-multi-picker-groups\">\n      <novo-list direction=\"vertical\">\n        <novo-list-item\n          *ngIf=\"config.displayAll\"\n          (click)=\"selectCategory({ value: 'all', label: 'all' })\"\n          [class.active]=\"selectedCategory?.value === 'all'\"\n          data-automation-id=\"display-all\"\n          [class.disabled]=\"isLoading\"\n        >\n          <item-content>\n            <span data-automation-id=\"label\">{{ labels.all }}</span>\n          </item-content>\n          <item-end>\n            <i class=\"bhi-next\"></i>\n          </item-end>\n        </novo-list-item>\n        <novo-list-item\n          *ngFor=\"let category of categories\"\n          (click)=\"selectCategory(category)\"\n          [class.active]=\"selectedCategory?.value === category.value\"\n          [attr.data-automation-id]=\"category.label\"\n          [class.disabled]=\"isLoading\"\n        >\n          <item-content>\n            <i *ngIf=\"category.iconClass\" [class]=\"category.iconClass\"></i>\n            <span data-automation-id=\"label\">{{ category.label }}</span>\n          </item-content>\n          <item-end>\n            <i class=\"bhi-next\"></i>\n          </item-end>\n        </novo-list-item>\n      </novo-list>\n      <footer\n        class=\"grouped-multi-picker-groups-footer\"\n        *ngIf=\"customFilterEnabled\"\n        data-automation-id=\"footer\"\n        [class.disabled]=\"isLoading\"\n      >\n        <novo-switch [(ngModel)]=\"customFilterValue\" (onChange)=\"fireCustomFilter($event)\" data-automation-id=\"switch\"></novo-switch>\n        <label data-automation-id=\"label\">{{ customFilterLabel }}</label>\n      </footer>\n    </div>\n    <div class=\"grouped-multi-picker-matches\">\n      <div class=\"grouped-multi-picker-input-container\" [hidden]=\"!selectedCategory\" data-automation-id=\"input-container\">\n        <input autofocus #input [(ngModel)]=\"searchTerm\" [disabled]=\"isLoading\" data-automation-id=\"input\" [placeholder]=\"placeholder\" />\n        <i class=\"bhi-search\" *ngIf=\"!searchTerm\" [class.disabled]=\"isLoading\" data-automation-id=\"seach-icon\"></i>\n        <i\n          class=\"bhi-times\"\n          *ngIf=\"searchTerm\"\n          (click)=\"clearSearchTerm($event)\"\n          [class.disabled]=\"isLoading\"\n          data-automation-id=\"remove-icon\"\n        ></i>\n      </div>\n      <div class=\"grouped-multi-picker-list-container\">\n        <novo-list direction=\"vertical\" #list>\n          <novo-list-item\n            *ngFor=\"let match of matches\"\n            (click)=\"selectMatch($event)\"\n            [class.active]=\"match === activeMatch\"\n            (mouseenter)=\"selectActive(match)\"\n            [class.disabled]=\"preselected(match) || isLoading\"\n            [attr.data-automation-id]=\"match.label\"\n          >\n            <item-content>\n              <span>{{ match.label }}</span>\n            </item-content>\n          </novo-list-item>\n        </novo-list>\n        <div\n          class=\"grouped-multi-picker-no-results\"\n          *ngIf=\"matches.length === 0 && !isLoading && selectedCategory\"\n          data-automation-id=\"empty-message\"\n        >\n          {{ labels.groupedMultiPickerEmpty }}\n        </div>\n        <div\n          class=\"grouped-multi-picker-no-category\"\n          *ngIf=\"matches.length === 0 && !isLoading && !selectedCategory\"\n          data-automation-id=\"select-category-message\"\n        >\n          {{ labels.groupedMultiPickerSelectCategory }}\n        </div>\n        <div class=\"grouped-multi-picker-loading\" *ngIf=\"isLoading\" data-automation-id=\"loading-message\">\n          <novo-loading theme=\"line\"></novo-loading>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class GroupedMultiPickerResults extends BasePickerResults implements OnInit, OnDestroy {\n  @ViewChild('input', { static: true })\n  private inputElement: ElementRef;\n  @ViewChild('list')\n  private listElement: NovoListElement;\n\n  public selectedCategory: { value: string; label: string };\n  public searchTerm: string;\n  public customFilterEnabled: boolean = false;\n  public customFilterLabel: string;\n  public placeholder: string = '';\n\n  private keyboardSubscription: Subscription;\n  private internalMap: Map<string, { value: string; label: string; items: { value: string; label: string }[] }> = new Map<\n    string,\n    { value: string; label: string; items: { value: string; label: string }[] }\n  >();\n  public customFilterValue: any;\n\n  set term(value) {\n    // Display all only will work for static categories\n    if (this.config.displayAll && this.config.getItemsForCategoryAsync) {\n      throw new Error(\n        '[GroupedMultiPickerResults] - you can only have `displayAll` with a static `categoryMap`. Not available with `getItemsForCategoryAsync`',\n      );\n    }\n    // Custom filter\n    if (this.config.customFilter) {\n      this.customFilterEnabled = true;\n      this.customFilterLabel = this.config.customFilter.label;\n      this.customFilterValue = !!this.config.customFilter.defaultFilterValue;\n      this.ref.markForCheck();\n      if (!this.customFilterLabel || !this.config.customFilter.matchFunction) {\n        throw new Error('[GroupedMultiPickerResults] - custom filter/matchFunction set no label was provided!');\n      }\n    } else {\n      this.customFilterEnabled = false;\n    }\n    // Configure ALL\n    if (this.config.displayAll && !this.selectedCategory) {\n      this.setAllCategory();\n    }\n    // Placeholder\n    if (this.config.placeholder) {\n      this.placeholder = this.config.placeholder;\n    }\n    // Focus\n    setTimeout(() => {\n      this.inputElement.nativeElement.focus();\n    });\n  }\n\n  get categories() {\n    if (this.config.categories || this.config.categoryMap) {\n      return (\n        this.config.categories ||\n        Array.from(this.config.categoryMap.values()).filter((category: { value: string }) => {\n          return category.value !== 'all';\n        })\n      );\n    }\n    return [];\n  }\n\n  constructor(element: ElementRef, private renderer: Renderer2, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n\n  public ngOnInit() {\n    // Subscribe to keyboard events and debounce\n    this.keyboardSubscription = fromEvent(this.inputElement.nativeElement, 'keyup')\n      .pipe(debounceTime(350), distinctUntilChanged())\n      .subscribe((event: KeyboardEvent) => {\n        this.searchTerm = (event.target as HTMLInputElement).value;\n        this.matches = this.filterData();\n        this.ref.markForCheck();\n      });\n  }\n\n  public ngOnDestroy() {\n    // Cleanup\n    this.keyboardSubscription.unsubscribe();\n  }\n\n  public setAllCategory() {\n    // If we have display all, set the all categories up\n    if (this.config.displayAll) {\n      this.selectedCategory = { value: 'all', label: 'all' };\n      const allItems = [];\n      Array.from(this.config.categoryMap.values())\n        .filter((category: { value: string }) => {\n          return category.value !== 'all';\n        })\n        .forEach((v: { value: string; label: string; items: any[] }) => allItems.push(...v.items));\n      this.matches = this.filter(allItems);\n      this.config.categoryMap.set('all', { value: 'all', label: 'All', items: allItems });\n      this.ref.markForCheck();\n    }\n  }\n\n  public selectCategory(category: { value: string; label: string }): void {\n    // Scroll to top\n    this.renderer.setProperty(this.listElement.element.nativeElement, 'scrollTop', 0);\n    // Set focus\n    this.inputElement.nativeElement.focus();\n    // Find new items\n    const key: string = category.value;\n    this.selectedCategory = category;\n    // Clear\n    this.matches = [];\n    this.ref.markForCheck();\n    // New matches\n    this.getNewMatches(category, key);\n  }\n\n  public clearSearchTerm(event: MouseEvent) {\n    Helpers.swallowEvent(event);\n    this.searchTerm = '';\n    this.selectCategory({ value: this.selectedCategory.value, label: this.selectedCategory.label });\n    this.ref.markForCheck();\n  }\n\n  public selectMatch(event?: MouseEvent, item?: { value: string; label: string }): boolean {\n    // Set focus\n    this.inputElement.nativeElement.focus();\n    return super.selectMatch(event);\n  }\n\n  public fireCustomFilter(value: boolean) {\n    this.customFilterValue = value;\n    // Clear cache map\n    this.internalMap.clear();\n    // Only fire if we have a selected category\n    if (this.selectCategory) {\n      // Find new items\n      const key: string = this.selectedCategory.value;\n      // Get new matches\n      this.getNewMatches(this.selectedCategory, key);\n      this.ref.markForCheck();\n    }\n    // Focus\n    setTimeout(() => {\n      this.inputElement.nativeElement.focus();\n    });\n  }\n\n  filterData(): { value: string; label: string }[] {\n    if (this.selectedCategory) {\n      if (this.config.categoryMap) {\n        return this.filter(this.config.categoryMap.get(this.selectedCategory.value).items);\n      } else {\n        return this.filter(this.internalMap.get(this.selectedCategory.value).items);\n      }\n    }\n    return [];\n  }\n\n  private getNewMatches(category: { value: string; label: string }, key: string): void {\n    // Get new matches\n    if (this.config.categoryMap) {\n      this.matches = this.filter(this.config.categoryMap.get(key).items);\n      this.ref.markForCheck();\n    } else {\n      if (!this.config.getItemsForCategoryAsync) {\n        throw new Error(\n          'The \"config\" for the Chips must include a function \"getItemsForCategoryAsync(categoryKey: string)\" to retrieve the items by category. Or if you have static data provide a \"categoryMap\"',\n        );\n      }\n      if (!this.internalMap.get(key)) {\n        this.isLoading = true;\n        this.config.getItemsForCategoryAsync(key, this.customFilterValue).then((items: { value: string; label: string }[]) => {\n          this.internalMap.set(key, { value: category.value, label: category.label, items });\n          this.matches = this.filter(items, true);\n          this.isLoading = false;\n          this.ref.markForCheck();\n          setTimeout(() => {\n            this.inputElement.nativeElement.focus();\n          });\n        });\n      } else {\n        this.matches = this.filter(this.internalMap.get(key).items);\n        this.ref.markForCheck();\n      }\n    }\n  }\n\n  private filter(\n    array: { value: string; label: string; filterValue?: any }[],\n    ignoreCustomFilter: boolean = false,\n  ): { value: string; label: string }[] {\n    let matches: { value: string; label: string; filterValue?: any }[] = array;\n    if (this.searchTerm && this.searchTerm.length !== 0 && this.selectedCategory) {\n      matches = matches.filter((match) => {\n        const searchTerm = this.searchTerm.toLowerCase();\n        return match.label.toLowerCase().indexOf(searchTerm) > -1 || match.value.toLowerCase().indexOf(searchTerm) > -1;\n      });\n    }\n    if (this.customFilterEnabled && this.config.customFilter.matchFunction && !ignoreCustomFilter) {\n      matches = matches.filter((match) => this.config.customFilter.matchFunction(match, this.customFilterValue));\n    }\n    return matches;\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { Helpers } from '../../../../utils/Helpers';\nimport { NovoListElement } from '../../../list/List';\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\nexport interface IMixedMultiPickerOption {\n  value: string;\n  label: string;\n  secondaryOptions?: {\n    value: string;\n    label: string;\n    filterValue?: any;\n  }[];\n  getSecondaryOptionsAsync?(): Promise<{ value: string; label: string }[]>;\n  // TODO: Refactor to prevent the need for a behaviorSubject to allow primaryOption's secondaryOptions to be cleared\n  // Currently secondaryOptions cannot be cleared via FieldInteraction API and must use a behavior subject - this includes modifyPickerConfig\n  clearSecondaryOptions?: Subject<any>;\n  showSearchOnSecondaryOptions?: boolean;\n}\n\n@Component({\n  selector: 'mixed-multi-picker-results',\n  template: ` <div class=\"mixed-multi-picker-groups\">\n      <novo-list direction=\"vertical\">\n        <novo-list-item\n          *ngFor=\"let option of options\"\n          (click)=\"selectPrimaryOption(option, $event)\"\n          [class.active]=\"selectedPrimaryOption?.value === option.value\"\n          [attr.data-automation-id]=\"option.label\"\n          [class.disabled]=\"isLoading\"\n        >\n          <item-content>\n            <i *ngIf=\"option.iconClass\" [class]=\"option.iconClass\"></i>\n            <span data-automation-id=\"label\">{{ option.label }}</span>\n          </item-content>\n          <item-end *ngIf=\"optionHasSecondaryOptions(option)\">\n            <i class=\"bhi-next\"></i>\n          </item-end>\n        </novo-list-item>\n      </novo-list>\n    </div>\n    <div class=\"mixed-multi-picker-matches\" [hidden]=\"!optionHasSecondaryOptions(selectedPrimaryOption)\">\n      <div\n        class=\"mixed-multi-picker-input-container\"\n        [hidden]=\"!shouldShowSearchBox(selectedPrimaryOption)\"\n        data-automation-id=\"input-container\"\n      >\n        <input autofocus #input [(ngModel)]=\"searchTerm\" [disabled]=\"isLoading\" data-automation-id=\"input\" [placeholder]=\"placeholder\" />\n        <i class=\"bhi-search\" *ngIf=\"!searchTerm\" [class.disabled]=\"isLoading\" data-automation-id=\"seach-icon\"></i>\n        <i\n          class=\"bhi-times\"\n          *ngIf=\"searchTerm\"\n          (click)=\"clearSearchTerm($event)\"\n          [class.disabled]=\"isLoading\"\n          data-automation-id=\"remove-icon\"\n        ></i>\n      </div>\n      <div class=\"mixed-multi-picker-list-container\">\n        <novo-list direction=\"vertical\" #list>\n          <novo-list-item\n            *ngFor=\"let match of matches\"\n            (click)=\"selectMatch($event)\"\n            [class.active]=\"match === activeMatch\"\n            (mouseenter)=\"selectActive(match)\"\n            [class.disabled]=\"preselected(match) || isLoading\"\n            [attr.data-automation-id]=\"match.label\"\n          >\n            <item-content>\n              <span>{{ match.label }}</span>\n            </item-content>\n          </novo-list-item>\n        </novo-list>\n        <div\n          class=\"mixed-multi-picker-no-results\"\n          *ngIf=\"matches.length === 0 && !isLoading && selectedPrimaryOption\"\n          data-automation-id=\"empty-message\"\n        >\n          {{ config.emptyOptionsLabel ? config.emptyOptionsLabel : labels.groupedMultiPickerEmpty }}\n        </div>\n        <div class=\"mixed-multi-picker-loading\" *ngIf=\"isLoading\" data-automation-id=\"loading-message\">\n          <novo-loading theme=\"line\"></novo-loading>\n        </div>\n      </div>\n    </div>`,\n})\nexport class MixedMultiPickerResults extends BasePickerResults implements OnDestroy {\n  @ViewChild('input', { static: true })\n  private inputElement: ElementRef;\n  @ViewChild('list')\n  private listElement: NovoListElement;\n\n  public selectedPrimaryOption: IMixedMultiPickerOption;\n  public searchTerm: string;\n  public placeholder: string = '';\n  public emptyOptionsLabel: string = '';\n\n  private keyboardSubscription: Subscription;\n\n  private internalMap: Map<string, { value: string; label: string; items: { value: string; label: string }[] }> = new Map<\n    string,\n    { value: string; label: string; items: { value: string; label: string }[] }\n  >();\n\n  set term(value) {\n    if (this.config.placeholder) {\n      this.placeholder = this.config.placeholder;\n    }\n    // Focus\n    setTimeout(() => {\n      this.inputElement.nativeElement.focus();\n    });\n  }\n\n  get options() {\n    return this.config.options || [];\n  }\n\n  constructor(element: ElementRef, private renderer: Renderer2, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n\n  public ngOnDestroy() {\n    // Cleanup\n    if (this.keyboardSubscription) {\n      this.keyboardSubscription.unsubscribe();\n    }\n    if (this.config.options) {\n      this.config.options.forEach((option) => {\n        if (option.clearSecondaryOptions) {\n          option.clearSecondaryOptions.unsubscribe();\n        }\n      });\n    }\n  }\n\n  public selectPrimaryOption(primaryOption: IMixedMultiPickerOption, event?: MouseEvent): void {\n    if (this.keyboardSubscription) {\n      this.keyboardSubscription.unsubscribe();\n    }\n    // Scroll to top\n    this.renderer.setProperty(this.listElement.element.nativeElement, 'scrollTop', 0);\n    // Set focus\n    this.inputElement.nativeElement.focus();\n    // Find new items\n    const key: string = primaryOption.value;\n    this.selectedPrimaryOption = primaryOption;\n    // Clear\n    this.matches = [];\n    this.ref.markForCheck();\n    // New matches\n    if (this.optionHasSecondaryOptions(primaryOption)) {\n      // Subscribe to keyboard events and debounce\n      this.keyboardSubscription = fromEvent(this.inputElement.nativeElement, 'keyup')\n        .pipe(debounceTime(350), distinctUntilChanged())\n        .subscribe((keyEvent: KeyboardEvent) => {\n          this.searchTerm = (keyEvent.target as HTMLInputElement).value;\n          this.matches = this.filterData();\n          this.ref.markForCheck();\n        });\n      this.getNewMatches(primaryOption);\n    } else {\n      this.selectActive(primaryOption);\n      this.selectMatch(event);\n    }\n  }\n\n  public selectMatch(event?: MouseEvent): boolean {\n    // Set focus\n    this.inputElement.nativeElement.focus();\n    return super.selectMatch(event);\n  }\n\n  public clearSearchTerm(event: MouseEvent) {\n    Helpers.swallowEvent(event);\n    this.searchTerm = '';\n    this.selectPrimaryOption({ value: this.selectedPrimaryOption.value, label: this.selectedPrimaryOption.label });\n    this.ref.markForCheck();\n  }\n\n  public optionHasSecondaryOptions(primaryOption: IMixedMultiPickerOption) {\n    return !!(primaryOption && (primaryOption.secondaryOptions || primaryOption.getSecondaryOptionsAsync));\n  }\n\n  public shouldShowSearchBox(primaryOption: IMixedMultiPickerOption) {\n    return !!(primaryOption && primaryOption.showSearchOnSecondaryOptions);\n  }\n\n  public clearPrimaryOption(primaryOption: IMixedMultiPickerOption) {\n    if (this.internalMap.get(primaryOption.value)) {\n      if (primaryOption.value === this.selectedPrimaryOption?.value) {\n        this.activeMatch = null;\n        this.matches = [];\n        this.selectedPrimaryOption = null;\n      }\n      this.internalMap.delete(primaryOption.value);\n      this.ref.markForCheck();\n    }\n  }\n\n  filterData(): { value: string; label: string }[] {\n    if (this.selectedPrimaryOption) {\n      if (this.selectedPrimaryOption.secondaryOptions) {\n        return this.filter(this.selectedPrimaryOption.secondaryOptions);\n      } else {\n        return this.filter(this.internalMap.get(this.selectedPrimaryOption.value).items);\n      }\n    }\n    return [];\n  }\n\n  private filter(array: { value: string; label: string; filterValue?: any }[]): { value: string; label: string }[] {\n    let matches: { value: string; label: string; filterValue?: any }[] = array;\n    if (this.searchTerm && this.searchTerm.length !== 0 && this.selectedPrimaryOption) {\n      matches = matches.filter((match) => {\n        const searchTerm = this.searchTerm.toLowerCase();\n        return match.label.toLowerCase().indexOf(searchTerm) > -1 || match.value.toLowerCase().indexOf(searchTerm) > -1;\n      });\n    }\n    return matches;\n  }\n\n  private getNewMatches(primaryOption: IMixedMultiPickerOption): void {\n    // Get new matches\n    if (primaryOption.secondaryOptions) {\n      this.matches = this.filter(primaryOption.secondaryOptions);\n      this.ref.markForCheck();\n    } else {\n      if (!primaryOption.getSecondaryOptionsAsync) {\n        throw new Error('An option needs to have either an array of secondaryOptions or a function getSecondaryOptionsAsync');\n      }\n      if (!this.internalMap.get(primaryOption.value)) {\n        this.isLoading = true;\n        primaryOption.getSecondaryOptionsAsync().then((items: { value: string; label: string }[]) => {\n          this.internalMap.set(primaryOption.value, { value: primaryOption.value, label: primaryOption.label, items });\n          this.matches = this.filter(items);\n          this.isLoading = false;\n          this.ref.markForCheck();\n          setTimeout(() => {\n            this.inputElement.nativeElement.focus();\n          });\n        });\n        if (primaryOption.clearSecondaryOptions) {\n          primaryOption.clearSecondaryOptions.subscribe(() => {\n            this.clearPrimaryOption(primaryOption);\n          });\n        }\n      } else {\n        this.matches = this.filter(this.internalMap.get(primaryOption.value).items);\n        this.ref.markForCheck();\n      }\n    }\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef } from '@angular/core';\n// APP\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n@Component({\n  selector: 'picker-results',\n  host: {\n    class: 'active',\n  },\n  template: `\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-content> <span [innerHtml]=\"highlight(match.label, term)\"></span> </item-content>\n      </novo-list-item>\n      <novo-loading *ngIf=\"isLoading && matches.length > 0\" theme=\"line\"></novo-loading>\n    </novo-list>\n    <div class=\"picker-loader\" *ngIf=\"isLoading && matches.length === 0\"><novo-loading theme=\"line\"></novo-loading></div>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null-results\" *ngIf=\"hasNonErrorMessage\">{{ getEmptyMessage() }}</p>\n  `,\n})\nexport class PickerResults extends BasePickerResults {\n  constructor(element: ElementRef, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n\n  get hasNonErrorMessage() {\n    return !this.isLoading && !this.matches.length && !this.hasError;\n  }\n\n  getEmptyMessage() {\n    if (this.shouldShowMessageForZeroLengthSearch()) {\n      // this property comes from Field Interactions\n      return this.config.emptyPickerMessage;\n    } else {\n      return this.term === '' ? this.labels.pickerTextFieldEmpty : this.labels.pickerEmpty;\n    }\n  }\n\n  shouldShowMessageForZeroLengthSearch() {\n    return this.config && this.config.minSearchLength === 0 && this.term === '' && this.config.emptyPickerMessage;\n  }\n\n  getListElement() {\n    return this.element.nativeElement.querySelector('novo-list');\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef, HostBinding } from '@angular/core';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// App\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n@Component({\n  selector: 'skill-specialty-picker-results',\n  template: `\n    <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\"><novo-loading theme=\"line\"></novo-loading></section>\n    <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-content>\n          <h6><span [innerHtml]=\"highlight(match.label, term)\"></span></h6>\n          <div class=\"category\">\n            <i class=\"bhi-category-tags\"></i\n            ><span [innerHtml]=\"highlight(match.data.categories || match.data.parentCategory.name, term)\"></span>\n          </div>\n        </item-content>\n      </novo-list-item>\n      <novo-list-item *ngIf=\"limitedTo\"\n        ><div>{{ labels.showingXofXResults(limit, total) }}</div></novo-list-item\n      >\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches.length > 0\"></novo-loading>\n    </novo-list>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n    <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.pickerEmpty }}</p>\n  `,\n})\nexport class SkillsSpecialtyPickerResults extends BasePickerResults {\n  @HostBinding('class.active')\n  active: boolean = true;\n  limitedTo: boolean = false;\n  limit: number = 200;\n  total: number;\n\n  constructor(public element: ElementRef, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n\n  getListElement(): any {\n    return this.element.nativeElement.querySelector('novo-list');\n  }\n\n  /**\n   * @name structureArray\n   * @param collection - the data once getData resolves it\n   *\n   * @description This function structures an array of nodes into an array of objects with a\n   * 'name' field by default.\n   */\n  structureArray(collection: any): any {\n    let data = collection;\n    if (collection.hasOwnProperty('data')) {\n      this.limitedTo = collection.limitedTo200;\n      this.total = collection.total;\n      data = collection.data;\n    } else if (data.length > this.limit) {\n      this.limitedTo = true;\n      this.total = data.length;\n      data = data.slice(0, this.limit);\n    }\n    return super.structureArray(data);\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef, HostBinding } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// Vendor\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\n\n@Component({\n  selector: 'workers-comp-codes-picker-results',\n  template: `\n    <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\">\n      <novo-loading theme=\"line\"></novo-loading>\n    </section>\n    <novo-list direction=\"vertical\" *ngIf=\"matches?.length > 0 && !hasError\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n        [class.disabled]=\"preselected(match)\"\n      >\n        <item-header>\n          <item-title>\n            <span [innerHtml]=\"sanitizeHTML(match?.data?.compensation?.code, match?.data?.compensation?.name)\"></span>\n          </item-title>\n        </item-header>\n        <item-content direction=\"horizontal\">\n          <p>\n            <span class=\"label\">{{ labels.state }}: </span><span>{{ match?.data?.compensation?.state }}</span>\n          </p>\n          <p>\n            <span class=\"label\">{{ labels.rate }}: </span><span>{{ labels.formatCurrency(match?.data?.rate) }}</span>\n          </p>\n        </item-content>\n        <item-content direction=\"horizontal\">\n          <p>\n            <span class=\"label\">{{ labels.startDate }}: </span\n            ><span>{{ labels.formatDateWithFormat(match?.data?.startDate, { year: 'numeric', month: 'numeric', day: 'numeric' }) }}</span>\n          </p>\n          <p>\n            <span class=\"label\">{{ labels.endDate }}: </span\n            ><span>{{ labels.formatDateWithFormat(match?.data?.endDate, { year: 'numeric', month: 'numeric', day: 'numeric' }) }}</span>\n          </p>\n        </item-content>\n      </novo-list-item>\n      <novo-loading theme=\"line\" *ngIf=\"isLoading && matches?.length > 0\"></novo-loading>\n    </novo-list>\n  `,\n})\nexport class WorkersCompCodesPickerResults extends BasePickerResults {\n  @HostBinding('class.active')\n  active: boolean = true;\n  @HostBinding('hidden')\n  get isHidden(): boolean {\n    return this.matches.length === 0;\n  }\n\n  constructor(element: ElementRef, private sanitizer: DomSanitizer, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n    this.sanitizer = sanitizer;\n  }\n\n  getListElement() {\n    return this.element.nativeElement.querySelector('novo-list');\n  }\n\n  sanitizeHTML(compCode: string, name: string) {\n    return this.sanitizer.bypassSecurityTrustHtml(`${compCode} | ${name}`);\n  }\n}\n","// NG2\n// Vendor\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Key } from '../../utils';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\nimport { Helpers } from '../../utils/Helpers';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\nimport { NovoControlConfig } from '../form/FormControls';\nimport { PickerResults } from './extras/picker-results/PickerResults';\n\n// Value accessor for the component (supports ngModel)\nconst PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoPickerElement),\n  multi: true,\n};\n\n/**\n * @description This class is the directive definition of the Picker. If you add and attribute of `picker` to an input,\n * it will create an instance of the picker which wraps the input in all of the picker HTML elements and functionality.\n * Picker should be added as a two-way bound ngModel instance `[(picker)]=\"\"` in order to have the picker options\n * dynamically populate.\n */\n@Component({\n  selector: 'novo-picker',\n  providers: [PICKER_VALUE_ACCESSOR],\n  template: `\n    <i class=\"bhi-more\" *ngIf=\"config?.entityIcon && !_value\"></i>\n    <i class=\"bhi-{{ config?.entityIcon }} entity-icon {{ config?.entityIcon }}\" *ngIf=\"config?.entityIcon && _value\"></i>\n    <input\n      type=\"text\"\n      class=\"picker-input\"\n      [(ngModel)]=\"term\"\n      [class.entity-picker]=\"config?.entityIcon\"\n      [class.entity-selected]=\"config?.entityIcon && _value\"\n      (ngModelChange)=\"checkTerm($event)\"\n      [placeholder]=\"placeholder\"\n      (keydown)=\"onKeyDown($event)\"\n      (focus)=\"onFocus($event)\"\n      (click)=\"onFocus($event)\"\n      (blur)=\"onTouched($event)\"\n      autocomplete=\"off\"\n      #input\n      [disabled]=\"disablePickerInput\"\n    />\n    <i class=\"bhi-search\" *ngIf=\"(!_value || clearValueOnSelect) && !disablePickerInput\"></i>\n    <i\n      class=\"bhi-times\"\n      [class.entity-selected]=\"config?.entityIcon && _value\"\n      *ngIf=\"_value && !clearValueOnSelect && !disablePickerInput\"\n      (click)=\"clearValue(true)\"\n    ></i>\n    <novo-overlay-template class=\"picker-results-container\" [parent]=\"element\" position=\"above-below\" (closing)=\"onOverlayClosed()\">\n      <span #results></span>\n      <ng-content></ng-content>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoPickerElement implements OnInit {\n  // Container for the results\n  @ViewChild('results', { read: ViewContainerRef, static: true })\n  results: ViewContainerRef;\n\n  @Input()\n  config: NovoControlConfig['config'];\n  @Input()\n  placeholder: string;\n  @Input()\n  clearValueOnSelect: boolean;\n  @Input()\n  closeOnSelect: boolean = true;\n  @Input()\n  selected: Array<any> = [];\n  // Deprecated\n  @Input()\n  appendToBody: boolean = false;\n  // Deprecated\n  @Input()\n  parentScrollSelector: string;\n  // Deprecated\n  @Input()\n  parentScrollAction: string = 'close';\n  // Custom class for the dropdown container\n  @Input()\n  containerClass: string;\n  // Side the dropdown will open\n  @Input()\n  side: string = 'left';\n  // Autoselects the first option in the results\n  @Input()\n  autoSelectFirstOption: boolean = true;\n  @Input()\n  overrideElement: ElementRef;\n\n  // Disable from typing into the picker (result template does everything)\n  @Input()\n  set disablePickerInput(v: boolean) {\n    this._disablePickerInput = coerceBooleanProperty(v);\n  }\n\n  get disablePickerInput() {\n    return this._disablePickerInput;\n  }\n\n  private _disablePickerInput: boolean = false;\n\n  // Emitter for selects\n  @Output()\n  changed: EventEmitter<any> = new EventEmitter();\n  @Output()\n  select: EventEmitter<any> = new EventEmitter();\n  @Output()\n  focus: EventEmitter<any> = new EventEmitter();\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter();\n  @Output()\n  typing: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(NovoOverlayTemplateComponent, { static: true })\n  public container: NovoOverlayTemplateComponent;\n  @ViewChild('input', { static: true })\n  private input: ElementRef;\n\n  term: string = '';\n  resultsComponent: any;\n  popup: ComponentRef<any>;\n  _value: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(public element: ElementRef, private componentUtils: ComponentUtils, private ref: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.overrideElement) {\n      this.element = this.overrideElement;\n    }\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    // Custom results template\n    this.resultsComponent = this.config.resultsTemplate || PickerResults;\n    // Get all distinct key up events from the input and only fire if long enough and distinct\n    // let input = this.element.nativeElement.querySelector('input');\n    const pasteObserver = fromEvent(this.input.nativeElement, 'paste').pipe(debounceTime(250), distinctUntilChanged());\n    pasteObserver.subscribe(\n      (event: ClipboardEvent) => this.onDebouncedKeyup(event),\n      (err) => this.hideResults(err),\n    );\n    const keyboardObserver = fromEvent(this.input.nativeElement, 'keyup').pipe(debounceTime(250), distinctUntilChanged());\n    keyboardObserver.subscribe(\n      (event: KeyboardEvent) => this.onDebouncedKeyup(event),\n      (err) => this.hideResults(err),\n    );\n  }\n\n  private onDebouncedKeyup(event: KeyboardEvent | ClipboardEvent) {\n    if ([Key.Escape, Key.ArrowDown, Key.ArrowUp, Key.Enter, Key.Tab].some((key) => key === (event as KeyboardEvent).key)) {\n      return;\n    }\n    this.show((event.target as any).value);\n  }\n\n  public openPanel(): void {\n    this.container.openPanel();\n  }\n\n  public closePanel(): void {\n    this.container.closePanel();\n  }\n\n  public get panelOpen(): boolean {\n    return this.container && this.container.panelOpen;\n  }\n\n  private show(term?: string): void {\n    this.openPanel();\n    // Show the results inside\n    this.showResults(term);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (this.disablePickerInput) {\n      Helpers.swallowEvent(event);\n      return;\n    }\n    if (this.panelOpen && !this.disablePickerInput) {\n      if (event.key === Key.Escape || event.key === Key.Tab) {\n        this.hideResults();\n        return;\n      }\n\n      if (event.key === Key.ArrowUp) {\n        this.popup.instance.prevActiveMatch();\n        this.ref.markForCheck();\n        return;\n      }\n\n      if (event.key === Key.ArrowDown) {\n        this.popup.instance.nextActiveMatch();\n        this.ref.markForCheck();\n        return;\n      }\n\n      if (event.key === Key.Enter) {\n        const activeMatch = this.popup.instance.activeMatch;\n        if (!this.selected.find((selected) => activeMatch && activeMatch.value && selected.value === activeMatch.value)) {\n          this.popup.instance.selectActiveMatch();\n          this.ref.markForCheck();\n        }\n        return;\n      }\n\n      if ((event.key === Key.Backspace || event.key === Key.Delete) && !Helpers.isBlank(this._value)) {\n        this.clearValue(false);\n        this.closePanel();\n      }\n      if (event.key === Key.Delete && Helpers.isBlank(this._value)) {\n        this.clearValue(true);\n      }\n    }\n  }\n\n  clearValue(wipeTerm) {\n    this._value = null;\n    this.select.emit(this._value);\n    this.changed.emit({ value: this._value, rawValue: { label: '', value: this._value } });\n    this.onModelChange(this._value);\n\n    if (wipeTerm) {\n      this.term = '';\n      this.hideResults();\n    }\n    this.ref.markForCheck();\n  }\n\n  /**\n   * @description When the input's focus event is called this method calls the debounced function that displays the\n   * results.\n   */\n  onFocus(event) {\n    if (!this.panelOpen) {\n      this.show();\n    }\n    this.focus.emit(event);\n  }\n\n  // Creates an instance of the results (called popup) and adds all the bindings to that instance.\n  showResults(term?: any) {\n    // Update Matches\n    if (this.popup) {\n      // Update existing list or create the DOM element\n      this.popup.instance.config = this.config;\n      this.popup.instance.term = this.term;\n      this.popup.instance.selected = this.selected;\n      this.popup.instance.autoSelectFirstOption = this.autoSelectFirstOption;\n      this.ref.markForCheck();\n    } else {\n      this.popup = this.componentUtils.append(this.resultsComponent, this.results);\n      this.popup.instance.parent = this;\n      this.popup.instance.config = this.config;\n      this.popup.instance.term = this.term;\n      this.popup.instance.selected = this.selected;\n      this.popup.instance.autoSelectFirstOption = this.autoSelectFirstOption;\n      this.popup.instance.overlay = this.container.overlayRef;\n      this.ref.markForCheck();\n    }\n  }\n\n  // Tells the overlay component to hide the picker results from the DOM without deleting the dynamically allocated popup instance created in\n  // showResults. The popup instance will remain in memory from the first time the results are shown until this component is destroyed.\n  hideResults(err?: any) {\n    this.closePanel();\n    this.ref.markForCheck();\n  }\n\n  // Cleans up listeners for the popup - will get executed no matter how the popup is closed.\n  onOverlayClosed(): void {\n    if (this.popup && this.popup.instance && this.popup.instance.cleanUp) {\n      this.popup.instance.cleanUp();\n    }\n  }\n\n  // get accessor\n  get value() {\n    return this._value;\n  }\n\n  // set accessor including call the onchange callback\n  set value(selected) {\n    if (!selected) {\n      this.term = '';\n      this._value = null;\n      this.onModelChange(this._value);\n    } else if (selected.value !== this._value) {\n      this.term = this.clearValueOnSelect ? '' : selected.label;\n      this._value = selected.value;\n      this.changed.emit({ value: selected.value, rawValue: { label: this.term, value: selected.value } });\n      this.select.emit(selected);\n      this.onModelChange(selected.value);\n      if (this.popup) {\n        this.popup.instance.selected = this.selected;\n      }\n    } else {\n      this.changed.emit({ value: selected.value, rawValue: { label: this.term, value: this._value } });\n      this.select.emit(selected);\n    }\n    this.ref.markForCheck();\n  }\n\n  // Makes sure to clear the model if the user clears the text box\n  checkTerm(event) {\n    this.typing.emit(event);\n    if (!event || !event.length) {\n      this._value = null;\n      this.onModelChange(this._value);\n    }\n    this.ref.markForCheck();\n  }\n\n  // Set touched on blur\n  onTouched(event?: Event) {\n    this.onModelTouched();\n    this.blur.emit(event);\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (this.clearValueOnSelect) {\n      this.term = '';\n    } else {\n      if (typeof value === 'string' && !this.config.useGetLabels) {\n        this.term = value;\n      } else if (value && value.label) {\n        this.term = value.label;\n      } else if (value && value.firstName) {\n        this.term = `${value.firstName} ${value.lastName}`;\n      } else if (value && value.name) {\n        this.term = value.name;\n      } else if (typeof this.config.getLabels === 'function') {\n        this.config.getLabels(value).then((result) => {\n          if (result) {\n            this.term = result.length ? result[0].label || '' : result.label || '';\n          } else {\n            this.term = value;\n          }\n          this.ref.markForCheck();\n        });\n      } else if (value && value.title) {\n        this.term = value.title;\n      } else {\n        this.term = value || '';\n      }\n    }\n    this._value = value;\n    this.ref.markForCheck();\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disablePickerInput = disabled;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// APP\nimport { NovoCommonModule } from '../common';\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoListModule } from '../list/List.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoSwitchModule } from '../switch/Switch.module';\nimport { ChecklistPickerResults } from './extras/checklist-picker-results/ChecklistPickerResults';\nimport { DistributionListPickerResults } from './extras/distributionlist-picker-results/DistributionListPickerResults';\nimport { EntityPickerResult, EntityPickerResults } from './extras/entity-picker-results/EntityPickerResults';\nimport { GroupedMultiPickerResults } from './extras/grouped-multi-picker-results/GroupedMultiPickerResults';\nimport { MixedMultiPickerResults } from './extras/mixed-multi-picker-results/MixedMultiPickerResults';\nimport { PickerResults } from './extras/picker-results/PickerResults';\nimport { SkillsSpecialtyPickerResults } from './extras/skills-picker-results/SkillsSpecialtyPickerResults';\nimport { WorkersCompCodesPickerResults } from './extras/workers-comp-codes-picker-results/WorkersCompCodesPickerResults';\nimport { NovoPickerElement } from './Picker';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoCommonModule, NovoLoadingModule, NovoListModule, NovoOverlayModule, NovoSwitchModule],\n  declarations: [\n    NovoPickerElement,\n    PickerResults,\n    EntityPickerResult,\n    EntityPickerResults,\n    ChecklistPickerResults,\n    GroupedMultiPickerResults,\n    MixedMultiPickerResults,\n    DistributionListPickerResults,\n    WorkersCompCodesPickerResults,\n    SkillsSpecialtyPickerResults,\n  ],\n  exports: [\n    NovoPickerElement,\n    PickerResults,\n    EntityPickerResult,\n    EntityPickerResults,\n    ChecklistPickerResults,\n    GroupedMultiPickerResults,\n    MixedMultiPickerResults,\n    DistributionListPickerResults,\n    WorkersCompCodesPickerResults,\n    SkillsSpecialtyPickerResults,\n  ],\n})\nexport class NovoPickerModule {}\n","// NG2\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  NgZone,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\n// APP\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\n\n// Value accessor for the component (supports ngModel)\nconst SEARCH_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoSearchBoxElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-search',\n  providers: [SEARCH_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <!-- SEARCH ICON -->\n    <novo-icon (click)=\"showSearch($event)\" [tooltip]=\"hint\" tooltipPosition=\"bottom\">{{ icon }}</novo-icon>\n    <!-- SEARCH INPUT -->\n    <input\n      type=\"text\"\n      [attr.name]=\"name\"\n      [attr.value]=\"displayValue\"\n      [attr.placeholder]=\"placeholder\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur()\"\n      (keydown)=\"_handleKeydown($event)\"\n      (input)=\"_handleInput($event)\"\n      #input\n      data-automation-id=\"novo-search-input\"\n    />\n    <!-- SEARCH OVERLAY -->\n    <novo-overlay-template\n      [parent]=\"element\"\n      [closeOnSelect]=\"closeOnSelect\"\n      [position]=\"position\"\n      (select)=\"closePanel()\"\n      (closing)=\"onBlur()\"\n    >\n      <ng-content></ng-content>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoSearchBoxElement implements ControlValueAccessor {\n  @Input()\n  public name: string;\n  @Input()\n  public icon: string = 'search';\n  @Input()\n  public position: string = 'bottom-left';\n  @Input()\n  public placeholder: string = 'Search...';\n  @Input()\n  @HostBinding('class.always-open')\n  public alwaysOpen: boolean = false;\n  @Input()\n  public theme: string;\n  @Input()\n  public color: string = 'positive';\n  @Input()\n  public closeOnSelect: boolean = true;\n  @Input()\n  public displayField: string;\n  @Input()\n  public displayValue: string;\n  @Input()\n  public hint: string;\n  @Output()\n  public searchChanged: EventEmitter<string> = new EventEmitter<string>();\n  @HostBinding('class.focused')\n  focused: boolean = false;\n  public value: any;\n\n  /** View -> model callback called when value changes */\n  _onChange: (value: any) => void = () => {};\n  /** View -> model callback called when autocomplete has been touched */\n  _onTouched = () => {};\n\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: any;\n  @ViewChild('input', { static: true })\n  input: any;\n\n  private debounceSearchChange: any;\n\n  constructor(\n    public element: ElementRef,\n    public labels: NovoLabelService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _zone: NgZone,\n  ) {}\n\n  /**\n   * @name showFasterFind\n   * @description This function shows the picker and adds the active class (for animation)\n   */\n  showSearch(event?: any, forceClose: boolean = false) {\n    if (!this.panelOpen) {\n      // Reset search\n      // Set focus on search\n      setTimeout(() => {\n        const element = this.input.nativeElement;\n        if (element) {\n          element.focus();\n        }\n      }, 10);\n    } else {\n      this.closePanel();\n    }\n  }\n  onFocus() {\n    this._zone.run(() => {\n      this.focused = true;\n      this.openPanel();\n    });\n  }\n  onBlur() {\n    this.focused = false;\n  }\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(): void {\n    this.overlay.openPanel();\n  }\n  closePanel(): void {\n    setTimeout(() => this.overlay.closePanel());\n  }\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n  @HostBinding('class.active')\n  get active(): boolean {\n    return this.panelOpen || this.alwaysOpen;\n  }\n  /** END: Convenient Panel Methods. */\n\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.key === Key.Escape || event.key === Key.Enter || event.key === Key.Tab) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n  _handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      this.value = (event.target as HTMLInputElement).value;\n      this._onChange((event.target as HTMLInputElement).value);\n\n      if (this.debounceSearchChange) {\n        clearTimeout(this.debounceSearchChange);\n      }\n      this.debounceSearchChange = setTimeout(() => {\n        this.searchChanged.emit((event.target as HTMLInputElement).value);\n      }, 400);\n    }\n  }\n  writeValue(value: any): void {\n    this._setValue(value);\n  }\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n  private _setValue(value: any): void {\n    this.value = value;\n    let toDisplay = value;\n    if (value && this.displayField) {\n      toDisplay = value.hasOwnProperty(this.displayField) ? value[this.displayField] : value;\n    }\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    this.displayValue = toDisplay ? toDisplay : '';\n    this.input.nativeElement.value = this.displayValue;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  public setValueAndClose(event: any | null): void {\n    if (event && event.value) {\n      this._setValue(event.value);\n      this._onChange(event.value);\n    }\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearValue(skip: any) {\n    this.writeValue(null);\n    this._onChange(null);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoIconModule } from '../icon';\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoTooltipModule } from './../tooltip/Tooltip.module';\nimport { NovoSearchBoxElement } from './SearchBox';\n@NgModule({\n  imports: [CommonModule, NovoIconModule, NovoPickerModule, NovoTooltipModule, NovoOverlayModule],\n  declarations: [NovoSearchBoxElement],\n  exports: [NovoSearchBoxElement],\n})\nexport class NovoSearchBoxModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoOptionModule } from '../common';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoSearchBoxModule } from '../search/SearchBox.module';\nimport { BreadcrumbElement } from './Breadcrumb';\nimport { BreadcrumbItemElement } from './breadcrumb-item/BreadcrumbItem';\nimport { BreadcrumbService } from './Breadcrumb.service';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, NovoDropdownModule, NovoSearchBoxModule, NovoButtonModule, NovoIconModule, NovoOptionModule],\n  exports: [BreadcrumbElement, BreadcrumbItemElement],\n  declarations: [BreadcrumbElement, BreadcrumbItemElement],\n  providers: [BreadcrumbService],\n})\nexport class NovoBreadcrumbModule {}\n","import { FactoryProvider, Injectable, InjectionToken, Optional, SkipSelf } from '@angular/core';\nimport { isSameDay } from 'date-fns';\nimport type { DateLike, NovoDateSelectionStrategy } from '../../date-picker/date-picker.types';\n\n/** Injection token used to customize the date range selection behavior. */\nexport const NOVO_DATE_SELECTION_STRATEGY = new InjectionToken<NovoDateSelectionStrategy>('NOVO_DATE_SELECTION_STRATEGY');\n\n/** Provides the default date selection behavior. Single Date */\n@Injectable()\nexport class DefaultDateSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  selectionFinished(date: DateLike | null, currentValue: DateLike[], event: Event): DateLike[] {\n    return [date];\n  }\n\n  createPreview(activeDate: DateLike | null, [currentDate]: DateLike[]) {\n    return [activeDate];\n  }\n\n  isSelected(activeDate: DateLike | null, [currentDate]: DateLike[]) {\n    return isSameDay(activeDate, currentDate);\n  }\n}\n\n/** @docs-private */\nexport function NOVO_DATE_SELECTION_STRATEGY_PROVIDER_FACTORY(parent: NovoDateSelectionStrategy<unknown>) {\n  return parent || new DefaultDateSelectionStrategy();\n}\n\n/** @docs-private */\nexport const NOVO_DATE_SELECTION_STRATEGY_PROVIDER: FactoryProvider = {\n  provide: NOVO_DATE_SELECTION_STRATEGY,\n  deps: [[new Optional(), new SkipSelf(), NOVO_DATE_SELECTION_STRATEGY]],\n  useFactory: NOVO_DATE_SELECTION_STRATEGY_PROVIDER_FACTORY,\n};\n","import { Injectable } from '@angular/core';\nimport type { DateLike, NovoDateSelectionStrategy } from '../../date-picker/date-picker.types';\n\n@Injectable()\nexport class MultiDateSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  selectionFinished(dateLike: DateLike | null, currentValue: DateLike[], event: Event): DateLike[] {\n    const date = dateLike as Date;\n    const current = new Set(currentValue.map((c: Date) => c.getTime()));\n    if (current.has(date.getTime())) {\n      current.delete(date.getTime());\n    } else {\n      current.add(date.getTime());\n    }\n    return [...current].map((c) => new Date(c));\n  }\n\n  createPreview(activeDate: DateLike | null, currentValue: DateLike[]) {\n    return [activeDate];\n  }\n\n  isSelected(activeDate: DateLike | null, currentValue: DateLike[]) {\n    return currentValue && currentValue.includes(activeDate);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { differenceInCalendarDays, isWithinRange } from 'date-fns';\nimport type { DateLike, NovoDateSelectionStrategy } from '../../date-picker/date-picker.types';\n\n@Injectable()\nexport class RangeSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  selectionFinished(date: DateLike, currentRange: DateLike[]) {\n    let [start, end] = currentRange;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null && date && differenceInCalendarDays(date, start) >= 0) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    return [start, end];\n  }\n\n  createPreview(activeDate: DateLike | null, currentRange: DateLike[]) {\n    let start: DateLike | null = null;\n    let end: DateLike | null = null;\n    const [currStart, currEnd] = currentRange;\n\n    if (currStart && !currEnd && activeDate) {\n      start = currStart;\n      end = activeDate;\n    }\n\n    return [start, end];\n  }\n\n  isSelected(activeDate: DateLike | null, currentRange: DateLike[]) {\n    const [start, end] = currentRange;\n    return isWithinRange(activeDate, start, end);\n  }\n}\n","import { endOfWeek, isWithinRange, startOfWeek } from 'date-fns';\nimport type { DateLike, NovoDateSelectionStrategy } from '../../date-picker/date-picker.types';\n\nexport class WeekSelectionStrategy implements NovoDateSelectionStrategy<DateLike[]> {\n  constructor(private weekStartsOn: number = 0) {}\n\n  selectionFinished(date: DateLike | null): DateLike[] {\n    return this._createWeekRange(date);\n  }\n\n  createPreview(activeDate: DateLike | null): DateLike[] {\n    return this._createWeekRange(activeDate);\n  }\n\n  private _createWeekRange(date: DateLike | null): DateLike[] {\n    if (date) {\n      const { weekStartsOn } = this;\n      const start = startOfWeek(date as DateLike, { weekStartsOn });\n      const end = endOfWeek(date as DateLike, { weekStartsOn });\n      return [start, end];\n    }\n\n    return [null, null];\n  }\n\n  isSelected(activeDate: DateLike | null, currentRange: DateLike[]) {\n    const [start, end] = currentRange;\n    return isWithinRange(activeDate, start, end);\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// Vendor\nimport { addMonths, isDate, isSameDay, setMonth, setYear, startOfDay, startOfMonth, subMonths } from 'date-fns';\nimport { NovoLabelService } from '../../services/novo-label-service';\n// APP\nimport { Helpers } from '../../utils/Helpers';\nimport type {\n  DatePickerSelectModes,\n  NovoDateSelectEvent,\n  NovoDateSelectionStrategy,\n  NovoMonthSelectEvent,\n  NovoYearSelectEvent,\n  OverlayDate,\n} from '../date-picker/date-picker.types';\nimport { DefaultDateSelectionStrategy, MultiDateSelectionStrategy, RangeSelectionStrategy, WeekSelectionStrategy } from './strategies';\n\n@Component({\n  selector: 'novo-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n})\nexport class NovoCalendarElement implements OnInit {\n  @Input()\n  minYear: string | number;\n  @Input()\n  maxYear: string | number;\n  @Input()\n  minDate: string | number;\n  @Input()\n  maxDate: string | number;\n  // Default view mode (select days)\n  @Input()\n  activeView: string = 'days';\n  @Input()\n  layout: string = 'horizontal';\n\n  _selected: Date[] = [];\n  @Input()\n  get selected(): Date[] {\n    return this._selected;\n  }\n  set selected(value) {\n    this._selected = value ? value.filter(isDate).map((d) => startOfDay(d)) : [];\n  }\n  @Output()\n  selectedChange: EventEmitter<Date[]> = new EventEmitter();\n  @Input()\n  preview: Date[] = [];\n  @Output()\n  previewChange: EventEmitter<Date[]> = new EventEmitter();\n  @Output()\n  activeDateChange: EventEmitter<Date> = new EventEmitter();\n\n  @Input()\n  overlays: OverlayDate[] = [];\n  @Input()\n  disabledDateMessage: string;\n\n  _activeDate: Date = new Date();\n  _mode: DatePickerSelectModes = 'single';\n  _numberOfMonths: number[] = [0];\n  _weekStartsOn: number = 0;\n  _strategy: NovoDateSelectionStrategy<any> = new DefaultDateSelectionStrategy();\n\n  months: any;\n\n  @Input()\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n  set activeDate(value) {\n    if (!isSameDay(value, this._activeDate)) {\n      this._activeDate = value;\n      this.activeDateChange.next(value);\n      this.updateView(value);\n    }\n  }\n\n  @Input()\n  get weekStartsOn(): number {\n    return this._weekStartsOn;\n  }\n  set weekStartsOn(value) {\n    this._weekStartsOn = value;\n    if (this.mode === 'week') {\n      this._strategy = new WeekSelectionStrategy(this.weekStartsOn);\n    }\n  }\n\n  @Input()\n  get numberOfMonths(): number {\n    return this._numberOfMonths.length;\n  }\n  set numberOfMonths(value) {\n    this._numberOfMonths = Array.from(Array(Number(value)).keys());\n    this.updateView(this.activeDate);\n  }\n\n  @Input()\n  get mode(): DatePickerSelectModes {\n    return this._mode;\n  }\n  set mode(value) {\n    if (this._mode !== value) {\n      this._mode = value;\n      switch (value) {\n        case 'multiple':\n          this._strategy = new MultiDateSelectionStrategy();\n          break;\n        case 'range':\n          this._strategy = new RangeSelectionStrategy();\n          break;\n        case 'week':\n          this._strategy = new WeekSelectionStrategy(this.weekStartsOn);\n          break;\n        case 'single':\n        default:\n          this._strategy = new DefaultDateSelectionStrategy();\n          break;\n      }\n    }\n  }\n\n  @HostBinding('style.width')\n  get hb_width() {\n    if (this.layout === 'vertical') {\n      return this._sanitizer.bypassSecurityTrustStyle(`min-content`);\n    }\n    return this._sanitizer.bypassSecurityTrustStyle(`min-content`);\n  }\n\n  @HostBinding('class.layout-horizontal')\n  get hb_horiztonal() {\n    return this.layout !== 'vertical';\n  }\n\n  @HostBinding('class.layout-vertical')\n  get hb_vertical() {\n    return this.layout === 'vertical';\n  }\n\n  constructor(\n    public labels: NovoLabelService,\n    private element: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private _sanitizer: DomSanitizer,\n  ) {}\n\n  ngOnInit() {\n    if (!this.activeDate) {\n      this.activeDate = this.selected.length ? this.selected[0] : new Date();\n    }\n    this.updateView(this.activeDate);\n  }\n\n  updateView(activeDate: Date) {\n    this.activeDate = new Date(activeDate ? new Date(activeDate) : new Date());\n    this.months = [];\n    const month = startOfMonth(this.activeDate);\n    for (const i of this._numberOfMonths) {\n      const date = addMonths(month, i);\n      const label = this.labels.formatDateWithFormat(date, { month: 'short' });\n      this.months.push({ date, label });\n    }\n  }\n\n  setToday() {\n    const tmp = new Date();\n    this.updateView(tmp);\n    // Go back to days\n    this.openView(null, 'days');\n  }\n\n  monthSelected({ event, month }: NovoMonthSelectEvent): void {\n    const date = this.activeDate ? this.activeDate : new Date().getMonth();\n    const tmp = setMonth(date, month);\n    this.updateView(tmp);\n    // Go back to days\n    this.openView(null, 'days');\n  }\n\n  yearSelected({ event, year }: NovoYearSelectEvent): void {\n    const date = this.activeDate ? this.activeDate : new Date();\n    const tmp = setYear(date, year);\n    this.updateView(tmp);\n    // Go back to days\n    this.openView(null, 'days');\n  }\n\n  dateSelected({ event, day }: NovoDateSelectEvent) {\n    // Helpers.swallowEvent(event);\n    this.selected = this._strategy.selectionFinished(day.date, this.selected, event);\n    this.selectedChange.emit(this.selected);\n    this.cdr.markForCheck();\n  }\n\n  updatePreview({ event, day }: NovoDateSelectEvent) {\n    this.preview = this._strategy.createPreview(day.date, this.selected, event);\n    this.previewChange.emit(this.preview);\n  }\n\n  prevMonth(event: Event): void {\n    Helpers.swallowEvent(event);\n    const tmp = subMonths(this.activeDate, 1);\n    this.updateView(tmp);\n  }\n\n  nextMonth(event: Event): void {\n    Helpers.swallowEvent(event);\n    const tmp = addMonths(this.activeDate, 1);\n    this.updateView(tmp);\n  }\n\n  openView(event: Event, type: string) {\n    Helpers.swallowEvent(event);\n\n    // If they click the toggle two time in a row, close it (go back to days)\n    if (type === this.activeView) {\n      this.activeView = 'days';\n    } else {\n      this.activeView = type;\n    }\n\n    // Make sure to scroll the selected one into view\n    if (this.activeView === 'years' || this.activeView === 'months') {\n      setTimeout(() => {\n        const container = this.element.nativeElement.querySelector(`.calendar-content.${this.activeView}`);\n        const selectedItem = this.element.nativeElement.querySelector(\n          `.calendar-content.${this.activeView} .${this.activeView === 'years' ? 'year' : 'month'}.selected`,\n        );\n        if (container && selectedItem) {\n          container.scrollTop = selectedItem.offsetTop - 100;\n        }\n      });\n    }\n  }\n\n  _isRange() {\n    return ['week', 'range'].includes(this.mode);\n  }\n}\n","// NG2\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { getMonth } from 'date-fns';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport type { DateLike } from '../../date-picker/date-picker.types';\n\n@Component({\n  selector: 'novo-month-select',\n  templateUrl: './month-select.component.html',\n  styleUrls: ['./month-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoMonthSelectElement implements OnInit {\n  @Input()\n  activeDate: DateLike = new Date();\n  @Input()\n  selected: DateLike[] = [];\n\n  // Select callback for output\n  @Output()\n  select: EventEmitter<any> = new EventEmitter(false);\n\n  // List of all months\n  monthNames: string[] = this.labels.getMonths();\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {}\n\n  onSelect(event: Event, month: number) {\n    // Helpers.swallowEvent(event);\n    this.select.next({ event, month });\n  }\n\n  _isActive(month: number) {\n    return this.activeDate && month === getMonth(this.activeDate);\n  }\n\n  _isSelected(month: number) {\n    return this.selected && month === getMonth(this.selected[0]);\n  }\n}\n","// NG2\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// Vendor\nimport { addDays, isAfter, isBefore, isSameDay, isToday, startOfMonth, startOfWeek } from 'date-fns';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { BooleanInput } from '../../../utils';\nimport type { DateLike, Day, OverlayDate } from '../../date-picker/date-picker.types';\n\n@Component({\n  selector: 'novo-month-view',\n  templateUrl: './month-view.component.html',\n  styleUrls: ['./month-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoMonthViewElement implements OnInit {\n  @Input()\n  minDate: Date;\n  @Input()\n  maxDate: Date;\n  @Input()\n  activeDate: Date = new Date();\n  // Weekstart must be 0-6 (Sunday - Saturday)\n  @Input()\n  selected: DateLike[] = [];\n  @Input()\n  preview: DateLike[] = [];\n  @Input()\n  overlays: OverlayDate[] = [];\n  @Input()\n  disabledDateMessage: string;\n\n  @Input()\n  @BooleanInput()\n  isRange: boolean = false;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.hide-overflow-days')\n  public hideOverflowDays: boolean = false;\n\n  _weekStartsOn: number = 0;\n\n  @Input()\n  get weekStartsOn(): number {\n    return this._weekStartsOn;\n  }\n  set weekStartsOn(value) {\n    this._weekStartsOn = value;\n    this.weekdays = this.labels.getWeekdays(value);\n    this.updateView(this.activeDate);\n  }\n\n  // Select callback for output\n  @Output()\n  select: EventEmitter<any> = new EventEmitter(false);\n  // Select callback for output\n  @Output()\n  hover: EventEmitter<any> = new EventEmitter(false);\n\n  // List of all the weekdays\n  weekdays: string[] = this.labels.getWeekdays(this.weekStartsOn);\n  // List of all months\n  monthNames: string[] = this.labels.getMonths();\n\n  monthLabel: string;\n  weeks: any;\n\n  constructor(\n    public labels: NovoLabelService,\n    private element: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private _sanitizer: DomSanitizer,\n  ) {}\n\n  ngOnInit() {\n    // Set labels\n    this.updateView(this.activeDate);\n  }\n\n  updateView(date: Date) {\n    this.monthLabel = this.labels.formatDateWithFormat(this.activeDate, { month: 'short' });\n    this.buildMonth(this.activeDate);\n  }\n\n  onSelect(event: Event, day: Day) {\n    // Helpers.swallowEvent(event);\n    this.select.next({ event, day });\n    this.cdr.markForCheck();\n  }\n\n  onHover(event: Event, day: Day): void {\n    this.isRange && this.hover.next({ event, day });\n  }\n\n  buildMonth(month: Date) {\n    // Reset the weeks\n    this.weeks = [];\n    const start = startOfMonth(month);\n\n    // House keeping variables to know when we are done building the month\n    let done = false,\n      date = startOfWeek(start, { weekStartsOn: this.weekStartsOn }),\n      monthIndex = date.getMonth(),\n      count = 0;\n\n    while (!done) {\n      // Build the days for the weeks\n      this.weeks.push({ days: this.buildWeek(new Date(date.getTime()), month) });\n\n      // Increment variables for the next iteration\n      date = addDays(date, 7);\n      done = count++ > 2 && monthIndex !== date.getMonth();\n      monthIndex = date.getMonth();\n    }\n  }\n\n  buildWeek(date: Date, month: Date): Array<Object> {\n    // Build out of the days of the week\n    const days = [];\n    // Iterate over the days of the week\n    for (let i = 0; i < 7; i++) {\n      // Push a variable on the day array with lots of helpers to make the template easier\n      days.push({\n        name: this.weekdays[i],\n        number: date.getDate(),\n        isToday: isToday(date),\n        date,\n      });\n\n      // Increment for the next iteration\n      date = addDays(date, 1);\n    }\n\n    return days;\n  }\n\n  isDisabled(day: DateLike) {\n    return (this.minDate && isBefore(day, this.minDate)) || (this.maxDate && isAfter(day, this.maxDate));\n  }\n\n  /** Returns whether a cell should be marked as selected. */\n  _isSelected(value: DateLike) {\n    return this.selected && this.selected.find((d) => isSameDay(d, value));\n  }\n\n  /** Returns whether a cell should be marked as preview. */\n  _isPreview(value: DateLike) {\n    return this.preview && this.preview.find((d) => isSameDay(d, value));\n  }\n\n  /** Returns whether a cell should be marked as an overlay. */\n  _isOverlay(value: DateLike) {\n    return this.overlays && this.overlays.find((o) => isSameDay(o.date, value));\n  }\n\n  /** Returns whether a cell should be marked as an overlay. */\n  _hasOverlayType(value: DateLike) {\n    let overlay = this.overlays && this.overlays.find((o) => isSameDay(o.date, value));\n    return overlay ? overlay.type : null;\n  }\n\n  /** Gets whether a value is the start of the main range. */\n  _isRangeStart(value: DateLike) {\n    return isStart(value, this.selected, this.isRange);\n  }\n\n  /** Gets whether a value is the end of the main range. */\n  _isRangeEnd(value: DateLike) {\n    return isEnd(value, this.selected, this.isRange);\n  }\n\n  /** Gets whether a value is within the currently-selected range. */\n  _isInRange(value: DateLike): boolean {\n    return isInRange(value, this.selected, this.isRange);\n  }\n\n  /** Gets whether a value is the start of the preview range. */\n  _isPreviewStart(value: DateLike) {\n    return isStart(value, this.preview, this.isRange);\n  }\n\n  /** Gets whether a value is the end of the preview range. */\n  _isPreviewEnd(value: DateLike) {\n    return isEnd(value, this.preview, this.isRange);\n  }\n\n  /** Gets whether a value is inside the preview range. */\n  _isInPreview(value: DateLike) {\n    return isInRange(value, this.preview, this.isRange);\n  }\n}\n\n/** Checks whether a value is the start of a range. */\nfunction isStart(value: DateLike, range: DateLike[] | null, rangeEnabled: boolean): boolean {\n  const [start, end] = range ?? [];\n  return rangeEnabled && end !== null && !isSameDay(start, end) && value < end && isSameDay(value, start);\n}\n\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value: DateLike, range: DateLike[] | null, rangeEnabled: boolean): boolean {\n  const [start, end] = range ?? [];\n  return rangeEnabled && start !== null && !isSameDay(start, end) && value >= start && isSameDay(value, end);\n}\n\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value: DateLike, range: DateLike[] | null, rangeEnabled: boolean): boolean {\n  const [start, end] = range ?? [];\n  return rangeEnabled && start !== null && end !== null && !isSameDay(start, end) && value >= start && value <= end;\n}\n","// NG2\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { getYear } from 'date-fns';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport type { DateLike } from '../../date-picker/date-picker.types';\n\n@Component({\n  selector: 'novo-year-select',\n  templateUrl: './year-select.component.html',\n  styleUrls: ['./year-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoYearSelectElement implements OnInit {\n  @Input()\n  minYear: string | number;\n  @Input()\n  maxYear: string | number;\n\n  @Input()\n  activeDate: DateLike = new Date();\n  @Input()\n  selected: DateLike[] = [];\n  // Select callback for output\n  @Output()\n  select: EventEmitter<any> = new EventEmitter(false);\n\n  // List of all years (generated in ngOnInit)\n  years: Array<any> = [];\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {\n    // Determine the year array\n    const now = new Date();\n    const start = this.minYear ? Number(this.minYear) : now.getFullYear() - 100;\n    const end = this.maxYear ? Number(this.maxYear) : now.getFullYear() + 10;\n    const years = [];\n    for (let i = start; i <= end; i++) {\n      years.push(i);\n    }\n    this.years = years.reverse();\n  }\n\n  onSelect(event: Event, year: number) {\n    // Helpers.swallowEvent(event);\n    this.select.next({ event, year });\n  }\n\n  _isActive(year: number) {\n    return this.activeDate && year === getYear(this.activeDate);\n  }\n\n  _isSelected(year: number) {\n    return this.selected && year === getYear(this.selected[0]);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// Vendor\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NovoPipesModule } from '../../pipes/Pipes.module';\n// APP\nimport { NovoButtonModule } from '../button';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoCalendarElement } from './calendar.component';\nimport { NovoMonthSelectElement } from './month-select/month-select.component';\nimport { NovoMonthViewElement } from './month-view/month-view.component';\nimport { NovoYearSelectElement } from './year-select/year-select.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoButtonModule, NovoPipesModule, TextMaskModule, NovoIconModule],\n  declarations: [NovoMonthViewElement, NovoMonthSelectElement, NovoYearSelectElement, NovoCalendarElement],\n  exports: [NovoMonthViewElement, NovoMonthSelectElement, NovoYearSelectElement, NovoCalendarElement],\n})\nexport class NovoCalendarModule {}\n","// NG2\nimport { Component, Directive, EventEmitter, HostBinding, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n// APP\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { BooleanInput } from '../../utils';\n\n@Component({\n  selector: 'novo-card-actions',\n  template: '<ng-content></ng-content>',\n})\nexport class CardActionsElement {}\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n */\n@Directive({\n  selector: 'novo-card-content, [novo-card-content], [novoCardContent]',\n  host: { class: 'novo-card-content', '[class.condensed]': 'condensed' },\n})\nexport class CardContentElement {\n  @Input() @BooleanInput() condensed: boolean = false;\n}\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n */\n@Component({\n  selector: 'novo-card-header, [novo-card-header], [novoCardHeader]',\n  host: { class: 'novo-card-header' },\n  template: `\n    <ng-content select=\"novo-avatar, [novo-avatar], novo-icon\"></ng-content>\n    <div class=\"novo-card-header-text\">\n      <ng-content select=\"novo-title, [novo-title], novo-text, novo-label, novo-caption\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n    <div class=\"novo-card-header-actions\">\n      <ng-content select=\"novo-action\"></ng-content>\n    </div>\n  `,\n})\nexport class CardHeaderElement {}\n\n@Directive({\n  selector: 'novo-card-footer, [novo-card-footer], [novoCardFooter]',\n  host: { class: 'novo-card-footer' },\n})\nexport class CardFooterElement {}\n\n@Component({\n  selector: 'novo-card',\n  host: {\n    class: 'novo-card',\n    '[attr.data-automation-id]': 'cardAutomationId',\n    '[class.loading]': 'loading || config.loading',\n  },\n  template: `\n    <!--Loading-->\n    <div class=\"card-loading-container\" *ngIf=\"loading || config.loading\">\n      <novo-loading theme=\"line\" [attr.data-automation-id]=\"cardAutomationId + '-loading'\"></novo-loading>\n    </div>\n    <!--Card Header-->\n    <header *ngIf=\"title || config.title\">\n      <div class=\"title\">\n        <!--Grabber Icon-->\n        <novo-icon\n          *ngIf=\"move || config.move\"\n          tooltip=\"{{ labels.move }}\"\n          tooltipPosition=\"bottom-right\"\n          [attr.data-automation-id]=\"cardAutomationId + '-move'\"\n          >move</novo-icon\n        >\n        <!--Card Title-->\n        <h3 [attr.data-automation-id]=\"cardAutomationId + '-title'\">\n          <span [tooltip]=\"iconTooltip\" tooltipPosition=\"right\"><i *ngIf=\"icon\" [ngClass]=\"iconClass\"></i></span>\n          {{ title || config.title }}\n        </h3>\n      </div>\n      <!--Card Actions-->\n      <div class=\"actions\" [attr.data-automation-id]=\"cardAutomationId + '-actions'\">\n        <ng-content select=\"novo-card-actions\"></ng-content>\n        <novo-button\n          theme=\"icon\"\n          icon=\"refresh\"\n          (click)=\"toggleRefresh()\"\n          *ngIf=\"refresh || config.refresh\"\n          [attr.data-automation-id]=\"cardAutomationId + '-refresh'\"\n          tooltip=\"{{ labels.refresh }}\"\n          tooltipPosition=\"bottom-left\"\n        ></novo-button>\n\n        <novo-button\n          theme=\"icon\"\n          icon=\"close-o\"\n          (click)=\"toggleClose()\"\n          *ngIf=\"close || config.close\"\n          [attr.data-automation-id]=\"cardAutomationId + '-close'\"\n          tooltip=\"{{ labels.close }}\"\n          tooltipPosition=\"bottom-left\"\n        ></novo-button>\n      </div>\n    </header>\n    <!--Content (transcluded)-->\n    <ng-content *ngIf=\"!(loading || config.loading) && !(message || config.message)\"></ng-content>\n    <!--Error/Empty Message-->\n    <p\n      class=\"card-message\"\n      *ngIf=\"!(loading || config.loading) && (message || config.message)\"\n      [attr.data-automation-id]=\"cardAutomationId + '-message'\"\n    >\n      <i *ngIf=\"messageIconClass\" [ngClass]=\"messageIconClass\"></i> <span [innerHtml]=\"message || config.message\"></span>\n    </p>\n    <!--Card Footer-->\n    <ng-content\n      *ngIf=\"!(loading || config.loading) && !(message || config.message)\"\n      select=\"footer,novo-card-footer,[novo-card-footer],[novoCardFooter]\"\n    ></ng-content>\n  `,\n})\nexport class CardElement implements OnChanges, OnInit {\n  @Input()\n  padding: boolean = true;\n  @Input()\n  config: any = {};\n  @Input()\n  title: string;\n  @Input()\n  message: string;\n  @Input()\n  messageIcon: string;\n  @Input()\n  icon: string;\n  @Input()\n  iconTooltip: string;\n  @Input()\n  refresh: boolean;\n  @Input()\n  close: boolean;\n  @Input()\n  move: boolean;\n  @Input()\n  loading: boolean;\n\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.novo-card-inline')\n  inline: boolean;\n\n  @Input()\n  inset: string = 'none';\n  @HostBinding('class')\n  get hbInset() {\n    return `novo-card-inset-${this.inset}`;\n  }\n\n  @Output()\n  onClose: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onRefresh: EventEmitter<any> = new EventEmitter();\n\n  cardAutomationId: string;\n  labels: NovoLabelService;\n  iconClass: string | null;\n  messageIconClass: string;\n\n  constructor(labels: NovoLabelService) {\n    this.labels = labels;\n  }\n\n  ngOnInit() {\n    this.config = this.config || {};\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    this.config = this.config || {};\n    this.cardAutomationId = `${(this.title || this.config.title || 'no-title').trim().toLowerCase().replace(/\\s/g, '-')}-card`;\n\n    const newIcon: string = this.icon || this.config.icon;\n    const newMessageIcon: string = this.messageIcon || this.config.messageIcon;\n    this.iconClass = newIcon ? `bhi-${newIcon}` : null;\n    this.messageIconClass = newMessageIcon ? `bhi-${newMessageIcon}` : null;\n  }\n\n  toggleClose() {\n    if (!this.config.onClose) {\n      this.onClose.next();\n    } else {\n      this.config.onClose();\n    }\n  }\n\n  toggleRefresh() {\n    if (!this.config.onRefresh) {\n      this.onRefresh.next();\n    } else {\n      this.config.onRefresh();\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoIconModule } from '../icon';\n// APP\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { CardActionsElement, CardContentElement, CardElement, CardFooterElement, CardHeaderElement } from './Card';\n\n@NgModule({\n  imports: [CommonModule, NovoIconModule, NovoButtonModule, NovoLoadingModule, NovoTooltipModule],\n  declarations: [CardElement, CardActionsElement, CardContentElement, CardHeaderElement, CardFooterElement],\n  exports: [CardElement, CardActionsElement, CardContentElement, CardHeaderElement, CardFooterElement],\n})\nexport class NovoCardModule {}\n","// NG2\nimport { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// APP\nimport { OutsideClick } from '../../utils/outside-click/OutsideClick';\n\n@Component({\n  selector: 'novo-category-dropdown',\n  template: `\n    <ng-content select=\"button\"></ng-content>\n    <div class=\"dropdown-container\" *ngIf=\"active\">\n      <div class=\"novo-category-dropdown-search\" *ngIf=\"search\" data-automation-id=\"novo-category-dropdown-search\">\n        <input\n          type=\"text\"\n          [placeholder]=\"search.placeholder || labels.search\"\n          [value]=\"_query\"\n          (input)=\"queryCategories($event.target.value)\"\n        />\n        <i class=\"bhi-search\" *ngIf=\"!_query\"></i>\n        <i class=\"bhi-times\" *ngIf=\"_query\" (click)=\"clearQuery($event)\"></i>\n      </div>\n      <novo-nav theme=\"white\" [outlet]=\"novoCategoryDropdownOutlet\" direction=\"vertical\">\n        <novo-tab *ngFor=\"let category of _categories\" [attr.data-automation-id]=\"category\" (activeChange)=\"onCategorySelected(category)\">\n          <span>{{ category }} ({{ _categoryMap[category].length }})</span>\n        </novo-tab>\n      </novo-nav>\n      <novo-nav-outlet #novoCategoryDropdownOutlet>\n        <novo-nav-content *ngFor=\"let category of _categories\">\n          <novo-list direction=\"vertical\">\n            <novo-list-item\n              *ngFor=\"let item of _categoryMap[category]\"\n              (click)=\"select($event, item)\"\n              [attr.data-automation-id]=\"item.label\"\n            >\n              <item-content>{{ item.label }}</item-content>\n              <item-end class=\"novo-category-dropdown-hover\" *ngIf=\"item.hoverText && !item.selected\">{{ item.hoverText }}</item-end>\n              <item-end class=\"novo-category-dropdown-hover\" *ngIf=\"item.hoverIcon && !item.selected\"\n                ><i class=\"bhi-{{ item.hoverIcon }}\"></i\n              ></item-end>\n              <item-end *ngIf=\"item.selected\"><i class=\"bhi-check\"></i></item-end>\n            </novo-list-item>\n            <novo-list-item *ngIf=\"_categoryMap[category].length === 0 && search\" class=\"novo-category-dropdown-empty-item\">\n              <item-content>{{ search.emptyMessage || labels.noItems }}</item-content>\n            </novo-list-item>\n          </novo-list>\n        </novo-nav-content>\n      </novo-nav-outlet>\n      <footer *ngIf=\"footer\" class=\"novo-category-dropdown-footer-align-{{ footer.align || 'right' }}\">\n        <a *ngFor=\"let link of footer.links\" (click)=\"executeClickCallback($event, link)\">{{ link.label }}</a>\n      </footer>\n    </div>\n  `,\n  host: {\n    '(keydown)': 'onKeyDown($event)',\n    '[class.active]': 'active',\n  },\n})\nexport class NovoCategoryDropdownElement extends OutsideClick implements OnInit, OnDestroy {\n  _query: string = '';\n  _categoryMap: any = {};\n  _categories: string[] = [];\n  clickHandler: Function;\n  _masterCategoryMap: any;\n  _queryTimeout: any;\n  // Boolean to keep the selection persist when closing the dropdown\n  @Input()\n  persistSelection: boolean = false;\n  // Boolean to close the dropdown on selection\n  @Input()\n  closeOnSelect: boolean = false;\n  // Search Config\n  // {\n  //   placeholder: 'STRING' // defaults to \"SEARCH\" - placeholder for search input\n  //   emptyMessage: 'STRING' // defaults to \"There are no items.\" - empty message when there are no items in the category\n  //   debounce: 'NUMBER (in MS)' // defaults to 300ms - debounce time for the search\n  //   compare: 'FUNCTION' // default to simple indexOf - compare function for category search, should accept (query, item) and return true/false\n  // }\n  @Input()\n  search: any;\n  // Footer config\n  // {\n  //   align: 'STRING' // defaults to \"right\" - alignment of the links\n  //   links: 'ARRAY' // array of links to go into the footer, be away of spacing - { label, callback } for the object inside\n  // }\n  @Input()\n  footer: any;\n  // Event that is emitted whenever an item is selected\n  @Output('itemSelected')\n  _select: EventEmitter<any> = new EventEmitter();\n  // Event that is emitted whenever a category is selected\n  @Output()\n  categorySelected: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  set categories(categories: any) {\n    this._masterCategoryMap = Object.assign({}, categories);\n    this._categoryMap = Object.assign({}, categories);\n    this._categories = Object.keys(categories);\n  }\n\n  constructor(element: ElementRef, public labels: NovoLabelService) {\n    super(element);\n    this.clickHandler = this.toggleActive.bind(this);\n  }\n\n  ngOnInit() {\n    const button = this.element.nativeElement.querySelector('button');\n    button.addEventListener('click', this.clickHandler);\n  }\n\n  ngOnDestroy() {\n    const button = this.element.nativeElement.querySelector('button');\n    if (button) {\n      button.removeEventListener('click', this.clickHandler);\n    }\n  }\n\n  onKeyDown(event) {\n    if (this.active && (event.key === Key.Escape || event.key === Key.Enter)) {\n      this.toggleActive();\n    }\n  }\n\n  clearSelection() {\n    this._categories.forEach((category) => {\n      this._categoryMap[category].forEach((item) => {\n        item.selected = false;\n      });\n    });\n  }\n\n  select(event, item) {\n    Helpers.swallowEvent(event);\n    // If we persist the selection, clear and show a check\n    if (this.persistSelection) {\n      this.clearSelection();\n      item.selected = true;\n    }\n    // Emit the item\n    this._select.emit(item);\n    // Close, if input is set\n    if (this.closeOnSelect) {\n      this.toggleActive();\n    }\n  }\n\n  onCategorySelected(category) {\n    this.categorySelected.emit(category);\n  }\n\n  clearQuery(event) {\n    Helpers.swallowEvent(event);\n    this._query = '';\n    // Reset the categories\n    this._categories.forEach((category) => {\n      this._categoryMap[category] = this._masterCategoryMap[category];\n    });\n  }\n\n  queryCategories(query) {\n    // Save the query\n    this._query = query;\n    // Check timeout\n    if (this._queryTimeout) {\n      clearTimeout(this._queryTimeout);\n    }\n    // Store a timeout, to debounce user input\n    this._queryTimeout = setTimeout(() => {\n      this._categories.forEach((category) => {\n        if (this.search.compare) {\n          this._categoryMap[category] = this._masterCategoryMap[category].filter((item) => this.search.compare(query, item));\n        } else {\n          this._categoryMap[category] = this._masterCategoryMap[category].filter(\n            (item) => ~item.label.toLowerCase().indexOf(query.toLowerCase()),\n          );\n        }\n      });\n    }, this.search.debounce || 300);\n  }\n\n  executeClickCallback(event, link) {\n    link.callback(event);\n    // Close, if input is set\n    if (this.closeOnSelect) {\n      this.toggleActive();\n    }\n  }\n}\n","// NG2\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { BooleanInput } from '../../utils';\n\n@Component({\n  selector: 'novo-nav',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoNavElement implements AfterContentChecked {\n  @Input()\n  theme: string = '';\n  @Input()\n  direction: string = '';\n  @Input()\n  outlet: any;\n  @Input()\n  router: string;\n  @HostBinding('class.condensed')\n  @Input()\n  @BooleanInput()\n  condensed: boolean = false;\n\n  items: Array<any> = [];\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._deactivateAllItems(this.items);\n        this._activateSelectedItem(indexToSelect);\n        this._showActiveContent(indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n\n      this._selectedIndex = indexToSelect;\n    }\n  }\n\n  select(item) {\n    const indexToSelect = this.items.indexOf(item);\n    // Deactivate all other tabs\n    this._deactivateAllItems(this.items);\n    this._activateSelectedItem(indexToSelect);\n    this._showActiveContent(indexToSelect);\n    this.selectedIndexChange.emit(indexToSelect);\n  }\n\n  add(item) {\n    if (this.items.length === 0) {\n      item.active = true;\n      // item.selected.next();\n    }\n    this.items.push(item);\n  }\n\n  private _activateSelectedItem(indexToSelect: number) {\n    const item = this.items[indexToSelect];\n    if (item) {\n      item.active = true;\n    }\n  }\n\n  private _showActiveContent(indexToSelect: number) {\n    if (this.outlet) {\n      this.outlet.show(indexToSelect);\n    }\n  }\n\n  private _deactivateAllItems(items: Array<any>) {\n    items.forEach((t) => {\n      if (t.active === true) {\n        // t.deselected.next();\n      }\n      t.active = false;\n    });\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    return Math.min(this.items.length - 1, Math.max(index || 0, 0));\n  }\n}\n\n@Component({\n  selector: 'novo-tab',\n  host: {\n    '(click)': 'select()',\n    '[class.active]': 'active',\n    '[class.disabled]': 'disabled',\n    '[attr.role]': 'tab',\n  },\n  template: `\n    <div #tablink class=\"novo-tab-link\">\n      <ng-content></ng-content>\n    </div>\n    <span class=\"indicator\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoTabElement {\n  @HostBinding('attr.role')\n  public role = 'tab';\n\n  @Input()\n  active: boolean = false;\n\n  @Input()\n  color: string;\n\n  @Input()\n  @BooleanInput()\n  disabled: boolean = false;\n\n  @Output()\n  activeChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  onlyText = true;\n  @HostBinding('class.text-only')\n  get hb_textOnly() {\n    return this.onlyText;\n  }\n\n  @ViewChild('tablink')\n  tablink;\n\n  nav: any;\n\n  constructor(nav: NovoNavElement, private el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.nav = nav;\n    this.nav.add(this);\n    const tablink = el.nativeElement.querySelector('.novo-tab-link');\n    if (tablink) {\n      for (let i = 0; i < tablink.childNodes.length; i++) {\n        if (tablink.childNodes[i].nodeType !== Node.TEXT_NODE) this.onlyText = false;\n      }\n    }\n  }\n\n  select() {\n    if (!this.disabled) {\n      this.activeChange.emit(true);\n      this.nav.select(this);\n    }\n    this.cdr.detectChanges();\n  }\n}\n\n@Component({\n  selector: 'novo-tab-button',\n  host: {\n    '(click)': 'select()',\n    '[class.active]': 'active',\n    '[class.disabled]': 'disabled',\n  },\n  template: '<ng-content></ng-content>',\n})\nexport class NovoTabButtonElement {\n  @HostBinding('attr.role')\n  public role = 'tab';\n  @Input()\n  active: boolean = false;\n  @Input()\n  disabled: boolean = false;\n\n  nav: any;\n\n  constructor(nav: NovoNavElement) {\n    this.nav = nav;\n    this.nav.add(this);\n  }\n\n  select() {\n    if (!this.disabled) {\n      this.nav.select(this);\n    }\n  }\n}\n\n@Component({\n  selector: 'novo-tab-link',\n  host: {\n    '(click)': 'select()',\n    '[class.active]': 'active',\n    '[class.disabled]': 'disabled',\n  },\n  template: `\n    <div class=\"novo-tab-link\">\n      <ng-content></ng-content>\n    </div>\n    <span class=\"indicator\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoTabLinkElement implements OnInit {\n  @HostBinding('attr.role')\n  public role = 'tab';\n  @Input()\n  active: boolean = false;\n  @Input()\n  disabled: boolean = false;\n  @Input()\n  spy: string;\n\n  nav: any;\n\n  constructor(nav: NovoNavElement, private router: Router, private cdr: ChangeDetectorRef, @Optional() private link?: RouterLink) {\n    this.nav = nav;\n    this.nav.add(this);\n  }\n\n  ngOnInit(): void {\n    if (this.isLinkActive(this.link)) {\n      this.nav.select(this);\n    }\n  }\n\n  select() {\n    if (!this.disabled) {\n      this.nav.select(this);\n      if (this.spy) {\n        const el = document.querySelector(`#${this.spy}`);\n        el?.scrollIntoView(true);\n      }\n    }\n  }\n\n  private isLinkActive(link: RouterLink) {\n    return link && link.urlTree ? this.router.isActive(link.urlTree, false) : false;\n  }\n}\n\n@Component({\n  selector: 'novo-nav-outlet',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoNavOutletElement {\n  items: Array<any> = [];\n\n  show(index) {\n    const item = this.items[index];\n\n    /**\n     * Deactivates other tab items\n     * @param items - deactivated items\n     */\n    function _deactivateAllItems(items) {\n      items.forEach((t) => {\n        if (t.active === true) {\n          // t.deselected.next();\n        }\n        t.active = false;\n      });\n    }\n\n    _deactivateAllItems(this.items);\n    item.active = true;\n  }\n\n  add(item) {\n    if (this.items.length === 0) {\n      item.active = true;\n    }\n    this.items.push(item);\n  }\n}\n\n@Component({\n  selector: 'novo-nav-content',\n  host: {\n    '[class.active]': 'active',\n  },\n  template: '<ng-content></ng-content>',\n})\nexport class NovoNavContentElement {\n  @Input()\n  active: boolean = false;\n\n  constructor(outlet: NovoNavOutletElement) {\n    outlet.add(this);\n  }\n}\n\n@Component({\n  selector: 'novo-nav-header',\n  host: {\n    '[class.active]': 'active',\n    '(click)': 'show($event)',\n  },\n  template: '<ng-content></ng-content>',\n})\nexport class NovoNavHeaderElement {\n  @HostBinding('attr.role')\n  public role = 'tabpanel';\n  @Input()\n  active: boolean = false;\n  @Input('for')\n  forElement: any;\n  outlet: any;\n\n  constructor(outlet: NovoNavOutletElement) {\n    this.active = this.active || false;\n    this.outlet = outlet;\n  }\n\n  show(event?: any) {\n    try {\n      const INDEX = this.outlet.items.indexOf(this.forElement);\n      if (INDEX > -1) {\n        this.outlet.show(INDEX);\n      }\n    } catch (err) {\n      // do nothing\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport {\n  NovoNavContentElement,\n  NovoNavElement,\n  NovoNavHeaderElement,\n  NovoNavOutletElement,\n  NovoTabButtonElement,\n  NovoTabElement,\n  NovoTabLinkElement,\n} from './Tabs';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NovoNavElement,\n    NovoTabElement,\n    NovoTabButtonElement,\n    NovoTabLinkElement,\n    NovoNavOutletElement,\n    NovoNavContentElement,\n    NovoNavHeaderElement,\n  ],\n  exports: [\n    NovoNavElement,\n    NovoTabElement,\n    NovoTabButtonElement,\n    NovoTabLinkElement,\n    NovoNavOutletElement,\n    NovoNavContentElement,\n    NovoNavHeaderElement,\n  ],\n})\nexport class NovoTabModule {}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoListModule } from './../list/List.module';\nimport { NovoTabModule } from './../tabs/Tabs.module';\n// APP\nimport { NovoCategoryDropdownElement } from './CategoryDropdown';\n\n@NgModule({\n  imports: [CommonModule, NovoTabModule, NovoListModule],\n  declarations: [NovoCategoryDropdownElement],\n  exports: [NovoCategoryDropdownElement],\n})\nexport class NovoCategoryDropdownModule {}\n","// NG2\nimport { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Attribute,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput } from '../../utils';\n// APP\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoCheckboxElement),\n  multi: true,\n};\n\n/** Change event object emitted by NovoCheckbox. */\nexport class NovoCheckboxChange {\n  /** The source NovoCheckbox of the event. */\n  source: NovoCheckboxElement;\n  /** The new `checked` value of the checkbox. */\n  checked: boolean;\n}\n\nconst LAYOUT_DEFAULTS = { iconStyle: 'box' };\nlet nextId = 0;\n@Component({\n  selector: 'novo-checkbox',\n  providers: [CHECKBOX_VALUE_ACCESSOR],\n  styleUrls: ['./Checkbox.scss'],\n  template: `\n    <div class=\"novo-checkbox-group\" [class.checked]=\"checked\" [class.disabled]=\"disabled\">\n      <input\n        #input\n        type=\"checkbox\"\n        [required]=\"required\"\n        [checked]=\"checked\"\n        [id]=\"id\"\n        [attr.name]=\"name\"\n        [attr.value]=\"value\"\n        [disabled]=\"disabled\"\n        [tabIndex]=\"tabIndex\"\n        [attr.aria-label]=\"ariaLabel || null\"\n        [attr.aria-labelledby]=\"ariaLabelledby\"\n        [attr.aria-checked]=\"_getAriaChecked()\"\n        [attr.aria-describedby]=\"ariaDescribedby\"\n        (change)=\"_onInteractionEvent($event)\"\n        (click)=\"_onInputClick($event)\"\n      />\n      <label [attr.for]=\"name\" (click)=\"select($event)\" [class.disabled]=\"disabled\">\n        <i\n          [class.bhi-checkbox-empty]=\"!checked && !indeterminate && boxIcon\"\n          [class.bhi-checkbox-filled]=\"checked && !indeterminate && boxIcon\"\n          [class.bhi-checkbox-indeterminate]=\"indeterminate && boxIcon\"\n          [class.bhi-circle-o]=\"!checked && !indeterminate && !boxIcon\"\n          [class.bhi-check]=\"checked && !indeterminate && !boxIcon\"\n          [class.bhi-circle]=\"indeterminate && !boxIcon\"\n        ></i>\n        <span *ngIf=\"label\">{{ label }}</span>\n        <span *ngIf=\"!label\" class=\"novo-checkbox-text\"><ng-content></ng-content></span>\n      </label>\n    </div>\n  `,\n  host: {\n    class: 'novo-checkbox',\n    '[class.has-label]': 'label',\n  },\n})\nexport class NovoCheckboxElement implements ControlValueAccessor, OnInit {\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  @Input('aria-describedby') ariaDescribedby: string;\n\n  private _uniqueId: string = `novo-checkbox-${++nextId}`;\n\n  @Input()\n  id: string = this._uniqueId;\n  @Input()\n  name: string = this._uniqueId;\n  @Input()\n  label: string;\n  @Input()\n  disabled: boolean = false;\n  @Input()\n  layoutOptions: { iconStyle?: string }; // TODO - avoid configs like this\n  @Input()\n  color: string;\n  /** The value attribute of the native input element */\n  @Input() value: string;\n  @Input() tabIndex: number;\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n  private _required: boolean;\n\n  /** Whether the checkbox is checked. */\n  @BooleanInput()\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    if (value !== this.checked) {\n      this._checked = value;\n      this._cdr.markForCheck();\n    }\n  }\n  private _checked: boolean = false;\n\n  @BooleanInput()\n  @Input()\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n  set indeterminate(value: boolean) {\n    const changed = value !== this._indeterminate;\n    this._indeterminate = coerceBooleanProperty(value);\n    if (changed) {\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n    this._syncIndeterminate(this._indeterminate);\n  }\n  private _indeterminate: boolean = false;\n\n  /** The native `<input type=\"checkbox\">` element */\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  /** Event emitted when the checkbox's `checked` value changes. */\n  @Output() readonly change: EventEmitter<NovoCheckboxChange> = new EventEmitter<NovoCheckboxChange>();\n\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @Output()\n  onSelect: EventEmitter<any> = new EventEmitter();\n\n  boxIcon: boolean = true;\n\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(private _cdr: ChangeDetectorRef, private _focusMonitor: FocusMonitor, @Attribute('tabindex') tabIndex: string) {\n    // this.color = this.defaultColor = this._options.color || defaults.color;\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\n  }\n\n  ngOnInit() {\n    this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS, this.layoutOptions);\n    this.boxIcon = this.layoutOptions.iconStyle === 'box';\n  }\n\n  select(event: Event) {\n    Helpers.swallowEvent(event);\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.onModelChange(this.checked);\n      this.onSelect.emit({ originalEvent: event, value: this.checked });\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any) {\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  _getAriaChecked(): 'true' | 'false' | 'mixed' {\n    if (this.checked) {\n      return 'true';\n    }\n\n    return this.indeterminate ? 'mixed' : 'false';\n  }\n\n  private _emitChangeEvent() {\n    const event = new NovoCheckboxChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this.onModelChange(this.checked);\n    this.change.emit(event);\n\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n\n  /** Toggles the `checked` state of the checkbox. */\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  /**\n   * Event handler for checkbox input element.\n   * Toggles checked state if element is not disabled.\n   * Do not toggle on (change) event since IE doesn't fire change event when\n   *   indeterminate checkbox is clicked.\n   * @param event\n   */\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `checkbox` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n    if (!this.disabled) {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate) {\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n      this.toggle();\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    }\n  }\n\n  /** Focuses the checkbox. */\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (origin) {\n      this._focusMonitor.focusVia(this._inputElement, origin, options);\n    } else {\n      this._inputElement.nativeElement.focus(options);\n    }\n  }\n\n  _onInteractionEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n\n  private _syncIndeterminate(value: boolean) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n}\n","// NG2\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst CHECKLIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoCheckListElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-check-list',\n  styleUrls: ['./CheckList.scss'],\n  providers: [CHECKLIST_VALUE_ACCESSOR],\n  template: `\n    <div\n      class=\"novo-checkbox-group\"\n      *ngFor=\"let option of _options; let i = index\"\n      [ngClass]=\"{ checked: option.checked }\"\n      [class.disabled]=\"disabled\"\n      [attr.data-automation-id]=\"option.label\"\n    >\n      <input\n        [name]=\"name\"\n        type=\"checkbox\"\n        [ngModel]=\"option.checked\"\n        [attr.id]=\"name + i\"\n        [value]=\"option.checked\"\n        (change)=\"select($event, option)\"\n        [disabled]=\"disabled\"\n      />\n      <label [attr.for]=\"name + i\" (click)=\"select($event, option)\">\n        <i [ngClass]=\"{ 'bhi-checkbox-empty': !option.checked, 'bhi-checkbox-filled': option.checked }\"></i>\n        <span>{{ option.label }}</span>\n      </label>\n    </div>\n  `,\n})\nexport class NovoCheckListElement implements ControlValueAccessor, OnInit {\n  @Input()\n  name: string;\n  @Input()\n  options: Array<any>;\n  @Input()\n  disabled: boolean;\n  @Output()\n  onSelect: EventEmitter<any> = new EventEmitter();\n\n  _options: Array<any>;\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  ngOnInit() {\n    this.setModel();\n    this.setupOptions();\n  }\n\n  select(event, item) {\n    Helpers.swallowEvent(event);\n    if (!this.disabled) {\n      item.checked = !item.checked;\n      this.model = this._options.filter((checkBox) => checkBox.checked).map((x) => x.value);\n      this.onModelChange(this.model.length > 0 ? this.model : '');\n      this.onSelect.emit({ selected: this.model });\n    }\n  }\n\n  setupOptions() {\n    this.options = this.options || [];\n    this._options = [];\n    if (this.options.length && !this.options[0].value) {\n      this.options.forEach((option) => {\n        const formattedOption = {\n          value: option,\n          label: option,\n          checked: this.model && this.model.length && this.model.indexOf(option.value) !== -1,\n        };\n        this._options.push(formattedOption);\n      });\n    } else {\n      this.options.forEach((option) => {\n        const formattedOption = option;\n        formattedOption.checked = this.model && this.model.length && this.model.indexOf(option.value) !== -1;\n        this._options.push(formattedOption);\n      });\n    }\n  }\n\n  setModel(): void {\n    const checkedOptions = this.options.filter((checkBox) => checkBox.checked).map((x) => x.value);\n    this.writeValue(checkedOptions);\n  }\n\n  writeValue(model: any): void {\n    this.model = model || [];\n    if (model) {\n      this.setupOptions();\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoCheckboxElement } from './Checkbox';\nimport { NovoCheckListElement } from './CheckList';\n\n@NgModule({\n  imports: [CommonModule, A11yModule, FormsModule],\n  declarations: [NovoCheckboxElement, NovoCheckListElement],\n  exports: [NovoCheckboxElement, NovoCheckListElement],\n})\nexport class NovoCheckboxModule {}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty, NumberInput } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  Attribute,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Key } from '../../utils';\nimport { CanColor, CanColorCtor, CanSizeCtor, HasTabIndex, HasTabIndexCtor, mixinColor, mixinSize, mixinTabIndex } from '../common';\n\nexport interface IRemovable {\n  remove: () => void;\n  removable: boolean;\n  disabled: boolean;\n}\n\nexport const REMOVABLE_REF: InjectionToken<IRemovable> = new InjectionToken<IRemovable>('REMOVABLE_REF');\n\n/** Represents an event fired on an individual `novo-chip`. */\nexport interface NovoChipEvent {\n  /** The chip the event was fired on. */\n  chip: NovoChipElement;\n}\n\n/** Event object emitted by NovoChip when selected or deselected. */\nexport class NovoChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    public source: NovoChipElement,\n    /** Whether the chip that emitted the event is selected. */\n    public selected: boolean,\n    /** Whether the selection change was a result of a user interaction. */\n    public isUserInput = false,\n  ) {}\n}\n\n// Boilerplate for applying mixins to NovoChipElement.\n/** @docs-private */\nclass NovoChipBase {\n  // abstract disabled: boolean;\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst NovoChipMixinBase: CanSizeCtor & CanColorCtor & HasTabIndexCtor & typeof NovoChipBase = mixinSize(\n  mixinTabIndex(mixinColor(NovoChipBase, null), -1),\n  'md',\n);\n\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\n@Directive({\n  selector: 'novo-chip-avatar, [novoChipAvatar]',\n  host: { class: 'novo-chip-avatar' },\n})\nexport class NovoChipAvatar {}\n\n/**\n * Applies proper (click) support and adds styling for use with Bullhorn's \"x\" icon *\n * Example:\n *\n *     `<novo-chip>\n *       <novo-icon novoChipRemove>x</novo-icon>\n *     </novo-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `novo-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\n@Directive({\n  selector: '[novoChipRemove]',\n  host: {\n    class: 'novo-chip-remove',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class NovoChipRemove {\n  constructor(@Inject(REMOVABLE_REF) private _parentChip: IRemovable, elementRef: ElementRef<HTMLElement>) {\n    if (elementRef.nativeElement.nodeName === 'BUTTON') {\n      elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n\n  /** Calls the parent chip's public `remove()` method if applicable. */\n  _handleClick(event: Event): void {\n    const parentChip = this._parentChip;\n    if (parentChip.removable && !parentChip.disabled) {\n      parentChip.remove();\n    }\n\n    // We need to stop event propagation because otherwise the event will bubble up to the\n    // form field and cause the `onContainerClick` method to be invoked. This method would then\n    // reset the focused chip that has been focused after chip removal. Usually the parent\n    // the parent click listener of the `NovoChip` would prevent propagation, but it can happen\n    // that the chip is being removed before the event bubbles up.\n    event.stopPropagation();\n  }\n}\n\n/**\n * Chip component. Used inside the NovoChipList component.\n */\n@Component({\n  selector: `novo-chip, [novo-chip]`,\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./Chip.scss'],\n  encapsulation: ViewEncapsulation.None,\n  inputs: ['color', 'tabIndex', 'size'],\n  providers: [{ provide: REMOVABLE_REF, useExisting: NovoChipElement }],\n  host: {\n    class: 'novo-chip novo-focus-indicator',\n    role: 'option',\n    '[class.novo-chip-selectable]': 'selectable',\n    '[class.novo-chip-selected]': 'selected',\n    '[class.novo-chip-with-avatar]': 'avatar',\n    '[class.novo-chip-with-trailing-icon]': 'removeIcon',\n    '[class.novo-chip-disabled]': 'disabled',\n    '[class._novo-animation-noopable]': '_animationsDisabled',\n    '[attr.tabindex]': 'disabled ? null : tabIndex',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    // '(mouseenter)': '_handleActivate($event)',\n    // '(mouseleave)': '_handleDeactivate($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class NovoChipElement extends NovoChipMixinBase implements FocusableOption, OnDestroy, CanColor, HasTabIndex {\n  /** Whether the chip has focus. */\n  _hasFocus: boolean = false;\n\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled: boolean;\n\n  /** Whether the chip list is selectable */\n  _chipListSelectable: boolean = true;\n\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple: boolean = false;\n\n  /** Whether the chip list as a whole is disabled. */\n  _chipListDisabled: boolean = false;\n\n  /** The chip avatar */\n  @ContentChild(NovoChipAvatar) avatar: NovoChipAvatar;\n\n  /** The chip's remove toggler. */\n  @ContentChild(NovoChipRemove) removeIcon: NovoChipRemove;\n\n  @Input() type: string;\n  /** Whether the chip is selected. */\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    const coercedValue = coerceBooleanProperty(value);\n\n    if (coercedValue !== this._selected) {\n      this._selected = coercedValue;\n      this._dispatchSelectionChange();\n    }\n  }\n  protected _selected: boolean = false;\n\n  /** The value of the chip. Defaults to the content inside `<novo-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value !== undefined ? this._value : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Whether or not the chip is selectable. When a chip is not selectable,\n   * changes to its selected state are always ignored. By default a chip is\n   * selectable, and it becomes non-selectable if its parent chip list is\n   * not selectable.\n   */\n  @Input()\n  get selectable(): boolean {\n    return this._selectable && this._chipListSelectable;\n  }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = false;\n\n  /** Whether the chip is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._chipListDisabled || this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  protected _disabled: boolean = false;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean {\n    return this._removable;\n  }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<NovoChipEvent>();\n\n  /** Emits when the chip is blured. */\n  readonly _onBlur = new Subject<NovoChipEvent>();\n\n  /** Emitted when the chip is selected or deselected. */\n  @Output() readonly selectionChange: EventEmitter<NovoChipSelectionChange> = new EventEmitter<NovoChipSelectionChange>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<NovoChipEvent> = new EventEmitter<NovoChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<NovoChipEvent> = new EventEmitter<NovoChipEvent>();\n\n  /** The ARIA selected applied to the chip. */\n  get ariaSelected(): string | null {\n    // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n    // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n    return this.selectable && (this._chipListMultiple || this.selected) ? this.selected.toString() : null;\n  }\n\n  constructor(\n    public _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    platform: Platform,\n    @Optional()\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Inject(DOCUMENT) _document: any,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string,\n    @Attribute('tabindex') tabIndex?: string,\n  ) {\n    super(_elementRef);\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this.tabIndex = tabIndex != null ? parseInt(tabIndex, 10) || -1 : -1;\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({ chip: this });\n  }\n\n  /** Selects the chip. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Deselects the chip. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._dispatchSelectionChange();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Select this chip and emit selected event */\n  selectViaInteraction(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange(true);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput: boolean = false): boolean {\n    this._selected = !this.selected;\n    this._dispatchSelectionChange(isUserInput);\n    this._changeDetectorRef.markForCheck();\n    return this.selected;\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus(): void {\n    if (!this._hasFocus) {\n      this._elementRef.nativeElement.focus();\n      this._onFocus.next({ chip: this });\n    }\n    this._hasFocus = true;\n  }\n\n  /**\n   * Allows for programmatic removal of the chip. Called by the NovoChipList when the DELETE or\n   * BACKSPACE keys are pressed.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this.removed.emit({ chip: this });\n    }\n  }\n\n  /** Handles click events on the chip. */\n  _handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n    } else {\n      event.stopPropagation();\n    }\n    this.toggleSelected(true);\n  }\n\n  /** Handle custom key presses. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case Key.Delete:\n      case Key.Backspace:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case Key.Space:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\n\n  _blur(): void {\n    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n    // that moves focus not the next item. To work around the issue, we defer marking the chip\n    // as not focused until the next time the zone stabilizes.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._ngZone.run(() => {\n        this._hasFocus = false;\n        this._onBlur.next({ chip: this });\n      });\n    });\n  }\n\n  private _dispatchSelectionChange(isUserInput = false) {\n    this.selectionChange.emit({\n      source: this,\n      isUserInput,\n      selected: this._selected,\n    });\n  }\n\n  static ngAcceptInputType_selected: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n  static ngAcceptInputType_removable: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n","import { InjectionToken } from '@angular/core';\n\n/** Default options, for the chips module, that can be overridden. */\nexport interface NovoChipsDefaultOptions {\n  /** The list of key codes that will trigger a chipEnd event. */\n  separatorKeyCodes: readonly string[];\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const NOVO_CHIPS_DEFAULT_OPTIONS = new InjectionToken<NovoChipsDefaultOptions>('novo-chips-default-options');\n","// NG2\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'novo-error',\n  templateUrl: './error.html',\n  styleUrls: ['./error.scss'],\n})\nexport class NovoErrorElement implements OnInit {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  ngOnInit(): any {}\n}\n","import { Directive } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n/** An interface which allows a control to work inside of a `NovoField`. */\n@Directive()\nexport abstract class NovoFieldControl<T> {\n  /** The value of the control. */\n  value: T | null;\n\n  /** The last key pressed. */\n  lastKeyValue: string | null;\n  /** The last cursor position. */\n  lastCaretPosition: number | null;\n\n  /**\n   * Stream that emits whenever the state of the control changes such that the parent `NovoField`\n   * needs to run change detection.\n   */\n  readonly stateChanges: Observable<void>;\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  readonly placeholder: string;\n\n  /** Gets the NgControl for this control. */\n  readonly ngControl: NgControl | null;\n\n  /** Whether the control is focused. */\n  readonly focused: boolean;\n\n  /** Whether the control is empty. */\n  readonly empty: boolean;\n\n  /** Whether the `NovoField` label should try to float. */\n  // readonly shouldLabelFloat: boolean;\n  // readonly shouldFieldHaveUnderline: boolean;\n\n  /** Whether the control is required. */\n  readonly required: boolean;\n\n  /** Whether the control is disabled. */\n  readonly disabled: boolean;\n\n  /** Whether the control is in an error state. */\n  readonly errorState: boolean;\n\n  /** Whether the control can have multiple values. */\n  readonly multiple?: boolean;\n  /**\n   * An optional name for the control type that can be used to distinguish `novo-form-field` elements\n   * based on their control type. The form field will add a class,\n   * `novo-form-field-type-{{controlType}}` to its root element.\n   */\n  readonly controlType?: string;\n\n  /**\n   * Whether the input is currently in an autofilled state. If property is not present on the\n   * control it is assumed to be false.\n   */\n  readonly autofilled?: boolean;\n\n  /** Sets the list of element IDs that currently describe this control. */\n  abstract setDescribedByIds(ids: string[]): void;\n\n  /** Handles a click on the control's container. */\n  abstract onContainerClick(event: MouseEvent): void;\n\n  abstract focus(options?: FocusOptions): void;\n}\n","// NG2\nimport { Component, Input, OnInit } from '@angular/core';\n\nlet nextUniqueId = 0;\n@Component({\n  selector: 'novo-hint',\n  templateUrl: './hint.html',\n  styleUrls: ['./hint.scss'],\n  host: {\n    class: 'novo-hint',\n    '[class.novo-field-hint-end]': 'align === \"end\"',\n    '[attr.id]': 'id',\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n  },\n})\nexport class NovoHintElement implements OnInit {\n  /** Whether to align the hint label at the start or end of the line. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  @Input() id: string = `novo-hint-${nextUniqueId++}`;\n\n  ngOnInit(): any {}\n}\n","// NG2\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { NovoLabel } from '../common';\nimport { NovoErrorElement } from './error/error';\nimport { NovoFieldControl } from './field-control';\nimport { NovoHintElement } from './hint/hint';\n\n@Directive({ selector: '[novoPrefix]' })\nexport class NovoFieldPrefixDirective {}\n@Directive({ selector: '[novoSuffix]' })\nexport class NovoFieldSuffixDirective {}\n\nconst NOVO_INPUT_UNDERLINED_TYPES = [\n  'text',\n  'date',\n  'time',\n  'datetime-local',\n  'password',\n  'email',\n  'tel',\n  'select',\n  'textarea',\n  'number',\n  'novo-chip-list',\n  'chip-list',\n];\nexport const NOVO_FORM_FIELD = new InjectionToken<NovoFieldElement>('NovoFormField');\n\n@Component({\n  selector: 'novo-field',\n  templateUrl: './field.html',\n  styleUrls: ['./field.scss', './field-standard.scss', './field-fill.scss', './field-outline.scss', './field-list.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'novo-field',\n    '[class.novo-field-layout-horizontal]': 'layout==\"horizontal\"',\n    '[class.novo-field-layout-vertical]': 'layout==\"vertical\"',\n    '[class.novo-field-appearance-standard]': 'appearance == \"standard\"',\n    '[class.novo-field-appearance-fill]': 'appearance == \"fill\"',\n    '[class.novo-field-appearance-outline]': 'appearance == \"outline\"',\n    '[class.novo-field-appearance-list]': 'appearance == \"list\"',\n    '[class.novo-field-appearance-underlined]': '_isUnderlinedInput()',\n    '[class.novo-field-invalid]': '_control.errorState',\n    '[class.novo-field-has-label]': '_hasLabel()',\n    '[class.novo-field-no-label]': '!_hasLabel()',\n    // '[class.novo-field-hide-placeholder]': '_hideControlPlaceholder()',\n    '[class.novo-field-disabled]': '_control.disabled',\n    '[class.novo-field-autofilled]': '_control.autofilled',\n    '[class.novo-focused]': '_control.focused',\n    // '[class.novo-accent]': 'color == \"accent\"',\n    // '[class.novo-warn]': 'color == \"warn\"',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n  },\n  providers: [{ provide: NOVO_FORM_FIELD, useExisting: NovoFieldElement }],\n})\nexport class NovoFieldElement implements AfterContentInit, OnDestroy {\n  private _labelClicks = Subscription.EMPTY;\n\n  // @ViewChild('connectionContainer') _connectionContainerRef: ElementRef;\n  @ViewChild('inputContainer') _inputContainerRef: ElementRef;\n  // @ViewChild('label') private _label: ElementRef<HTMLElement>;\n\n  @ContentChild(NovoLabel) _labelElement: NovoLabel;\n  @ContentChildren(NovoHintElement) _hintElements: QueryList<NovoHintElement>;\n  @ContentChildren(NovoErrorElement) _errorElements: QueryList<NovoErrorElement>;\n  @ContentChildren(NovoFieldPrefixDirective) _prefixElements: QueryList<NovoFieldPrefixDirective>;\n  @ContentChildren(NovoFieldSuffixDirective) _suffixElements: QueryList<NovoFieldSuffixDirective>;\n\n  @ContentChild(NovoFieldControl) _control: NovoFieldControl<any>;\n\n  @Input() layout: 'horizontal' | 'vertical' = 'vertical';\n  @Input() appearance: 'standard' | 'outline' | 'fill' | 'list' = 'standard';\n\n  @Input()\n  width: string;\n\n  private _destroyed = new Subject<void>();\n\n  constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\n   * positioned relative to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._inputContainerRef || this._elementRef;\n  }\n\n  ngAfterContentInit(): any {\n    this._validateControlChild();\n\n    const control = this._control;\n\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`novo-field-type-${control.controlType}`);\n    }\n\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    // tslint:disable-next-line:deprecation\n    control.stateChanges.pipe(startWith(null)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    if (this._hasLabel()) {\n      this._labelClicks = fromEvent(this._labelElement.nativeElement, 'click').subscribe(() => this._control.focus());\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._labelClicks.unsubscribe();\n  }\n\n  /** Throws an error if the form field's control is missing. */\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw new Error('Missing Novo Control');\n    }\n  }\n\n  _isUnderlinedInput(): boolean {\n    return NOVO_INPUT_UNDERLINED_TYPES.includes(this._control.controlType);\n  }\n\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages(): 'error' | 'hint' {\n    return this._errorElements && this._errorElements.length > 0 && this._control.errorState ? 'error' : 'hint';\n  }\n\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\n  _shouldForward(prop: keyof NgControl): boolean {\n    const ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ngControl[prop];\n  }\n\n  _hasLabel() {\n    return !!this._labelElement;\n  }\n}\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Key } from 'projects/novo-elements/src/utils';\nimport { fromEvent, merge, of, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasOverlayCtor,\n  mixinDisabled,\n  mixinOverlay,\n  NovoOptgroup,\n  NovoOption,\n  NovoOptionSelectionChange,\n  NOVO_OPTION_PARENT_COMPONENT,\n} from '../../common';\nimport { NovoOverlayTemplateComponent } from '../../common/overlay';\nimport { NovoFieldElement, NOVO_FORM_FIELD } from '../field';\nimport { NovoFieldControl } from '../field-control';\n\n/** Event object that is emitted when an autocomplete option is selected. */\nexport class NovoOptionSelectedEvent {\n  constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    public source: NovoAutocompleteElement,\n    /** Option that was selected. */\n    public option: NovoOption,\n  ) {}\n}\n\n// Boilerplate for applying mixins\nclass NovoAutocompleteBase {\n  constructor() {}\n}\nconst NovoAutocompleteMixins: HasOverlayCtor & CanDisableCtor & typeof NovoAutocompleteBase = mixinOverlay(\n  mixinDisabled(NovoAutocompleteBase),\n);\n\n@Component({\n  selector: 'novo-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  styleUrls: ['autocomplete.component.scss'],\n  host: {\n    class: 'novo-autocomplete',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n  },\n  providers: [{ provide: NOVO_OPTION_PARENT_COMPONENT, useExisting: NovoAutocompleteElement }],\n  exportAs: 'novoAutocomplete',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoAutocompleteElement\n  extends NovoAutocompleteMixins\n  implements CanDisable, AfterContentInit, AfterViewInit, OnChanges, OnDestroy\n{\n  private _stateChanges = Subscription.EMPTY;\n  private _activeOptionChanges = Subscription.EMPTY;\n  private _selectedOptionChanges = Subscription.EMPTY;\n  private _keyDownChanges = Subscription.EMPTY;\n\n  /** Manages active item in option list based on key events. */\n  private _keyManager: ActiveDescendantKeyManager<NovoOption>;\n\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  private _previousValue: string | number | null;\n\n  @ContentChildren(NovoOptgroup, { descendants: true }) optionGroups: QueryList<NovoOptgroup>;\n  @ContentChildren(NovoOption, { descendants: true }) options: QueryList<NovoOption>;\n\n  /** Event that is emitted whenever an option from the list is selected. */\n  @Output() readonly optionSelected: EventEmitter<NovoOptionSelectedEvent> = new EventEmitter<NovoOptionSelectedEvent>();\n  /** Emits whenever an option is activated using the keyboard. */\n  @Output() readonly optionActivated: EventEmitter<NovoOptionSelectedEvent> = new EventEmitter<NovoOptionSelectedEvent>();\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Key to use to trigger autocomplete. used for textarea. */\n  @Input() triggerOn: (control: NovoFieldControl<any>) => boolean = (control) => control.focused;\n\n  /** Function that maps an option's control value to its display value in the trigger. */\n  @Input() displayWith: ((value: any) => string) | null = null;\n\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean {\n    return this._multiple || !!this._formField._control?.multiple || this._formField._control?.controlType === 'chip-list';\n  }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n  private _multiple: boolean = false;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this._formField?._control) {\n      return this._formField._control.disabled;\n    }\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  element: ElementRef;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string,\n    @Optional() @Inject(NOVO_FORM_FIELD) private _formField: NovoFieldElement,\n  ) {\n    super();\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._watchStateChanges();\n    this._watchSelectionEvents();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n    this._activeOptionChanges.unsubscribe();\n    this._selectedOptionChanges.unsubscribe();\n    this._keyDownChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager<NovoOption>(this.options).withWrap();\n    this._activeOptionChanges = this._keyManager.change.subscribe((index) => {\n      this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n    });\n    this.element = this._formField.getConnectedOverlayOrigin() || this._elementRef;\n    this._keyDownChanges = fromEvent(this.element.nativeElement, 'keydown').subscribe((event: KeyboardEvent) => this._handleKeydown(event));\n    this.options.changes.subscribe(() => {\n      this._watchStateChanges();\n      this._watchSelectionEvents();\n    });\n  }\n\n  ngAfterViewInit() {\n    this._watchStateChanges();\n    this._watchSelectionEvents();\n  }\n\n  checkPanel() {\n    const isTriggered = this.triggerOn(this._formField._control);\n    if (isTriggered && this.element) {\n      this.openPanel();\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n    const toDisplay = this.displayWith ? this.displayWith(value) : value;\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const inputValue = toDisplay != null ? toDisplay : '';\n    // If it's used within a `NovoField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      const { controlType, lastCaretPosition = 0 } = this._formField._control;\n      if (controlType === 'textarea') {\n        const currentValue = this._formField._control.value.split('');\n        currentValue.splice(lastCaretPosition, 0, inputValue);\n        this._formField._control.value = currentValue.join('');\n      } else {\n        let valueToEmit: any = inputValue;\n        if (this.multiple) {\n          const currentValue = this._formField._control.value;\n          if (Array.isArray(currentValue)) {\n            valueToEmit = [...currentValue, inputValue];\n          } else {\n            valueToEmit = [currentValue, inputValue];\n          }\n        }\n        this._formField._control.value = valueToEmit;\n      }\n    } else {\n      // this._element.nativeElement.value = inputValue;\n      console.warn(`AutoComplete only intended to be used within a NovoField`);\n    }\n    this._previousValue = inputValue;\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: NovoOption) {\n    this.options.forEach((option) => {\n      if (option !== skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  /** Emits the `select` event. */\n  private _emitSelectEvent(option: NovoOption): void {\n    const event = new NovoOptionSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  private _setValueAndClose(event: NovoOptionSelectionChange | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      // this._onChange(event.source.value);\n      // this._element.nativeElement.focus();\n      this._formField._control.focus();\n      this._emitSelectEvent(event.source);\n      this._watchSelectionEvents();\n    }\n\n    if (!this._multiple) this.closePanel();\n  }\n\n  private _watchSelectionEvents() {\n    const selectionEvents = this.options ? merge(...this.options.map((option) => option.onSelectionChange)) : of();\n    this._selectedOptionChanges.unsubscribe();\n    this._selectedOptionChanges = selectionEvents.pipe(take(1)).subscribe((evt: NovoOptionSelectionChange) => {\n      this._setValueAndClose(evt);\n    });\n  }\n\n  private _watchStateChanges() {\n    const inputStateChanged = this._formField && this._formField._control ? this._formField._control.stateChanges : of();\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(inputStateChanged).subscribe(() => {\n      this.checkPanel();\n      this.cdr.markForCheck();\n    });\n  }\n\n  /** The currently active option, coerced to MatOption type. */\n  get activeOption(): NovoOption | null {\n    if (this._keyManager) {\n      return this._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const key = event.key;\n\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (key === Key.Escape && !hasModifierKey(event)) {\n      event.preventDefault();\n    }\n\n    if (this.activeOption && key === Key.Enter && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      // this._resetActiveItem();\n      event.preventDefault();\n    } else {\n      const prevActiveItem = this._keyManager.activeItem;\n      const isArrowKey = key === Key.ArrowUp || key === Key.ArrowDown;\n\n      if (this.panelOpen || key === Key.Tab) {\n        this._keyManager.onKeydown(event);\n      } else if (isArrowKey && !this.overlay.panelOpen) {\n        this.openPanel();\n      }\n\n      // if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n      //   this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n      // }\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","// NG2\nimport { AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, HostBinding, Input, QueryList } from '@angular/core';\nimport { BooleanInput } from '../../utils';\nimport { NovoFieldElement } from './field';\n\n@Component({\n  selector: 'novo-fields',\n  templateUrl: './fieldset.html',\n  styleUrls: ['./fieldset.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'novo-field',\n    '[class.novo-fieldset-appearance-standard]': 'appearance == \"standard\"',\n    '[class.novo-fieldset-appearance-fill]': 'appearance == \"fill\"',\n    '[class.novo-fieldset-appearance-outline]': 'appearance == \"outline\"',\n    '[class.novo-fieldset-appearance-list]': 'appearance == \"list\"',\n    // '[class.novo-field-layout-horizontal]': 'layout==\"horizontal\"',\n    // '[class.novo-field-layout-vertical]': 'layout==\"vertical\"',\n  },\n})\nexport class NovoFieldsElement implements AfterContentInit {\n  @ContentChildren(NovoFieldElement)\n  _fields: QueryList<NovoFieldElement>;\n\n  _layout: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() get layout(): any {\n    return this._layout;\n  }\n  set layout(value) {\n    if (this._layout !== value) {\n      this._layout = value;\n      this._updateFieldLayout();\n    }\n  }\n\n  _appearance: 'standard' | 'outline' | 'fill' | 'list' = 'standard';\n  @Input() get appearance(): any {\n    return this._appearance;\n  }\n  set appearance(value) {\n    if (this._appearance !== value) {\n      this._appearance = value;\n      this._updateFieldAppearance();\n    }\n  }\n\n  @HostBinding('class.full-width')\n  @Input()\n  @BooleanInput()\n  fullWidth: boolean = false;\n\n  ngAfterContentInit(): any {\n    this._updateFieldLayout();\n    this._updateFieldAppearance();\n  }\n\n  private _updateFieldLayout(): void {\n    if (this._fields) {\n      this._fields.forEach((field) => {\n        field.layout = this.layout;\n      });\n    }\n  }\n\n  private _updateFieldAppearance(): void {\n    if (this._fields) {\n      this._fields.forEach((field) => {\n        field.appearance = this.appearance;\n      });\n    }\n  }\n}\n","import { Directive, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Renderer2 } from '@angular/core';\nimport { COMPOSITION_BUFFER_MODE, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IMaskDirective, IMaskFactory } from 'angular-imask';\nimport { format, isValid, parse } from 'date-fns';\nimport * as IMask from 'imask';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { NOVO_INPUT_FORMAT } from './base-format';\n\nexport const DATEFORMAT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDateFormatDirective),\n  multi: true,\n};\n\nexport enum DATE_FORMATS {\n  DATE = 'date',\n  ISO8601 = 'iso8601',\n  STRING = 'string',\n}\n\n@Directive({\n  selector: 'input[dateFormat]',\n  host: {\n    class: 'novo-date-format',\n  },\n  providers: [DATEFORMAT_VALUE_ACCESSOR, { provide: NOVO_INPUT_FORMAT, useExisting: NovoDateFormatDirective }],\n})\nexport class NovoDateFormatDirective extends IMaskDirective<any> {\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  @Input() dateFormat: DATE_FORMATS = DATE_FORMATS.DATE;\n\n  constructor(\n    private _element: ElementRef,\n    _renderer: Renderer2,\n    _factory: IMaskFactory,\n    @Optional() @Inject(COMPOSITION_BUFFER_MODE) _compositionMode: boolean,\n    private labels: NovoLabelService,\n  ) {\n    super(_element, _renderer, _factory, _compositionMode);\n    const dateFormat = this.labels.dateFormat.toUpperCase();\n\n    this.unmask = 'typed';\n    this.imask = {\n      mask: Date,\n      pattern: 'm{/}`d{/}`Y',\n      overwrite: true,\n      autofix: true,\n      lazy: false,\n      min: new Date(1970, 0, 1),\n      max: new Date(2030, 0, 1),\n      prepare: (str) => str.toUpperCase(),\n      format: (date) => this.formatValue(date),\n      parse: (str) => {\n        return parse(str);\n      },\n      blocks: {\n        d: {\n          mask: IMask.MaskedRange,\n          placeholderChar: 'D',\n          from: 1,\n          to: 31,\n          maxLength: 2,\n        },\n        m: {\n          mask: IMask.MaskedRange,\n          placeholderChar: 'M',\n          from: 1,\n          to: 12,\n          maxLength: 2,\n        },\n        Y: {\n          mask: IMask.MaskedRange,\n          placeholderChar: 'Y',\n          from: 1900,\n          to: 9999,\n        },\n      },\n    };\n  }\n\n  normalize(value: string) {\n    const pattern = this.labels.dateFormat.toUpperCase();\n    return format(parse(value), pattern);\n  }\n\n  formatAsIso(date: Date): string {\n    if (date && isValid(date)) {\n      return date.toISOString().slice(0, 10);\n    }\n    return null;\n  }\n\n  formatValue(value: any): string {\n    if (value == null) return '';\n    // Use `parse` because it keeps dates in locale\n    const date = parse(value);\n    if (isValid(date)) {\n      const dateFormat = this.labels.dateFormat.toUpperCase();\n      return format(date, dateFormat);\n    }\n    return this.normalize(value);\n  }\n\n  writeValue(value: any) {\n    super.writeValue(this.formatValue(value));\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = (date: any) => {\n      let formatted = date;\n      switch (this.dateFormat) {\n        case DATE_FORMATS.ISO8601:\n          formatted = this.formatAsIso(date);\n          break;\n        case DATE_FORMATS.STRING:\n          formatted = this.formatValue(date);\n          break;\n        default:\n          formatted = date;\n          break;\n      }\n      this.valueChange.emit(date);\n      fn(formatted);\n    };\n  }\n}\n","import { EventEmitter, InjectionToken } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nexport const NOVO_INPUT_FORMAT = new InjectionToken<NovoInputFormat>('NovoInputFormat');\n\nexport interface NovoInputFormat<T = any> extends ControlValueAccessor {\n  valueChange: EventEmitter<any>;\n  formatValue(value: T): string;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { COMPOSITION_BUFFER_MODE, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IMaskDirective, IMaskFactory } from 'angular-imask';\nimport { format, isValid, parse } from 'date-fns';\nimport * as IMask from 'imask';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { Key } from '../../../utils';\nimport { NovoInputFormat, NOVO_INPUT_FORMAT } from './base-format';\n\nexport const TIMEFORMAT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTimeFormatDirective),\n  multi: true,\n};\n\nexport enum TIME_FORMATS {\n  DATE = 'date',\n  ISO8601 = 'iso8601',\n  STRING = 'string',\n}\n\n@Directive({\n  selector: 'input[timeFormat]',\n  host: {\n    class: 'novo-time-format',\n    '(input)': '_checkInput($event)',\n    '(blur)': '_handleBlur($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  providers: [TIMEFORMAT_VALUE_ACCESSOR, { provide: NOVO_INPUT_FORMAT, useExisting: NovoTimeFormatDirective }],\n})\nexport class NovoTimeFormatDirective extends IMaskDirective<any> implements NovoInputFormat, AfterViewInit, OnChanges {\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  @Input() military: boolean = false;\n  @Input() timeFormat: TIME_FORMATS = TIME_FORMATS.DATE;\n\n  constructor(\n    private _element: ElementRef,\n    _renderer: Renderer2,\n    _factory: IMaskFactory,\n    @Optional() @Inject(COMPOSITION_BUFFER_MODE) _compositionMode: boolean,\n    private labels: NovoLabelService,\n    private cdr: ChangeDetectorRef,\n  ) {\n    super(_element, _renderer, _factory, _compositionMode);\n    this.initFormatOptions();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (Object.keys(changes).some((key) => ['military', 'timeFormat'].includes(key))) {\n      this.initFormatOptions();\n    }\n  }\n\n  initFormatOptions() {\n    // const pattern = this.military ? 'HH:mm' : 'hh:mm A';\n    const amFormat = this.labels.timeFormatAM.toUpperCase();\n    const pmFormat = this.labels.timeFormatPM.toUpperCase();\n    this.unmask = 'typed';\n    this.imask = {\n      mask: Date,\n      pattern: this.military ? 'HH:mm' : 'hh:mm aa',\n      overwrite: true,\n      autofix: true,\n      lazy: false,\n      min: new Date(1970, 0, 1),\n      max: new Date(2030, 0, 1),\n      prepare: (str) => str.toUpperCase(),\n      format: (value) => this.formatValue(value),\n      parse: (str) => {\n        const time = this.convertTime12to24(str);\n        return parse(`${format(Date.now(), 'YYYY-MM-DD')}T${time}`);\n      },\n      blocks: {\n        HH: {\n          mask: IMask.MaskedRange,\n          placeholderChar: '-',\n          maxLength: 2,\n          from: 0,\n          to: 23,\n        },\n        hh: {\n          mask: IMask.MaskedRange,\n          placeholderChar: '-',\n          maxLength: 2,\n          from: 1,\n          to: 12,\n        },\n        mm: {\n          mask: IMask.MaskedRange,\n          placeholderChar: '-',\n          maxLength: 2,\n          from: 0,\n          to: 59,\n        },\n        aa: {\n          mask: IMask.MaskedEnum,\n          placeholderChar: '-',\n          enum: ['AM', 'PM', 'am', 'pm', amFormat, pmFormat],\n        },\n      },\n    };\n  }\n\n  _checkInput(event: InputEvent): void {\n    if (document.activeElement === event.target) {\n      const text = (event.target as HTMLInputElement).value;\n      const hour = text.slice(0, 2);\n      if ((this.military && Number(text[0]) > 2) || (!this.military && Number(text[0]) > 1)) {\n        event.preventDefault();\n        const value = `0${text}`;\n        (event.target as HTMLInputElement).value = value;\n        // this.onChange(value);\n      }\n      if (!this.military) {\n        const input = text.substr(5, 4).replace(/\\-/g, '').trim().slice(0, 2);\n        const timePeriod = this.imask.blocks.aa.enum.find((it) => it[0] === input[0]);\n        if (timePeriod) {\n          (event.target as HTMLInputElement).value = `${text.slice(0, 5)} ${timePeriod}`;\n        }\n        if ((event.target as HTMLInputElement).selectionStart >= 3 && this.hourOneFormatRequired(hour)) {\n          (event.target as HTMLInputElement).value = `01:${(event.target as HTMLInputElement).value.slice(\n            3,\n            (event.target as HTMLInputElement).value.length,\n          )}`;\n        }\n      }\n    }\n  }\n\n  _handleBlur(event: FocusEvent): void {\n    const text = (event.target as HTMLInputElement).value;\n    const hour: string = text.slice(0, 2);\n    if (!this.military) {\n      const input = text.substr(5, 4).replace(/\\-/g, '').trim().slice(0, 2);\n      const timePeriod = this.imask.blocks.aa.enum.find((it) => it[0] === input[0]);\n      if (this.hourOneFormatRequired(hour)) {\n        (event.target as HTMLInputElement).value = `01:${text.slice(3, text.length)}`;\n      }\n      if (!timePeriod) {\n        (event.target as HTMLInputElement).value = `${text.slice(0, 5)} --`;\n      }\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const input = event.target as HTMLInputElement;\n    const hour: string = input.value.slice(0, 2);\n\n    if (event.key === Key.Backspace && input.selectionStart === input.value.length) {\n      (event.target as HTMLInputElement).value = `${input.value.slice(0, 5)} --`;\n    } else if (event.key === Key.Tab && input.selectionStart <= 2 && this.hourOneFormatRequired(hour)) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      input.value = `01:${input.value.slice(3, input.value.length)}`;\n      input.setSelectionRange(3, 3);\n    } else if (event.key === Key.ArrowRight && input.selectionStart >= 2 && this.hourOneFormatRequired(hour)) {\n      input.value = `01:${input.value.slice(3, input.value.length)}`;\n      input.setSelectionRange(2, 2);\n    }\n  }\n\n  normalize(value: string) {\n    if (this.military) {\n      return this.convertTime12to24(value);\n    }\n    return this.convertTime24to12(value);\n  }\n\n  formatValue(value: any): string {\n    const date = parse(value);\n    if (isValid(date)) {\n      const pattern = this.military ? 'HH:mm' : 'hh:mm A';\n      return format(date, pattern);\n    }\n    return this.normalize(value);\n  }\n\n  formatAsIso(date: Date): string {\n    if (date && isValid(date)) {\n      return format(date, 'HH:mm');\n    }\n    return null;\n  }\n\n  convertTime12to24(time12h: string) {\n    const pmFormat = this.labels.timeFormatPM.toUpperCase();\n    const [time, meridian] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (['PM', pmFormat].includes(meridian)) {\n      hours = `${parseInt(hours, 10) + 12}`.padStart(2, '0');\n    }\n    return `${hours}:${minutes}`;\n  }\n\n  convertTime24to12(time24h: string) {\n    if (time24h.length === 5) {\n      const date = parse(`2020-01-01T${time24h}`);\n      return format(date, 'hh:mm A');\n    }\n    return time24h;\n  }\n\n  writeValue(value: any) {\n    super.writeValue(this.formatValue(value));\n  }\n\n  registerOnChange(fn: (date: any) => void): void {\n    this.onChange = (date: any) => {\n      let formatted = date;\n      switch (this.timeFormat) {\n        case TIME_FORMATS.ISO8601:\n          formatted = this.formatAsIso(date);\n          break;\n        case TIME_FORMATS.STRING:\n          formatted = this.formatValue(date);\n          break;\n        default:\n          formatted = date;\n          break;\n      }\n      this.valueChange.emit(date);\n      fn(formatted);\n    };\n  }\n\n  hourOneFormatRequired(hourInput: string): boolean {\n    return hourInput === '-1' || hourInput === '1-';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { AutofillMonitor } from '@angular/cdk/text-field';\nimport {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { NovoFieldControl } from './field-control';\n\n/**\n * This token is used to inject the object whose value should be set into `NovoInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `NovoInput` delegate the getting and setting of the\n * value to them.\n */\nexport const NOVO_INPUT_VALUE_ACCESSOR = new InjectionToken<{ value: any }>('NOVO_INPUT_VALUE_ACCESSOR');\n\n// Invalid input type. Using one of these will throw an NovoInputUnsupportedTypeError.\nconst NOVO_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset', 'submit'];\n\nlet nextUniqueId = 0;\n\n// Boilerplate for applying mixins to NovoInput.\nclass NovoInputBase {\n  constructor(\n    public _parentForm: NgForm,\n    public _parentFormGroup: FormGroupDirective,\n    /** @docs-private */\n    public ngControl: NgControl,\n  ) {}\n}\n\n/** Directive that allows a native input to work inside a `NovoField`. */\n// tslint:disable: no-conflicting-lifecycle member-ordering\n@Directive({\n  selector: `input[novoInput], textarea[novoInput], select[novoInput]`,\n  host: {\n    class: 'novo-input-element',\n    '[attr.id]': 'id',\n    '[attr.placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.autocomplete]': \"'off'\",\n  },\n  providers: [{ provide: NovoFieldControl, useExisting: NovoInput }],\n})\nexport class NovoInput extends NovoInputBase implements NovoFieldControl<any>, OnChanges, OnDestroy, AfterViewInit, DoCheck {\n  protected _uid = `novo-input-${nextUniqueId++}`;\n  protected _previousNativeValue: any;\n  private _inputValueAccessor: { value: any };\n  /** The aria-describedby attribute on the input for improved a11y. */\n  @HostBinding('attr.aria-describedby') _ariaDescribedby: string;\n\n  /** Whether the component is being rendered on the server. */\n  readonly _isServer: boolean;\n\n  /** Whether the component is a native html select. */\n  readonly _isNativeSelect: boolean;\n\n  /** Whether the component is a textarea. */\n  readonly _isTextarea: boolean;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  focused: boolean = false;\n\n  errorState: boolean = false;\n\n  /** @docs-private Implemented as part of NovoFieldControl. */\n  lastKeyValue: string = null;\n  /** @docs-private Implemented as part of NovoFieldControl.*/\n  lastCaretPosition: number | null;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  controlType: string = 'novo-input';\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  autofilled = false;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  protected _disabled = false;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  protected _id: string;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input() placeholder: string;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n  protected _required = false;\n\n  /** Input type of the element. */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    this._type = value || 'text';\n    this._validateType();\n\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n      (this._elementRef.nativeElement as HTMLInputElement).type = this._type;\n    }\n  }\n  protected _type = 'text';\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): string {\n    return this._inputValueAccessor.value;\n  }\n  set value(value: string) {\n    if (value !== this.value) {\n      this._inputValueAccessor.value = value;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Whether the element is readonly. */\n  @Input()\n  get readonly(): boolean {\n    return this._readonly;\n  }\n  set readonly(value: boolean) {\n    this._readonly = coerceBooleanProperty(value);\n  }\n  private _readonly = false;\n\n  protected _neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter((t) =>\n    getSupportedInputTypes().has(t),\n  );\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n    protected _platform: Platform,\n    /** @docs-private */\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    @Optional() @Self() @Inject(NOVO_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n    private _autofillMonitor: AutofillMonitor,\n    ngZone: NgZone,\n  ) {\n    super(_parentForm, _parentFormGroup, ngControl);\n\n    const element = this._elementRef.nativeElement;\n    const nodeName = element.nodeName.toLowerCase();\n\n    // If no input value accessor was explicitly specified, use the element as the input value\n    // accessor.\n    this._inputValueAccessor = inputValueAccessor || element;\n\n    this._previousNativeValue = this.value;\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        _elementRef.nativeElement.addEventListener('keyup', (event: Event) => {\n          const el = event.target as HTMLInputElement;\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n          }\n        });\n      });\n    }\n\n    this._isServer = !this._platform.isBrowser;\n    this._isNativeSelect = nodeName === 'select';\n    this._isTextarea = nodeName === 'textarea';\n\n    this.controlType = (this._elementRef.nativeElement as HTMLInputElement).type;\n    if (this._isNativeSelect) {\n      this.controlType = (element as HTMLSelectElement).multiple ? 'select-multiple' : 'select';\n    } else if (this._isTextarea) {\n      this.controlType = 'textarea';\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((event) => {\n        this.autofilled = event.isAutofilled;\n        this.stateChanges.next();\n      });\n    }\n  }\n\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      // this.updateErrorState();\n    }\n\n    // We need to dirty-check the native element's value, because there are some cases where\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n    // updating the value using `emitEvent: false`).\n    this._dirtyCheckNativeValue();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  @HostListener('focus', ['true'])\n  @HostListener('blur', ['false'])\n  _focusChanged(isFocused: boolean) {\n    if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n      this.focused = isFocused;\n      this.stateChanges.next();\n    }\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  @HostListener('input', ['$event'])\n  _onInput(event: InputEvent) {\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    this.lastKeyValue = event.data;\n    if (this._isTextarea) {\n      this.lastCaretPosition = (this._elementRef.nativeElement as HTMLTextAreaElement).selectionStart;\n    }\n  }\n\n  /** Does some manual dirty checking on the native input `value` property. */\n  protected _dirtyCheckNativeValue() {\n    const newValue = this._elementRef.nativeElement.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Make sure the input is a supported type. */\n  protected _validateType() {\n    if (NOVO_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n      throw new Error(`Invalid Input Type: ${this._type}`);\n    }\n  }\n\n  /** Checks whether the input type is one of the types that are never empty. */\n  protected _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n\n  /** Checks whether the input is invalid based on the native validation. */\n  protected _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n    return validity && validity.badInput;\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    if (this._isNativeSelect) {\n      // For a single-selection `<select>`, the label should float when the selected option has\n      // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n      // overlapping the label with the options.\n      const selectElement = this._elementRef.nativeElement as HTMLSelectElement;\n      const firstOption: HTMLOptionElement | undefined = selectElement.options[0];\n\n      // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n      // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n      return (\n        this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label)\n      );\n    } else {\n      return this.focused || !this.empty;\n    }\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n    // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n    // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_readonly: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that may\n  // accept different types.\n  static ngAcceptInputType_value: any;\n}\n","import { Directive, ElementRef, Inject, Input, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NovoInputFormat, NOVO_INPUT_FORMAT } from './formats/base-format';\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[picker]',\n  host: {\n    class: 'novo-has-picker',\n    '[attr.autocomplete]': 'autocompleteAttribute',\n  },\n})\nexport class NovoPickerDirective {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set picker(picker: ControlValueAccessor) {\n    if (picker) {\n      this._picker = picker;\n      picker.registerOnChange((value) => this.updateValue(value));\n    }\n  }\n  _picker: ControlValueAccessor;\n  /**\n   * `autocomplete` attribute to be set on the input element.\n   * @docs-private\n   */\n  @Input('autocomplete') autocompleteAttribute: string = 'off';\n\n  constructor(\n    private _elementRef: ElementRef<HTMLInputElement>,\n    @Optional() @Self() @Inject(NOVO_INPUT_FORMAT) private formatter: NovoInputFormat<any>,\n  ) {\n    if (!this.formatter) {\n      console.warn('Picker directive is missing required formatter');\n    }\n    this.formatter?.valueChange.subscribe((value) => {\n      this.updatePicker(value);\n    });\n  }\n\n  updateValue(value: any) {\n    this.formatter.writeValue(value);\n  }\n\n  updatePicker(value: any) {\n    if (this._picker) {\n      this._picker.writeValue(value);\n    }\n  }\n}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoButtonElement } from '../../button';\nimport { NovoOverlayTemplateComponent } from '../../common/overlay';\nimport { NovoFieldElement, NOVO_FORM_FIELD } from '../field';\n\n@Component({\n  selector: 'novo-picker-toggle',\n  templateUrl: 'picker-toggle.component.html',\n  styleUrls: ['picker-toggle.component.scss'],\n  host: {\n    class: 'novo-picker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[class.novo-toggle-active]': 'picker && picker.opened',\n    '[class.novo-accent]': 'picker && picker.color === \"accent\"',\n    '[class.novo-warn]': 'picker && picker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'novoPickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoPickerToggleElement<T = any> implements AfterContentInit, AfterViewInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') picker: T;\n\n  @Input() icon: string;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.picker) {\n      return (this.picker as any).disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Underlying button element. */\n  @ViewChild('button') _button: NovoButtonElement;\n\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  element: ElementRef;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string,\n    @Optional() @Inject(NOVO_FORM_FIELD) private _formField: NovoFieldElement,\n  ) {\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.picker) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  ngAfterViewInit() {\n    this.element = this._formField.getConnectedOverlayOrigin() || this._elementRef;\n  }\n\n  togglePanel(event?: Event) {\n    this.cdr.detectChanges();\n    if (!this.overlay.panelOpen) {\n      this.openPanel(event);\n    } else {\n      this.closePanel(event);\n    }\n  }\n\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(event?: Event): void {\n    if (!this.overlay.panelOpen) {\n      this.overlay.openPanel();\n    }\n  }\n\n  closePanel(event?: Event): void {\n    this.overlay.closePanel();\n  }\n\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n\n  private _watchStateChanges() {\n    // const pickerStateChanged = this.picker ? this.picker.stateChanges : observableOf();\n    // const inputStateChanged = this.picker && this.picker.pickerInput ? this.picker.pickerInput.stateChanges : observableOf();\n    // const pickerToggled = this.picker ? merge(this.picker.openedStream, this.picker.closedStream) : observableOf();\n    // this._stateChanges.unsubscribe();\n    // this._stateChanges = merge(pickerStateChanged, inputStateChanged, pickerToggled).subscribe(() => this.cdr.markForCheck());\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoCommonModule, NovoOptionModule } from '../common';\n// APP\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoAutocompleteElement } from './autocomplete/autocomplete.component';\nimport { NovoErrorElement } from './error/error';\nimport { NovoFieldElement, NovoFieldPrefixDirective, NovoFieldSuffixDirective } from './field';\nimport { NovoFieldsElement } from './fieldset';\nimport { NovoDateFormatDirective } from './formats/date-format';\nimport { NovoTimeFormatDirective } from './formats/time-format';\nimport { NovoHintElement } from './hint/hint';\nimport { NovoInput } from './input';\nimport { NovoPickerDirective } from './picker.directive';\nimport { NovoPickerToggleElement } from './toggle/picker-toggle.component';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule, NovoOverlayModule, NovoOptionModule, NovoCommonModule],\n  declarations: [\n    NovoFieldElement,\n    // NovoLabelElement,\n    NovoHintElement,\n    NovoErrorElement,\n    NovoInput,\n    NovoFieldPrefixDirective,\n    NovoFieldSuffixDirective,\n    NovoFieldsElement,\n    NovoTimeFormatDirective,\n    NovoDateFormatDirective,\n    NovoPickerToggleElement,\n    NovoPickerDirective,\n    NovoAutocompleteElement,\n  ],\n  exports: [\n    NovoFieldElement,\n    // NovoLabelElement,\n    NovoHintElement,\n    NovoErrorElement,\n    NovoInput,\n    NovoFieldPrefixDirective,\n    NovoFieldSuffixDirective,\n    NovoFieldsElement,\n    NovoTimeFormatDirective,\n    NovoDateFormatDirective,\n    NovoPickerToggleElement,\n    NovoPickerDirective,\n    NovoAutocompleteElement,\n  ],\n})\nexport class NovoFieldModule {}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { Key } from '../../utils';\nimport { CanUpdateErrorState, CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState, NOVO_OPTION_PARENT_COMPONENT } from '../common';\nimport { NovoFieldControl } from '../field';\nimport { NovoChipElement, NovoChipEvent, NovoChipSelectionChange } from './Chip';\nimport { NovoChipTextControl } from './ChipTextControl';\n\n// Boilerplate for applying mixins to NovoChipList.\n/** @docs-private */\nclass NovoChipListBase {\n  constructor(\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    public _parentForm: NgForm,\n    public _parentFormGroup: FormGroupDirective,\n    /** @docs-private */\n    public ngControl: NgControl,\n  ) {}\n}\nconst _NovoChipListMixinBase: CanUpdateErrorStateCtor & typeof NovoChipListBase = mixinErrorState(NovoChipListBase);\n\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the chip list value has changed. */\nexport class NovoChipListChange {\n  constructor(\n    /** Chip list that emitted the event. */\n    public source: NovoChipList,\n    /** Value of the chip list when the event was emitted. */\n    public value: any,\n  ) {}\n}\n\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\n@Component({\n  selector: 'novo-chip-list',\n  template: `<div class=\"novo-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'novoChipList',\n  host: {\n    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-required]': 'role ? required : null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.role]': 'role',\n    '[class.novo-chip-list-stacked]': 'stacked',\n    '[class.novo-chip-list-focused]': 'focused',\n    '[class.novo-chip-list-disabled]': 'disabled',\n    '[class.novo-chip-list-invalid]': 'errorState',\n    '[class.novo-chip-list-required]': 'required',\n    '[attr.aria-orientation]': 'ariaOrientation',\n    class: 'novo-chip-list',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n    '(keydown)': '_keydown($event)',\n    '[id]': '_uid',\n  },\n  providers: [\n    { provide: NovoFieldControl, useExisting: NovoChipList },\n    { provide: NOVO_OPTION_PARENT_COMPONENT, useExisting: NovoChipList },\n  ],\n  // styleUrls: ['./ChipList.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoChipList\n  extends _NovoChipListMixinBase\n  implements NovoFieldControl<any>, ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState\n{\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  readonly controlType: string = 'chip-list';\n\n  /**\n   * When a chip is destroyed, we store the index of the destroyed chip until the chips\n   * query list notifies about the update. This is necessary because we cannot determine an\n   * appropriate chip that should receive focus until the array of chips updated completely.\n   */\n  private _lastDestroyedChipIndex: number | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Subscription to focus changes in the chips. */\n  private _chipFocusSubscription: Subscription | null;\n\n  /** Subscription to blur changes in the chips. */\n  private _chipBlurSubscription: Subscription | null;\n\n  /** Subscription to selection changes in chips. */\n  private _chipSelectionSubscription: Subscription | null;\n\n  /** Subscription to remove changes in chips. */\n  private _chipRemoveSubscription: Subscription | null;\n\n  /** The chip input to add more chips */\n  protected _chipInput: NovoChipTextControl;\n\n  /** Uid of the chip list */\n  _uid: string = `novo-chip-list-${nextUniqueId++}`;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n\n  /**\n   * User defined tab index.\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\n   */\n  _userTabIndex: number | null = null;\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<NovoChipElement>;\n\n  /** Function when touched */\n  _onTouched = () => {};\n\n  /** Function when changed */\n  _onChange: (value: any) => void = () => {};\n\n  _selectionModel: SelectionModel<NovoChipElement>;\n\n  /** The array of selected chips inside chip list. */\n  get selected(): NovoChipElement[] | NovoChipElement {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The ARIA role applied to the chip list. */\n  get role(): string | null {\n    return this.empty ? null : 'listbox';\n  }\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Whether the user should be allowed to select multiple chips. */\n  @Input()\n  get multiple(): boolean {\n    return this._multiple;\n  }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  private _multiple: boolean = false;\n\n  /** Whether the chips should appear stacked instead of a row. */\n  @Input()\n  get stacked(): boolean {\n    return this._stacked;\n  }\n  set stacked(value: boolean) {\n    this._stacked = coerceBooleanProperty(value);\n  }\n  private _stacked: boolean = false;\n\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith(): (o1: any, o2: any) => boolean {\n    return this._compareWith;\n  }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  get id(): string {\n    return this._chipInput ? this._chipInput.id : this._uid;\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  protected _required: boolean = false;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get placeholder(): string {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  protected _placeholder: string;\n\n  /** Whether any chips or the novoChipInput inside of this chip-list has focus. */\n  get focused(): boolean {\n    return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    return !this.empty || this.focused;\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  protected _disabled: boolean = false;\n\n  /** Orientation of the chip list. */\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Whether or not this chip list is selectable. When a chip list is not selectable,\n   * the selected states for all the chips inside the chip list are always ignored.\n   */\n  @Input()\n  get selectable(): boolean {\n    return this._selectable;\n  }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n\n    if (this.chips) {\n      this.chips.forEach((chip) => (chip._chipListSelectable = this._selectable));\n    }\n  }\n  protected _selectable: boolean = true;\n\n  @Input()\n  set tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges(): Observable<NovoChipSelectionChange> {\n    return merge(...this.chips.map((chip) => chip.selectionChange));\n  }\n\n  /** Combined stream of all of the child chips' focus change events. */\n  get chipFocusChanges(): Observable<NovoChipEvent> {\n    return merge(...this.chips.map((chip) => chip._onFocus));\n  }\n\n  /** Combined stream of all of the child chips' blur change events. */\n  get chipBlurChanges(): Observable<NovoChipEvent> {\n    return merge(...this.chips.map((chip) => chip._onBlur));\n  }\n\n  /** Combined stream of all of the child chips' remove change events. */\n  get chipRemoveChanges(): Observable<NovoChipEvent> {\n    return merge(...this.chips.map((chip) => chip.destroyed));\n  }\n\n  /** Event emitted when the selected chip list value has been changed by the user. */\n  @Output() readonly change: EventEmitter<NovoChipListChange> = new EventEmitter<NovoChipListChange>();\n\n  /**\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The chip components contained within this chip list. */\n  @ContentChildren(NovoChipElement, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true,\n  })\n  chips: QueryList<NovoChipElement>;\n\n  /** @docs-private Implemented as part of NovoFieldControl. */\n  lastKeyValue: string = null;\n  /** @docs-private Implemented as part of NovoFieldControl.*/\n  lastCaretPosition: number | null;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() private _dir: Directionality,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    /** @docs-private */\n    @Optional() @Self() public ngControl: NgControl,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<NovoChipElement>(this.chips)\n      .withWrap()\n      .withVerticalOrientation()\n      .withHomeAndEnd()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((dir) => this._keyManager.withHorizontalOrientation(dir));\n    }\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._allowFocusEscape();\n    });\n\n    // When the list changes, re-subscribe\n    this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => {\n          this._syncChipsState();\n        });\n      }\n\n      this._resetChips();\n\n      // Reset chips selected/deselected status\n      this._initializeSelection();\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<NovoChipElement>(this.multiple, undefined, false);\n    this.stateChanges.next();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n\n      if (this.ngControl.disabled !== this._disabled) {\n        this.disabled = !!this.ngControl.disabled;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.stateChanges.complete();\n\n    this._dropSubscriptions();\n  }\n\n  /** Associates an HTML input element with this chip list. */\n  registerInput(inputElement: NovoChipTextControl): void {\n    this._chipInput = inputElement;\n\n    // We use this attribute to match the chip list to its input in test harnesses.\n    // Set the attribute directly here to avoid \"changed after checked\" errors.\n    this._elementRef.nativeElement.setAttribute('data-novo-chip-input', inputElement.id);\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    if (this.chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event: MouseEvent) {\n    if (!this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    // Focus on first element if there's no chipInput inside chip-list\n    if (this._chipInput && this._chipInput.focused) {\n      // do nothing\n    } else if (this._chipInput) {\n      this._focusInput(options);\n      this.stateChanges.next();\n    } else if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n      this.stateChanges.next();\n    }\n  }\n\n  /** Attempt to focus an input if we have one. */\n  _focusInput(options?: FocusOptions) {\n    if (this._chipInput) {\n      this._chipInput.focus(options);\n    }\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keydown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n\n    // If they are on an empty input and hit backspace, focus the last chip\n    if (event.key === Key.Backspace && this._isInputEmpty(target)) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else if (target && target.classList.contains('novo-chip')) {\n      this._keyManager.onKeydown(event);\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Check the tab index as you should not be allowed to focus an empty list.\n   */\n  protected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n\n  /**\n   * If the amount of chips changed, we need to update the\n   * key manager state and focus the next closest chip.\n   */\n  protected _updateFocusForDestroyedChips() {\n    // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n    if (this._lastDestroyedChipIndex != null) {\n      if (this.chips.length) {\n        const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n        this._keyManager.setActiveItem(newChipIndex);\n      } else {\n        this.focus();\n      }\n    }\n\n    this._lastDestroyedChipIndex = null;\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let input = element as HTMLInputElement;\n      return !input.value;\n    }\n\n    return false;\n  }\n\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\n    this._clearSelection();\n    this.chips.forEach((chip) => chip.deselect());\n\n    if (Array.isArray(value)) {\n      value.forEach((currentValue) => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const correspondingChip = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what chip the user interacted with last.\n      if (correspondingChip) {\n        if (isUserInput) {\n          this._keyManager.setActiveItem(correspondingChip);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  private _selectValue(value: any, isUserInput: boolean = true): NovoChipElement | undefined {\n    const correspondingChip = this.chips.find((chip) => {\n      return chip.value != null && this._compareWith(chip.value, value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      this._selectionModel.select(correspondingChip);\n    }\n\n    return correspondingChip;\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl || this._value) {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n        this.stateChanges.next();\n      }\n    });\n  }\n\n  /**\n   * Deselects every chip in the list.\n   * @param skip Chip that should not be deselected.\n   */\n  private _clearSelection(skip?: NovoChipElement): void {\n    this._selectionModel.clear();\n    this.chips.forEach((chip) => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n    this.stateChanges.next();\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.chips.forEach((chip) => {\n        if (chip.selected) {\n          this._selectionModel.select(chip);\n        }\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map((chip) => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new NovoChipListChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\n  _blur() {\n    if (!this._hasFocusedChip()) {\n      this._keyManager.setActiveItem(-1);\n    }\n\n    if (!this.disabled) {\n      if (this._chipInput) {\n        // If there's a chip input, we should check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      } else {\n        // If there's no chip input, then mark the field as touched.\n        this._markAsTouched();\n      }\n    }\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /**\n   * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the list from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this._tabIndex !== -1) {\n      this._tabIndex = -1;\n\n      setTimeout(() => {\n        this._tabIndex = this._userTabIndex || 0;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _resetChips() {\n    this._dropSubscriptions();\n    this._listenToChipsFocus();\n    this._listenToChipsSelection();\n    this._listenToChipsRemoved();\n  }\n\n  private _dropSubscriptions() {\n    if (this._chipFocusSubscription) {\n      this._chipFocusSubscription.unsubscribe();\n      this._chipFocusSubscription = null;\n    }\n\n    if (this._chipBlurSubscription) {\n      this._chipBlurSubscription.unsubscribe();\n      this._chipBlurSubscription = null;\n    }\n\n    if (this._chipSelectionSubscription) {\n      this._chipSelectionSubscription.unsubscribe();\n      this._chipSelectionSubscription = null;\n    }\n\n    if (this._chipRemoveSubscription) {\n      this._chipRemoveSubscription.unsubscribe();\n      this._chipRemoveSubscription = null;\n    }\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsSelection(): void {\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((event) => {\n      event.source.selected ? this._selectionModel.select(event.source) : this._selectionModel.deselect(event.source);\n\n      // For single selection chip list, make sure the deselected value is unselected.\n      if (!this.multiple) {\n        this.chips.forEach((chip) => {\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\n            chip.deselect();\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsFocus(): void {\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe((event) => {\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItem(chipIndex);\n      }\n      this.stateChanges.next();\n    });\n\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n  }\n\n  private _listenToChipsRemoved(): void {\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((event) => {\n      const chip = event.chip;\n      const chipIndex = this.chips.toArray().indexOf(event.chip);\n\n      // In case the chip that will be removed is currently focused, we temporarily store\n      // the index in order to be able to determine an appropriate sibling chip that will\n      // receive focus.\n      if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n        this._lastDestroyedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  private _originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('novo-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  /** Checks whether any of the chips is focused. */\n  private _hasFocusedChip() {\n    return this.chips && this.chips.some((chip) => chip._hasFocus);\n  }\n\n  /** Syncs the list's state with the individual chips. */\n  private _syncChipsState() {\n    if (this.chips) {\n      this.chips.forEach((chip) => {\n        chip._chipListDisabled = this._disabled;\n        chip._chipListMultiple = this.multiple;\n        chip._chipListSelectable = this.selectable;\n      });\n    }\n  }\n\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport { Directive, ElementRef, EventEmitter, forwardRef, Inject, Input, OnChanges, Output } from '@angular/core';\nimport { Key } from '../../utils';\nimport { NovoChipsDefaultOptions, NOVO_CHIPS_DEFAULT_OPTIONS } from './ChipDefaults';\nimport { NovoChipList } from './ChipList';\nimport { NovoChipTextControl } from './ChipTextControl';\n\n/** Represents an input event on a `novoChipInput`. */\nexport interface NovoChipInputEvent {\n  /** The native `<input>` element that the event is being fired for. */\n  input: HTMLInputElement;\n\n  /** The value of the input. */\n  value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\n@Directive({\n  selector: 'input[novoChipInput]',\n  exportAs: 'novoChipInput, novoChipInputFor',\n  host: {\n    class: 'novo-chip-input novo-input-element',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()',\n    '(focus)': '_focus()',\n    '(input)': '_onInput()',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.placeholder]': 'placeholder || null',\n    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n    '[attr.aria-required]': '_chipList && _chipList.required || null',\n  },\n})\nexport class NovoChipInput implements NovoChipTextControl, OnChanges {\n  /** Whether the control is focused. */\n  focused: boolean = false;\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  @Input('novoChipInputAddOnBlur')\n  get addOnBlur(): boolean {\n    return this._addOnBlur;\n  }\n  set addOnBlur(value: boolean) {\n    this._addOnBlur = coerceBooleanProperty(value);\n  }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[Key.Enter]`.\n   */\n  @Input('novoChipInputSeparatorKeyCodes')\n  separatorKeyCodes: readonly string[] = this._defaultOptions.separatorKeyCodes;\n\n  /** Emitted when a chip is to be added. */\n  @Output('novoChipInputTokenEnd')\n  chipEnd: EventEmitter<NovoChipInputEvent> = new EventEmitter<NovoChipInputEvent>();\n\n  /** The input's placeholder text. */\n  @Input() placeholder: string = '';\n\n  /** Unique id for the input. */\n  @Input() id: string = `mat-chip-list-input-${nextUniqueId++}`;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled || (this._chipList && this._chipList.disabled);\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean = false;\n\n  /** Whether the input is empty. */\n  get empty(): boolean {\n    return !this._inputElement.value;\n  }\n\n  /** The native input element to which this directive is attached. */\n  protected _inputElement: HTMLInputElement;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement>,\n    @Inject(NOVO_CHIPS_DEFAULT_OPTIONS) private _defaultOptions: NovoChipsDefaultOptions,\n    @Inject(forwardRef(() => NovoChipList)) private _chipList: NovoChipList,\n  ) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n    this._chipList.registerInput(this);\n  }\n\n  ngOnChanges() {\n    this._chipList.stateChanges.next();\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event?: KeyboardEvent) {\n    // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n    // want to do this when going backwards, because focus should go back to the first chip.\n    if (event && event.key === Key.Tab && !hasModifierKey(event, 'shiftKey')) {\n      this._chipList._allowFocusEscape();\n    }\n\n    this._emitChipEnd(event);\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipList.focused) {\n      this._chipList._blur();\n    }\n    this._chipList.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._chipList.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipList.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._inputElement.focus(options);\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  private _isSeparatorKey(event: KeyboardEvent) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.key);\n  }\n\n  static ngAcceptInputType_addOnBlur: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","// NG2\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild, ViewContainerRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\nimport { ReplaySubject } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst CHIPS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoChipsElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'chips,novo-chips',\n  providers: [CHIPS_VALUE_ACCESSOR],\n  template: `\n    <div class=\"novo-chip-container\">\n      <novo-chip\n        *ngFor=\"let item of _items | async\"\n        [class.selected]=\"item == selected\"\n        [selectable]=\"true\"\n        [disabled]=\"disablePickerInput\"\n        (removed)=\"remove($event, item)\"\n        (selectionChange)=\"select($event, item)\"\n        (deselect)=\"deselect($event, item)\"\n      >\n        <novo-icon *ngIf=\"getAvatarType(item)\" class=\"txc-{{ getAvatarType(item) }}\" novoChipAvatar>circle</novo-icon>\n        {{ item.label }}\n        <novo-icon novoChipRemove>x</novo-icon>\n      </novo-chip>\n    </div>\n    <div class=\"chip-input-container\" *ngIf=\"!maxlength || (maxlength && items.length < maxlength)\">\n      <novo-picker\n        clearValueOnSelect=\"true\"\n        [closeOnSelect]=\"closeOnSelect\"\n        [config]=\"source\"\n        [disablePickerInput]=\"disablePickerInput\"\n        [placeholder]=\"placeholder\"\n        [(ngModel)]=\"itemToAdd\"\n        (select)=\"add($event)\"\n        (keydown)=\"onKeyDown($event)\"\n        (focus)=\"onFocus($event)\"\n        (typing)=\"onTyping($event)\"\n        (blur)=\"onTouched($event)\"\n        [selected]=\"items\"\n        [overrideElement]=\"element\"\n      >\n      </novo-picker>\n    </div>\n    <div class=\"preview-container\">\n      <span #preview></span>\n    </div>\n    <i class=\"bhi-search\" [class.has-value]=\"items.length\" *ngIf=\"!disablePickerInput\"></i>\n    <label class=\"clear-all\" *ngIf=\"items.length && !disablePickerInput\" (click)=\"clearValue()\"\n      >{{ labels.clearAll }} <i class=\"bhi-times\"></i\n    ></label>\n  `,\n  host: {\n    '[class.with-value]': 'items.length > 0',\n    '[class.disabled]': 'disablePickerInput',\n  },\n})\nexport class NovoChipsElement implements OnInit, ControlValueAccessor {\n  @Input()\n  closeOnSelect: boolean = false;\n  @Input()\n  placeholder: string = '';\n  @Input()\n  source: any;\n  @Input()\n  maxlength: any;\n  @Input()\n  type: any;\n  @Input()\n  set disablePickerInput(v: boolean) {\n    this._disablePickerInput = coerceBooleanProperty(v);\n  }\n  get disablePickerInput() {\n    return this._disablePickerInput;\n  }\n  private _disablePickerInput: boolean = false;\n\n  @Output()\n  changed: EventEmitter<any> = new EventEmitter();\n  @Output()\n  focus: EventEmitter<any> = new EventEmitter();\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter();\n  @Output()\n  typing: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('preview', { read: ViewContainerRef })\n  preview: ViewContainerRef;\n\n  items: Array<any> = [];\n  selected: any = null;\n  config: any = {};\n  model: any;\n  itemToAdd: any;\n  popup: any;\n  // private data model\n  _value: any = '';\n  _items = new ReplaySubject(1);\n  // Placeholders for the callbacks\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(public element: ElementRef, private componentUtils: ComponentUtils, public labels: NovoLabelService) {}\n\n  ngOnInit() {\n    this.setItems();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Input()\n  set value(selected) {\n    this.itemToAdd = '';\n    this._value = selected;\n  }\n\n  clearValue() {\n    this.items = [];\n    this._items.next(this.items);\n    this.value = null;\n    this._propagateChanges();\n  }\n\n  setItems() {\n    this.items = [];\n    if (this.model && Array.isArray(this.model)) {\n      const noLabels = [];\n      for (const value of this.model) {\n        let label;\n        if (this.source && this.source.format && Helpers.validateInterpolationProps(this.source.format, value)) {\n          label = Helpers.interpolate(this.source.format, value);\n        }\n        if (this.source && label && label !== this.source.format) {\n          this.items.push({\n            value,\n            label,\n          });\n        } else if (this.source.getLabels && typeof this.source.getLabels === 'function') {\n          noLabels.push(value);\n        } else if (this.source.options && Array.isArray(this.source.options)) {\n          this.items.push(this.getLabelFromOptions(value));\n        } else if (this.source.categoryMap && this.source.categoryMap.size) {\n          this.items.push(value);\n        } else {\n          this.items.push({\n            value,\n            label: value,\n          });\n        }\n      }\n      if (noLabels.length > 0 && this.source && this.source.getLabels && typeof this.source.getLabels === 'function') {\n        this.source.getLabels(noLabels).then((result) => {\n          for (const value of result) {\n            if (value.hasOwnProperty('label')) {\n              this.items.push({\n                value,\n                label: value.label,\n              });\n            } else if (this.source.options && Array.isArray(this.source.options)) {\n              this.items.push(this.getLabelFromOptions(value));\n            } else {\n              this.items.push(value);\n            }\n          }\n          this._items.next(this.items);\n        });\n      }\n    }\n    this._items.next(this.items);\n    const valueToSet = this.source && this.source.valueFormatter ? this.source.valueFormatter(this.items) : this.items.map((i) => i.value);\n    if (Helpers.isBlank(this.value) !== Helpers.isBlank(valueToSet) || JSON.stringify(this.value) !== JSON.stringify(valueToSet)) {\n      this.value = valueToSet;\n      this._propagateChanges();\n    }\n  }\n\n  getLabelFromOptions(value) {\n    let id = value;\n    let optLabel = this.source.options.find((val) => val.value === value);\n    if (!optLabel && value.hasOwnProperty('id')) {\n      optLabel = this.source.options.find((val) => val.value === value.id);\n      id = value.id;\n    }\n    return {\n      value: id,\n      label: optLabel ? optLabel.label : value,\n    };\n  }\n\n  getAvatarType(item: any) {\n    return (this.type || item?.value?.searchEntity || '').toLowerCase();\n  }\n\n  deselectAll(event?) {\n    this.selected = null;\n    this.hidePreview();\n  }\n\n  select(event?, item?) {\n    this.blur.emit(event);\n    this.deselectAll();\n    this.selected = item;\n    this.showPreview();\n  }\n\n  deselect(event?, item?) {\n    this.blur.emit(event);\n    this.deselectAll();\n  }\n\n  onTyping(event?) {\n    this.typing.emit(event);\n  }\n\n  onFocus(event?) {\n    this.deselectAll();\n    this.element.nativeElement.classList.add('selected');\n    this.focus.emit(event);\n  }\n\n  add(event) {\n    if (event && !(event instanceof Event)) {\n      this.items.push(event);\n      this.value = this.source && this.source.valueFormatter ? this.source.valueFormatter(this.items) : this.items.map((i) => i.value);\n      // Set focus on the picker\n      const input = this.element.nativeElement.querySelector('novo-picker > input');\n      if (input) {\n        input.focus();\n      }\n    }\n    this._items.next(this.items);\n    this._propagateChanges();\n  }\n\n  remove(event, item) {\n    this.items.splice(this.items.indexOf(item), 1);\n    this.deselectAll();\n    this.value = this.source && this.source.valueFormatter ? this.source.valueFormatter(this.items) : this.items.map((i) => i.value);\n    this._items.next(this.items);\n    this._propagateChanges();\n  }\n\n  onKeyDown(event) {\n    if (event.key === Key.Backspace) {\n      if (event.target && event.target.value.length === 0 && this.items.length) {\n        if (event) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n        if (this.selected) {\n          this.remove(event, this.selected);\n        } else {\n          this.select(event, this.items[this.items.length - 1]);\n        }\n      }\n    }\n  }\n\n  // Set touched on blur\n  onTouched(e) {\n    this.element.nativeElement.classList.remove('selected');\n    this.onModelTouched();\n    this.blur.emit(e);\n  }\n\n  writeValue(model: any): void {\n    this.model = model;\n    this.setItems();\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disablePickerInput = disabled;\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    this.changed.emit({ value: this.value?.length ? this.value : '', rawValue: this.items });\n    this.onModelChange(this.value);\n  }\n\n  /**\n   * @name showPreview\n   *\n   * @description This method creates an instance of the preview (called popup) and adds all the bindings to that\n   * instance. Will reuse the popup or create a new one if it does not already exist. Will only work if there is\n   * a previewTemplate given in the config.\n   */\n  showPreview() {\n    if (this.source.previewTemplate) {\n      if (!this.popup) {\n        this.popup = this.componentUtils.append(this.source.previewTemplate, this.preview);\n      }\n      this.popup.instance.match = { data: this.selected.data ?? this.selected.value };\n    }\n  }\n\n  /**\n   * @name hidePreview\n   *\n   * @description - This method deletes the preview popup from the DOM.\n   */\n  hidePreview() {\n    if (this.popup) {\n      this.popup.destroy();\n      this.popup = null;\n    }\n  }\n}\n","// NG2\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\nimport { NovoChipElement } from './Chip';\nimport { NovoChipsElement } from './Chips';\n\n// Value accessor for the component (supports ngModel)\nconst CHIPS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoRowChipsElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-row-chip',\n  template: `\n    <div class=\"novo-row-chips-columns\">\n      <ng-content></ng-content>\n      <i class=\"bhi-delete-o\" *ngIf=\"!disabled\" (click)=\"remove()\"></i>\n    </div>\n  `,\n  host: {\n    class: 'novo-row-chip novo-focus-indicator',\n    '[attr.tabindex]': 'disabled ? null : tabIndex',\n    role: 'option',\n    '[class.novo-row-chip-selected]': 'selected',\n    '[class.novo-row-chip-with-trailing-icon]': 'removeIcon',\n    '[class.novo-row-chip-disabled]': 'disabled',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class NovoRowChipElement extends NovoChipElement {\n  onSelect(e) {\n    return false;\n  }\n}\n\n@Component({\n  selector: 'novo-row-chips',\n  providers: [CHIPS_VALUE_ACCESSOR],\n  host: {\n    '[class.with-value]': 'items.length > 0',\n  },\n  template: `\n    <div class=\"novo-row-chips-columns\" *ngIf=\"items.length > 0\">\n      <div class=\"column-label\" [style.flexBasis.px]=\"column.width || 200\" *ngFor=\"let column of source.columns\">{{ column.label }}</div>\n    </div>\n    <div class=\"novo-row-chips-empty-message\" *ngIf=\"source.emptyReadOnlyMessage && disablePickerInput && items.length === 0\">\n      {{ source.emptyReadOnlyMessage }}\n    </div>\n    <novo-row-chip\n      *ngFor=\"let item of _items | async\"\n      [type]=\"type || item?.value?.searchEntity\"\n      [class.selected]=\"item == selected\"\n      [disabled]=\"disablePickerInput\"\n      (removed)=\"remove($event, item)\"\n      (selectionChange)=\"select($event, item)\"\n    >\n      <div\n        class=\"column-data\"\n        [class.editable]=\"column.editable\"\n        [style.flexBasis.px]=\"column.width || 200\"\n        *ngFor=\"let column of source.columns\"\n      >\n        <ng-container *ngIf=\"column.editable\">\n          <novo-field>\n            <input novoInput [type]=\"column.type || 'text'\" [(ngModel)]=\"item.value[column.name]\" />\n          </novo-field>\n        </ng-container>\n        <ng-container *ngIf=\"!column.editable\">\n          <span>{{ column.data(item) }}</span>\n        </ng-container>\n      </div>\n    </novo-row-chip>\n    <novo-picker\n      clearValueOnSelect=\"true\"\n      [closeOnSelect]=\"closeOnSelect\"\n      [config]=\"source\"\n      [disablePickerInput]=\"disablePickerInput\"\n      [hidden]=\"disablePickerInput\"\n      [placeholder]=\"placeholder\"\n      [(ngModel)]=\"itemToAdd\"\n      (select)=\"add($event)\"\n      (keydown)=\"onKeyDown($event)\"\n      (focus)=\"onFocus($event)\"\n      (typing)=\"onTyping($event)\"\n      (blur)=\"onTouched($event)\"\n      [selected]=\"items\"\n      *ngIf=\"!maxlength || (maxlength && items.length < maxlength)\"\n    >\n    </novo-picker>\n    <div class=\"preview-container\">\n      <span #preview></span>\n    </div>\n  `,\n})\nexport class NovoRowChipsElement extends NovoChipsElement {\n  @Input()\n  closeOnSelect: boolean = true;\n\n  constructor(element: ElementRef, componentUtils: ComponentUtils, labels: NovoLabelService) {\n    super(element, componentUtils, labels);\n  }\n\n  onKeyDown(event) {\n    return;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Key } from '../../utils';\nimport { ErrorStateMatcher } from '../common';\nimport { NovoFieldModule } from '../field';\nimport { NovoIconModule } from '../icon';\n// APP\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoChipAvatar, NovoChipElement, NovoChipRemove } from './Chip';\nimport { NovoChipsDefaultOptions, NOVO_CHIPS_DEFAULT_OPTIONS } from './ChipDefaults';\nimport { NovoChipInput } from './ChipInput';\nimport { NovoChipList } from './ChipList';\nimport { NovoChipsElement } from './Chips';\nimport { NovoRowChipElement, NovoRowChipsElement } from './RowChips';\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoPickerModule, NovoIconModule, NovoFieldModule],\n  declarations: [\n    NovoChipElement,\n    NovoChipAvatar,\n    NovoChipRemove,\n    NovoChipInput,\n    NovoChipList,\n    NovoChipsElement,\n    NovoRowChipElement,\n    NovoRowChipsElement,\n  ],\n  exports: [\n    NovoChipElement,\n    NovoChipAvatar,\n    NovoChipRemove,\n    NovoChipInput,\n    NovoChipList,\n    NovoChipsElement,\n    NovoRowChipElement,\n    NovoRowChipsElement,\n  ],\n  providers: [\n    ErrorStateMatcher,\n    {\n      provide: NOVO_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [Key.Enter],\n      } as NovoChipsDefaultOptions,\n    },\n  ],\n})\nexport class NovoChipsModule {}\n","// NG2\nimport { AfterViewInit, Component, EventEmitter, forwardRef, Input, NgZone, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// Value accessor for the component (supports ngModel)\nconst CKEDITOR_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoCKEditorElement),\n  multi: true,\n};\n\ndeclare var CKEDITOR: any;\ndeclare global {\n  interface Window {\n    CKEDITOR: any;\n  }\n}\n\n/**\n * CKEditor component\n * Usage :\n *  <novo-editor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></novo-editor>\n */\n@Component({\n  selector: 'novo-editor',\n  providers: [CKEDITOR_CONTROL_VALUE_ACCESSOR],\n  template: '<textarea [name]=\"name\" [id]=\"name\" #host></textarea>',\n})\nexport class NovoCKEditorElement implements OnDestroy, AfterViewInit, ControlValueAccessor {\n  @Input()\n  config;\n  @Input()\n  debounce;\n  @Input()\n  name;\n  @Input()\n  minimal;\n  @Input()\n  startupFocus: boolean = false;\n  @Input()\n  fileBrowserImageUploadUrl: string = '';\n  @Input()\n  disabled: boolean = false;\n\n  @Output()\n  change = new EventEmitter();\n  @Output()\n  ready = new EventEmitter();\n  @Output()\n  blur = new EventEmitter();\n  @Output()\n  focus = new EventEmitter();\n  @Output()\n  paste = new EventEmitter();\n  @Output()\n  loaded = new EventEmitter();\n  @ViewChild('host')\n  host;\n\n  _value: string = '';\n  instance;\n  debounceTimeout;\n\n  constructor(private zone: NgZone) {}\n\n  get value() {\n    return this._value;\n  }\n\n  @Input()\n  set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.instance.focusManager.blur(true); // Remove focus from editor\n      setTimeout(() => {\n        this.instance.removeAllListeners();\n        const aInstance = CKEDITOR.instances[this.instance.name];\n        if (aInstance) {\n          aInstance.destroy();\n        }\n        this.instance.destroy();\n        this.instance = null;\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    const config = Object.assign(this.getBaseConfig(), this.config);\n    if (this.startupFocus) {\n      config.startupFocus = true;\n    }\n    if (this.disabled) {\n      config.readOnly = true;\n    }\n    this.ckeditorInit(config);\n  }\n\n  updateValue(value) {\n    this.zone.run(() => {\n      this.value = value;\n      this.onChange(value);\n      this.onTouched();\n      this.change.emit(value);\n    });\n  }\n\n  private ckeditorInit(config) {\n    if (!CKEDITOR) {\n      console.error('Make sure to include CKEditor sources in your dependencies!');\n      return;\n    }\n\n    // CKEditor replace textarea\n    this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n\n    // Set initial value\n    this.instance.setData(this.value);\n\n    // listen for instanceReady event\n    this.instance.on('instanceReady', (evt) => {\n      // send the evt to the EventEmitter\n      this.ready.emit(evt);\n    });\n\n    // CKEditor change event\n    this.instance.on('change', () => {\n      this.onTouched();\n      const value = this.instance.getData();\n\n      // Debounce update\n      if (this.debounce) {\n        if (this.debounceTimeout) {\n          clearTimeout(this.debounceTimeout);\n        }\n        this.debounceTimeout = setTimeout(() => {\n          this.updateValue(value);\n          this.debounceTimeout = null;\n        }, parseInt(this.debounce, 10));\n      } else {\n        this.updateValue(value);\n      }\n    });\n    this.instance.on('blur', (event) => {\n      this.blur.emit(event);\n    });\n    this.instance.on('focus', (event) => {\n      this.focus.emit(event);\n    });\n    this.instance.on('paste', (event) => {\n      this.paste.emit(event);\n    });\n    this.instance.on('loaded', (event) => {\n      this.loaded.emit(event);\n    });\n  }\n\n  getBaseConfig(): { [key: string]: any } {\n    const baseConfig = {\n      enterMode: CKEDITOR.ENTER_BR,\n      shiftEnterMode: CKEDITOR.ENTER_P,\n      disableNativeSpellChecker: false,\n      removePlugins: 'liststyle,tabletools,contextmenu', // allows browser based spell checking\n      extraAllowedContent: '*(*){*};table tbody tr td th[*];', // allows class names (*) and inline styles {*} for all and attributes [*] on tables\n      font_names:\n        'Arial/Arial, Helvetica, sans-serif;' +\n        'Calibri/Calibri, Verdana, Geneva, sans-serif;' +\n        'Comic Sans MS/Comic Sans MS, cursive;' +\n        'Courier New/Courier New, Courier, monospace;' +\n        'Georgia/Georgia, serif;' +\n        'Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;' +\n        'Tahoma/Tahoma, Geneva, sans-serif;' +\n        'Times New Roman/Times New Roman, Times, serif;' +\n        'Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;' +\n        'Verdana/Verdana, Geneva, sans-serif',\n    };\n\n    const minimalConfig = {\n      toolbar: [\n        {\n          name: 'basicstyles',\n          items: [\n            'Styles',\n            'FontSize',\n            'Bold',\n            'Italic',\n            'Underline',\n            'TextColor',\n            '-',\n            'NumberedList',\n            'BulletedList',\n            'Outdent',\n            'Indent',\n            'Link',\n          ],\n        },\n      ],\n    };\n\n    const extendedConfig = {\n      toolbar: [\n        { name: 'clipboard', items: ['Paste', 'PasteText', 'PasteFromWord', 'Undo', 'Redo'] },\n        {\n          name: 'paragraph',\n          items: [\n            'NumberedList',\n            'BulletedList',\n            'Outdent',\n            'Indent',\n            'Blockquote',\n            'JustifyLeft',\n            'JustifyCenter',\n            'JustifyRight',\n            'JustifyBlock',\n            'BidiLtr',\n            'BidiRtl',\n          ],\n        },\n        { name: 'links', items: ['Link'] },\n        { name: 'insert', items: ['Image', 'Table', 'HorizontalRule'] },\n        { name: 'tools', items: ['Maximize', 'Source'] },\n        '/', // line break\n        { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'] },\n        { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n        { name: 'colors', items: ['TextColor', 'BGColor'] },\n      ],\n      filebrowserImageUploadUrl: this.fileBrowserImageUploadUrl,\n    };\n\n    return Object.assign(baseConfig, this.minimal ? minimalConfig : extendedConfig);\n  }\n\n  writeValue(value) {\n    this._value = value;\n    if (this.instance) {\n      this.instance.setData(value);\n    }\n  }\n\n  onChange(value?: any) {}\n\n  onTouched(event?) {}\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n    if (this.instance) {\n      CKEDITOR.instances[this.instance.name].setReadOnly(disabled);\n    }\n  }\n\n  insertText(text) {\n    const trimmedText = text.trim();\n    this.instance.insertText(trimmedText);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// APP\nimport { NovoCKEditorElement } from './CKEditor';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [NovoCKEditorElement],\n  exports: [NovoCKEditorElement],\n})\nexport class NovoNovoCKEditorModule {}\n","// NG\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// App\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\n\n// Value accessor for the component (supports ngModel)\nconst COLOR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoColorInputElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-color-input',\n  providers: [COLOR_VALUE_ACCESSOR],\n  template: `\n    <novo-field>\n      <input\n        novoInput\n        type=\"text\"\n        [name]=\"name\"\n        [placeholder]=\"placeholder\"\n        [disabled]=\"disabled\"\n        [style.color]=\"value\"\n        (focus)=\"_handleFocus($event)\"\n        (keydown)=\"_handleKeydown($event)\"\n        (input)=\"_handleInput($event)\"\n        (blur)=\"_handleBlur($event)\"\n        [(ngModel)]=\"value\"\n        #input\n      />\n      <novo-icon *ngIf=\"!hasValue\" (click)=\"openPanel()\">complex</novo-icon>\n      <novo-icon *ngIf=\"hasValue\" smaller (click)=\"clearValue()\">x</novo-icon>\n    </novo-field>\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-color-picker [(color)]=\"value\" (onChange)=\"setValueAndClose($event)\"></novo-color-picker>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoColorInputElement implements OnInit, ControlValueAccessor {\n  @Input()\n  name: string;\n  @Input()\n  placeholder: string = '#ffffff';\n  @Output()\n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _value: string = '';\n  public lastValidValue: string = '';\n  private _disabled: boolean = false;\n\n  @Input() get value(): string {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      this._setFormValue(value);\n      this.onChangeCallback(this._value);\n    }\n  }\n\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(public element: ElementRef, public labels: NovoLabelService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(): void {\n    if (!this.disabled) {\n      this.panelOpen ? this.overlay.closePanel() : this.overlay.openPanel();\n    }\n  }\n  closePanel(): void {\n    this.overlay && this.overlay.closePanel();\n  }\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n  /** END: Convenient Panel Methods. */\n\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.key === Key.Escape || event.key === Key.Enter || event.key === Key.Tab) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      // this._handleEvent(event, false);\n    }\n  }\n\n  _handleBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n  }\n\n  _handleFocus(event: FocusEvent): void {\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  private _setFormValue(value: string): void {\n    if (this.value) {\n      // hmm...\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  public setValueAndClose(event: any): void {\n    if (event) {\n      this.value = event.color.hex;\n      this.change.emit(this.value);\n      this.closePanel();\n    }\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearValue() {\n    this.value = '';\n    this.change.emit(this.value);\n  }\n\n  public get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\n}\n","type ColorType = HSL | HSLA | HSV | HSVA | RGB | RGBA | string;\nexport interface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\nexport interface RGBA extends RGB {\n  a: number;\n}\n\nexport interface HSL {\n  h: number;\n  s: number;\n  l: number;\n}\n\nexport interface HSLA extends HSL {\n  a: number;\n}\n\nexport interface HSV {\n  h: number;\n  s: number;\n  v: number;\n}\n\nexport interface HSVA extends HSV {\n  a: number;\n}\n\nexport class Color {\n  source: string;\n  isValid: boolean = true;\n\n  constructor(value: HSLA | HSVA | RGBA | string) {\n    if (Color.isHSL(value)) {\n      // let { h, s, l, a = 1 } = value as HSLA;\n      this.source = rgbToHex(hslToRgb(value as HSL));\n    } else if (Color.isHSV(value)) {\n      this.source = rgbToHex(hsvToRgb(value as HSV));\n    } else if (Color.isRGB(value)) {\n      this.source = rgbToHex(value as RGB);\n    } else if (Color.isValidHex(value.toString())) {\n      this.source = value as string;\n    } else {\n      this.isValid = false;\n      console.error(`Invalid color: ${value}`);\n    }\n  }\n\n  get hex(): string {\n    return this.source;\n  }\n  get rgb(): RGB {\n    return hexToRgb(this.source);\n  }\n  get hsl(): HSL {\n    return rgbToHsl(hexToRgb(this.source));\n  }\n  get hsv(): HSV {\n    return rgbToHsv(hexToRgb(this.source));\n  }\n\n  static isValidHex(h: string) {\n    const clean = h.replace('#', '').toLowerCase();\n    const a = parseInt(clean, 16);\n    return a.toString(16).padStart(6, '0') === clean;\n  }\n\n  static isRGB(obj: any) {\n    const keys = ['r', 'g', 'b'];\n    return keys.every((item) => obj.hasOwnProperty(item));\n  }\n  static isRGBA(obj: any) {\n    const keys = ['r', 'g', 'b', 'a'];\n    return keys.every((item) => obj.hasOwnProperty(item));\n  }\n  static isHSL(obj: any) {\n    const keys = ['h', 's', 'l'];\n    return keys.every((item) => obj.hasOwnProperty(item));\n  }\n  static isHSLA(obj: any) {\n    const keys = ['h', 's', 'l', 'a'];\n    return keys.every((item) => obj.hasOwnProperty(item));\n  }\n  static isHSV(obj: any) {\n    const keys = ['h', 's', 'v'];\n    return keys.every((item) => obj.hasOwnProperty(item));\n  }\n  static isHSVA(obj: any) {\n    const keys = ['h', 's', 'v', 'a'];\n    return keys.every((item) => obj.hasOwnProperty(item));\n  }\n}\n\nfunction componentToHex(c: number) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex({ r, g, b }: RGB) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nfunction hexToRgb(hex: string): RGB | null {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSL representation\n */\nfunction rgbToHsl({ r, g, b }: RGB): HSL {\n  (r /= 255), (g /= 255), (b /= 255);\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h;\n  let s;\n  const l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h, s, l };\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  l       The lightness\n * @return  Array           The RGB representation\n */\nfunction hslToRgb({ h, s, l }: HSL): RGB {\n  let r, g, b;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    function hue2rgb(p1, q1, t1) {\n      if (t1 < 0) {\n        t1 += 1;\n      }\n      if (t1 > 1) {\n        t1 -= 1;\n      }\n      if (t1 < 1 / 6) {\n        return p1 + (q1 - p1) * 6 * t1;\n      }\n      if (t1 < 1 / 2) {\n        return q1;\n      }\n      if (t1 < 2 / 3) {\n        return p1 + (q1 - p1) * (2 / 3 - t1) * 6;\n      }\n      return p1;\n    }\n\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255,\n  };\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nfunction rgbToHsv({ r, g, b }: RGB): HSV {\n  (r = r / 255), (g = g / 255), (b = b / 255);\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h;\n  let s;\n  const v = max;\n\n  const d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h, s, v };\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nfunction hsvToRgb({ h, s, v }: HSV): RGB {\n  let r, g, b;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      (r = v), (g = t), (b = p);\n      break;\n    case 1:\n      (r = q), (g = v), (b = p);\n      break;\n    case 2:\n      (r = p), (g = v), (b = t);\n      break;\n    case 3:\n      (r = p), (g = q), (b = v);\n      break;\n    case 4:\n      (r = t), (g = p), (b = v);\n      break;\n    case 5:\n      (r = v), (g = p), (b = q);\n      break;\n  }\n\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255,\n  };\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { Color, HSL, HSLA, HSV, HSVA, RGB, RGBA } from '../../utils/color-utils/ColorUtils';\n\n@Component({\n  selector: 'novo-color-picker',\n  template: `\n    <div class=\"novo-color-preview\" [style.backgroundColor]=\"currentColor.hex\">\n      <div class=\"novo-color-preview-text\">{{ hex }}</div>\n    </div>\n    <div class=\"novo-color-swatches\">\n      <novo-color-swatch\n        *ngFor=\"let color of colors\"\n        [color]=\"color\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onHover)=\"handleSwatchHover($event)\"\n      ></novo-color-swatch>\n    </div>\n    <div class=\"novo-color-input\">\n      <input [value]=\"hex.replace('#', '')\" (onChange)=\"handleValueChange($event)\" />\n    </div>\n  `,\n  styleUrls: ['./color-picker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class NovoColorPickerComponent implements OnInit, OnChanges, OnDestroy {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 276;\n  /** Color squares to display */\n  @Input() colors = ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'];\n  @Input() color: HSLA | HSVA | RGBA | string = {\n    h: 250,\n    s: 0.5,\n    l: 0.2,\n    a: 1,\n  };\n  @Output() onChange = new EventEmitter<any>();\n  @Output() onChangeComplete = new EventEmitter<any>();\n  @Output() onSwatchHover = new EventEmitter<any>();\n  hsl!: HSL;\n  hsv!: HSV;\n  rgb!: RGB;\n  hex!: string;\n  currentColor!: Color;\n  changes!: Subscription;\n\n  swatchStyle: { [key: string]: string } = {\n    width: '30px',\n    height: '30px',\n    borderRadius: '4px',\n    fontSize: '0',\n  };\n  input: { [key: string]: string } = {\n    borderRadius: '4px',\n    borderBottomLeftRadius: '0',\n    borderTopLeftRadius: '0',\n    border: '1px solid #e6ecf0',\n    boxSizing: 'border-box',\n    display: 'inline',\n    fontSize: '14px',\n    height: '30px',\n    padding: '0',\n    paddingLeft: '6px',\n    width: '100%',\n    color: '#657786',\n  };\n\n  focus(color: string) {\n    return { boxShadow: `0 0 4px ${color}` };\n  }\n\n  handleBlockChange({ hex, $event }: any) {\n    if (Color.isValidHex(hex)) {\n      // this.hex = hex;\n      this.handleChange({ hex, source: 'hex' }, $event);\n    }\n  }\n\n  handleValueChange({ data, $event }: any) {\n    this.handleBlockChange({ hex: data, $event });\n  }\n\n  ngOnInit() {\n    this.changes = this.onChange.pipe(debounceTime(100)).subscribe((x) => this.onChangeComplete.emit(x));\n    this.setState(new Color(this.color));\n  }\n\n  ngOnChanges() {\n    this.setState(new Color(this.color));\n  }\n\n  ngOnDestroy() {\n    this.changes.unsubscribe();\n  }\n\n  setState(data: Color) {\n    this.currentColor = data;\n    this.hsl = data.hsl;\n    this.hsv = data.hsv;\n    this.rgb = data.rgb;\n    this.hex = data.hex;\n    this.afterValidChange();\n  }\n\n  handleChange(data, $event) {\n    const color = new Color(data.hex);\n    if (color.isValid) {\n      this.setState(color);\n      this.onChange.emit({ color, $event });\n      this.afterValidChange();\n    }\n  }\n  /** hook for components after a complete change */\n  afterValidChange() {}\n\n  handleSwatchHover($event) {\n    const color = new Color($event.hex);\n    if (color.isValid) {\n      this.setState(color);\n      this.onSwatchHover.emit({ color, $event });\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'novo-color-swatch',\n  template: `\n    <div\n      class=\"swatch\"\n      [ngStyle]=\"currentStyles()\"\n      [attr.title]=\"color\"\n      (click)=\"handleClick(color, $event)\"\n      (keydown.enter)=\"handleClick(color, $event)\"\n      (focus)=\"handleFocus()\"\n      (blur)=\"handleFocusOut()\"\n      (mouseover)=\"handleHover(color, $event)\"\n      tabindex=\"0\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [\n    `\n      .swatch {\n        border-radius: 0.4rem;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoColorSwatchComponent implements OnInit {\n  @Input() color!: string;\n  @Input() style: { [key: string]: string } = {};\n  @Input() focusStyle: { [key: string]: string } = {};\n  @Input() focus!: boolean;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onHover = new EventEmitter<any>();\n  divStyles: { [key: string]: string } = {};\n  focusStyles: { [key: string]: string } = {};\n  inFocus = false;\n\n  ngOnInit() {\n    this.divStyles = {\n      background: this.color as string,\n      height: '100%',\n      width: '100%',\n      cursor: 'pointer',\n      position: 'relative',\n      outline: 'none',\n      ...this.style,\n    };\n  }\n  currentStyles() {\n    this.focusStyles = {\n      ...this.divStyles,\n      ...this.focusStyle,\n    };\n    return this.focus || this.inFocus ? this.focusStyles : this.divStyles;\n  }\n  handleFocusOut() {\n    this.inFocus = false;\n  }\n  handleFocus() {\n    this.inFocus = true;\n  }\n  handleHover(hex: string, $event) {\n    this.onHover.emit({ hex, $event });\n  }\n  handleClick(hex: string, $event) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// APP\nimport { NovoPipesModule } from '../../pipes/Pipes.module';\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoFieldModule } from '../field/field.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoColorInputElement } from './color-input.component';\nimport { NovoColorPickerComponent } from './color-picker.component';\nimport { NovoColorSwatchComponent } from './color-swatch.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoPipesModule, NovoFieldModule, NovoOverlayModule, NovoIconModule],\n  declarations: [NovoColorPickerComponent, NovoColorInputElement, NovoColorSwatchComponent],\n  exports: [NovoColorPickerComponent, NovoColorInputElement, NovoColorSwatchComponent],\n})\nexport class NovoColorPickerModule {}\n","// NG2\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Deferred, DeferredPromise } from '../../utils';\n\n@Component({\n  selector: 'novo-toast',\n  host: {\n    '[class]': 'alertTheme',\n    '[class.growl]': 'appearance == \"growl\"',\n    '[class.banner]': 'appearance == \"banner\"',\n    '[class.show]': 'show',\n    '[class.animate]': 'animate',\n    '[class.embedded]': 'embedded',\n    '[attr.theme]': 'theme',\n    '(click)': '!isCloseable && clickHandler($event)',\n  },\n  template: `\n    <div class=\"toast-icon\">\n      <i [ngClass]=\"iconClass\"></i>\n    </div>\n    <div class=\"toast-content\">\n      <h5 *ngIf=\"title\">{{ title }}</h5>\n      <p *ngIf=\"_message\" [class.message-only]=\"!title\" [innerHtml]=\"_message\"></p>\n      <div *ngIf=\"link\" class=\"link-generated\">\n        <input type=\"text\" [value]=\"link\" onfocus=\"this.select();\" />\n      </div>\n      <div class=\"dialogue\">\n        <ng-content></ng-content>\n      </div>\n      <div *ngIf=\"action\" class=\"action\">\n        <button theme=\"dialogue\" color=\"white\" (click)=\"actionHandler($event)\">{{ action }}</button>\n      </div>\n    </div>\n    <div class=\"close-icon\" *ngIf=\"isCloseable\" (click)=\"close($event)\">\n      <i class=\"bhi-times\"></i>\n    </div>\n  `,\n})\nexport class NovoToastElement implements OnInit, OnChanges {\n  @Input()\n  appearance: 'growl' | 'banner' = 'banner';\n  @Input()\n  theme: string = 'danger';\n  @Input()\n  icon: string = 'caution';\n  @Input()\n  title: string;\n  @Input()\n  action: string;\n  @Input()\n  hasDialogue: boolean = false;\n  @Input()\n  link: string;\n  @Input()\n  isCloseable: boolean = false;\n  @Input()\n  set message(m: string) {\n    this._message = this.sanitizer.bypassSecurityTrustHtml(m);\n  }\n  @Output()\n  closed: EventEmitter<any> = new EventEmitter();\n\n  _message: SafeHtml;\n  show: boolean = false;\n  animate: boolean = false;\n  parent: any = null;\n  launched: boolean = false;\n  position: any;\n  time: any;\n  iconClass: string;\n  alertTheme: string;\n  embedded: any;\n  onActionPromise: DeferredPromise = Deferred();\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  ngOnInit() {\n    if (!this.launched) {\n      // clear position and time\n      this.position = null;\n      this.time = null;\n\n      // set icon and styling\n      this.iconClass = `bhi-${this.icon}`;\n      this.alertTheme = `${this.theme} toast-container embedded`;\n      if (this.hasDialogue) {\n        this.alertTheme += ' dialogue';\n      }\n    }\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    // set icon and styling\n    this.iconClass = `bhi-${this.icon}`;\n    this.alertTheme = `${this.theme} toast-container embedded`;\n    if (this.hasDialogue) {\n      this.alertTheme += ' dialogue';\n    }\n  }\n\n  clickHandler(event) {\n    if (!this.isCloseable) {\n      if (event) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      if (this.parent) {\n        this.parent.hide(this);\n      } else {\n        this.closed.emit({ closed: true });\n      }\n    }\n  }\n\n  close(event) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (this.parent) {\n      this.parent.hide(this);\n    } else {\n      this.closed.emit({ closed: true });\n    }\n  }\n\n  actionHandler(event) {\n    this.onActionPromise.resolve(event);\n  }\n\n  onAction(fn: () => void) {\n    return this.onActionPromise.then(fn);\n  }\n}\n","// NG2\nimport { Injectable } from '@angular/core';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\n// APP\nimport { NovoToastElement } from './Toast';\n\nexport type ToastThemes = 'default' | 'success' | 'info' | 'warning' | 'danger' | 'positive' | string;\nexport type ToastIcons = 'bell' | 'check' | 'info' | 'warning' | 'remove' | 'caution' | 'times' | 'coffee' | 'danger' | string;\nexport type ToastPositions = 'fixedTop' | 'fixedBottom' | 'growlTopRight' | 'growlTopLeft' | 'growlBottomRight' | 'growlBottomLeft';\n\nexport interface ToastOptions {\n  title?: string;\n  message?: string;\n  action?: string;\n  icon?: ToastIcons;\n  theme?: ToastThemes;\n  accent?: ToastThemes;\n  hideDelay?: number;\n  position?: ToastPositions;\n  isCloseable?: boolean;\n  customClass?: string;\n}\n\n@Injectable()\nexport class NovoToastService {\n  _parentViewContainer: any;\n  references: Array<any> = [];\n  icons = { default: 'bell', success: 'check', info: 'info', warning: 'warning', danger: 'remove' };\n  defaults = { hideDelay: 3500, position: 'growlTopRight', theme: 'default' };\n\n  constructor(private componentUtils: ComponentUtils) {}\n\n  set parentViewContainer(view) {\n    this._parentViewContainer = view;\n  }\n\n  alert(options: ToastOptions, toastElement: any = NovoToastElement): Promise<any> {\n    return new Promise((resolve) => {\n      if (!this._parentViewContainer) {\n        console.error(\n          'No parent view container specified for the ToastService. Set it inside your main application. \\nthis.toastService.parentViewContainer = view (ViewContainerRef)',\n        );\n        return;\n      }\n      const toast = this.componentUtils.append(toastElement, this._parentViewContainer);\n      this.references.push(toast);\n      this.handleAlert(toast.instance, options);\n      resolve(toast.instance);\n    });\n  }\n\n  isVisible(toast) {\n    return toast.show;\n  }\n\n  hide(toast) {\n    toast.animate = false;\n    setTimeout(() => {\n      toast.show = false;\n      const REF = this.references.filter((x) => x.instance === toast)[0];\n      if (REF) {\n        this.references.splice(this.references.indexOf(REF), 1);\n        REF.destroy();\n      }\n    }, 300);\n  }\n\n  handleAlert(toast, options) {\n    this.setToastOnSession(toast, options);\n    setTimeout(() => {\n      this.show(toast);\n    }, 20);\n    if (!toast.isCloseable) {\n      this.toastTimer(toast);\n    }\n  }\n\n  setToastOnSession(toast, opts) {\n    const OPTIONS = typeof opts === 'object' ? opts : {};\n\n    toast.parent = this;\n    toast.title = OPTIONS.title || '';\n    toast.message = OPTIONS.message || '';\n    toast.action = OPTIONS.action || null;\n    toast.hideDelay = OPTIONS.hideDelay || this.defaults.hideDelay;\n    toast.link = OPTIONS.link || '';\n    toast.isCloseable = OPTIONS.isCloseable || false;\n\n    const CUSTOM_CLASS = OPTIONS.customClass || '';\n    const ALERT_STYLE = OPTIONS.accent ? `novo-accent-${OPTIONS.accent}` : OPTIONS.theme || this.defaults.theme;\n    const ALERT_POSITION = OPTIONS.position || this.defaults.position;\n    const ALERT_ICON = OPTIONS.icon || this.icons.default;\n\n    toast.iconClass = `bhi-${ALERT_ICON}`;\n    toast.launched = true;\n    toast.alertTheme = `${ALERT_STYLE} ${ALERT_POSITION} ${CUSTOM_CLASS} toast-container launched`;\n  }\n\n  show(toast) {\n    toast.show = true;\n    setTimeout(addClass, 25);\n    /**\n     * Adds animate class to be called after a timeout\n     **/\n    function addClass() {\n      toast.animate = true;\n    }\n  }\n\n  toastTimer(toast) {\n    if (toast.hideDelay < 0) {\n      return;\n    }\n    setTimeout(() => {\n      this.hide(toast);\n    }, toast.hideDelay);\n  }\n}\n","export enum SortDirection {\n  ASC = 'ascending',\n  DESC = 'descending',\n  NONE = 'none',\n}\n","import * as dateFns from 'date-fns';\n\nexport class NovoDataTableFilterUtils {\n  static constructFilter(filter?: any, type?: any, multiSelect?: boolean) {\n    let actualFilter = filter;\n    if (filter) {\n      if (type && type === 'date') {\n        if (filter.startDate && filter.endDate) {\n          actualFilter = {\n            min: dateFns.startOfDay(filter.startDate.date),\n            max: dateFns.startOfDay(dateFns.addDays(dateFns.startOfDay(filter.endDate.date), 1)),\n          };\n        } else {\n          actualFilter = {\n            min: filter.min ? dateFns.addDays(dateFns.startOfToday(), filter.min) : dateFns.startOfToday(),\n            max: filter.max ? dateFns.addDays(dateFns.endOfToday(), filter.max) : dateFns.endOfToday(),\n          };\n        }\n      }\n\n      if (multiSelect && Array.isArray(filter)) {\n        actualFilter = filter.map((filterItem) => {\n          if (filterItem && filterItem.hasOwnProperty('value')) {\n            return filterItem.value;\n          }\n          return filterItem;\n        });\n      } else if (actualFilter && actualFilter.hasOwnProperty('value')) {\n        actualFilter = filter.value;\n      }\n    }\n    return actualFilter;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Helpers } from '../../../utils/Helpers';\nimport { IDataTableChangeEvent, IDataTableFilter, IDataTableSelectionOption, IDataTableSort } from '../interfaces';\nimport { NovoDataTableFilterUtils } from '../services/data-table-filter-utils';\n\n@Injectable()\nexport class DataTableState<T> {\n  public selectionSource = new Subject();\n  public paginationSource = new Subject();\n  public sortFilterSource = new Subject();\n  public resetSource = new Subject();\n  public expandSource = new Subject();\n  public allMatchingSelectedSource = new Subject();\n  public dataLoaded = new Subject();\n\n  sort: IDataTableSort = undefined;\n  filter: IDataTableFilter | IDataTableFilter[] = undefined;\n  page: number = 0;\n  pageSize: number = undefined;\n  globalSearch: string = undefined;\n  selectedRows: Map<string, T> = new Map<string, T>();\n  expandedRows: Set<string> = new Set<string>();\n  outsideFilter: any;\n  isForceRefresh: boolean = false;\n  selectionOptions: IDataTableSelectionOption[];\n  updates: EventEmitter<IDataTableChangeEvent> = new EventEmitter<IDataTableChangeEvent>();\n  retainSelected: boolean = false;\n\n  get userFiltered(): boolean {\n    return !!(this.filter || this.sort || this.globalSearch || this.outsideFilter);\n  }\n\n  get userFilteredInternal(): boolean {\n    return !!(this.filter || this.sort || this.globalSearch);\n  }\n\n  get selected(): T[] {\n    return Array.from(this.selectedRows.values());\n  }\n\n  public reset(fireUpdate: boolean = true, persistUserFilters?): void {\n    if (!persistUserFilters) {\n      this.sort = undefined;\n      this.globalSearch = undefined;\n      this.filter = undefined;\n    }\n    this.page = 0;\n    if (!this.retainSelected) {\n      this.selectedRows.clear();\n      this.resetSource.next();\n    }\n    this.onSortFilterChange();\n    this.retainSelected = false;\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n\n  public clearSort(fireUpdate: boolean = true): void {\n    this.sort = undefined;\n    this.page = 0;\n    this.checkRetainment('sort');\n    this.reset(fireUpdate, true);\n    this.onSortFilterChange();\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n\n  public clearFilter(fireUpdate: boolean = true): void {\n    this.filter = undefined;\n    this.globalSearch = undefined;\n    this.page = 0;\n    this.checkRetainment('filter');\n    this.reset(fireUpdate, true);\n    this.onSortFilterChange();\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n\n  public clearSelected(fireUpdate: boolean = true): void {\n    this.allMatchingSelectedSource.next(false);\n    this.globalSearch = undefined;\n    this.page = 0;\n    this.reset(fireUpdate, true);\n    this.onSelectionChange();\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n\n  public onSelectionChange(): void {\n    this.selectionSource.next();\n  }\n\n  public onExpandChange(targetId?: number): void {\n    this.expandSource.next(targetId);\n  }\n\n  public onPaginationChange(isPageSizeChange: boolean, pageSize: number): void {\n    this.checkRetainment('page');\n    this.paginationSource.next({ isPageSizeChange, pageSize });\n  }\n\n  public onSortFilterChange(): void {\n    this.checkRetainment('sort');\n    this.checkRetainment('filter');\n    this.sortFilterSource.next({\n      sort: this.sort,\n      filter: this.filter,\n      globalSearch: this.globalSearch,\n    });\n  }\n\n  public setInitialSortFilter(preferences): void {\n    if (preferences) {\n      if (preferences.sort) {\n        this.sort = preferences.sort;\n      }\n\n      if (preferences.filter) {\n        const filters = Helpers.convertToArray(preferences.filter);\n        filters.forEach((filter) => {\n          filter.value =\n            filter.selectedOption && filter.type\n              ? NovoDataTableFilterUtils.constructFilter(filter.selectedOption, filter.type)\n              : filter.value;\n        });\n        this.filter = filters;\n      }\n    }\n  }\n\n  public checkRetainment(caller: string, allMatchingSelected = false): void {\n    this.retainSelected = this.selectionOptions?.some((option) => option.label === caller) || this.retainSelected || allMatchingSelected;\n  }\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { SortDirection } from './sort-direction';\n\nconst activeStyle = { opacity: 1, pointerEvents: 'all', top: 0 };\nconst inactiveStyle = { opacity: 0, pointerEvents: 'none' };\n\n/** Animation that moves the sort indicator. */\nexport const sortAscAnim: AnimationTriggerMetadata = trigger('sortAsc', [\n  // ...\n  state(SortDirection.ASC, style(activeStyle)),\n  state(SortDirection.DESC, style(inactiveStyle)),\n  state(SortDirection.NONE, style(inactiveStyle)),\n  transition('* => ascending', [animate('1s')]),\n  transition('ascending => *', [animate('0.5s')]),\n]);\n\nexport const sortDescAnim: AnimationTriggerMetadata = trigger('sortDesc', [\n  // ...\n  state(SortDirection.ASC, style(inactiveStyle)),\n  state(SortDirection.DESC, style(activeStyle)),\n  state(SortDirection.NONE, style(inactiveStyle)),\n  transition('* => descending', [animate('1s')]),\n  transition('descending => *', [animate('0.5s')]),\n]);\n\nexport const sortNoneAnim: AnimationTriggerMetadata = trigger('sortNone', [\n  // ...\n  state(SortDirection.ASC, style(inactiveStyle)),\n  state(SortDirection.DESC, style(inactiveStyle)),\n  state(SortDirection.NONE, style(activeStyle)),\n  transition('* => none', [animate('1s')]),\n  transition('none => *', [animate('0.5s')]),\n]);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { DataTableState } from '../state/data-table-state.service';\nimport { sortAscAnim, sortDescAnim, sortNoneAnim } from './sort-button.animations';\nimport { SortDirection } from './sort-direction';\n@Component({\n  selector: 'novo-sort-button',\n  styleUrls: ['./sort-button.component.scss'],\n  templateUrl: './sort-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [sortAscAnim, sortDescAnim, sortNoneAnim],\n})\nexport class NovoDataTableSortButton<T> {\n  @Output() sortChange: EventEmitter<SortDirection> = new EventEmitter();\n  public SortDirection = SortDirection;\n\n  @Input()\n  public get value(): SortDirection {\n    return this._value;\n  }\n  public set value(value: SortDirection) {\n    this._value = value;\n  }\n\n  public get isActive() {\n    return this.value !== SortDirection.NONE;\n  }\n\n  private _value: SortDirection = SortDirection.NONE;\n\n  constructor(public state: DataTableState<T>, private ref: ChangeDetectorRef, public labels: NovoLabelService) {}\n\n  changeSort(dir: SortDirection): void {\n    this.value = dir;\n    this.sortChange.emit(dir);\n  }\n\n  clearSort(): void {\n    this.state.clearSort();\n    this.sortChange.emit(SortDirection.NONE);\n  }\n}\n","import { Directive } from '@angular/core';\nimport { Helpers } from '../../../utils/Helpers';\nimport { DataTableState } from '../state/data-table-state.service';\n\n@Directive({\n  selector: '[novoDataTableSortFilter]',\n})\nexport class NovoDataTableSortFilter<T> {\n  constructor(private state: DataTableState<T>) {}\n\n  public filter(\n    id: string,\n    type: string,\n    value: any,\n    transform: Function,\n    allowMultipleFilters: boolean = false,\n    selectedOption?: Object,\n  ): void {\n    let filter;\n\n    if (allowMultipleFilters) {\n      filter = this.resolveMultiFilter(id, type, value, transform, selectedOption);\n    } else {\n      if (!Helpers.isBlank(value)) {\n        filter = { id, type, value, transform, ...(selectedOption && { selectedOption }) };\n      } else {\n        filter = undefined;\n      }\n    }\n\n    this.state.filter = filter;\n    this.state.checkRetainment('filter');\n    this.state.reset(false, true);\n    this.state.updates.next({ filter, sort: this.state.sort });\n    this.state.onSortFilterChange();\n  }\n\n  public sort(id: string, value: string, transform: Function): void {\n    const sort = { id, value, transform };\n    this.state.sort = sort;\n    this.state.checkRetainment('sort');\n    this.state.reset(false, true);\n    this.state.updates.next({ sort, filter: this.state.filter });\n    this.state.onSortFilterChange();\n  }\n\n  public resolveMultiFilter(id: string, type: string, value: any, transform: Function, selectedOption: Object) {\n    let filter;\n\n    filter = Helpers.convertToArray(this.state.filter);\n\n    const filterIndex = filter.findIndex((aFilter) => aFilter && aFilter.id === id);\n    if (filterIndex > -1) {\n      filter.splice(filterIndex, 1);\n    }\n\n    if (!Helpers.isBlank(value)) {\n      filter = [...filter, { id, type, value, transform, ...(selectedOption && { selectedOption }) }];\n    }\n\n    if (filter.length < 1) {\n      filter = undefined;\n    }\n\n    return filter;\n  }\n}\n","import { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { Key } from 'projects/novo-elements/src/utils';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { Helpers } from '../../../utils/Helpers';\nimport { NovoDropdownElement } from '../../dropdown/Dropdown';\nimport {\n  IDataTableChangeEvent,\n  IDataTableColumn,\n  IDataTableColumnFilterConfig,\n  IDataTableColumnFilterOption,\n  IDataTableColumnSortConfig,\n  IDataTableSortFilter,\n} from '../interfaces';\nimport { NovoDataTableFilterUtils } from '../services/data-table-filter-utils';\nimport { SortDirection } from '../sort-filter';\nimport { NovoDataTableSortFilter } from '../sort-filter/sort-filter.directive';\nimport { DataTableState } from '../state/data-table-state.service';\n\n@Component({\n  selector: '[novo-data-table-cell-config]',\n  template: `\n    <i class=\"bhi-{{ labelIcon }} label-icon\" *ngIf=\"labelIcon\" data-automation-id=\"novo-data-table-header-icon\"></i>\n    <label data-automation-id=\"novo-data-table-label\">{{ label }}</label>\n    <div>\n      <novo-sort-button\n        *ngIf=\"config.sortable\"\n        data-automation-id=\"novo-data-table-sort\"\n        tooltipPosition=\"left\"\n        [tooltip]=\"labels.sort\"\n        [attr.data-feature-id]=\"'novo-data-table-sort-' + this.id\"\n        (sortChange)=\"sort()\"\n        [value]=\"sortValue\"\n      ></novo-sort-button>\n      <novo-dropdown\n        *ngIf=\"config.filterable\"\n        side=\"right\"\n        parentScrollSelector=\".novo-data-table-container\"\n        containerClass=\"data-table-dropdown\"\n        data-automation-id=\"novo-data-table-filter\"\n        [multiple]=\"multiSelect\"\n      >\n        <novo-icon\n          dropdownTrigger\n          class=\"filter-button\"\n          [class.filter-active]=\"filterActive\"\n          [tooltip]=\"labels.filters\"\n          [tooltipPosition]=\"'left'\"\n          [attr.data-feature-id]=\"'novo-data-table-filter-' + this.id\"\n          (click)=\"focusInput()\"\n          >filter</novo-icon\n        >\n        <div class=\"header\">\n          <novo-label>{{ labels.filters }}</novo-label>\n          <novo-button\n            theme=\"dialogue\"\n            color=\"negative\"\n            size=\"small\"\n            icon=\"times\"\n            (click)=\"clearFilter()\"\n            *ngIf=\"filter !== null && filter !== undefined && filter !== ''\"\n            data-automation-id=\"novo-data-table-filter-clear\"\n          >\n            {{ labels.clear }}\n          </novo-button>\n        </div>\n        <div class=\"optgroup-container\">\n          <ng-container [ngSwitch]=\"config.filterConfig.type\">\n            <novo-optgroup *ngSwitchCase=\"'date'\" (keydown.escape)=\"handleEscapeKeydown($event)\">\n              <ng-container *ngIf=\"!showCustomRange\">\n                <novo-option\n                  [class.active]=\"activeDateFilter === option.label\"\n                  *ngFor=\"let option of config.filterConfig.options\"\n                  (click)=\"filterData(option)\"\n                  [attr.data-automation-id]=\"'novo-data-table-filter-' + option.label\"\n                >\n                  <span>{{ option.label }}</span>\n                  <novo-icon novoSuffix color=\"positive\" *ngIf=\"activeDateFilter === option.label\">check</novo-icon>\n                </novo-option>\n              </ng-container>\n              <novo-option\n                [class.active]=\"labels.customDateRange === activeDateFilter\"\n                (click)=\"toggleCustomRange($event, true)\"\n                *ngIf=\"config.filterConfig.allowCustomRange && !showCustomRange\"\n              >\n                <span>{{ labels.customDateRange }}</span>\n                <novo-icon novoSuffix color=\"positive\" *ngIf=\"labels.customDateRange === activeDateFilter\">check</novo-icon>\n              </novo-option>\n              <novo-option class=\"calendar-container\" *ngIf=\"showCustomRange\" keepOpen>\n                <novo-stack>\n                  <div class=\"back-link\" (click)=\"toggleCustomRange($event, false)\">\n                    <i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}\n                  </div>\n                  <novo-date-picker\n                    (onSelect)=\"filterData($event)\"\n                    [(ngModel)]=\"filter\"\n                    range=\"true\"\n                    (keydown.escape)=\"handleEscapeKeydown($event)\"\n                  ></novo-date-picker>\n                </novo-stack>\n              </novo-option>\n            </novo-optgroup>\n            <novo-optgroup *ngSwitchCase=\"'select'\">\n              <novo-option\n                [class.active]=\"filter === option\"\n                *ngFor=\"let option of config.filterConfig.options\"\n                (click)=\"filterData(option)\"\n                [attr.data-automation-id]=\"'novo-data-table-filter-' + (option?.label || option)\"\n              >\n                <span>{{ option?.label || option }}</span>\n                <novo-icon novoSuffix color=\"positive\" *ngIf=\"option.hasOwnProperty('value') ? filter === option.value : filter === option\"\n                  >check</novo-icon\n                >\n              </novo-option>\n            </novo-optgroup>\n            <ng-container *ngSwitchCase=\"'multi-select'\">\n              <novo-optgroup class=\"dropdown-list-filter\" (keydown)=\"multiSelectOptionFilterHandleKeydown($event)\">\n                <novo-option class=\"filter-search\" inert>\n                  <novo-field flex>\n                    <input\n                      novoInput\n                      [(ngModel)]=\"optionFilter\"\n                      (ngModelChange)=\"multiSelectOptionFilter($event)\"\n                      #optionFilterInput\n                      data-automation-id=\"novo-data-table-multi-select-option-filter-input\"\n                    />\n                    <novo-icon novoSuffix>search</novo-icon>\n                    <novo-error class=\"error-text\" [hidden]=\"!error || !multiSelectHasVisibleOptions()\">{{\n                      labels.selectFilterOptions\n                    }}</novo-error>\n                  </novo-field>\n                </novo-option>\n              </novo-optgroup>\n              <novo-optgroup class=\"dropdown-list-options\" (keydown.escape)=\"handleEscapeKeydown($event)\">\n                <novo-option\n                  *ngFor=\"let option of config.filterConfig.options\"\n                  [hidden]=\"multiSelectOptionIsHidden(option)\"\n                  (click)=\"toggleSelection(option)\"\n                  [attr.data-automation-id]=\"'novo-data-table-filter-' + (option?.label || option)\"\n                >\n                  <span>{{ option?.label || option }}</span>\n                  <novo-icon novoSuffix color=\"positive\">{{\n                    isSelected(option, multiSelectedOptions) ? 'checkbox-filled' : 'checkbox-empty'\n                  }}</novo-icon>\n                </novo-option>\n              </novo-optgroup>\n              <novo-option class=\"filter-null-results\" [hidden]=\"multiSelectHasVisibleOptions()\">{{ labels.pickerEmpty }}</novo-option>\n            </ng-container>\n            <novo-optgroup *ngSwitchCase=\"'custom'\">\n              <novo-option class=\"filter-search\" inert>\n                <ng-container *ngTemplateOutlet=\"filterTemplate; context: { $implicit: config }\"></ng-container>\n              </novo-option>\n            </novo-optgroup>\n            <novo-optgroup *ngSwitchDefault (keydown.escape)=\"handleEscapeKeydown($event)\">\n              <novo-option class=\"filter-search\" inert>\n                <novo-field flex fullWidth>\n                  <input\n                    novoInput\n                    [type]=\"config.filterConfig.type\"\n                    [(ngModel)]=\"filter\"\n                    (ngModelChange)=\"filterData($event)\"\n                    #filterInput\n                    data-automation-id=\"novo-data-table-filter-input\"\n                    (keydown.escape)=\"handleEscapeKeydown($event)\"\n                  />\n                  <novo-icon novoSuffix>search</novo-icon>\n                </novo-field>\n              </novo-option>\n            </novo-optgroup>\n          </ng-container>\n        </div>\n        <div class=\"footer\" *ngIf=\"multiSelect\">\n          <novo-button theme=\"dialogue\" color=\"dark\" (click)=\"cancel()\" data-automation-id=\"novo-data-table-multi-select-cancel\">\n            {{ labels.cancel }}\n          </novo-button>\n          <novo-button\n            theme=\"dialogue\"\n            color=\"positive\"\n            (click)=\"filterMultiSelect()\"\n            data-automation-id=\"novo-data-table-multi-select-filter\"\n          >\n            {{ labels.filters }}\n          </novo-button>\n        </div>\n      </novo-dropdown>\n    </div>\n    <div class=\"spacer\"></div>\n    <div class=\"data-table-header-resizable\" *ngIf=\"config.resizable\"><span (mousedown)=\"startResize($event)\">&nbsp;</span></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableCellHeader<T> implements IDataTableSortFilter, OnInit, OnDestroy {\n  @ViewChild('filterInput')\n  filterInput: ElementRef;\n  @ViewChild(NovoDropdownElement)\n  dropdown: NovoDropdownElement;\n  @ViewChild('optionFilterInput')\n  optionFilterInput: ElementRef;\n\n  @Input()\n  defaultSort: { id: string; value: string };\n\n  @Input()\n  allowMultipleFilters: boolean = false;\n\n  @Input()\n  resized: EventEmitter<IDataTableColumn<T>>;\n  @Input()\n  filterTemplate: TemplateRef<any>;\n  @HostBinding('class.resizable')\n  public resizable: boolean;\n\n  @Input('novo-data-table-cell-config')\n  set column(column: IDataTableColumn<T>) {\n    this._column = column;\n    this.label = column.type === 'action' ? '' : column.label;\n    this.labelIcon = column.labelIcon;\n\n    this.config = {\n      sortable: !!column.sortable,\n      filterable: !!column.filterable,\n      resizable: !!column.resizable,\n    };\n    this.resizable = this.config.resizable;\n\n    const transforms: { filter?: Function; sort?: Function } = {};\n\n    if (column.filterable && Helpers.isObject(column.filterable)) {\n      this.config.filterConfig = column.filterable as IDataTableColumnFilterConfig;\n      if (!this.config.filterConfig.type) {\n        this.config.filterConfig = { type: 'text' };\n      }\n      if ((column.filterable as IDataTableColumnFilterConfig).transform) {\n        transforms.filter = (column.filterable as IDataTableColumnFilterConfig).transform;\n      }\n    } else {\n      this.config.filterConfig = { type: 'text' };\n    }\n\n    if (column.sortable && Helpers.isObject(column.sortable)) {\n      if ((column.sortable as IDataTableColumnSortConfig).transform) {\n        transforms.sort = (column.sortable as IDataTableColumnSortConfig).transform;\n      }\n    }\n\n    if (this.config.filterConfig.type === 'date' && !this.config.filterConfig.options) {\n      this.config.filterConfig.options = this.getDefaultDateFilterOptions();\n    }\n\n    this.config.transforms = transforms;\n  }\n\n  private _rerenderSubscription: Subscription;\n  private changeTimeout: any;\n\n  public label: string;\n  public icon: string = 'sortable';\n  public labelIcon: string;\n  public id: string;\n  public filter: any;\n  public direction: string;\n  public filterActive: boolean = false;\n  public sortActive: boolean = false;\n  public sortValue: SortDirection = SortDirection.NONE;\n  public showCustomRange: boolean = false;\n  public activeDateFilter: string;\n  public config: {\n    sortable: boolean;\n    filterable: boolean;\n    resizable: boolean;\n    transforms?: { filter?: Function; sort?: Function };\n    filterConfig?: IDataTableColumnFilterConfig;\n  };\n  public multiSelect: boolean = false;\n  public multiSelectedOptions: Array<any> = [];\n  private multiSelectedOptionIsHidden: Array<{ option: string | IDataTableColumnFilterOption; hidden: boolean }> = [];\n  public optionFilter: string = '';\n  public error: boolean = false;\n  private subscriptions: Subscription[] = [];\n  private _column: IDataTableColumn<T>;\n\n  constructor(\n    public changeDetectorRef: ChangeDetectorRef,\n    public labels: NovoLabelService,\n    private state: DataTableState<T>,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Optional() public _sort: NovoDataTableSortFilter<T>,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    this._rerenderSubscription = state.updates.subscribe((change: IDataTableChangeEvent) => this.checkSortFilterState(change));\n  }\n\n  public ngOnInit(): void {\n    if (this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n    this.setupFilterOptions();\n\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public setupFilterOptions() {\n    this.checkSortFilterState({ filter: this.state.filter, sort: this.state.sort }, true);\n\n    this.multiSelect = this.config.filterConfig && this.config.filterConfig.type ? this.config.filterConfig.type === 'multi-select' : false;\n    if (this.multiSelect) {\n      this.multiSelectedOptions = this.filter ? [...this.filter] : [];\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n  }\n\n  public checkSortFilterState(sortFilterState: IDataTableChangeEvent, initialConfig: boolean = false): void {\n    if (sortFilterState.sort && sortFilterState.sort.id === this.id) {\n      this.icon = `sort-${sortFilterState.sort.value}`;\n      this.sortValue = sortFilterState.sort.value === 'asc' ? SortDirection.ASC : SortDirection.DESC;\n      this.sortActive = true;\n    } else {\n      this.icon = 'sortable';\n      this.sortValue = SortDirection.NONE;\n      this.sortActive = false;\n    }\n\n    const tableFilter = Helpers.convertToArray(sortFilterState.filter);\n    const thisFilter = tableFilter.find((filter) => filter && filter.id === this.id);\n\n    if (thisFilter) {\n      this.filterActive = true;\n      if (initialConfig && thisFilter.type === 'date' && thisFilter.selectedOption) {\n        this.activeDateFilter = thisFilter.selectedOption.label || this.labels.customDateRange;\n      }\n      this.filter = thisFilter.value;\n    } else {\n      this.filterActive = false;\n      this.filter = undefined;\n      this.activeDateFilter = undefined;\n      this.multiSelectedOptions = [];\n    }\n    if (this.defaultSort && this.id === this.defaultSort.id) {\n      this.icon = `sort-${this.defaultSort.value}`;\n      this.sortActive = true;\n    }\n    this.multiSelect = this.config.filterConfig && this.config.filterConfig.type ? this.config.filterConfig.type === 'multi-select' : false;\n    if (this.multiSelect) {\n      this.multiSelectedOptions = this.filter ? [...this.filter] : [];\n      if (this.config.filterConfig.options) {\n        if (typeof this.config.filterConfig.options[0] === 'string') {\n          this.multiSelectedOptionIsHidden = (this.config.filterConfig.options as string[]).map(\n            (\n              option: string,\n            ): {\n              option: string;\n              hidden: boolean;\n            } => ({ option, hidden: false }),\n          );\n        } else {\n          this.multiSelectedOptionIsHidden = (this.config.filterConfig.options as IDataTableColumnFilterOption[]).map(\n            (option: IDataTableColumnFilterOption): { option: IDataTableColumnFilterOption; hidden: boolean } => ({\n              option,\n              hidden: false,\n            }),\n          );\n        }\n      }\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public isSelected(option, optionsList) {\n    if (optionsList) {\n      const optionValue = option.hasOwnProperty('value') ? option.value : option;\n\n      const found = optionsList.find((item) => this.optionPresentCheck(item, optionValue));\n      return found !== undefined;\n    }\n    return false;\n  }\n\n  public toggleSelection(option) {\n    const optionValue = option.hasOwnProperty('value') ? option.value : option;\n\n    const optionIndex = this.multiSelectedOptions.findIndex((item) => this.optionPresentCheck(item, optionValue));\n    this.error = false;\n    if (optionIndex > -1) {\n      this.multiSelectedOptions.splice(optionIndex, 1);\n      if (this.optionFilter && !this.getOptionText(option).toLowerCase().startsWith(this.optionFilter.toLowerCase())) {\n        this.multiSelectedOptionIsHidden[this.multiSelectedOptionIsHidden.findIndex((record) => record.option === option)].hidden = true;\n      }\n    } else {\n      this.multiSelectedOptions.push(optionValue);\n    }\n  }\n\n  public optionPresentCheck(item, optionValue): boolean {\n    if (item.hasOwnProperty('value')) {\n      return item.value === optionValue;\n    } else {\n      return item === optionValue;\n    }\n  }\n\n  public cancel(): void {\n    this.multiSelectedOptions = this.filter ? [...this.filter] : [];\n    this.dropdown.closePanel();\n    this.clearOptionFilter();\n  }\n\n  public filterMultiSelect(): void {\n    if (this.multiSelectedOptions.length === 0 && !this.filter) {\n      this.multiSelectHasVisibleOptions() && this.dropdown ? (this.error = true) : null;\n    } else {\n      this.clearOptionFilter();\n      const actualFilter = this.multiSelectedOptions.length > 0 ? [...this.multiSelectedOptions] : undefined;\n      this.filterData(actualFilter);\n      this.dropdown.closePanel();\n    }\n  }\n\n  public multiSelectOptionFilter(optionFilter: string) {\n    this.multiSelectedOptionIsHidden.forEach((record) => {\n      if (record.option) {\n        record.hidden = !(\n          this.getOptionText(record.option).toLowerCase().startsWith(optionFilter.toLowerCase()) ||\n          this.isSelected(record.option, this.multiSelectedOptions)\n        );\n      }\n    });\n  }\n\n  public multiSelectOptionIsHidden(option: string | IDataTableColumnFilterOption): boolean {\n    return this.multiSelectedOptionIsHidden.find((record) => record.option === option).hidden;\n  }\n\n  public multiSelectHasVisibleOptions(): boolean {\n    return this.multiSelectedOptionIsHidden.some((record) => !record.hidden);\n  }\n\n  private getOptionText(option: string | IDataTableColumnFilterOption): string {\n    if (typeof option !== 'object') {\n      return option.toString();\n    } else {\n      const opt = option as IDataTableColumnFilterOption;\n      return (opt.label.length > 0 ? opt.label : opt.value).toString();\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  public multiSelectOptionFilterHandleKeydown(event: KeyboardEvent) {\n    if (this.multiSelect) {\n      this.error = false;\n      if (this.dropdown.panelOpen && event.key === Key.Escape) {\n        // escape = clear text box and close\n        Helpers.swallowEvent(event);\n        this.clearOptionFilter();\n        this.dropdown.closePanel();\n      } else if (event.key === Key.Enter) {\n        Helpers.swallowEvent(event);\n        this.filterMultiSelect();\n      } else if (\n        (event.keyCode >= 65 && event.keyCode <= 90) ||\n        (event.keyCode >= 96 && event.keyCode <= 105) ||\n        (event.keyCode >= 48 && event.keyCode <= 57)\n      ) {\n        this.optionFilterInput.nativeElement.focus();\n      }\n    }\n  }\n\n  @HostListener('keydown.escape', ['$event'])\n  public handleEscapeKeydown(event: KeyboardEvent) {\n    if (!this.multiSelect) {\n      this.error = false;\n      this.dropdown.closePanel();\n    }\n  }\n\n  private clearOptionFilter() {\n    this.error = false;\n    if (this.optionFilter.length > 0) {\n      this.optionFilter = '';\n      this.multiSelectedOptionIsHidden.forEach((record) => {\n        record.hidden = false;\n      });\n    }\n  }\n\n  public startResize(mouseDownEvent: MouseEvent): void {\n    mouseDownEvent.preventDefault();\n    const minimumWidth = 60 + (this.config.filterable ? 30 : 0) + (this.config.sortable ? 30 : 0);\n    const startingWidth: number = this.elementRef.nativeElement.getBoundingClientRect().width;\n    const mouseMoveSubscription: Subscription = fromEvent(window.document, 'mousemove').subscribe((middleMouseEvent: MouseEvent) => {\n      const differenceWidth: number = middleMouseEvent.clientX - mouseDownEvent.clientX;\n      let width: number = startingWidth + differenceWidth;\n      if (width < minimumWidth) {\n        width = minimumWidth;\n      }\n      this._column.width = width;\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this._column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this._column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this._column.width}px`);\n      this.changeDetectorRef.markForCheck();\n      this.resized.next(this._column);\n    });\n\n    const mouseUpSubscription: Subscription = fromEvent(window.document, 'mouseup').subscribe(() => {\n      mouseUpSubscription.unsubscribe();\n      mouseMoveSubscription.unsubscribe();\n      this.changeDetectorRef.markForCheck();\n    });\n    this.subscriptions.push(mouseMoveSubscription);\n    this.subscriptions.push(mouseUpSubscription);\n  }\n\n  public toggleCustomRange(event: Event, value: boolean): void {\n    Helpers.swallowEvent(event);\n    this.showCustomRange = value;\n    this.changeDetectorRef.markForCheck();\n    this.dropdown.openPanel(); // Ensures that the panel correctly updates to the dynamic size of the dropdown\n  }\n\n  public focusInput(): void {\n    if (this.filterInput && this.filterInput.nativeElement) {\n      setTimeout(() => this.filterInput.nativeElement.focus(), 0);\n    }\n    if (this.multiSelect && this.dropdown) {\n      this.dropdown._handleKeydown = (event: KeyboardEvent) => {\n        this.multiSelectOptionFilterHandleKeydown(event);\n      };\n      // setTimeout(() => this.optionFilterInput.nativeElement.focus(), 0);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  public sort(): void {\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n    this.changeTimeout = setTimeout(() => {\n      this.direction = this.getNextSortDirection(this.direction);\n      this._sort.sort(this.id, this.direction, this.config.transforms.sort);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n\n  public filterData(filter?: any): void {\n    let actualFilter = NovoDataTableFilterUtils.constructFilter(filter, this.config.filterConfig.type, this.multiSelect);\n    const selectedOption = this.config.filterConfig.type === 'date' && filter ? filter : undefined;\n    this.activeDateFilter = selectedOption ? selectedOption.label : undefined;\n\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n\n    this.changeTimeout = setTimeout(() => {\n      if (actualFilter === '') {\n        actualFilter = undefined;\n      }\n      this._sort.filter(\n        this.id,\n        this.config.filterConfig.type,\n        actualFilter,\n        this.config.transforms.filter,\n        this.allowMultipleFilters,\n        selectedOption,\n      );\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n\n  public clearFilter(): void {\n    this.filter = undefined;\n    this.multiSelectedOptions = [];\n    this.activeDateFilter = undefined;\n    this.filterData(undefined);\n    this.clearOptionFilter();\n    this.dropdown.closePanel();\n  }\n\n  private getNextSortDirection(direction: string): string {\n    if (!direction) {\n      return 'asc';\n    }\n    if (direction === 'asc') {\n      return 'desc';\n    }\n    return 'asc';\n  }\n\n  private getDefaultDateFilterOptions(): IDataTableColumnFilterOption[] {\n    const opts: IDataTableColumnFilterOption[] = [\n      { label: this.labels.past1Day, min: -1, max: 0 },\n      { label: this.labels.past7Days, min: -7, max: 0 },\n      { label: this.labels.past30Days, min: -30, max: 0 },\n      { label: this.labels.past90Days, min: -90, max: 0 },\n      { label: this.labels.past1Year, min: -366, max: 0 },\n      { label: this.labels.next1Day, min: 0, max: 1 },\n      { label: this.labels.next7Days, min: 0, max: 7 },\n      { label: this.labels.next30Days, min: 0, max: 30 },\n      { label: this.labels.next90Days, min: 0, max: 90 },\n      { label: this.labels.next1Year, min: 0, max: 366 },\n    ];\n    return opts;\n  }\n}\n","import { DataSource } from '@angular/cdk/table';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { merge, Observable, of } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { IDataTableService } from './interfaces';\nimport { DataTableState } from './state/data-table-state.service';\n\nexport class DataTableSource<T> extends DataSource<T> {\n  public total = 0;\n  public currentTotal = 0;\n  public current = 0;\n  public loading = false;\n  public pristine = true;\n  public data: T[];\n\n  private totalSet: boolean = false;\n\n  get totallyEmpty(): boolean {\n    return this.total === 0;\n  }\n\n  get currentlyEmpty(): boolean {\n    return this.current === 0;\n  }\n\n  constructor(private tableService: IDataTableService<T>, private state: DataTableState<T>, private ref: ChangeDetectorRef) {\n    super();\n  }\n\n  public connect(): Observable<any> {\n    const displayDataChanges: any = [this.state.updates];\n    return merge(...displayDataChanges).pipe(\n      startWith(null),\n      switchMap(() => {\n        this.pristine = false;\n        this.loading = true;\n        return this.tableService.getTableResults(\n          this.state.sort,\n          this.state.filter,\n          this.state.page,\n          this.state.pageSize,\n          this.state.globalSearch,\n          this.state.outsideFilter,\n        );\n      }),\n      map((data: { results: T[]; total: number }) => {\n        if (!this.totalSet || this.state.isForceRefresh) {\n          this.total = data.total;\n          this.totalSet = true;\n          this.state.isForceRefresh = false;\n        } else if (data.total > this.total) {\n          this.total = data.total;\n        }\n        this.currentTotal = data.total;\n        this.current = data.results.length;\n        this.data = data.results;\n        // Clear selection\n        if (!this.state.retainSelected) {\n          this.state.selectedRows.clear();\n        }\n        this.state.retainSelected = false;\n        this.state.onSelectionChange();\n        // Mark changes\n        setTimeout(() => {\n          this.ref.markForCheck();\n          setTimeout(() => {\n            this.loading = false;\n            this.state.dataLoaded.next();\n            this.ref.markForCheck();\n          });\n        });\n        return data.results;\n      }),\n      catchError((err, caught) => {\n        console.error(err, caught); // tslint: disable-line\n        this.loading = false;\n        return of(null);\n      }),\n    );\n  }\n\n  public disconnect(): void {}\n}\n","import { Observable, of } from 'rxjs';\nimport { Helpers } from '../../../utils/Helpers';\nimport { IDataTableFilter, IDataTableService, IDataTableSort } from '../interfaces';\n\nexport class StaticDataTableService<T> implements IDataTableService<T> {\n  originalData: T[];\n\n  constructor(private currentData: T[] = []) {\n    this.originalData = [...currentData];\n  }\n\n  public getTableResults(\n    sort: IDataTableSort,\n    filter: IDataTableFilter | IDataTableFilter[],\n    page: number = 0,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,\n  ): Observable<{ results: T[]; total: number }> {\n    this.currentData = [...this.originalData];\n    let total: number = this.originalData.length;\n    if (this.currentData.length !== 0) {\n      if (globalSearch) {\n        this.currentData = this.currentData.filter((item) =>\n          Object.keys(item).some((key) => `${item[key]}`.toLowerCase().includes(globalSearch.toLowerCase())),\n        );\n        total = this.currentData.length;\n      }\n      if (filter) {\n        this.currentData = this.filterData(this.currentData, filter);\n        total = this.currentData.length;\n      }\n      if (sort) {\n        this.currentData = this.currentData.sort(Helpers.sortByField(sort.id, sort.value === 'desc'));\n        total = this.currentData.length;\n      }\n      if (!sort && !filter && !globalSearch && !outsideFilter) {\n        this.currentData = [...this.originalData];\n      }\n      if (!Helpers.isBlank(page) && !Helpers.isBlank(pageSize)) {\n        this.currentData = this.currentData.slice(page * pageSize, (page + 1) * pageSize);\n      }\n    }\n    return of({ results: this.currentData, total });\n  }\n\n  public filterData(currentData: T[], filter: IDataTableFilter | IDataTableFilter[]): T[] {\n    const filters = Helpers.convertToArray(filter);\n    filters.forEach((aFilter) => {\n      if (Array.isArray(aFilter.value)) {\n        const values = Helpers.convertToArray(aFilter.value).map(Helpers.escapeString);\n        currentData = currentData.filter(Helpers.filterByField(aFilter.id, values));\n      } else {\n        const value = Helpers.escapeString(aFilter.value);\n        currentData = currentData.filter(Helpers.filterByField(aFilter.id, value));\n      }\n    });\n    return currentData;\n  }\n}\n","import { animate, state as animState, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nimport { NovoDataTableCellHeader } from './cell-headers/data-table-header-cell.component';\nimport { DataTableSource } from './data-table.source';\nimport {\n  IDataTableColumn,\n  IDataTableFilter,\n  IDataTablePaginationOptions,\n  IDataTablePreferences,\n  IDataTableSearchOptions,\n  IDataTableSelectionOption,\n  IDataTableService,\n  IDataTableSort,\n} from './interfaces';\nimport { ListInteractionDictionary, ListInteractionEvent } from './ListInteractionTypes';\nimport { StaticDataTableService } from './services/static-data-table.service';\nimport { DataTableState } from './state/data-table-state.service';\n\n@Component({\n  selector: 'novo-data-table',\n  animations: [\n    trigger('expand', [\n      animState('void', style({ height: '0px', minHeight: '0', visibility: 'hidden' })),\n      animState('*', style({ height: '*', visibility: 'visible' })),\n      transition('void <=> *', animate('70ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n  template: `\n    <header\n      *ngIf=\"(!(dataSource?.totallyEmpty && !state.userFiltered) && !loading) || forceShowHeader\"\n      [class.empty]=\"hideGlobalSearch && !paginationOptions && !templates['customActions']\"\n    >\n      <ng-container *ngTemplateOutlet=\"templates['customHeader']\"></ng-container>\n      <novo-search\n        alwaysOpen=\"true\"\n        (searchChanged)=\"onSearchChange($event)\"\n        [(ngModel)]=\"state.globalSearch\"\n        *ngIf=\"!hideGlobalSearch\"\n        [placeholder]=\"searchOptions?.placeholder\"\n        [hint]=\"searchOptions?.tooltip\"\n      >\n      </novo-search>\n      <novo-data-table-pagination\n        *ngIf=\"paginationOptions\"\n        [theme]=\"paginationOptions.theme\"\n        [length]=\"dataSource?.currentTotal\"\n        [page]=\"paginationOptions.page\"\n        [pageSize]=\"paginationOptions.pageSize\"\n        [pageSizeOptions]=\"paginationOptions.pageSizeOptions\"\n        [dataFeatureId]=\"paginatorDataFeatureId\"\n        [canSelectAll]=\"canSelectAll\"\n        [allMatchingSelected]=\"allMatchingSelected\"\n      >\n      </novo-data-table-pagination>\n      <div class=\"novo-data-table-actions\" *ngIf=\"templates['customActions']\">\n        <ng-container *ngTemplateOutlet=\"templates['customActions']\"></ng-container>\n      </div>\n    </header>\n    <div class=\"novo-data-table-loading-mask\" *ngIf=\"dataSource?.loading || loading\" data-automation-id=\"novo-data-table-loading\">\n      <novo-loading></novo-loading>\n    </div>\n    <div class=\"novo-data-table-outside-container\" [ngClass]=\"{ 'novo-data-table-outside-container-fixed': fixedHeader }\">\n      <div class=\"novo-data-table-custom-filter\" *ngIf=\"customFilter\">\n        <ng-container *ngTemplateOutlet=\"templates['customFilter']\"></ng-container>\n      </div>\n      <div\n        #novoDataTableContainer\n        class=\"novo-data-table-container\"\n        [ngClass]=\"{ 'novo-data-table-container-fixed': fixedHeader }\"\n        [class.empty-user-filtered]=\"dataSource?.currentlyEmpty && state.userFiltered\"\n        [class.empty]=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\"\n      >\n        <cdk-table\n          *ngIf=\"columns?.length > 0 && columnsLoaded && dataSource\"\n          [dataSource]=\"dataSource\"\n          [trackBy]=\"trackByFn\"\n          novoDataTableSortFilter\n          [class.expandable]=\"expandable\"\n          [class.empty]=\"dataSource?.currentlyEmpty && state.userFiltered\"\n          [hidden]=\"dataSource?.totallyEmpty && !state.userFiltered\"\n        >\n          <ng-container cdkColumnDef=\"selection\">\n            <novo-data-table-checkbox-header-cell *cdkHeaderCellDef [maxSelected]=\"maxSelected\"></novo-data-table-checkbox-header-cell>\n            <novo-data-table-checkbox-cell\n              *cdkCellDef=\"let row; let i = index\"\n              [row]=\"row\"\n              [maxSelected]=\"maxSelected\"\n            ></novo-data-table-checkbox-cell>\n          </ng-container>\n          <ng-container cdkColumnDef=\"expand\">\n            <novo-data-table-expand-header-cell *cdkHeaderCellDef></novo-data-table-expand-header-cell>\n            <novo-data-table-expand-cell *cdkCellDef=\"let row; let i = index\" [row]=\"row\"></novo-data-table-expand-cell>\n          </ng-container>\n          <ng-container *ngFor=\"let column of columns; trackBy: trackColumnsBy\" [cdkColumnDef]=\"column.id\">\n            <novo-data-table-header-cell\n              *cdkHeaderCellDef\n              [column]=\"column\"\n              [filterTemplate]=\"templates['column-filter-' + column.id]\"\n              [novo-data-table-cell-config]=\"column\"\n              [resized]=\"resized\"\n              [defaultSort]=\"defaultSort\"\n              [allowMultipleFilters]=\"allowMultipleFilters\"\n              [class.empty]=\"column?.type === 'action' && !column?.label\"\n              [class.button-header-cell]=\"column?.type === 'expand' || (column?.type === 'action' && !column?.action?.options)\"\n              [class.dropdown-header-cell]=\"column?.type === 'action' && column?.action?.options\"\n              [class.fixed-header]=\"fixedHeader\"\n            ></novo-data-table-header-cell>\n            <novo-data-table-cell\n              *cdkCellDef=\"let row\"\n              [resized]=\"resized\"\n              [column]=\"column\"\n              [row]=\"row\"\n              [template]=\"columnToTemplate[column.id]\"\n              [class.empty]=\"column?.type === 'action' && !column?.label\"\n              [class.button-cell]=\"column?.type === 'expand' || (column?.type === 'action' && !column?.action?.options)\"\n              [class.dropdown-cell]=\"column?.type === 'action' && column?.action?.options\"\n            ></novo-data-table-cell>\n          </ng-container>\n          <novo-data-table-header-row\n            *cdkHeaderRowDef=\"displayedColumns\"\n            [fixedHeader]=\"fixedHeader\"\n            data-automation-id=\"novo-data-table-header-row\"\n          ></novo-data-table-header-row>\n          <novo-data-table-row\n            *cdkRowDef=\"let row; columns: displayedColumns\"\n            [ngClass]=\"{ active: row[rowIdentifier] == activeRowIdentifier }\"\n            [novoDataTableExpand]=\"detailRowTemplate\"\n            [row]=\"row\"\n            [id]=\"name + '-' + row[rowIdentifier]\"\n            [dataAutomationId]=\"row[rowIdentifier]\"\n          ></novo-data-table-row>\n        </cdk-table>\n        <div class=\"novo-data-table-footer\" *ngIf=\"templates['footer']\">\n          <ng-container *ngTemplateOutlet=\"templates['footer']; context: { $implicit: columns, data: dataSource.data }\"></ng-container>\n        </div>\n        <div\n          class=\"novo-data-table-no-results-container\"\n          [style.left.px]=\"scrollLeft\"\n          *ngIf=\"dataSource?.currentlyEmpty && state.userFiltered && !dataSource?.loading && !loading && !dataSource.pristine\"\n        >\n          <div class=\"novo-data-table-empty-message\">\n            <ng-container *ngTemplateOutlet=\"templates['noResultsMessage'] || templates['defaultNoResultsMessage']\"></ng-container>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"novo-data-table-empty-container\"\n        *ngIf=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\"\n      >\n        <div class=\"novo-data-table-empty-message\">\n          <ng-container *ngTemplateOutlet=\"templates['emptyMessage'] || templates['defaultNoResultsMessage']\"></ng-container>\n        </div>\n      </div>\n    </div>\n    <!-- DEFAULT CELL TEMPLATE -->\n    <ng-template novoTemplate=\"textCellTemplate\" let-row let-col=\"col\">\n      <span [style.width.px]=\"col?.width\" [style.min-width.px]=\"col?.width\" [style.max-width.px]=\"col?.width\">{{\n        row[col.id] | dataTableInterpolate: col\n      }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"dateCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableDateRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"datetimeCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableDateTimeRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"timeCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableTimeRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"currencyCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableCurrencyRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"bigdecimalCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableBigDecimalRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"numberCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableNumberRenderer: col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"percentCellTemplate\" let-row let-col=\"col\">\n      <span>{{ row[col.id] | dataTableInterpolate: col | dataTableNumberRenderer: col:true }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"linkCellTemplate\" let-row let-col=\"col\">\n      <a\n        [attr.data-feature-id]=\"col?.attributes?.dataFeatureId\"\n        (click)=\"col.handlers?.click({ originalEvent: $event, row: row })\"\n        [style.width.px]=\"col?.width\"\n        [style.min-width.px]=\"col?.width\"\n        [style.max-width.px]=\"col?.width\"\n        >{{ row[col.id] | dataTableInterpolate: col }}</a\n      >\n    </ng-template>\n    <ng-template novoTemplate=\"telCellTemplate\" let-row let-col=\"col\">\n      <a href=\"tel:{{ row[col.id] | dataTableInterpolate: col }}\" [target]=\"col?.attributes?.target\">{{\n        row[col.id] | dataTableInterpolate: col\n      }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"mailtoCellTemplate\" let-row let-col=\"col\">\n      <a href=\"mailto:{{ row[col.id] | dataTableInterpolate: col }}\" [target]=\"col?.attributes?.target\">{{\n        row[col.id] | dataTableInterpolate: col\n      }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"buttonCellTemplate\" let-row let-col=\"col\">\n      <novo-button\n        size=\"small\"\n        theme=\"icon\"\n        [tooltip]=\"col?.action?.tooltip\"\n        tooltipPosition=\"right\"\n        [attr.data-feature-id]=\"col?.attributes?.dataFeatureId\"\n        [disabled]=\"isDisabled(col, row)\"\n        (click)=\"col.handlers?.click({ originalEvent: $event, row: row })\"\n      >\n        <novo-icon>{{ col?.action?.icon }}</novo-icon>\n      </novo-button>\n    </ng-template>\n    <ng-template novoTemplate=\"dropdownCellTemplate\" let-row let-col=\"col\">\n      <novo-dropdown parentScrollSelector=\".novo-data-table-container\" containerClass=\"novo-data-table-dropdown\">\n        <novo-button type=\"button\" theme=\"dialogue\" [icon]=\"col.action.icon\" inverse>{{ col.label }}</novo-button>\n        <novo-optgroup>\n          <novo-option\n            *ngFor=\"let option of col?.action?.options\"\n            (click)=\"option.handlers.click({ originalEvent: $event?.originalEvent, row: row })\"\n            [disabled]=\"isDisabled(option, row)\"\n          >\n            <span [attr.data-automation-id]=\"option.label\">{{ option.label }}</span>\n          </novo-option>\n        </novo-optgroup>\n      </novo-dropdown>\n    </ng-template>\n    <ng-template novoTemplate=\"defaultNoResultsMessage\">\n      <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n    </ng-template>\n    <ng-template novoTemplate=\"defaultEmptyMessage\">\n      <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n    </ng-template>\n    <ng-template novoTemplate=\"expandedRow\"> You did not provide an \"expandedRow\" template! </ng-template>\n    <ng-template #detailRowTemplate let-row>\n      <div class=\"novo-data-table-detail-row\" [@expand] style=\"overflow: hidden\">\n        <ng-container *ngTemplateOutlet=\"templates['expandedRow']; context: { $implicit: row }\"></ng-container>\n      </div>\n    </ng-template>\n    <!-- CUSTOM CELLS PASSED IN -->\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [DataTableState],\n})\nexport class NovoDataTable<T> implements AfterContentInit, OnDestroy {\n  @HostBinding('class.global-search-hidden') globalSearchHiddenClassToggle: boolean = false;\n\n  @ContentChildren(NovoTemplate) customTemplates: QueryList<NovoTemplate>;\n  @ViewChildren(NovoTemplate) defaultTemplates: QueryList<NovoTemplate>;\n  @ViewChildren(NovoDataTableCellHeader) cellHeaders: QueryList<NovoDataTableCellHeader<T>>;\n  @ViewChild('novoDataTableContainer') novoDataTableContainer: ElementRef;\n  @Output() resized: EventEmitter<IDataTableColumn<T>> = new EventEmitter();\n\n  @Input()\n  set displayedColumns(displayedColumns: string[]) {\n    if (this.displayedColumns && this.displayedColumns.length !== 0) {\n      if (this.name !== 'novo-data-table') {\n        this.preferencesChanged.emit({\n          name: this.name,\n          displayedColumns,\n        });\n      } else {\n        notify('Must have [name] set on data-table to use preferences!');\n      }\n    }\n    this._disabledColumns = displayedColumns;\n    this.configureLastDisplayedColumn();\n    if (this.initialized) {\n      setTimeout(() => {\n        this.scrollListener();\n      });\n    }\n  }\n\n  get displayedColumns(): string[] {\n    return this._disabledColumns;\n  }\n  private _disabledColumns: string[];\n\n  @Input() paginationOptions: IDataTablePaginationOptions;\n  @Input() searchOptions: IDataTableSearchOptions;\n  @Input() selectionOptions: IDataTableSelectionOption[];\n  @Input() defaultSort: { id: string; value: string };\n  @Input() name = 'novo-data-table';\n  @Input() allowMultipleFilters = false;\n  @Input() rowIdentifier = 'id';\n  @Input() activeRowIdentifier = '';\n  // prettier-ignore\n  @Input() trackByFn = (index, item) => item.id;\n  @Input() templates: { [key: string]: TemplateRef<any> } = {};\n  @Input() fixedHeader = false;\n  @Input() paginatorDataFeatureId: string;\n  @Input() maxSelected: number = undefined;\n  @Input() canSelectAll: boolean = false;\n  @Input() allMatchingSelected = false;\n\n  @Input()\n  set dataTableService(service: IDataTableService<T>) {\n    this.loading = false;\n    if (!service) {\n      service = new StaticDataTableService([]);\n    }\n    this.dataSource = new DataTableSource<T>(service, this.state, this.ref);\n    this.ref.detectChanges();\n  }\n\n  @Input()\n  set rows(rows: T[]) {\n    this.loading = false;\n    const service = new StaticDataTableService(rows);\n    this.dataSource = new DataTableSource<T>(service, this.state, this.ref);\n    this.ref.detectChanges();\n  }\n\n  @Input()\n  set outsideFilter(outsideFilter: EventEmitter<any>) {\n    // Unsubscribe\n    if (this.outsideFilterSubscription) {\n      this.outsideFilterSubscription.unsubscribe();\n    }\n    if (outsideFilter) {\n      // Re-subscribe\n      this.outsideFilterSubscription = outsideFilter.subscribe((filter: any) => {\n        this.state.outsideFilter = filter;\n        this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n        this.ref.markForCheck();\n      });\n    }\n  }\n\n  @Input()\n  set refreshSubject(refreshSubject: EventEmitter<any>) {\n    // Unsubscribe\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n    if (refreshSubject) {\n      // Re-subscribe\n      this.refreshSubscription = refreshSubject.subscribe((filter: any) => {\n        this.state.isForceRefresh = true;\n        this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n        this.ref.markForCheck();\n      });\n    }\n  }\n\n  @Input()\n  set columns(columns: IDataTableColumn<T>[]) {\n    this._columns = columns;\n    this.configureColumns();\n    this.performInteractions('init');\n  }\n  get columns(): IDataTableColumn<T>[] {\n    return this._columns;\n  }\n\n  @Input()\n  set customFilter(v: boolean) {\n    this._customFilter = coerceBooleanProperty(v);\n  }\n  get customFilter() {\n    return this._customFilter;\n  }\n  private _customFilter: boolean;\n\n  @Input()\n  set hasExandedRows(v: boolean) {\n    this._hasExandedRows = coerceBooleanProperty(v);\n  }\n  get hasExandedRows() {\n    return this._hasExandedRows;\n  }\n  private _hasExandedRows: boolean;\n\n  @Input()\n  set forceShowHeader(v: boolean) {\n    this._forceShowHeader = coerceBooleanProperty(v);\n  }\n  get forceShowHeader() {\n    return this._forceShowHeader;\n  }\n  private _forceShowHeader: boolean;\n\n  @Input()\n  set hideGlobalSearch(v: boolean) {\n    this._hideGlobalSearch = coerceBooleanProperty(v);\n    this.globalSearchHiddenClassToggle = this._hideGlobalSearch;\n  }\n  get hideGlobalSearch() {\n    return this._hideGlobalSearch;\n  }\n  private _hideGlobalSearch: boolean = true;\n\n  @Output() preferencesChanged: EventEmitter<IDataTablePreferences> = new EventEmitter<IDataTablePreferences>();\n  @Output() allSelected: EventEmitter<{ allSelected: boolean; selectedCount: number }> = new EventEmitter<{\n    allSelected: boolean;\n    selectedCount: number;\n  }>();\n\n  public dataSource: DataTableSource<T>;\n  public loading: boolean = true;\n  public columnToTemplate: { [key: string]: TemplateRef<any> } = {};\n  public columnsLoaded: boolean = false;\n  public selection: Set<string> = new Set();\n  public scrollLeft: number = 0;\n  public expandable: boolean = false;\n\n  private outsideFilterSubscription: Subscription;\n  private refreshSubscription: Subscription;\n  private resetSubscription: Subscription;\n  private paginationSubscription: Subscription;\n  private sortFilterSubscription: Subscription;\n  private allMatchingSelectedSubscription: Subscription;\n  private _columns: IDataTableColumn<T>[];\n  private scrollListenerHandler: any;\n  private initialized: boolean = false;\n\n  @HostBinding('class.empty')\n  get empty() {\n    return this.dataSource && this.dataSource.totallyEmpty;\n  }\n\n  @HostBinding('class.loading')\n  get loadingClass() {\n    return this.loading || (this.dataSource && this.dataSource.loading);\n  }\n\n  @Input() listInteractions: ListInteractionDictionary;\n\n  constructor(public labels: NovoLabelService, private ref: ChangeDetectorRef, public state: DataTableState<T>) {\n    this.scrollListenerHandler = this.scrollListener.bind(this);\n    this.sortFilterSubscription = this.state.sortFilterSource.subscribe(\n      (event: { sort: IDataTableSort; filter: IDataTableFilter | IDataTableFilter[]; globalSearch: string }) => {\n        if (this.name !== 'novo-data-table') {\n          this.preferencesChanged.emit({ name: this.name, sort: event.sort, filter: event.filter, globalSearch: event.globalSearch });\n          this.performInteractions('change');\n        } else {\n          notify('Must have [name] set on data-table to use preferences!');\n        }\n      },\n    );\n    this.paginationSubscription = this.state.paginationSource.subscribe((event: { isPageSizeChange: boolean; pageSize: number }) => {\n      if (this.name !== 'novo-data-table') {\n        if (event.isPageSizeChange) {\n          this.preferencesChanged.emit({ name: this.name, pageSize: event.pageSize });\n        }\n      } else {\n        notify('Must have [name] set on data-table to use preferences!');\n      }\n    });\n    this.resetSubscription = this.state.resetSource.subscribe(() => {\n      setTimeout(() => {\n        this.ref.detectChanges();\n      }, 300);\n    });\n    this.allMatchingSelectedSubscription = this.state.allMatchingSelectedSource.subscribe((event: boolean) => {\n      this.allMatchingSelected = event;\n    });\n  }\n\n  public modifyCellHeaderMultiSelectFilterOptions(column: string, newOptions: { value: any; label: string }[]): void {\n    const header = this.cellHeaders.find((cellHeader) => cellHeader.id === column);\n    if (header && header.config && header.config.filterConfig && header.config.filterConfig.options) {\n      const filterOptions: any[] = header.config.filterConfig.options;\n      const optionsToKeep = filterOptions.filter(\n        (opt) =>\n          header.isSelected(opt, header.multiSelectedOptions) &&\n          !newOptions.find((newOpt) => opt.value && newOpt.value && newOpt.value === opt.value),\n      );\n      header.config.filterConfig.options = [...optionsToKeep, ...newOptions];\n    } else {\n      header.config.filterConfig.options = newOptions;\n    }\n    header.setupFilterOptions();\n    header.changeDetectorRef.markForCheck();\n  }\n\n  public ngOnDestroy(): void {\n    if (this.outsideFilterSubscription) {\n      this.outsideFilterSubscription.unsubscribe();\n    }\n    if (this.novoDataTableContainer) {\n      (this.novoDataTableContainer.nativeElement as Element).removeEventListener('scroll', this.scrollListenerHandler);\n    }\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n    if (this.sortFilterSubscription) {\n      this.sortFilterSubscription.unsubscribe();\n    }\n    if (this.allMatchingSelectedSubscription) {\n      this.allMatchingSelectedSubscription.unsubscribe();\n    }\n  }\n\n  public ngAfterContentInit(): void {\n    if (this.displayedColumns && this.displayedColumns.length) {\n      this.expandable = this.displayedColumns.includes('expand');\n    }\n\n    // Default templates defined here\n    this.defaultTemplates.forEach((item) => {\n      // Only override if it doesn't already exist\n      if (!this.templates[item.getType()]) {\n        this.templates[item.getType()] = item.template;\n      }\n    });\n    // Custom templates passed in\n    this.customTemplates.forEach((item) => {\n      // Override anything that is custom and in HTML\n      this.templates[item.getType()] = item.template;\n    });\n    // Load columns\n    this.configureColumns();\n\n    // State\n    if (this.paginationOptions && !this.paginationOptions.page) {\n      this.paginationOptions.page = 0;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSize) {\n      this.paginationOptions.pageSize = 50;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSizeOptions) {\n      this.paginationOptions.pageSizeOptions = [10, 25, 50, 100];\n    }\n    this.state.page = this.paginationOptions ? this.paginationOptions.page : undefined;\n    this.state.pageSize = this.paginationOptions ? this.paginationOptions.pageSize : undefined;\n    this.state.selectionOptions = this.selectionOptions ?? undefined;\n\n    // Scrolling inside table\n    (this.novoDataTableContainer.nativeElement as Element).addEventListener('scroll', this.scrollListenerHandler);\n    this.initialized = true;\n    this.ref.markForCheck();\n  }\n\n  public onSearchChange(term: string): void {\n    this.state.globalSearch = term;\n    this.state.reset(false, true);\n    this.state.updates.next({ globalSearch: term, filter: this.state.filter, sort: this.state.sort });\n  }\n\n  public trackColumnsBy(index: number, item: IDataTableColumn<T>) {\n    return item.id;\n  }\n\n  public isDisabled(check: any, row: T): boolean {\n    if (check.disabled === true) {\n      return true;\n    }\n    if (check.disabledFunc) {\n      return check.disabledFunc(row);\n    }\n    return false;\n  }\n\n  public isExpanded(row: T): boolean {\n    if (!row) {\n      return false;\n    }\n    return this.state.expandedRows.has(`${row[this.rowIdentifier]}`);\n  }\n\n  public expandRow(row: T): void {\n    const expanded = this.isExpanded(row);\n\n    if (expanded) {\n      this.state.expandedRows.delete(`${row[this.rowIdentifier]}`);\n    } else {\n      this.state.expandedRows.add(`${row[this.rowIdentifier]}`);\n    }\n    this.state.onExpandChange((row as unknown as { id: number }).id);\n  }\n\n  public expandRows(expand: boolean): void {\n    (this.dataSource.data || []).forEach((row: T) => {\n      if (!expand) {\n        this.state.expandedRows.delete(`${row[this.rowIdentifier]}`);\n      } else {\n        this.state.expandedRows.add(`${row[this.rowIdentifier]}`);\n      }\n    });\n    this.state.onExpandChange();\n  }\n\n  public allCurrentRowsExpanded(): boolean {\n    for (let i = 0; i < (this.dataSource.data || []).length; i++) {\n      if (!this.isExpanded((this.dataSource.data || [])[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public isSelected(row: T): boolean {\n    if (!row) {\n      return false;\n    }\n    return this.state.selectedRows.has(`${row[this.rowIdentifier]}`);\n  }\n\n  public selectRow(row: T, origin?: string): void {\n    const selected = this.isSelected(row);\n    if (selected) {\n      this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n    } else {\n      if (this.canSelectAll && this.allMatchingSelected && ['onClick'].includes(origin)) {\n        // When all matching records are selected the user could be on another page where all rows only appear selected\n        // Need to reset the rows that are actually selected, select rows on the current page and deselect the chosen record\n        this.state.selectedRows.clear();\n        this.selectRows(true);\n        this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n      } else {\n        this.state.selectedRows.set(`${row[this.rowIdentifier]}`, row);\n      }\n    }\n    this.state.allMatchingSelectedSource.next(false);\n    this.state.onSelectionChange();\n  }\n\n  public selectRows(selected: boolean): void {\n    (this.dataSource.data || []).forEach((row: T) => {\n      if (!selected) {\n        this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n      } else {\n        this.state.selectedRows.set(`${row[this.rowIdentifier]}`, row);\n      }\n    });\n    this.state.onSelectionChange();\n  }\n\n  public allCurrentRowsSelected(): boolean {\n    if (this.allMatchingSelected) {\n      return true;\n    }\n    if (!this.dataSource?.data?.length) {\n      return false;\n    }\n    for (let i = 0; i < (this.dataSource.data || []).length; i++) {\n      if (!this.isSelected((this.dataSource.data || [])[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private configureLastDisplayedColumn(): void {\n    if (this.columns && this.displayedColumns && 0 !== this.columns.length && 0 !== this.displayedColumns.length) {\n      this.columns.forEach((column: IDataTableColumn<T>) => {\n        if (column.initialResizable) {\n          column.resizable = column.initialResizable.resizable;\n          column.width = column.initialResizable.width;\n          column.initialResizable = undefined;\n        }\n      });\n      const resizableColumns: string[] = this.displayedColumns.filter((name: string): boolean => {\n        return (\n          this.columns.findIndex((column: IDataTableColumn<T>): boolean => {\n            return column.resizable && column.id === name;\n          }) !== -1\n        );\n      });\n      if (resizableColumns && resizableColumns.length > 0) {\n        const lastResizableColumn: IDataTableColumn<T> = this.columns.find((column: IDataTableColumn<T>) => {\n          return column.id === resizableColumns[resizableColumns.length - 1];\n        });\n        lastResizableColumn.initialResizable = {\n          resizable: lastResizableColumn.resizable,\n          width: lastResizableColumn.width,\n        };\n        lastResizableColumn.width = undefined;\n        lastResizableColumn.resizable = false;\n      }\n    }\n  }\n\n  private configureColumns(): void {\n    if (this.columns && this.columns.length !== 0 && Object.keys(this.templates).length !== 0) {\n      // Figure the column templates\n      this.columns.forEach((column: IDataTableColumn<T>) => {\n        // Figure the template\n        let templateName: string;\n        if (column.template) {\n          // Pass it in as template\n          templateName = column.template;\n        } else if (!!this.templates[column.id]) {\n          // Custom template for the column id\n          templateName = column.id;\n        } else {\n          // Default to the defaulCellTemplate\n          if (column.type === 'action') {\n            if (column.action && column.action.options) {\n              if (!column.action.icon) {\n                column.action.icon = 'collapse';\n              }\n              templateName = 'dropdownCellTemplate';\n            } else {\n              templateName = 'buttonCellTemplate';\n            }\n          } else {\n            if (column.type === 'link:tel' || column.type === 'link:mailto') {\n              templateName = `${column.type.split(':')[1]}CellTemplate`;\n            } else {\n              templateName = `${column.type}CellTemplate`;\n            }\n          }\n        }\n        this.columnToTemplate[column.id] = this.templates[templateName];\n      });\n      this.configureLastDisplayedColumn();\n      this.columnsLoaded = true;\n    }\n  }\n\n  private scrollListener(): void {\n    const target: Element = this.novoDataTableContainer.nativeElement as Element;\n    const left: number = target.scrollLeft;\n    if (left !== this.scrollLeft) {\n      this.scrollLeft = target.scrollLeft;\n    }\n    this.ref.markForCheck();\n  }\n\n  performInteractions(event: ListInteractionEvent): void {\n    if (this.listInteractions) {\n      for (const column of this.columns) {\n        const allListColumnInteractions = this.listInteractions[column.id];\n        const listColumnInteraction = allListColumnInteractions && allListColumnInteractions.find((int) => int.event.includes(event));\n        if (listColumnInteraction) {\n          listColumnInteraction.script(this, column.id);\n        }\n      }\n    }\n  }\n}\n","import { CdkColumnDef, CdkHeaderCell } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoToastService } from '../../toast/ToastService';\nimport { NovoDataTable } from '../data-table.component';\n\n@Component({\n  selector: 'novo-data-table-checkbox-header-cell',\n  template: `\n    <div class=\"data-table-checkbox\" (click)=\"onClick()\">\n      <input type=\"checkbox\" [checked]=\"checked\" />\n      <label>\n        <i [class.bhi-checkbox-empty]=\"!checked\" [class.bhi-checkbox-filled]=\"checked\"></i>\n      </label>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableCheckboxHeaderCell<T> extends CdkHeaderCell implements OnDestroy {\n  @HostBinding('attr.role')\n  public role = 'columnheader';\n  @Input()\n  public maxSelected: number = undefined;\n\n  public checked: boolean = false;\n  private selectionSubscription: Subscription;\n  private paginationSubscription: Subscription;\n  private resetSubscription: Subscription;\n\n  get isAtLimit(): boolean {\n    return (\n      this.maxSelected && this.dataTable.state.selectedRows.size + this.dataTable.dataSource.data.length > this.maxSelected && !this.checked\n    );\n  }\n\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private dataTable: NovoDataTable<T>,\n    private ref: ChangeDetectorRef,\n    private toaster: NovoToastService,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-checkbox-header-cell');\n\n    this.selectionSubscription = this.dataTable.state.selectionSource.subscribe(() => {\n      this.checked = this.dataTable.allCurrentRowsSelected() || (this.dataTable?.canSelectAll && this.dataTable?.allMatchingSelected);\n      if (this.dataTable?.canSelectAll) {\n        this.selectAllChanged();\n      }\n      this.ref.markForCheck();\n    });\n    this.paginationSubscription = this.dataTable.state.paginationSource.subscribe((event: { isPageSizeChange: boolean }) => {\n      if (event.isPageSizeChange) {\n        this.checked = false;\n        if (this.dataTable?.canSelectAll) {\n          this.selectAllChanged();\n        }\n        this.dataTable.selectRows(false);\n        this.dataTable.state.checkRetainment('pageSize');\n        this.dataTable.state.reset(false, true);\n      } else {\n        this.checked = this.dataTable.allCurrentRowsSelected() || (this.dataTable?.canSelectAll && this.dataTable?.allMatchingSelected);\n        if (this.dataTable?.canSelectAll) {\n          this.selectAllChanged();\n        }\n      }\n      this.ref.markForCheck();\n    });\n    this.resetSubscription = this.dataTable.state.resetSource.subscribe(() => {\n      this.checked = false;\n      if (this.dataTable?.canSelectAll) {\n        this.resetAllMatchingSelected();\n      }\n      this.ref.markForCheck();\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.selectionSubscription) {\n      this.selectionSubscription.unsubscribe();\n    }\n    if (this.paginationSubscription) {\n      this.paginationSubscription.unsubscribe();\n    }\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n  }\n\n  public onClick(): void {\n    if (this.isAtLimit) {\n      this.toaster.alert({\n        theme: 'danger',\n        position: 'fixedTop',\n        message: 'Error, more than 500 items are not able to be selected at one time',\n        icon: 'caution',\n      });\n    } else {\n      this.dataTable.selectRows(!this.checked);\n    }\n    if (this.dataTable?.canSelectAll) {\n      if (this.checked) {\n        this.resetAllMatchingSelected();\n      } else {\n        this.selectAllChanged();\n      }\n    }\n  }\n\n  private resetAllMatchingSelected(): void {\n    this.dataTable.state?.allMatchingSelectedSource?.next(false);\n    this.dataTable.state?.onSelectionChange();\n  }\n\n  public selectAllChanged(): void {\n    const allSelectedEvent = {\n      allSelected: this.checked,\n      selectedCount: this.dataTable?.state?.selected?.length,\n      allMatchingSelected: this.dataTable?.allMatchingSelected,\n    };\n    this.dataTable.allSelected.emit(allSelectedEvent);\n  }\n}\n","import { CdkColumnDef, CdkHeaderCell } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoDataTable } from '../data-table.component';\n\n@Component({\n  selector: 'novo-data-table-expand-header-cell',\n  template: ` <i class=\"bhi-next data-table-icon\" novo-data-table-expander=\"true\" (click)=\"expandAll()\" [class.expanded]=\"expanded\"></i> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableExpandHeaderCell<T> extends CdkHeaderCell implements OnDestroy {\n  @HostBinding('attr.role')\n  public role = 'columnheader';\n\n  public expanded: boolean = false;\n  private expandSubscription: Subscription;\n\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private dataTable: NovoDataTable<T>,\n    private ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-expand-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-expand-header-cell');\n\n    this.expandSubscription = this.dataTable.state.expandSource.subscribe(() => {\n      this.expanded = this.dataTable.allCurrentRowsExpanded();\n      this.ref.markForCheck();\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.expandSubscription) {\n      this.expandSubscription.unsubscribe();\n    }\n  }\n\n  public expandAll(): void {\n    this.dataTable.expandRows(!this.expanded);\n  }\n}\n","import { CdkColumnDef, CdkHeaderCell } from '@angular/cdk/table';\nimport { Directive, ElementRef, HostBinding, Input, OnInit, Renderer2 } from '@angular/core';\nimport { IDataTableColumn } from '../interfaces';\n\n@Directive({\n  selector: 'novo-data-table-header-cell',\n})\nexport class NovoDataTableHeaderCell<T> extends CdkHeaderCell implements OnInit {\n  @HostBinding('attr.role')\n  public role = 'columnheader';\n\n  @Input()\n  public column: IDataTableColumn<T>;\n\n  constructor(columnDef: CdkColumnDef, private elementRef: ElementRef, private renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-header-cell');\n  }\n\n  public ngOnInit(): void {\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n    }\n  }\n}\n","import { CdkCell, CdkColumnDef } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IDataTableColumn } from '../interfaces';\n\n@Component({\n  selector: 'novo-data-table-cell',\n  template: ` <ng-container *ngTemplateOutlet=\"template; context: { $implicit: row, col: column }\"></ng-container> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableCell<T> extends CdkCell implements OnInit, OnDestroy {\n  @HostBinding('attr.role') role = 'gridcell';\n\n  @Input() row: T;\n  @Input() template: TemplateRef<any>;\n  @Input() column: IDataTableColumn<T>;\n  @Input() resized: EventEmitter<IDataTableColumn<T>>;\n  private subscriptions: Subscription[] = [];\n\n  constructor(columnDef: CdkColumnDef, private elementRef: ElementRef, private renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-cell');\n  }\n\n  public ngOnInit(): void {\n    if (this.column.cellClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.column.cellClass(this.row));\n    }\n\n    if (this.column.rightAlignCellContent) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'novo-data-table-cell-align-right');\n    }\n\n    this.calculateWidths();\n    this.subscriptions.push(\n      this.resized.subscribe((column: IDataTableColumn<T>) => {\n        if (column === this.column) {\n          this.calculateWidths();\n        }\n      }),\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n  }\n\n  private calculateWidths(): void {\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n    }\n  }\n}\n","import { CdkCell, CdkColumnDef } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoDataTable } from '../data-table.component';\n\n@Component({\n  selector: 'novo-data-table-checkbox-cell',\n  template: `\n    <div class=\"data-table-checkbox\" (click)=\"onClick()\" [tooltip]=\"getTooltip()\" tooltipPosition=\"right\">\n      <input type=\"checkbox\" [checked]=\"checked\" />\n      <label>\n        <i [class.bhi-checkbox-disabled]=\"isAtLimit\" [class.bhi-checkbox-empty]=\"!checked\" [class.bhi-checkbox-filled]=\"checked\"></i>\n      </label>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableCheckboxCell<T> extends CdkCell implements OnInit, OnDestroy {\n  @HostBinding('attr.role')\n  public role = 'gridcell';\n\n  @Input()\n  public row: T;\n  @Input()\n  public maxSelected: number = undefined;\n\n  public checked: boolean = false;\n\n  private selectionSubscription: Subscription;\n  private resetSubscription: Subscription;\n\n  get isAtLimit(): boolean {\n    return this.maxSelected && this.dataTable.state.selectedRows.size >= this.maxSelected && !this.checked;\n  }\n\n  constructor(\n    public columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    public dataTable: NovoDataTable<T>,\n    private ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-checkbox-cell');\n\n    this.selectionSubscription = this.dataTable.state.selectionSource.subscribe(() => {\n      this.checked = this.dataTable.isSelected(this.row) || (this.dataTable?.canSelectAll && this.dataTable?.allMatchingSelected);\n      this.ref.markForCheck();\n    });\n    this.resetSubscription = this.dataTable.state.resetSource.subscribe(() => {\n      this.checked = false;\n      this.ref.markForCheck();\n    });\n  }\n\n  public ngOnInit(): void {\n    this.checked = this.dataTable.isSelected(this.row) || (this.dataTable?.canSelectAll && this.dataTable?.allMatchingSelected);\n  }\n\n  public onClick(): void {\n    if (!this.isAtLimit) {\n      this.dataTable.selectRow(this.row, 'onClick');\n    }\n  }\n\n  public getTooltip() {\n    return this.isAtLimit ? 'More than ' + this.maxSelected + ' items are not able to be selected at one time' : '';\n  }\n\n  public ngOnDestroy(): void {\n    if (this.selectionSubscription) {\n      this.selectionSubscription.unsubscribe();\n    }\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n  }\n}\n","import { CdkCell, CdkColumnDef } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoDataTable } from '../data-table.component';\n\n@Component({\n  selector: 'novo-data-table-expand-cell',\n  template: ` <i class=\"bhi-next data-table-icon\" novo-data-table-expander=\"true\" [class.expanded]=\"expanded\"></i> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableExpandCell<T> extends CdkCell implements OnInit, OnDestroy {\n  @HostBinding('attr.role')\n  public role = 'gridcell';\n\n  @Input()\n  public row: T;\n\n  public expanded: boolean = false;\n\n  private expandSubscription: Subscription;\n\n  constructor(\n    public columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    public dataTable: NovoDataTable<T>,\n    private ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-expand-cell');\n\n    this.expandSubscription = this.dataTable.state.expandSource.subscribe(() => {\n      this.expanded = this.dataTable.isExpanded(this.row);\n      this.ref.markForCheck();\n    });\n  }\n\n  public ngOnInit(): void {\n    this.expanded = this.dataTable.isExpanded(this.row);\n  }\n\n  public onClick(): void {\n    this.dataTable.expandRow(this.row);\n  }\n\n  public ngOnDestroy(): void {\n    if (this.expandSubscription) {\n      this.expandSubscription.unsubscribe();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Output } from '@angular/core';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { DataTableState } from './state/data-table-state.service';\n\n@Component({\n  selector: 'novo-data-table-clear-button',\n  template: `\n    <novo-dropdown side=\"bottom-right\" class=\"novo-data-table-clear-button\" data-automation-id=\"novo-data-table-clear-dropdown\">\n      <novo-button type=\"button\" theme=\"primary\" color=\"negative\" icon=\"collapse\" data-automation-id=\"novo-data-table-clear-dropdown-btn\">\n        {{ labels.clear }}\n      </novo-button>\n      <list>\n        <item\n          *ngIf=\"state.selected.length > 0\"\n          (click)=\"clearSelected()\"\n          data-automation-id=\"novo-data-table-clear-dropdown-clear-selected\"\n          >{{ labels.clearSelected }}</item\n        >\n        <item *ngIf=\"state.sort\" (click)=\"clearSort()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-sort\">{{\n          labels.clearSort\n        }}</item>\n        <item *ngIf=\"state.filter\" (click)=\"clearFilter()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-filter\">{{\n          labels.clearFilter\n        }}</item>\n        <item *ngIf=\"state.sort && state.filter\" (click)=\"clearAll()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-all\">{{\n          labels.clearAllNormalCase\n        }}</item>\n      </list>\n    </novo-dropdown>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableClearButton<T> {\n  @Output()\n  selectedClear: EventEmitter<boolean> = new EventEmitter();\n  @Output()\n  sortClear: EventEmitter<boolean> = new EventEmitter();\n  @Output()\n  filterClear: EventEmitter<boolean> = new EventEmitter();\n  @Output()\n  allClear: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(public state: DataTableState<T>, private ref: ChangeDetectorRef, public labels: NovoLabelService) {}\n\n  clearSort(): void {\n    this.state.clearSort();\n    this.sortClear.emit(true);\n  }\n\n  clearFilter(): void {\n    this.state.clearFilter();\n    this.filterClear.emit(true);\n  }\n\n  clearSelected(): void {\n    this.state.clearSelected();\n    this.selectedClear.emit(true);\n  }\n\n  clearAll(): void {\n    this.state.reset();\n    this.allClear.emit(true);\n    this.selectedClear.emit(true);\n    this.sortClear.emit(true);\n    this.filterClear.emit(true);\n  }\n}\n","import { Directive, HostListener, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoDataTable } from './data-table.component';\nimport { DataTableState } from './state/data-table-state.service';\n\n@Directive({\n  selector: '[novoDataTableExpand]',\n})\nexport class NovoDataTableExpandDirective<T> implements OnDestroy {\n  @Input()\n  row: T;\n  @Input('novoDataTableExpand')\n  template: TemplateRef<any>;\n\n  private subscription: Subscription;\n\n  constructor(public vcRef: ViewContainerRef, private state: DataTableState<T>, private dataTable: NovoDataTable<T>) {\n    this.subscription = this.state.expandSource.subscribe((targetId?: number) => {\n      if (this.shouldExpandAllRows(targetId) || this.shouldExpandOneRow(targetId)) {\n        if (dataTable.isExpanded(this.row)) {\n          this.render();\n        } else {\n          this.clear();\n        }\n      }\n    });\n  }\n\n  shouldExpandAllRows = (targetId: number): boolean => targetId === undefined;\n\n  shouldExpandOneRow = (targetId: number) => targetId === (this.row as unknown as { id: number }).id;\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    if ((event.target as Element).hasAttribute('novo-data-table-expander')) {\n      Helpers.swallowEvent(event);\n      this.dataTable.expandRow(this.row);\n    }\n  }\n\n  private clear(): void {\n    this.vcRef.clear();\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.template && this.row) {\n      this.vcRef.createEmbeddedView(this.template, { $implicit: this.row });\n    }\n  }\n}\n","// NG2\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\n// Vendor\nimport { isDate, isValid, parse, startOfDay } from 'date-fns';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { BooleanInput } from '../../utils';\n// APP\nimport { Helpers } from '../../utils/Helpers';\nimport { DatePickerSelectModes, modelTypes, RangeModel, rangeSelectModes } from './date-picker.types';\n\n// Value accessor for the component (supports ngModel)\nconst DATE_PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDatePickerElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-date-picker',\n  providers: [DATE_PICKER_VALUE_ACCESSOR],\n  animations: [\n    trigger('startDateTextState', [\n      state(\n        'startDate',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      state(\n        'endDate',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      transition('startDate <=> endDate', animate('200ms ease-in')),\n    ]),\n    trigger('endDateTextState', [\n      state(\n        'startDate',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      state(\n        'endDate',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      transition('startDate <=> endDate', animate('200ms ease-in')),\n    ]),\n    trigger('indicatorState', [\n      state(\n        'startDate',\n        style({\n          transform: 'translateX(0%)',\n        }),\n      ),\n      state(\n        'endDate',\n        style({\n          transform: 'translateX(100%)',\n        }),\n      ),\n      transition('startDate <=> endDate', animate('200ms ease-in')),\n    ]),\n  ],\n  template: `\n    <div class=\"date-picker-container\">\n      <div class=\"date-range-tabs\" *ngIf=\"range\" [class.week-select-mode]=\"weekRangeSelect\">\n        <span\n          class=\"range-tab\"\n          (click)=\"toggleRangeSelect('startDate')\"\n          [@startDateTextState]=\"rangeSelectMode\"\n          data-automation-id=\"calendar-start-date\"\n          >{{ startDateLabel }}</span\n        >\n        <span\n          class=\"range-tab\"\n          (click)=\"toggleRangeSelect('endDate')\"\n          [@endDateTextState]=\"rangeSelectMode\"\n          data-automation-id=\"calendar-end-date\"\n          >{{ endDateLabel }}</span\n        >\n        <i class=\"indicator\" [@indicatorState]=\"rangeSelectMode\"></i>\n      </div>\n\n      <novo-calendar\n        [activeDate]=\"activeDate\"\n        [(selected)]=\"selection\"\n        (selectedChange)=\"updateSelection($event)\"\n        [mode]=\"mode\"\n        [numberOfMonths]=\"numberOfMonths\"\n        [weekStartsOn]=\"weekStart\"\n        [disabledDateMessage]=\"disabledDateMessage\"\n        [minDate]=\"start\"\n        [maxDate]=\"end\"\n      ></novo-calendar>\n\n      <div class=\"calendar-footer\" [hidden]=\"hideFooter\">\n        <novo-button (click)=\"setToday()\" class=\"today\" size=\"small\" data-automation-id=\"calendar-today\">{{ labels.today }}</novo-button>\n      </div>\n    </div>\n  `,\n})\nexport class NovoDatePickerElement implements ControlValueAccessor, OnInit {\n  /**\n   * The minimum year to allow selected in year select view\n   **/\n  @Input()\n  minYear: string | number;\n  /**\n   * The maximum year to allow selected in year select view\n   **/\n  @Input()\n  maxYear: string | number;\n  /**\n   * The minimum date that can be selected.\n   **/\n  @Input()\n  start: Date;\n  /**\n   * The maximum date that can be selected.\n   **/\n  @Input()\n  end: Date;\n  /**\n   * **Deprecated** Whether the date-picker is used outside of an overlay.\n   **/\n  @Input()\n  @BooleanInput()\n  inline: boolean;\n  /**\n   * Day of the week the calendar should display first, Sunday=0...Saturday=6\n   **/\n  @Input()\n  weekStart: number = 0;\n  /**\n   * Certain dates that are already selected.\n   **/\n  @Input()\n  preselected: Date[] = [];\n  /**\n   * Whether the days for the previous and next month should be hidden.\n   **/\n  @Input()\n  @BooleanInput()\n  @HostBinding('class.hide-overflow-days')\n  public hideOverflowDays: boolean = false;\n  /**\n   * Whether the footer which contains `today` button should be hidden.\n   **/\n  @Input()\n  @BooleanInput()\n  public hideFooter: boolean = false;\n\n  @Input()\n  disabledDateMessage: string;\n\n  // Select callback for output\n  @Output()\n  onSelect: EventEmitter<any> = new EventEmitter(false);\n\n  _mode: DatePickerSelectModes = 'single';\n  _range: boolean;\n  _weekRangeSelect: boolean;\n  _numberOfMonths: number[] = [0];\n\n  /**\n   * Number of months to display at once.\n   * @default 1\n   **/\n  @Input()\n  get numberOfMonths(): number {\n    return this._numberOfMonths.length;\n  }\n  set numberOfMonths(value) {\n    this._numberOfMonths = Array.from(Array(Number(value)).keys());\n  }\n\n  /**\n   * How the date selection should work.\n   * @default single\n   **/\n  @Input()\n  get mode(): DatePickerSelectModes {\n    return this._mode;\n  }\n  set mode(value) {\n    if (this._mode !== value) {\n      this._mode = value;\n    }\n  }\n  /**\n   * **deprecated** please use `mode=\"range\"`.\n   **/\n  @Input()\n  get range(): boolean {\n    return ['range', 'week'].includes(this.mode) || this._range;\n  }\n  set range(value) {\n    console.warn(`'range' property is deprecated, please use 'mode=\"range\"'.`);\n    if (this._range !== value) {\n      this._range = value;\n      this.mode = 'range';\n    }\n  }\n  /**\n   * **deprecated** please use `mode=\"week\"`.\n   **/\n  @Input()\n  get weekRangeSelect(): boolean {\n    return this._mode === 'week' || this._weekRangeSelect;\n  }\n  set weekRangeSelect(value) {\n    console.warn(`'weekRangeSelect' property is deprecated, please use 'mode=\"week\"'.`);\n    if (this._weekRangeSelect !== value) {\n      this._weekRangeSelect = value;\n      this.mode = 'week';\n    }\n  }\n\n  // @HostBinding('style.width')\n  // get hb_width() {\n  //   return this._sanitizer.bypassSecurityTrustStyle(`${this.numberOfMonths * 228}px`);\n  // }\n\n  model: modelTypes;\n  activeDate: Date;\n\n  _selection: Date[] = [];\n  preview: Date[] = [];\n  startDateLabel: string;\n  endDateLabel: string;\n\n  rangeSelectMode: rangeSelectModes = 'startDate';\n  _onChange: Function = () => {};\n  _onTouched: Function = () => {};\n\n  get selection(): Date[] {\n    return this._selection;\n  }\n  set selection(value) {\n    this._selection = value ? value.filter(isDate).map((d) => startOfDay(d)) : [];\n  }\n\n  constructor(\n    public labels: NovoLabelService,\n    private element: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private _sanitizer: DomSanitizer,\n  ) {}\n\n  ngOnInit() {\n    // Determine the year array\n    const now = new Date();\n    // Set labels\n    if (this.model) {\n      this.modelToSelection(this.model);\n    }\n    if (this.selection && this.selection.length) {\n      this.updateView(this.selection[0]);\n    }\n  }\n\n  updateView(date) {\n    const value: any = date ? new Date(date) : new Date();\n    this.activeDate = new Date(value);\n  }\n\n  updateSelection(selected: Date[], fireEvents = true) {\n    // Helpers.swallowEvent(event);\n    this.selection = selected;\n\n    this.startDateLabel = this.labels.formatDateWithFormat(this.selection[0], {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric',\n    });\n\n    this.endDateLabel = this.labels.formatDateWithFormat(this.selection[1], {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric',\n    });\n\n    if (fireEvents) {\n      switch (this.mode) {\n        case 'multiple':\n          this.fireSelect();\n          // Also, update the ngModel\n          this._onChange(this.selection);\n          this.model = this.selection;\n          break;\n        case 'range':\n        case 'week':\n          if (this.selection.filter(Boolean).length === 2) {\n            this.fireRangeSelect();\n            // Also, update the ngModel\n            const model = {\n              startDate: this.selection[0],\n              endDate: this.selection[1],\n            };\n            this._onChange(model);\n            this.model = model;\n          }\n          break;\n        case 'single':\n        default:\n          this.fireSelect();\n          // Also, update the ngModel\n          this._onChange(this.selection[0]);\n          this.model = this.selection[0];\n          break;\n      }\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  eventData(date: Date) {\n    return {\n      year: date.getFullYear(),\n      month: this.labels.formatDateWithFormat(date, { month: 'long' }),\n      day: this.labels.formatDateWithFormat(date, { weekday: 'long' }),\n      date,\n    };\n  }\n\n  fireSelect() {\n    if (this.mode === 'multiple') {\n      this.onSelect.next(this.selection);\n    } else {\n      this.onSelect.next(this.eventData(this.selection[0]));\n    }\n  }\n\n  fireRangeSelect() {\n    // Make sure the start date is before the end date\n    if (this.selection.filter(Boolean).length === 2) {\n      const [start, end] = this.selection;\n      this.onSelect.next({\n        startDate: this.eventData(start),\n        endDate: this.eventData(end),\n      });\n    }\n  }\n\n  setToday() {\n    const tmp = new Date();\n    this.updateView(tmp);\n    this.updateSelection(Array.of(tmp));\n  }\n\n  toggleRangeSelect(range: rangeSelectModes): void {\n    this.rangeSelectMode = range;\n    if (range === 'startDate' && this.selection.length) {\n      this.updateView(this.selection[0]);\n    }\n    if (range === 'endDate' && this.selection.length === 2) {\n      this.updateView(this.selection[1]);\n    }\n  }\n\n  modelToSelection(model: modelTypes) {\n    // this.selection = this._strategy.selectionFinished();\n    switch (this.mode) {\n      case 'multiple':\n        this.selection = model as Date[];\n        break;\n      case 'range':\n      case 'week':\n        const range = this.model as RangeModel;\n        this.selection = [range.startDate, range.endDate].filter(Boolean);\n        break;\n      case 'single':\n      default:\n        this.selection = [model as Date];\n        break;\n    }\n  }\n\n  // ValueAccessor Functions\n  writeValue(model: modelTypes): void {\n    this.model = model;\n    if (this.mode === 'multiple') {\n      this.selection = this.model as Date[];\n    }\n    if (Helpers.isDate(model)) {\n      this.updateView(model);\n      this.modelToSelection(model);\n    } else if (Helpers.isString(model)) {\n      const date = parse(model as any);\n      if (isValid(date)) {\n        this.updateView(date);\n        this.modelToSelection(date);\n      }\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this._onTouched = fn;\n  }\n}\n","// NG2\nimport { Injectable } from '@angular/core';\nimport { NovoLabelService } from '../../services/novo-label-service';\n// APP\nimport { Helpers } from '../../utils/Helpers';\n\n@Injectable()\nexport class DateFormatService {\n  constructor(private labels: NovoLabelService) {}\n\n  getTimeMask(militaryTime: boolean): Array<RegExp> {\n    let mask: Array<RegExp> = [/\\d/, /\\d/, /:/, /\\d/, /\\d/];\n    let timeFormatArray: Array<string> = [];\n    const timeFormat: string = this.labels.timeFormatPlaceholderAM.toLowerCase();\n    if (militaryTime) {\n      return mask;\n    } else {\n      timeFormatArray = timeFormat.split('hh:mm');\n      if (timeFormatArray && timeFormatArray.length) {\n        mask = [];\n        for (const timeFormatPart of timeFormatArray) {\n          if (timeFormatPart === '') {\n            mask = mask.concat([/\\d/, /\\d|:/, /:|\\d/, /\\d|\\w|\\s/, /\\d|\\s|\\w/]);\n          } else if (timeFormatPart.length) {\n            for (let i = 0; i < timeFormatPart.length; i++) {\n              mask.push(/\\s|\\w|\\d|\\./);\n            }\n          }\n        }\n      }\n    }\n    return mask;\n  }\n\n  getDateMask(): Array<RegExp> {\n    return [/\\d/, /\\d|\\/|\\.|\\-/, /\\/|\\.|\\-|\\d/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d/, /\\d/];\n  }\n\n  getDateTimeMask(militaryTime: boolean = false): Array<RegExp> {\n    return [...this.getDateMask(), /\\,?/, /\\s/, ...this.getTimeMask(militaryTime)];\n  }\n\n  getTimePlaceHolder(militaryTime: boolean): string {\n    if (militaryTime) {\n      return this.labels.timeFormatPlaceholder24Hour;\n    }\n    return this.labels.timeFormatPlaceholderAM;\n  }\n\n  parseDateString(dateString: string): [Date, string, boolean] {\n    let dateFormat: string = this.labels.dateFormatString();\n    const dateFormatRegex = /(\\w+)[\\/|\\.|\\-](\\w+)[\\/|\\.|\\-](\\w+)/gi;\n    const dateValueRegex = /(\\d+)[\\/|\\.|\\-](\\d+)[\\/|\\.|\\-](\\d+)/gi;\n    let dateFormatTokens: Array<string>;\n    let dateValueTokens: Array<string>;\n    let year: number;\n    let month: number;\n    let day: number;\n    let date: Date = new Date();\n    let isInvalidDate = true;\n    if (Helpers.isEmpty(dateFormat)) {\n      // Default to MM/dd/yyyy\n      dateFormat = 'mm/dd/yyyy';\n    } else {\n      dateFormat = dateFormat.toLowerCase();\n    }\n    dateFormatTokens = dateFormatRegex.exec(dateFormat);\n    dateValueTokens = dateValueRegex.exec(dateString);\n    if (dateFormatTokens && dateFormatTokens.length === 4 && dateValueTokens && dateValueTokens.length === 4) {\n      for (let i = 1; i < 4; i++) {\n        if (dateFormatTokens[i].includes('m')) {\n          month = parseInt(dateValueTokens[i], 10) - 1;\n        } else if (dateFormatTokens[i].includes('d')) {\n          day = parseInt(dateValueTokens[i], 10);\n        } else {\n          year = parseInt(dateValueTokens[i], 10);\n        }\n      }\n      if (month >= 0 && month <= 11 && year > 1900 && day > 0 && day <= 31) {\n        date = new Date(year, month, day);\n        isInvalidDate = false;\n      }\n    } else if (dateFormatTokens && dateFormatTokens.length === 4 && dateString.length >= 1) {\n      const twoTokens = /\\d{1,4}(\\/|\\.|\\-)(\\d{1,2})/.exec(dateString);\n      const oneToken = /^(\\d{1,4})$/.exec(dateString);\n      const delimiter = /\\w+(\\/|\\.|\\-)\\w+[\\/|\\.|\\-]\\w+/gi.exec(dateFormat);\n      const dateStringWithDelimiter = dateString[dateString.length - 1].match(/\\/|\\.|\\-/);\n      if (twoTokens && twoTokens.length === 3 && this.isValidDatePart(twoTokens[2], dateFormatTokens[2]) && !dateStringWithDelimiter) {\n        dateString = `${dateString}${delimiter[1]}`;\n      } else if (oneToken && oneToken.length === 2 && this.isValidDatePart(oneToken[1], dateFormatTokens[1]) && !dateStringWithDelimiter) {\n        dateString = `${dateString}${delimiter[1]}`;\n      }\n    }\n    return [date, dateString, isInvalidDate];\n  }\n\n  parseTimeString(timeString: string, militaryTime: boolean): [Date, string] {\n    const value: Date = new Date();\n    let timeStringParts: Array<string>;\n    let amFormat = this.labels.timeFormatAM;\n    let pmFormat = this.labels.timeFormatPM;\n    if (!(timeString && timeString.includes(':'))) {\n      return [value, timeString];\n    }\n    if (!militaryTime && amFormat && pmFormat) {\n      let splits: Array<string> = [];\n      let pm: boolean = false;\n      amFormat = this.labels.timeFormatAM.toLowerCase();\n      pmFormat = this.labels.timeFormatPM.toLowerCase();\n      timeString = timeString.toLowerCase();\n      if (timeString.includes(amFormat)) {\n        splits = timeString.split(amFormat);\n      } else if (timeString.includes(pmFormat)) {\n        splits = timeString.split(pmFormat);\n        pm = true;\n      }\n      if (splits && splits.length) {\n        for (const item of splits) {\n          if (item && item.trim().includes(':')) {\n            timeStringParts = item.trim().split(':');\n          }\n        }\n      }\n      if (timeStringParts && timeStringParts.length && timeStringParts.length === 2) {\n        let hours: number = parseInt(timeStringParts[0], 10);\n        if (hours === 12 && pm) {\n          hours = 12;\n        } else if (pm) {\n          hours = hours + 12;\n        } else if (hours === 12) {\n          hours = 0;\n        }\n        value.setHours(hours);\n        value.setMinutes(parseInt(timeStringParts[1], 10));\n        value.setSeconds(0);\n      }\n    } else {\n      timeStringParts = /(\\d{1,2}):(\\d{2})/.exec(timeString);\n      if (timeStringParts && timeStringParts.length && timeStringParts.length === 3) {\n        value.setHours(parseInt(timeStringParts[1], 10));\n        value.setMinutes(parseInt(timeStringParts[2], 10));\n        value.setSeconds(0);\n      }\n    }\n    return [value, timeString];\n  }\n\n  parseString(dateTimeString: string, militaryTime: boolean, type: string): [Date, string, boolean?] {\n    switch (type) {\n      case 'datetime':\n        const str = dateTimeString.replace(/-/g, '/');\n        const parts = str.split(' ');\n        const [dt, dts] = this.parseDateString(parts[0]);\n        if (parts.length > 1) {\n          const [tm, tms] = this.parseTimeString(parts[1], militaryTime);\n          return [new Date(dt.setHours(tm.getHours(), tm.getMinutes())), `${dts} ${tms}`];\n        }\n        return [dt, dts];\n      case 'date':\n        return this.parseDateString(dateTimeString);\n      case 'time':\n        return this.parseTimeString(dateTimeString, militaryTime);\n      default:\n        return;\n    }\n  }\n\n  isValidDatePart(value: string, format: string): boolean {\n    const datePart = parseInt(value, 10);\n    if (format.includes('m') && (datePart >= 2 || value.length === 2)) {\n      return true;\n    } else if (format.includes('d') && (datePart >= 4 || value.length === 2)) {\n      return true;\n    } else if (format.includes('y') && datePart >= 1000) {\n      return true;\n    }\n    return false;\n  }\n}\n","// NG\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\nimport * as dateFns from 'date-fns';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// App\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\n\n// Value accessor for the component (supports ngModel)\nconst DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDatePickerInputElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-date-picker-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n    <input\n      type=\"text\"\n      [name]=\"name\"\n      [(ngModel)]=\"formattedValue\"\n      [textMask]=\"maskOptions\"\n      [placeholder]=\"placeholder\"\n      (focus)=\"_handleFocus($event)\"\n      (keydown)=\"_handleKeydown($event)\"\n      (input)=\"_handleInput($event)\"\n      (blur)=\"_handleBlur($event)\"\n      #input\n      data-automation-id=\"date-input\"\n      [disabled]=\"disabled\"\n    />\n    <span class=\"error-text\" *ngIf=\"showInvalidDateError\">{{ invalidDateErrorMessage }}</span>\n    <i *ngIf=\"!hasValue\" (click)=\"openPanel()\" class=\"bhi-calendar\"></i>\n    <i *ngIf=\"hasValue\" (click)=\"clearValue()\" class=\"bhi-times\"></i>\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-date-picker\n        [start]=\"start\"\n        [end]=\"end\"\n        inline=\"true\"\n        (onSelect)=\"setValueAndClose($event)\"\n        [disabledDateMessage]=\"disabledDateMessage\"\n        [ngModel]=\"value\"\n        [weekStart]=\"weekStart\"\n      ></novo-date-picker>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoDatePickerInputElement implements OnInit, OnChanges, ControlValueAccessor {\n  public value: any;\n  public formattedValue: string = '';\n  public showInvalidDateError: boolean;\n  public invalidDateErrorMessage: string = '';\n  private userDefinedFormat: boolean;\n  private isInvalidDate: boolean;\n\n  /** View -> model callback called when value changes */\n  _onChange: (value: any) => void = () => {};\n\n  /** View -> model callback called when autocomplete has been touched */\n  _onTouched = () => {};\n\n  /**\n   * The name of the form field, get passed to the native `input` element\n   **/\n  @Input()\n  name: string;\n  /**\n   * The minimum date that can be selected.\n   **/\n  @Input()\n  start: Date;\n  /**\n   * The maximum date that can be selected.\n   **/\n  @Input()\n  end: Date;\n  /**\n   * Placeholder text to display in the input when it is empty.\n   **/\n  @Input()\n  placeholder: string;\n  /**\n   * MaskOptions to pass to the textMaskAddons plugin\n   **/\n  @Input()\n  maskOptions: any;\n  /**\n   * The format to use to parse and render dates: DD/MM/YYYY or MM/DD/YYYY\n   **/\n  @Input()\n  format: string;\n  @Input()\n  textMaskEnabled: boolean = true;\n  @Input()\n  allowInvalidDate: boolean = false;\n  /**\n   * Sets the field as to appear disabled, users will not be able to interact with the text field.\n   **/\n  @HostBinding('class.disabled')\n  @Input()\n  disabled: boolean = false;\n  @Input()\n  disabledDateMessage: string;\n  /**\n   * Day of the week the calendar should display first, Sunday=0...Saturday=6\n   **/\n  @Input()\n  weekStart: number = 0;\n  @Output()\n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  changeEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  constructor(\n    public element: ElementRef,\n    public labels: NovoLabelService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    public dateFormatService: DateFormatService,\n  ) {\n    this.placeholder = this.labels.localizedDatePlaceholder();\n  }\n\n  ngOnInit() {\n    this._initFormatOptions();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (Object.keys(changes).some((key) => ['format'].includes(key))) {\n      this._initFormatOptions();\n    }\n  }\n\n  _initFormatOptions() {\n    this.userDefinedFormat = this.format ? !this.format.match(/^(DD\\/MM\\/YYYY|MM\\/DD\\/YYYY)$/g) : false;\n    if (!this.userDefinedFormat && this.textMaskEnabled && !this.allowInvalidDate) {\n      this.maskOptions = this.maskOptions || {\n        mask: this.dateFormatService.getDateMask(),\n        pipe: createAutoCorrectedDatePipe((this.format || this.labels.dateFormatString()).toLowerCase()),\n        keepCharPositions: false,\n        guide: true,\n      };\n    } else {\n      this.maskOptions = { mask: false };\n    }\n    this.setupInvalidDateErrorMessage();\n  }\n\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(): void {\n    if (!this.disabled) {\n      this.overlay.openPanel();\n    }\n  }\n  closePanel(): void {\n    this.overlay.closePanel();\n  }\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n  /** END: Convenient Panel Methods. */\n\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.key === Key.Escape || event.key === Key.Enter || event.key === Key.Tab) && this.panelOpen) {\n      this._handleEvent(event, true);\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      this._handleEvent(event, false);\n    }\n  }\n\n  _handleBlur(event: FocusEvent): void {\n    this.handleInvalidDate();\n    this.blurEvent.emit(event);\n  }\n\n  _handleFocus(event: FocusEvent): void {\n    this.showInvalidDateError = false;\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n\n  _handleEvent(event: Event, blur: boolean): void {\n    const value = (event.target as HTMLInputElement).value;\n    if (value === '') {\n      this.clearValue();\n      this.closePanel();\n    } else {\n      this.formatDate(value, blur);\n      this.openPanel();\n    }\n  }\n\n  protected formatDate(value: string, blur: boolean) {\n    try {\n      const [dateTimeValue, formatted, isInvalidDate] = this.dateFormatService.parseString(value, false, 'date');\n      this.isInvalidDate = isInvalidDate;\n      if (!isNaN(dateTimeValue.getUTCDate())) {\n        const dt = new Date(dateTimeValue);\n        this.dispatchOnChange(dt, blur);\n      } else {\n        this.dispatchOnChange(null, blur);\n      }\n    } catch (err) {}\n  }\n\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  handleInvalidDate(): void {\n    if (this.isInvalidDate && this.value) {\n      this.showInvalidDateError = true;\n      this.clearValue();\n      this.closePanel();\n    }\n  }\n\n  setupInvalidDateErrorMessage(): void {\n    let dateFormat: string = this.labels.dateFormatString();\n    if (Helpers.isEmpty(dateFormat)) {\n      // Default to mm/dd/yyyy\n      dateFormat = 'mm/dd/yyyy';\n    } else {\n      dateFormat = dateFormat.toLowerCase();\n    }\n    this.invalidDateErrorMessage = `Invalid date field entered. Date format of ${dateFormat} is required.`;\n  }\n\n  public dispatchOnChange(newValue?: any, blur: boolean = false, skip: boolean = false) {\n    if (newValue !== this.value) {\n      this._onChange(newValue);\n      this.changeEvent.emit(newValue);\n      if (blur) {\n        !skip && this.writeValue(newValue);\n      } else {\n        !skip && this._setCalendarValue(newValue);\n      }\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n    this._setCalendarValue(value);\n    this._setFormValue(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _setCalendarValue(value: any): void {\n    if (value instanceof Date && this.value instanceof Date) {\n      let newDate = new Date(value);\n      newDate.setHours(0, 0, 0, 0);\n      this.value = newDate;\n      return;\n    }\n    this.value = value;\n  }\n\n  private _setFormValue(value: any): void {\n    if (value) {\n      const test = this.formatDateValue(value);\n      this.formattedValue = test;\n    } else {\n      this.formattedValue = '';\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  public setValueAndClose(event: any | null): void {\n    if (event && event.date) {\n      this.dispatchOnChange(event.date, true);\n    }\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearValue() {\n    this.formattedValue = '';\n    this.dispatchOnChange(null);\n  }\n\n  public formatDateValue(value) {\n    const originalValue = value;\n    try {\n      if (!value) {\n        return '';\n      }\n      if (this.userDefinedFormat && dateFns.isValid(value)) {\n        return dateFns.format(value, this.format);\n      }\n      if (!(value instanceof Date)) {\n        value = new Date(value);\n      }\n      if (!(isNaN(value.valueOf()) && this.allowInvalidDate)) {\n        return this.labels.formatDateWithFormat(value, {\n          month: '2-digit',\n          day: '2-digit',\n          year: 'numeric',\n        });\n      } else {\n        return originalValue;\n      }\n    } catch (err) {\n      return '';\n    }\n  }\n\n  public get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\n}\n","// NG\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\nimport * as dateFns from 'date-fns';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// App\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\nimport { RangeModel } from './date-picker.types';\n\n// Value accessor for the component (supports ngModel)\nconst DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDateRangeInputElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-date-range-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n    <div class=\"date-range-input-container\">\n      <input\n        type=\"text\"\n        [name]=\"name\"\n        [(ngModel)]=\"formattedStartDate\"\n        [textMask]=\"maskOptions\"\n        [placeholder]=\"placeholder\"\n        (keydown)=\"_onStartInputChange($event)\"\n        (input)=\"_onStartInputChange($event)\"\n        (focus)=\"_handleFocus($event)\"\n        (blur)=\"_handleBlur($event)\"\n        #startDate\n        data-automation-id=\"date-range-input-start\"\n        [disabled]=\"disabled\"\n      />\n      <novo-icon *ngIf=\"!hasStartValue\" (click)=\"openPanel()\">calendar</novo-icon>\n      <novo-icon *ngIf=\"hasStartValue\" (click)=\"clearStartValue()\">x</novo-icon>\n    </div>\n    <div class=\"date-range-input-divider\">-</div>\n    <div class=\"date-range-input-container\">\n      <input\n        type=\"text\"\n        [name]=\"name\"\n        [(ngModel)]=\"formattedEndDate\"\n        [textMask]=\"maskOptions\"\n        [placeholder]=\"placeholder\"\n        (keydown)=\"_onEndInputChange($event)\"\n        (input)=\"_onEndInputChange($event)\"\n        (focus)=\"_handleFocus($event)\"\n        (blur)=\"_handleBlur($event)\"\n        #endDate\n        data-automation-id=\"date-range-input-end\"\n        [disabled]=\"disabled\"\n      />\n      <novo-icon *ngIf=\"!hasEndValue\" (click)=\"openPanel()\">calendar</novo-icon>\n      <novo-icon *ngIf=\"hasEndValue\" (click)=\"clearEndValue()\">x</novo-icon>\n    </div>\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-date-picker\n        [start]=\"start\"\n        [end]=\"end\"\n        [mode]=\"mode\"\n        range=\"true\"\n        inline=\"true\"\n        (onSelect)=\"setValueAndClose($event)\"\n        [ngModel]=\"value\"\n        [weekStart]=\"weekStart\"\n      ></novo-date-picker>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoDateRangeInputElement implements OnInit, OnChanges, ControlValueAccessor {\n  public formattedStartDate: string = '';\n  public formattedEndDate: string = '';\n  private userDefinedFormat: boolean;\n\n  @Input()\n  name: string;\n  @Input()\n  start: Date;\n  @Input()\n  end: Date;\n  @Input()\n  weekRangeSelect: boolean = false;\n  @Input()\n  mode: string = 'range';\n  @Input()\n  placeholder: string;\n  @Input()\n  maskOptions: any;\n  @Input()\n  format: string;\n  @Input()\n  textMaskEnabled: boolean = true;\n  @Input()\n  allowInvalidDate: boolean = false;\n  @Input()\n  weekStart: number = 0;\n  @Output()\n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _value: RangeModel = { startDate: null, endDate: null };\n  private _disabled: boolean = false;\n\n  @Input() get value(): RangeModel {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      this._setFormValue(value);\n      this.onChangeCallback(this._value);\n    }\n  }\n\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(\n    public element: ElementRef,\n    public labels: NovoLabelService,\n    private cdr: ChangeDetectorRef,\n    public dateFormatService: DateFormatService,\n  ) {\n    this.placeholder = this.labels.dateFormatString().toUpperCase() || this.labels.dateFormatPlaceholder;\n  }\n\n  ngOnInit() {\n    this._initFormatOptions();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (Object.keys(changes).some((key) => ['format'].includes(key))) {\n      this._initFormatOptions();\n    }\n  }\n\n  _initFormatOptions() {\n    this.userDefinedFormat = this.format ? !this.format.match(/^(DD\\/MM\\/YYYY|MM\\/DD\\/YYYY)$/g) : false;\n    if (!this.userDefinedFormat && this.textMaskEnabled && !this.allowInvalidDate) {\n      this.maskOptions = this.maskOptions || {\n        mask: this.dateFormatService.getDateMask(),\n        pipe: createAutoCorrectedDatePipe((this.format || this.labels.dateFormatString()).toLowerCase()),\n        keepCharPositions: false,\n        guide: true,\n      };\n    } else {\n      this.maskOptions = { mask: false };\n    }\n  }\n\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(): void {\n    if (!this.disabled) {\n      this.overlay.openPanel();\n    }\n  }\n  closePanel(): void {\n    this.overlay && this.overlay.closePanel();\n  }\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n  /** END: Convenient Panel Methods. */\n\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.key === Key.Escape || event.key === Key.Enter || event.key === Key.Tab) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n\n  _handleBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n  }\n\n  _handleFocus(event: FocusEvent): void {\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n\n  protected formatDate(value: string) {\n    try {\n      const [dateTimeValue] = this.dateFormatService.parseString(value, false, 'date');\n      return new Date(dateTimeValue);\n    } catch (err) {\n      return null;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  _onStartInputChange(event: KeyboardEvent) {\n    this._handleKeydown(event);\n    if (document.activeElement === event.target) {\n      event.stopPropagation();\n      const startDate = this.formatDate((event.target as HTMLInputElement).value);\n      if (startDate) {\n        this.value = {\n          ...this.value,\n          startDate,\n        };\n        this.change.emit(this.value);\n      }\n    }\n  }\n\n  _onEndInputChange(event: KeyboardEvent) {\n    this._handleKeydown(event);\n    if (document.activeElement === event.target) {\n      event.stopPropagation();\n      const endDate = this.formatDate((event.target as HTMLInputElement).value);\n      if (endDate) {\n        this.value = {\n          ...this.value,\n          endDate,\n        };\n        this.change.emit(this.value);\n      }\n    }\n  }\n\n  private _setFormValue(value: RangeModel): void {\n    if (this.value) {\n      this.formattedStartDate = this.formatDateValue(this.value.startDate);\n      this.formattedEndDate = this.formatDateValue(this.value.endDate);\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  public setValueAndClose(event: any | null): void {\n    if (event && event.startDate && event.endDate) {\n      const startDate = event.startDate.date;\n      const endDate = event.endDate.date;\n      this.value = { startDate, endDate };\n      this.change.emit(this.value);\n    }\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearStartValue() {\n    this.formattedStartDate = '';\n    this.value = { ...this.value, startDate: null };\n    this.change.emit(this.value);\n  }\n  public clearEndValue() {\n    this.formattedEndDate = '';\n    this.value = { ...this.value, endDate: null };\n    this.change.emit(this.value);\n  }\n\n  public formatDateValue(value) {\n    const originalValue = value;\n    try {\n      if (!value) {\n        return '';\n      }\n      if (this.userDefinedFormat && dateFns.isValid(value)) {\n        return dateFns.format(value, this.format);\n      }\n      if (!(value instanceof Date)) {\n        value = new Date(value);\n      }\n      if (!(isNaN(value.valueOf()) && this.allowInvalidDate)) {\n        return this.labels.formatDateWithFormat(value, {\n          month: '2-digit',\n          day: '2-digit',\n          year: 'numeric',\n        });\n      } else {\n        return originalValue;\n      }\n    } catch (err) {\n      return '';\n    }\n  }\n\n  public get hasStartValue() {\n    return !Helpers.isEmpty(this.value?.startDate);\n  }\n  public get hasEndValue() {\n    return !Helpers.isEmpty(this.value?.endDate);\n  }\n}\n","// NG\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// Vendor\n// App\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\n\n// Value accessor for the component (supports ngModel)\nconst MULTI_DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoMultiDateInputElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-multi-date-input',\n  providers: [MULTI_DATE_VALUE_ACCESSOR],\n  template: `\n    <novo-chip-list>\n      <novo-chip *ngFor=\"let date of value | default: []\" (removed)=\"remove($event, date)\">\n        {{ date | date: format }}\n        <novo-icon novoChipRemove>close</novo-icon>\n      </novo-chip>\n    </novo-chip-list>\n    <!-- <div *ngIf=\"value.length > chipsCount\">\n      <ul class=\"summary\">\n        <li *ngFor=\"let type of notShown\">+ {{ type.count }} {{ labels.more }} {{ type.type }}</li>\n      </ul>\n    </div> -->\n    <div class=\"chip-input-container\" (click)=\"_handleFocus($event)\">\n      <span class=\"placeholder\" *ngIf=\"!value.length\" data-automation-id=\"multi-date-input\">{{ placeholder }}</span>\n    </div>\n    <novo-icon class=\"panel-toggle\" [class.selected]=\"panelOpen\" (click)=\"openPanel()\">calendar</novo-icon>\n    <label class=\"clear-all\" *ngIf=\"value.length\" (click)=\"clearValue()\">{{ labels.clearAll }} <i class=\"bhi-times\"></i></label>\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-date-picker\n        [start]=\"start\"\n        [end]=\"end\"\n        inline=\"true\"\n        mode=\"multiple\"\n        (onSelect)=\"setValueAndClose($event)\"\n        [(ngModel)]=\"value\"\n        [weekStart]=\"weekStart\"\n      ></novo-date-picker>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoMultiDateInputElement implements OnInit, ControlValueAccessor {\n  public formattedStartDate: string = '';\n  public formattedEndDate: string = '';\n  private userDefinedFormat: boolean;\n\n  @Input()\n  name: string;\n  @Input()\n  start: Date;\n  @Input()\n  end: Date;\n  @Input()\n  placeholder: string;\n  @Input()\n  format: string = 'shortDate';\n  @Input()\n  allowInvalidDate: boolean = false;\n  @Input()\n  weekStart: number = 0;\n  @Input()\n  chipsCount: number = 5;\n  @Output()\n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _value: Date[] = [];\n  private _disabled: boolean = false;\n  private notShown: any = {};\n\n  @Input() get value(): Date[] {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      this._setFormValue(value);\n      this.onChangeCallback(this._value);\n    }\n  }\n\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(\n    public element: ElementRef,\n    public labels: NovoLabelService,\n    private cdr: ChangeDetectorRef,\n    public dateFormatService: DateFormatService,\n  ) {\n    this.placeholder = this.labels.dateFormatString().toUpperCase() || this.labels.dateFormatPlaceholder;\n  }\n\n  ngOnInit() {\n    this.userDefinedFormat = this.format ? !this.format.match(/^(DD\\/MM\\/YYYY|MM\\/DD\\/YYYY)$/g) : false;\n    // if (!this.userDefinedFormat && this.textMaskEnabled && !this.allowInvalidDate) {\n    //   this.maskOptions = this.maskOptions || {\n    //     mask: this.dateFormatService.getDateMask(),\n    //     pipe: createAutoCorrectedDatePipe(this.format || this.labels.dateFormatString().toLowerCase()),\n    //     keepCharPositions: false,\n    //     guide: true,\n    //   };\n    // } else {\n    //   this.maskOptions = { mask: false };\n    // }\n  }\n\n  formatter(value) {\n    const [dateTimeValue, formatted] = this.dateFormatService.parseString(value, false, 'date');\n    return formatted;\n  }\n\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(): void {\n    if (!this.disabled) {\n      this.panelOpen ? this.overlay.closePanel() : this.overlay.openPanel();\n    }\n  }\n  closePanel(): void {\n    this.overlay && this.overlay.closePanel();\n  }\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n  /** END: Convenient Panel Methods. */\n\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.key === Key.Escape || event.key === Key.Enter || event.key === Key.Tab) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n\n  _handleBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n  }\n\n  _handleFocus(event: FocusEvent): void {\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n\n  remove(event: any, date: Date) {\n    const current = new Set(this.value);\n    if (current.has(date)) {\n      current.delete(date);\n    }\n    this.value = [...current];\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  private _setFormValue(value: Date[]): void {\n    if (this.value) {\n      // this.formattedStartDate = this.formatDateValue(this.value.startDate);\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  public setValueAndClose(event: Date[] = []): void {\n    if (event) {\n      this.value = event;\n      this.change.emit(this.value);\n    }\n    // this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearValue() {\n    this.value = [];\n    this.change.emit(this.value);\n  }\n\n  public get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// Vendor\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NovoPipesModule } from '../../pipes/Pipes.module';\n// APP\nimport { NovoButtonModule } from '../button';\nimport { NovoCalendarModule } from '../calendar/Calendar.module';\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoChipsModule } from './../chips/Chips.module';\nimport { NovoDatePickerElement } from './DatePicker';\nimport { NovoDatePickerInputElement } from './DatePickerInput';\nimport { NovoDateRangeInputElement } from './DateRangeInput';\nimport { NovoMultiDateInputElement } from './MultiDateInput';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NovoButtonModule,\n    NovoPipesModule,\n    NovoOverlayModule,\n    TextMaskModule,\n    NovoIconModule,\n    NovoChipsModule,\n    NovoCalendarModule,\n  ],\n  declarations: [NovoDatePickerElement, NovoDatePickerInputElement, NovoDateRangeInputElement, NovoMultiDateInputElement],\n  exports: [NovoDatePickerElement, NovoDatePickerInputElement, NovoDateRangeInputElement, NovoMultiDateInputElement],\n})\nexport class NovoDatePickerModule {}\n","// NG2\nimport { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'novo-box',\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoBoxElement {\n  @HostBinding('style.display')\n  get display(): string {\n    return 'block';\n  }\n\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'row';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'center';\n\n  @HostBinding('style.justify-content')\n  @Input()\n  justify: string = 'flex-start';\n\n  @HostBinding('style.flex-wrap')\n  @Input()\n  wrap: string = 'nowrap';\n\n  @HostBinding('style.gap')\n  @Input()\n  gap: string;\n\n  // get hb_gridCols() {\n  //   return this._sanitizer.bypassSecurityTrustStyle(`repeat(${this.columns}, ${ResourceSettings.eventWidth})`);\n  // }\n}\n","// NG2\nimport { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'novo-flex,novo-row',\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoFlexElement {\n  @HostBinding('style.display')\n  get display(): string {\n    return 'flex';\n  }\n\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'row';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'center';\n\n  @HostBinding('style.justify-content')\n  @Input()\n  justify: string = 'flex-start';\n\n  @HostBinding('style.flex-wrap')\n  @Input()\n  wrap: string = 'nowrap';\n\n  @HostBinding('style.gap')\n  @Input()\n  gap: string;\n\n  // get hb_gridCols() {\n  //   return this._sanitizer.bypassSecurityTrustStyle(`repeat(${this.columns}, ${ResourceSettings.eventWidth})`);\n  // }\n}\n\n@Component({\n  selector: 'novo-stack,novo-column',\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoStackElement extends NovoFlexElement {\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'column';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'start';\n}\n","// NG2\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { Component, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'novo-grid',\n  template: ` <ng-content></ng-content> `,\n})\nexport class NovoGridElement {\n  @HostBinding('style.display')\n  get display(): string {\n    return 'grid';\n  }\n\n  @HostBinding('style.flex-direction')\n  @Input()\n  direction: string = 'row';\n\n  @HostBinding('style.align-items')\n  @Input()\n  align: string = 'start';\n\n  @HostBinding('style.justify-content')\n  @Input()\n  justify: string = 'flex-start';\n\n  @Input()\n  columns: string = '1';\n\n  @HostBinding('style.grid-template-columns')\n  get hb_gridCols() {\n    if (_isNumberValue(this.columns)) {\n      return this._sanitizer.bypassSecurityTrustStyle(`repeat(${this.columns}, 1fr)`);\n    }\n    return this._sanitizer.bypassSecurityTrustStyle(`${this.columns}`);\n  }\n\n  constructor(private _sanitizer: DomSanitizer) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoBoxElement } from './Box';\nimport { NovoFlexElement, NovoStackElement } from './Flex';\nimport { NovoGridElement } from './Grid';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoFlexElement, NovoStackElement, NovoGridElement, NovoBoxElement],\n  exports: [NovoFlexElement, NovoStackElement, NovoGridElement, NovoBoxElement],\n})\nexport class NovoFlexModule {}\n","// NG2\nimport { EventEmitter, Injectable } from '@angular/core';\n// Vendor\nimport * as dragulaImported from '@bullhorn/dragula';\nconst dragula = dragulaImported;\n\n@Injectable()\nexport class NovoDragulaService {\n  cancel: EventEmitter<any> = new EventEmitter();\n  cloned: EventEmitter<any> = new EventEmitter();\n  drag: EventEmitter<any> = new EventEmitter();\n  dragend: EventEmitter<any> = new EventEmitter();\n  drop: EventEmitter<any> = new EventEmitter();\n  out: EventEmitter<any> = new EventEmitter();\n  over: EventEmitter<any> = new EventEmitter();\n  remove: EventEmitter<any> = new EventEmitter();\n  shadow: EventEmitter<any> = new EventEmitter();\n  dropModel: EventEmitter<any> = new EventEmitter();\n  removeModel: EventEmitter<any> = new EventEmitter();\n  events: Array<string> = ['cancel', 'cloned', 'drag', 'dragend', 'drop', 'out', 'over', 'remove', 'shadow', 'dropModel', 'removeModel'];\n  bags: Array<any> = [];\n\n  add(name, drake) {\n    let bag = this.find(name);\n    if (bag) {\n      throw new Error(`Bag named: ${name} already exists.`);\n    }\n    bag = {\n      name,\n      drake,\n    };\n    this.bags.push(bag);\n    if (drake.models) {\n      // models to sync with (must have same structure as containers)\n      this.handleModels(name, drake);\n    }\n    if (!bag.initEvents) {\n      this.setupEvents(bag);\n    }\n    return bag;\n  }\n\n  find(name) {\n    for (let i = 0; i < this.bags.length; i++) {\n      if (this.bags[i].name === name) {\n        return this.bags[i];\n      }\n    }\n    return null;\n  }\n\n  destroy(name) {\n    const bag = this.find(name);\n    const i = this.bags.indexOf(bag);\n    this.bags.splice(i, 1);\n    bag.drake.destroy();\n  }\n\n  setOptions(name, options) {\n    const bag = this.add(name, dragula(options));\n    this.handleModels(name, bag.drake);\n  }\n\n  handleModels(name, drake) {\n    let dragElm;\n    let dragIndex;\n    let dropIndex;\n    let sourceModel;\n    drake.on('remove', (el, source) => {\n      if (!drake.models) {\n        return;\n      }\n      sourceModel = drake.models[drake.containers.indexOf(source)];\n      sourceModel.splice(dragIndex, 1);\n      this.removeModel.emit([name, el, source]);\n    });\n    drake.on('drag', (el, source) => {\n      dragElm = el;\n      dragIndex = this.domIndexOf(el, source);\n    });\n    drake.on('drop', (dropElm, target, source) => {\n      if (!drake.models) {\n        return;\n      }\n      dropIndex = this.domIndexOf(dropElm, target);\n      sourceModel = drake.models[drake.containers.indexOf(source)];\n      if (target === source) {\n        sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n      } else {\n        const notCopy = dragElm === dropElm;\n        const targetModel = drake.models[drake.containers.indexOf(target)];\n        const dropElmModel = notCopy ? sourceModel[dragIndex] : JSON.parse(JSON.stringify(sourceModel[dragIndex]));\n\n        if (notCopy) {\n          sourceModel.splice(dragIndex, 1);\n        }\n        targetModel.splice(dropIndex, 0, dropElmModel);\n        target.removeChild(dropElm); // element must be removed for ngFor to apply correctly\n      }\n      this.dropModel.emit([name, dropElm, target, source]);\n    });\n  }\n\n  setupEvents(bag) {\n    bag.initEvents = true;\n    const that = this;\n    const emitter = (type) => {\n      function replicate() {\n        const args = Array.prototype.slice.call(arguments);\n        that[type].emit([bag.name].concat(args));\n      }\n\n      bag.drake.on(type, replicate);\n    };\n    this.events.forEach(emitter);\n  }\n\n  domIndexOf(child, parent) {\n    return Array.prototype.indexOf.call(parent.children, child);\n  }\n}\n","// NG2\nimport { Directive, ElementRef, Input, OnChanges, OnInit } from '@angular/core';\n// Vendor\nimport * as dragulaImported from '@bullhorn/dragula';\n// APP\nimport { NovoDragulaService } from './DragulaService';\nconst dragula = dragulaImported;\n\n@Directive({\n  selector: '[dragula]',\n})\nexport class NovoDragulaElement implements OnInit, OnChanges {\n  @Input('dragula')\n  bag: any;\n  @Input()\n  dragulaModel: any;\n  drake: any = null;\n  container: any;\n\n  constructor(element: ElementRef, private dragulaService: NovoDragulaService) {\n    this.container = element.nativeElement;\n  }\n\n  ngOnInit() {\n    const bag = this.dragulaService.find(this.bag);\n\n    if (bag) {\n      this.drake = bag.drake;\n      this.checkModel();\n      this.drake.containers.push(this.container);\n    } else {\n      this.drake = dragula({\n        containers: [this.container],\n      });\n      this.checkModel();\n      this.dragulaService.add(this.bag, this.drake);\n    }\n  }\n\n  checkModel() {\n    if (this.dragulaModel) {\n      if (this.drake.models) {\n        this.drake.models.push(this.dragulaModel);\n      } else {\n        this.drake.models = [this.dragulaModel];\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes && changes.dragulaModel) {\n      if (this.drake) {\n        if (this.drake.models) {\n          const modelIndex = this.drake.models.indexOf(changes.dragulaModel.previousValue);\n          this.drake.models.splice(modelIndex, 1, changes.dragulaModel.currentValue);\n        } else {\n          this.drake.models = [changes.dragulaModel.currentValue];\n        }\n      }\n    }\n  }\n}\n","// NG2\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoDragulaElement } from './Dragula';\n\n@NgModule({\n  declarations: [NovoDragulaElement],\n  exports: [NovoDragulaElement],\n})\nexport class NovoDragulaModule {}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'novo-divider',\n  host: {\n    role: 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.novo-divider-vertical]': 'vertical',\n    '[class.novo-divider-horizontal]': '!vertical',\n    '[class.novo-divider-inset]': 'inset',\n    class: 'novo-divider',\n  },\n  template: '',\n  styleUrls: ['./divider.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDividerComponent {\n  /** Whether the divider is vertically aligned. */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input()\n  get inset(): boolean {\n    return this._inset;\n  }\n  set inset(value: boolean) {\n    this._inset = coerceBooleanProperty(value);\n  }\n  private _inset: boolean = false;\n\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_inset: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { NovoDividerComponent } from './divider.component';\n\n@NgModule({\n  imports: [],\n  exports: [NovoDividerComponent],\n  declarations: [NovoDividerComponent],\n})\nexport class NovoDividerModule {}\n","// NG\nimport { ActiveDescendantKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\n// Vendor\nimport { merge, Observable, of, Subject, Subscription } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n// App\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers, Key } from '../../utils';\nimport {\n  CanDisableCtor,\n  CanRequireCtor,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  HasOverlayCtor,\n  HasTabIndexCtor,\n  mixinDisabled,\n  mixinErrorState,\n  mixinOverlay,\n  mixinRequired,\n  mixinTabIndex,\n  NovoOptgroup,\n  NovoOption,\n  NovoOptionSelectionChange,\n  NOVO_OPTION_PARENT_COMPONENT,\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n} from '../common';\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\nimport { NovoFieldControl } from '../field';\n\n// Value accessor for the component (supports ngModel)\n// const SELECT_VALUE_ACCESSOR = {\n//   provide: NG_VALUE_ACCESSOR,\n//   useExisting: forwardRef(() => NovoSelectElement),\n//   multi: true,\n// };\n\n/** Change event object that is emitted when the select value has changed. */\nexport class NovoSelectChange {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: NovoSelectElement,\n    /** Current value of the select that emitted the event. */\n    public value: any,\n  ) {}\n}\n\n// Create Base Class from Mixins\n// Boilerplate for applying mixins\nclass NovoSelectBase {\n  constructor(\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    public _parentForm: NgForm,\n    public _parentFormGroup: FormGroupDirective,\n    public ngControl: NgControl,\n  ) {}\n}\nconst NovoSelectMixins: HasOverlayCtor &\n  CanRequireCtor &\n  CanDisableCtor &\n  HasTabIndexCtor &\n  CanUpdateErrorStateCtor &\n  typeof NovoSelectBase = mixinOverlay(mixinTabIndex(mixinRequired(mixinDisabled(mixinErrorState(NovoSelectBase)))));\n\nlet nextId = 0;\n\n@Component({\n  selector: 'novo-select',\n  inputs: ['disabled', 'required', 'tabIndex'],\n  providers: [\n    { provide: NovoFieldControl, useExisting: NovoSelectElement },\n    { provide: NOVO_OPTION_PARENT_COMPONENT, useExisting: NovoSelectElement },\n  ],\n  template: `\n    <div class=\"novo-select-trigger\" #dropdownElement (click)=\"togglePanel(); (false)\" tabIndex=\"{{ disabled ? -1 : 0 }}\" type=\"button\">\n      <span class=\"novo-select-placeholder\" *ngIf=\"empty\">{{ placeholder }}</span>\n      <span class=\"novo-select-display-value\" *ngIf=\"!empty\">{{ displayValue }}</span>\n      <i class=\"bhi-collapse\"></i>\n    </div>\n    <novo-overlay-template\n      [parent]=\"elementRef\"\n      [position]=\"position\"\n      [width]=\"overlayWidth\"\n      [height]=\"overlayHeight\"\n      (closing)=\"dropdown.nativeElement.focus()\"\n    >\n      <div #panel class=\"novo-select-list\" tabIndex=\"-1\" [class.has-header]=\"headerConfig\" [class.active]=\"panelOpen\">\n        <novo-option *ngIf=\"headerConfig\" class=\"select-header\" [class.open]=\"header.open\">\n          <novo-button *ngIf=\"!header.open\" icon=\"add-thin\" (click)=\"toggleHeader($event); (false)\" tabIndex=\"-1\" class=\"header\">\n            {{ headerConfig.label }}\n          </novo-button>\n          <div *ngIf=\"header.open\" [ngClass]=\"{ active: header.open }\">\n            <input\n              autofocus\n              type=\"text\"\n              [placeholder]=\"headerConfig.placeholder\"\n              [attr.id]=\"name\"\n              autocomplete=\"off\"\n              [value]=\"header.value\"\n              [ngClass]=\"{ invalid: !header.valid }\"\n            />\n            <footer>\n              <novo-button (click)=\"toggleHeader($event, false)\">{{ labels.cancel }}</novo-button>\n              <novo-button (click)=\"saveHeader()\" class=\"primary\">{{ labels.save }}</novo-button>\n            </footer>\n          </div>\n        </novo-option>\n        <!-- Declarative Content Goes Here -->\n        <ng-content></ng-content>\n        <!-- Data Driven Content Goes Here -->\n        <ng-container *ngFor=\"let option of filteredOptions; let i = index\">\n          <novo-option\n            *ngIf=\"!option.divider; else divider\"\n            class=\"select-item\"\n            [disabled]=\"option.disabled\"\n            [class.active]=\"option.active\"\n            [attr.data-automation-value]=\"option.label\"\n            [value]=\"option.value\"\n            [tooltip]=\"option.tooltip\"\n            [tooltipPosition]=\"option.tooltipPosition || 'right'\"\n          >\n            <span [innerHtml]=\"highlight(option.label, filterTerm)\"></span> <i *ngIf=\"option.active\" class=\"bhi-check\"></i>\n          </novo-option>\n          <ng-template #divider>\n            <novo-divider class=\"select-item-divider\" [class.with-label]=\"option.label\" [class.without-label]=\"!option.label\">\n              {{ option?.label }}\n            </novo-divider>\n          </ng-template>\n        </ng-container>\n      </div>\n    </novo-overlay-template>\n  `,\n  host: {\n    class: 'novo-select',\n    role: 'combobox',\n    'aria-autocomplete': 'none',\n    'aria-haspopup': 'true',\n    '[attr.id]': 'id',\n    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n    '[class.novo-select-disabled]': 'disabled',\n    '[class.novo-select-invalid]': 'errorState',\n    '[class.novo-select-required]': 'required',\n    '[class.novo-select-empty]': 'empty',\n    '[class.novo-select-multiple]': 'multiple',\n  },\n})\nexport class NovoSelectElement\n  extends NovoSelectMixins\n  implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor, NovoFieldControl<any>\n{\n  private _uniqueId: string = `novo-select-${++nextId}`;\n  private _stateChanges = Subscription.EMPTY;\n  private _activeOptionChanges = Subscription.EMPTY;\n  private _selectedOptionChanges = Subscription.EMPTY;\n  protected readonly _destroy = new Subject<void>();\n\n  readonly controlType: string = 'select';\n\n  /** @docs-private Implemented as part of NovoFieldControl. */\n  lastKeyValue: string = null;\n  /** @docs-private Implemented as part of NovoFieldControl.*/\n  lastCaretPosition: number | null;\n\n  _selectionModel: SelectionModel<NovoOption>;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n  /** User defined tab index. */\n  _userTabIndex: number | null = null;\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: ActiveDescendantKeyManager<NovoOption>;\n\n  @Input()\n  id: string = this._uniqueId;\n  @Input()\n  name: string = this._uniqueId;\n  @Input()\n  options: Array<any>;\n  @Input()\n  placeholder: string = 'Select...';\n  @Input()\n  readonly: boolean;\n  @Input()\n  headerConfig: any;\n  @Input()\n  position: string = 'above-below';\n  @Input()\n  overlayWidth: number;\n  @Input()\n  overlayHeight: number;\n  @Output()\n  onSelect: EventEmitter<any> = new EventEmitter();\n  /** Event emitted when the selected value has been changed by the user. */\n  @Output() readonly selectionChange: EventEmitter<NovoSelectChange> = new EventEmitter<NovoSelectChange>();\n  /** Event that emits whenever the raw value of the select changes.*/\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> = this.openedChange.pipe(\n    filter((o) => o),\n    map(() => {}),\n  );\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> = this.openedChange.pipe(\n    filter((o) => !o),\n    map(() => {}),\n  );\n\n  /** Function that maps an option's control value to its display value in the trigger. */\n  @Input() displayWith: ((value: any) => string) | null = null;\n  /** * Function to compare the option values with the selected values. */\n  @Input() compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) =>\n    o1 === o2 || o1 === o2.id || (!Helpers.isEmpty(o1.id) && !Helpers.isEmpty(o2.id) && o1.id === o2.id);\n\n  header: any = {\n    open: false,\n    valid: true,\n    value: '',\n  };\n  createdItem: any;\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n  filterTerm: string = '';\n  filterTermTimeout;\n  filteredOptions: any;\n  disabled: boolean = false;\n\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent, { static: true })\n  overlay: NovoOverlayTemplateComponent;\n  @ViewChild('dropdownElement', { static: true })\n  dropdown: ElementRef;\n\n  @ContentChildren(NovoOptgroup, { descendants: true })\n  optionGroups: QueryList<NovoOptgroup>;\n  @ContentChildren(NovoOption, { descendants: true })\n  contentOptions: QueryList<NovoOption>;\n  @ViewChildren(NovoOption)\n  viewOptions: QueryList<NovoOption>;\n\n  @ViewChild('panel')\n  panel: ElementRef;\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(newValue: any) {\n    // Always re-assign an array, because it might have been mutated.\n    if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n      if (this.options) {\n        this._setSelectionByValue(newValue);\n      }\n      this._value = newValue;\n    }\n  }\n  private _value: any = null;\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean {\n    return this._multiple;\n  }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this.position = 'above-below';\n  }\n  private _multiple: boolean = false;\n\n  /** Whether the select is focused. */\n  get focused(): boolean {\n    return this._focused || this.panelOpen;\n  }\n  private _focused = false;\n\n  /** Implemented as part of NovoFieldControl. */\n  get empty(): boolean {\n    return this._value === null;\n  }\n\n  /** The currently selected option. */\n  get selected(): NovoOption | NovoOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The value displayed in the trigger. */\n  get displayValue(): string {\n    if (this.empty) {\n      return '';\n    }\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map((option) => this._getDisplayValue(option));\n      return selectedOptions.join(', ');\n    }\n    return this._getDisplayValue(this._selectionModel.selected[0]);\n  }\n\n  constructor(\n    public elementRef: ElementRef,\n    public labels: NovoLabelService,\n    public ref: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    private ngZone: NgZone,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional() @Self() ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n  ) {\n    super(defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n    this._selectionModel = new SelectionModel<NovoOption>(this.multiple);\n  }\n\n  ngOnInit() {\n    this.stateChanges.next();\n    this._initLegacyOptions();\n    this.focusMonitor.monitor(this.dropdown.nativeElement).subscribe((origin) =>\n      this.ngZone.run(() => {\n        if (origin === 'keyboard' && !this.disabled) {\n          this.openPanel();\n        }\n        this._focused = !!origin;\n        this.stateChanges.next();\n      }),\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes?.disabled) {\n      this.stateChanges.next();\n    }\n    if (changes?.multiple) {\n      // TODO: copy selection over??\n      this._selectionModel = new SelectionModel<NovoOption>(this.multiple);\n    }\n    this._initLegacyOptions();\n  }\n\n  ngAfterViewInit() {\n    // Initialize KeyManager to manage keyboard events\n    this._initKeyManager();\n    // Subscribe to NovoOption selections\n    this._watchSelectionEvents();\n    // Set initial value\n    this._initializeSelection();\n    // Listen to selection changes to select and deselect options\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((event) => {\n      event.added.forEach((option) => {\n        if (option.select) {\n          option.select();\n        }\n      });\n      event.removed.forEach((option) => {\n        if (option.deselect) {\n          option.deselect();\n        }\n      });\n    });\n    // Listen to QueryList changes\n    merge(this.contentOptions.changes, this.viewOptions.changes)\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        this._watchSelectionEvents();\n        this._initializeSelection();\n      });\n\n    merge(this.overlay.opening, this.overlay.closing)\n      .pipe(takeUntil(this._destroy))\n      .subscribe(() => {\n        this.openedChange.emit(this.panelOpen);\n      });\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._stateChanges.unsubscribe();\n    this._activeOptionChanges.unsubscribe();\n    this._selectedOptionChanges.unsubscribe();\n    this.focusMonitor.stopMonitoring(this.dropdown.nativeElement);\n  }\n\n  openPanel() {\n    super.openPanel();\n    this._highlightCorrectOption();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n      this.stateChanges.next();\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    this._selectionModel.selected.forEach((option) => {\n      if (option.setInactiveStyles) {\n        option.setInactiveStyles();\n      }\n    });\n    this._selectionModel.clear();\n    if (this.multiple && value) {\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else if (this._keyManager) {\n      const correspondingOption = this._selectValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.updateActiveItem(correspondingOption);\n      } else if (!this.panelOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManager.updateActiveItem(-1);\n      }\n    }\n    this.ref.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): NovoOption | undefined {\n    const allOptions = this._getOptions();\n    const correspondingOption = allOptions.find((option: NovoOption) => {\n      // Skip options that are already in the model. This allows us to handle cases\n      // where the same primitive value is selected multiple times.\n      if (this._selectionModel.isSelected(option)) {\n        return false;\n      }\n      return !Helpers.isEmpty(value) && !Helpers.isEmpty(option.value) && this.compareWith(option.value, value);\n    });\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    } else if (value && !correspondingOption) {\n      // Double Check option not already added.\n      const legacyOption = this.filteredOptions.find((it) => it.value === value);\n      if (!legacyOption) {\n        // Add a disabled option to the list and select it\n        this.filteredOptions.push({\n          disabled: true,\n          tooltip: 'Value is not provided in list of valid options.',\n          label: value?.label || value,\n          value,\n        });\n        this.ref.detectChanges();\n      }\n    }\n\n    return correspondingOption;\n  }\n\n  public select(option, i, fireEvents: boolean = true) {\n    console.warn('select() method is deprecated');\n  }\n  public clear() {\n    console.warn('clear() method is deprecated');\n  }\n\n  /**\n   * If the item is not disabled, this method closes the panel, and if a value is specified,\n   * also sets the associated control to that value. It will also mark the control as dirty\n   * if this interaction stemmed from the user.\n   */\n  handleSelection(option: NovoOption, isUserInput: boolean = false): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n    if (option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n      if (this.value != null) {\n        this._propagateChanges(option.value);\n      }\n    } else {\n      if (wasSelected !== option.selected) {\n        option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n      }\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n      if (this.multiple) {\n        this._sortValues();\n        if (isUserInput) {\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n    this.stateChanges.next();\n    this._watchSelectionEvents();\n  }\n\n  private _getDisplayValue(option: NovoOption & { value?: any; label?: string }): string {\n    if (!option) {\n      return '';\n    }\n    let toDisplay = option.viewValue;\n    if (this.displayWith) {\n      toDisplay = this.displayWith(option.value);\n    }\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const displayValue = toDisplay != null ? toDisplay : '';\n    return displayValue;\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: NovoOption) {\n    this._getOptions().forEach((option) => {\n      if (option !== skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _watchSelectionEvents() {\n    const options = this._getOptions();\n    const selectionEvents = options ? merge(...options.map((option) => option.onSelectionChange)) : of();\n    this._selectedOptionChanges.unsubscribe();\n    this._selectedOptionChanges = selectionEvents.pipe(take(1)).subscribe((event: NovoOptionSelectionChange) => {\n      this.onModelTouched();\n      this.handleSelection(event.source, event.isUserInput);\n      if (event.isUserInput && !this.multiple && this.panelOpen) {\n        this.closePanel();\n        this.focus();\n      }\n    });\n  }\n\n  /** Handles all keydown events on the select. */\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n\n  /** Handles keyboard events while the select is closed. */\n  private _handleClosedKeydown(event: KeyboardEvent): void {\n    const key = event.key;\n    const isArrowKey = key === Key.ArrowDown || key === Key.ArrowUp || key === Key.ArrowLeft || key === Key.ArrowRight;\n    const isOpenKey = key === Key.Enter || key === Key.Space;\n    const manager = this._keyManager;\n    // Open the select on ALT + arrow key to match the native <select>\n    if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.openPanel();\n    }\n    // Allow changing value with arrow keys.\n    // else if (!this.multiple) {\n    //   const previouslySelectedOption = this.selected;\n    //   manager.onKeydown(event);\n    //   const selectedOption = this.selected;\n    // }\n  }\n\n  /** Handles keyboard events when the selected is open. */\n  private _handleOpenKeydown(event: KeyboardEvent): void {\n    const manager = this._keyManager;\n    const key = event.key;\n    const isArrowKey = key === Key.ArrowDown || key === Key.ArrowUp;\n    const isTyping = manager.isTyping();\n\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.closePanel();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (key === Key.Enter || key === Key.Space) && manager.activeItem && !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (!isTyping && this._multiple && ['a', 'A'].includes(key) && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some((opt) => !opt.disabled && !opt.selected);\n      this.options.forEach((option) => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else if (Key.Escape === key) {\n      this.closePanel();\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  onContainerClick(event: MouseEvent) {\n    this.focus();\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (!this.disabled) {\n      this.dropdown.nativeElement.focus(options);\n    }\n  }\n\n  protected _getOptions() {\n    return [...(this.viewOptions || []), ...(this.contentOptions || [])];\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.multiple) {\n      // TODO.\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n    if (this.multiple) {\n      valueToEmit = (this.selected as NovoOption[]).map((option) => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as NovoOption).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this.onModelChange(valueToEmit);\n    this.onSelect.emit({ selected: valueToEmit });\n    this.selectionChange.emit(this._makeChangeEvent(valueToEmit));\n    this.ref.markForCheck();\n  }\n\n  protected _makeChangeEvent(value: any) {\n    return new NovoSelectChange(this, value);\n  }\n\n  /** Scrolls the active option into view. */\n  protected _scrollOptionIntoView(index: number): void {\n    const options = new QueryList<NovoOption>();\n    options.reset(this._getOptions());\n    const labelCount = _countGroupLabelsBeforeOption(index, options, this.optionGroups);\n    const itemHeight = this._getItemHeight();\n    this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n      (index + labelCount) * itemHeight,\n      itemHeight,\n      this.panel.nativeElement.scrollTop,\n      this.panel.nativeElement.offsetHeight,\n    );\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<NovoOption>(this._getOptions()).withTypeAhead(250).withHomeAndEnd();\n    // .withAllowedModifierKeys(['shiftKey']);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        // Select the active item when tabbing away. This is consistent with how the native\n        // select behaves. Note that we only want to do this in single selection mode.\n        if (!this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.closePanel();\n      }\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen && this.overlay) {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n      } else if (!this.panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._value);\n      }\n    }\n  }\n\n  /** Calculates the height of the select's options. */\n  private _getItemHeight(): number {\n    let [first] = this._getOptions();\n    if (first) {\n      return first._getHostElement().offsetHeight;\n    }\n    return 0;\n  }\n\n  // TODO: Deprecate this\n  private _initLegacyOptions() {\n    if (this.options && this.options.length && typeof this.options[0] === 'string') {\n      this.filteredOptions = this.options.map((item) => {\n        return { value: item, label: item };\n      });\n    } else {\n      this.filteredOptions = (this.options || [])\n        .map((item) => {\n          return {\n            ...item,\n            disabled: item.readOnly || item.disabled,\n          };\n        })\n        .map((item) => {\n          return {\n            ...item,\n            active: false,\n          };\n        });\n    }\n  }\n\n  /**\n   * TODO: Deprecate all header methods\n   */\n  toggleHeader(event, forceValue: boolean = false) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    // Reverse the active property (if forceValue, use that)\n    this.header = {\n      open: forceValue !== undefined ? forceValue : !this.header.open,\n      value: '',\n      valid: true,\n    };\n  }\n\n  highlight(match, query) {\n    // Replaces the capture string with a the same string inside of a \"strong\" tag\n    return query ? match.replace(new RegExp(this.escapeRegexp(query), 'gi'), '<strong>$&</strong>') : match;\n  }\n\n  escapeRegexp(queryToEscape) {\n    // Ex: if the capture is \"a\" the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  saveHeader() {\n    if (this.header.value) {\n      this.headerConfig.onSave(this.header.value);\n      this.createdItem = this.header.value;\n      this.closePanel();\n    } else {\n      this.header.valid = false;\n    }\n  }\n\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n}\n","// NG\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// App\nimport { NovoButtonModule } from '../button';\nimport { NovoOptionModule } from '../common';\nimport { NovoOverlayModule } from '../common/overlay';\nimport { NovoDividerModule } from '../divider';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { NovoSelectElement } from './Select';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    FormsModule,\n    NovoButtonModule,\n    NovoDividerModule,\n    NovoOptionModule,\n    NovoOverlayModule,\n    NovoTooltipModule,\n  ],\n  declarations: [NovoSelectElement],\n  exports: [NovoSelectElement],\n})\nexport class NovoSelectModule {}\n","// NG2\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { COUNTRIES, findByCountryId, getStates } from '../../../../utils/countries/Countries';\nimport { Helpers } from '../../../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst ADDRESS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoAddressElement),\n  multi: true,\n};\n\nexport interface NovoAddressSubfieldConfig {\n  label: string;\n  required: boolean;\n  maxlength: number;\n  pickerConfig?: any;\n  hidden: boolean;\n  updated?: boolean;\n  readOnly?: boolean;\n}\n\nexport interface NovoAddressConfig {\n  required?: boolean;\n  readOnly?: boolean;\n  address1?: NovoAddressSubfieldConfig;\n  address2?: NovoAddressSubfieldConfig;\n  city?: NovoAddressSubfieldConfig;\n  state?: NovoAddressSubfieldConfig;\n  zip?: NovoAddressSubfieldConfig;\n  countryID?: NovoAddressSubfieldConfig;\n}\n\n@Component({\n  selector: 'novo-address',\n  providers: [ADDRESS_VALUE_ACCESSOR],\n  template: `\n    <span\n      *ngIf=\"!config?.address1?.hidden\"\n      class=\"street-address\"\n      [class.invalid]=\"invalid.address1\"\n      [class.focus]=\"focused.address1\"\n      [class.disabled]=\"disabled.address1\"\n    >\n      <i\n        *ngIf=\"config.address1.required\"\n        class=\"required-indicator address1\"\n        [ngClass]=\"{ 'bhi-circle': !valid.address1, 'bhi-check': valid.address1 }\"\n      >\n      </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.address1\"\n        type=\"text\"\n        id=\"address1\"\n        name=\"address1\"\n        [placeholder]=\"config.address1.label\"\n        [maxlength]=\"config?.address1?.maxlength\"\n        autocomplete=\"shipping street-address address-line-1\"\n        [(ngModel)]=\"model.address1\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'address1')\"\n        (blur)=\"isBlurred($event, 'address1')\"\n        (input)=\"onInput($event, 'address1')\"\n        [disabled]=\"disabled.address1\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.address2?.hidden\"\n      class=\"apt suite\"\n      [class.invalid]=\"invalid.address2\"\n      [class.focus]=\"focused.address2\"\n      [class.disabled]=\"disabled.address2\"\n    >\n      <i\n        *ngIf=\"config.address2.required\"\n        class=\"required-indicator address2\"\n        [ngClass]=\"{ 'bhi-circle': !valid.address2, 'bhi-check': valid.address2 }\"\n      >\n      </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.address2\"\n        type=\"text\"\n        id=\"address2\"\n        name=\"address2\"\n        [placeholder]=\"config.address2.label\"\n        [maxlength]=\"config?.address2?.maxlength\"\n        autocomplete=\"shipping address-line-2\"\n        [(ngModel)]=\"model.address2\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'address2')\"\n        (blur)=\"isBlurred($event, 'address2')\"\n        (input)=\"onInput($event, 'address2')\"\n        [disabled]=\"disabled.address2\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.city?.hidden\"\n      class=\"city locality\"\n      [class.invalid]=\"invalid.city\"\n      [class.focus]=\"focused.city\"\n      [class.disabled]=\"disabled.city\"\n    >\n      <i *ngIf=\"config.city.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.city, 'bhi-check': valid.city }\"> </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.city\"\n        type=\"text\"\n        id=\"city\"\n        name=\"city\"\n        [placeholder]=\"config.city.label\"\n        autocomplete=\"shipping city locality\"\n        [maxlength]=\"config?.city?.maxlength\"\n        [(ngModel)]=\"model.city\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'city')\"\n        (blur)=\"isBlurred($event, 'city')\"\n        (input)=\"onInput($event, 'city')\"\n        [disabled]=\"disabled.city\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.state?.hidden\"\n      class=\"state region\"\n      [class.invalid]=\"invalid.state\"\n      [class.focus]=\"focused.state\"\n      [class.disabled]=\"disabled.state\"\n      [tooltip]=\"tooltip.state\"\n    >\n      <i *ngIf=\"config.state.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.state, 'bhi-check': valid.state }\"> </i>\n      <novo-picker\n        [config]=\"config?.state?.pickerConfig\"\n        [placeholder]=\"config?.state?.label\"\n        (changed)=\"onStateChange($event)\"\n        autocomplete=\"shipping region\"\n        [(ngModel)]=\"model.state\"\n        [disablePickerInput]=\"disabled.state\"\n      ></novo-picker>\n    </span>\n    <span\n      *ngIf=\"!config?.zip?.hidden\"\n      class=\"zip postal-code\"\n      [class.invalid]=\"invalid.zip\"\n      [class.focus]=\"focused.zip\"\n      [class.disabled]=\"disabled.zip\"\n    >\n      <i *ngIf=\"config.zip.required\" class=\"required-indicator\" [ngClass]=\"{ 'bhi-circle': !valid.zip, 'bhi-check': valid.zip }\"> </i>\n      <input\n        [class.maxlength-error]=\"invalidMaxlength.zip\"\n        type=\"text\"\n        id=\"zip\"\n        name=\"zip\"\n        [placeholder]=\"config.zip.label\"\n        autocomplete=\"shipping postal-code\"\n        [maxlength]=\"config?.zip?.maxlength\"\n        [(ngModel)]=\"model.zip\"\n        (ngModelChange)=\"updateControl()\"\n        (focus)=\"isFocused($event, 'zip')\"\n        (blur)=\"isBlurred($event, 'zip')\"\n        (input)=\"onInput($event, 'zip')\"\n        [disabled]=\"disabled.zip\"\n      />\n    </span>\n    <span\n      *ngIf=\"!config?.countryID?.hidden\"\n      class=\"country-name\"\n      [class.invalid]=\"invalid.countryID\"\n      [class.focus]=\"focused.countryID\"\n      [class.disabled]=\"disabled.countryID\"\n    >\n      <i\n        *ngIf=\"config.countryID.required\"\n        class=\"required-indicator\"\n        [ngClass]=\"{ 'bhi-circle': !valid.countryID, 'bhi-check': valid.countryID }\"\n      >\n      </i>\n      <novo-picker\n        [config]=\"config?.countryID?.pickerConfig\"\n        [placeholder]=\"config.countryID.label\"\n        (changed)=\"onCountryChange($event)\"\n        autocomplete=\"shipping country\"\n        [(ngModel)]=\"model.countryID\"\n        [disablePickerInput]=\"disabled.countryID\"\n      ></novo-picker>\n    </span>\n  `,\n})\nexport class NovoAddressElement implements ControlValueAccessor, OnInit {\n  @Input()\n  config: NovoAddressConfig;\n  private _readOnly = false;\n  @Input()\n  set readOnly(readOnly: boolean) {\n    this._readOnly = readOnly;\n    this.fieldList.forEach((field: string) => {\n      this.disabled[field] = this._readOnly;\n    });\n    if (this.model) {\n      this.updateStates();\n    }\n  }\n  get readOnly(): boolean {\n    return this._readOnly;\n  }\n  states: Array<any> = [];\n  fieldList: Array<string> = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n  focused: any = {};\n  invalid: any = {};\n  disabled: any = {};\n  invalidMaxlength: any = {};\n  valid: any = {};\n  stateOptions: any;\n  tooltip: any = {};\n  initComplete = false;\n  @Output()\n  change: EventEmitter<any> = new EventEmitter();\n  @Output()\n  focus: EventEmitter<any> = new EventEmitter();\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter();\n  @Output()\n  validityChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {\n    if (!this.config) {\n      this.config = {};\n    }\n    this.initConfig();\n    if (this.model) {\n      this.writeValue(this.model);\n      this.updateControl();\n    } else if (!this.model) {\n      this.model = {};\n    }\n    if (Helpers.isBlank(this.model.countryID)) {\n      this.updateStates();\n    }\n  }\n\n  initConfig(): void {\n    this.fieldList.forEach((field: string) => {\n      if (!this.config.hasOwnProperty(field)) {\n        this.config[field] = {\n          hidden: true,\n        };\n      }\n      if (!this.config[field].hasOwnProperty('label')) {\n        this.config[field].label = this.labels[field];\n      }\n      if (this.config.required) {\n        this.config[field].required = true;\n      }\n      if (this.config[field].readOnly || this.config.readOnly) {\n        this.config[field].readOnly = true;\n        this.disabled[field] = true;\n      }\n      if (field === 'countryID') {\n        if (!this.config[field].pickerConfig) {\n          this.config.countryID.pickerConfig = this.getDefaultCountryConfig();\n        }\n        this.config[field].pickerConfig.defaultOptions = this.config.countryID.pickerConfig.options;\n      }\n      if (field === 'state') {\n        if (!this.config[field].pickerConfig) {\n          this.config.state.pickerConfig = this.getDefaultStateConfig();\n          this.config[field].pickerConfig.defaultOptions = this.config[field].pickerConfig.options;\n        }\n        this.stateOptions = this.config[field].pickerConfig.options;\n        this.config[field].pickerConfig.options = (query = '') => {\n          return this.stateOptions(query, this.model.countryID);\n        };\n        this.config[field].pickerConfig.defaultOptions = this.stateOptions;\n      }\n    });\n  }\n\n  isValid(field: string): void {\n    let valid = true;\n    if (\n      ((this.config[field].required && (Helpers.isBlank(this.model[field]) || Helpers.isEmpty(this.model[field]))) ||\n        !this.config[field].required) &&\n      !(field === 'countryID' && this.config[field].required && !Helpers.isBlank(this.model.countryID)) &&\n      !(\n        field === 'state' &&\n        this.config[field].required &&\n        (!Helpers.isEmpty(this.model.state) ||\n          ((Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n            !Helpers.isBlank(this.model.countryName) &&\n            this.config.state.pickerConfig &&\n            this.config.state.pickerConfig.defaultOptions &&\n            this.config.state.pickerConfig.defaultOptions.length === 0))\n      )\n    ) {\n      valid = false;\n    } else if (\n      !Helpers.isEmpty(this.model[field]) &&\n      !Helpers.isBlank(this.config[field].maxlength) &&\n      this.config[field].maxlength < this.model[field].length\n    ) {\n      valid = false;\n    }\n    this.valid[field] = valid;\n  }\n\n  isInvalid(field: string): void {\n    let invalid = false;\n    let invalidMaxlength = false;\n    if (\n      (field !== 'countryID' &&\n        field !== 'state' &&\n        this.config[field]?.required &&\n        Helpers.isEmpty(this.model[field]) &&\n        !Helpers.isBlank(this.model[field])) ||\n      (field === 'countryID' && this.config[field]?.required && Helpers.isBlank(this.model.countryName) && this.config[field]?.updated) ||\n      (field === 'state' &&\n        this.config[field]?.required &&\n        (Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n        !Helpers.isBlank(this.model.countryID) &&\n        this.config[field]?.updated &&\n        this.config.state.pickerConfig &&\n        this.config.state.pickerConfig.defaultOptions &&\n        this.config.state.pickerConfig.defaultOptions.length > 0)\n    ) {\n      invalid = true;\n    } else if (\n      !Helpers.isEmpty(this.model[field]) &&\n      !Helpers.isBlank(this.config[field]?.maxlength) &&\n      this.config[field]?.maxlength < this.model[field].length\n    ) {\n      invalid = true;\n      invalidMaxlength = true;\n    }\n    this.invalid[field] = invalid;\n    this.invalidMaxlength[field] = invalidMaxlength;\n  }\n\n  onInput(event: Event, field: string): void {\n    this.isInvalid(field);\n    this.isValid(field);\n    if (event) {\n      this.change.emit({ value: this.model[field], field });\n    }\n  }\n\n  isFocused(event: Event, field: string): void {\n    this.focused[field] = true;\n    this.focus.emit({ event, field });\n  }\n\n  isBlurred(event: Event, field: string): void {\n    this.focused[field] = false;\n    this.blur.emit({ event, field });\n  }\n\n  onCountryChange(evt) {\n    const country: any = evt && evt.rawValue ? evt.rawValue : null;\n    let field: any;\n    let statesUpdatable = false;\n    this.config.countryID.updated = true;\n    if (this.config.countryID.pickerConfig) {\n      field = this.config.countryID.pickerConfig.field;\n    }\n    if (country && field && !Helpers.isBlank(country[field]) && this.model.countryID !== country[field]) {\n      this.model.countryID = country[field];\n      this.model.countryName = Helpers.interpolate(this.config.countryID.pickerConfig.format, country);\n      this.disabled.state = false;\n      this.tooltip.state = undefined;\n      statesUpdatable = true;\n    } else if (Helpers.isBlank(country) || Helpers.isBlank(country[field])) {\n      this.model.countryID = undefined;\n      this.model.countryName = undefined;\n      this.disabled.state = true;\n      this.tooltip.state = this.labels.selectCountryFirst;\n      this.invalid.state = false;\n      statesUpdatable = true;\n    }\n\n    // Update state\n    if (statesUpdatable) {\n      this.model.state = undefined;\n      this.updateStates();\n    }\n    this.updateControl();\n    this.onInput(null, 'countryID');\n    this.onInput(null, 'state');\n  }\n\n  onStateChange(evt) {\n    const state: any = evt && evt.value ? evt.value : null;\n    this.config.state.updated = true;\n    this.model.state = state;\n    this.updateControl();\n    this.onInput(null, 'state');\n  }\n\n  setStateLabel(model: any) {\n    const state: string = model.state;\n    if (!Helpers.isBlank(state)) {\n      if (this.config.state.required) {\n        this.valid.state = true;\n      }\n      this.model.state = state;\n    } else {\n      this.model.state = undefined;\n      if (this.config.state.required) {\n        this.valid.state = false;\n      }\n    }\n  }\n\n  updateStates() {\n    if (this.config.state.pickerConfig.options && !Helpers.isBlank(this.model.countryID)) {\n      this.config.state.pickerConfig.options = (query = '') => {\n        return this.stateOptions(query, this.model.countryID);\n      };\n      this.stateOptions('', this.model.countryID).then((results) => {\n        this.config.state.pickerConfig.defaultOptions = results;\n        if (results.length) {\n          this.tooltip.state = undefined;\n          this.disabled.state = this._readOnly;\n          this.setStateLabel(this.model);\n        } else {\n          this.disabled.state = true;\n          this.tooltip.state = this.labels.noStatesForCountry;\n          if (this.config.state.required) {\n            this.valid.state = true;\n          }\n        }\n        this.validityChange.emit();\n        this.onInput(null, 'state');\n      });\n    } else {\n      this.config.state.pickerConfig.defaultOptions = [];\n      this.disabled.state = true;\n      this.tooltip.state = this.labels.selectCountryFirst;\n      if (this.config.state.required) {\n        this.valid.state = false;\n      }\n    }\n  }\n\n  getStateOptions(filter = '', countryID: number) {\n    if (countryID) {\n      const country = findByCountryId(countryID);\n      const states = getStates(country.name);\n      if (filter) {\n        return states.filter((name) => new RegExp(`${filter}`, 'gi').test(name));\n      }\n      return states;\n    } else {\n      return [];\n    }\n  }\n\n  updateControl() {\n    this.onModelChange(this.model);\n    this.onInput(null, 'countryID');\n    this.onInput(null, 'state');\n  }\n\n  writeValue(model) {\n    let loadingCountries = false;\n    if (model) {\n      let countryName;\n      if (model.countryName && model.countryID) {\n        countryName = model.countryName;\n      } else if (model.countryID) {\n        if (this.config.countryID.pickerConfig && this.config.countryID.pickerConfig.getLabels) {\n          if (Helpers.isFunction(this.config.countryID.pickerConfig.getLabels)) {\n            const promise = this.config.countryID.pickerConfig.getLabels(model.countryID);\n            loadingCountries = true;\n            if (promise.then) {\n              promise.then((result) => {\n                loadingCountries = false;\n                countryName = Helpers.interpolateWithFallback(this.config.countryID.pickerConfig.format, result);\n                this.model = Object.assign(model, { countryName });\n                this.updateStates();\n              });\n            }\n          }\n        }\n      }\n      if (countryName) {\n        countryName = countryName.trim();\n        model.state = model.state || '';\n        this.model = Object.assign(model, { countryName });\n      } else {\n        this.model = model;\n      }\n      if (!loadingCountries && !Helpers.isBlank(this.model.countryID)) {\n        this.updateStates();\n      }\n    }\n    this.fieldList.forEach((field: string) => {\n      this.onInput(null, field);\n    });\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  private getDefaultStateConfig() {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query = '', countryID) => {\n        return Promise.resolve(this.getStateOptions(query, countryID));\n      },\n      getLabels: (state: string) => {\n        return Promise.resolve(state);\n      },\n    };\n  }\n\n  private getDefaultCountryConfig() {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query = '') => {\n        return new Promise((resolve) => {\n          let countries = COUNTRIES;\n          if (query) {\n            countries = countries.filter((country) => new RegExp(`${query}`, 'gi').test(country.name));\n          }\n          return resolve(countries.map((country) => ({ value: country.id, label: country.name })));\n        });\n      },\n      getLabels: (countryID) => {\n        return new Promise((resolve: any) => {\n          const country: any = findByCountryId(countryID);\n          if (country) {\n            resolve({ value: country.id, label: country.name });\n          } else {\n            resolve('');\n          }\n        });\n      },\n    };\n  }\n}\n","export class NovoFile {\n  name: string = '';\n  file: any;\n  type: any;\n  contentType: string = '';\n  lastModified: number = 0;\n  size: number = 0;\n  loaded: boolean = false;\n  fileContents: string;\n  dataURL: string;\n  reader: FileReader = new FileReader();\n  readPromise: Function;\n\n  constructor(file) {\n    this.name = `${encodeURIComponent(file.name || '')}`;\n    this.contentType = file.type;\n    this.lastModified = file.lastModified;\n    this.size = file.size;\n    this.file = file;\n    this.reader.onload = (event: any) => {\n      this.fileContents = event.target.result.split(',')[1];\n      this.dataURL = event.target.result;\n      this.loaded = true;\n      if (this.readPromise) {\n        this.readPromise(this);\n      }\n    };\n  }\n\n  read() {\n    return new Promise((resolve) => {\n      this.readPromise = resolve;\n      // when the file is read it triggers the onload event above.\n      this.reader.readAsDataURL(this.file);\n    });\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      contentType: this.type,\n      lastModified: this.lastModified,\n      size: this.size,\n      fileContents: this.fileContents,\n    };\n  }\n}\n","// NG2\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { NovoDragulaService } from '../../../../elements/dragula/DragulaService';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from '../../../common';\nimport { NovoFieldControl } from '../../../field';\nimport { NovoFile } from './extras/file/File';\n\n// Value accessor for the component (supports ngModel)\n// const FILE_VALUE_ACCESSOR = {\n//   provide: NG_VALUE_ACCESSOR,\n//   useExisting: forwardRef(() => NovoFileInputElement),\n//   multi: true,\n// };\n\nconst LAYOUT_DEFAULTS = { order: 'default', download: true, removable: true, labelStyle: 'default', draggable: false };\n// make file-input ids unique\nlet nextId = 0;\n\nclass NovoFileInputBase {\n  constructor(\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    public _parentForm: NgForm,\n    public _parentFormGroup: FormGroupDirective,\n    public ngControl: NgControl,\n  ) {}\n}\nconst NovoFileInputMixins: CanUpdateErrorStateCtor & typeof NovoFileInputBase = mixinErrorState(NovoFileInputBase);\n\n@Component({\n  selector: 'novo-file-input',\n  providers: [{ provide: NovoFieldControl, useExisting: NovoFileInputElement }],\n  template: `\n    <div #container></div>\n    <ng-template #fileInput>\n      <div class=\"file-input-group\" [class.disabled]=\"disabled\" [class.active]=\"active\">\n        <input\n          *ngIf=\"!layoutOptions.customActions\"\n          type=\"file\"\n          [name]=\"name\"\n          [attr.id]=\"name\"\n          (change)=\"check($event)\"\n          [attr.multiple]=\"multiple\"\n          tabindex=\"-1\"\n          [attr.data-feature-id]=\"dataFeatureId\"\n        />\n        <input\n          *ngIf=\"layoutOptions.customActions\"\n          type=\"file\"\n          [name]=\"name\"\n          [attr.id]=\"name\"\n          (change)=\"customCheck($event)\"\n          [attr.multiple]=\"multiple\"\n          tabindex=\"-1\"\n          [attr.data-feature-id]=\"dataFeatureId\"\n        />\n        <section [ngSwitch]=\"layoutOptions.labelStyle\">\n          <label *ngSwitchCase=\"'no-box'\" [attr.for]=\"name\" class=\"no-box\">\n            <div>\n              <i class=\"bhi-dropzone\"></i>{{ placeholder || labels.chooseAFile }} {{ labels.or }}\n              <strong class=\"link\">{{ labels.clickToBrowse }}</strong>\n            </div>\n          </label>\n          <label *ngSwitchDefault [attr.for]=\"name\" class=\"boxed\">\n            <span>{{ placeholder || labels.chooseAFile }}</span>\n            <small\n              >{{ labels.or }} <strong class=\"link\">{{ labels.clickToBrowse }}</strong></small\n            >\n          </label>\n        </section>\n      </div>\n    </ng-template>\n    <ng-template #fileOutput>\n      <div class=\"file-output-group\" [dragula]=\"fileOutputBag\" [dragulaModel]=\"files\">\n        <div class=\"file-item\" *ngFor=\"let file of files\" [class.disabled]=\"disabled\">\n          <i *ngIf=\"layoutOptions.draggable\" class=\"bhi-move\"></i>\n          <label *ngIf=\"file.link\"\n            ><span\n              ><a href=\"{{ file.link }}\" target=\"_blank\">{{ file.name | decodeURI }}</a></span\n            ><span *ngIf=\"file.description\">||</span><span>{{ file.description }}</span></label\n          >\n          <label *ngIf=\"!file.link\">{{ file.name | decodeURI }}</label>\n          <div class=\"actions\" [attr.data-automation-id]=\"'file-actions'\" *ngIf=\"file.loaded\">\n            <div *ngIf=\"!layoutOptions.customActions\">\n              <button\n                *ngIf=\"layoutOptions.download\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"save\"\n                (click)=\"download(file)\"\n                [attr.data-automation-id]=\"'file-download'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"!disabled && (layoutOptions.removable || (!layoutOptions.removable && layoutOptions.removableWhenNew && !file.link))\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"close\"\n                (click)=\"remove(file)\"\n                [attr.data-automation-id]=\"'file-remove'\"\n                tabindex=\"-1\"\n              ></button>\n            </div>\n            <div *ngIf=\"layoutOptions.customActions\">\n              <button\n                *ngIf=\"layoutOptions.edit && !disabled\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"edit\"\n                (click)=\"customEdit(file)\"\n                [attr.data-automation-id]=\"'file-edit'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"layoutOptions.download\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"save\"\n                (click)=\"customSave(file)\"\n                [attr.data-automation-id]=\"'file-download'\"\n                tabindex=\"-1\"\n              ></button>\n              <button\n                *ngIf=\"!disabled\"\n                type=\"button\"\n                theme=\"icon\"\n                icon=\"close\"\n                (click)=\"customDelete(file)\"\n                [attr.data-automation-id]=\"'file-remove'\"\n                tabindex=\"-1\"\n              ></button>\n            </div>\n          </div>\n          <novo-loading *ngIf=\"!file.loaded\"></novo-loading>\n        </div>\n      </div>\n    </ng-template>\n  `,\n})\nexport class NovoFileInputElement\n  extends NovoFileInputMixins\n  implements NovoFieldControl<any>, ControlValueAccessor, OnInit, OnDestroy, OnChanges\n{\n  private _uniqueId: string = `novo-file-input-${++nextId}`;\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n  /** User defined tab index. */\n  _userTabIndex: number | null = null;\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<NovoFileInputElement>;\n\n  readonly controlType: string = 'file-input';\n  /** @docs-private Implemented as part of NovoFieldControl. */\n  lastKeyValue: string = null;\n  /** @docs-private Implemented as part of NovoFieldControl.*/\n  lastCaretPosition: number | null;\n\n  @Input() id: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  // ----------\n  @ViewChild('fileInput', { static: true })\n  fileInput: TemplateRef<any>;\n  @ViewChild('fileOutput', { static: true })\n  fileOutput: TemplateRef<any>;\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  @Input()\n  multiple: boolean = false;\n\n  @Input()\n  layoutOptions: {\n    order?: string;\n    download?: boolean;\n    edit?: boolean;\n    labelStyle?: string;\n    draggable?: boolean;\n    customActions: boolean;\n    removable?: boolean;\n    customValidation?: { action: string; fn: Function }[];\n    removableWhenNew?: boolean;\n  };\n  @Input()\n  value: Array<any> = [];\n  @Input()\n  dataFeatureId: string;\n\n  @Output()\n  edit: EventEmitter<any> = new EventEmitter();\n  @Output()\n  save: EventEmitter<any> = new EventEmitter();\n  @Output()\n  delete: EventEmitter<any> = new EventEmitter();\n  @Output()\n  upload: EventEmitter<any> = new EventEmitter();\n\n  elements: Array<any> = [];\n  files: Array<any> = [];\n  model: any;\n  active: boolean = false;\n  commands: any;\n  visible: boolean;\n  target: any;\n  fileOutputBag: string;\n\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  @HostBinding('class.disabled')\n  @Input()\n  get disabled(): boolean {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n  }\n\n  protected _name: string = this._uniqueId;\n  protected _value: boolean = false;\n  protected _required: boolean = false;\n  protected _disabled: boolean = false;\n  protected _placeholder: string;\n\n  constructor(\n    private element: ElementRef,\n    public labels: NovoLabelService,\n    private dragula: NovoDragulaService,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    @Optional() @Self() _ngControl: NgControl,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, _ngControl);\n    if (_ngControl) {\n      _ngControl.valueAccessor = this;\n    }\n    this.commands = {\n      dragenter: this.dragEnterHandler.bind(this),\n      dragleave: this.dragLeaveHandler.bind(this),\n      dragover: this.dragOverHandler.bind(this),\n      drop: this.dropHandler.bind(this),\n    };\n  }\n\n  ngOnInit() {\n    ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((type) => {\n      this.element.nativeElement.addEventListener(type, this.commands[type]);\n    });\n    this.updateLayout();\n    this.initializeDragula();\n    this.setInitialFileList();\n    this.dataFeatureId = this.dataFeatureId ? this.dataFeatureId : this.name;\n  }\n\n  ngOnDestroy() {\n    ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((type) => {\n      this.element.nativeElement.removeEventListener(type, this.commands[type]);\n    });\n    const dragulaHasFileOutputBag =\n      this.dragula.bags.length > 0 && this.dragula.bags.filter((x) => x.name === this.fileOutputBag).length > 0;\n    if (dragulaHasFileOutputBag) {\n      this.dragula.destroy(this.fileOutputBag);\n    }\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    // Removed 6.0.5, not sure why this was here\n    // this.onModelChange(this.model);}\n  }\n\n  updateLayout() {\n    this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS, this.layoutOptions);\n    this.insertTemplatesBasedOnLayout();\n  }\n\n  insertTemplatesBasedOnLayout() {\n    let order;\n    switch (this.layoutOptions.order) {\n      case 'displayFilesBelow':\n        order = ['fileInput', 'fileOutput'];\n        break;\n      default:\n        order = ['fileOutput', 'fileInput'];\n    }\n    order.forEach((template) => {\n      this.container.createEmbeddedView(this[template], 0);\n    });\n    return order;\n  }\n\n  initializeDragula() {\n    this.fileOutputBag = `file-output-${this.dragula.bags.length}`;\n    this.dragula.setOptions(this.fileOutputBag, {\n      moves: (el, container, handle) => {\n        return this.layoutOptions.draggable;\n      },\n    });\n  }\n\n  setInitialFileList() {\n    if (this.value) {\n      this.files = this.value;\n    }\n  }\n\n  dragEnterHandler(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n    this.target = event.target;\n    this.active = true;\n  }\n\n  dragLeaveHandler(event) {\n    event.preventDefault();\n    if (this.target === event.target) {\n      this.active = false;\n    }\n  }\n\n  dragOverHandler(event) {\n    event.preventDefault();\n    // no-op\n  }\n\n  dropHandler(event) {\n    event.preventDefault();\n    this.visible = false;\n    if (event.dataTransfer.types[0] !== 'Files') {\n      return;\n    }\n    const options: any = this.layoutOptions;\n    const filelist = Array.from(event.dataTransfer.files);\n    if (options.customActions) {\n      this.upload.emit(this.multiple ? filelist : [filelist[0]]);\n    } else {\n      this.process(this.multiple ? filelist : [filelist[0]]);\n    }\n    this.active = false;\n  }\n\n  writeValue(model: any): void {\n    this.model = model;\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  check(event) {\n    this.process(Array.from(event.target.files));\n  }\n\n  validate(files): boolean {\n    let passedValidation = true;\n    if (this.layoutOptions.customValidation) {\n      this.layoutOptions.customValidation\n        .filter((validation) => validation.action === 'upload')\n        .forEach((uploadValidation) => {\n          passedValidation = uploadValidation.fn(files) && passedValidation;\n        });\n    }\n    return passedValidation;\n  }\n\n  process(filelist) {\n    if (this.validate(filelist)) {\n      Promise.all(filelist.map((file) => this.readFile(file))).then((files) => {\n        if (this.multiple) {\n          this.files.push(...files);\n        } else {\n          this.files = files;\n        }\n        this.model = this.files;\n        this.onModelChange(this.model);\n      });\n    }\n  }\n\n  download(file) {\n    window.open(file.dataURL, '_blank');\n  }\n\n  remove(file) {\n    this.files.splice(\n      this.files.findIndex((f) => f.name === file.name && f.size === file.size),\n      1,\n    );\n    this.model = this.files;\n    this.onModelChange(this.model);\n  }\n\n  readFile(file) {\n    return new NovoFile(file).read();\n  }\n\n  customEdit(file) {\n    this.edit.emit(file);\n  }\n\n  customSave(file) {\n    this.save.emit(file);\n  }\n\n  customDelete(file) {\n    this.delete.emit(file);\n  }\n\n  customCheck(event) {\n    this.upload.emit(event);\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  /** Whether any radio buttons has focus. */\n  get focused(): boolean {\n    // todo: implement this.\n    return false;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  get empty(): boolean {\n    return this.value === null;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  get shouldLabelFloat(): boolean {\n    return !this.empty || this.focused;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  onContainerClick(event: MouseEvent) {\n    this.focus();\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n    // TODO\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoPipesModule } from './../../../pipes/Pipes.module';\nimport { NovoButtonModule } from './../../button/Button.module';\nimport { NovoCheckboxModule } from './../../checkbox';\nimport { NovoDragulaModule } from './../../dragula/Dragula.module';\nimport { NovoLoadingModule } from './../../loading/Loading.module';\nimport { NovoPickerModule } from './../../picker/Picker.module';\nimport { NovoSelectModule } from './../../select/Select.module';\nimport { NovoTooltipModule } from './../../tooltip/Tooltip.module';\nimport { NovoAddressElement } from './address/Address';\nimport { NovoFileInputElement } from './file/FileInput';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NovoPipesModule,\n    NovoButtonModule,\n    NovoSelectModule,\n    NovoPickerModule,\n    NovoLoadingModule,\n    NovoDragulaModule,\n    NovoTooltipModule,\n    NovoCheckboxModule,\n  ],\n  declarations: [NovoAddressElement, NovoFileInputElement],\n  exports: [NovoAddressElement, NovoFileInputElement],\n})\nexport class NovoFormExtrasModule {}\n","// NG2\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst TILES_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTilesElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-tiles',\n  providers: [TILES_VALUE_ACCESSOR],\n  template: `\n    <div class=\"tile-container\" [class.active]=\"focused\" [class.disabled]=\"disabled\">\n      <div\n        class=\"tile\"\n        *ngFor=\"let option of _options; let i = index\"\n        [ngClass]=\"{ active: option.checked, disabled: option.disabled }\"\n        (click)=\"select($event, option)\"\n        [attr.data-automation-id]=\"option.label || option\"\n      >\n        <input\n          class=\"tiles-input\"\n          [name]=\"name\"\n          type=\"radio\"\n          [value]=\"option.checked || option.value || option\"\n          [attr.id]=\"name + i\"\n          (change)=\"select($event, option)\"\n          (focus)=\"setFocus(true)\"\n          (blur)=\"setFocus(false)\"\n          [disabled]=\"disabled\"\n        />\n        <label [attr.for]=\"name + i\" [attr.data-automation-id]=\"option.label || option\">\n          {{ option.label || option }}\n        </label>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoTilesElement implements ControlValueAccessor, AfterContentInit, OnChanges {\n  @Input()\n  name: string = new Date().getTime().toString();\n  @Input()\n  options: any;\n  @Input()\n  required: boolean;\n  @Input('controlDisabled')\n  disabled: boolean = false;\n  @Output()\n  onChange: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onSelectedOptionClick: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onDisabledOptionClick: EventEmitter<any> = new EventEmitter();\n\n  _options: Array<any> = [];\n  public activeTile: any = null;\n  public focused: boolean = false;\n\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(private element: ElementRef, private ref: ChangeDetectorRef) {}\n\n  public setFocus(focus: boolean): void {\n    this.focused = focus;\n  }\n\n  ngAfterContentInit() {\n    this.name = this.name || '';\n    this.setupOptions();\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.options && change.options.currentValue && !change.options.firstChange) {\n      this.name = this.name || '';\n      this._options = [];\n      this.setupOptions();\n    }\n  }\n\n  setupOptions() {\n    if (this.options && this.options.length && (this.options[0].value === undefined || this.options[0].value === null)) {\n      this._options = this.options.map((x) => {\n        const item = { value: x, label: x, checked: this.model === x };\n        if (item.checked) {\n          this.setTile(item);\n        }\n        return item;\n      });\n    } else {\n      this._options = this.options.map((x) => {\n        x.checked = this.model === x.value || (this.model && this.model.id === x.value);\n        if (x.checked) {\n          this.setTile(x);\n        }\n        return x;\n      });\n    }\n    this.ref.markForCheck();\n  }\n\n  select(event, item) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    if (!item.disabled) {\n      if (item.checked) {\n        this.onSelectedOptionClick.emit(item);\n        return;\n      }\n\n      for (const option of this._options) {\n        option.checked = false;\n      }\n\n      item.checked = !item.checked;\n      this.onChange.emit(item.value);\n      this.onModelChange(item.value);\n      this.setTile(item);\n      this.model = item.value;\n    } else {\n      this.onDisabledOptionClick.emit(item);\n    }\n    this.ref.markForCheck();\n  }\n\n  setTile(item) {\n    if (item) {\n      this.activeTile = item.value;\n      this.ref.markForCheck();\n    }\n  }\n\n  writeValue(model: any): void {\n    this.model = model;\n    if (!Helpers.isBlank(model)) {\n      this.setupOptions();\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n// APP\nimport { NovoTilesElement } from './Tiles';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [NovoTilesElement],\n  exports: [NovoTilesElement],\n})\nexport class NovoTilesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { IDataTableColumn } from './interfaces';\n\nexport function interpolateCell<T>(value: any, col: IDataTableColumn<T>): string {\n  if (col.format) {\n    return Helpers.interpolateWithFallback(col.format, value);\n  }\n  return value;\n}\n\n@Pipe({\n  name: 'dataTableInterpolate',\n  pure: true,\n})\nexport class DataTableInterpolatePipe<T> implements PipeTransform {\n  transform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      return interpolateCell<T>(value, column);\n    }\n    return '';\n  }\n}\n\n@Pipe({\n  name: 'dataTableDateRenderer',\n  pure: true,\n})\nexport class DateTableDateRendererPipe<T> implements PipeTransform {\n  constructor(private labels: NovoLabelService) {}\n  transform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      return column.format ? value : this.labels.formatDate(interpolateCell<T>(value, column));\n    }\n    return '';\n  }\n}\n\n@Pipe({\n  name: 'dataTableDateTimeRenderer',\n  pure: true,\n})\nexport class DateTableDateTimeRendererPipe<T> implements PipeTransform {\n  constructor(private labels: NovoLabelService) {}\n  transform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      return column.format ? value : this.labels.formatDateShort(interpolateCell<T>(value, column));\n    }\n    return '';\n  }\n}\n\n@Pipe({\n  name: 'dataTableTimeRenderer',\n  pure: true,\n})\nexport class DateTableTimeRendererPipe<T> implements PipeTransform {\n  constructor(private labels: NovoLabelService) {}\n  transform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      return column.format ? value : this.labels.formatTime(interpolateCell<T>(value, column));\n    }\n    return '';\n  }\n}\n\n@Pipe({\n  name: 'dataTableNumberRenderer',\n  pure: true,\n})\nexport class DateTableNumberRendererPipe<T> implements PipeTransform {\n  constructor(private labels: NovoLabelService) {}\n  transform(value: any, column: IDataTableColumn<T>, isPercent: boolean = false): string {\n    if (!Helpers.isEmpty(value)) {\n      let val = interpolateCell<T>(value, column);\n      if (isPercent && Helpers.isNumber(val)) {\n        val = `${Number(val) * 100}`;\n      }\n      return `${this.labels.formatNumber(val)}${isPercent ? '%' : ''}`;\n    }\n    return '';\n  }\n}\n\n@Pipe({\n  name: 'dataTableBigDecimalRenderer',\n  pure: true,\n})\nexport class DataTableBigDecimalRendererPipe<T> implements PipeTransform {\n  constructor(private labels: NovoLabelService) {}\n  transform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      const val = interpolateCell<T>(value, column);\n      return this.labels.formatBigDecimal(Number(val), column.configuration);\n    }\n    return '';\n  }\n}\n\n@Pipe({\n  name: 'dataTableCurrencyRenderer',\n  pure: true,\n})\nexport class DateTableCurrencyRendererPipe<T> implements PipeTransform {\n  constructor(private labels: NovoLabelService) {}\n  transform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      const val = interpolateCell<T>(value, column);\n      return this.labels.formatCurrency(Number(val));\n    }\n    return '';\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { IDataTablePaginationEvent } from '../interfaces';\nimport { DataTableState } from '../state/data-table-state.service';\n\nconst MAX_PAGES_DISPLAYED = 5;\n\n@Component({\n  selector: 'novo-data-table-pagination',\n  template: `\n    <ng-container *ngIf=\"theme === 'basic' || theme === 'basic-wide'\">\n      <div class=\"novo-data-table-pagination-size\">\n        <novo-tiles\n          *ngIf=\"displayedPageSizeOptions.length > 1\"\n          [(ngModel)]=\"pageSize\"\n          [options]=\"displayedPageSizeOptions\"\n          (onChange)=\"changePageSize($event)\"\n          data-automation-id=\"novo-data-table-pagination-tiles\"\n        >\n        </novo-tiles>\n        <div *ngIf=\"displayedPageSizeOptions.length <= 1\">{{ pageSize }}</div>\n      </div>\n\n      <div class=\"novo-data-table-range-label-long\" data-automation-id=\"novo-data-table-pagination-range-label-long\">\n        {{ longRangeLabel }}\n      </div>\n      <div class=\"novo-data-table-range-label-short\" data-automation-id=\"novo-data-table-pagination-range-label-short\">\n        {{ shortRangeLabel }}\n      </div>\n      <span class=\"spacer novo-data-table-spacer\" *ngIf=\"theme === 'basic-wide'\"></span>\n      <novo-button\n        theme=\"dialogue\"\n        type=\"button\"\n        class=\"novo-data-table-pagination-navigation-previous\"\n        (click)=\"previousPage()\"\n        icon=\"previous\"\n        side=\"left\"\n        [disabled]=\"!hasPreviousPage()\"\n        data-automation-id=\"novo-data-table-pagination-previous\"\n      >\n        <span>{{ labels.previous }}</span>\n      </novo-button>\n      <novo-button\n        theme=\"dialogue\"\n        type=\"button\"\n        class=\"novo-data-table-pagination-navigation-next\"\n        (click)=\"nextPage()\"\n        icon=\"next\"\n        side=\"right\"\n        [disabled]=\"!hasNextPage()\"\n        data-automation-id=\"novo-data-table-pagination-next\"\n      >\n        <span>{{ labels.next }}</span>\n      </novo-button>\n    </ng-container>\n    <ng-container *ngIf=\"theme === 'standard'\">\n      <h5 class=\"rows\">{{ labels.itemsPerPage }}</h5>\n      <novo-select\n        [options]=\"displayedPageSizeOptions\"\n        [placeholder]=\"labels.select\"\n        [(ngModel)]=\"pageSize\"\n        (onSelect)=\"changePageSize($event.selected)\"\n        data-automation-id=\"pager-select\"\n        [attr.data-feature-id]=\"dataFeatureId\"\n      >\n      </novo-select>\n      <span class=\"spacer\"></span>\n      <ul class=\"pager\" data-automation-id=\"pager\">\n        <li class=\"page\" (click)=\"selectPage(page - 1)\" [ngClass]=\"{ disabled: page === 0 }\">\n          <i class=\"bhi-previous\" data-automation-id=\"pager-previous\"></i>\n        </li>\n        <li class=\"page\" [ngClass]=\"{ active: p.number === page + 1 }\" *ngFor=\"let p of pages\" (click)=\"selectPage(p.number - 1)\">\n          {{ p.text }}\n        </li>\n        <li class=\"page\" (click)=\"selectPage(page + 1)\" [ngClass]=\"{ disabled: page + 1 === totalPages }\">\n          <i class=\"bhi-next\" data-automation-id=\"pager-next\"></i>\n        </li>\n      </ul>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTablePagination<T> implements OnInit, OnDestroy {\n  @HostBinding('class')\n  @Input()\n  theme: string = 'standard';\n\n  @Input()\n  get page(): number {\n    return this._page;\n  }\n  set page(page: number) {\n    this._page = page;\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.state.page = this._page;\n  }\n  _page: number = 0;\n\n  @Input()\n  get pageSize(): number {\n    return this._pageSize;\n  }\n  set pageSize(pageSize: number) {\n    this._pageSize = pageSize;\n    this.updateDisplayedPageSizeOptions();\n    this.state.pageSize = this._pageSize;\n  }\n  private _pageSize: number;\n  @Input() dataFeatureId: string;\n\n  @Input()\n  get pageSizeOptions() {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(pageSizeOptions: any[]) {\n    this._pageSizeOptions = pageSizeOptions;\n    this.updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions = [];\n\n  @Input()\n  public canSelectAll: boolean = false;\n  @Input()\n  public allMatchingSelected: boolean = false;\n\n  @Input()\n  get length(): number {\n    return this._length;\n  }\n  set length(length: number) {\n    this._length = length;\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  _length: number = 0;\n\n  @Output() pageChange = new EventEmitter<IDataTablePaginationEvent>();\n\n  public displayedPageSizeOptions: { value: string; label: string }[];\n  public longRangeLabel: string;\n  public shortRangeLabel: string;\n  public pages: { number: number; text: string; active: boolean }[];\n\n  private resetSubscription: Subscription;\n  public totalPages: number;\n  private _initialized: boolean;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, public labels: NovoLabelService, private state: DataTableState<T>) {\n    this.resetSubscription = this.state.resetSource.subscribe(() => {\n      this.page = 0;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  public ngOnInit(): void {\n    this._initialized = true;\n    this.updateDisplayedPageSizeOptions();\n  }\n\n  public ngOnDestroy(): void {\n    this.resetSubscription.unsubscribe();\n  }\n\n  public selectPage(page) {\n    this.state.checkRetainment('page', this.canSelectAll && this.allMatchingSelected);\n    this.page = page;\n    this.emitPageEvent();\n  }\n\n  public nextPage(): void {\n    this.state.checkRetainment('page', this.canSelectAll && this.allMatchingSelected);\n    if (!this.hasNextPage()) {\n      return;\n    }\n    this.page++;\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.emitPageEvent();\n  }\n\n  public previousPage(): void {\n    this.state.checkRetainment('page', this.canSelectAll && this.allMatchingSelected);\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    this.page--;\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.emitPageEvent();\n  }\n\n  public hasPreviousPage(): boolean {\n    return this.page >= 1 && this.pageSize !== 0;\n  }\n\n  public hasNextPage(): boolean {\n    const numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n    return this.page < numberOfPages && this.pageSize !== 0;\n  }\n\n  public changePageSize(pageSize: number): void {\n    this.page = 0;\n    this.pageSize = pageSize;\n    this.emitPageEvent(true);\n  }\n\n  private updateDisplayedPageSizeOptions(): void {\n    if (!this._initialized) {\n      return;\n    }\n    if (!this.displayedPageSizeOptions) {\n      this.displayedPageSizeOptions = [];\n      this.pageSizeOptions.forEach((option: any) => {\n        if (option.hasOwnProperty('value')) {\n          this.displayedPageSizeOptions.push(option);\n        } else {\n          this.displayedPageSizeOptions.push({\n            value: option,\n            label: option,\n          });\n        }\n      });\n    }\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  private emitPageEvent(isPageSizeChange: boolean = false): void {\n    const event = {\n      page: this.page,\n      pageSize: this.pageSize,\n      length: this.length,\n      filter: this.state.filter,\n      sort: this.state.sort,\n    };\n    this.pageChange.next(event);\n    this.state.page = this.page;\n    this.state.pageSize = this.pageSize;\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.state.updates.next(event);\n    this.state.onPaginationChange(isPageSizeChange, this.pageSize);\n  }\n\n  private calculateTotalPages() {\n    const totalPages = this.pageSize < 1 ? 1 : Math.ceil(this.length / this.pageSize);\n    return Math.max(totalPages || 0, 1);\n  }\n\n  private makePage(number: number, text: string, isActive: boolean): { number: number; text: string; active: boolean } {\n    return {\n      number,\n      text,\n      active: isActive,\n    };\n  }\n\n  private getPages(currentPage: number, totalPages: number): { number: number; text: string; active: boolean }[] {\n    const pages = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = MAX_PAGES_DISPLAYED < totalPages;\n\n    // Recompute if maxPagesDisplayed\n    if (isMaxSized) {\n      // Current page is displayed in the middle of the visible ones\n      startPage = Math.max(currentPage - Math.floor(MAX_PAGES_DISPLAYED / 2), 1);\n      endPage = startPage + MAX_PAGES_DISPLAYED - 1;\n\n      // Adjust if limit is exceeded\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = endPage - MAX_PAGES_DISPLAYED + 1;\n      }\n    }\n\n    // Add page number links\n    for (let number = startPage; number <= endPage; number++) {\n      const page = this.makePage(number, number.toString(), number === currentPage);\n      pages.push(page);\n    }\n    return pages;\n  }\n}\n","import { CdkHeaderRow, CDK_ROW_TEMPLATE } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'novo-data-table-header-row',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableHeaderRow extends CdkHeaderRow {\n  @HostBinding('class')\n  public rowClass = 'novo-data-table-header-row';\n  @HostBinding('class.fixed-header')\n  @Input()\n  public fixedHeader: boolean = false;\n  @HostBinding('attr.role')\n  public role = 'row';\n}\n","import { CdkRow, CDK_ROW_TEMPLATE } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'novo-data-table-row',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoDataTableRow extends CdkRow {\n  @HostBinding('class')\n  public rowClass = 'novo-data-table-row';\n  @HostBinding('attr.role')\n  public role = 'row';\n\n  @HostBinding('attr.id')\n  @Input()\n  id;\n\n  @HostBinding('attr.data-automation-id')\n  @Input()\n  dataAutomationId;\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoCheckboxModule } from '../checkbox';\nimport { NovoCommonModule } from '../common/common.module';\nimport { NovoOptionModule } from '../common/option';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFieldModule } from '../field/field.module';\nimport { NovoFlexModule } from '../flex/Flex.module';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoSearchBoxModule } from '../search/SearchBox.module';\nimport { NovoSelectModule } from '../select/Select.module';\nimport { NovoTilesModule } from '../tiles/Tiles.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { NovoDataTableCheckboxHeaderCell } from './cell-headers/data-table-checkbox-header-cell.component';\nimport { NovoDataTableExpandHeaderCell } from './cell-headers/data-table-expand-header-cell.component';\nimport { NovoDataTableCellHeader } from './cell-headers/data-table-header-cell.component';\nimport { NovoDataTableHeaderCell } from './cell-headers/data-table-header-cell.directive';\nimport { NovoDataTableCell } from './cells/data-table-cell.component';\nimport { NovoDataTableCheckboxCell } from './cells/data-table-checkbox-cell.component';\nimport { NovoDataTableExpandCell } from './cells/data-table-expand-cell.component';\nimport { NovoDataTableClearButton } from './data-table-clear-button.component';\nimport { NovoDataTableExpandDirective } from './data-table-expand.directive';\nimport { NovoDataTable } from './data-table.component';\nimport {\n  DataTableBigDecimalRendererPipe,\n  DataTableInterpolatePipe,\n  DateTableCurrencyRendererPipe,\n  DateTableDateRendererPipe,\n  DateTableDateTimeRendererPipe,\n  DateTableNumberRendererPipe,\n  DateTableTimeRendererPipe,\n} from './data-table.pipes';\nimport { NovoDataTablePagination } from './pagination/data-table-pagination.component';\nimport { NovoDataTableHeaderRow } from './rows/data-table-header-row.component';\nimport { NovoDataTableRow } from './rows/data-table-row.component';\nimport { NovoDataTableSortButton } from './sort-filter/sort-button.component';\nimport { NovoDataTableSortFilter } from './sort-filter/sort-filter.directive';\nimport { DataTableState } from './state/data-table-state.service';\n\n@NgModule({\n  imports: [\n    NovoDatePickerModule,\n    CdkTableModule,\n    CommonModule,\n    FormsModule,\n    NovoIconModule,\n    NovoButtonModule,\n    NovoDropdownModule,\n    NovoFormExtrasModule,\n    NovoLoadingModule,\n    NovoTilesModule,\n    NovoSearchBoxModule,\n    NovoOptionModule,\n    NovoCommonModule,\n    NovoSelectModule,\n    NovoTooltipModule,\n    NovoCheckboxModule,\n    NovoFlexModule,\n    NovoFieldModule,\n  ],\n  declarations: [\n    DataTableInterpolatePipe,\n    DateTableDateRendererPipe,\n    DateTableCurrencyRendererPipe,\n    DateTableDateTimeRendererPipe,\n    DateTableNumberRendererPipe,\n    DateTableTimeRendererPipe,\n    DataTableBigDecimalRendererPipe,\n    NovoDataTableCellHeader,\n    NovoDataTableSortFilter,\n    NovoDataTableHeaderCell,\n    NovoDataTableCell,\n    NovoDataTableHeaderRow,\n    NovoDataTableRow,\n    NovoDataTablePagination,\n    NovoDataTableCheckboxCell,\n    NovoDataTableCheckboxHeaderCell,\n    NovoDataTableExpandCell,\n    NovoDataTableExpandHeaderCell,\n    NovoDataTable,\n    NovoDataTableExpandDirective,\n    NovoDataTableClearButton,\n    NovoDataTableSortButton,\n  ],\n  providers: [DataTableState],\n  exports: [\n    NovoDataTable,\n    DataTableInterpolatePipe,\n    DateTableDateRendererPipe,\n    DateTableCurrencyRendererPipe,\n    DateTableDateTimeRendererPipe,\n    DateTableNumberRendererPipe,\n    DateTableTimeRendererPipe,\n    DataTableBigDecimalRendererPipe,\n    NovoDataTableClearButton,\n    NovoDataTableSortButton,\n  ],\n})\nexport class NovoDataTableModule {}\n","import { Observable } from 'rxjs';\nimport { IDataTableFilter, IDataTableService, IDataTableSort } from '../interfaces';\n\nexport abstract class RemoteDataTableService<T> implements IDataTableService<T> {\n  abstract getTableResults(\n    sort: IDataTableSort,\n    filter: IDataTableFilter | IDataTableFilter[],\n    page: number,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,\n  ): Observable<{ results: T[]; total: number }>;\n}\n","// NG2\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\nimport * as dateFns from 'date-fns';\nimport { NovoLabelService } from '../../services/novo-label-service';\n// APP\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst DATE_TIME_PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDateTimePickerElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-date-time-picker',\n  providers: [DATE_TIME_PICKER_VALUE_ACCESSOR],\n  animations: [\n    trigger('dateTextState', [\n      state(\n        'date',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n    trigger('timeTextState', [\n      state(\n        'date',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n    trigger('indicatorState', [\n      state(\n        'date',\n        style({\n          transform: 'translateX(0%)',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          transform: 'translateX(100%)',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n    trigger('containerState', [\n      state(\n        'date',\n        style({\n          transform: 'translateX(0%)',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          transform: 'translateX(-100%)',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n  ],\n  template: `\n    <div class=\"date-time-container\">\n      <div class=\"date-time-tabs\">\n        <span\n          class=\"date-tab\"\n          (click)=\"toggleView('date')\"\n          [@dateTextState]=\"componentTabState\"\n          data-automation-id=\"novo-date-time-date-tab\"\n          >{{ selectedLabel }}</span\n        >\n        <span\n          class=\"time-tab\"\n          (click)=\"toggleView('time')\"\n          [@timeTextState]=\"componentTabState\"\n          data-automation-id=\"novo-date-time-time-tab\"\n        >\n          <span class=\"hours\" data-automation-id=\"novo-time-picker-hours\">{{ hours }}</span\n          >:<span class=\"minutes\" data-automation-id=\"novo-time-picker-minutes\">{{ minutes }}</span>\n          <span *ngIf=\"!military\" class=\"meridian\"> {{ meridian }}</span>\n        </span>\n        <i class=\"date-time-indicator\" [@indicatorState]=\"componentTabState\"></i>\n      </div>\n      <div class=\"view-container\" [@containerState]=\"componentTabState\">\n        <div class=\"calendar\">\n          <novo-date-picker\n            (onSelect)=\"onDateSelected($event)\"\n            [(ngModel)]=\"model\"\n            inline=\"true\"\n            [minYear]=\"minYear\"\n            [maxYear]=\"maxYear\"\n            [start]=\"start\"\n            [end]=\"end\"\n            [disabledDateMessage]=\"disabledDateMessage\"\n            [weekStart]=\"weekStart\"\n          ></novo-date-picker>\n        </div>\n        <div class=\"time-picker\">\n          <novo-time-picker (onSelect)=\"onTimeSelected($event)\" [(ngModel)]=\"model\" [military]=\"military\" inline=\"true\"></novo-time-picker>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NovoDateTimePickerElement implements ControlValueAccessor {\n  @Input()\n  minYear: any;\n  @Input()\n  maxYear: any;\n  @Input()\n  start: any;\n  @Input()\n  end: any;\n  @Input()\n  military: any;\n  @Input()\n  weekStart: number = 0;\n  @Input()\n  disabledDateMessage: string;\n  // Select callback for output\n  @Output()\n  onSelect: EventEmitter<any> = new EventEmitter(false);\n\n  componentTabState: string = 'date';\n  selectedLabel: string;\n  hours: string;\n  minutes: string;\n  meridian: string;\n  datePickerValue: Date = new Date();\n  timePickerValue: Date = new Date();\n\n  model: any;\n  _onChange: Function = () => {};\n  _onTouched: Function = () => {};\n\n  constructor(public labels: NovoLabelService, private element: ElementRef) {}\n\n  toggleView(tab: string): void {\n    this.componentTabState = tab;\n  }\n\n  setDateLabels(value: Date) {\n    this.selectedLabel = this.labels.formatDateWithFormat(value, {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  setTimeLabels(value: Date) {\n    let hours = value.getHours();\n    const minutes = value.getMinutes();\n\n    this.meridian = value.toLocaleTimeString().slice(-2);\n\n    if (!this.military) {\n      hours = this.meridian === 'PM' && hours > 12 ? hours - 12 : hours;\n\n      // Special case for 12\n      if (this.meridian === 'PM' && hours === 24) {\n        hours = 12;\n      } else if (this.meridian === 'AM' && hours === 0) {\n        hours = 12;\n      }\n    }\n\n    this.hours = hours.toString();\n    this.minutes = minutes.toString().length === 1 ? `0${minutes.toString()}` : minutes.toString();\n  }\n\n  onDateSelected(event: { month?: any; year?: any; day?: any; date?: Date }) {\n    this.datePickerValue = event.date;\n    this.model = this.createFullDateValue(this.datePickerValue, this.timePickerValue);\n    this.setDateLabels(this.model);\n    this.onSelect.emit({ date: this.model });\n    this._onChange(this.model);\n    this.toggleView('time');\n  }\n\n  onTimeSelected(event: { hours?: number; minutes?: number; meridian?: string; date?: Date; text?: string }) {\n    this.timePickerValue = event.date;\n    this.model = this.createFullDateValue(this.model, this.timePickerValue);\n    this.setTimeLabels(this.model);\n    this.onSelect.emit({ date: this.model });\n    this._onChange(this.model);\n  }\n\n  createFullDateValue(datePickerValue: Date, timePickerValue: Date) {\n    return dateFns.setMilliseconds(\n      dateFns.setSeconds(\n        dateFns.setMinutes(dateFns.setHours(datePickerValue, dateFns.getHours(timePickerValue)), dateFns.getMinutes(timePickerValue)),\n        dateFns.getSeconds(timePickerValue),\n      ),\n      dateFns.getMilliseconds(timePickerValue),\n    );\n  }\n\n  // ValueAccessor Functions\n  writeValue(model: any): void {\n    this.model = model;\n    if (Helpers.isEmpty(model)) {\n      this.model = new Date();\n    } else if (!isNaN(model)) {\n      this.model = new Date(model);\n    }\n    this.datePickerValue = this.model;\n    this.timePickerValue = this.model;\n    if (Helpers.isDate(this.model)) {\n      this.setDateLabels(this.model);\n      this.setTimeLabels(this.model);\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this._onTouched = fn;\n  }\n}\n","export class CollectionEvent {\n  static REFRESH: string = 'Collection.REFRESH';\n  static ADD: string = 'Collection.ADD';\n  static REMOVE: string = 'Collection.REMOVE';\n  static REMOVE_ALL: string = 'Collection.REMOVE_ALL';\n  static REPLACE: string = 'Collection.REPLACE';\n  static INVALIDATE_ALL: string = 'Collection.INVALIDATE_ALL';\n  static SORT: string = 'Collection.SORT';\n  static FILTER: string = 'Collection.FILTER';\n  static CHANGE: string = 'Collection.CHANGE';\n  static CURRENTPAGE_CHANGE: string = 'Collection.CURRENTPAGE_CHANGE';\n  static PAGESIZE_CHANGE: string = 'Collection.PAGESIZE_CHANGE';\n  static NUMBEROFPAGES_CHANGE: string = 'Collection.NUMBEROFPAGES_CHANGE';\n\n  type: string = '';\n  data: Array<any> = [];\n\n  constructor(type = 'Collection.REFRESH', data = []) {\n    this.type = type;\n    this.data = data;\n  }\n}\n","// Ng\nimport { EventEmitter } from '@angular/core';\nimport { Helpers } from '../../utils/Helpers';\n// App\nimport { Collection } from './Collection';\nimport { CollectionEvent } from './CollectionEvent';\n\n/**\n * Base Class for all Collection based data providers\n *\n * @example\n *  var dp:DataProvider = new DataProvider();\n *  dp.addItem({label:\"Item 1\"});\n *  dp.addItem({label:\"Item 2\"});\n *  dp.addItem({label:\"Item 3\"});\n *  dp.addItem({label:\"Item 4\"});\n\n *  var myList:List = new List();\n *  myList.dataProvider = dp;\n */\nexport class ArrayCollection<T> implements Collection<T> {\n  dataChange: EventEmitter<CollectionEvent> = new EventEmitter<CollectionEvent>();\n  source: Array<T> = [];\n  editData: Array<T> = [];\n  isEditing: boolean = false;\n  filterData: Array<T> = [];\n  _filter: any = {};\n  _sort: Array<any> = [];\n\n  constructor(source: Array<T> = []) {\n    this.source = source;\n    this.editData = this.copy(this.source);\n    this.filterData = this.source.slice();\n  }\n\n  get length() {\n    return this.filterData.length;\n  }\n\n  get total(): number {\n    return this.filterData.length;\n  }\n\n  get list(): Array<T> {\n    return this.filterData;\n  }\n\n  isEmpty(): boolean {\n    return this.length <= 0 && !this.isLoading() && !this.hasErrors();\n  }\n\n  hasErrors(): boolean {\n    return false;\n  }\n\n  isLoading(): boolean {\n    return false;\n  }\n\n  isFiltered(): boolean {\n    return Object.keys(this._filter).length > 0;\n  }\n\n  /**\n   * Method to switch the isEditingflag for the data source\n   */\n  edit() {\n    this.isEditing = true;\n    this.editData = this.copy(this.source);\n  }\n\n  /**\n   * Method to leave edit mode and reset source\n   */\n  undo() {\n    this.isEditing = false;\n    this.source = this.copy(this.editData);\n    this.refresh();\n  }\n\n  /**\n   * Method to leave edit mode and save editData\n   */\n  commit() {\n    this.isEditing = false;\n    this.source = this.filterData.slice();\n    this.refresh();\n  }\n\n  /**\n   * Appends an item to the end of the data provider.\n   *\n   *\n   * @memberOf ArrayCollection\n   */\n  addItem(item: T): void {\n    this.isEditing ? this.editData.push(item) : this.source.push(item);\n    this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n    this.refresh();\n  }\n\n  /**\n   * Adds a new item to the data provider at the specified index.\n   *\n   *\n   * @memberOf ArrayCollection\n   */\n  addItemAt(item: T, index: number): void {\n    this.isEditing ? this.editData.splice(index, 0, item) : this.source.splice(index, 0, item);\n    this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n    this.refresh();\n  }\n\n  /**\n   *  Appends multiple items to the end of the DataProvider and dispatches a CollectionEvent.ADD event.\n   *\n   * @memberOf ArrayCollection\n   */\n  addItems(items: Array<T>): void {\n    this.isEditing ? this.editData.push(...items) : this.source.push(...items);\n    this.onDataChange(new CollectionEvent(CollectionEvent.ADD, items));\n    this.refresh();\n  }\n\n  /**\n   * Adds several items to the data provider at the specified index and dispatches a CollectionEvent.ADD event.\n   *\n   * @memberOf ArrayCollection\n   */\n  addItemsAt(items: Array<T>, index: number): void {\n    this.isEditing ? this.editData.splice(index, 0, ...items) : this.source.splice(index, 0, ...items);\n  }\n\n  /**\n   * Creates a copy of the current ArrayCollection any.\n   *\n   * @memberOf ArrayCollection\n   */\n  clone(): ArrayCollection<T> {\n    return new ArrayCollection(this.isEditing ? this.copy(this.editData) : this.copy(this.source));\n  }\n\n  /**\n   * Creates a copy of the current ArrayCollection any.\n   *\n   * @memberOf ArrayCollection\n   */\n  copy(array: any[]) {\n    return Helpers.deepClone(array);\n  }\n\n  /**\n   * Concatenates the specified items to the end of the current data provider.\n   *\n   * @memberOf ArrayCollection\n   */\n  concat(items: Array<T>): void {\n    this.addItems(items);\n  }\n\n  /**\n   * Returns the item at the specified index.\n   *\n   * @memberOf ArrayCollection\n   */\n  getItemAt(index: number): any {\n    return this.isEditing ? this.editData[index] : this.source[index];\n  }\n\n  /**\n   *  Returns the index of the specified item.\n   *\n   * @memberOf ArrayCollection\n   */\n  getItemIndex(item: T): number {\n    return this.isEditing ? this.editData.indexOf(item) : this.source.indexOf(item);\n  }\n\n  /**\n   * Invalidates all the data items that the DataProvider contains and dispatches a CollectionEvent.INVALIDATE_ALL event.\n   *\n   * @memberOf ArrayCollection\n   */\n  invalidate(): void {\n    this.onDataChange(new CollectionEvent(CollectionEvent.INVALIDATE_ALL));\n  }\n\n  /**\n   * Invalidates the specified item.\n   *\n   * @memberOf ArrayCollection\n   */\n  // invalidateItem(item:any):void {}\n\n  /**\n   * Invalidates the item at the specified index.\n   *\n   * @memberOf ArrayCollection\n   */\n  // invalidateItemAt(index:number):void {}\n\n  /**\n   * Appends the specified data into the data that the data provider contains and removes any duplicate items.\n   *\n   * @memberOf ArrayCollection\n   */\n  merge(newData: Array<T>): void {\n    for (const obj of newData) {\n      const existing = ~this.getItemIndex(obj);\n      if (existing) {\n        this.replaceItem(obj, existing);\n      } else {\n        this.addItem(obj);\n      }\n    }\n  }\n\n  /**\n   * Removes all items from the data provider and dispatches a CollectionEvent.REMOVE_ALL event.\n   *\n   * @memberOf ArrayCollection\n   */\n  removeAll(): void {\n    this.source = [];\n    this.editData = [];\n    this.filterData = [];\n    this.onDataChange(new CollectionEvent(CollectionEvent.REMOVE_ALL, []));\n    this.refresh();\n  }\n\n  /**\n   * Removes the specified item from the data provider and dispatches a CollectionEvent.REMOVE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  removeItem(item: T): boolean {\n    const index = this.getItemIndex(item);\n    return this.removeItemAt(index);\n  }\n\n  /**\n   * Removes the item at the specified index and dispatches a CollectionEvent.REMOVE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  removeItemAt(index: number): boolean {\n    const success = !!this.source.splice(index, 1);\n    this.refresh();\n    return success;\n  }\n\n  /**\n   * Replaces an existing item with a new item and dispatches a CollectionEvent.REPLACE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  replaceItem(newItem: any, oldItem: any): any {\n    const index = this.getItemIndex(oldItem);\n    if (index >= 0) {\n      this.replaceItemAt(newItem, index);\n    }\n  }\n\n  /**\n   * Replaces the item at the specified index and dispatches a CollectionEvent.REPLACE event.\n   *\n   * @memberOf ArrayCollection\n   */\n  replaceItemAt(newItem: any, index: number): any {\n    this.filterData.splice(index, 1, newItem);\n  }\n\n  /**\n   * Sorts the items that the data provider contains and dispatches a CollectionEvent.SORT event.\n   *\n   * @memberOf ArrayCollection\n   */\n  get sort(): Array<any> {\n    return this._sort;\n  }\n\n  set sort(value: Array<any>) {\n    this._sort = value;\n    this.refresh();\n  }\n\n  /**\n   * Sorts the items that the data provider contains by the specified field and dispatches a CollectionEvent.SORT event.\n   *\n   * @memberOf ArrayCollection\n   */\n  sortOn(fieldName: any, reverse = false): Array<T> {\n    this.filterData = this.filterData.sort(Helpers.sortByField(fieldName, reverse));\n    this.onDataChange(new CollectionEvent(CollectionEvent.SORT));\n    return this.filterData;\n  }\n\n  get filter(): any {\n    return this._filter;\n  }\n\n  set filter(value: any) {\n    this._filter = value;\n    this.refresh();\n  }\n\n  filterOn(fieldName: any, value: any = null): Array<T> {\n    this.filterData = this.filterData.filter(Helpers.filterByField(fieldName, value));\n    return this.filterData;\n  }\n\n  onDataChange(event: CollectionEvent): void {\n    this.dataChange.emit(event);\n  }\n\n  refresh(): void {\n    this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n    for (const item of this._sort.reverse()) {\n      this.sortOn(item.field, item.reverse);\n    }\n    for (const key in this._filter) {\n      if (key) {\n        this.filterOn(key, this._filter[key]);\n      }\n    }\n    this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n  }\n\n  /**\n   * Creates an Array any representation of the data that the data provider contains.\n   *\n   * @memberOf ArrayCollection\n   */\n  toArray(): Array<T> {\n    return this.isEditing ? this.editData : this.source;\n  }\n\n  toJSON() {\n    return this.isEditing ? this.editData : this.source;\n  }\n}\n","import { ArrayCollection } from './ArrayCollection';\nimport { CollectionEvent } from './CollectionEvent';\nimport { PagedCollection } from './PagedCollection';\n\nexport class PagedArrayCollection<T> extends ArrayCollection<T> implements PagedCollection<T> {\n  _page: number = 1;\n  _numberOfPages: number = 1;\n  _pageSize: number = 10;\n\n  constructor(source: Array<T> = []) {\n    super(source);\n  }\n\n  get numberOfPages(): number {\n    let result: number = this.source.length / this.pageSize;\n    result = Math.ceil(result);\n    return result;\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  set page(value: number) {\n    this._page = value;\n    this.refresh();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  set pageSize(value: number) {\n    this._pageSize = value;\n    this.refresh();\n  }\n\n  next(): number {\n    if (this.page === this.numberOfPages) {\n      return this.page;\n    }\n    this.page++;\n    return this.page;\n  }\n\n  prev(): number {\n    if (this._page === 1) {\n      return this.page;\n    }\n    this.page--;\n    return this.page;\n  }\n\n  first(): number {\n    if (this.page === 1) {\n      return this.page;\n    }\n    this.page = 1;\n    return this.page;\n  }\n\n  last(): number {\n    if (this.page === this.numberOfPages) {\n      return this.page;\n    }\n    this.page = this.numberOfPages;\n    return this.page;\n  }\n\n  refresh(): void {\n    this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n    for (const item of this._sort.reverse()) {\n      this.sortOn(item.field, item.reverse);\n    }\n    for (const key in this._filter) {\n      if (key) {\n        this.filterOn(key, this._filter[key]);\n      }\n    }\n    if (this.page >= 0) {\n      const start = (this.page - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      const result = this.filterData.slice(start, end);\n      this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, result));\n    } else {\n      this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Global {}\n\nexport abstract class GlobalRef {\n  abstract get nativeGlobal(): Global;\n}\n\n@Injectable()\nexport class BrowserGlobalRef extends GlobalRef {\n  get nativeGlobal(): Global {\n    return window as Global;\n  }\n}\nexport class NodeGlobalRef extends GlobalRef {\n  get nativeGlobal(): Global {\n    throw new Error(`global doesn't compile for some reason`);\n    // return global as Global;\n  }\n}\n","// NG2\nimport { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class Security {\n  credentials: string[] = [];\n  change: EventEmitter<any> = new EventEmitter();\n\n  grant(data: any[] | Object): void {\n    const parsed = [];\n    if (data instanceof Array) {\n      for (const permission of data) {\n        parsed.push(permission.replace(/\\s/gi, ''));\n      }\n    } else if (typeof data === 'object') {\n      for (const key in data) {\n        if (data[key] instanceof Array) {\n          for (const permission of data[key]) {\n            parsed.push(`${key}.${permission}`);\n          }\n        }\n      }\n    }\n    this.credentials = [].concat(this.credentials, parsed);\n    this.change.emit(this.credentials);\n  }\n\n  has(value: any): boolean {\n    return this.credentials.indexOf(value) > -1;\n  }\n\n  revoke(value: any): void {\n    const i: number = this.credentials.indexOf(value);\n    this.credentials.splice(i, 1);\n    this.change.emit(this.credentials);\n  }\n\n  clear(): void {\n    this.credentials = [];\n    this.change.emit(this.credentials);\n  }\n\n  subscribe(fn: any): void {\n    this.change.subscribe(fn);\n  }\n\n  checkRoutes(\n    routes: { entities?: any[]; permissions?: any[] | Function; path?: string; label?: string; canDisable?: Boolean }[],\n    options: { entityType?: string },\n  ): any {\n    const filtered = [];\n    for (const route of routes) {\n      if (route.entities && ~route.entities.indexOf(options.entityType)) {\n        if (route.permissions instanceof Function) {\n          if (route.permissions(options, this)) {\n            filtered.push(route);\n          }\n        } else if (route.permissions && route.permissions.length) {\n          if (route.permissions.every((perm) => this.has(perm))) {\n            filtered.push(route);\n          }\n        } else {\n          filtered.push(route);\n        }\n      }\n    }\n\n    return filtered;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorageService {\n  setItem(key: any, value: any): any {\n    localStorage.setItem(key, value);\n  }\n\n  getItem(key: any): any {\n    return localStorage.getItem(key);\n  }\n\n  removeItem(key: any): any {\n    localStorage.removeItem(key);\n  }\n}\n","// NG2\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NovoTemplateService {\n  templates: any = {\n    default: {},\n    custom: {},\n  };\n  constructor() {}\n\n  getAll(): any {\n    const templates: any = {};\n    const customTemplateTypes: string[] = Object.keys(this.templates.custom);\n    const defaultTemplateTypes: string[] = Object.keys(this.templates.default);\n    defaultTemplateTypes.forEach((type: string) => {\n      templates[type] = this.templates.default[type];\n    });\n    customTemplateTypes.forEach((type: string) => {\n      templates[type] = this.templates.custom[type];\n    });\n    return templates;\n  }\n\n  addDefault(key: string, template: any): void {\n    this.templates.default[key] = template;\n  }\n\n  addCustom(key: string, template: any): void {\n    this.templates.custom[key] = template;\n  }\n}\n","// NG2\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { format, isValid, parse } from 'date-fns';\nimport { DateFormatService, NovoLabelService } from '../../services';\n// APP\nimport { Helpers } from './../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst TIME_PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTimePickerElement),\n  multi: true,\n};\n\nexport enum TIME_VALUE_FORMATS {\n  iso8601 = 'iso8601',\n  Date = 'Date',\n}\n\n@Component({\n  selector: 'novo-time-picker',\n  providers: [TIME_PICKER_VALUE_ACCESSOR],\n  template: `\n    <!-- <div class=\"digital\" [class.inline]=\"inline\" [class.military]=\"military\" *ngIf=\"inline\">\n      <div class=\"digital--inner\">\n        <span class=\"digital--clock\" *ngIf=\"analog\">\n          <span class=\"hours\" data-automation-id=\"novo-time-picker-hours\">{{ hours }}</span\n          >:<span class=\"minutes\" data-automation-id=\"novo-time-picker-minutes\">{{ minutes }}</span>\n        </span>\n        <div class=\"control-block\" *ngIf=\"!military && analog\">\n          <span\n            *ngFor=\"let period of MERIDIANS\"\n            class=\"digital--period\"\n            [class.active]=\"meridian == period\"\n            (click)=\"setPeriod($event, period, true)\"\n            [attr.data-automation-id]=\"period\"\n            >{{ period }}</span\n          >\n        </div>\n      </div>\n    </div> -->\n    <div class=\"increments\" *ngIf=\"!analog\">\n      <novo-list class=\"increments--hours\" direction=\"vertical\" data-automation-id=\"novo-time-picker-hours\">\n        <novo-list-item\n          class=\"increments--hour\"\n          *ngFor=\"let increment of HOURS\"\n          (click)=\"setHours($event, increment, true)\"\n          [class.active]=\"increment == activeHour\"\n          [attr.data-automation-id]=\"increment\"\n        >\n          <item-content>{{ increment }}</item-content>\n        </novo-list-item>\n      </novo-list>\n      <novo-list class=\"increments--minutes\" direction=\"vertical\" data-automation-id=\"novo-time-picker-minutes\">\n        <novo-list-item\n          class=\"increments--minute\"\n          *ngFor=\"let increment of MINUTES\"\n          (click)=\"setMinutes($event, increment, true)\"\n          [class.active]=\"increment == activeMinute\"\n          [attr.data-automation-id]=\"increment\"\n        >\n          <item-content>{{ increment }}</item-content>\n        </novo-list-item>\n      </novo-list>\n      <novo-list class=\"increments--meridians\" direction=\"vertical\" *ngIf=\"!military\" data-automation-id=\"novo-time-picker-meridians\">\n        <novo-list-item\n          class=\"increments--meridian\"\n          *ngFor=\"let period of MERIDIANS\"\n          (click)=\"setPeriod($event, period, true)\"\n          [class.active]=\"meridian == period\"\n          [attr.data-automation-id]=\"period\"\n        >\n          <item-content>{{ period }}</item-content>\n        </novo-list-item>\n      </novo-list>\n    </div>\n    <div class=\"analog\" *ngIf=\"analog\">\n      <div class=\"analog--inner\">\n        <div class=\"analog--face\">\n          <span class=\"analog--center\"></span>\n          <span class=\"analog--hand--hours\" [ngClass]=\"hoursClass\">\n            <span class=\"analog--ball\"></span>\n          </span>\n          <span class=\"analog--hand--minutes\" [ngClass]=\"minutesClass\">\n            <span class=\"analog--ball\" [ngClass]=\"{ between: inBetween }\"></span>\n          </span>\n        </div>\n        <div class=\"analog--hours\">\n          <span\n            *ngFor=\"let hour of HOURS\"\n            class=\"analog--hour\"\n            [ngClass]=\"{ active: activeHour == hour }\"\n            (click)=\"setHours($event, hour, true)\"\n            [attr.data-automation-id]=\"hour\"\n            >{{ hour }}</span\n          >\n        </div>\n        <div class=\"analog--minutes\">\n          <span\n            *ngFor=\"let minute of MINUTES\"\n            class=\"analog--minute\"\n            [ngClass]=\"{ active: activeMinute == minute }\"\n            (click)=\"setMinutes($event, minute, true)\"\n            [attr.data-automation-id]=\"minute\"\n            >{{ minute }}</span\n          >\n        </div>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'novo-time-picker',\n    '[class.military]': 'military',\n  },\n})\nexport class NovoTimePickerElement implements ControlValueAccessor, OnInit, OnChanges {\n  @Input()\n  military: boolean = false;\n  @Input()\n  analog: boolean = false;\n  @Input()\n  inline: boolean = false;\n  @Input()\n  step: number = 1;\n\n  @Output()\n  onSelect: EventEmitter<any> = new EventEmitter();\n\n  hours: number = 12;\n  minutes: number = 0;\n  value: any = null;\n  meridian: string;\n  inBetween: boolean;\n  hoursClass: string;\n  activeHour;\n  minutesClass: string;\n  activeMinute;\n  increments: string[] = [];\n  selected: string;\n  MERIDIANS: Array<string> = ['am', 'pm'];\n  MINUTES: Array<string> = ['05', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '00'];\n  HOURS: Array<string> = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n  model: any;\n  _onChange: Function = () => {};\n  _onTouched: Function = () => {};\n\n  flatten(arr) {\n    return Array.prototype.concat(...arr);\n  }\n\n  constructor(\n    public element: ElementRef,\n    public labels: NovoLabelService,\n    public dateFormatService: DateFormatService,\n    protected cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    if (this.military) {\n      this.HOURS = ['0', ...this.HOURS, '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\n    }\n    if (!this.analog) {\n      const mins = Array.from(Array(60 / this.step).keys()).map((i) => i * this.step);\n      this.MINUTES = mins.map((m) => `${m}`.padStart(2, '0'));\n    }\n    this.ngOnChanges();\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    if (this.model) {\n      this.init(this.model, false);\n    } else {\n      this.selected = null;\n      this.init(new Date(), false);\n    }\n  }\n\n  init(value, dispatch) {\n    const _value = new Date(value);\n    let hours: string | number = _value.getHours();\n    let minutes: string | number = _value.getMinutes();\n\n    if (!this.military) {\n      this.meridian = hours >= 12 ? 'pm' : 'am';\n      hours = hours % 12;\n      hours = hours || 12;\n    }\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n\n    this.setHours(null, hours, dispatch);\n    this.setMinutes(null, minutes, dispatch);\n    this.checkBetween(minutes);\n  }\n\n  checkBetween(value) {\n    this.inBetween = this.MINUTES.indexOf(String(value)) < 0;\n  }\n\n  setValue(event, value) {\n    Helpers.swallowEvent(event);\n    this.selected = value;\n    const [time, meridian] = value.split(' ');\n    const [hours, minutes] = time.split(':');\n    this.hours = hours;\n    this.minutes = minutes;\n    this.meridian = meridian;\n\n    this.dispatchChange();\n  }\n\n  setHours(event, hours, dispatch) {\n    Helpers.swallowEvent(event);\n    this.hours = hours;\n    this.hoursClass = `hour-${hours}`;\n    this.activeHour = hours;\n\n    if (dispatch) {\n      this.dispatchChange();\n    }\n  }\n\n  setMinutes(event, minutes, dispatch) {\n    Helpers.swallowEvent(event);\n    this.minutes = minutes;\n    this.minutesClass = `min-${minutes}`;\n    this.activeMinute = minutes;\n    this.checkBetween(minutes);\n\n    if (dispatch) {\n      this.dispatchChange();\n    }\n  }\n\n  setPeriod(event, period, dispatch) {\n    Helpers.swallowEvent(event);\n    this.meridian = period;\n\n    if (dispatch) {\n      this.dispatchChange();\n    }\n  }\n\n  dispatchChange() {\n    let hours = Number(this.hours);\n\n    if (!this.military) {\n      hours = this.meridian.toLowerCase() === 'pm' ? hours + 12 : hours;\n\n      // Special case for 12\n      if (this.meridian.toLowerCase() === 'pm' && hours === 24) {\n        hours = 12;\n      } else if (this.meridian.toLowerCase() === 'am' && hours === 12) {\n        hours = 0;\n      }\n    }\n\n    const value = new Date();\n    value.setHours(hours);\n    value.setMinutes(this.minutes);\n    value.setSeconds(0);\n    this.value = `${this.hours}:${this.minutes} ${this.meridian}`;\n    this.onSelect.next({\n      hours,\n      minutes: this.minutes,\n      meridian: this.meridian,\n      date: value,\n      text: this.value,\n    });\n    this._onChange(value);\n  }\n\n  // ValueAccessor Functions\n  writeValue(model: any): void {\n    this.model = model;\n    if (Helpers.isDate(model)) {\n      this.init(model, false);\n      // this.dispatchChange();\n    }\n    if (Helpers.isString(model)) {\n      const time = this.military ? model : this.convertTime12to24(model);\n      const date = parse(`${format(Date.now(), 'YYYY-MM-DD')}T${time}`);\n      if (isValid(date)) {\n        this.init(date, false);\n        // this.dispatchChange();\n      }\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this._onTouched = fn;\n  }\n\n  convertTime12to24(time12h: string) {\n    const pmFormat = this.labels.timeFormatPM.toUpperCase();\n\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (['PM', pmFormat].includes(modifier)) {\n      hours = `${parseInt(hours, 10) + 12}`.padStart(2, '0');\n    }\n    return `${hours}:${minutes}`;\n  }\n}\n","// NG\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { format, parse } from 'date-fns';\nimport * as IMask from 'imask';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// App\nimport { NovoOverlayTemplateComponent } from '../common/overlay/Overlay';\n\n// Value accessor for the component (supports ngModel)\nconst DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTimePickerInputElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-time-picker-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n    <input\n      type=\"text\"\n      [name]=\"name\"\n      [(ngModel)]=\"value\"\n      [imask]=\"maskOptions\"\n      [unmask]=\"'typed'\"\n      (complete)=\"onComplete($event)\"\n      [placeholder]=\"placeholder\"\n      (focus)=\"_handleFocus($event)\"\n      (keydown)=\"_handleKeydown($event)\"\n      (input)=\"_handleInput($event)\"\n      (blur)=\"_handleBlur($event)\"\n      #input\n      data-automation-id=\"time-input\"\n      [disabled]=\"disabled\"\n    />\n    <i *ngIf=\"!hasValue\" (click)=\"openPanel()\" class=\"bhi-clock\"></i> <i *ngIf=\"hasValue\" (click)=\"clearValue()\" class=\"bhi-times\"></i>\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-time-picker\n        inline=\"true\"\n        [analog]=\"analog\"\n        (onSelect)=\"setValue($event)\"\n        [ngModel]=\"value\"\n        [military]=\"military\"\n      ></novo-time-picker>\n    </novo-overlay-template>\n  `,\n})\nexport class NovoTimePickerInputElement implements OnInit, OnChanges, ControlValueAccessor {\n  public value: any;\n\n  /** View -> model callback called when value changes */\n  _onChange: (value: any) => void = () => {};\n  /** View -> model callback called when autocomplete has been touched */\n  _onTouched = () => {};\n\n  @Input()\n  name: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  military: boolean = false;\n  @Input()\n  maskOptions: any;\n  @HostBinding('class.disabled')\n  @Input()\n  disabled: boolean = false;\n\n  /**\n   * @deprecated don't use\n   */\n  @Input()\n  analog: boolean = false;\n\n  @Output()\n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  /** Element for the panel containing the autocomplete options. */\n  @ViewChild(NovoOverlayTemplateComponent)\n  overlay: NovoOverlayTemplateComponent;\n  @ViewChild('input')\n  input: HTMLInputElement;\n\n  constructor(\n    public element: ElementRef,\n    public labels: NovoLabelService,\n    public dateFormatService: DateFormatService,\n    protected _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.initFormatOptions();\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    // set icon and styling\n    if (Object.keys(changes).some((key) => ['military', 'maskOptions'].includes(key))) {\n      this.initFormatOptions();\n    }\n  }\n\n  initFormatOptions() {\n    this.placeholder = this.military ? this.labels.timeFormatPlaceholder24Hour : this.labels.timeFormatPlaceholderAM;\n    const timeFormat = this.military ? 'HH:mm' : 'hh:mm A';\n    const amFormat = this.labels.timeFormatAM.toUpperCase();\n    const pmFormat = this.labels.timeFormatPM.toUpperCase();\n    this.maskOptions = {\n      mask: Date,\n      pattern: this.military ? 'HH:mm' : 'hh:mm aa',\n      overwrite: true,\n      autofix: true,\n      lazy: false,\n      min: new Date(1970, 0, 1),\n      max: new Date(2030, 0, 1),\n      prepare(str) {\n        return str.toUpperCase();\n      },\n      format(date) {\n        return format(date, timeFormat);\n      },\n      parse: (str) => {\n        const time = this.military ? str : this.convertTime12to24(str);\n        return parse(`${format(Date.now(), 'YYYY-MM-DD')}T${time}`);\n      },\n      blocks: {\n        HH: {\n          mask: IMask.MaskedRange,\n          placeholderChar: 'H',\n          maxLength: 2,\n          from: 0,\n          to: 23,\n        },\n        hh: {\n          mask: IMask.MaskedRange,\n          placeholderChar: 'h',\n          maxLength: 2,\n          from: 1,\n          to: 12,\n        },\n        mm: {\n          mask: IMask.MaskedRange,\n          placeholderChar: 'm',\n          maxLength: 2,\n          from: 0,\n          to: 59,\n        },\n        aa: {\n          mask: IMask.MaskedEnum,\n          placeholderChar: 'x',\n          enum: ['AM', 'PM', 'am', 'pm', amFormat, pmFormat],\n        },\n      },\n    };\n  }\n\n  onComplete(dt) {\n    if (this.value !== dt) {\n      this.dispatchOnChange(dt);\n    }\n  }\n\n  /** BEGIN: Convenient Panel Methods. */\n  openPanel(): void {\n    if (!this.overlay.panelOpen) {\n      this.overlay.openPanel();\n      const hour = new Date().getHours();\n      Promise.resolve(null).then(() => this.scrollToIndex(hour * 4));\n    }\n  }\n\n  closePanel(): void {\n    this.overlay.closePanel();\n  }\n\n  get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n\n  /** END: Convenient Panel Methods. */\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const input = event.target as HTMLInputElement;\n    const hour: string = input.value.slice(0, 2);\n    if ((event.key === Key.Escape || event.key === Key.Enter) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      if (this.hourOneFormatRequired(hour)) {\n        input.value = `01:${input.value.slice(3, input.value.length)}`;\n      }\n    } else if (event.key === Key.Tab && input.selectionStart <= 2 && this.hourOneFormatRequired(hour)) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      input.value = `01:${input.value.slice(3, input.value.length)}`;\n      input.setSelectionRange(3, 3);\n    } else if (event.key === Key.Backspace && input.selectionStart === input.value.length) {\n      input.value = `${input.value.slice(0, 5)} xx`;\n    } else if (event.key === Key.Tab && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n    } else if (event.key === Key.ArrowRight && input.selectionStart >= 2 && this.hourOneFormatRequired(hour)) {\n      input.value = `01:${input.value.slice(3, input.value.length)}`;\n      input.setSelectionRange(2, 2);\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      const text = (event.target as HTMLInputElement).value;\n      const hour = text.slice(0, 2);\n      this.openPanel();\n      if ((this.military && Number(text[0]) > 2) || (!this.military && Number(text[0]) > 1)) {\n        event.preventDefault();\n        (event.target as HTMLInputElement).value = `0${text}`;\n      }\n      if (!this.military) {\n        const test = text.substr(5, 4).replace(/x/g, '').trim().slice(0, 2);\n        const timePeriod = this.maskOptions.blocks.aa.enum.find((it) => it[0] === test[0]);\n        if (timePeriod) {\n          (event.target as HTMLInputElement).value = `${(event.target as HTMLInputElement).value.slice(0, 5)} ${timePeriod}`;\n        }\n        if ((event.target as HTMLInputElement).selectionStart >= 3 && this.hourOneFormatRequired(hour)) {\n          (event.target as HTMLInputElement).value = `01:${(event.target as HTMLInputElement).value.slice(\n            3,\n            (event.target as HTMLInputElement).value.length,\n          )}`;\n        }\n      }\n    }\n  }\n\n  _handleBlur(event: FocusEvent): void {\n    const text = (event.target as HTMLInputElement).value;\n    const hour: string = text.slice(0, 2);\n    if (!this.military) {\n      const test = text.substr(5, 4).replace(/x/g, '').trim().slice(0, 2);\n      const timePeriod = this.maskOptions.blocks.aa.enum.find((it) => it[0] === test[0]);\n      if (this.hourOneFormatRequired(hour)) {\n        (event.target as HTMLInputElement).value = `01:${text.slice(3, text.length)}`;\n      }\n      if (!timePeriod) {\n        (event.target as HTMLInputElement).value = `${(event.target as HTMLInputElement).value.slice(0, 5)} xx`;\n      }\n    }\n  }\n\n  _handleFocus(event: FocusEvent): void {\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  public dispatchOnChange(newValue?: any, skip: boolean = false) {\n    if (newValue !== this.value) {\n      this._onChange(newValue);\n      !skip && this.writeValue(newValue);\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n    if (value instanceof Date && this.value instanceof Date) {\n      value = new Date(value.setFullYear(this.value.getFullYear(), this.value.getMonth(), this.value.getDate()));\n    }\n    this.value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  public setValue(event: any | null): void {\n    if (event && event.date) {\n      this.dispatchOnChange(event.date);\n    }\n  }\n\n  public setValueAndClose(event: any | null): void {\n    this.setValue(event);\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearValue() {\n    this.dispatchOnChange(null);\n  }\n\n  public get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\n\n  public scrollToIndex(index: number) {\n    const element = this.overlay.overlayRef.overlayElement;\n    const list = element.querySelector('.increments');\n    const items = list.querySelectorAll('novo-list-item');\n    const item = items[index];\n    if (item) {\n      list.scrollTop = (item as HTMLElement).offsetTop;\n    }\n  }\n\n  convertTime12to24(time12h: string) {\n    const pmFormat = this.labels.timeFormatPM.toUpperCase();\n\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (['PM', pmFormat].includes(modifier)) {\n      hours = `${parseInt(hours, 10) + 12}`.padStart(2, '0');\n    }\n    return `${hours}:${minutes}`;\n  }\n\n  hourOneFormatRequired(hourInput: string): boolean {\n    return hourInput === 'h1' || hourInput === '1h';\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IMaskDirectiveModule } from 'angular-imask';\n// Vendor\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoListModule } from '../list/List.module';\nimport { NovoTimePickerElement } from './TimePicker';\nimport { NovoTimePickerInputElement } from './TimePickerInput';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IMaskDirectiveModule, TextMaskModule, NovoOverlayModule, NovoListModule],\n  declarations: [NovoTimePickerElement, NovoTimePickerInputElement],\n  exports: [NovoTimePickerElement, NovoTimePickerInputElement],\n})\nexport class NovoTimePickerModule {}\n","// NG\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\nimport { isDate, parse } from 'date-fns';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDateTimePickerInputElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-date-time-picker-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n    <novo-date-picker-input\n      [ngModel]=\"datePart\"\n      (ngModelChange)=\"updateDate($event)\"\n      [start]=\"start\"\n      [end]=\"end\"\n      [disabledDateMessage]=\"disabledDateMessage\"\n      [maskOptions]=\"maskOptions\"\n      (blurEvent)=\"handleBlur($event)\"\n      (focusEvent)=\"handleFocus($event)\"\n      [disabled]=\"disabled\"\n      [weekStart]=\"weekStart\"\n    ></novo-date-picker-input>\n    <novo-time-picker-input\n      [ngModel]=\"timePart\"\n      (ngModelChange)=\"updateTime($event)\"\n      [military]=\"military\"\n      (blurEvent)=\"handleBlur($event)\"\n      (focusEvent)=\"handleFocus($event)\"\n      [disabled]=\"disabled\"\n    ></novo-time-picker-input>\n  `,\n})\nexport class NovoDateTimePickerInputElement implements ControlValueAccessor {\n  public value: any;\n  public datePart: any;\n  public timePart: any;\n\n  /** View -> model callback called when value changes */\n  _onChange: (value: any) => void = () => {};\n\n  /** View -> model callback called when autocomplete has been touched */\n  _onTouched = () => {};\n\n  @Input()\n  name: string;\n  @Input()\n  start: Date;\n  @Input()\n  end: Date;\n  @Input()\n  placeholder: string;\n  @Input()\n  maskOptions: any;\n  @Input()\n  military: boolean = false;\n  @Input()\n  disabled: boolean = false;\n  @Input()\n  format: string;\n  @Input()\n  weekStart: number = 0;\n  @Input()\n  disabledDateMessage: string;\n  @Output()\n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  @Output()\n  changeEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  constructor(public element: ElementRef, public labels: NovoLabelService, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  writeValue(value: any): void {\n    this.datePart = isDate(value) ? parse(value) : value;\n    this.timePart = isDate(value) ? parse(value) : value;\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n  updateDate(event) {\n    this.datePart = event;\n    this.checkParts();\n  }\n  updateTime(event) {\n    this.timePart = event;\n    this.checkParts();\n  }\n\n  handleBlur(event) {\n    this.blurEvent.emit(event);\n    this.changeEvent.emit(event);\n  }\n\n  handleFocus(event) {\n    this.focusEvent.emit(event);\n  }\n\n  checkParts() {\n    try {\n      if (this.datePart instanceof Date && this.timePart instanceof Date) {\n        this.dispatchOnChange(\n          new Date(\n            this.datePart.getFullYear(),\n            this.datePart.getMonth(),\n            this.datePart.getDate(),\n            this.timePart.getHours(),\n            this.timePart.getMinutes(),\n          ),\n        );\n      } else if (this.datePart instanceof Date) {\n        this.timePart = new Date(this.datePart.getFullYear(), this.datePart.getMonth(), this.datePart.getDate(), 12, 0);\n        this.dispatchOnChange(\n          new Date(\n            this.datePart.getFullYear(),\n            this.datePart.getMonth(),\n            this.datePart.getDate(),\n            this.timePart.getHours(),\n            this.timePart.getMinutes(),\n          ),\n        );\n      } else {\n        this.dispatchOnChange(null);\n      }\n    } catch (err) {\n      // Date not valid\n      this.dispatchOnChange(null);\n    }\n  }\n\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  public dispatchOnChange(newValue?: any) {\n    if (newValue !== this.value) {\n      this._onChange(newValue);\n      this._setTriggerValue(newValue);\n    }\n  }\n  private _setTriggerValue(value: any): void {\n    this.value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  public setValue(event: any | null): void {\n    if (event && event.date) {\n      this.dispatchOnChange(event.date);\n    }\n  }\n\n  public setValueAndClose(event: any | null): void {\n    this.setValue(event);\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  public clearValue() {\n    this.dispatchOnChange(null);\n  }\n\n  public get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IMaskDirectiveModule } from 'angular-imask';\n// Vendor\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\nimport { NovoOverlayModule } from '../common/overlay/Overlay.module';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoTimePickerModule } from '../time-picker/TimePicker.module';\nimport { NovoDateTimePickerElement } from './DateTimePicker';\nimport { NovoDateTimePickerInputElement } from './DateTimePickerInput';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoDatePickerModule, NovoTimePickerModule, IMaskDirectiveModule, TextMaskModule, NovoOverlayModule],\n  declarations: [NovoDateTimePickerElement, NovoDateTimePickerInputElement],\n  exports: [NovoDateTimePickerElement, NovoDateTimePickerInputElement],\n})\nexport class NovoDateTimePickerModule {}\n","import { CdkAccordion } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, Input } from '@angular/core';\n\n/** NovoAccordion's display modes. */\nexport type NovoAccordionDisplayMode = 'default' | 'flat';\n\n/**\n * Directive for a Material Design Accordion.\n */\n@Directive({\n  selector: 'novo-accordion',\n  exportAs: 'novoAccordion',\n  host: {\n    class: 'novo-accordion',\n  },\n})\nexport class NovoAccordion extends CdkAccordion {\n  /** Whether the expansion indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean {\n    return this._hideToggle;\n  }\n  set hideToggle(show: boolean) {\n    this._hideToggle = coerceBooleanProperty(show);\n  }\n  private _hideToggle: boolean = false;\n\n  /**\n   * The display mode used for all expansion panels in the accordion. Currently two display\n   * modes exist:\n   *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n   *     panel at a different elevation from the reset of the accordion.\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\n   *     elevation.\n   */\n  @Input()\n  displayMode: NovoAccordionDisplayMode = 'default';\n}\n","import { animate, animateChild, AnimationTriggerMetadata, group, query, state, style, transition, trigger } from '@angular/animations';\n\n/** Time and timing curve for expansion panel animations. */\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\n/** Animations used by the Material expansion panel. */\nexport const novoExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed', style({ transform: 'rotate(0deg)' })),\n    state('expanded', style({ transform: 'rotate(180deg)' })),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [\n    state(\n      'collapsed',\n      style({\n        height: '{{collapsedHeight}}',\n      }),\n      {\n        params: { collapsedHeight: '48px' },\n      },\n    ),\n    state(\n      'expanded',\n      style({\n        height: '{{expandedHeight}}',\n      }),\n      {\n        params: { expandedHeight: '56px' },\n      },\n    ),\n    transition(\n      'expanded <=> collapsed',\n      group([query('@indicatorRotate', animateChild(), { optional: true }), animate(EXPANSION_PANEL_ANIMATION_TIMING)]),\n    ),\n  ]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed', style({ height: '0px', visibility: 'hidden' })),\n    state('expanded', style({ height: '*', visibility: 'visible' })),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ]),\n};\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[matExpansionPanelContent]',\n})\nexport class NovoExpansionPanelContent {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\nimport { NovoAccordion } from './accordion';\nimport { novoExpansionAnimations } from './expansion-animations';\nimport { NovoExpansionPanelContent } from './expansion-panel-content';\n\n/** NovoExpansionPanel's states. */\nexport type NovoExpansionPanelState = 'expanded' | 'collapsed';\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n\n/**\n * `<novo-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the NovoAccordion directive attached.\n */\n@Component({\n  styleUrls: ['./expansion-panel.scss'],\n  selector: 'novo-expansion-panel',\n  exportAs: 'novoExpansionPanel',\n  templateUrl: './expansion-panel.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [novoExpansionAnimations.bodyExpansion],\n  host: {\n    class: 'novo-expansion-panel',\n    '[class.novo-expanded]': 'expanded',\n    '[class.novo-expansion-panel-spacing]': '_hasSpacing()',\n    '[class.novo-expansion-panel-padding]': 'padding',\n  },\n})\nexport class NovoExpansionPanel extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\n  /** Whether the toggle indicator should be hidden. */\n  @Input()\n  get hideToggle(): boolean {\n    return this._hideToggle;\n  }\n  set hideToggle(value: boolean) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\n  private _hideToggle = false;\n\n  @Input()\n  get padding(): boolean {\n    return this._padding;\n  }\n  set padding(value: boolean) {\n    this._padding = coerceBooleanProperty(value);\n  }\n  private _padding = true;\n\n  @Output()\n  opened: EventEmitter<void> = new EventEmitter();\n  @Output()\n  closed: EventEmitter<void> = new EventEmitter();\n  @Output()\n  expandedChange: EventEmitter<boolean> = new EventEmitter();\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  /** Optionally defined accordion the expansion panel belongs to. */\n  accordion: NovoAccordion;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(NovoExpansionPanelContent)\n  _lazyContent: NovoExpansionPanelContent;\n\n  /** Portal holding the user's content. */\n  _portal: TemplatePortal;\n\n  /** ID for the associated header element. Used for a11y labelling. */\n  _headerId = `novo-expansion-panel-header-${uniqueId++}`;\n\n  constructor(\n    @Optional()\n    @Host()\n    accordion: NovoAccordion,\n    _changeDetectorRef: ChangeDetectorRef,\n    _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n  ) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this.accordion = accordion;\n  }\n\n  /** Whether the expansion indicator should be hidden. */\n  _getHideToggle(): boolean {\n    if (this.accordion) {\n      return this.accordion.hideToggle;\n    }\n    return this.hideToggle;\n  }\n\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\n  _hasSpacing(): boolean {\n    if (this.accordion) {\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n    return false;\n  }\n\n  /** Gets the expanded state string. */\n  _getExpandedState(): NovoExpansionPanelState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened\n        .pipe(\n          startWith(null),\n          filter(() => this.expanded && !this._portal),\n          take(1),\n        )\n        .subscribe(() => {\n          this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._inputChanges.complete();\n  }\n\n  _bodyAnimation(event: AnimationEvent) {\n    const classList = event.element.classList;\n    const cssClass = 'novo-expanded';\n    const { phaseName, toState } = event;\n\n    // Toggle the body's `overflow: hidden` class when closing starts or when expansion ends in\n    // order to prevent the cases where switching too early would cause the animation to jump.\n    // Note that we do it directly on the DOM element to avoid the slight delay that comes\n    // with doing it via change detection.\n    if (phaseName === 'done' && toState === 'expanded') {\n      classList.add(cssClass);\n    } else if (phaseName === 'start' && toState === 'collapsed') {\n      classList.remove(cssClass);\n    }\n  }\n}\n\n@Directive({\n  selector: 'novo-action-row',\n  host: {\n    class: 'novo-action-row',\n  },\n})\nexport class NovoExpansionPanelActionRow {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Host,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Key } from '../../utils';\nimport { novoExpansionAnimations } from './expansion-animations';\nimport { NovoExpansionPanel } from './expansion-panel';\n\n/**\n * `<novo-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<novo-expansion-panel>`.\n */\n@Component({\n  selector: 'novo-expansion-panel-header',\n  styleUrls: ['./expansion-panel-header.scss'],\n  templateUrl: './expansion-panel-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [novoExpansionAnimations.indicatorRotate, novoExpansionAnimations.expansionHeaderHeight],\n  host: {\n    class: 'novo-expansion-panel-header',\n    role: 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': '_isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '[class.novo-expanded]': '_isExpanded()',\n    '(click)': '_toggle()',\n    '(keydown)': '_keydown($event)',\n    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`,\n  },\n})\nexport class NovoExpansionPanelHeader implements OnDestroy {\n  private _parentChangeSubscription = Subscription.EMPTY;\n\n  constructor(\n    @Host() public panel: NovoExpansionPanel,\n    private _element: ElementRef,\n    // private _focusMonitor: FocusMonitor,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to  subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(\n      panel.opened,\n      panel.closed,\n      panel._inputChanges.pipe(filter((changes) => !!(changes.hideToggle || changes.disabled))),\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n\n    // _focusMonitor.monitor(_element.nativeElement);\n  }\n\n  /** Height of the header while the panel is expanded. */\n  @Input()\n  expandedHeight: string;\n\n  /** Height of the header while the panel is collapsed. */\n  @Input()\n  collapsedHeight: string;\n\n  /** Toggles the expanded state of the panel. */\n  _toggle(): void {\n    this.panel.toggle();\n  }\n\n  /** Gets whether the panel is expanded. */\n  _isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  /** Gets the expanded state string of the panel. */\n  _getExpandedState(): string {\n    return this.panel._getExpandedState();\n  }\n\n  /** Gets the panel id. */\n  _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  /** Gets whether the expand indicator should be shown. */\n  _showToggle(): boolean {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n\n  /** Handle keydown event calling to toggle() if appropriate. */\n  _keydown(event: KeyboardEvent) {\n    switch (event.key) {\n      // Toggle for space and enter keys.\n      case Key.Space:\n      case Key.Enter:\n        event.preventDefault();\n        this._toggle();\n        break;\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    // this._focusMonitor.stopMonitoring(this._element.nativeElement);\n  }\n}\n\n/**\n * `<novo-panel-description>`\n *\n * This direction is to be used inside of the NovoExpansionPanelHeader component.\n */\n@Directive({\n  selector: 'novo-panel-description',\n  host: {\n    class: 'novo-expansion-panel-header-description',\n  },\n})\nexport class NovoExpansionPanelDescription {}\n\n/**\n * `<novo-panel-title>`\n *\n * This direction is to be used inside of the NovoExpansionPanelHeader component.\n */\n@Directive({\n  selector: 'novo-panel-title',\n  host: {\n    class: 'novo-expansion-panel-header-title',\n  },\n})\nexport class NovoExpansionPanelTitle {}\n","import { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoAccordion } from './accordion';\nimport { NovoExpansionPanel, NovoExpansionPanelActionRow } from './expansion-panel';\nimport { NovoExpansionPanelContent } from './expansion-panel-content';\nimport { NovoExpansionPanelDescription, NovoExpansionPanelHeader, NovoExpansionPanelTitle } from './expansion-panel-header';\n\n@NgModule({\n  imports: [CommonModule, CdkAccordionModule, PortalModule],\n  exports: [\n    NovoAccordion,\n    NovoExpansionPanel,\n    NovoExpansionPanelActionRow,\n    NovoExpansionPanelHeader,\n    NovoExpansionPanelTitle,\n    NovoExpansionPanelDescription,\n    NovoExpansionPanelContent,\n  ],\n  declarations: [\n    NovoAccordion,\n    NovoExpansionPanel,\n    NovoExpansionPanelActionRow,\n    NovoExpansionPanelHeader,\n    NovoExpansionPanelTitle,\n    NovoExpansionPanelDescription,\n    NovoExpansionPanelContent,\n  ],\n})\nexport class NovoExpansionModule {}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { NovoModalContainerComponent } from './modal-container.component';\n\n/**\n * Params that can be passed to the Modal\n */\n\nexport interface ModalParams {\n  [propName: string]: any;\n}\nexport class NovoModalParams implements ModalParams {}\n\nexport class NovoModalRef<T = any, R = any> {\n  constructor(public component: any, public params: T, private overlayRef: OverlayRef) {}\n\n  private _beforeClose = new Subject<R>();\n  private _afterClosed = new Subject<R>();\n\n  componentInstance: NovoModalContainerComponent;\n  isClosed: boolean = false;\n\n  // Gets a promise that is resolved when the dialog is closed.\n  get onClosed(): Promise<R> {\n    return this._afterClosed.toPromise();\n  }\n\n  afterClosed(): Observable<R> {\n    return this._afterClosed.asObservable();\n  }\n\n  beforeClose(): Observable<R> {\n    return this._beforeClose.asObservable();\n  }\n\n  close(result?: R): void {\n    // Listen for animation 'start' events\n    this.componentInstance.animationStateChanged\n      .pipe(\n        filter((event) => event.phaseName === 'start'),\n        take(1),\n      )\n      .subscribe(() => {\n        this._beforeClose.next(result);\n        this._beforeClose.complete();\n        this.overlayRef.detachBackdrop();\n      });\n\n    // Listen for animation 'done' events\n    this.componentInstance.animationStateChanged\n      .pipe(\n        filter((event) => event.phaseName === 'done' && event.toState === 'leave'),\n        take(1),\n      )\n      .subscribe(() => {\n        this.isClosed = true;\n        this.overlayRef.dispose();\n        this._afterClosed.next(result);\n        this._afterClosed.complete();\n        // Make sure to also clear the reference to the\n        // component instance to avoid memory leaks\n        this.componentInstance = null;\n      });\n\n    // Start exit animation\n    this.componentInstance.startExitAnimation();\n  }\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport const zoomInOut = trigger('zoomInOut', [\n  transition('void => *', [style({ transform: 'scale3d(.3, .3, .3)' }), animate(50)]),\n  transition('* => void', [animate(50, style({ transform: 'scale3d(.0, .0, .0)' }))]),\n]);\n","import { AnimationEvent } from '@angular/animations';\nimport { ComponentPortal, Portal } from '@angular/cdk/portal';\nimport { Component, EventEmitter, Injector, Output } from '@angular/core';\nimport { NovoModalRef } from './modal-ref';\nimport { zoomInOut } from './modal.animation';\n\n@Component({\n  selector: 'novo-modal-container',\n  templateUrl: './modal-container.component.html',\n  styleUrls: ['./modal-container.component.scss'],\n  animations: [zoomInOut],\n})\nexport class NovoModalContainerComponent {\n  @Output() animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  animationState: 'void' | 'enter' | 'leave' = 'enter';\n\n  component: Portal<any>;\n\n  constructor(private injector: Injector, private modalRef: NovoModalRef) {\n    this.component = new ComponentPortal(modalRef.component, null, injector);\n  }\n\n  onAnimationStart(event: AnimationEvent) {\n    this.animationStateChanged.emit(event);\n  }\n\n  onAnimationDone(event: AnimationEvent) {\n    this.animationStateChanged.emit(event);\n  }\n\n  startExitAnimation() {\n    this.animationState = 'leave';\n  }\n}\n","// NG2\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, Injector, ViewContainerRef } from '@angular/core';\nimport { NovoModalContainerComponent } from './modal-container.component';\n// APP\nimport { NovoModalParams, NovoModalRef } from './modal-ref';\n\ninterface ModalConfig {\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n}\n\nconst DEFAULT_CONFIG: ModalConfig = {\n  hasBackdrop: true,\n  backdropClass: 'modal-overlay-backdrop',\n  panelClass: 'modal-overlay-panel',\n};\n\n@Injectable({ providedIn: 'root' })\nexport class NovoModalService {\n  _parentViewContainer: ViewContainerRef;\n\n  set parentViewContainer(view: ViewContainerRef) {\n    console.warn('parentViewContainer is deprecated');\n    this._parentViewContainer = view;\n  }\n\n  constructor(private injector: Injector, private overlay: Overlay) {}\n\n  open<T extends Record<string, any>>(component, params: Partial<T> = {}) {\n    // Override default configuration\n    const modalConfig = DEFAULT_CONFIG;\n\n    // Returns an OverlayRef which is a PortalHost\n    const overlayRef = this.createOverlay(modalConfig);\n\n    // Instantiate remote control\n    const modalRef = new NovoModalRef<typeof params>(component, params, overlayRef);\n\n    const overlayComponent = this.attachModalContainer(NovoModalContainerComponent, overlayRef, modalConfig, modalRef);\n\n    // Pass the instance of the overlay component to the remote control\n    modalRef.componentInstance = overlayComponent;\n\n    overlayRef.backdropClick().subscribe(() => modalRef.close());\n\n    return modalRef;\n  }\n\n  private createOverlay(config: ModalConfig) {\n    const overlayConfig = this.getOverlayConfig(config);\n    return this.overlay.create(overlayConfig);\n  }\n\n  private attachModalContainer(component, overlayRef: OverlayRef, config: ModalConfig, modalRef: NovoModalRef) {\n    const injector = this.createInjector(config, modalRef);\n    const containerPortal = new ComponentPortal(component, null, injector);\n    const containerRef: ComponentRef<any> = overlayRef.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private createInjector(config: ModalConfig, modalRef: NovoModalRef): PortalInjector {\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(NovoModalRef, modalRef);\n    // Support backwards compatability\n    injectionTokens.set(NovoModalParams, modalRef.params);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n  private getOverlayConfig(config: ModalConfig): OverlayConfig {\n    const positionStrategy = this.overlay.position().global().centerHorizontally().centerVertically();\n\n    const overlayConfig = new OverlayConfig({\n      positionStrategy,\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n    });\n\n    return overlayConfig;\n  }\n}\n","// NG2\nimport { Component } from '@angular/core';\nimport { NovoLabelService } from '../../services/novo-label-service';\n// APP\nimport { NovoModalParams, NovoModalRef } from '../modal/modal-ref';\n\n@Component({\n  selector: 'control-confirm-modal',\n  template: `\n    <novo-notification type=\"warning\" [attr.data-automation-id]=\"'field-interaction-modal-' + params['key']\">\n      <h1>{{ labels.confirmChangesModalMessage }}</h1>\n      <h2 *ngIf=\"!params['message']\">\n        <label>{{ params['label'] }}:</label> {{ params['oldValue'] }} <i class=\"bhi-arrow-right\"></i> {{ params['newValue'] }}\n      </h2>\n      <h2 *ngIf=\"params['message']\">{{ params['message'] }}</h2>\n      <novo-button theme=\"standard\" (click)=\"close(false)\" [attr.data-automation-id]=\"'field-interaction-modal-cancel' + params['key']\">\n        {{ labels.cancel }}\n      </novo-button>\n      <novo-button\n        theme=\"primary\"\n        icon=\"check\"\n        (click)=\"close(true)\"\n        autofocus\n        [attr.data-automation-id]=\"'field-interaction-modal-save-' + params['key']\"\n      >\n        {{ labels.save }}\n      </novo-button>\n    </novo-notification>\n  `,\n})\nexport class ControlConfirmModal {\n  constructor(private modalRef: NovoModalRef, public params: NovoModalParams, public labels: NovoLabelService) {}\n\n  public close(result: boolean): void {\n    this.modalRef.close(result);\n  }\n}\n\n@Component({\n  selector: 'control-prompt-modal',\n  template: `\n    <novo-notification type=\"warning\" [attr.data-automation-id]=\"'field-interaction-modal-' + params['key']\">\n      <h1>{{ labels.promptModalMessage }}</h1>\n      <p *ngFor=\"let change of params['changes']\">{{ change }}</p>\n      <novo-button theme=\"standard\" (click)=\"close(false)\" [attr.data-automation-id]=\"'field-interaction-modal-cancel' + params['key']\">\n        {{ labels.cancel }}\n      </novo-button>\n      <novo-button\n        theme=\"primary\"\n        icon=\"check\"\n        (click)=\"close(true)\"\n        autofocus\n        [attr.data-automation-id]=\"'field-interaction-modal-yes-' + params['key']\"\n      >\n        {{ labels.yes }}\n      </novo-button>\n    </novo-notification>\n  `,\n})\nexport class ControlPromptModal {\n  constructor(private modalRef: NovoModalRef, public params: NovoModalParams, public labels: NovoLabelService) {}\n\n  public close(result: boolean): void {\n    this.modalRef.close(result);\n  }\n}\n","// NG2\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n// Vendor\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { AppBridge } from '../../utils/app-bridge/AppBridge';\nimport { FormUtils } from '../../utils/form-utils/FormUtils';\n// APP\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoModalService } from '../modal/modal.service';\nimport { EntityPickerResults } from '../picker/extras/entity-picker-results/EntityPickerResults';\nimport { NovoToastService, ToastOptions } from '../toast/ToastService';\nimport { CustomHttp, ModifyPickerConfigArgs, OptionsFunction } from './FieldInteractionApiTypes';\nimport { ControlConfirmModal, ControlPromptModal } from './FieldInteractionModals';\nimport { NovoControlConfig } from './FormControls';\nimport { IFieldInteractionEvent, NovoFieldset, ResultsTemplateType } from './FormInterfaces';\nimport { NovoFormControl } from './NovoFormControl';\nimport { NovoFormGroup } from './NovoFormGroup';\n\nclass CustomHttpImpl implements CustomHttp {\n  url: string;\n  options;\n  mapFn = (x) => x;\n\n  constructor(private http: HttpClient) {}\n\n  get(url: string, options?): CustomHttp {\n    this.url = url;\n    this.options = options;\n    return this;\n  }\n\n  map(mapFn): CustomHttp {\n    this.mapFn = mapFn;\n    return this;\n  }\n\n  subscribe(resolve, reject?): Subscription {\n    return this.http.get(this.url, this.options).pipe(map(this.mapFn)).subscribe(resolve, reject);\n  }\n}\n\n@Injectable()\nexport class FieldInteractionApi {\n  private _globals;\n  form: NovoFormGroup | any;\n  private _currentKey: string;\n  appBridge: AppBridge;\n  private asyncBlockTimeout;\n  private _isInvokedOnInit = false;\n\n  static FIELD_POSITIONS = {\n    ABOVE_FIELD: 'ABOVE_FIELD',\n    BELOW_FIELD: 'BELOW_FIELD',\n    TOP_OF_FORM: 'TOP_OF_FORM',\n    BOTTOM_OF_FORM: 'BOTTOM_OF_FORM',\n  };\n\n  constructor(\n    private toaster: NovoToastService,\n    private modalService: NovoModalService,\n    private formUtils: FormUtils,\n    private http: HttpClient,\n    private labels: NovoLabelService,\n  ) {}\n\n  get associations(): object {\n    return this.form.hasOwnProperty('associations') ? this.form.associations : {};\n  }\n\n  get currentEntity(): string {\n    return this.form.hasOwnProperty('currentEntity') ? this.form.currentEntity : undefined;\n  }\n\n  get currentEntityId(): string {\n    return this.form.hasOwnProperty('currentEntityId') ? this.form.currentEntityId : undefined;\n  }\n\n  get isEdit(): boolean {\n    return this.form.hasOwnProperty('edit') ? this.form.edit : false;\n  }\n\n  get isAdd(): boolean {\n    return this.form.hasOwnProperty('edit') ? !this.form.edit : false;\n  }\n\n  set globals(globals) {\n    this._globals = globals;\n  }\n\n  get globals() {\n    return this._globals;\n  }\n\n  set currentKey(key: string) {\n    this._currentKey = key;\n  }\n\n  get currentKey(): string {\n    return this._currentKey;\n  }\n\n  set isInvokedOnInit(isOnInit: boolean) {\n    this._isInvokedOnInit = isOnInit;\n  }\n\n  get isInvokedOnInit(): boolean {\n    return this._isInvokedOnInit;\n  }\n\n  isActiveControlValid(): boolean {\n    return !!this.getValue(this.currentKey);\n  }\n\n  getActiveControl(): NovoFormControl {\n    return this.getControl(this.currentKey);\n  }\n\n  getActiveKey(): string {\n    return this.currentKey;\n  }\n\n  getActiveValue() {\n    return this.getValue(this.currentKey);\n  }\n\n  getActiveInitialValue() {\n    return this.getInitialValue(this.currentKey);\n  }\n\n  getFieldSet(key: string, otherForm?: NovoFormGroup): NovoFieldset {\n    if (!key) {\n      console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n      return null;\n    }\n\n    const form = otherForm || this.form;\n    const fieldSet = form.fieldsets.find((fs: NovoFieldset) => fs.key && fs.key.toLowerCase() === key.toLowerCase());\n    if (!fieldSet) {\n      console.error('[FieldInteractionAPI] - could not find a fieldset in the form by the key --', key); // tslint:disable-line\n      return null;\n    }\n\n    return fieldSet as NovoFieldset;\n  }\n\n  getControl(key: string, otherForm?: NovoFormGroup) {\n    if (!key) {\n      console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n      return null;\n    }\n\n    const form = otherForm || this.form;\n    const control = form.controls[key] as NovoFormControl;\n    if (!control) {\n      console.error('[FieldInteractionAPI] - could not find a control in the form by the key --', key); // tslint:disable-line\n      return null;\n    }\n\n    return control;\n  }\n\n  getFormGroupArray(key: string, otherForm?: NovoFormGroup): NovoFormGroup[] {\n    if (!key) {\n      console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n      return null;\n    }\n\n    const form = otherForm || this.form;\n    const formArray = form.controls[key] as FormArray;\n    if (!formArray || !formArray.controls) {\n      console.error('[FieldInteractionAPI] - could not find a form array in the form by the key --', key); // tslint:disable-line\n      return null;\n    }\n\n    return formArray.controls as NovoFormGroup[] | any;\n  }\n\n  getValue(key: string, otherForm?: NovoFormGroup) {\n    const control = this.getControl(key, otherForm);\n    if (control) {\n      return control.value;\n    }\n    return null;\n  }\n\n  getRawValue(key: string, otherForm?: NovoFormGroup) {\n    const control = this.getControl(key, otherForm);\n    if (control) {\n      return control.rawValue;\n    }\n    return null;\n  }\n\n  getInitialValue(key: string, otherForm?: NovoFormGroup) {\n    const control = this.getControl(key, otherForm);\n    if (control) {\n      return control.initialValue;\n    }\n    return null;\n  }\n\n  setValue(\n    key: string,\n    value,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.setValue(value, options);\n      this.triggerEvent({ controlKey: key, prop: 'value', value }, otherForm);\n    }\n  }\n\n  patchValue(\n    key: string,\n    value,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.setValue(value, options);\n      this.triggerEvent({ controlKey: key, prop: 'value', value }, otherForm);\n    }\n  }\n\n  setReadOnly(key: string, isReadOnly: boolean, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.setReadOnly(isReadOnly);\n      this.triggerEvent({ controlKey: key, prop: 'readOnly', value: isReadOnly }, otherForm);\n    }\n  }\n\n  setRequired(key: string, required: boolean, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.setRequired(required);\n      this.triggerEvent({ controlKey: key, prop: 'required', value: required }, otherForm);\n    }\n  }\n\n  highlight(key: string, isHighlighted: boolean, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.highlighted = isHighlighted;\n      this.triggerEvent({ controlKey: key, prop: 'highlight', value: isHighlighted }, otherForm);\n    }\n  }\n\n  hide(key: string, clearValue = true, otherForm?: NovoFormGroup) {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.hide(clearValue);\n      this.disable(key, { emitEvent: false });\n      this.triggerEvent({ controlKey: key, prop: 'hidden', value: true }, otherForm);\n    }\n    return control;\n  }\n\n  show(key: string, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.show();\n      this.enable(key, { emitEvent: false });\n      this.triggerEvent({ controlKey: key, prop: 'hidden', value: false }, otherForm);\n    }\n  }\n\n  hideFieldSetHeader(key: string): void {\n    const fieldSet = this.getFieldSet(key);\n    if (fieldSet) {\n      fieldSet.hidden = true;\n    }\n  }\n\n  showFieldSetHeader(key: string): void {\n    const fieldSet = this.getFieldSet(key);\n    if (fieldSet) {\n      fieldSet.hidden = false;\n    }\n  }\n\n  disable(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.disable(options);\n      this.triggerEvent({ controlKey: key, prop: 'readOnly', value: true }, otherForm);\n    }\n  }\n\n  enable(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.enable(options);\n      this.triggerEvent({ controlKey: key, prop: 'readOnly', value: false }, otherForm);\n    }\n  }\n\n  markAsInvalid(key: string, validationMessage?: string, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control) {\n      if (control && !control.restrictFieldInteractions) {\n        control.markAsInvalid(validationMessage);\n        this.triggerEvent({ controlKey: key, prop: 'errors', value: validationMessage }, otherForm);\n      }\n    }\n  }\n\n  markAsValid(key: string, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control) {\n      if (control && !control.restrictFieldInteractions) {\n        control.markAsValid();\n        this.triggerEvent({ controlKey: key, prop: 'errors', value: null }, otherForm);\n      }\n    }\n  }\n\n  markAsDirty(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsDirty(options);\n    }\n  }\n\n  markAsPending(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsPending(options);\n    }\n  }\n\n  markAsPristine(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsPristine(options);\n    }\n  }\n\n  markAsTouched(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsTouched(options);\n    }\n  }\n\n  markAsUntouched(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsUntouched(options);\n    }\n  }\n\n  updateValueAndValidity(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    },\n    otherForm?: NovoFormGroup,\n  ): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.updateValueAndValidity(options);\n    }\n  }\n\n  displayToast(toastConfig: ToastOptions): void {\n    if (this.toaster) {\n      this.toaster.alert(toastConfig);\n    }\n  }\n\n  displayTip(key: string, tip: string, icon?: string, allowDismiss?: boolean, sanitize?: boolean, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.tipWell = {\n        tip,\n        icon,\n        button: allowDismiss,\n        sanitize: sanitize !== false, // defaults to true when undefined\n      };\n      this.triggerEvent({ controlKey: key, prop: 'tipWell', value: tip }, otherForm);\n    }\n  }\n\n  clearTip(key: string, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.tipWell = null;\n      this.triggerEvent({ controlKey: key, prop: 'tipWell', value: null }, otherForm);\n    }\n  }\n\n  setTooltip(key: string, tooltip: string, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control.tooltip = tooltip;\n      if (tooltip.length >= 40 && tooltip.length <= 400) {\n        control.tooltipSize = 'large';\n        control.tooltipPreline = true;\n      } else if (tooltip.length > 400) {\n        control.tooltipSize = 'extra-large';\n      }\n      this.triggerEvent({ controlKey: key, prop: 'tooltip', value: tooltip }, otherForm);\n    }\n  }\n\n  confirmChanges(key: string, message?: string): Promise<boolean> {\n    const history = this.getProperty(key, 'valueHistory');\n    const oldValue = history[history.length - 2];\n    const newValue = this.getValue(key);\n    const label = this.getProperty(key, 'label');\n    (document.activeElement as any).blur();\n    return this.modalService.open(ControlConfirmModal, { oldValue, newValue, label, message, key }).onClosed.then((result) => {\n      if (!result) {\n        this.setValue(key, oldValue, { emitEvent: false });\n      }\n      return true;\n    });\n  }\n\n  promptUser(key: string, changes: string[]): Promise<boolean> {\n    (document.activeElement as any).blur();\n    return this.modalService.open(ControlPromptModal, { changes, key }).onClosed;\n  }\n\n  setProperty(key: string, prop: string, value, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      control[prop] = value;\n      this.triggerEvent({ controlKey: key, prop, value }, otherForm);\n    }\n  }\n\n  getProperty(key: string, prop: string, otherForm?: NovoFormGroup) {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      return control[prop];\n    }\n    return null;\n  }\n\n  isValueEmpty(key: string): boolean {\n    const value = this.getValue(key);\n    return Helpers.isEmpty(value);\n  }\n\n  isValueBlank(key: string): boolean {\n    const value = this.getValue(key);\n    return Helpers.isBlank(value);\n  }\n\n  hasField(key: string, otherForm?: NovoFormGroup): boolean {\n    const form = otherForm || this.form;\n    return !!form.controls[key];\n  }\n\n  addStaticOption(key: string, newOption: any, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    let optionToAdd = newOption;\n    let isUnique = true;\n    if (control && !control.restrictFieldInteractions) {\n      let currentOptions = this.getProperty(key, 'options');\n      if (!currentOptions || !currentOptions.length) {\n        const config = this.getProperty(key, 'config');\n        if (config) {\n          currentOptions = config.options;\n          if (currentOptions && Array.isArray(currentOptions)) {\n            if (currentOptions[0].value && !optionToAdd.value) {\n              optionToAdd = { value: newOption, label: newOption };\n            }\n            config.options = [...currentOptions, optionToAdd];\n            this.setProperty(key, 'config', config);\n          }\n        }\n      } else {\n        if (currentOptions[0].value && !optionToAdd.value) {\n          optionToAdd = { value: newOption, label: newOption };\n        }\n        // Ensure duplicate values are not added\n        currentOptions.forEach((option) => {\n          if ((option.value && option.value === optionToAdd.value) || option === optionToAdd) {\n            isUnique = false;\n          }\n        });\n        if (isUnique) {\n          this.setProperty(key, 'options', [...currentOptions, optionToAdd]);\n        }\n      }\n      if (isUnique) {\n        this.triggerEvent({ controlKey: key, prop: 'options', value: [...currentOptions, optionToAdd] }, otherForm);\n      }\n    }\n  }\n\n  removeStaticOption(key: string, optionToRemove: any, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      let currentOptions = this.getProperty(key, 'options', otherForm);\n      if (!currentOptions || !currentOptions.length) {\n        const config = this.getProperty(key, 'config', otherForm);\n        if (config) {\n          currentOptions = config.options;\n          if (currentOptions && Array.isArray(currentOptions)) {\n            let index = -1;\n            currentOptions.forEach((opt, i) => {\n              if (opt.value || opt.label) {\n                if (opt.value === optionToRemove || opt.label === optionToRemove) {\n                  index = i;\n                }\n              } else {\n                if (opt === optionToRemove) {\n                  index = i;\n                }\n              }\n            });\n            if (index !== -1) {\n              currentOptions.splice(index, 1);\n            }\n            config.options = [...currentOptions];\n            this.setProperty(key, 'config', config, otherForm);\n          }\n        }\n      } else {\n        let index = -1;\n        currentOptions.forEach((opt, i) => {\n          if (opt.value || opt.label) {\n            if (opt.value === optionToRemove || opt.label === optionToRemove) {\n              index = i;\n            }\n          } else {\n            if (opt === optionToRemove) {\n              index = i;\n            }\n          }\n        });\n        if (index !== -1) {\n          currentOptions.splice(index, 1);\n        }\n        this.setProperty(key, 'options', [...currentOptions], otherForm);\n      }\n      this.triggerEvent({ controlKey: key, prop: 'options', value: control.options }, otherForm);\n    }\n  }\n\n  modifyPickerConfig(\n    key: string,\n    config: {\n      format?: string;\n      optionsUrl?: string;\n      optionsUrlBuilder?: Function;\n      optionsPromise?;\n      options?: any[];\n      resultsTemplateType?: ResultsTemplateType;\n    },\n    mapper?,\n  ): void {\n    // call another method to avoid a breaking change but still enable stricter types\n    this.mutatePickerConfig(key, config as ModifyPickerConfigArgs, mapper);\n  }\n\n  mutatePickerConfig(key: string, args: ModifyPickerConfigArgs, mapper?: (item: unknown) => unknown, otherForm?: NovoFormGroup): void {\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      const { minSearchLength, enableInfiniteScroll, filteredOptionsCreator, format, getLabels, emptyPickerMessage } = control.config;\n      const optionsConfig = this.getOptionsConfig(args, mapper, filteredOptionsCreator, format);\n\n      const newConfig: NovoControlConfig['config'] = {\n        ...(emptyPickerMessage && { emptyPickerMessage }),\n        ...(Number.isInteger(minSearchLength) && { minSearchLength }),\n        ...(enableInfiniteScroll && { enableInfiniteScroll }),\n        ...(filteredOptionsCreator && { filteredOptionsCreator }),\n        ...(getLabels && { getLabels }),\n        ...(optionsConfig && optionsConfig),\n        resultsTemplate:\n          control.config.resultsTemplate || ('resultsTemplateType' in args && this.getAppropriateResultsTemplate(args.resultsTemplateType)),\n      };\n\n      this.setProperty(key, 'config', newConfig);\n      this.triggerEvent({ controlKey: key, prop: 'pickerConfig', value: args }, otherForm);\n    }\n  }\n\n  addPropertiesToPickerConfig(key: string, properties: { [key: string]: unknown }, otherForm?: NovoFormGroup) {\n    const control = this.getControl(key, otherForm);\n    if (!control || control.restrictFieldInteractions) {\n      return;\n    }\n\n    const config = {\n      ...control.config,\n      ...properties,\n    };\n\n    this.setProperty(key, 'config', config);\n    this.triggerEvent({ controlKey: key, prop: 'pickerConfig', value: properties }, otherForm);\n  }\n  getOptionsConfig = (\n    args: ModifyPickerConfigArgs,\n    mapper?: (item: unknown) => unknown,\n    filteredOptionsCreator?: (where: string) => (query: string) => Promise<unknown[]>,\n    pickerConfigFormat?: string,\n  ): undefined | { options: unknown[] } | { options: OptionsFunction; format?: string } => {\n    if (filteredOptionsCreator || 'optionsUrl' in args || 'optionsUrlBuilder' in args || 'optionsPromise' in args) {\n      const format = ('format' in args && args.format) || pickerConfigFormat;\n      return {\n        options: this.createOptionsFunction(args, mapper, filteredOptionsCreator),\n        ...('emptyPickerMessage' in args && { emptyPickerMessage: args.emptyPickerMessage }),\n        ...(format && { format }),\n      };\n    } else if ('options' in args && Array.isArray(args.options)) {\n      return {\n        options: [...args.options],\n      };\n    } else {\n      return undefined;\n    }\n  };\n\n  private getAppropriateResultsTemplate(resultsTemplateType: ResultsTemplateType) {\n    switch (resultsTemplateType) {\n      case 'entity-picker':\n        return EntityPickerResults;\n      default:\n        return undefined;\n    }\n  }\n\n  createOptionsFunction =\n    (\n      config: ModifyPickerConfigArgs,\n      mapper?: (item: unknown) => unknown,\n      filteredOptionsCreator?: (where?: string) => (query: string, page?: number) => Promise<unknown[]>,\n    ): ((query: string) => Promise<unknown[]>) =>\n    (query: string, page?: number) => {\n      if ('optionsPromise' in config && config.optionsPromise) {\n        return config.optionsPromise(query, new CustomHttpImpl(this.http), page);\n      } else if (('optionsUrlBuilder' in config && config.optionsUrlBuilder) || ('optionsUrl' in config && config.optionsUrl)) {\n        return new Promise((resolve, reject) => {\n          const url = 'optionsUrlBuilder' in config ? config.optionsUrlBuilder(query) : `${config.optionsUrl}?filter=${query || ''}`;\n          this.http\n            .get(url)\n            .pipe(\n              map((results: unknown[]) => {\n                if (mapper) {\n                  return results.map(mapper);\n                }\n                return results;\n              }),\n            )\n            .subscribe(resolve, reject);\n        });\n      } else if (filteredOptionsCreator) {\n        if ('where' in config) {\n          return filteredOptionsCreator(config.where)(query, page);\n        } else {\n          return filteredOptionsCreator()(query, page);\n        }\n      }\n    };\n\n  setLoading(key: string, loading: boolean, otherForm?: NovoFormGroup) {\n    const form = otherForm || this.form;\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      if (loading) {\n        form.controls[key].fieldInteractionloading = true;\n        control.setErrors({ loading: true });\n        // History\n        clearTimeout(this.asyncBlockTimeout);\n        this.asyncBlockTimeout = setTimeout(() => {\n          this.setLoading(key, false);\n          this.displayTip(key, this.labels.asyncFailure, 'info', false);\n          this.setProperty(key, '_displayedAsyncFailure', true);\n        }, 10000);\n      } else {\n        form.controls[key].fieldInteractionloading = false;\n        clearTimeout(this.asyncBlockTimeout);\n        control.setErrors({ loading: null });\n        control.updateValueAndValidity({ emitEvent: false });\n        if (this.getProperty(key, '_displayedAsyncFailure')) {\n          this.setProperty(key, 'tipWell', null);\n        }\n      }\n      this.triggerEvent({ controlKey: key, prop: 'loading', value: loading }, otherForm);\n    }\n  }\n\n  addControl(\n    key: string,\n    metaForNewField: {\n      key?: string;\n      type?: string;\n      name?: string;\n      label?: string;\n      interactions?: Array<{ event?: string; invokeOnInit?: boolean; script? }>;\n    },\n    position: string = FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD,\n    initialValue?,\n    otherForm?: NovoFormGroup,\n  ): void {\n    if (!metaForNewField.key && !metaForNewField.name) {\n      console.error('[FieldInteractionAPI] - missing \"key\" in meta for new field'); // tslint:disable-line\n      return null;\n    }\n\n    if (!metaForNewField.key) {\n      // If key is not explicitly declared, use name as key\n      metaForNewField.key = metaForNewField.name;\n    }\n\n    const form = otherForm || this.form;\n    if (form.controls[metaForNewField.key]) {\n      // Field is already on the form\n      return null;\n    }\n\n    const control = form.controls[key];\n    let fieldsetIndex: number;\n    let controlIndex: number;\n    if (control) {\n      fieldsetIndex = -1;\n      controlIndex = -1;\n\n      form.fieldsets.forEach((fieldset, fi) => {\n        fieldset.controls.forEach((fieldsetControl, ci) => {\n          if (fieldsetControl.key === key) {\n            fieldsetIndex = fi;\n            controlIndex = ci;\n          }\n        });\n      });\n\n      // Change the position of the newly added field\n      switch (position) {\n        case FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD:\n          // Adding field above active field\n          // index can stay the same\n          break;\n        case FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD:\n          // Adding field below active field\n          controlIndex += 1;\n          break;\n        case FieldInteractionApi.FIELD_POSITIONS.TOP_OF_FORM:\n          // Adding field to the top of the form\n          controlIndex = 0;\n          fieldsetIndex = 0;\n          break;\n        case FieldInteractionApi.FIELD_POSITIONS.BOTTOM_OF_FORM:\n          // Adding field to the bottom of the form\n          fieldsetIndex = form.fieldsets.length - 1;\n          controlIndex = form.fieldsets[fieldsetIndex].controls.length;\n          break;\n        default:\n          break;\n      }\n\n      if (fieldsetIndex !== -1 && controlIndex !== -1) {\n        const novoControl = this.formUtils.getControlForField(metaForNewField, this.http, {});\n        novoControl.hidden = false;\n        const formControl = new NovoFormControl(initialValue, novoControl);\n        form.addControl(novoControl.key, formControl);\n        form.fieldsets[fieldsetIndex].controls.splice(controlIndex, 0, novoControl);\n        this.triggerEvent({ controlKey: key, prop: 'addControl', value: formControl }, otherForm);\n      }\n    }\n  }\n\n  removeControl(key: string, otherForm?: NovoFormGroup): void {\n    const form = otherForm || this.form;\n    if (!form.controls[key]) {\n      // Field is not on the form\n      return null;\n    }\n    const control = this.getControl(key, otherForm);\n    if (control && !control.restrictFieldInteractions) {\n      let fieldsetIndex = -1;\n      let controlIndex = -1;\n\n      form.fieldsets.forEach((fieldset, fi) => {\n        fieldset.controls.forEach((fieldsetControl, ci) => {\n          if (fieldsetControl.key === key) {\n            fieldsetIndex = fi;\n            controlIndex = ci;\n          }\n        });\n      });\n\n      if (fieldsetIndex !== -1 && controlIndex !== -1) {\n        form.removeControl(key);\n        form.fieldsets[fieldsetIndex].controls.splice(controlIndex, 1);\n        this.triggerEvent({ controlKey: key, prop: 'removeControl', value: key }, otherForm);\n      }\n    }\n  }\n\n  debounce(func: () => void, wait = 50) {\n    let h;\n    clearTimeout(h);\n    h = setTimeout(() => func(), wait);\n  }\n\n  /**\n   * Allows traversing nested forms by accessing the parent form.\n   *\n   * @param otherForm optional parameter for getting the parent of a different form.\n   * If not provided will default to the parent of the current form.\n   */\n  getParent(otherForm?: NovoFormGroup) {\n    const form = otherForm || this.form;\n    return form.parent;\n  }\n\n  /**\n   * The index is assigned as a property on the form's associations object when the form is part of a NovoControlGroup array.\n   *\n   * @param otherForm optional parameter for getting the index of a different form. If not provided will default to the current form.\n   * @returns the index if it exists for the current or form, or null otherwise.\n   */\n  getIndex(otherForm?: NovoFormGroup) {\n    const form = otherForm || this.form;\n    return form.associations && form.associations.hasOwnProperty('index') ? form.associations.index : null;\n  }\n\n  private triggerEvent(event: IFieldInteractionEvent, otherForm?: NovoFormGroup): void {\n    const form = otherForm || this.form;\n    if (form && form.fieldInteractionEvents) {\n      form.fieldInteractionEvents.emit(event);\n    }\n  }\n}\n","// NG2\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n// Vendor\nimport { Observable } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n// APP\nimport { OutsideClick } from '../../utils/outside-click/OutsideClick';\nimport { FieldInteractionApi } from './FieldInteractionApi';\n\nexport interface IMaskOptions {\n  mask: any;\n  keepCharPositions: boolean;\n  guide: boolean;\n}\n\n@Directive({\n  selector: 'textarea[autosize]',\n})\nexport class NovoAutoSize implements AfterContentInit {\n  @HostListener('input', ['$event.target'])\n  onInput(textArea: HTMLTextAreaElement): void {\n    this.adjust();\n  }\n\n  constructor(public element: ElementRef) {}\n\n  ngAfterContentInit(): void {\n    setTimeout(() => {\n      this.adjust();\n    });\n  }\n\n  adjust(): void {\n    const nativeElement = this.element.nativeElement;\n    nativeElement.style.height = nativeElement.style.minHeight;\n    nativeElement.style.height = `${nativeElement.scrollHeight}px`;\n  }\n}\n// undo all template context references!\n@Component({\n  selector: 'novo-control',\n  template: `\n    <div\n      class=\"novo-control-container\"\n      [hidden]=\"\n        form.controls[control.key].hidden ||\n        form.controls[control.key].type === 'hidden' ||\n        form.controls[control.key].controlType === 'hidden'\n      \"\n    >\n      <!--Encrypted Field-->\n      <span [tooltip]=\"labels.encryptedFieldTooltip\" [tooltipPosition]=\"'right'\"\n        ><i [hidden]=\"!form.controls[control.key].encrypted\" class=\"bhi-lock\"></i\n      ></span>\n      <!--Label (for horizontal)-->\n      <label\n        [attr.for]=\"control.key\"\n        *ngIf=\"form.layout !== 'vertical' && form.controls[control.key].label && !condensed\"\n        [ngClass]=\"{ encrypted: form.controls[control.key].encrypted }\"\n      >\n        {{ form.controls[control.key].label }}\n      </label>\n      <div class=\"novo-control-outer-container\">\n        <!--Label (for vertical)-->\n        <label\n          *ngIf=\"form.layout === 'vertical' && form.controls[control.key].label && !condensed\"\n          class=\"novo-control-label\"\n          [attr.for]=\"control.key\"\n          [class.novo-control-empty]=\"!hasValue\"\n          [class.novo-control-focused]=\"focused\"\n          [class.novo-control-filled]=\"hasValue\"\n          [class.novo-control-always-active]=\"alwaysActive || form.controls[control.key].placeholder\"\n          [class.novo-control-extra-spacing]=\"requiresExtraSpacing\"\n        >\n          {{ form.controls[control.key].label }}\n        </label>\n        <div\n          class=\"novo-control-inner-container\"\n          [class.required]=\"form.controls[control.key].required && !form.controls[control.key].readOnly\"\n        >\n          <div class=\"novo-control-inner-input-container\" [class.novo-control-filled]=\"hasValue\" [class.novo-control-empty]=\"!hasValue\">\n            <!--Required Indicator-->\n            <i\n              [hidden]=\"!form.controls[control.key].required || form.controls[control.key].readOnly\"\n              class=\"required-indicator {{ form.controls[control.key].controlType }}\"\n              [ngClass]=\"{ 'bhi-circle': !isValid, 'bhi-check': isValid }\"\n              *ngIf=\"!condensed || form.controls[control.key].required\"\n            >\n            </i>\n            <!--Form Controls-->\n            <div\n              class=\"novo-control-input {{ form.controls[control.key].controlType }}\"\n              [attr.data-automation-id]=\"control.key\"\n              [class.control-disabled]=\"form.controls[control.key].disabled\"\n              [class.highlighted]=\"form.controls[control.key].highlighted\"\n            >\n              <!--TODO prefix/suffix on the control-->\n              <ng-container *ngIf=\"templates\">\n                <ng-container\n                  *ngTemplateOutlet=\"templates[form.controls[control.key].controlType]; context: templateContext\"\n                ></ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"!templates || loading\">\n                <div class=\"novo-control-input-container novo-control-input-with-label\">\n                  <input type=\"text\" />\n                </div>\n              </ng-container>\n            </div>\n          </div>\n          <!--Error Message-->\n          <div\n            class=\"field-message {{ form.controls[control.key].controlType }}\"\n            *ngIf=\"!condensed\"\n            [class.has-tip]=\"form.controls[control.key].tipWell\"\n            [ngClass]=\"showErrorState || showMaxLengthMetMessage ? 'error-shown' : 'error-hidden'\"\n          >\n            <div class=\"messages\" [ngClass]=\"showMessages ? 'count-shown messages-shown' : 'count-hidden messages-hidden'\">\n              <span class=\"error-text\" *ngIf=\"showFieldMessage\"></span>\n              <span class=\"error-text\" *ngIf=\"isDirty && errors?.required && form.controls[control.key].controlType !== 'address'\"\n                >{{ form.controls[control.key].label | uppercase }} {{ labels.isRequired }}</span\n              >\n              <span class=\"error-text\" *ngIf=\"isDirty && errors?.minlength\"\n                >{{ form.controls[control.key].label | uppercase }} {{ labels.minLength }} {{ form.controls[control.key].minlength }}</span\n              >\n              <span\n                class=\"error-text\"\n                *ngIf=\"isDirty && maxLengthMet && focused && !errors?.maxlength && form.controls[control.key].controlType !== 'picker'\"\n                >{{ labels.maxlengthMet(form.controls[control.key].maxlength) }}</span\n              >\n              <span class=\"error-text\" *ngIf=\"errors?.maxlength && focused && !errors?.maxlengthFields\">{{\n                labels.invalidMaxlength(form.controls[control.key].maxlength)\n              }}</span>\n              <span class=\"error-text\" *ngIf=\"maxLengthMet && form.controls[control.key].controlType === 'picker'\">{{\n                labels.maxRecordsReached\n              }}</span>\n              <span class=\"error-text\" *ngIf=\"isDirty && errors?.invalidEmail\"\n                >{{ form.controls[control.key].label | uppercase }} {{ labels.invalidEmail }}</span\n              >\n              <span class=\"error-text\" *ngIf=\"isDirty && (errors?.integerTooLarge || errors?.doubleTooLarge)\"\n                >{{ form.controls[control.key].label | uppercase }} {{ labels.isTooLarge }}</span\n              >\n              <span *ngIf=\"isDirty && errors?.minYear\">{{ form.controls[control.key].label | uppercase }} {{ labels.notValidYear }}</span>\n              <span class=\"error-text\" *ngIf=\"isDirty && errors?.custom\">{{ errors.custom }}</span>\n              <span class=\"error-text\" *ngIf=\"errors?.maxlength && errors?.maxlengthFields && maxlengthErrorField && focused\">\n                {{\n                  labels.invalidMaxlengthWithField(\n                    control.config[maxlengthErrorField]?.label,\n                    control.config[maxlengthErrorField]?.maxlength\n                  )\n                }}\n              </span>\n              <span\n                class=\"error-text\"\n                *ngIf=\"isDirty && maxlengthMetField && focused && !errors?.maxlengthFields?.includes(maxlengthMetField)\"\n              >\n                {{ labels.maxlengthMetWithField(control.config[maxlengthMetField]?.label, control.config[maxlengthMetField]?.maxlength) }}\n              </span>\n              <span *ngIf=\"isDirty && errors?.invalidAddress\">\n                <span class=\"error-text\" *ngFor=\"let invalidAddressField of errors?.invalidAddressFields\"\n                  >{{ invalidAddressField | uppercase }} {{ labels.isRequired }}\n                </span>\n              </span>\n              <!--Field Hint-->\n              <span class=\"description\" *ngIf=\"form.controls[control.key].description\">\n                {{ form.controls[control.key].description }}\n              </span>\n              <span class=\"warning-text\" *ngIf=\"form.controls[control.key].warning\">{{ form.controls[control.key].warning }}</span>\n            </div>\n            <span\n              class=\"character-count\"\n              [class.error]=\"\n                (errors?.maxlength && !errors?.maxlengthFields) ||\n                (errors?.maxlength && errors?.maxlengthFields && errors.maxlengthFields.includes(focusedField))\n              \"\n              *ngIf=\"showCount && form.controls[control.key].controlType !== 'picker'\"\n              >{{ itemCount }}/{{ maxLength || form.controls[control.key].maxlength }}</span\n            >\n            <span\n              class=\"record-count\"\n              [class.zero-count]=\"itemCount === 0\"\n              [class.row-picker]=\"form.controls[this.control.key].config.columns\"\n              *ngIf=\"showCount && form.controls[control.key].controlType === 'picker'\"\n              >{{ itemCount }}/{{ maxLength || form.controls[control.key].maxlength }}</span\n            >\n          </div>\n          <!--Tip Wel-->\n          <novo-tip-well\n            *ngIf=\"form.controls[control.key].tipWell\"\n            [name]=\"control.key\"\n            [tip]=\"form.controls[control.key]?.tipWell?.tip\"\n            [icon]=\"form.controls[control.key]?.tipWell?.icon\"\n            [button]=\"form.controls[control.key]?.tipWell?.button\"\n            [sanitize]=\"form.controls[control.key]?.tipWell?.sanitize\"\n          ></novo-tip-well>\n        </div>\n        <i *ngIf=\"form.controls[control.key].fieldInteractionloading\" class=\"loading\">\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"18.2px\"\n            height=\"18.5px\"\n            viewBox=\"0 0 18.2 18.5\"\n            style=\"enable-background:new 0 0 18.2 18.5;\"\n            xml:space=\"preserve\"\n          >\n            <style type=\"text/css\">\n              .spinner {\n                fill: #ffffff;\n              }\n            </style>\n            <path\n              class=\"spinner\"\n              d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                            c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                            c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"\n            />\n          </svg>\n        </i>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class]': 'form.controls[control.key].controlType',\n    '[attr.data-control-type]': 'form.controls[control.key].controlType',\n    '[class.disabled]': 'form.controls[control.key].readOnly',\n    '[class.hidden]': 'form.controls[control.key].hidden',\n    '[attr.data-control-key]': 'control.key',\n    '[class.inline-embedded]': 'control.isInlineEmbedded',\n    '[class.embedded]': 'control.isEmbedded',\n  },\n})\nexport class NovoControlElement extends OutsideClick implements OnInit, OnDestroy, AfterViewInit, AfterContentInit {\n  @Input()\n  control: any;\n  @Input()\n  form: any;\n  @Input()\n  condensed: boolean = false;\n  @Input()\n  autoFocus: boolean = false;\n  @Output()\n  change: EventEmitter<any> = new EventEmitter();\n  @Output()\n  edit: EventEmitter<any> = new EventEmitter();\n  @Output()\n  save: EventEmitter<any> = new EventEmitter();\n  @Output()\n  delete: EventEmitter<any> = new EventEmitter();\n  @Output()\n  upload: EventEmitter<any> = new EventEmitter();\n  @Output('blur')\n  get onBlur(): Observable<FocusEvent> {\n    return this._blurEmitter.asObservable();\n  }\n\n  @Output('focus')\n  get onFocus(): Observable<FocusEvent> {\n    return this._focusEmitter.asObservable();\n  }\n  public maxLength: number;\n  public focusedField: string;\n  formattedValue: string = '';\n  percentValue: number;\n  maxLengthMet: boolean = false;\n  itemCount: number = 0;\n  maskOptions: IMaskOptions;\n\n  private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  private _focused: boolean = false;\n  private _enteredText: string = '';\n  private forceClearSubscription: any;\n  private percentChangeSubscription: any;\n  private valueChangeSubscription: any;\n  private dateChangeSubscription: any;\n  private _showCount: boolean = false;\n  private characterCountField: string;\n  private maxLengthMetErrorfields: string[] = [];\n  private statusChangeSubscription: any;\n\n  templates: any = {};\n  templateContext: any;\n  loading: boolean = false;\n\n  constructor(\n    element: ElementRef,\n    public labels: NovoLabelService,\n    private dateFormatService: DateFormatService,\n    private fieldInteractionApi: FieldInteractionApi,\n    private templateService: NovoTemplateService,\n    private changeDetectorRef: ChangeDetectorRef,\n    @Inject(LOCALE_ID) public locale: string = 'en-US',\n  ) {\n    super(element);\n  }\n\n  get maxlengthMetField(): string {\n    if (this.maxLengthMetErrorfields && this.maxLengthMetErrorfields.length) {\n      return this.maxLengthMetErrorfields.find((field: string) => field === this.focusedField) || '';\n    } else {\n      return '';\n    }\n  }\n\n  get maxlengthErrorField(): string {\n    if (this.errors && this.errors.maxlengthFields && this.errors.maxlengthFields.length) {\n      return this.errors.maxlengthFields.find((field: string) => field === this.focusedField) || '';\n    } else {\n      return '';\n    }\n  }\n\n  get showFieldMessage() {\n    return !this.errors && !this.maxLengthMet && Helpers.isBlank(this.control.description);\n  }\n\n  get showMaxLengthMetMessage() {\n    return (\n      (this.isDirty && this.maxLengthMet && this.focused && (!this.errors || (this.errors && !this.errors.maxlength))) ||\n      (this.isDirty &&\n        this.maxlengthMetField &&\n        this.focused &&\n        (!this.errors || (this.errors && !this.errors.maxlengthFields.includes(this.maxlengthMetField))))\n    );\n  }\n\n  get showErrorState() {\n    return (\n      (this.isDirty && this.errors) ||\n      (this.focused && this.errors && this.errors.maxlength && this.errors.maxlengthFields) ||\n      (this.focused && this.errors && this.errors.maxlength && this.errors.maxlengthFields && this.maxlengthErrorField)\n    );\n  }\n\n  get showCount() {\n    const MAX_LENGTH_CONTROL_TYPES: string[] = ['textbox', 'picker', 'text-area'];\n    const charCount: boolean =\n      this.focused &&\n      !!this.form.controls[this.control.key].maxlength &&\n      MAX_LENGTH_CONTROL_TYPES.includes(this.form.controls[this.control.key].controlType);\n    return this._showCount || charCount;\n  }\n\n  set showCount(value) {\n    this._showCount = value;\n  }\n\n  get showMessages(): boolean {\n    return (\n      this.showCount ||\n      !Helpers.isEmpty(this.form.controls[this.control.key].warning) ||\n      !Helpers.isEmpty(this.form.controls[this.control.key].description)\n    );\n  }\n\n  get decimalSeparator(): string {\n    return new Intl.NumberFormat(this.locale).format(1.2)[1];\n  }\n\n  ngAfterViewInit() {\n    const DO_NOT_FOCUS_ME: string[] = ['picker', 'time', 'date', 'date-time'];\n    if (this.autoFocus && !DO_NOT_FOCUS_ME.includes(this.control.controlType)) {\n      setTimeout(() => {\n        const input: HTMLElement = this.element.nativeElement.querySelector('input');\n        if (input) {\n          input.focus();\n        }\n      });\n    }\n  }\n\n  ngAfterContentInit() {\n    // Subscribe to control interactions\n    if (this.control.interactions && !this.form.controls[this.control.key].restrictFieldInteractions) {\n      for (const interaction of this.control.interactions) {\n        switch (interaction.event) {\n          case 'blur':\n            this.valueChangeSubscription = this.onBlur.pipe(debounceTime(300)).subscribe(() => {\n              if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                this.executeInteraction(interaction);\n              }\n            });\n            break;\n          case 'focus':\n            this.valueChangeSubscription = this.onFocus.pipe(debounceTime(300)).subscribe(() => {\n              if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                this.executeInteraction(interaction);\n              }\n            });\n            break;\n          case 'change':\n            this.valueChangeSubscription = this.form.controls[this.control.key].valueChanges.pipe(debounceTime(300)).subscribe(() => {\n              if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                this.executeInteraction(interaction);\n              }\n            });\n            break;\n          case 'init':\n            interaction.invokeOnInit = true;\n            break;\n          default:\n            break;\n        }\n        if (interaction.invokeOnInit) {\n          if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n            this.executeInteraction(interaction, true);\n          }\n        }\n      }\n    }\n    setTimeout(() => {\n      this.templates = this.templateService.getAll();\n      this.loading = false;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    // Make sure to initially format the time controls\n    if (this.control && this.form.controls[this.control.key].value) {\n      if (\n        this.form.controls[this.control.key].controlType === 'textbox' ||\n        this.form.controls[this.control.key].controlType === 'text-area'\n      ) {\n        this.itemCount = this.form.controls[this.control.key].value.length;\n      }\n    }\n    if (this.control) {\n      // Listen to clear events\n      this.forceClearSubscription = this.control.forceClear.subscribe(() => {\n        this.clearValue();\n      });\n      // For Asynchronous validations\n      this.statusChangeSubscription = this.form.controls[this.control.key].statusChanges.subscribe((validity) => {\n        this.form.controls[this.control.key] = this.templateContext.$implicit;\n        if (validity !== 'PENDING' && this.form.updateValueAndValidity) {\n          this.form.updateValueAndValidity();\n        }\n      });\n    }\n    this.templateContext = {\n      $implicit: this.form.controls[this.control.key],\n      methods: {\n        restrictKeys: this.restrictKeys.bind(this),\n        emitChange: this.emitChange.bind(this),\n        handleFocus: this.handleFocus.bind(this),\n        handlePercentChange: this.handlePercentChange.bind(this),\n        handleBlur: this.handleBlur.bind(this),\n        handleTextAreaInput: this.handleTextAreaInput.bind(this),\n        handleEdit: this.handleEdit.bind(this),\n        handleSave: this.handleSave.bind(this),\n        handleDelete: this.handleDelete.bind(this),\n        handleUpload: this.handleUpload.bind(this),\n        modelChange: this.modelChange.bind(this),\n        modelChangeWithRaw: this.modelChangeWithRaw.bind(this),\n        handleAddressChange: this.handleAddressChange.bind(this),\n        handleTyping: this.handleTyping.bind(this),\n        updateValidity: this.updateValidity.bind(this),\n        toggleActive: this.toggleActive.bind(this),\n        validateIntegerInput: this.validateIntegerInput.bind(this),\n        validateNumberOnBlur: this.validateNumberOnBlur.bind(this),\n      },\n      form: this.form,\n    };\n    this.templateContext.$implicit.tooltipPosition = this.tooltipPosition;\n    this.templateContext.$implicit.tooltip = this.tooltip;\n    this.templateContext.$implicit.tooltipSize = this.tooltipSize;\n    this.templateContext.$implicit.tooltipPreline = this.tooltipPreline;\n    this.templateContext.$implicit.removeTooltipArrow = this.removeTooltipArrow;\n    this.templateContext.$implicit.startupFocus = this.form.controls[this.control.key].startupFocus;\n    this.templateContext.$implicit.fileBrowserImageUploadUrl = this.form.controls[this.control.key].fileBrowserImageUploadUrl;\n    this.templateContext.$implicit.minimal = this.form.controls[this.control.key].minimal;\n    this.templateContext.$implicit.currencyFormat = this.form.controls[this.control.key].currencyFormat;\n    this.templateContext.$implicit.percentValue = this.form.controls[this.control.key].percentValue;\n    this.templateContext.$implicit.config = this.form.controls[this.control.key].config;\n\n    if (this.form.controls[this.control.key] && this.form.controls[this.control.key].subType === 'percentage') {\n      if (!Helpers.isEmpty(this.form.controls[this.control.key].value)) {\n        this.templateContext.$implicit.percentValue = Number(\n          (this.form.controls[this.control.key].value * 100).toFixed(6).replace(/\\.?0*$/, ''),\n        );\n      }\n      this.percentChangeSubscription = this.form.controls[this.control.key].displayValueChanges.subscribe((value) => {\n        if (!Helpers.isEmpty(value) && !isNaN(value)) {\n          this.templateContext.$implicit.percentValue = Number((value * 100).toFixed(6).replace(/\\.?0*$/, ''));\n        } else if (Helpers.isEmpty(value)) {\n          this.templateContext.$implicit.percentValue = undefined;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from control interactions\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n    // if (this.dateChangeSubscription) {\n    //     this.dateChangeSubscription.unsubscribe();\n    // }\n    if (this.forceClearSubscription) {\n      // Un-listen for clear events\n      this.forceClearSubscription.unsubscribe();\n    }\n    if (this.percentChangeSubscription) {\n      // Un-listen for clear events\n      this.percentChangeSubscription.unsubscribe();\n    }\n    if (this.dateChangeSubscription) {\n      this.dateChangeSubscription.unsubscribe();\n    }\n    if (this.statusChangeSubscription) {\n      this.statusChangeSubscription.unsubscribe();\n    }\n    super.ngOnDestroy();\n  }\n\n  get errors() {\n    return this.form.controls[this.control.key].errors;\n  }\n\n  get isValid() {\n    return this.form.controls[this.control.key].valid;\n  }\n\n  get isDirty() {\n    return this.form.controls[this.control.key].dirty || this.control.dirty;\n  }\n\n  get hasValue() {\n    return !Helpers.isEmpty(this.form.value[this.control.key]);\n  }\n\n  get focused() {\n    return this._focused;\n  }\n\n  get tooltip() {\n    return this.form.controls[this.control.key].tooltip;\n  }\n\n  get tooltipPosition() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].tooltipPosition)) {\n      return 'right';\n    }\n    return this.form.controls[this.control.key].tooltipPosition;\n  }\n\n  get tooltipSize() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].tooltipSize)) {\n      return '';\n    }\n    return this.form.controls[this.control.key].tooltipSize;\n  }\n\n  get tooltipPreline() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].tooltipPreline)) {\n      return false;\n    }\n    return this.form.controls[this.control.key].tooltipPreline;\n  }\n\n  get removeTooltipArrow() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].removeTooltipArrow)) {\n      return false;\n    }\n    return this.form.controls[this.control.key].removeTooltipArrow;\n  }\n\n  get alwaysActive() {\n    // Controls that have the label active if there is any user entered text in the field\n    if (this.form.controls[this.control.key].controlType === 'picker' && this._enteredText.length) {\n      return true;\n    }\n    if (this.form.controls[this.control.key].alwaysActive) {\n      return true;\n    }\n    // Controls that always have the label active\n    return (\n      [\n        'tiles',\n        'checklist',\n        'checkbox',\n        'date',\n        'time',\n        'date-time',\n        'address',\n        'file',\n        'editor',\n        'ace-editor',\n        'radio',\n        'text-area',\n        'quick-note',\n        'date',\n        'custom',\n        'switch',\n        'native-select',\n        'native-input',\n      ].indexOf(this.form.controls[this.control.key].controlType) !== -1\n    );\n  }\n\n  get requiresExtraSpacing() {\n    // Chips\n    if (this.form.controls[this.control.key].controlType === 'picker' && this.form.controls[this.control.key].multiple && this.hasValue) {\n      return true;\n    }\n    return false;\n  }\n\n  executeInteraction(interaction, isInvokedOnInit = false) {\n    if (interaction.script && Helpers.isFunction(interaction.script)) {\n      setTimeout(() => {\n        this.fieldInteractionApi.form = this.form;\n        this.fieldInteractionApi.currentKey = this.control.key;\n        this.fieldInteractionApi.isInvokedOnInit = isInvokedOnInit;\n        try {\n          interaction.script(this.fieldInteractionApi, this.control.key);\n        } catch (err) {\n          console.info('Field Interaction Error!', this.control.key); // tslint:disable-line\n          console.error(err); // tslint:disable-line\n        }\n      });\n    }\n  }\n\n  handleTyping(event: any) {\n    this._focused = event && event.length;\n    this._enteredText = event;\n  }\n\n  handleFocus(event: FocusEvent, field?: any) {\n    this._focused = true;\n    this.focusedField = field;\n    if (!Helpers.isBlank(this.characterCountField) && this.characterCountField === field) {\n      this.showCount = true;\n    } else if (\n      this.form.controls[this.control.key].controlType === 'address' &&\n      field &&\n      !Helpers.isEmpty(this.form.value[this.control.key]) &&\n      !Helpers.isBlank(this.form.value[this.control.key][field])\n    ) {\n      this.handleAddressChange({ value: this.form.value[this.control.key][field], field });\n    }\n    this._focusEmitter.emit(event);\n  }\n\n  handleBlur(event: FocusEvent) {\n    this._focused = false;\n    this.focusedField = '';\n    this.showCount = false;\n    this._blurEmitter.emit(event);\n  }\n\n  clearValue() {\n    this.form.controls[this.control.key].setValue(null);\n    this.formattedValue = null;\n  }\n\n  handleTextAreaInput(event) {\n    this.emitChange(event);\n    this.restrictKeys(event);\n  }\n\n  checkMaxLength(event) {\n    if (this.control && this.form.controls[this.control.key].maxlength) {\n      this.itemCount = event.target.value.length;\n      this.maxLengthMet = event.target.value.length >= this.form.controls[this.control.key].maxlength;\n    }\n  }\n\n  modelChangeWithRaw(event) {\n    if (Helpers.isEmpty(event.value)) {\n      this._focused = false;\n      this._enteredText = '';\n    }\n    if (this.form.controls[this.control.key].controlType === 'picker' && this.form.controls[this.control.key].maxlength) {\n      this.itemCount = event.value ? event.value.length : 0;\n      this.maxLengthMet = this.itemCount >= this.form.controls[this.control.key].maxlength ? true : false;\n    }\n    this.form.controls[this.control.key].rawValue = event.rawValue;\n    this.change.emit(event.value);\n  }\n\n  modelChange(value) {\n    if (Helpers.isEmpty(value)) {\n      this._focused = false;\n      this._enteredText = '';\n    }\n    this.change.emit(value);\n  }\n\n  validateNumberOnBlur(event: FocusEvent) {\n    this._focused = false;\n    this.focusedField = '';\n    this.showCount = false;\n    if (this.form.controls[this.control.key].subType === 'number') {\n      this.validateIntegerInput();\n    }\n    this._blurEmitter.emit(event);\n  }\n\n  validateIntegerInput() {\n    const NUMBERS_ONLY = /^[\\d\\-]\\d*$/;\n    if (this.form.controls[this.control.key].value && !NUMBERS_ONLY.test(this.form.controls[this.control.key].value)) {\n      this.form.controls[this.control.key].markAsInvalid(\n        `${this.labels.invalidIntegerInput} ${this.form.controls[this.control.key].label.toUpperCase()}`,\n      );\n    }\n  }\n\n  restrictKeys(event) {\n    const NUMBERS_ONLY = /[0-9\\-]/;\n    const NUMBERS_WITH_DECIMAL_DOT = /[0-9\\.\\-]/;\n    const NUMBERS_WITH_DECIMAL_DOT_AND_COMMA = /[0-9\\.\\,\\-]/;\n    const UTILITY_KEYS = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'];\n    const key = event.key;\n\n    // Numbers or numbers and decimal characters only\n    if (this.form.controls[this.control.key].subType === 'number' && !(NUMBERS_ONLY.test(key) || UTILITY_KEYS.includes(key))) {\n      event.preventDefault();\n    } else if (\n      ['currency', 'float', 'percentage'].includes(this.form.controls[this.control.key].subType) &&\n      !(\n        (this.decimalSeparator === '.' && NUMBERS_WITH_DECIMAL_DOT.test(key)) ||\n        (this.decimalSeparator === ',' && NUMBERS_WITH_DECIMAL_DOT_AND_COMMA.test(key)) ||\n        UTILITY_KEYS.includes(key)\n      )\n    ) {\n      event.preventDefault();\n    }\n    // Max Length\n    if (this.form.controls[this.control.key].maxlength && event.target.value.length >= this.form.controls[this.control.key].maxlength) {\n      event.preventDefault();\n    }\n  }\n\n  handlePercentChange(event: KeyboardEvent) {\n    const value = (event.target as HTMLInputElement).value || (event as any).data;\n    const percent = Helpers.isEmpty(value) || isNaN(value) ? value : Number((Number(value) / 100).toFixed(6).replace(/\\.?0*$/, ''));\n    if (!Helpers.isEmpty(percent)) {\n      this.change.emit(percent);\n      this.form.controls[this.control.key].setValue(percent);\n    } else {\n      this.change.emit(null);\n      this.form.controls[this.control.key].setValue(null);\n    }\n  }\n\n  handleTabForPickers(event: any): void {\n    if (this.active && event && event.key) {\n      if (event.key === Key.Escape || event.key === Key.Tab) {\n        this.toggleActive(event, false);\n      }\n    }\n  }\n\n  emitChange(value) {\n    this.change.emit(value);\n    this.checkMaxLength(value);\n  }\n\n  handleEdit(value) {\n    this.edit.emit(value);\n  }\n\n  handleSave(value) {\n    this.save.emit(value);\n  }\n\n  handleDelete(value) {\n    this.delete.emit(value);\n  }\n\n  handleUpload(value) {\n    this.upload.emit(value);\n  }\n\n  handleAddressChange(data) {\n    if (\n      data &&\n      !Helpers.isBlank(data.value) &&\n      data.field &&\n      this.control.config[data.field] &&\n      !Helpers.isEmpty(this.control.config[data.field].maxlength)\n    ) {\n      this.itemCount = data.value.length;\n      this.characterCountField = data.field;\n      this.maxLength = this.control.config[data.field].maxlength;\n      this.showCount = true;\n      if (this.maxLength === this.itemCount) {\n        this.maxLengthMetErrorfields.push(data.field);\n      } else {\n        this.maxLengthMetErrorfields = this.maxLengthMetErrorfields.filter((field: string) => field !== data.field);\n      }\n    }\n  }\n\n  updateValidity(shouldEventBeEmitted): void {\n    const emitEvent: boolean = shouldEventBeEmitted ? true : false;\n    this.form.controls[this.control.key].updateValueAndValidity({ emitEvent });\n  }\n}\n","// NG\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n} from '@angular/core';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { Helpers } from '../../utils/Helpers';\nimport { FormUtils } from './../../utils/form-utils/FormUtils';\nimport { BaseControl } from './controls/BaseControl';\nimport { NovoFormGroup } from './NovoFormGroup';\n\nexport interface NovoControlGroupAddConfig {\n  label: string;\n}\n\nexport enum EditState {\n  EDITING = 'editing',\n  NOT_EDITING = 'notediting',\n}\n\nexport interface NovoControlGroupRowConfig {\n  edit: boolean;\n  remove: boolean;\n  state: EditState;\n}\n\n@Component({\n  selector: 'novo-control-group',\n  templateUrl: './ControlGroup.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.novo-control-group-appearance-card]': \"appearance=='card'\",\n    '[class.novo-control-group-appearance-none]': \"appearance=='none'\",\n  },\n})\nexport class NovoControlGroup implements AfterContentInit, OnChanges, OnDestroy {\n  @Input()\n  set appearance(value: 'none' | 'card') {\n    this._appearance = value;\n  }\n  get appearance() {\n    return this._appearance;\n  }\n  private _appearance: 'none' | 'card' = 'none';\n\n  // Sets the display of the group to either be row (default) or vertical via flex-box\n  @Input()\n  set vertical(v: boolean) {\n    this._vertical = coerceBooleanProperty(v);\n  }\n  get vertical() {\n    return this._vertical;\n  }\n  private _vertical = false;\n  @Input()\n  set stacked(v: boolean) {\n    this._stacked = coerceBooleanProperty(v);\n  }\n  get stacked() {\n    return this._stacked;\n  }\n  private _stacked = false;\n\n  // Hides/shows the add button for adding a new control\n  @Input() add: NovoControlGroupAddConfig;\n  // Hide/shows the remove button for removing a control\n  @Input()\n  set remove(v: boolean) {\n    this._remove = coerceBooleanProperty(v);\n  }\n  get remove() {\n    return this._remove;\n  }\n  private _remove = false;\n  // Hide/shows the edit button for editing a control\n  @Input()\n  set edit(v: boolean) {\n    this._edit = coerceBooleanProperty(v);\n  }\n  get edit() {\n    return this._edit;\n  }\n  private _edit = false;\n  // Allows the control to collapse or not\n  @Input()\n  set collapsible(v: boolean) {\n    this._collapsible = coerceBooleanProperty(v);\n  }\n  get collapsible() {\n    return this._collapsible;\n  }\n  private _collapsible = false;\n  // Main form group\n  @Input() form: NovoFormGroup;\n  // Controls for each item in the control group\n  @Input() controls: BaseControl[];\n  // Key of the control group (on the main form)\n  @Input() key: string;\n  // Label of the control group\n  @Input() label: string;\n  // Description of the control group (only use with position:bottom Add button!)\n  @Input() description: string;\n  // Message to display if there are no controls\n  @Input() emptyMessage: string;\n  // Icon of the control group (can have bhi prefix or not)\n  @Input()\n  set icon(v: string) {\n    this._icon = v && v.indexOf('bhi') !== -1 ? v : `bhi-${v}`;\n  }\n  get icon() {\n    return this._icon;\n  }\n  private _icon: string;\n  // Edit icon at the end of each row (no bhi- prefix)\n  @Input() editIcon = 'edit';\n  // Remove icon at the end of each row (no bhi- prefix)\n  @Input() removeIcon = 'delete-o';\n  // The initial value object, will create the form rows off of\n  @Input() initialValue: {}[];\n  // Callback to determine if the user can edit\n  @Input() canEdit: Function;\n  // Callback to determine if the user can delete\n  @Input() canRemove: Function;\n  // Optional callback for whether or not to remove the given row\n  @Input() shouldRemove: (number) => Promise<boolean>;\n  // Template for custom row rendering\n  @Input() rowTemplate: TemplateRef<any>;\n  // Template for custom column label rendering\n  @Input() columnLabelTemplate: TemplateRef<any>;\n\n  @Output() onRemove = new EventEmitter<{ value; index }>();\n  @Output() onEdit = new EventEmitter<{ value; index }>();\n  @Output() onAdd = new EventEmitter<any>();\n  @Output() change = new EventEmitter<any>();\n\n  controlLabels: { value: string; width: number; required: boolean; hidden?: boolean; key: string }[] = [];\n  toggled = false;\n  disabledArray: NovoControlGroupRowConfig[] = [];\n  editState: EditState = EditState.NOT_EDITING;\n  currentIndex = 0;\n\n  constructor(private formUtils: FormUtils, private fb: FormBuilder, private ref: ChangeDetectorRef) {}\n\n  ngAfterContentInit() {\n    if (!this.key) {\n      throw new Error('novo-control-group must have the [key] attribute provided!');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const initialValueChange: SimpleChange = changes.initialValue;\n\n    // If initial value changes, clear the controls\n    if (initialValueChange && initialValueChange.currentValue !== initialValueChange.previousValue && !initialValueChange.firstChange) {\n      this.clearControls();\n    }\n\n    // Check for array, add a control for each value\n    if (this.initialValue && Array.isArray(this.initialValue)) {\n      if (this.initialValue.length !== 0) {\n        this.currentIndex = 0;\n        this.initialValue.forEach((value) => this.addNewControl(value));\n      }\n    } else if (this.initialValue) {\n      // If value is an object, just add one control\n      this.addNewControl(this.initialValue);\n    }\n    // If we are horizontal, grab the labels to help with layout\n    if (!this.vertical) {\n      this.controlLabels = (this.controls || []).map((control: BaseControl) => {\n        return {\n          value: control.label,\n          width: control.width,\n          required: control.required,\n          key: control.key,\n          hidden: control.hidden,\n        };\n      });\n      this.ref.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearControls();\n  }\n\n  onChange() {\n    this.change.emit(this);\n  }\n\n  onClickAdd() {\n    this.addNewControl();\n    // this.editState = EditState.EDITING;\n  }\n  onClickCancel() {\n    this.editState = EditState.NOT_EDITING;\n  }\n  onClickSave() {\n    this.disabledArray[this.currentIndex - 1].state = EditState.NOT_EDITING;\n    this.editState = EditState.NOT_EDITING;\n    const control: FormArray = this.form.controls[this.key] as FormArray;\n    if (control) {\n      const fg: NovoFormGroup = control.at(this.currentIndex - 1) as NovoFormGroup;\n      fg.disableAllControls();\n    }\n  }\n\n  resetAddRemove() {\n    this.disabledArray.forEach((item: NovoControlGroupRowConfig, idx: number) => {\n      item.edit = this.checkCanEdit(idx);\n      item.remove = this.checkCanRemove(idx);\n      if (!item.edit) {\n        item.state = EditState.NOT_EDITING;\n      }\n    });\n    this.ref.markForCheck();\n  }\n\n  addNewControl(value?: {}) {\n    const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n    const nestedFormGroup: NovoFormGroup = this.buildNestedFormGroup(value);\n    if (controlsArray) {\n      controlsArray.push(nestedFormGroup);\n    } else {\n      this.form.addControl(this.key, this.fb.array([nestedFormGroup]));\n    }\n    this.disabledArray.push({\n      state: EditState.EDITING,\n      edit: true,\n      remove: true,\n    });\n    this.resetAddRemove();\n    if (!value) {\n      this.onAdd.emit(nestedFormGroup);\n    }\n    this.currentIndex++;\n    this.assignIndexes();\n    // Ensure that field interaction changes for nested forms originating from outside the form will be reflected in the nested elements\n    nestedFormGroup.fieldInteractionEvents.subscribe(this.onFieldInteractionEvent.bind(this));\n    this.ref.markForCheck();\n  }\n\n  /**\n   * Will remove the control, and optionally, if the event is to be publicized (emitEvent = true) and there is a\n   * shouldRemove callback, then call the shouldRemove() callback to determine if the doRemoveControl should be called.\n   */\n  removeControl(index: number, emitEvent = true) {\n    if (emitEvent && Helpers.isFunction(this.shouldRemove)) {\n      this.shouldRemove(index).then((shouldRemove: boolean) => {\n        if (shouldRemove) {\n          this.doRemoveControl(index, emitEvent);\n        }\n      });\n    } else {\n      this.doRemoveControl(index, emitEvent);\n    }\n  }\n\n  private doRemoveControl(index: number, emitEvent: boolean) {\n    const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n    const nestedFormGroup = controlsArray.at(index) as NovoFormGroup;\n    nestedFormGroup.fieldInteractionEvents.unsubscribe();\n    if (emitEvent) {\n      this.onRemove.emit({ value: nestedFormGroup.value, index });\n    }\n    controlsArray.removeAt(index);\n    this.disabledArray = this.disabledArray.filter((value: NovoControlGroupRowConfig, idx: number) => idx !== index);\n    this.resetAddRemove();\n    this.currentIndex--;\n    this.assignIndexes();\n    this.ref.markForCheck();\n  }\n\n  editControl(index: number) {\n    const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n    const fg = controlsArray.at(index) as NovoFormGroup;\n    fg.enableAllControls();\n    this.onEdit.emit({ value: controlsArray.at(index).value, index });\n  }\n\n  toggle(event: MouseEvent) {\n    Helpers.swallowEvent(event);\n    if (this.collapsible) {\n      this.toggled = !this.toggled;\n      this.ref.markForCheck();\n    }\n  }\n\n  private buildNestedFormGroup(value?: {}): NovoFormGroup {\n    const newControls = this.getNewControls();\n    if (value) {\n      this.formUtils.setInitialValues(newControls, value);\n    }\n    return this.formUtils.toFormGroup(newControls);\n  }\n\n  private clearControls() {\n    const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n    if (controlsArray) {\n      for (let i: number = controlsArray.length - 1; i >= 0; i--) {\n        this.removeControl(i, false);\n      }\n      this.currentIndex = 0;\n    }\n  }\n\n  private checkCanEdit(index: number): boolean {\n    if (this.canEdit) {\n      const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n      return this.canEdit(controlsArray.at(index).value, index);\n    }\n    return true;\n  }\n\n  private checkCanRemove(index: number): boolean {\n    if (this.canRemove) {\n      const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n      if (controlsArray.at(index)) {\n        return this.canRemove(controlsArray.at(index).value, index);\n      }\n      return true;\n    }\n    return true;\n  }\n\n  private getNewControls() {\n    const ret: BaseControl[] = [];\n    (this.controls || []).forEach((control: BaseControl) => {\n      ret.push(new BaseControl(control.__type, control));\n    });\n    return ret;\n  }\n\n  private assignIndexes() {\n    const controlsArray: FormArray = this.form.controls[this.key] as FormArray;\n    if (controlsArray) {\n      for (let i: number = 0; i < controlsArray.length; i++) {\n        const form = controlsArray.at(i) as NovoFormGroup;\n        form.associations = { ...form.associations, index: i };\n      }\n    }\n  }\n\n  private onFieldInteractionEvent() {\n    this.ref.markForCheck();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_stacked: BooleanInput;\n  static ngAcceptInputType_vertical: BooleanInput;\n}\n","import { AfterViewInit, Component, QueryList, ViewChildren } from '@angular/core';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\n@Component({\n  selector: 'novo-control-templates',\n  template: `\n    <!---Readonly--->\n    <ng-template novoTemplate=\"read-only\" let-form=\"form\" let-control>\n      <div>{{ form.value[control.key] }}</div>\n    </ng-template>\n    <!--Textbox--->\n    <ng-template novoTemplate=\"textbox\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div\n        [formGroup]=\"form\"\n        class=\"novo-control-input-container novo-control-input-with-label\"\n        [tooltip]=\"control?.tooltip\"\n        [tooltipPosition]=\"control?.tooltipPosition\"\n        [tooltipSize]=\"control?.tooltipSize\"\n        [tooltipPreline]=\"control?.tooltipPreline\"\n        [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n        [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n      >\n        <input\n          *ngIf=\"control?.type !== 'number' && control?.textMaskEnabled\"\n          [textMask]=\"control.maskOptions\"\n          [formControlName]=\"control.key\"\n          [id]=\"control.key\"\n          [type]=\"control?.type\"\n          [placeholder]=\"control?.placeholder\"\n          (input)=\"methods.emitChange($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          autocomplete\n        />\n        <input\n          *ngIf=\"control?.type !== 'number' && !control?.textMaskEnabled\"\n          [class.maxlength-error]=\"errors?.maxlength\"\n          [formControlName]=\"control.key\"\n          [id]=\"control.key\"\n          [type]=\"control?.type\"\n          [placeholder]=\"control?.placeholder\"\n          (input)=\"methods.emitChange($event)\"\n          [maxlength]=\"control?.maxlength\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          autocomplete\n        />\n        <input\n          *ngIf=\"control?.type === 'number' && control?.subType !== 'percentage'\"\n          [class.maxlength-error]=\"errors?.maxlength\"\n          [formControlName]=\"control.key\"\n          [id]=\"control.key\"\n          [type]=\"control?.type\"\n          [placeholder]=\"control?.placeholder\"\n          (keydown)=\"methods.restrictKeys($event)\"\n          (input)=\"methods.emitChange($event)\"\n          [maxlength]=\"control?.maxlength\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          step=\"any\"\n          (mousewheel)=\"numberInput.blur()\"\n          #numberInput\n        />\n        <!-- the percentage input does not use formControlName like a normal reactive input because instead of\n          setting the floating point value directly, it is multiplied by 100 into a percentage value -->\n        <input\n          *ngIf=\"control?.type === 'number' && control?.subType === 'percentage'\"\n          [id]=\"control.key\"\n          [type]=\"control?.type\"\n          [placeholder]=\"control?.placeholder\"\n          (keydown)=\"methods.restrictKeys($event)\"\n          [value]=\"control?.percentValue\"\n          [disabled]=\"control?.readOnly\"\n          (input)=\"methods.handlePercentChange($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          step=\"any\"\n          (mousewheel)=\"percentInput.blur()\"\n          #percentInput\n        />\n        <label class=\"input-label\" *ngIf=\"control?.subType === 'currency'\">{{ control.currencyFormat }}</label>\n        <label class=\"input-label\" *ngIf=\"control?.subType === 'percentage'\">%</label>\n      </div>\n    </ng-template>\n\n    <!--Textarea--->\n    <ng-template novoTemplate=\"text-area\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div\n        class=\"textarea-container\"\n        [formGroup]=\"form\"\n        [tooltip]=\"control?.tooltip\"\n        [tooltipPosition]=\"control?.tooltipPosition\"\n        [tooltipSize]=\"control?.tooltipSize\"\n        [tooltipPreline]=\"control?.tooltipPreline\"\n        [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n        [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n      >\n        <textarea\n          [class.maxlength-error]=\"errors?.maxlength\"\n          [name]=\"control.key\"\n          [attr.id]=\"control.key\"\n          [placeholder]=\"control.placeholder\"\n          [formControlName]=\"control.key\"\n          autosize\n          (input)=\"methods.handleTextAreaInput($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          [maxlength]=\"control?.maxlength\"\n        ></textarea>\n      </div>\n    </ng-template>\n\n    <!--Editor-->\n    <ng-template novoTemplate=\"editor\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-editor\n          [name]=\"control.key\"\n          [formControlName]=\"control.key\"\n          [startupFocus]=\"control.startupFocus\"\n          [minimal]=\"control.minimal\"\n          [fileBrowserImageUploadUrl]=\"control.fileBrowserImageUploadUrl\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          [config]=\"control.config\"\n        ></novo-editor>\n      </div>\n    </ng-template>\n\n    <!--AceEditor-->\n    <ng-template novoTemplate=\"ace-editor\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-ace-editor\n          [name]=\"control.key\"\n          [formControlName]=\"control.key\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n        ></novo-ace-editor>\n      </div>\n    </ng-template>\n\n    <!--HTML5 Select-->\n    <ng-template novoTemplate=\"native-select\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <select\n          [id]=\"control.key\"\n          [formControlName]=\"control.key\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n        >\n          <option *ngIf=\"control.placeholder\" value=\"\" disabled selected hidden>{{ control.placeholder }}</option>\n          <option *ngFor=\"let opt of control.options\" [value]=\"opt.key\">{{ opt.value }}</option>\n        </select>\n      </div>\n    </ng-template>\n\n    <!--File-->\n    <ng-template novoTemplate=\"file\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-file-input\n          [formControlName]=\"control.key\"\n          [id]=\"control.key\"\n          [name]=\"control.key\"\n          [placeholder]=\"control.placeholder\"\n          [value]=\"control.value\"\n          [multiple]=\"control.multiple\"\n          [layoutOptions]=\"control.layoutOptions\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          (edit)=\"methods.handleEdit($event)\"\n          (save)=\"methods.handleSave($event)\"\n          (delete)=\"methods.handleDelete($event)\"\n          (upload)=\"methods.handleUpload($event)\"\n        ></novo-file-input>\n      </div>\n    </ng-template>\n\n    <!--Tiles-->\n    <ng-template novoTemplate=\"tiles\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-tiles\n          [options]=\"control.options\"\n          [formControlName]=\"control.key\"\n          (onChange)=\"methods.modelChange($event)\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          [controlDisabled]=\"control.disabled\"\n        ></novo-tiles>\n      </div>\n    </ng-template>\n\n    <!--Picker-->\n    <ng-template novoTemplate=\"picker\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\" class=\"novo-control-input-container\">\n        <novo-picker\n          [config]=\"control.config\"\n          [formControlName]=\"control.key\"\n          [placeholder]=\"control.placeholder\"\n          [parentScrollSelector]=\"control.parentScrollSelector\"\n          *ngIf=\"!control.multiple\"\n          (select)=\"methods.modelChange($event)\"\n          (changed)=\"methods.modelChangeWithRaw($event)\"\n          (typing)=\"methods.handleTyping($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n        ></novo-picker>\n        <novo-chips\n          [source]=\"control.config\"\n          [type]=\"control.config.type\"\n          [formControlName]=\"control.key\"\n          [placeholder]=\"control.placeholder\"\n          [maxlength]=\"control?.maxlength\"\n          *ngIf=\"control.multiple && !control.config.columns\"\n          [closeOnSelect]=\"control.closeOnSelect\"\n          (changed)=\"methods.modelChangeWithRaw($event)\"\n          (typing)=\"methods.handleTyping($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n        ></novo-chips>\n        <novo-row-chips\n          [source]=\"control.config\"\n          [type]=\"control.config.type\"\n          [formControlName]=\"control.key\"\n          [placeholder]=\"control.placeholder\"\n          *ngIf=\"control.multiple && control.config.columns\"\n          [closeOnSelect]=\"control.closeOnSelect\"\n          (changed)=\"methods.modelChangeWithRaw($event)\"\n          (typing)=\"methods.handleTyping($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n        ></novo-row-chips>\n      </div>\n    </ng-template>\n\n    <!--Novo Select-->\n    <ng-template novoTemplate=\"select\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-select\n          [options]=\"control.options\"\n          [headerConfig]=\"control.headerConfig\"\n          [placeholder]=\"control.placeholder\"\n          [formControlName]=\"control.key\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          (onSelect)=\"methods.modelChange($event)\"\n        ></novo-select>\n      </div>\n    </ng-template>\n\n    <!--Timezone -->\n    <ng-template novoTemplate=\"timezone\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-select\n          [options]=\"control.options\"\n          [headerConfig]=\"control.headerConfig\"\n          [placeholder]=\"control.placeholder\"\n          [formControlName]=\"control.key\"\n          [tooltip]=\"control.tooltip\"\n          [tooltipPosition]=\"control.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          position=\"bottom\"\n          (onSelect)=\"methods.modelChange($event)\"\n        ></novo-select>\n      </div>\n    </ng-template>\n\n    <!--Radio-->\n    <ng-template novoTemplate=\"radio\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\" class=\"novo-control-input-container\">\n        <novo-radio-group [name]=\"control.key\" [formControlName]=\"control.key\">\n          <novo-radio\n            *ngFor=\"let option of control.options\"\n            [value]=\"option.value\"\n            [label]=\"option.label\"\n            [checked]=\"option.value === form.value[control.key] || (form.value[control.key] && option.value === form.value[control.key].id)\"\n            [tooltip]=\"control.tooltip\"\n            [tooltipPosition]=\"control.tooltipPosition\"\n            [tooltipSize]=\"control?.tooltipSize\"\n            [tooltipPreline]=\"control?.tooltipPreline\"\n            [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n            [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n            [button]=\"!!option.icon\"\n            [icon]=\"option.icon\"\n            [color]=\"option.color\"\n            [theme]=\"!!option.icon && !option.label ? 'icon' : 'secondary'\"\n            [attr.data-automation-id]=\"control.key + '-' + (option?.label || option?.value)\"\n          ></novo-radio>\n        </novo-radio-group>\n      </div>\n    </ng-template>\n\n    <!--Time-->\n    <ng-template novoTemplate=\"time\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div\n        [formGroup]=\"form\"\n        class=\"novo-control-input-container\"\n        [tooltip]=\"control?.tooltip\"\n        [tooltipPosition]=\"control?.tooltipPosition\"\n        [tooltipSize]=\"control?.tooltipSize\"\n        [tooltipPreline]=\"control?.tooltipPreline\"\n        [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n        [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n      >\n        <novo-time-picker-input\n          [attr.id]=\"control.key\"\n          [name]=\"control.key\"\n          [formControlName]=\"control.key\"\n          [placeholder]=\"control.placeholder\"\n          [military]=\"control.military\"\n        ></novo-time-picker-input>\n      </div>\n    </ng-template>\n\n    <!--Native Input--->\n    <ng-template novoTemplate=\"native-input\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div\n        [formGroup]=\"form\"\n        class=\"novo-control-input-container novo-control-input-with-label\"\n        [tooltip]=\"control?.tooltip\"\n        [tooltipPosition]=\"control?.tooltipPosition\"\n        [tooltipSize]=\"control?.tooltipSize\"\n        [tooltipPreline]=\"control?.tooltipPreline\"\n        [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n        [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n      >\n        <input\n          [formControlName]=\"control.key\"\n          [id]=\"control.key\"\n          [type]=\"control.type\"\n          [placeholder]=\"control?.placeholder\"\n          (input)=\"methods.emitChange($event)\"\n          (focus)=\"methods.handleFocus($event)\"\n          (blur)=\"methods.handleBlur($event)\"\n        />\n      </div>\n    </ng-template>\n\n    <!--Date-->\n    <ng-template novoTemplate=\"date\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div\n        [formGroup]=\"form\"\n        class=\"novo-control-input-container\"\n        [tooltip]=\"control.tooltip\"\n        [tooltipPosition]=\"control.tooltipPosition\"\n        [tooltipSize]=\"control?.tooltipSize\"\n        [tooltipPreline]=\"control?.tooltipPreline\"\n        [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n        [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n      >\n        <novo-date-picker-input\n          [attr.id]=\"control.key\"\n          [name]=\"control.key\"\n          [formControlName]=\"control.key\"\n          [start]=\"control.startDate\"\n          [end]=\"control.endDate\"\n          [format]=\"control.dateFormat\"\n          [allowInvalidDate]=\"control.allowInvalidDate\"\n          [textMaskEnabled]=\"control.textMaskEnabled\"\n          [placeholder]=\"control.placeholder\"\n          [weekStart]=\"control.weekStart\"\n          [disabledDateMessage]=\"control.disabledDateMessage\"\n          (focusEvent)=\"methods.handleFocus($event)\"\n          (blurEvent)=\"methods.handleBlur($event)\"\n          (changeEvent)=\"methods.emitChange($event)\"\n        ></novo-date-picker-input>\n      </div>\n    </ng-template>\n\n    <!--Date and Time-->\n    <ng-template novoTemplate=\"date-time\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div\n        [formGroup]=\"form\"\n        class=\"novo-control-input-container\"\n        [tooltip]=\"control.tooltip\"\n        [tooltipPosition]=\"control.tooltipPosition\"\n        [tooltipSize]=\"control?.tooltipSize\"\n        [tooltipPreline]=\"control?.tooltipPreline\"\n        [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n        [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n      >\n        <novo-date-time-picker-input\n          [attr.id]=\"control.key\"\n          [name]=\"control.key\"\n          [formControlName]=\"control.key\"\n          [start]=\"control.startDate\"\n          [end]=\"control.endDate\"\n          [placeholder]=\"control.placeholder\"\n          [military]=\"control.military\"\n          [weekStart]=\"control.weekStart\"\n          (focusEvent)=\"methods.handleFocus($event)\"\n          (blurEvent)=\"methods.handleBlur($event)\"\n          (changeEvent)=\"methods.emitChange($event)\"\n        ></novo-date-time-picker-input>\n      </div>\n    </ng-template>\n\n    <!--Address-->\n    <ng-template novoTemplate=\"address\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-address\n          [formControlName]=\"control.key\"\n          [config]=\"control?.config\"\n          [readOnly]=\"control?.readOnly\"\n          (change)=\"methods.handleAddressChange($event)\"\n          (focus)=\"methods.handleFocus($event.event, $event.field)\"\n          (blur)=\"methods.handleBlur($event.event, $event.field)\"\n          (validityChange)=\"methods.updateValidity()\"\n        ></novo-address>\n      </div>\n    </ng-template>\n\n    <!--Checkbox-->\n    <ng-template novoTemplate=\"checkbox\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-checkbox\n          [formControlName]=\"control?.key\"\n          [name]=\"control?.key\"\n          [label]=\"control?.checkboxLabel\"\n          [tooltip]=\"control?.tooltip\"\n          [tooltipPosition]=\"control?.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          [layoutOptions]=\"control?.layoutOptions\"\n        ></novo-checkbox>\n      </div>\n    </ng-template>\n\n    <!--Switch-->\n    <ng-template novoTemplate=\"switch\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-switch\n          [formControlName]=\"control?.key\"\n          [tooltip]=\"control?.tooltip\"\n          [tooltipPosition]=\"control?.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n        ></novo-switch>\n      </div>\n    </ng-template>\n\n    <!--Checklist-->\n    <ng-template novoTemplate=\"checklist\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-check-list\n          [formControlName]=\"control.key\"\n          [name]=\"control.key\"\n          [options]=\"control?.options\"\n          [tooltip]=\"control?.tooltip\"\n          [tooltipPosition]=\"control?.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          (onSelect)=\"methods.modelChange($event)\"\n        ></novo-check-list>\n      </div>\n    </ng-template>\n\n    <!--QuickNote-->\n    <ng-template novoTemplate=\"quick-note\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n      <div [formGroup]=\"form\">\n        <novo-quick-note\n          [formControlName]=\"control.key\"\n          [startupFocus]=\"control?.startupFocus\"\n          [placeholder]=\"control?.placeholder\"\n          [config]=\"control?.config\"\n          (change)=\"methods.modelChange($event)\"\n          [tooltip]=\"control?.tooltip\"\n          [tooltipPosition]=\"control?.tooltipPosition\"\n          [tooltipSize]=\"control?.tooltipSize\"\n          [removeTooltipArrow]=\"control?.removeTooltipArrow\"\n          [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"\n          [tooltipPreline]=\"control?.tooltipPreline\"\n        ></novo-quick-note>\n      </div>\n    </ng-template>\n  `,\n})\nexport class NovoControlTemplates implements AfterViewInit {\n  @ViewChildren(NovoTemplate)\n  defaultTemplates: QueryList<NovoTemplate>;\n  constructor(private templates: NovoTemplateService) {}\n\n  ngAfterViewInit(): void {\n    if (this.defaultTemplates && this.defaultTemplates.length) {\n      this.defaultTemplates.forEach((template: any) => {\n        this.templates.addDefault(template.name, template.template);\n      });\n    }\n  }\n}\n","// NG\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\n// App\nimport { Helpers } from './../../utils/Helpers';\nimport { NovoFieldset } from './FormInterfaces';\nimport { NovoFormGroup } from './NovoFormGroup';\n\n@Component({\n  selector: 'novo-fieldset-header',\n  template: `\n    <novo-title smaller>\n      <novo-icon>{{ icon?.replace('bhi-', '') }}</novo-icon\n      >{{ title }}\n    </novo-title>\n  `,\n  host: {\n    class: 'novo-fieldset-header',\n  },\n})\nexport class NovoFieldsetHeaderElement {\n  @Input()\n  title: string;\n  @Input()\n  icon: string = 'section';\n}\n\n@Component({\n  selector: 'novo-fieldset',\n  template: `\n    <div class=\"novo-fieldset-container\">\n      <novo-fieldset-header\n        [icon]=\"icon\"\n        [title]=\"title\"\n        *ngIf=\"title\"\n        [class.embedded]=\"isEmbedded\"\n        [class.inline-embedded]=\"isInlineEmbedded\"\n        [class.hidden]=\"hidden\"\n      ></novo-fieldset-header>\n      <ng-container *ngFor=\"let control of controls; let controlIndex = index\">\n        <div class=\"novo-form-row\" [class.disabled]=\"control.disabled\" *ngIf=\"control.__type !== 'GroupedControl'\">\n          <novo-control [autoFocus]=\"autoFocus && index === 0 && controlIndex === 0\" [control]=\"control\" [form]=\"form\"></novo-control>\n        </div>\n        <div *ngIf=\"control.__type === 'GroupedControl'\">TODO - GroupedControl</div>\n      </ng-container>\n    </div>\n  `,\n})\nexport class NovoFieldsetElement {\n  @Input()\n  controls: Array<any> = [];\n  @Input()\n  form: any;\n  @Input()\n  title: string;\n  @Input()\n  icon: string;\n  @Input()\n  index: number;\n  @Input()\n  autoFocus: boolean;\n  @Input()\n  isEmbedded = false;\n  @Input()\n  isInlineEmbedded = false;\n  @Input()\n  hidden = false;\n}\n\n@Component({\n  selector: 'novo-dynamic-form',\n  template: `\n    <novo-control-templates></novo-control-templates>\n    <div class=\"novo-form-container\">\n      <header>\n        <ng-content select=\"form-title\"></ng-content>\n        <ng-content select=\"form-subtitle\"></ng-content>\n      </header>\n      <form class=\"novo-form\" [formGroup]=\"form\">\n        <ng-container *ngFor=\"let fieldset of form.fieldsets; let i = index\">\n          <novo-fieldset\n            *ngIf=\"fieldset.controls.length\"\n            [index]=\"i\"\n            [autoFocus]=\"autoFocusFirstField\"\n            [icon]=\"fieldset.icon\"\n            [controls]=\"fieldset.controls\"\n            [title]=\"fieldset.title\"\n            [form]=\"form\"\n            [isEmbedded]=\"fieldset.isEmbedded\"\n            [isInlineEmbedded]=\"fieldset.isInlineEmbedded\"\n            [hidden]=\"fieldset.hidden\"\n          ></novo-fieldset>\n        </ng-container>\n      </form>\n    </div>\n  `,\n  providers: [NovoTemplateService],\n})\nexport class NovoDynamicFormElement implements OnChanges, OnInit, AfterContentInit {\n  @Input()\n  controls: Array<any> = [];\n  @Input()\n  fieldsets: Array<NovoFieldset> = [];\n  @Input()\n  form: NovoFormGroup;\n  @Input()\n  layout: string;\n  @Input()\n  hideNonRequiredFields: boolean = true;\n  @Input()\n  autoFocusFirstField: boolean = false;\n  @ContentChildren(NovoTemplate)\n  customTemplates: QueryList<NovoTemplate>;\n  private fieldsAlreadyHidden: string[];\n\n  allFieldsRequired = false;\n  allFieldsNotRequired = false;\n  showingAllFields = false;\n  showingRequiredFields = true;\n  numControls = 0;\n\n  constructor(private element: ElementRef, private templates: NovoTemplateService) {}\n\n  public ngOnInit(): void {\n    this.ngOnChanges();\n  }\n\n  public ngOnChanges(changes?: SimpleChanges): void {\n    this.form.layout = this.layout;\n\n    if (!(this.fieldsets && this.fieldsets.length) && this.controls && this.controls.length) {\n      this.fieldsets = [\n        {\n          controls: this.controls,\n        },\n      ];\n      this.numControls = this.controls.length;\n    } else if (this.fieldsets) {\n      this.fieldsets.forEach((fieldset) => {\n        this.numControls = this.numControls + fieldset.controls.length;\n      });\n    }\n\n    const requiredFields: Array<any> = [];\n    const nonRequiredFields: Array<any> = [];\n    this.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        if (control.required) {\n          requiredFields.push(control);\n        } else {\n          nonRequiredFields.push(control);\n        }\n      });\n    });\n    this.allFieldsRequired = requiredFields.length === this.numControls;\n    this.allFieldsNotRequired = nonRequiredFields.length === this.numControls;\n    if (this.allFieldsNotRequired && this.hideNonRequiredFields) {\n      this.fieldsets.forEach((fieldset) => {\n        fieldset.controls.forEach((control) => {\n          this.form.controls[control.key].hidden = false;\n        });\n      });\n    }\n    this.form.fieldsets = [...this.fieldsets];\n  }\n\n  ngAfterContentInit() {\n    if (this.customTemplates && this.customTemplates.length) {\n      this.customTemplates.forEach((template: any) => {\n        this.templates.addCustom(template.name, template.template);\n      });\n    }\n  }\n\n  public showAllFields(): void {\n    this.form.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        const ctl = this.form.controls[control.key];\n        if (!this.fieldsAlreadyHidden.includes(control.key)) {\n          ctl.hidden = false;\n        }\n      });\n    });\n    this.showingAllFields = true;\n    this.showingRequiredFields = false;\n  }\n\n  public showOnlyRequired(hideRequiredWithValue): void {\n    this.fieldsAlreadyHidden = [];\n    this.form.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        const ctl = this.form.controls[control.key];\n\n        if (ctl.hidden) {\n          this.fieldsAlreadyHidden.push(control.key);\n        }\n\n        // Hide any non-required fields\n        if (!control.required) {\n          ctl.hidden = true;\n        }\n\n        // Hide required fields that have been successfully filled out\n        if (\n          hideRequiredWithValue &&\n          !Helpers.isBlank(this.form.value[control.key]) &&\n          (!control.isEmpty || (control.isEmpty && control.isEmpty(ctl)))\n        ) {\n          ctl.hidden = true;\n        }\n\n        // Don't hide fields with errors\n        if (ctl.errors) {\n          ctl.hidden = false;\n        }\n      });\n    });\n    this.showingAllFields = false;\n    this.showingRequiredFields = true;\n    this.forceValidation();\n  }\n\n  get values() {\n    return this.form ? this.form.value : null;\n  }\n\n  get isValid() {\n    return this.form ? this.form.valid : false;\n  }\n\n  public updatedValues(): any {\n    let ret = null;\n    this.form.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        if (this.form.controls[control.key].dirty || control.dirty) {\n          if (!ret) {\n            ret = {};\n          }\n          ret[control.key] = this.form.value[control.key];\n        }\n      });\n    });\n    return ret;\n  }\n\n  public forceValidation(): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      const control: any = this.form.controls[key];\n      if (control.required && Helpers.isBlank(this.form.value[control.key])) {\n        control.markAsDirty();\n        control.markAsTouched();\n      }\n    });\n  }\n}\n","// NG\nimport { AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\n// App\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nimport { NovoFormGroup } from './NovoFormGroup';\n\n@Component({\n  selector: 'novo-form',\n  template: `\n    <novo-control-templates></novo-control-templates>\n    <div class=\"novo-form-container\">\n      <header *ngIf=\"!hideHeader\">\n        <ng-content select=\"form-title\"></ng-content>\n        <ng-content select=\"form-subtitle\"></ng-content>\n      </header>\n      <form class=\"novo-form\" [formGroup]=\"form\">\n        <ng-content></ng-content>\n      </form>\n    </div>\n  `,\n  providers: [NovoTemplateService],\n})\nexport class NovoFormElement implements AfterContentInit, OnInit {\n  @Input()\n  form: NovoFormGroup;\n  @Input()\n  layout: string;\n  @Input()\n  hideHeader: boolean = false;\n\n  @ContentChildren(NovoTemplate)\n  customTemplates: QueryList<NovoTemplate>;\n\n  public showingAllFields: boolean = false;\n  public showingRequiredFields: boolean = true;\n\n  constructor(private templates: NovoTemplateService) {}\n\n  get value() {\n    return this.form.getRawValue();\n  }\n\n  get isValid() {\n    return this.form.valid;\n  }\n\n  ngOnInit() {\n    this.form.layout = this.layout;\n  }\n\n  ngAfterContentInit() {\n    if (this.customTemplates && this.customTemplates.length) {\n      this.customTemplates.forEach((template: any) => {\n        this.templates.addCustom(template.name, template.template);\n      });\n    }\n  }\n\n  public showAllFields(): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      this.form.controls[key].hidden = false;\n    });\n    this.showingAllFields = true;\n    this.showingRequiredFields = false;\n  }\n\n  public showOnlyRequired(hideRequiredWithValue): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      // Hide any non-required fields\n      if (!this.form.controls[key].required) {\n        this.form.controls[key].hidden = true;\n      }\n\n      // Hide required fields that have been successfully filled out\n      if (hideRequiredWithValue && !Helpers.isBlank(this.form.value[key])) {\n        this.form.controls[key].hidden = true;\n      }\n\n      // Don't hide fields with errors\n      if (this.form.controls[key].errors) {\n        this.form.controls[key].hidden = false;\n      }\n    });\n    this.showingAllFields = false;\n    this.showingRequiredFields = true;\n    this.forceValidation();\n  }\n\n  public forceValidation(): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      const control: any = this.form.controls[key];\n      if (control.required && Helpers.isBlank(this.form.value[control.key])) {\n        control.markAsDirty();\n        control.markAsTouched();\n      }\n    });\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { BooleanInput } from '../../utils';\n\n@Component({\n  selector: 'header-spacer',\n  template: `<ng-content></ng-content>`,\n})\nexport class NovoHeaderSpacer {}\n\n@Component({\n  selector: 'utils',\n  template: `<ng-content></ng-content>`,\n})\nexport class NovoUtilsComponent {}\n\n@Component({\n  selector: 'util-action, novo-action',\n  template: `\n    <novo-button theme=\"icon\" [icon]=\"icon\" [attr.inverse]=\"inverse\" [disabled]=\"disabled\">\n      <ng-content></ng-content>\n    </novo-button>\n  `,\n  host: {\n    class: 'novo-action',\n  },\n})\nexport class NovoUtilActionComponent {\n  @Input()\n  public icon: string;\n  @Input()\n  public inverse: boolean;\n  @Input()\n  public disabled: boolean;\n}\n\n@Component({\n  selector: 'novo-header,header[theme],header[accent]',\n  template: `\n    <section>\n      <div class=\"header-title\">\n        <ng-content select=\"[prefix]\"></ng-content>\n        <ng-container *ngIf=\"title\">\n          <novo-icon class=\"header-icon\" *ngIf=\"icon\">{{ icon }}</novo-icon>\n          <div class=\"header-titles\">\n            <novo-title size=\"xl\">{{ title }}</novo-title>\n            <novo-title size=\"md\" *ngIf=\"subTitle\">{{ subTitle }}</novo-title>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!title\">\n          <ng-content select=\"novo-icon, [novo-icon]\"></ng-content>\n          <div class=\"header-titles\">\n            <ng-content select=\"h1, h2, h3, h4, h5, h6, small, novo-title, [novo-title], [novo-subtitle]\"></ng-content>\n          </div>\n        </ng-container>\n      </div>\n      <ng-content select=\"section\"></ng-content>\n      <span class=\"spacer\"></span>\n      <div class=\"header-actions\">\n        <ng-content select=\"novo-action,[novo-action]\"></ng-content>\n      </div>\n      <ng-content select=\"utils\"></ng-content>\n      <ng-content select=\"[suffix]\"></ng-content>\n    </section>\n    <ng-content></ng-content>\n  `,\n})\nexport class NovoHeaderComponent {\n  @HostBinding('attr.role')\n  public role = 'heading';\n  @HostBinding('class')\n  public headerClass: string = 'novo-header';\n  @HostBinding('class.condensed')\n  @Input()\n  @BooleanInput()\n  public condensed: boolean = false;\n  @Input()\n  public title: string;\n  @Input()\n  public subTitle: string;\n  public inverse: string = 'inverse';\n\n  @Input()\n  public icon: string;\n\n  @Input()\n  public size: 'small' | 'medium' | 'large';\n\n  @HostBinding('class.header-size-small')\n  get hb_isSizeSmall(): boolean {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.header-size-large')\n  get hb_isSizeLarge(): boolean {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.header-size-default')\n  get hb_isSizeDefault(): boolean {\n    return !['small', 'large'].includes(this.size);\n  }\n\n  @HostBinding('attr.theme')\n  @Input()\n  set theme(theme: string) {\n    this._theme = theme;\n    this.inverse = theme === 'white' || theme === 'off-white' || theme === 'light' ? undefined : 'inverse';\n  }\n\n  get theme(): string {\n    return this._theme;\n  }\n\n  private _theme: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoCommonModule } from './../common/common.module';\nimport { NovoIconModule } from './../icon/Icon.module';\nimport { NovoHeaderComponent, NovoHeaderSpacer, NovoUtilActionComponent, NovoUtilsComponent } from './Header';\n\n@NgModule({\n  imports: [CommonModule, NovoCommonModule, NovoIconModule, NovoButtonModule],\n  declarations: [NovoHeaderComponent, NovoUtilActionComponent, NovoUtilsComponent, NovoHeaderSpacer],\n  exports: [NovoHeaderComponent, NovoUtilActionComponent, NovoUtilsComponent, NovoHeaderSpacer],\n})\nexport class NovoHeaderModule {}\n","// NG2\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NovoModalRef } from './modal-ref';\n\n@Component({\n  selector: 'novo-modal',\n  template: `\n    <ng-content select=\"header,novo-header,novo-card-header\"></ng-content>\n    <ng-content select=\"section,novo-card-content\"></ng-content>\n    <footer class=\"novo-modal-footer\"><ng-content select=\"button,novo-button\"></ng-content></footer>\n  `,\n  host: {\n    class: 'novo-modal',\n  },\n})\nexport class NovoModalElement {\n  constructor(private modalRef: NovoModalRef) {}\n}\n\n@Component({\n  selector: 'novo-notification',\n  template: `\n    <novo-button class=\"modal-close\" theme=\"icon\" icon=\"x\" (click)=\"close()\"></novo-button>\n    <header class=\"novo-notification-header\"><ng-content select=\"label,novo-label\"></ng-content></header>\n    <section class=\"novo-notification-body notification-body\">\n      <i class=\"indicator\" [ngClass]=\"iconType\" *ngIf=\"iconType\"></i>\n      <ng-content select=\"h1\"></ng-content>\n      <ng-content select=\"h2\"></ng-content>\n      <ng-content select=\"p\"></ng-content>\n    </section>\n    <footer class=\"novo-notification-footer\"><ng-content select=\"button,novo-button\"></ng-content></footer>\n  `,\n  host: {\n    class: 'novo-notification',\n  },\n})\nexport class NovoModalNotificationElement implements OnInit {\n  @Input()\n  type: string;\n  @Input()\n  icon: string;\n\n  @Output()\n  cancel: EventEmitter<any> = new EventEmitter();\n\n  iconType: string;\n\n  constructor(private modalRef: NovoModalRef) {\n    this.modalRef = modalRef;\n  }\n\n  close() {\n    this.cancel.emit();\n    this.modalRef.close();\n  }\n\n  ngOnInit() {\n    switch (this.type) {\n      case 'success':\n        this.iconType = 'bhi-check';\n        break;\n      case 'warning':\n        this.iconType = 'bhi-caution-o';\n        break;\n      case 'error':\n        this.iconType = 'bhi-caution-o';\n        break;\n      case 'custom':\n        this.iconType = `bhi-${this.icon}`;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","// NG2\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoModalContainerComponent } from './modal-container.component';\nimport { NovoModalElement, NovoModalNotificationElement } from './modal.component';\nimport { NovoModalService } from './modal.service';\n\n@NgModule({\n  imports: [OverlayModule, PortalModule, CommonModule, NovoButtonModule],\n  declarations: [NovoModalContainerComponent, NovoModalElement, NovoModalNotificationElement],\n  exports: [NovoModalElement, NovoModalNotificationElement],\n  providers: [NovoModalService],\n})\nexport class NovoModalModule {}\n","// NG2\nimport { ChangeDetectorRef, Component, ElementRef } from '@angular/core';\n// Vendor\nimport { from, Observable } from 'rxjs';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// APP\nimport { Helpers } from '../../../../utils/Helpers';\nimport { PickerResults } from '../../../picker/extras/picker-results/PickerResults';\n\n@Component({\n  selector: 'quick-note-results',\n  host: {\n    class: 'active',\n  },\n  template: `\n    <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n    <novo-list *ngIf=\"matches.length > 0\">\n      <novo-list-item\n        *ngFor=\"let match of matches\"\n        (click)=\"selectMatch($event)\"\n        [class.active]=\"match === activeMatch\"\n        (mouseenter)=\"selectActive(match)\"\n      >\n        <item-content>\n          <p [innerHtml]=\"highlight(match.label, term)\"></p>\n        </item-content>\n      </novo-list-item>\n    </novo-list>\n    <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.quickNoteError }}</p>\n    <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.quickNoteEmpty }}</p>\n  `,\n})\nexport class QuickNoteResults extends PickerResults {\n  // Mode that the quick note is in for tagging\n  taggingMode: string = '';\n\n  constructor(element: ElementRef, public labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, labels, ref);\n  }\n\n  get term() {\n    return this._term;\n  }\n\n  set term(value: any) {\n    this._term = value.searchTerm;\n    this.taggingMode = value.taggingMode;\n    this.hasError = false;\n    this.isLoading = true;\n    this.search(value, this.taggingMode).subscribe(\n      (results) => {\n        this.matches = this.isStatic ? this.filterData(results) : results;\n        this.isLoading = false;\n      },\n      () => {\n        this.hasError = true;\n        this.isLoading = false;\n      },\n    );\n  }\n\n  search(term: string, taggingMode): Observable<any> {\n    const searchCall = this.config.options[taggingMode];\n    return from(\n      new Promise((resolve, reject) => {\n        // Check if there is match data\n        if (searchCall) {\n          // Resolve the data\n          if (Array.isArray(searchCall)) {\n            this.isStatic = true;\n            // Arrays are returned immediately\n            resolve(this.structureArray(searchCall));\n          } else if (\n            (searchCall.hasOwnProperty('reject') && searchCall.hasOwnProperty('resolve')) ||\n            Object.getPrototypeOf(searchCall).hasOwnProperty('then')\n          ) {\n            this.isStatic = false;\n            // Promises (ES6 or Deferred) are resolved whenever they resolve\n            searchCall.then(this.structureArray.bind(this)).then(resolve, reject);\n          } else if (typeof searchCall === 'function') {\n            this.isStatic = false;\n            // Promises (ES6 or Deferred) are resolved whenever they resolve\n            searchCall(term).then(this.structureArray.bind(this)).then(resolve, reject);\n          } else {\n            // All other kinds of data are rejected\n            reject('The data provided is not an array or a promise');\n            throw new Error('The data provided is not an array or a promise');\n          }\n        } else {\n          // No data gets rejected\n          reject('error');\n        }\n      }),\n    );\n  }\n\n  /**\n   * @name structureArray\n   * @param collection - the data once getData resolves it\n   *\n   * @description This function structures an array of nodes into an array of objects with a\n   * 'name' field by default.\n   */\n  structureArray(collection: Array<any>) {\n    if (collection && (typeof collection[0] === 'string' || typeof collection[0] === 'number')) {\n      return collection.map((item) => {\n        return {\n          value: item,\n          label: item,\n        };\n      });\n    }\n    return collection.map((data) => {\n      const value = this.config.field ? data[this.config.field[this.taggingMode]] : data.value || data;\n      const label = this.config.format ? Helpers.interpolate(this.config.format[this.taggingMode], data) : data.label || String(value);\n      return { value, label, data };\n    });\n  }\n\n  /**\n   * @name selectMatch\n   * @param event\n   *\n   * @description\n   */\n  selectMatch(event: KeyboardEvent) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    const selected = this.activeMatch;\n    if (selected) {\n      this.parent.onSelected(this.taggingMode, selected);\n      this.parent.hideResults();\n    }\n    return false;\n  }\n}\n","// NG2\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Key } from '../../utils';\nimport { ComponentUtils } from './../../utils/component-utils/ComponentUtils';\n// APP\nimport { OutsideClick } from './../../utils/outside-click/OutsideClick';\nimport { QuickNoteResults } from './extras/quick-note-results/QuickNoteResults';\n\n// Value accessor for the component (supports ngModel)\nconst QUICK_NOTE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QuickNoteElement),\n  multi: true,\n};\n\ndeclare var CKEDITOR: any;\n\n@Component({\n  selector: 'novo-quick-note',\n  providers: [QUICK_NOTE_VALUE_ACCESSOR],\n  template: ` <div class=\"quick-note-wrapper\" #wrapper><textarea #host></textarea> <span #results></span></div> `,\n})\nexport class QuickNoteElement extends OutsideClick implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('wrapper', { static: true })\n  public wrapper: ElementRef;\n  @ViewChild('host', { static: true })\n  public host: ElementRef;\n  @ViewChild('results', { read: ViewContainerRef, static: true })\n  results: ViewContainerRef;\n\n  @Input()\n  config: any;\n  @Input()\n  startupFocus: boolean = false;\n  @Input()\n  placeholder: string;\n\n  // Emitter for selects\n  @Output()\n  focus: EventEmitter<any> = new EventEmitter();\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter();\n  @Output()\n  change: EventEmitter<any> = new EventEmitter();\n\n  // The characters that the user enters in order to search for a person/thing to tag\n  private resultsComponent: any;\n  private quickNoteResults: any;\n  private isTagging: boolean;\n  private taggingMode: string;\n  private model: any;\n  private ckeInstance: any;\n  private debounceTimeout: any;\n  private placeholderVisible: boolean = false;\n  private _placeholderElement: any = null;\n\n  private static TOOLBAR_HEIGHT = 40; // in pixels - configured by stylesheet\n\n  private onModelChange: Function = () => {};\n  private onModelTouched: Function = () => {};\n\n  constructor(private zone: NgZone, element: ElementRef, private componentUtils: ComponentUtils) {\n    super(element);\n    // Bind to the active change event from the OutsideClick\n    this.onActiveChange.subscribe((active) => {\n      if (!active) {\n        setTimeout(() => {\n          this.hideResults();\n        });\n      }\n    });\n  }\n\n  public ngOnInit(): void {\n    // Make sure we have a proper config\n    if (!this.config) {\n      throw new Error('No config set for QuickNote!');\n    }\n    // Make sure that we have triggers\n    if (!this.config.triggers) {\n      throw new Error('QuickNote config must supply triggers!');\n    }\n    // Make sure that we have options\n    if (!this.config.options) {\n      throw new Error('QuickNote config must supply options!');\n    }\n    // Allow for callers to use a custom results template class in the config\n    this.resultsComponent = this.config.resultsTemplate || QuickNoteResults;\n  }\n\n  public ngOnDestroy(): void {\n    // Tear down the CKEditor instance\n    if (this.ckeInstance) {\n      this.ckeInstance.focusManager.blur(true); // Remove focus from editor\n      setTimeout(() => {\n        this.ckeInstance.removeAllListeners();\n        CKEDITOR.instances[this.ckeInstance.name].destroy();\n        this.ckeInstance.destroy();\n        this.ckeInstance = null;\n      });\n    }\n  }\n\n  /**\n   * Connect to key/mouse events from CKEditor after the editor has been initialized\n   */\n  public ngAfterViewInit(): void {\n    if (!CKEDITOR) {\n      console.error('Make sure to include CKEditor sources in your dependencies!');\n      return;\n    }\n\n    // Replace the textarea with an instance of CKEditor\n    this.ckeInstance = CKEDITOR.replace(this.host.nativeElement, this.getCKEditorConfig());\n\n    // Set initial value of the note in the editor\n    this.writeValue(this.model);\n\n    // Connect to the key event in CKEditor for showing results dropdown\n    this.ckeInstance.on('key', (event: any) => {\n      if (!this.onKey(event.data.domEvent.$)) {\n        event.cancel();\n      }\n    });\n\n    // Connect to the change event in CKEditor for debouncing user modifications\n    this.ckeInstance.on('change', () => {\n      // Debounce update\n      if (this.debounceTimeout) {\n        clearTimeout(this.debounceTimeout);\n      }\n      this.debounceTimeout = setTimeout(() => {\n        // Run within the context of this angular element since we don't need to cancel event\n        this.zone.run(() => {\n          this.onValueChange();\n        });\n        this.debounceTimeout = null;\n      }, 250);\n    });\n\n    // Propagate blur events from CKEditor to the Element's listeners\n    this.ckeInstance.on('blur', (event: any) => {\n      this.showPlaceholder();\n      this.blur.emit(event);\n    });\n\n    // Propagate blur events from CKEditor to the Element's listeners\n    this.ckeInstance.on('focus', (event: any) => {\n      this.hidePlaceholder();\n      this.focus.emit(event);\n    });\n\n    // Show placeholder if the note is empty, after the editor is instantiated\n    this.ckeInstance.on('instanceReady', (event: any) => {\n      this.showPlaceholder();\n      // Set editor to readOnly\n      if (this.config.readOnly) {\n        this.ckeInstance.setReadOnly(this.config.readOnly);\n      }\n    });\n  }\n\n  // Set touched on blur\n  public onTouched(event?: any) {\n    this.onModelTouched();\n  }\n\n  /**\n   * Handles setting the model and the view from the outside caller or the user's typing\n   *\n   * @param model A model that has a note (html content) and references (array of objects)\n   */\n  public writeValue(model: any): void {\n    // Set value of the model\n    if (model && (model.references || model.note)) {\n      this.model = {\n        note: model.note || '',\n        references: model.references || {},\n      };\n    } else {\n      this.model = {\n        note: model,\n        references: {},\n      };\n    }\n\n    // Set the note html value in the editor\n    if (this.ckeInstance) {\n      this.ckeInstance.setData(this.model.note);\n    }\n  }\n\n  public registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  public registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  /**\n   * If a renderer is not provided, the QuickNote will default to using this one, an anchor tag with no href\n   */\n  private static defaultRenderer(symbol: string, item: any): string {\n    return `<a>${symbol}${item.label}</a>`;\n  }\n\n  /**\n   * Returns the renderer for a given tagging mode if it exists in the config, otherwise the default.\n   */\n  private getRenderer(taggingMode: string): any {\n    return this.config.renderer ? this.config.renderer[taggingMode] : QuickNoteElement.defaultRenderer;\n  }\n\n  /**\n   * Called every time a keystroke is made in the editor. Listens for particular keys (e.g. UP arrow, ESC, etc.)\n   * to handle certain behaviors of the picker.\n   *\n   * Runs within the context of the CKEditor, so actions that affect the view have to be run back inside of the\n   * Angular zone of this class.\n   *\n   * @param event The key press event\n   * @return true to allow the event to occur, false to cancel the event\n   */\n  private onKey(event: KeyboardEvent): boolean {\n    if (event.key) {\n      if (this.quickNoteResults) {\n        // Hide results on escape key\n        if (event.key === Key.Escape) {\n          this.zone.run(() => {\n            this.hideResults();\n          });\n          return false;\n        }\n\n        // Navigation inside the results\n        if (event.key === Key.ArrowUp) {\n          this.zone.run(() => {\n            this.quickNoteResults.instance.prevActiveMatch();\n          });\n          return false;\n        }\n\n        if (event.key === Key.ArrowDown) {\n          this.zone.run(() => {\n            this.quickNoteResults.instance.nextActiveMatch();\n          });\n          return false;\n        }\n\n        if (event.key === Key.Enter) {\n          this.zone.run(() => {\n            this.quickNoteResults.instance.selectActiveMatch();\n          });\n          return false;\n        }\n      } else {\n        // Loop through all triggers and turn on tagging mode if the user just pressed a trigger character\n        const triggers = this.config.triggers || {};\n        Object.keys(triggers).forEach((key) => {\n          const trigger = triggers[key] || {};\n          if (event.key === trigger) {\n            this.isTagging = true;\n            this.taggingMode = key;\n          }\n        });\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Debounced method that is run in the proper Angular context when the user has modified the CKEditor.\n   * After the value has been updated in CKEditor, this will propagate that change to the model and listeners.\n   */\n  private onValueChange(): void {\n    // Get the html text in CKEditor\n    let value = this.ckeInstance.getData();\n\n    // Remove empty 'ZERO WIDTH SPACE' characters that can get added erroneously by the editor\n    const regex = new RegExp(String.fromCharCode(8203), 'g');\n    value = value.replace(regex, '');\n\n    // Make sure that any references in the model are still valid\n    this.validateReferences();\n\n    // Possibly show results if the user has entered a search term\n    this.showResults();\n\n    // Propagate change to ngModel for form validation, and send null if the note is empty\n    let newModel = null;\n    if (value) {\n      newModel = {\n        note: value,\n        references: this.model.references,\n      };\n    }\n\n    // Inform listeners to the ngModel change event that something has changed\n    this.onModelChange(newModel);\n\n    // Inform listeners of the `@Output() change` event that the model has been updated\n    this.change.emit(newModel);\n\n    // Inform listeners to the ngModel touched event that something has changed\n    this.onTouched();\n  }\n\n  /**\n   * Creates an instance of the results (called popup) and adds all the bindings to that instance.\n   */\n  private showResults(): void {\n    if (this.isTagging) {\n      const searchTerm = this.getSearchTerm();\n      if (searchTerm.length) {\n        // Update Matches\n        if (this.quickNoteResults) {\n          // Update existing list\n          this.quickNoteResults.instance.term = {\n            searchTerm,\n            taggingMode: this.taggingMode,\n          };\n        } else {\n          // Create the results DOM element\n          this.quickNoteResults = this.componentUtils.append(this.resultsComponent, this.results);\n          this.quickNoteResults.instance.parent = this;\n          this.quickNoteResults.instance.config = this.config;\n          this.quickNoteResults.instance.term = {\n            searchTerm,\n            taggingMode: this.taggingMode,\n          };\n          this.positionResultsDropdown();\n        }\n      } else if (this.quickNoteResults) {\n        this.quickNoteResults.destroy();\n        this.quickNoteResults = null;\n      }\n\n      // Tell the OutsideClick base class to start listening for an outside clicks\n      this.toggleActive(null, true);\n    }\n  }\n\n  /**\n   * Deletes the picker results from the DOM.\n   */\n  private hideResults(): void {\n    this.isTagging = false;\n    if (this.quickNoteResults) {\n      this.quickNoteResults.destroy();\n      this.quickNoteResults = null;\n    }\n  }\n\n  /**\n   * Handles the selection from the QuickNoteResults Component. Called by the QuickNoteResults component on it's\n   * parent (this element).\n   *\n   * @param taggingMode - type of tags we are looking for\n   * @param selected - selected object from the picker that has a label and value\n   */\n  private onSelected(taggingMode: string, selected: any): void {\n    // Turn off tagging\n    this.isTagging = false;\n\n    // Replace searchTerm with link\n    const symbol = this.config.triggers[taggingMode];\n    const renderer = this.getRenderer(taggingMode);\n    const renderedText = renderer(symbol, selected);\n\n    this.replaceWordAtCursor(renderedText);\n\n    // Add the new reference, if it doesn't already exist\n    this.model.references = this.model.references || {};\n    this.model.references[taggingMode] = this.model.references[taggingMode] || [];\n    const matchingItems = this.model.references[taggingMode].filter((item) => JSON.stringify(item) === JSON.stringify(selected));\n    if (matchingItems.length === 0) {\n      this.model.references[taggingMode].push(selected);\n    }\n\n    // Update the quick note with the changes due to the user's selection of an item in the dropdown\n    this.onValueChange();\n  }\n\n  /**\n   * Convenience method that gets the current word that the cursor is on, minus the tag.\n   * Also, trims any whitespace before/after the term to aid in searching.\n   */\n  private getSearchTerm(): string {\n    let word = this.getWordAtCursor().trim();\n    if (this.isTagging) {\n      const symbol = this.config.triggers[this.taggingMode];\n      if (!word.includes(symbol)) {\n        this.hideResults();\n        return '';\n      }\n      word = word.slice(word.indexOf(symbol) + symbol.length);\n    }\n    return word;\n  }\n\n  /**\n   * Gets the current word that the cursor is on CKEditor. Current word starts at the beginning of the line or a\n   * tag character if we are in tagging mode. Current word ends at the end of the line or an empty space.\n   *\n   * @returns plain text string (removes all html formatting)\n   */\n  private getWordAtCursor(): string {\n    const range = this.ckeInstance.getSelection().getRanges()[0];\n    const start = range.startContainer;\n\n    if (start.type === CKEDITOR.NODE_TEXT && range.startOffset) {\n      const text = start.getText();\n      const symbol = this.config.triggers[this.taggingMode];\n      let wordStart = text.lastIndexOf(symbol, range.startOffset - 1);\n\n      if (wordStart > 0) {\n        const beforeSymbol: string = text.charAt(wordStart - 1);\n        // We don't want to trigger the lookup call unless the symbol was preceded by whitespace\n        if (beforeSymbol !== '\\u200B' && /\\S/.test(beforeSymbol)) {\n          return '';\n        }\n      } else if (start.hasPrevious() && /\\S$/.test(start.getPrevious().getText())) {\n        // When wordStart is <= 0, we need to check the previous node's text to see if it ended with whitespace or not\n        return '';\n      }\n\n      let wordEnd = text.indexOf(' ', range.startOffset + 1);\n      if (wordStart === -1) {\n        wordStart = 0;\n      }\n      if (wordEnd === -1) {\n        wordEnd = text.length;\n      }\n\n      return text.substring(wordStart, wordEnd);\n    }\n\n    // Selection starts at the 0 index of the text node or there's no previous text node in contents\n    return '';\n  }\n\n  /**\n   * Replaces the word that the user is on with the given html.\n   *\n   * CKEditor gives us access to the current line of html in the editor, so we replace the content of\n   * the line, replacing only the current word.\n   */\n  private replaceWordAtCursor(newWord: string): void {\n    const originalWord = this.getWordAtCursor().trim();\n    const range = this.ckeInstance.getSelection().getRanges()[0];\n    const start = range.startContainer;\n    const parentNode = start.getParent();\n\n    if (start.type === CKEDITOR.NODE_TEXT && parentNode) {\n      const line = parentNode.getHtml();\n      const index = line.lastIndexOf(originalWord);\n\n      if (index >= 0) {\n        // Add a space after the replaced word so that multiple references can be added back to back\n        const newLine = line.substring(0, index) + newWord + ' ' + line.substring(index + originalWord.length);\n        parentNode.setHtml(newLine);\n\n        // Place selection at the end of the line\n        range.moveToPosition(parentNode, CKEDITOR.POSITION_BEFORE_END);\n        this.ckeInstance.getSelection().selectRanges([range]);\n      }\n    }\n  }\n\n  /**\n   * Returns current references, minus any from the model that have been removed from the editor.\n   */\n  private validateReferences(): void {\n    let html = this.ckeInstance.document.getBody().getHtml();\n\n    // CKEditor stopped supporting the config.forceSimpleAmpersand setting, so we have to convert '&amp;' to '&'\n    // when we pull html from the editor - see: https://dev.ckeditor.com/ticket/13723\n    const ampRegex = new RegExp('&amp;', 'g');\n    html = html.replace(ampRegex, '&');\n\n    Object.keys(this.model.references).forEach((taggingMode) => {\n      const array = this.model.references[taggingMode] || [];\n      const symbol = this.config.triggers[taggingMode];\n      const renderer = this.getRenderer(taggingMode);\n\n      this.model.references[taggingMode] = array.filter((item) => {\n        const renderedText = renderer(symbol, item);\n        return html.includes(renderedText);\n      });\n\n      // If no references, then delete the key\n      if (this.model.references[taggingMode].length === 0) {\n        delete this.model.references[taggingMode];\n      }\n    });\n  }\n\n  /**\n   * Configures the CKEditor for QuickNote functionality.\n   *\n   * Sets the height of the CKEditor dynamically to the height of the wrapper upon initialization.\n   * Removes the toolbar on the bottom and configures a slimmed down version of the toolbar.\n   * Removes plugins and turns off setting to allow browser based spell checking.\n   */\n  private getCKEditorConfig(): any {\n    // Use the height of the wrapper element to set the initial height of the editor, then\n    // set it to 100% to allow the editor to resize using the grippy.\n    const editorHeight = this.wrapper.nativeElement.clientHeight - QuickNoteElement.TOOLBAR_HEIGHT;\n    this.wrapper.nativeElement.style.setProperty('height', '100%');\n\n    return {\n      enterMode: CKEDITOR.ENTER_BR,\n      shiftEnterMode: CKEDITOR.ENTER_P,\n      disableNativeSpellChecker: false,\n      height: editorHeight,\n      startupFocus: this.startupFocus,\n      removePlugins: 'liststyle,tabletools,contextmenu', // allows browser based spell checking\n      toolbar: [\n        {\n          name: 'basicstyles',\n          items: [\n            'Styles',\n            'FontSize',\n            'Bold',\n            'Italic',\n            'Underline',\n            'TextColor',\n            '-',\n            'NumberedList',\n            'BulletedList',\n            'Outdent',\n            'Indent',\n            'Link',\n          ],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Returns the current screen position of the cursor in CKEditor, accounting for any scrolling in the editor.\n   */\n  private getCursorPosition(): any {\n    const range = this.ckeInstance.getSelection().getRanges()[0];\n    const parentElement = range.startContainer.$.parentElement;\n    const editorElement = this.ckeInstance.editable().$;\n\n    // Since the editor is a text node in the DOM that does not know about it's position, a temporary element has to\n    // be inserted in order to locate the cursor position.\n    const cursorElement = document.createElement('img');\n    cursorElement.setAttribute('src', 'null');\n    cursorElement.setAttribute('width', '0');\n    cursorElement.setAttribute('height', '0');\n\n    parentElement.appendChild(cursorElement);\n    const cursorPosition = {\n      top: cursorElement.offsetTop - editorElement.scrollTop,\n      left: cursorElement.offsetLeft - editorElement.scrollLeft,\n    };\n    cursorElement.remove();\n\n    return cursorPosition;\n  }\n\n  /**\n   * Positions the results dropdown based on the location of the cursor in the text field\n   */\n  private positionResultsDropdown(): void {\n    const MIN_MARGIN_TOP: number = QuickNoteElement.TOOLBAR_HEIGHT * 2;\n    const MAX_MARGIN_TOP: number = this.getContentHeight() + QuickNoteElement.TOOLBAR_HEIGHT;\n\n    const cursorPosition = this.getCursorPosition();\n    let marginTop: number = cursorPosition.top + QuickNoteElement.TOOLBAR_HEIGHT;\n\n    // Check that the margin is within the visible bounds\n    marginTop = Math.max(marginTop, MIN_MARGIN_TOP);\n    marginTop = Math.min(marginTop, MAX_MARGIN_TOP);\n\n    // Set the margin-top of the dropdown\n    this.quickNoteResults.instance.element.nativeElement.style.setProperty('margin-top', marginTop + 'px');\n  }\n\n  /**\n   * Returns the height in pixels of the content area - the text that the user has entered.\n   */\n  private getContentHeight(): number {\n    let contentHeight: number = 0;\n    if (\n      this.ckeInstance.ui &&\n      this.ckeInstance.ui.contentsElement &&\n      this.ckeInstance.ui.contentsElement.$ &&\n      this.ckeInstance.ui.contentsElement.$.style\n    ) {\n      const cssText: string = this.ckeInstance.ui.contentsElement.$.style.cssText;\n      if (cssText.indexOf('height: ') !== -1) {\n        let height: string = cssText.split('height: ')[1];\n        height = height.split('px')[0];\n        contentHeight = parseInt(height, 10);\n      }\n    }\n    return contentHeight;\n  }\n\n  /**\n   * Show the placeholder text if the editor is empty\n   */\n  private showPlaceholder(): void {\n    if (!this.ckeInstance.getData() && !this.startupFocus) {\n      this.ckeInstance.editable().getParent().$.appendChild(this.placeholderElement);\n      this.placeholderVisible = true;\n    }\n  }\n\n  /**\n   * Hide the placeholder text by removing the placeholder element from the DOM\n   */\n  private hidePlaceholder(): void {\n    if (this.placeholderVisible) {\n      this.ckeInstance.editable().getParent().$.removeChild(this.placeholderElement);\n      this.placeholderVisible = false;\n    }\n  }\n\n  /**\n   * Get or create the single placeholder object that is constructed only when needed.\n   */\n  private get placeholderElement(): any {\n    if (!this._placeholderElement) {\n      this._placeholderElement = document.createElement('div');\n      this._placeholderElement.className = 'placeholder';\n      this._placeholderElement.style.cssText =\n        'margin: 20px; color: #AAAAAA; font-family: sans-serif; font-size: 13px; line-height: 20px; position: absolute; top: 0';\n      this._placeholderElement.textContent = this.placeholder;\n    }\n    return this._placeholderElement;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoListModule } from './../list/List.module';\n// APP\nimport { NovoLoadingModule } from './../loading/Loading.module';\nimport { QuickNoteResults } from './extras/quick-note-results/QuickNoteResults';\nimport { QuickNoteElement } from './QuickNote';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoLoadingModule, NovoListModule],\n  declarations: [QuickNoteElement, QuickNoteResults],\n  exports: [QuickNoteElement, QuickNoteResults],\n})\nexport class NovoQuickNoteModule {}\n","import { InjectionToken } from '@angular/core';\n\nexport interface RadioGroup<T = any> {\n  name: string;\n  value: T;\n  disabled: boolean;\n  appearance: 'vertical' | 'horizontal';\n}\n\nexport type ComponentType<T> = new (...args: any[]) => T;\n\nexport const NOVO_RADIO_GROUP = new InjectionToken<ComponentType<RadioGroup>>('RadioGroupComponent');\n","// NG2\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NOVO_RADIO_GROUP, RadioGroup } from './tokens';\n\n// make radio-buttons ids unique\nlet nextId = 0;\n\n// Value accessor for the component (supports ngModel)\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoRadioElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-radio',\n  providers: [RADIO_VALUE_ACCESSOR],\n  template: `\n    <input\n      type=\"radio\"\n      [id]=\"id\"\n      [name]=\"name\"\n      [checked]=\"checked\"\n      [tabIndex]=\"tabindex\"\n      [disabled]=\"disabled\"\n      (focus)=\"focus.emit($event)\"\n      (blur)=\"blur.emit($event)\"\n      (change)=\"_onInputChange($event)\"\n    />\n    <label [attr.for]=\"id\" [class.disabled]=\"disabled\">\n      <novo-button\n        *ngIf=\"button\"\n        [ngClass]=\"{ unchecked: !checked, checked: checked, 'has-icon': !!icon }\"\n        [theme]=\"theme\"\n        [color]=\"checked ? color : null\"\n        [icon]=\"icon\"\n        [size]=\"size\"\n      >\n        {{ label }}\n      </novo-button>\n      <div *ngIf=\"!button\" class=\"novo-radio-button-label\">\n        <i [ngClass]=\"{ 'bhi-radio-empty': !checked, 'bhi-radio-filled': checked }\"></i>\n        {{ label }}\n        <ng-content></ng-content>\n      </div>\n    </label>\n  `,\n  host: {\n    '[class.vertical]': 'vertical',\n  },\n})\nexport class NovoRadioElement implements ControlValueAccessor, OnInit {\n  private _uniqueId: string = `novo-radio-${++nextId}`;\n  @Input() id: string = this._uniqueId;\n  @Input() name: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n\n  @Input()\n  vertical: boolean = false;\n  @Input()\n  label: string;\n  @Input()\n  button: boolean = false;\n  @Input()\n  theme: string = 'secondary';\n  @Input()\n  size: string;\n  @Input()\n  icon: string;\n  @Input()\n  color: string;\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _checked: boolean = false;\n  private _value: boolean = false;\n  private _disabled: boolean = false;\n\n  @Input() get checked(): boolean {\n    return this._checked;\n  }\n\n  set checked(value: boolean) {\n    value = !!value;\n    if (this._checked !== value) {\n      this._checked = value;\n      if (this._checked && this.radioGroup && this.radioGroup.value !== this.value) {\n        this.radioGroup.value = this.value;\n      }\n      this.onChangeCallback(this._value);\n    }\n  }\n\n  @Input() get value(): boolean {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      if (this.radioGroup) {\n        this._checked = this.radioGroup.value === this.value;\n      }\n      this.onChangeCallback(this._value);\n    }\n  }\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(@Inject(NOVO_RADIO_GROUP) @Optional() public radioGroup: RadioGroup, private ref: ChangeDetectorRef) {\n    this.radioGroup = radioGroup;\n  }\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      this.checked = this.radioGroup.value === this._value;\n      this.vertical = this.radioGroup.appearance === 'vertical';\n      this.name = this.radioGroup.name;\n    }\n  }\n\n  _onInputChange(event: Event) {\n    event.stopPropagation();\n    this.change.emit(event);\n\n    this.checked = true;\n\n    if (this.radioGroup) {\n      this.radioGroup.value = this.value;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.ref.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n}\n","// NG2\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from '../common';\nimport { NovoFieldControl } from '../field';\nimport { NovoRadioElement } from './Radio';\nimport { NOVO_RADIO_GROUP } from './tokens';\n\n// make radio-button-group ids unique\nlet nextId = 0;\n// Value accessor for the component (supports ngModel)\nconst RADIOGROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoRadioGroup),\n  multi: true,\n};\n\n// Boilerplate for applying mixins\nclass NovoRadioGroupBase {\n  constructor(\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    public _parentForm: NgForm,\n    public _parentFormGroup: FormGroupDirective,\n    public ngControl: NgControl,\n  ) {}\n}\nconst NovoRadioGroupMixins: CanUpdateErrorStateCtor & typeof NovoRadioGroupBase = mixinErrorState(NovoRadioGroupBase);\n\n@Component({\n  selector: 'novo-radio-group',\n  providers: [\n    RADIOGROUP_VALUE_ACCESSOR,\n    { provide: NOVO_RADIO_GROUP, useExisting: NovoRadioGroup },\n    { provide: NovoFieldControl, useExisting: NovoRadioGroup },\n  ],\n  template: '<ng-content></ng-content>',\n  host: {\n    class: 'novo-radio-group',\n    '[class.novo-radio-group-appearance-horizontal]': 'appearance==\"horizontal\"',\n    '[class.novo-radio-group-appearance-vertical]': 'appearance==\"vertical\"',\n  },\n})\nexport class NovoRadioGroup extends NovoRadioGroupMixins implements NovoFieldControl<any>, ControlValueAccessor, AfterContentInit {\n  private _uniqueId: string = `novo-radio-group-${++nextId}`;\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n  /** User defined tab index. */\n  _userTabIndex: number | null = null;\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<NovoRadioElement>;\n\n  readonly controlType: string = 'radio-group';\n  /** @docs-private Implemented as part of NovoFieldControl. */\n  lastKeyValue: string = null;\n  /** @docs-private Implemented as part of NovoFieldControl.*/\n  lastCaretPosition: number | null;\n\n  @Input() id: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  // @Output() focused = new EventEmitter();\n\n  @ContentChildren(forwardRef(() => NovoRadioElement), { descendants: true })\n  _radios: QueryList<NovoRadioElement>;\n\n  @Input()\n  get appearance(): any {\n    return this._appearance;\n  }\n\n  set appearance(value) {\n    if (this._appearance !== value) {\n      this._appearance = value;\n      this._updateRadioButtonAppearance();\n    }\n  }\n\n  @Input() get value(): any {\n    return this._value;\n  }\n\n  set value(value) {\n    if (this._value !== value) {\n      this._value = value;\n      this._updateSelectedRadioFromValue();\n      this.onChangeCallback(this._value);\n    }\n  }\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    if (this._name !== value) {\n      this._updateRadioButtonNames();\n    }\n  }\n\n  @HostBinding('class.disabled')\n  @Input()\n  get disabled(): boolean {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._updateRadioButtonDisabled();\n  }\n\n  /**\n   * Implemented as part of NovoFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n  }\n\n  get selected(): NovoRadioElement {\n    return this._selected;\n  }\n\n  protected _name: string = this._uniqueId;\n  protected _value: boolean = false;\n  protected _selected: NovoRadioElement;\n  protected _required: boolean = false;\n  protected _disabled: boolean = false;\n  protected _placeholder: string;\n  protected _appearance: 'horizontal' | 'vertical' = 'horizontal';\n\n  ngAfterContentInit() {\n    this._updateRadioButtonAppearance();\n    this._updateRadioButtonNames();\n    this._updateSelectedRadioFromValue();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  private _updateRadioButtonAppearance(): void {\n    if (this._radios) {\n      this._radios.forEach((radio) => {\n        radio.vertical = this.appearance === 'vertical';\n      });\n    }\n  }\n\n  private _updateRadioButtonNames(): void {\n    if (this._radios) {\n      this._radios.forEach((radio) => {\n        radio.name = this.name;\n      });\n    }\n  }\n\n  private _updateRadioButtonDisabled(): void {\n    if (this._radios) {\n      this._radios.forEach((radio) => {\n        radio.disabled = this.disabled;\n      });\n    }\n  }\n\n  private _updateSelectedRadioFromValue(): void {\n    if (this._radios) {\n      this._radios.forEach((radio) => {\n        radio.checked = this.value === radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n\n  /** Whether any radio buttons has focus. */\n  get focused(): boolean {\n    // todo: implement this.\n    return false;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  get empty(): boolean {\n    return this.value === null;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  get shouldLabelFloat(): boolean {\n    return !this.empty || this.focused;\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /** Implemented as part of NovoFieldControl. */\n  onContainerClick(event: MouseEvent) {\n    this.focus();\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n    // TODO\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoRadioElement } from './Radio';\nimport { NovoRadioGroup } from './RadioGroup';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule],\n  declarations: [NovoRadioElement, NovoRadioGroup],\n  exports: [NovoRadioElement, NovoRadioGroup],\n})\nexport class NovoRadioModule {}\n","// NG2\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n// APP\nimport { NovoLabelService } from '../../services/novo-label-service';\n\n@Component({\n  selector: 'novo-tip-well',\n  template: `\n    <div *ngIf=\"isActive\">\n      <div>\n        <i class=\"bhi-{{ icon }}\" *ngIf=\"icon\" [attr.data-automation-id]=\"'novo-tip-well-icon-' + name\"></i>\n        <p *ngIf=\"sanitize\" [attr.data-automation-id]=\"'novo-tip-well-tip-' + name\">{{ tip }}</p>\n        <p *ngIf=\"!sanitize\" [attr.data-automation-id]=\"'novo-tip-well-tip-' + name\" [innerHTML]=\"tipWithStyles\"></p>\n      </div>\n      <button theme=\"dialogue\" size=\"small\" (click)=\"hideTip()\" *ngIf=\"button\" [attr.data-automation-id]=\"'novo-tip-well-button-' + name\">\n        {{ buttonText }}\n      </button>\n    </div>\n  `,\n  host: {\n    '[class.active]': 'isActive',\n  },\n})\nexport class NovoTipWellElement implements OnInit {\n  @Input()\n  name: string | number;\n  @Input()\n  tip: string;\n  @Input()\n  buttonText: string;\n  @Input()\n  button: boolean = true;\n  @Input()\n  icon: string;\n  @Input()\n  sanitize: boolean = true;\n  @Output()\n  confirmed = new EventEmitter();\n\n  isActive: boolean = true;\n  isLocalStorageEnabled: any;\n  localStorageKey: string;\n\n  private _tipWithStyles: SafeHtml;\n  private _lastTipStyled: string;\n\n  constructor(private labels: NovoLabelService, private sanitizer: DomSanitizer) {\n    this.isActive = true;\n    // Check if localStorage is enabled\n    this.isLocalStorageEnabled = (() => {\n      let isEnabled = false;\n      if (typeof localStorage === 'object') {\n        try {\n          localStorage.setItem('lsTest', '1');\n          localStorage.removeItem('lsTest');\n          isEnabled = true;\n        } catch (e) {\n          console.warn(\n            'This web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.',\n          );\n        }\n      }\n      return isEnabled;\n    })();\n  }\n\n  // Trusts the HTML in order to show CSS styles\n  get tipWithStyles(): SafeHtml {\n    if (!this._tipWithStyles || this._lastTipStyled !== this.tip) {\n      this._tipWithStyles = this.sanitizer.bypassSecurityTrustHtml(this.tip);\n      this._lastTipStyled = this.tip;\n    }\n    return this._tipWithStyles;\n  }\n\n  ngOnInit() {\n    this.tip = this.tip || '';\n    this.buttonText = this.buttonText || this.labels.okGotIt;\n    this.button = typeof this.button === 'string' ? this.button === 'true' : this.button;\n    this.icon = this.icon || null;\n    // Set a (semi) unique name for the tip-well\n    this.name = this.name || Math.round(Math.random() * 100);\n    this.localStorageKey = `novo-tw_${this.name}`;\n    // Check localStorage for state\n    if (this.isLocalStorageEnabled) {\n      const storedValue = JSON.parse(localStorage.getItem(this.localStorageKey));\n      this.isActive = storedValue !== false;\n    }\n  }\n\n  hideTip() {\n    if (this.isLocalStorageEnabled) {\n      localStorage.setItem(this.localStorageKey, JSON.stringify(false));\n    }\n    this.isActive = false;\n    this.confirmed.emit();\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoTipWellElement } from './TipWell';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule],\n  declarations: [NovoTipWellElement],\n  exports: [NovoTipWellElement],\n})\nexport class NovoTipWellModule {}\n","// NG2\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IMaskDirectiveModule } from 'angular-imask';\n// Vendor\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NovoCheckboxModule } from '../checkbox';\nimport { NovoCommonModule } from '../common/common.module';\nimport { NovoIconModule } from '../icon';\nimport { NovoSwitchModule } from '../switch/Switch.module';\nimport { NovoTemplateService } from './../../services/template/NovoTemplateService';\nimport { NovoAceEditorModule } from './../ace-editor/AceEditor.module';\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoChipsModule } from './../chips/Chips.module';\nimport { NovoNovoCKEditorModule } from './../ckeditor/CKEditor.module';\nimport { NovoDatePickerModule } from './../date-picker/DatePicker.module';\nimport { NovoDateTimePickerModule } from './../date-time-picker/DateTimePicker.module';\nimport { NovoDragulaModule } from './../dragula/Dragula.module';\nimport { NovoHeaderModule } from './../header/Header.module';\nimport { NovoModalModule } from './../modal/modal.module';\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoQuickNoteModule } from './../quick-note/QuickNote.module';\n// APP\nimport { NovoRadioModule } from './../radio/Radio.module';\nimport { NovoSelectModule } from './../select/Select.module';\nimport { NovoTilesModule } from './../tiles/Tiles.module';\nimport { NovoTimePickerModule } from './../time-picker/TimePicker.module';\nimport { NovoTipWellModule } from './../tip-well/TipWell.module';\nimport { NovoTooltipModule } from './../tooltip/Tooltip.module';\nimport { NovoAutoSize, NovoControlElement } from './Control';\nimport { NovoControlGroup } from './ControlGroup';\nimport { NovoControlTemplates } from './ControlTemplates';\nimport { NovoDynamicFormElement, NovoFieldsetElement, NovoFieldsetHeaderElement } from './DynamicForm';\nimport { NovoFormExtrasModule } from './extras/FormExtras.module';\nimport { ControlConfirmModal, ControlPromptModal } from './FieldInteractionModals';\nimport { NovoFormElement } from './Form';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    NovoRadioModule,\n    NovoTilesModule,\n    NovoSelectModule,\n    NovoPickerModule,\n    NovoChipsModule,\n    NovoDatePickerModule,\n    NovoTimePickerModule,\n    NovoNovoCKEditorModule,\n    NovoFormExtrasModule,\n    NovoQuickNoteModule,\n    NovoDateTimePickerModule,\n    NovoHeaderModule,\n    NovoTooltipModule,\n    NovoDragulaModule,\n    IMaskDirectiveModule,\n    TextMaskModule,\n    NovoTipWellModule,\n    NovoModalModule,\n    NovoButtonModule,\n    NovoAceEditorModule,\n    NovoCommonModule,\n    NovoCheckboxModule,\n    NovoIconModule,\n    NovoRadioModule,\n    NovoSwitchModule,\n  ],\n  declarations: [\n    NovoAutoSize,\n    NovoControlElement,\n    NovoDynamicFormElement,\n    NovoFormElement,\n    NovoFieldsetElement,\n    NovoFieldsetHeaderElement,\n    ControlConfirmModal,\n    ControlPromptModal,\n    NovoControlGroup,\n    NovoControlTemplates,\n  ],\n  exports: [\n    NovoAutoSize,\n    NovoDynamicFormElement,\n    NovoControlElement,\n    NovoFormElement,\n    NovoFieldsetHeaderElement,\n    NovoControlGroup,\n    NovoControlTemplates,\n  ],\n  providers: [NovoTemplateService],\n})\nexport class NovoFormModule {}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Throws an exception when two NovoSidenav are matching the same position.\n * @docs-private\n */\nexport function throwNovoDuplicatedSidenavError(position: string) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n\n/** Result of the toggle promise that indicates the state of the drawer. */\nexport type NovoSidenavToggleResult = 'open' | 'close';\n\n/** Sidenav and SideNav display modes. */\nexport type NovoSidenavMode = 'over' | 'push' | 'side';\n\n/** Configures whether drawers should use auto sizing by default. */\nexport const NOVO_LAYOUT_DEFAULT_AUTOSIZE = new InjectionToken<boolean>('NOVO_LAYOUT_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: NOVO_LAYOUT_DEFAULT_AUTOSIZE_FACTORY,\n});\n\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nexport const NOVO_LAYOUT_CONTAINER = new InjectionToken('NOVO_LAYOUT_CONTAINER');\n\n/** @docs-private */\nexport function NOVO_LAYOUT_DEFAULT_AUTOSIZE_FACTORY(): boolean {\n  return false;\n}\n","import { CdkScrollable, ScrollDispatcher } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  ViewEncapsulation,\n} from '@angular/core';\n// import type { NovoLayoutContainer } from '../container/layout-container.component';\nimport { NOVO_LAYOUT_CONTAINER } from '../layout.constants';\n\n@Component({\n  selector: 'novo-layout-content',\n  exportAs: 'novoLayoutContent',\n  template: '<ng-content></ng-content>',\n  host: {\n    class: 'novo-layout-content',\n    // '[style.margin-left.px]': '_container._contentMargins.left',\n    // '[style.margin-right.px]': '_container._contentMargins.right',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NovoLayoutContent extends CdkScrollable implements AfterContentInit {\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Inject(NOVO_LAYOUT_CONTAINER) public _container: any, // NovoLayoutContainer\n    elementRef: ElementRef<HTMLElement>,\n    scrollDispatcher: ScrollDispatcher,\n    ngZone: NgZone,\n  ) {\n    super(elementRef, scrollDispatcher, ngZone);\n  }\n\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  getHostElement() {\n    return this.elementRef.nativeElement;\n  }\n}\n","import { CdkScrollable, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, ElementRef, NgZone, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'novo-rail',\n  template: `\n    <div class=\"novo-rail-contents\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    class: 'novo-rail',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NovoRailComponent extends CdkScrollable implements AfterContentInit {\n  constructor(elementRef: ElementRef<HTMLElement>, scrollDispatcher: ScrollDispatcher, ngZone: NgZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n  }\n\n  ngAfterContentInit() {}\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nexport const novoSidenavAnimations: {\n  readonly transformDrawer: AnimationTriggerMetadata;\n} = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [\n    // We remove the `transform` here completely, rather than setting it to zero, because:\n    // 1. Having a transform can cause elements with ripples or an animated\n    //    transform to shift around in Chrome with an RTL layout (see #10023).\n    // 2. 3d transforms causes text to appear blurry on IE and Edge.\n    state(\n      'open, open-instant',\n      style({\n        transform: 'none',\n        visibility: 'visible',\n      }),\n    ),\n    state(\n      'void',\n      style({\n        // Avoids the shadow showing up when closed in SSR.\n        'box-shadow': 'none',\n        visibility: 'hidden',\n      }),\n    ),\n    transition('void => open-instant', animate('0ms')),\n    transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n  ]),\n};\n","import { AnimationEvent } from '@angular/animations';\nimport { FocusMonitor, FocusOrigin, FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty, coerceNumberProperty, NumberInput } from '@angular/cdk/coercion';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Key } from 'projects/novo-elements/src/utils';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, mapTo, take, takeUntil } from 'rxjs/operators';\n// import type { NovoLayoutContainer } from '../container/layout-container.component';\nimport { NovoSidenavMode, NovoSidenavToggleResult, NOVO_LAYOUT_CONTAINER } from '../layout.constants';\nimport { novoSidenavAnimations } from './sidenav.animations';\n\n@Component({\n  selector: 'novo-sidenav',\n  exportAs: 'novoSidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n  animations: [novoSidenavAnimations.transformDrawer],\n  host: {\n    class: 'novo-sidenav',\n    tabIndex: '-1',\n    // must prevent the browser from aligning text based on value\n    '[attr.align]': 'null',\n    '[class.novo-sidenav-end]': 'position === \"end\"',\n    '[class.novo-sidenav-over]': 'mode === \"over\"',\n    '[class.novo-sidenav-push]': 'mode === \"push\"',\n    '[class.novo-sidenav-side]': 'mode === \"side\"',\n    '[class.novo-sidenav-opened]': 'opened',\n    '[class.novo-sidenav-fixed]': 'fixedInViewport',\n    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NovoSidenavComponent implements AfterContentInit, AfterContentChecked, OnDestroy {\n  /** Whether the sidenav is fixed in the viewport. */\n  @Input()\n  get fixedInViewport(): boolean {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  private _fixedInViewport = false;\n\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  @Input()\n  get fixedTopGap(): number {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  private _fixedTopGap = 0;\n\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  @Input()\n  get fixedBottomGap(): number {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n  private _fixedBottomGap = 0;\n\n  private _focusTrap: FocusTrap;\n  private _elementFocusedBeforeDrawerWasOpened: HTMLElement | null = null;\n\n  /** Whether the drawer is initialized. Used for disabling the initial animation. */\n  private _enableAnimations = false;\n\n  /** The side that the drawer is attached to. */\n  @Input()\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value !== this._position) {\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  private _position: 'start' | 'end' = 'start';\n\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  @Input()\n  get mode(): NovoSidenavMode {\n    return this._mode;\n  }\n  set mode(value: NovoSidenavMode) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  private _mode: NovoSidenavMode = 'over';\n\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  @Input()\n  get disableClose(): boolean {\n    return this._disableClose;\n  }\n  set disableClose(value: boolean) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  private _disableClose: boolean = false;\n\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   */\n  @Input()\n  get autoFocus(): boolean {\n    const value = this._autoFocus;\n\n    // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n    // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n    // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n    return value == null ? this.mode !== 'side' : value;\n  }\n  set autoFocus(value: boolean) {\n    this._autoFocus = coerceBooleanProperty(value);\n  }\n  private _autoFocus: boolean | undefined;\n\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  @Input()\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  private _opened: boolean = false;\n\n  /** How the sidenav was opened (keypress, mouse click etc.) */\n  private _openedVia: FocusOrigin | null;\n\n  /** Emits whenever the drawer has started animating. */\n  _animationStarted = new Subject<AnimationEvent>();\n\n  /** Emits whenever the drawer is done animating. */\n  _animationEnd = new Subject<AnimationEvent>();\n\n  /** Current state of the sidenav animation. */\n  // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n  // metadata is not inherited by child classes, instead the host binding data is defined in a way\n  // that can be inherited.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostBinding('@transform')\n  _animationState: 'open-instant' | 'open' | 'void' = 'void';\n\n  /** Event emitted when the drawer open state is changed. */\n  @Output() readonly openedChange: EventEmitter<boolean> =\n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter<boolean>(/* isAsync */ true);\n\n  /** Event emitted when the drawer has been opened. */\n  @Output('opened')\n  _openedStream = this.openedChange.pipe(\n    filter((o) => o),\n    map(() => {}),\n  );\n\n  /** Event emitted when the drawer has started opening. */\n  @Output()\n  readonly openedStart: Observable<void> = this._animationStarted.pipe(\n    filter((e) => e.fromState !== e.toState && e.toState.indexOf('open') === 0),\n    mapTo(undefined),\n  );\n\n  /** Event emitted when the drawer has been closed. */\n  @Output('closed')\n  _closedStream = this.openedChange.pipe(\n    filter((o) => !o),\n    map(() => {}),\n  );\n\n  /** Event emitted when the drawer has started closing. */\n  @Output()\n  readonly closedStart: Observable<void> = this._animationStarted.pipe(\n    filter((e) => e.fromState !== e.toState && e.toState === 'void'),\n    mapTo(undefined),\n  );\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Event emitted when the drawer's position changes. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output('positionChanged') onPositionChanged: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * An observable that emits when the drawer mode changes. This is used by the drawer container to\n   * to know when to when the mode changes so it can adapt the margins on the content.\n   */\n  readonly _modeChanged = new Subject<void>();\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _focusTrapFactory: FocusTrapFactory,\n    private _focusMonitor: FocusMonitor,\n    private _platform: Platform,\n    private _ngZone: NgZone,\n    @Optional() @Inject(DOCUMENT) private _doc: any,\n    @Optional() @Inject(NOVO_LAYOUT_CONTAINER) public _container?: any, // NovoLayoutContainer\n  ) {\n    this.openedChange.subscribe((opened: boolean) => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement as HTMLElement;\n        }\n\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus();\n      }\n    });\n\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      (fromEvent(this._elementRef.nativeElement, 'keydown') as Observable<KeyboardEvent>)\n        .pipe(\n          filter((event) => {\n            return event.key === Key.Escape && !this.disableClose && !hasModifierKey(event);\n          }),\n          takeUntil(this._destroyed),\n        )\n        .subscribe((event) =>\n          this._ngZone.run(() => {\n            this.close();\n            event.stopPropagation();\n            event.preventDefault();\n          }),\n        );\n    });\n\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._animationEnd\n      .pipe(\n        distinctUntilChanged((x, y) => {\n          return x.fromState === y.fromState && x.toState === y.toState;\n        }),\n      )\n      .subscribe((event: AnimationEvent) => {\n        const { fromState, toState } = event;\n\n        if ((toState.indexOf('open') === 0 && fromState === 'void') || (toState === 'void' && fromState.indexOf('open') === 0)) {\n          this.openedChange.emit(this._opened);\n        }\n      });\n  }\n\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  private _takeFocus() {\n    if (!this.autoFocus || !this._focusTrap) {\n      return;\n    }\n\n    this._focusTrap.focusInitialElementWhenReady().then((hasMovedFocus) => {\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n      // still works. We need to check that `focus` is a function due to Universal.\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  private _restoreFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n\n    // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    this._openedVia = null;\n  }\n\n  /** Whether focus is currently within the drawer. */\n  private _isFocusWithinDrawer(): boolean {\n    const activeEl = this._doc?.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n\n  ngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._updateFocusTrapState();\n  }\n\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia?: FocusOrigin): Promise<NovoSidenavToggleResult> {\n    return this.toggle(true, openedVia);\n  }\n\n  /** Close the drawer. */\n  close(): Promise<NovoSidenavToggleResult> {\n    return this.toggle(false);\n  }\n\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick(): Promise<NovoSidenavToggleResult> {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurring of the active element.\n    return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n  }\n\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen: boolean = !this.opened, openedVia?: FocusOrigin): Promise<NovoSidenavToggleResult> {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n  }\n\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n   *   origin will be used later when focus is restored on drawer close.\n   */\n  private _setOpen(isOpen: boolean, restoreFocus: boolean, openedVia: FocusOrigin = 'program'): Promise<NovoSidenavToggleResult> {\n    this._opened = isOpen;\n\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      this._openedVia = openedVia;\n    } else {\n      this._animationState = 'void';\n      if (restoreFocus) {\n        this._restoreFocus();\n      }\n    }\n\n    this._updateFocusTrapState();\n\n    return new Promise<NovoSidenavToggleResult>((resolve) => {\n      this.openedChange.pipe(take(1)).subscribe((open) => resolve(open ? 'open' : 'close'));\n    });\n  }\n\n  _getWidth(): number {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n\n  /** Updates the enabled state of the focus trap. */\n  private _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // The focus trap is only enabled when the drawer is open in any mode other than side.\n      this._focusTrap.enabled = this.opened && this.mode !== 'side';\n    }\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  @HostListener('@transform.start', ['$event'])\n  _animationStartListener(event: AnimationEvent) {\n    this._animationStarted.next(event);\n  }\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  @HostListener('@transform.done', ['$event'])\n  _animationDoneListener(event: AnimationEvent) {\n    this._animationEnd.next(event);\n  }\n\n  static ngAcceptInputType_disableClose: BooleanInput;\n  static ngAcceptInputType_autoFocus: BooleanInput;\n  static ngAcceptInputType_opened: BooleanInput;\n\n  static ngAcceptInputType_fixedInViewport: BooleanInput;\n  static ngAcceptInputType_fixedTopGap: NumberInput;\n  static ngAcceptInputType_fixedBottomGap: NumberInput;\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkScrollable, ViewportRuler } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { merge, Subject } from 'rxjs';\nimport { debounceTime, filter, startWith, take, takeUntil } from 'rxjs/operators';\nimport { NovoLayoutContent } from '../content/layout-content.component';\nimport { NOVO_LAYOUT_CONTAINER, NOVO_LAYOUT_DEFAULT_AUTOSIZE } from '../layout.constants';\nimport { NovoRailComponent } from '../rail/rail.component';\nimport { NovoSidenavComponent } from '../sidenav/sidenav.component';\n\n@Component({\n  selector: 'novo-layout-container',\n  exportAs: 'novoLayoutContainer',\n  templateUrl: './layout-container.component.html',\n  styleUrls: ['./layout-container.component.scss'],\n  host: {\n    class: 'novo-layout-container',\n    '[class.novo-layout-container-explicit-backdrop]': '_backdropOverride',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NOVO_LAYOUT_CONTAINER,\n      useExisting: NovoLayoutContainer,\n    },\n  ],\n})\nexport class NovoLayoutContainer implements AfterContentInit, DoCheck, OnDestroy {\n  @ContentChildren(NovoSidenavComponent, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true,\n  })\n  _allDrawers: QueryList<NovoSidenavComponent>;\n\n  @ContentChild(NovoRailComponent) _rail: NovoRailComponent;\n\n  @ContentChild(NovoLayoutContent) _content: NovoLayoutContent;\n\n  /** Drawers that belong to this container. */\n  _drawers = new QueryList<NovoSidenavComponent>();\n\n  @ViewChild(NovoLayoutContent) _userContent: NovoLayoutContent;\n\n  /** The drawer child with the `start` position. */\n  get start(): NovoSidenavComponent | null {\n    return this._start;\n  }\n\n  /** The drawer child with the `end` position. */\n  get end(): NovoSidenavComponent | null {\n    return this._end;\n  }\n\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  @Input()\n  get autosize(): boolean {\n    return this._autosize;\n  }\n  set autosize(value: boolean) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  private _autosize: boolean;\n\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  @Input()\n  get hasBackdrop() {\n    if (this._backdropOverride == null) {\n      return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n    }\n\n    return this._backdropOverride;\n  }\n  set hasBackdrop(value: any) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  _backdropOverride: boolean | null;\n\n  /** Event emitted when the drawer backdrop is clicked. */\n  @Output() readonly backdropClick: EventEmitter<void> = new EventEmitter<void>();\n\n  /** The drawer at the start/end position, independent of direction. */\n  private _start: NovoSidenavComponent | null;\n  private _end: NovoSidenavComponent | null;\n\n  /**\n   * The drawer at the left/right. When direction changes, these will change as well.\n   * They're used as aliases for the above to set the left/right style properly.\n   * In LTR, _left == _start and _right == _end.\n   * In RTL, _left == _end and _right == _start.\n   */\n  private _left: NovoSidenavComponent | null;\n  private _right: NovoSidenavComponent | null;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Emits on every ngDoCheck. Used for debouncing reflows. */\n  private readonly _doCheckSubject = new Subject<void>();\n\n  /**\n   * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n   * drawer is open. We use margin rather than transform even for push mode because transform breaks\n   * fixed position elements inside of the transformed element.\n   */\n  _contentMargins: { left: number | null; right: number | null } = { left: null, right: null };\n\n  readonly _contentMarginChanges = new Subject<{ left: number | null; right: number | null }>();\n\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable(): CdkScrollable {\n    return this._userContent || this._content;\n  }\n\n  constructor(\n    @Optional() private _dir: Directionality,\n    private _element: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    private _changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    @Inject(NOVO_LAYOUT_DEFAULT_AUTOSIZE) defaultAutosize = false,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private _animationMode?: string,\n  ) {\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n    }\n\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler\n      .change()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this.updateContentMargins());\n\n    this._autosize = defaultAutosize;\n  }\n\n  ngAfterContentInit() {\n    this._allDrawers.changes\n      .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n      .subscribe((drawer: QueryList<NovoSidenavComponent>) => {\n        this._drawers.reset(drawer.filter((item) => !item._container || item._container === this));\n        this._drawers.notifyOnChanges();\n      });\n\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n\n      this._drawers.forEach((drawer: NovoSidenavComponent) => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject\n        .pipe(\n          debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n          takeUntil(this._destroyed),\n        )\n        .subscribe(() => this.updateContentMargins());\n    });\n  }\n\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Calls `open` of both start and end drawers */\n  open(): void {\n    this._drawers.forEach((drawer) => drawer.open());\n  }\n\n  /** Calls `close` of both start and end drawers */\n  close(): void {\n    this._drawers.forEach((drawer) => drawer.close());\n  }\n\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n\n    if (this._left && this._left.opened) {\n      if (this._left.mode === 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode === 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n\n    if (this._right && this._right.opened) {\n      if (this._right.mode === 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode === 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = { left, right };\n\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  private _watchDrawerToggle(drawer: NovoSidenavComponent): void {\n    drawer._animationStarted\n      .pipe(\n        filter((event: AnimationEvent) => event.fromState !== event.toState),\n        takeUntil(this._drawers.changes),\n      )\n      .subscribe((event: AnimationEvent) => {\n        // Set the transition class on the container so that the animations occur. This should not\n        // be set initially because animations should only be triggered via a change in state.\n        if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n          this._element.nativeElement.classList.add('mat-drawer-transition');\n        }\n\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  private _watchDrawerPosition(drawer: NovoSidenavComponent): void {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  private _watchDrawerMode(drawer: NovoSidenavComponent): void {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  private _setContainerClass(isAdd: boolean): void {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n\n  /** Validate the state of the drawer children components. */\n  private _validateDrawers() {\n    this._start = this._end = null;\n\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach((drawer) => {\n      if (drawer.position === 'end') {\n        if (this._end != null) {\n          throw new Error('Duplication drawers at end');\n          // throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null) {\n          throw new Error('Duplication drawers at start');\n        }\n        this._start = drawer;\n      }\n    });\n\n    this._right = this._left = null;\n\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  private _isPushed() {\n    return (this._isDrawerOpen(this._start) && this._start.mode !== 'over') || (this._isDrawerOpen(this._end) && this._end.mode !== 'over');\n  }\n\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end]\n      .filter((drawer) => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n      .forEach((drawer) => drawer._closeViaBackdropClick());\n  }\n\n  _isShowingBackdrop(): boolean {\n    return (\n      (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n      (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end))\n    );\n  }\n\n  private _canHaveBackdrop(drawer: NovoSidenavComponent): boolean {\n    return drawer.mode !== 'side' || !!this._backdropOverride;\n  }\n\n  private _isDrawerOpen(drawer: NovoSidenavComponent | null): drawer is NovoSidenavComponent {\n    return drawer != null && drawer.opened;\n  }\n\n  static ngAcceptInputType_autosize: BooleanInput;\n  static ngAcceptInputType_hasBackdrop: BooleanInput;\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoLayoutContainer } from './container/layout-container.component';\nimport { NovoLayoutContent } from './content/layout-content.component';\nimport { NovoRailComponent } from './rail/rail.component';\nimport { NovoSidenavComponent } from './sidenav/sidenav.component';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoLayoutContainer, NovoLayoutContent, NovoSidenavComponent, NovoRailComponent],\n  exports: [NovoLayoutContainer, NovoLayoutContent, NovoSidenavComponent, NovoRailComponent],\n})\nexport class NovoLayoutModule {}\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Key } from '../../utils';\nimport { NovoOption } from '../common';\nimport { MenuItemDirective } from './menu-item.directive';\n// import type { MenuComponent } from './menu.component';\nimport { CloseLeafMenuEvent, IMenuClickEvent } from './menu.service';\nimport { ILinkConfig } from './menu.types';\n\n@Component({\n  selector: 'menu-content',\n  styleUrls: ['./menu-content.component.scss'],\n  template: `<div class=\"menu-container novo-menu\" [ngClass]=\"menuClass\" tabindex=\"0\">\n    <ul #menu class=\"menu\" style=\"position: static; float: none;\" tabindex=\"0\">\n      <ng-container *ngFor=\"let menuItem of menuItems; let i = index\">\n        <ng-template [ngTemplateOutlet]=\"menuItem.template\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n        <!-- <novo-icon class=\"sub-menu-caret\" suffix *ngIf=\"!!menuItem.subMenu\" size=\"small\" color=\"ash\">expand</novo-icon> -->\n      </ng-container>\n    </ul>\n  </div> `,\n})\nexport class MenuContentComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public menuItems: MenuItemDirective[] = [];\n  @Input() public item: any;\n  @Input() public event: MouseEvent | KeyboardEvent;\n  @Input() public menu: any; // MenuComponent\n  @Input() public parentMenu: MenuContentComponent;\n  @Input() public menuClass: string;\n  @Input() public overlay: OverlayRef;\n  @Input() public isLeaf = false;\n  ///\n  @Output() public openSubMenu: EventEmitter<IMenuClickEvent> = new EventEmitter();\n  @Output() public closeLeafMenu: EventEmitter<CloseLeafMenuEvent> = new EventEmitter();\n  @Output() public closeAllMenus: EventEmitter<{ event: MouseEvent }> = new EventEmitter();\n  // @ViewChild('menu') public menuElement: ElementRef;\n  // @ViewChildren('li') public menuItemElements: QueryList<ElementRef>;\n\n  public autoFocus = false;\n  private _keyManager: ActiveDescendantKeyManager<NovoOption>;\n  private subscription: Subscription = new Subscription();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      setTimeout(() => this.focus());\n    }\n    this.overlay.updatePosition();\n    this._keyManager = new ActiveDescendantKeyManager<NovoOption>(this.menu.menuOptions).withWrap();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  focus(): void {\n    if (this.autoFocus) {\n      // this.menuElement.nativeElement.focus();\n    }\n  }\n\n  stopEvent($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n\n  public isMenuItemEnabled(menuItem: MenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.menuItemEnabled);\n  }\n\n  public isMenuItemVisible(menuItem: MenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.menuItemVisible);\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n\n  public isDisabled(link: ILinkConfig): boolean {\n    return link.enabled && !link.enabled(this.item);\n  }\n\n  @HostListener('window:keydown.ArrowDown', ['$event'])\n  @HostListener('window:keydown.ArrowUp', ['$event'])\n  public onKeyEvent(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this._keyManager.onKeydown(event);\n  }\n\n  @HostListener('window:keydown.ArrowRight', ['$event'])\n  public keyboardOpenSubMenu(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    if (menuItem) {\n      this.onOpenSubMenu(menuItem);\n    }\n  }\n\n  @HostListener('window:keydown.Enter', ['$event'])\n  @HostListener('window:keydown.Space', ['$event'])\n  public keyboardMenuItemSelect(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    const option = this._keyManager.activeItem;\n    option._clickViaInteraction();\n    // if (menuItem) {\n    //   this.onMenuItemSelect(menuItem, event);\n    // }\n  }\n\n  @HostListener('window:keydown.Escape', ['$event'])\n  @HostListener('window:keydown.ArrowLeft', ['$event'])\n  public onCloseLeafMenu(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    this.closeLeafMenu.emit({ exceptRootMenu: event.key === Key.ArrowLeft, event });\n  }\n\n  // @HostListener('document:contextmenu', ['$event'])\n  @HostListener('document:click', ['$event'])\n  public closeMenu(event: MouseEvent): void {\n    if (event.type === 'click' && event.button === 2) {\n      return;\n    }\n    this.closeAllMenus.emit({ event });\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  public onMouseLeave(event: MouseEvent): void {\n    if (this.isLeaf) {\n      this.closeLeafMenu.emit({ exceptRootMenu: true, event });\n    }\n  }\n\n  public onOpenSubMenu(menuItem: MenuItemDirective, event?: MouseEvent | KeyboardEvent): void {\n    // const anchorElementRef = this.menuItemElements.toArray()[this._keyManager.activeItemIndex];\n    // const anchorElement = anchorElementRef && anchorElementRef.nativeElement;\n    // this.openSubMenu.emit({\n    //   anchorElement,\n    //   menu: menuItem.subMenu,\n    //   event,\n    //   item: this.item,\n    //   // parentMenu: this,\n    // });\n  }\n\n  public onMenuItemSelect(menuItem: MenuItemDirective, event: MouseEvent | KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onOpenSubMenu(menuItem, event);\n    // if (!menuItem.subMenu) {\n    //   menuItem.triggerExecute(this.item, event);\n    // }\n  }\n\n  private cancelEvent(event): void {\n    if (!event) {\n      return;\n    }\n\n    const target: HTMLElement = event.target;\n    if (['INPUT', 'TEXTAREA', 'SELECT'].indexOf(target.tagName) > -1 || target.isContentEditable) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { ContentChild, Directive, ElementRef, Input, TemplateRef } from '@angular/core';\nimport { NovoOption } from '../common';\n\n/**\n * This is a structural directive now.  Should only be used on `novo-options`\n */\n@Directive({\n  selector: '[menuItem]',\n})\nexport class MenuItemDirective {\n  @Input() public menuItemEnabled: boolean | ((item: any) => boolean) = true;\n  @Input() public menuItemVisible: boolean | ((item: any) => boolean) = true;\n\n  @ContentChild(NovoOption) optionRef: NovoOption;\n\n  public currentItem: any;\n\n  constructor(public template: TemplateRef<{ item: any }>, public elementRef: ElementRef) {}\n}\n","import { Overlay, OverlayRef, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, ElementRef, Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { MenuContentComponent } from './menu-content.component';\nimport type { MenuItemDirective } from './menu-item.directive';\nimport type { MenuComponent } from './menu.component';\nimport type { MenuDirective } from './menu.directive';\n\nexport interface IMenuClickEvent {\n  anchorElement?: Element | EventTarget;\n  menu?: MenuComponent;\n  event?: MouseEvent | KeyboardEvent;\n  parentMenu?: MenuComponent;\n  menuTrigger?: MenuDirective;\n  item: any;\n  activeMenuItemIndex?: number;\n}\nexport interface IMenuContext extends IMenuClickEvent {\n  menuItems: MenuItemDirective[];\n  menuClass: string;\n}\nexport interface CloseLeafMenuEvent {\n  exceptRootMenu?: boolean;\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface OverlayRefWithMenu extends OverlayRef {\n  menu?: MenuContentComponent;\n}\n\nexport interface CancelMenuEvent {\n  eventType: 'cancel';\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface ExecuteMenuEvent {\n  eventType: 'execute';\n  event?: MouseEvent | KeyboardEvent;\n  item: any;\n  menuItem: MenuItemDirective;\n}\nexport type CloseMenuEvent = ExecuteMenuEvent | CancelMenuEvent;\n\n@Injectable({ providedIn: 'root' })\nexport class NovoMenuService {\n  public isDestroyingLeafMenu = false;\n\n  public show: Subject<IMenuClickEvent> = new Subject<IMenuClickEvent>();\n  public triggerClose: Subject<MenuContentComponent> = new Subject();\n  public close: Subject<CloseMenuEvent> = new Subject();\n\n  private menuContent: ComponentRef<MenuContentComponent>;\n  private overlays: OverlayRef[] = [];\n  private fakeElement: any = {\n    getBoundingClientRect: (): ClientRect => ({\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n    }),\n  };\n\n  constructor(private overlay: Overlay, private scrollStrategy: ScrollStrategyOptions) {}\n\n  public openMenu(context: IMenuContext) {\n    const { anchorElement, event, parentMenu } = context;\n\n    if (!parentMenu) {\n      const mouseEvent = event as MouseEvent;\n      this.fakeElement.getBoundingClientRect = (): ClientRect => ({\n        bottom: mouseEvent.clientY,\n        height: 0,\n        left: mouseEvent.clientX,\n        right: mouseEvent.clientX,\n        top: mouseEvent.clientY,\n        width: 0,\n      });\n      this.closeAllMenus({ eventType: 'cancel', event });\n      const positionStrategy = this.overlay\n        .position()\n        .connectedTo(\n          new ElementRef(anchorElement || this.fakeElement),\n          { originX: 'start', originY: 'bottom' },\n          { overlayX: 'start', overlayY: 'top' },\n        )\n        .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n        .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' })\n        .withFallbackPosition({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' })\n        .withFallbackPosition({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' });\n      this.overlays = [\n        this.overlay.create({\n          positionStrategy,\n          panelClass: 'novo-menu',\n          scrollStrategy: this.scrollStrategy.close(),\n        }),\n      ];\n      this.attachMenu(this.overlays[0], context);\n    } else {\n      const positionStrategy = this.overlay\n        .position()\n        .connectedTo(\n          new ElementRef(event ? event.target : anchorElement),\n          { originX: 'end', originY: 'top' },\n          { overlayX: 'start', overlayY: 'top' },\n        )\n        .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' })\n        .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' })\n        .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' });\n      const newOverlay = this.overlay.create({\n        positionStrategy,\n        panelClass: 'novo-menu',\n        scrollStrategy: this.scrollStrategy.close(),\n      });\n      // this.destroySubMenus(parentMenu);\n      this.overlays = this.overlays.concat(newOverlay);\n      this.attachMenu(newOverlay, context);\n    }\n  }\n\n  public attachMenu(overlay: OverlayRef, context: IMenuContext): void {\n    const { event, item, menu, menuItems, menuClass, menuTrigger } = context;\n\n    const menuContent: ComponentRef<MenuContentComponent> = overlay.attach(new ComponentPortal(MenuContentComponent));\n    menuContent.instance.event = event;\n    menuContent.instance.item = item;\n    menuContent.instance.menu = menu;\n    menuContent.instance.menuItems = menuItems;\n    menuContent.instance.overlay = overlay;\n    menuContent.instance.isLeaf = true;\n    menuContent.instance.menuClass = menuClass;\n    (overlay as OverlayRefWithMenu).menu = menuContent.instance;\n\n    if (!!menuTrigger) {\n      menuTrigger.menuContent = menuContent.instance;\n    }\n\n    const subscriptions: Subscription = new Subscription();\n    // subscriptions.add(\n    //   menuContent.instance.execute\n    //     .asObservable()\n    //     .subscribe((executeEvent) => this.closeAllMenus({ eventType: 'execute', ...executeEvent })),\n    // );\n    subscriptions.add(\n      menuContent.instance.closeAllMenus\n        .asObservable()\n        .subscribe((closeAllEvent) => this.closeAllMenus({ eventType: 'cancel', ...closeAllEvent })),\n    );\n    subscriptions.add(\n      menuContent.instance.closeLeafMenu.asObservable().subscribe((closeLeafMenuEvent) => this.destroyLeafMenu(closeLeafMenuEvent)),\n    );\n    subscriptions.add(\n      menuContent.instance.openSubMenu.asObservable().subscribe((subMenuEvent: IMenuContext) => {\n        this.destroySubMenus(menuContent.instance);\n        if (!subMenuEvent.menu) {\n          menuContent.instance.isLeaf = true;\n          return;\n        }\n        menuContent.instance.isLeaf = false;\n        this.show.next(subMenuEvent);\n      }),\n    );\n    menuContent.onDestroy(() => {\n      // menuItems.forEach((menuItem) => (menuItem.isActive = false));\n      subscriptions.unsubscribe();\n    });\n    menuContent.changeDetectorRef.detectChanges();\n  }\n\n  public closeAllMenus(closeEvent: CloseMenuEvent): void {\n    if (this.overlays) {\n      this.close.next(closeEvent);\n      this.overlays.forEach((overlay, index) => {\n        overlay.detach();\n        overlay.dispose();\n      });\n    }\n    this.overlays = [];\n  }\n\n  public hasOpenMenus() {\n    return this.overlays?.length > 0;\n  }\n\n  public getLastAttachedOverlay(): OverlayRefWithMenu {\n    let overlay: OverlayRef = this.overlays[this.overlays.length - 1];\n    while (this.overlays.length > 1 && overlay && !overlay.hasAttached()) {\n      overlay.detach();\n      overlay.dispose();\n      this.overlays = this.overlays.slice(0, -1);\n      overlay = this.overlays[this.overlays.length - 1];\n    }\n    return overlay;\n  }\n\n  public destroyLeafMenu({ exceptRootMenu, event }: CloseLeafMenuEvent = {}): void {\n    if (this.isDestroyingLeafMenu) {\n      return;\n    }\n    this.isDestroyingLeafMenu = true;\n\n    setTimeout(() => {\n      const overlay = this.getLastAttachedOverlay();\n      if (this.overlays.length > 1 && overlay) {\n        overlay.detach();\n        overlay.dispose();\n      }\n      if (!exceptRootMenu && this.overlays.length > 0 && overlay) {\n        this.close.next({ eventType: 'cancel', event });\n        overlay.detach();\n        overlay.dispose();\n      }\n\n      const newLeaf = this.getLastAttachedOverlay();\n      if (newLeaf) {\n        newLeaf.menu.isLeaf = true;\n      }\n\n      this.isDestroyingLeafMenu = false;\n    });\n  }\n\n  public destroySubMenus(menu: MenuContentComponent): void {\n    const overlay = menu.overlay;\n    const index = this.overlays.indexOf(overlay);\n    this.overlays.slice(index + 1).forEach((subMenuOverlay) => {\n      subMenuOverlay.detach();\n      subMenuOverlay.dispose();\n    });\n  }\n\n  public isLeafMenu(menuContent: MenuContentComponent): boolean {\n    const overlay = this.getLastAttachedOverlay();\n    return menuContent.overlay === overlay;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const MENU_OPTIONS = new InjectionToken('MENU_OPTIONS');\n\nexport const PARENT_MENU = new InjectionToken('PARENT_MENU');\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { NovoOption } from '../common';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { CloseMenuEvent, IMenuClickEvent, NovoMenuService } from './menu.service';\nimport { MENU_OPTIONS, PARENT_MENU } from './menu.tokens';\nimport { ILinkConfig, IMenuOptions } from './menu.types';\n\nexport interface MouseLocation {\n  left?: string;\n  marginLeft?: string;\n  marginTop?: string;\n  top?: string;\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'novo-menu',\n  styles: [\n    `\n      .cdk-overlay-container {\n        position: fixed;\n        z-index: z(overlay);\n        pointer-events: none;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      .novo-menu.cdk-overlay-pane {\n        position: absolute;\n        pointer-events: auto;\n        box-sizing: border-box;\n      }\n    `,\n  ],\n  template: ``,\n  providers: [{ provide: PARENT_MENU, useExisting: MenuComponent }],\n})\nexport class MenuComponent implements OnDestroy {\n  @Input() public menuClass = '';\n  @Input() public autoFocus = false;\n  @Input() public disabled = false;\n  @Output() public close: EventEmitter<CloseMenuEvent> = new EventEmitter();\n  @Output() public open: EventEmitter<IMenuClickEvent> = new EventEmitter();\n  @ContentChildren(MenuItemDirective) public menuItems: QueryList<MenuItemDirective>;\n  @ContentChildren(NovoOption) public menuOptions: QueryList<NovoOption>;\n  @ViewChild('menu') public menuElement: ElementRef;\n  public visibleMenuItems: MenuItemDirective[] = [];\n\n  public links: ILinkConfig[] = [];\n  public item: any;\n  public event: MouseEvent | KeyboardEvent;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private menuService: NovoMenuService,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional()\n    @Inject(MENU_OPTIONS)\n    private options: IMenuOptions,\n  ) {\n    if (options) {\n      this.autoFocus = options.autoFocus;\n    }\n    this.subscription.add(\n      menuService.show.subscribe((menuEvent) => {\n        this.onMenuEvent(menuEvent);\n      }),\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public onMenuEvent(menuEvent: IMenuClickEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    const { menu, event, item } = menuEvent;\n    if (menu && menu !== this) {\n      return;\n    }\n    this.event = event;\n    this.item = item;\n    this.setVisibleMenuItems();\n    this.menuService.openMenu({ ...menuEvent, menuItems: this.visibleMenuItems, menuClass: this.menuClass });\n    this.menuService.close\n      .asObservable()\n      .pipe(first())\n      .subscribe((closeEvent) => this.close.emit(closeEvent));\n    this.open.next(menuEvent);\n  }\n\n  public isMenuItemVisible(menuItem: MenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem.menuItemVisible);\n  }\n\n  public setVisibleMenuItems(): void {\n    this.visibleMenuItems = this.menuItems.filter((menuItem) => this.isMenuItemVisible(menuItem));\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BooleanInput } from '../../utils';\nimport { MenuContentComponent } from './menu-content.component';\nimport { MenuComponent } from './menu.component';\nimport { NovoMenuService } from './menu.service';\nimport { PARENT_MENU } from './menu.tokens';\n\n@Directive({\n  selector: '[menu]',\n})\nexport class MenuDirective implements OnInit, OnDestroy {\n  @Input() public menuContext: any;\n  @Input() public menu: MenuComponent;\n  @Input() public menuContent: MenuContentComponent;\n  @Input() @BooleanInput() public waitWhenOpen: boolean = false;\n  @Input() @BooleanInput() public capture: boolean = false;\n  @Input() @BooleanInput() public anchor: boolean = false;\n  @Input() public trigger: 'click' | 'contextmenu' | 'mouseenter' = 'click';\n\n  isSubMenu: boolean = false;\n  isActive: boolean = false;\n  @HostBinding('class.menu-active')\n  get hb_menuActive() {\n    return this.isActive;\n  }\n\n  subscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private menuService: NovoMenuService,\n    private cdr: ChangeDetectorRef,\n    @Optional() @Inject(PARENT_MENU) private _parentMenu: MenuComponent,\n  ) {\n    if (!!this._parentMenu) {\n      this.isSubMenu = true;\n      this.trigger = 'mouseenter';\n    }\n  }\n\n  ngOnInit() {\n    this.subscription = this.menuService.close.subscribe(() => {\n      this.isActive = false;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this.isActive = false;\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  @HostListener('contextmenu', ['$event'])\n  @HostListener('mouseenter', ['$event'])\n  public onMenuClick(event: MouseEvent): void {\n    if (this.trigger !== event.type) {\n      return;\n    }\n    if (this.trigger === 'click' && event.button !== 0) {\n      return;\n    } else if (this.trigger === 'contextmenu' && event.button !== 2) {\n      return;\n    } else if (this.waitWhenOpen && this.menuService.hasOpenMenus()) {\n      return;\n    }\n\n    if (!this.menu.disabled) {\n      this.menuService.show.next({\n        menu: this.menu,\n        event,\n        item: this.menuContext,\n        anchorElement: this.anchor ? this.element.nativeElement : null,\n        parentMenu: this._parentMenu,\n        menuTrigger: this,\n      });\n      this.isActive = true;\n      event.preventDefault();\n      event.stopPropagation();\n      this.cdr.detectChanges();\n    }\n  }\n}\n","import { FullscreenOverlayContainer, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NovoCommonModule } from '../common/common.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { MenuContentComponent } from './menu-content.component';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { MenuComponent } from './menu.component';\nimport { MenuDirective } from './menu.directive';\nimport { NovoMenuService } from './menu.service';\nimport { MENU_OPTIONS } from './menu.tokens';\nimport { IMenuOptions } from './menu.types';\n\n@NgModule({\n  declarations: [MenuDirective, MenuComponent, MenuContentComponent, MenuItemDirective],\n  entryComponents: [MenuContentComponent],\n  exports: [MenuDirective, MenuComponent, MenuItemDirective],\n  imports: [CommonModule, OverlayModule, NovoCommonModule, NovoIconModule],\n})\nexport class NovoMenuModule {\n  public static forRoot(options?: IMenuOptions): ModuleWithProviders<NovoMenuModule> {\n    return {\n      ngModule: NovoMenuModule,\n      providers: [\n        NovoMenuService,\n        {\n          provide: MENU_OPTIONS,\n          useValue: options,\n        },\n        { provide: OverlayContainer, useClass: FullscreenOverlayContainer },\n      ],\n    };\n  }\n}\n","// NG2\nimport { Component, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\nimport { ReplaySubject } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst CHIPS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoMultiPickerElement),\n  multi: true,\n};\n\ninterface Item {\n  type;\n  label;\n  value;\n}\n\n@Component({\n  selector: 'multi-picker',\n  providers: [CHIPS_VALUE_ACCESSOR],\n  template: `\n    <novo-chip\n      *ngFor=\"let item of _items | async | slice: 0:chipsCount\"\n      [type]=\"item.type\"\n      [class.selected]=\"item == selected\"\n      (removed)=\"removeFromDisplay($event, item)\"\n      (selectionChange)=\"select($event, item)\"\n    >\n      {{ item.label }}\n    </novo-chip>\n    <div *ngIf=\"items.length > chipsCount\">\n      <ul class=\"summary\">\n        <li *ngFor=\"let type of notShown\">+ {{ type.count }} {{ labels.more }} {{ type.type }}</li>\n      </ul>\n    </div>\n    <div class=\"chip-input-container\">\n      <novo-picker\n        clearValueOnSelect=\"true\"\n        [config]=\"source\"\n        [placeholder]=\"placeholder\"\n        (select)=\"clickOption($event)\"\n        (keydown)=\"onKeyDown($event)\"\n        (focus)=\"onFocus($event)\"\n        (blur)=\"onTouched($event)\"\n        [overrideElement]=\"element\"\n      >\n      </novo-picker>\n    </div>\n    <i class=\"bhi-search\" [class.has-value]=\"items.length\"></i>\n    <label class=\"clear-all\" *ngIf=\"items.length\" (click)=\"clearValue()\">{{ labels.clearAll }} <i class=\"bhi-times\"></i></label>\n  `,\n  host: {\n    '[class.with-value]': 'items.length > 0',\n  },\n})\nexport class NovoMultiPickerElement implements OnInit {\n  @Input()\n  source: { options: []; resultsTemplate; selectAllOption: boolean; chipsCount; strictRelationship };\n  @Input()\n  placeholder: any = '';\n  @Input()\n  types: { value; singular; plural; isParentOf; isChildOf }[];\n  @Output()\n  changed: EventEmitter<any> = new EventEmitter();\n  @Output()\n  focus: EventEmitter<any> = new EventEmitter();\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter();\n\n  get value() {\n    return this._value;\n  }\n\n  @Input()\n  set value(selectedItems) {\n    if (selectedItems) {\n      this.types.forEach((x) => (this._value[x.value] = selectedItems[x.value]));\n    } else {\n      this._value = {};\n      this.types.forEach((x) => (this._value[x.value] = []));\n    }\n    this.changed.emit(selectedItems);\n    this.onModelChange(selectedItems);\n  }\n\n  items: Item[] = [];\n  _items = new ReplaySubject<Item[]>(1);\n  options: any;\n  _options: any;\n  selected: any = null;\n  config: any = {};\n  chipsCount: number;\n  selectAllOption: boolean;\n  strictRelationship: boolean;\n  // private data model\n  _value = {};\n  notShown: any = {};\n  // Placeholders for the callbacks\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  constructor(public element: ElementRef, public labels: NovoLabelService) {\n    this.chipsCount = 4;\n  }\n\n  ngOnInit() {\n    this.selectAllOption = this.source.selectAllOption || false;\n    this.chipsCount = this.source.chipsCount || 4;\n    this.strictRelationship = this.source.strictRelationship || false;\n    this.setupOptions();\n  }\n\n  clearValue() {\n    this.types.forEach((type) => this.modifyAllOfType(type.value, 'unselect'));\n    this.items = [];\n    this._items.next(this.items);\n    this.setInitialValue(null);\n    this.onModelChange(this.value);\n  }\n\n  removeFromDisplay(event, item) {\n    this.remove(true, item);\n    this.modifyAffectedParentsOrChildren(false, item);\n  }\n\n  setupOptions() {\n    this.options = this.source.options || [];\n    this._options = [];\n    if (this.options) {\n      this.options.forEach((option) => {\n        const formattedOption = this.setupOptionsByType(option);\n        this._options.push(formattedOption);\n      });\n    }\n    this.source.options = this._options;\n  }\n\n  setupOptionsByType(section) {\n    const formattedSection: any = {\n      type: section.type,\n      label: section.label || section.type,\n    };\n    formattedSection.data = section.data.map((item) => {\n      return this.formatOption(section, item);\n    });\n    if (this.selectAllOption) {\n      const selectAll = this.createSelectAllOption(section);\n      formattedSection.data.splice(0, 0, selectAll);\n    }\n    formattedSection.originalData = formattedSection.data.slice();\n    return formattedSection;\n  }\n\n  formatOption(section, item) {\n    const obj = {\n      value: section.field ? item[section.field] : item.value || item,\n      label: section.format ? Helpers.interpolate(section.format, item) : item.label || String(item.value || item),\n      type: section.type,\n      checked: undefined,\n      isParentOf: section.isParentOf,\n      isChildOf: section.isChildOf,\n    };\n    if (obj.isChildOf) {\n      obj[section.isChildOf] = item[section.isChildOf];\n    }\n    return obj;\n  }\n\n  createSelectAllOption(section) {\n    const selectAll = {\n      value: 'ALL',\n      label: `All ${section.type}`,\n      type: section.type,\n      checked: this.model && this.model.length && this.model.indexOf('ALL') !== -1,\n      isParentOf: section.isParentOf,\n      isChildOf: section.isChildOf,\n    };\n    if (section.isChildOf) {\n      const allParents = section.data.reduce((accum, next) => {\n        return accum.concat(next[section.isChildOf]);\n      }, []);\n      selectAll[section.isChildOf] = allParents;\n    }\n    return selectAll;\n  }\n\n  deselectAll() {\n    this.selected = null;\n  }\n\n  select(event, item) {\n    this.blur.emit(event);\n    this.deselectAll();\n    this.selected = item;\n  }\n\n  onFocus(e) {\n    this.element.nativeElement.classList.add('selected');\n    this.focus.emit(e);\n  }\n\n  clickOption(event) {\n    if (event && !(event instanceof Event)) {\n      if (event.checked === false) {\n        this.remove(null, event);\n      } else {\n        this.add(event);\n      }\n      this.modifyAffectedParentsOrChildren(event.checked, event);\n      // Set focus on the picker\n      const input = this.element.nativeElement.querySelector('novo-picker > input');\n      if (input) {\n        input.focus();\n      }\n    }\n  }\n\n  add(event) {\n    if (event.value === 'ALL') {\n      this.modifyAllOfType(event.type, 'select');\n    } else {\n      this.updateDisplayItems(event, 'add');\n      this.value[event.type].push(event.value);\n      this.updateAllItemState(event.type);\n      this.triggerValueUpdate();\n    }\n    this.updateParentOrChildren(event, 'select');\n    this.select(null, event);\n  }\n\n  updateAllItemState(type) {\n    const allOfType = this.getAllOfType(type);\n    const allOfTypeSelected = this.allItemsSelected(allOfType, type);\n    if (allOfTypeSelected) {\n      this.selectAll(allOfType, type);\n    }\n    return { allOfType, allOfTypeSelected };\n  }\n\n  setIndeterminateState(allOfType, status) {\n    if (!this.selectAllOption) {\n      return;\n    }\n    const allItem = allOfType[0];\n    allItem.indeterminate = status;\n  }\n\n  updateDisplayItems(item, action) {\n    const adding = action === 'add';\n    if (adding) {\n      this.items.push(item);\n    } else {\n      if (this.items.indexOf(item) > -1) {\n        this.items.splice(this.items.indexOf(item), 1);\n      }\n    }\n    this.updateDisplayText(this.items);\n    this._items.next(this.items);\n  }\n\n  updateDisplayText(items) {\n    this.notShown = [];\n    const notShown = items.slice(this.chipsCount);\n    if (notShown.length > 0) {\n      this.types.forEach((type) => {\n        let count;\n        const selectedOfType = notShown.filter((x) => x.type === type.value);\n        if (selectedOfType.length === 1 && selectedOfType[0].value === 'ALL') {\n          count = this.getAllOfType(type.value).length - 1;\n        } else {\n          count = selectedOfType.length;\n        }\n        const displayType = count === 1 ? type.singular : type.plural || type.value;\n        if (count > 0) {\n          this.notShown.push({ type: displayType, count });\n        }\n      });\n    }\n  }\n\n  remove(event, item) {\n    let triggeredByEvent;\n    if (event) {\n      triggeredByEvent = true;\n    }\n    const itemToRemove = item;\n    if (itemToRemove.value === 'ALL') {\n      triggeredByEvent = false;\n      this.modifyAllOfType(itemToRemove.type, 'unselect');\n    } else if (this.allOfTypeSelected(itemToRemove.type)) {\n      this.handleRemoveItemIfAllSelected(itemToRemove);\n    }\n    this.removeItem(item, triggeredByEvent);\n  }\n\n  removeItem(item, triggeredByEvent?: any) {\n    item.checked = false;\n    this.deselectAll();\n    this.removeValue(item);\n    if (item.value !== 'ALL') {\n      this.updateParentOrChildren(item, 'unselect');\n    }\n    if (triggeredByEvent) {\n      this.modifyAffectedParentsOrChildren(false, item);\n    }\n  }\n\n  removeValue(item) {\n    const updatedValues = this.value[item.type].filter((x) => x !== item.value);\n    this.value[item.type] = updatedValues;\n    this.triggerValueUpdate();\n    this.updateDisplayItems(item, 'remove');\n  }\n\n  onKeyDown(event) {\n    if (event.key === Key.Backspace) {\n      if (event.target && event.target.value.length === 0 && this.items.length) {\n        if (event) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n        if (this.selected) {\n          this.remove(null, this.selected);\n        } else {\n          this.select(event, this.items[this.items.length - 1]);\n        }\n      }\n    }\n  }\n\n  allOfTypeSelected(type) {\n    return this.items.filter((x) => x.type === type && x.value === 'ALL').length > 0;\n  }\n\n  modifyAllOfType(type, action) {\n    const selecting = action === 'select';\n    const allOfType = this.getAllOfType(type);\n    allOfType.forEach((item) => {\n      item.checked = selecting;\n      item.indeterminate = false;\n    });\n    if (selecting) {\n      this.selectAll(allOfType, type);\n    } else {\n      this.items = [...this.items.filter((x) => x.type !== type)];\n      this._items.next(this.items);\n      this.value[type] = [];\n    }\n    if (this.selectAllOption) {\n      this.updateAllParentsOrChildren(allOfType[0], action);\n    }\n    this.triggerValueUpdate();\n  }\n\n  triggerValueUpdate() {\n    const updatedObject = {};\n    this.types.forEach((x) => (updatedObject[x.value] = this.value[x.value]));\n    this.value = updatedObject;\n  }\n\n  selectAll(allOfType, type) {\n    if (!this.selectAllOption) {\n      return;\n    }\n    allOfType[0].checked = true;\n    const values = allOfType.map((i) => {\n      return i.value;\n    });\n    // remove 'ALL' value\n    values.splice(0, 1);\n    this.value[type] = values;\n    const updatedItems = this.items.filter((x) => x.type !== type);\n    this.items = updatedItems;\n    this.updateDisplayItems(allOfType[0], 'add');\n  }\n\n  handleRemoveItemIfAllSelected(item) {\n    if (!this.selectAllOption) {\n      return;\n    }\n    const type = item.type;\n    const allOfType = this.getAllOfType(type);\n    const allItem = allOfType[0];\n    this.removeItem(allItem);\n    allItem.indeterminate = true;\n    const selectedItems = allOfType.filter((i) => i.checked === true);\n    this.items = [...this.items, ...selectedItems];\n    const values = selectedItems.map((i) => {\n      return i.value;\n    });\n    this.value[type] = [...values];\n  }\n\n  handleOutsideClick(event) {\n    // If the elements doesn't contain the target element, it is an outside click\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.blur.emit(event);\n      this.deselectAll();\n    }\n  }\n\n  getAllOfType(type) {\n    return this._options.filter((x) => x.type === type)[0].originalData;\n  }\n\n  updateParentOrChildren(item, action) {\n    if (this.strictRelationship && item.isParentOf) {\n      this.updateChildrenValue(item, action);\n    } else if (item.isChildOf && this.selectAllOption) {\n      this.updateParentValue(item, action);\n    }\n  }\n\n  modifyAffectedParentsOrChildren(selecting, itemChanged) {\n    if (!itemChanged.isChildOf && !itemChanged.isParentOf) {\n      return;\n    }\n    const parent = this.types.filter((x) => !!x.isParentOf)[0];\n    const parentType = parent.value;\n    const allParentType = this.getAllOfType(parentType);\n    const childType = allParentType[0].isParentOf;\n    const allChildren = this.getAllOfType(childType);\n    const allCheckedChildren = allChildren.filter((x) => !!x.checked);\n\n    allParentType.forEach((obj) => {\n      if (obj.value === 'ALL') {\n        return;\n      }\n      const selectedChildrenOfParent = allCheckedChildren.filter((x) => {\n        return x[parentType].filter((y) => y === obj.value).length > 0;\n      });\n\n      if (selecting) {\n        if (obj.checked) {\n          return;\n        }\n        obj.indeterminate = selectedChildrenOfParent.length > 0;\n      } else {\n        const allChildrenOfParent = allChildren.filter((x) => {\n          return x.value !== 'ALL' && x[parentType].filter((y) => y === obj.value).length > 0;\n        });\n        if (selectedChildrenOfParent.length > 0) {\n          if (obj.checked) {\n            if (this.strictRelationship && allChildrenOfParent.length !== selectedChildrenOfParent.length) {\n              obj.indeterminate = true;\n              obj.checked = false;\n              this.removeValue(obj);\n              this.addIndividualChildren(selectedChildrenOfParent);\n            }\n          } else {\n            obj.indeterminate = true;\n          }\n          if (this.strictRelationship && itemChanged.type !== parentType) {\n            if (obj.checked) {\n              obj.checked = false;\n              this.removeValue(obj);\n              this.addIndividualChildren(selectedChildrenOfParent);\n            }\n          }\n        } else {\n          obj.indeterminate = false;\n          if (allChildrenOfParent.length === 0) {\n            // if it has no children and is checked, it should stay checked\n            return;\n          } else if (this.strictRelationship && itemChanged.type !== parentType) {\n            this.remove(null, obj);\n          }\n        }\n      }\n    });\n    if (this.selectAllOption) {\n      this.updateIndeterminateStates(allParentType, allChildren, allCheckedChildren);\n    }\n  }\n\n  updateAllParentsOrChildren(allItem, action) {\n    if (allItem.isParentOf) {\n      this.updateAllChildrenValue(allItem, action);\n    } else if (allItem.isChildOf) {\n      this.updateAllParentValue(allItem, action);\n    }\n  }\n\n  updateAllChildrenValue(item, action) {\n    const selecting = action === 'select';\n    const childType = item.isParentOf;\n    const potentialChildren = this.getAllOfType(childType);\n    if (this.selectAllOption && this.allOfTypeSelected(childType) && !selecting) {\n      this.remove(null, potentialChildren[0]);\n      return;\n    }\n    potentialChildren.forEach((x) => {\n      if (x.value === 'ALL' && !x.checked) {\n        if (selecting) {\n          x.checked = true;\n        }\n        x.indeterminate = selecting;\n      } else {\n        if (x.checked && !selecting) {\n          this.remove(null, x);\n        }\n        x.checked = selecting;\n      }\n    });\n  }\n\n  updateAllParentValue(item, action) {\n    const selecting = action === 'select';\n    const parentType = item.isChildOf;\n    const potentialParents = this.getAllOfType(parentType);\n    potentialParents.forEach((x) => {\n      if (!x.checked) {\n        x.indeterminate = selecting;\n      }\n    });\n  }\n\n  updateIndeterminateStates(allParentType, allChildren, allCheckedChildren) {\n    const allCheckedOrIndeterminateParents = allParentType.filter((x) => (!!x.checked || !!x.indeterminate) && x.value !== 'ALL');\n    const isParentIndeterminate = !!allParentType[0].checked ? false : allCheckedOrIndeterminateParents.length > 0;\n    const isChildIndeterminate = !!allChildren[0].checked ? false : allCheckedChildren.length > 0;\n    this.setIndeterminateState(allParentType, isParentIndeterminate);\n    this.setIndeterminateState(allChildren, isChildIndeterminate);\n  }\n\n  updateChildrenValue(parent, action) {\n    const selecting = action === 'select';\n    const childType = parent.isParentOf;\n    const potentialChildren = this.getAllOfType(childType);\n    potentialChildren.forEach((x) => {\n      if (x.value === 'ALL') {\n        return;\n      }\n      if (x[parent.type].filter((y) => y === parent.value).length > 0) {\n        if (x.checked && !selecting) {\n          x.checked = false;\n          if (this.allOfTypeSelected(childType)) {\n            this.handleRemoveItemIfAllSelected(x);\n          } else {\n            this.removeValue(x);\n          }\n        }\n        x.checked = selecting;\n      }\n    });\n  }\n\n  updateParentValue(child, action) {\n    const allParentType = this.getAllOfType(child.isChildOf);\n    if (allParentType[0].checked && action !== 'select') {\n      this.handleRemoveItemIfAllSelected(allParentType[0]);\n    }\n  }\n\n  addIndividualChildren(children) {\n    let parentAlreadySelected = false;\n    children.forEach((x) => {\n      if (x.isChildOf) {\n        // only add children if their parents are not already selected\n        x[x.isChildOf].forEach((parent) => {\n          if (this.value[x.isChildOf].filter((p) => p === parent).length > 0) {\n            parentAlreadySelected = true;\n          }\n        });\n      }\n      if (this.value[x.type].filter((item) => item === x.value).length === 0 && !parentAlreadySelected) {\n        this.add(x);\n      }\n    });\n  }\n\n  setInitialValue(model): void {\n    this.items = [];\n    this.value = model || {};\n    if (!this.types) {\n      return;\n    }\n    this.types.forEach((typeObj) => {\n      const type = typeObj.value;\n      if (this.value[type]) {\n        let indeterminateIsSet = false;\n        const options = this.updateAllItemState(type);\n        const optionsByType = options.allOfType;\n        const allSelected = options.allOfTypeSelected;\n        this.value[type].forEach((item) => {\n          if (!allSelected && !indeterminateIsSet) {\n            indeterminateIsSet = true;\n            this.setIndeterminateState(optionsByType, true);\n          }\n          const value = optionsByType.filter((x) => x.value === item)[0];\n          value.checked = true;\n          if (!allSelected) {\n            this.updateDisplayItems(value, 'add');\n          }\n          if (this.strictRelationship && value.isParentOf) {\n            this.updateChildrenValue(value, 'select');\n          }\n        });\n        if (typeObj.isChildOf) {\n          this.modifyAffectedParentsOrChildren(true, { value: type, isChildOf: true });\n        }\n      } else {\n        this.value[type] = [];\n      }\n    });\n  }\n\n  allItemsSelected(optionsByType, type) {\n    return this.value[type].length === optionsByType.length - 1;\n  }\n\n  // Set touched on blur\n  onTouched(e) {\n    this.element.nativeElement.classList.remove('selected');\n    this.onModelTouched();\n    this.blur.emit(e);\n  }\n\n  writeValue(model: any): void {\n    this.model = model;\n    this.setInitialValue(model);\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoChipsModule } from './../chips/Chips.module';\n// APP\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoMultiPickerElement } from './MultiPicker';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoPickerModule, NovoChipsModule],\n  declarations: [NovoMultiPickerElement],\n  exports: [NovoMultiPickerElement],\n})\nexport class NovoMultiPickerModule {}\n","// NG2\nimport { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'novo-non-ideal-state',\n  styleUrls: ['./NonIdealState.scss'],\n  template: `\n    <novo-icon class=\"novo-non-ideal-state-icon\" *ngIf=\"icon\" [color]=\"theme\">{{ icon }}</novo-icon>\n    <novo-title class=\"novo-non-ideal-state-title\" *ngIf=\"title\" marginBefore>{{ title }}</novo-title>\n    <novo-text *ngIf=\"description\" block marginBefore marginAfter>{{ description }}</novo-text>\n    <ng-content></ng-content>\n  `,\n})\nexport class NonIdealStateElement {\n  @HostBinding('class')\n  hb_class = 'novo-non-ideal-state';\n\n  @Input()\n  theme: string = 'light';\n  @Input()\n  icon: string;\n  @Input()\n  title: string;\n  @Input()\n  description: string;\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoCommonModule } from '../common/common.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NonIdealStateElement } from './NonIdealState';\n\n@NgModule({\n  imports: [CommonModule, NovoIconModule, NovoCommonModule],\n  declarations: [NonIdealStateElement],\n  exports: [NonIdealStateElement],\n})\nexport class NovoNonIdealStateModule {}\n","import { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { GlobalRef } from '../../services/global/global.service';\nimport { LocalStorageService } from '../../services/storage/storage.service';\n\n@Injectable()\nexport class GooglePlacesService {\n  constructor(\n    private _http: HttpClient,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private _global: GlobalRef,\n    private _localStorageService: LocalStorageService,\n  ) {}\n\n  getPredictions(url: string, query: string): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?query=' + query).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getLatLngDetail(url: string, lat: number, lng: number): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?lat=' + lat + '&lng=' + lng).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getPlaceDetails(url: string, placeId: string): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?query=' + placeId).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  getGeoCurrentLocation(): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        if (_window.navigator.geolocation) {\n          _window.navigator.geolocation.getCurrentPosition((pos) => {\n            const latlng: any = { lat: parseFloat(pos.coords.latitude + ''), lng: parseFloat(pos.coords.longitude + '') };\n            resolve(latlng);\n          });\n        } else {\n          resolve(false);\n        }\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoLatLngDetail(latlng: any): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const geocoder: any = new _window.google.maps.Geocoder();\n        geocoder.geocode({ location: latlng }, (results, status) => {\n          if (status === 'OK') {\n            this.getGeoPlaceDetail(results[0].place_id).then((result) => {\n              if (result) {\n                resolve(result);\n              } else {\n                resolve(false);\n              }\n            });\n          } else {\n            resolve(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPrediction(params: any): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const placesService: any = new _window.google.maps.places.AutocompleteService();\n        let queryInput: any = {};\n        const promiseArr: any = [];\n        if (params.countryRestriction.length) {\n          queryInput = {\n            input: params.query,\n            componentRestrictions: { country: params.countryRestriction },\n          };\n        } else {\n          queryInput = {\n            input: params.query,\n          };\n        }\n        if (params.geoLocation) {\n          queryInput.location = new _window.google.maps.LatLng(parseFloat(params.geoLocation[0]), parseFloat(params.geoLocation[1]));\n          queryInput.radius = params.radius;\n        }\n        if (params.geoTypes.length) {\n          for (let i: number = 0; i < params.geoTypes.length; i++) {\n            const _tempQuery: any = queryInput;\n            _tempQuery.types = new Array(params.geoTypes[i]);\n            promiseArr.push(this.geoPredictionCall(placesService, _tempQuery));\n          }\n        } else {\n          promiseArr.push(this.geoPredictionCall(placesService, queryInput));\n        }\n\n        Promise.all(promiseArr).then((values) => {\n          const val: any = values;\n          if (val.length > 1) {\n            let _tempArr: any = [];\n            for (let j: number = 0; j < val.length; j++) {\n              if (val[j] && val[j].length) {\n                _tempArr = _tempArr.concat(val[j]);\n              }\n            }\n            _tempArr = this.getUniqueResults(_tempArr);\n            resolve(_tempArr);\n          } else {\n            resolve(values[0]);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPlaceDetail(placeId: string): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const placesService: any = new _window.google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails({ placeId }, (result: any, status: any) => {\n          if (result === null || result.length === 0) {\n            this.getGeoPaceDetailByReferance(result.referance).then((referanceData: any) => {\n              if (!referanceData) {\n                resolve(false);\n              } else {\n                resolve(referanceData);\n              }\n            });\n          } else {\n            resolve(result);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  getGeoPaceDetailByReferance(referance: string): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        const _window: any = this._global.nativeGlobal;\n        const placesService: any = new _window.google.maps.places.PlacesService();\n        placesService.getDetails({ reference: referance }, (result: any, status: any) => {\n          if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(result);\n          } else {\n            resolve(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  addRecentList(localStorageName: string, result: any, itemSavedLength: number): any {\n    this.getRecentList(localStorageName).then((data: any) => {\n      if (data) {\n        for (let i: number = 0; i < data.length; i++) {\n          if (data[i].description === result.description) {\n            data.splice(i, 1);\n            break;\n          }\n        }\n        data.unshift(result);\n        if (data.length > itemSavedLength) {\n          data.pop();\n        }\n        this._localStorageService.setItem(localStorageName, JSON.stringify(data));\n      }\n    });\n  }\n\n  getRecentList(localStorageName: string): Promise<any> {\n    return new Promise((resolve) => {\n      let value: any = this._localStorageService.getItem(localStorageName);\n      if (value) {\n        value = JSON.parse(value);\n      } else {\n        value = [];\n      }\n      resolve(value);\n    });\n  }\n\n  private getUniqueResults(arr: any): any {\n    return Array.from(arr.reduce((m, t) => m.set(t.place_id, t), new Map()).values());\n  }\n\n  private geoPredictionCall(placesService: any, queryInput: any): Promise<any> {\n    const _window: any = this._global.nativeGlobal;\n    return new Promise((resolve) => {\n      placesService.getPlacePredictions(queryInput, (result: any, status: any) => {\n        if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(result);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n}\n","// NG2\nimport { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, Inject, Input, OnChanges, OnInit, Output, PLATFORM_ID } from '@angular/core';\nimport { GlobalRef } from '../../services/global/global.service';\nimport { GooglePlacesService } from './places.service';\n\nexport interface Settings {\n  geoPredictionServerUrl?: string;\n  geoLatLangServiceUrl?: string;\n  geoLocDetailServerUrl?: string;\n  geoCountryRestriction?: any;\n  geoTypes?: any;\n  geoLocation?: any;\n  geoRadius?: number;\n  serverResponseListHierarchy?: any;\n  serverResponseatLangHierarchy?: any;\n  serverResponseDetailHierarchy?: any;\n  resOnSearchButtonClickOnly?: boolean;\n  useGoogleGeoApi?: boolean;\n  inputPlaceholderText?: string;\n  inputString?: string;\n  showSearchButton?: boolean;\n  showRecentSearch?: boolean;\n  showCurrentLocation?: boolean;\n  recentStorageName?: string;\n  noOfRecentSearchSave?: number;\n  currentLocIconUrl?: string;\n  searchIconUrl?: string;\n  locationIconUrl?: string;\n}\n\n@Component({\n  selector: 'google-places-list',\n  template: `\n    <novo-list direction=\"vertical\">\n      <novo-list-item *ngFor=\"let data of queryItems; let $index = index\" (click)=\"selectedListNode($event, $index)\">\n        <item-header>\n          <item-avatar icon=\"location\"></item-avatar>\n          <item-title>{{ data.structured_formatting?.main_text ? data.structured_formatting.main_text : data.description }}</item-title>\n        </item-header>\n        <item-content>{{ data.structured_formatting?.secondary_text }}</item-content>\n      </novo-list-item>\n    </novo-list>\n  `,\n})\nexport class PlacesListComponent implements OnInit, OnChanges {\n  @Input()\n  userSettings: Settings;\n  @Input()\n  term: string = '';\n  @Output()\n  termChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  select: EventEmitter<any> = new EventEmitter<any>();\n\n  public locationInput: string = '';\n  public gettingCurrentLocationFlag: boolean = false;\n  public dropdownOpen: boolean = false;\n  public recentDropdownOpen: boolean = false;\n  public queryItems: any = [];\n  public isSettingsError: boolean = false;\n  public settingsErrorMsg: string = '';\n  public settings: Settings = {};\n  private moduleinit: boolean = false;\n  private selectedDataIndex: number = -1;\n  private recentSearchData: any = [];\n  private userSelectedOption: any = '';\n  private defaultSettings: Settings = {\n    geoPredictionServerUrl: '',\n    geoLatLangServiceUrl: '',\n    geoLocDetailServerUrl: '',\n    geoCountryRestriction: [],\n    geoTypes: [],\n    geoLocation: [],\n    geoRadius: 0,\n    serverResponseListHierarchy: [],\n    serverResponseatLangHierarchy: [],\n    serverResponseDetailHierarchy: [],\n    resOnSearchButtonClickOnly: false,\n    useGoogleGeoApi: true,\n    inputPlaceholderText: 'Enter Area Name',\n    inputString: '',\n    showSearchButton: true,\n    showRecentSearch: true,\n    showCurrentLocation: true,\n    recentStorageName: 'recentSearches',\n    noOfRecentSearchSave: 5,\n    currentLocIconUrl: '',\n    searchIconUrl: '',\n    locationIconUrl: '',\n  };\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private _elmRef: ElementRef,\n    private _global: GlobalRef,\n    private _googlePlacesService: GooglePlacesService,\n  ) {}\n\n  ngOnInit(): any {\n    if (!this.moduleinit) {\n      this.moduleInit();\n    }\n  }\n\n  ngOnChanges(): any {\n    this.moduleinit = true;\n    this.moduleInit();\n    this.searchinputCallback(null);\n  }\n\n  // function called when click event happens in input box. (Binded with view)\n  searchinputClickCallback(event: any): any {\n    event.target.select();\n    this.searchinputCallback(event);\n  }\n\n  // function called when there is a change in input. (Binded with view)\n  searchinputCallback(event: any): any {\n    const inputVal: any = this.locationInput;\n    if (inputVal) {\n      this.getListQuery(inputVal);\n    } else {\n      this.queryItems = [];\n      if (this.userSelectedOption) {\n        this.userQuerySubmit('false');\n      }\n      this.userSelectedOption = '';\n      if (this.settings.showRecentSearch) {\n        this.showRecentSearch();\n      } else {\n        this.dropdownOpen = false;\n      }\n    }\n  }\n\n  // function to execute when user hover over autocomplete list.(binded with view)\n  activeListNode(index: number): any {\n    for (let i: number = 0; i < this.queryItems.length; i++) {\n      if (index === i) {\n        this.queryItems[i].active = true;\n        this.selectedDataIndex = index;\n      } else {\n        this.queryItems[i].active = false;\n      }\n    }\n  }\n\n  // function to execute when user select the autocomplete list.(binded with view)\n  selectedListNode(event: MouseEvent, index: number): any {\n    this.dropdownOpen = false;\n    if (this.recentDropdownOpen) {\n      this.setRecentLocation(this.queryItems[index]);\n    } else {\n      this.getPlaceLocationInfo(this.queryItems[index]);\n    }\n  }\n\n  // function to close the autocomplete list when clicked outside. (binded with view)\n  closeAutocomplete(event: any): any {\n    if (!this._elmRef.nativeElement.contains(event.target)) {\n      this.selectedDataIndex = -1;\n      this.dropdownOpen = false;\n    }\n  }\n\n  // function to manually trigger the callback to parent component when clicked search button.\n  userQuerySubmit(selectedOption?: any): any {\n    const _userOption: any = selectedOption === 'false' ? '' : this.userSelectedOption;\n    if (_userOption) {\n      this.select.emit(this.userSelectedOption);\n    } else {\n      // this.select.emit(false);\n    }\n  }\n\n  // function to get user current location from the device.\n  currentLocationSelected(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      this.gettingCurrentLocationFlag = true;\n      this.dropdownOpen = false;\n      this._googlePlacesService.getGeoCurrentLocation().then((result: any) => {\n        if (!result) {\n          this.gettingCurrentLocationFlag = false;\n        } else {\n          this.getCurrentLocationInfo(result);\n        }\n      });\n    }\n  }\n\n  // module initialization happens. function called by ngOninit and ngOnChange\n  private moduleInit(): any {\n    this.settings = this.setUserSettings();\n    // condition to check if Radius is set without location detail.\n    if (this.settings.geoRadius) {\n      if (this.settings.geoLocation.length !== 2) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Radius should be used with GeoLocation. Please use \"geoLocation\" key to set lat and lng. ';\n      }\n    }\n\n    // condition to check if lat and lng is set and radious is not set then it will set to 20,000KM by default\n    if (this.settings.geoLocation.length === 2 && !this.settings.geoRadius) {\n      this.settings.geoRadius = 20000000;\n    }\n    if (this.settings.showRecentSearch) {\n      this.getRecentLocations();\n    }\n    if (!this.settings.useGoogleGeoApi) {\n      if (!this.settings.geoPredictionServerUrl) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Prediction custom server url is not defined. Please use \"geoPredictionServerUrl\" key to set. ';\n      }\n      if (!this.settings.geoLatLangServiceUrl) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Latitude and longitude custom server url is not defined. Please use \"geoLatLangServiceUrl\" key to set. ';\n      }\n      if (!this.settings.geoLocDetailServerUrl) {\n        this.isSettingsError = true;\n        this.settingsErrorMsg =\n          this.settingsErrorMsg + 'Location detail custom server url is not defined. Please use \"geoLocDetailServerUrl\" key to set. ';\n      }\n    }\n    this.locationInput = this.term;\n  }\n\n  // function to process the search query when pressed enter.\n  private processSearchQuery(): any {\n    if (this.queryItems.length) {\n      if (this.selectedDataIndex > -1) {\n        this.selectedListNode(null, this.selectedDataIndex);\n      } else {\n        this.selectedListNode(null, 0);\n      }\n    }\n  }\n\n  // function to set user settings if it is available.\n  private setUserSettings(): Settings {\n    const _tempObj: any = {};\n    if (this.userSettings && typeof this.userSettings === 'object') {\n      const keys: string[] = Object.keys(this.defaultSettings);\n      for (const value of keys) {\n        _tempObj[value] = this.userSettings[value] !== undefined ? this.userSettings[value] : this.defaultSettings[value];\n      }\n      return _tempObj;\n    } else {\n      return this.defaultSettings;\n    }\n  }\n\n  // function to get the autocomplete list based on user input.\n  private getListQuery(value: string): any {\n    this.recentDropdownOpen = false;\n    if (this.settings.useGoogleGeoApi) {\n      const _tempParams: any = {\n        query: value,\n        countryRestriction: this.settings.geoCountryRestriction,\n        geoTypes: this.settings.geoTypes,\n      };\n      if (this.settings.geoLocation.length === 2) {\n        _tempParams.geoLocation = this.settings.geoLocation;\n        _tempParams.radius = this.settings.geoRadius;\n      }\n      this._googlePlacesService.getGeoPrediction(_tempParams).then((result) => {\n        this.updateListItem(result);\n      });\n    } else {\n      this._googlePlacesService.getPredictions(this.settings.geoPredictionServerUrl, value).then((result) => {\n        result = this.extractServerList(this.settings.serverResponseListHierarchy, result);\n        this.updateListItem(result);\n      });\n    }\n  }\n\n  // function to extratc custom data which is send by the server.\n  private extractServerList(arrayList: any, data: any): any {\n    if (arrayList.length) {\n      let _tempData: any = data;\n      for (const key of arrayList) {\n        _tempData = _tempData[key];\n      }\n      return _tempData;\n    } else {\n      return data;\n    }\n  }\n\n  // function to update the predicted list.\n  private updateListItem(listData: any): any {\n    this.queryItems = listData ? listData : [];\n    this.dropdownOpen = true;\n  }\n\n  // function to show the recent search result.\n  private showRecentSearch(): any {\n    this.recentDropdownOpen = true;\n    this.dropdownOpen = true;\n    this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((result: any) => {\n      if (result) {\n        this.queryItems = result;\n      } else {\n        this.queryItems = [];\n      }\n    });\n  }\n\n  // function to execute to get location detail based on latitude and longitude.\n  private getCurrentLocationInfo(latlng: any): any {\n    if (this.settings.useGoogleGeoApi) {\n      this._googlePlacesService.getGeoLatLngDetail(latlng).then((result: any) => {\n        if (result) {\n          this.setRecentLocation(result);\n        }\n        this.gettingCurrentLocationFlag = false;\n      });\n    } else {\n      this._googlePlacesService.getLatLngDetail(this.settings.geoLatLangServiceUrl, latlng.lat, latlng.lng).then((result: any) => {\n        if (result) {\n          result = this.extractServerList(this.settings.serverResponseatLangHierarchy, result);\n          this.setRecentLocation(result);\n        }\n        this.gettingCurrentLocationFlag = false;\n      });\n    }\n  }\n\n  // function to retrive the location info based on goovle place id.\n  private getPlaceLocationInfo(selectedData: any): any {\n    if (this.settings.useGoogleGeoApi) {\n      this._googlePlacesService.getGeoPlaceDetail(selectedData.place_id).then((data: any) => {\n        if (data) {\n          this.setRecentLocation(data);\n        }\n      });\n    } else {\n      this._googlePlacesService.getPlaceDetails(this.settings.geoLocDetailServerUrl, selectedData.place_id).then((result: any) => {\n        if (result) {\n          result = this.extractServerList(this.settings.serverResponseDetailHierarchy, result);\n          this.setRecentLocation(result);\n        }\n      });\n    }\n  }\n\n  // function to store the selected user search in the localstorage.\n  private setRecentLocation(data: any): any {\n    data = JSON.parse(JSON.stringify(data));\n    data.description = data.description ? data.description : data.formatted_address;\n    data.active = false;\n    this.selectedDataIndex = -1;\n    this.locationInput = data.description;\n    if (this.settings.showRecentSearch) {\n      this._googlePlacesService.addRecentList(this.settings.recentStorageName, data, this.settings.noOfRecentSearchSave);\n      this.getRecentLocations();\n    }\n    this.userSelectedOption = data;\n    // below code will execute only when user press enter or select any option selection and it emit a callback to the parent component.\n    if (!this.settings.resOnSearchButtonClickOnly) {\n      this.select.emit(data);\n      this.termChange.emit(data);\n    }\n  }\n\n  // function to retrive the stored recent user search from the localstorage.\n  private getRecentLocations(): any {\n    this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((data: any) => {\n      this.recentSearchData = data && data.length ? data : [];\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoListModule } from '../list/List.module';\nimport { PlacesListComponent } from './places.component';\nimport { GooglePlacesService } from './places.service';\n\n@NgModule({\n  declarations: [PlacesListComponent],\n  imports: [CommonModule, HttpClientModule, FormsModule, NovoListModule],\n  exports: [PlacesListComponent],\n  providers: [GooglePlacesService],\n})\nexport class GooglePlacesModule {}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, ViewChild } from '@angular/core';\nimport { PopOverDirective } from './PopOver';\n\n@Component({\n  selector: 'popover-content',\n  template: `\n    <div\n      #popoverDiv\n      class=\"popover {{ effectivePlacement }}\"\n      [style.top]=\"top + 'px'\"\n      [style.left]=\"left + 'px'\"\n      [class.fade]=\"animation\"\n      style=\"display: block\"\n      role=\"popover\"\n    >\n      <div class=\"arrow {{ effectiveAlignment }}\"></div>\n      <div class=\"popover-title\" [hidden]=\"!title\">{{ title }}</div>\n      <div class=\"popover-content\">\n        <ng-content></ng-content>\n        <div class=\"popover-content-text\">{{ content }}</div>\n      </div>\n    </div>\n  `,\n})\nexport class PopOverContent implements AfterViewInit {\n  @Input()\n  content: string;\n  @Input()\n  placement: string = 'top';\n  @Input()\n  title: string;\n  @Input()\n  animation: boolean = true;\n\n  @ViewChild('popoverDiv')\n  popoverDiv: ElementRef;\n  popover: PopOverDirective;\n  onCloseFromOutside = new EventEmitter();\n  top: number = -10000;\n  left: number = -10000;\n  displayType: string = 'none';\n  effectivePlacement: string;\n  effectiveAlignment: string;\n  isHidden: boolean = false;\n\n  constructor(protected element: ElementRef, protected cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this.show();\n    this.cdr.detectChanges();\n  }\n\n  toggle(): void {\n    if (this.isHidden) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  show(): void {\n    if (!this.popover || !this.popover.getElement()) {\n      return;\n    }\n\n    const p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n    this.displayType = 'block';\n    this.top = p.top;\n    this.left = p.left;\n    this.isHidden = false;\n  }\n\n  hide(): void {\n    this.top = -10000;\n    this.left = -10000;\n    this.isHidden = true;\n    this.popover.hide();\n  }\n\n  hideFromPopover() {\n    this.top = -10000;\n    this.left = -10000;\n  }\n\n  protected positionElements(\n    hostEl: HTMLElement,\n    targetEl: HTMLElement,\n    positionStr: string,\n    appendToBody = false,\n  ): { top: number; left: number } {\n    const positionStrParts = positionStr.split('-');\n    const mainSide = (this.effectivePlacement = this.getEffectivePlacement(positionStrParts[0] || 'right', hostEl, targetEl));\n    const orientation = (this.effectiveAlignment = positionStrParts[1] || 'center');\n    const hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n    const targetElWidth = targetEl.offsetWidth;\n    const targetElHeight = targetEl.offsetHeight;\n\n    const shiftWidth: any = {\n      center(): number {\n        return hostElPos.left + (hostElPos.width - targetElWidth) / 2;\n      },\n      right(): number {\n        return hostElPos.left;\n      },\n      left(): number {\n        return hostElPos.left + (hostElPos.width - targetElWidth);\n      },\n    };\n\n    const shiftHeight: any = {\n      center(): number {\n        return hostElPos.top + (hostElPos.height - targetElHeight) / 2;\n      },\n      bottom(): number {\n        return hostElPos.top;\n      },\n      top(): number {\n        return hostElPos.top + (hostElPos.height - targetElHeight);\n      },\n    };\n\n    let targetElPos: { top: number; left: number };\n    switch (mainSide) {\n      case 'right':\n        targetElPos = {\n          top: shiftHeight[orientation](),\n          left: hostElPos.left + hostElPos.width,\n        };\n        break;\n\n      case 'left':\n        targetElPos = {\n          top: shiftHeight[orientation](),\n          left: hostElPos.left - targetElWidth,\n        };\n        break;\n\n      case 'bottom':\n        targetElPos = {\n          top: hostElPos.top + hostElPos.height,\n          left: shiftWidth[orientation](),\n        };\n        break;\n\n      default:\n        targetElPos = {\n          top: hostElPos.top - targetElHeight,\n          left: shiftWidth[orientation](),\n        };\n        break;\n    }\n\n    return targetElPos;\n  }\n\n  protected position(nativeEl: HTMLElement): { width: number; height: number; top: number; left: number } {\n    let offsetParentBCR = { top: 0, left: 0 };\n    const elBCR = this.offset(nativeEl);\n    const offsetParentEl = this.parentOffsetEl(nativeEl);\n    if (offsetParentEl !== window.document) {\n      offsetParentBCR = this.offset(offsetParentEl);\n      offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n      offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n    }\n\n    const boundingClientRect = nativeEl.getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || nativeEl.offsetWidth,\n      height: boundingClientRect.height || nativeEl.offsetHeight,\n      top: elBCR.top - offsetParentBCR.top,\n      left: elBCR.left - offsetParentBCR.left,\n    };\n  }\n\n  protected offset(nativeEl: any): { width: number; height: number; top: number; left: number } {\n    const boundingClientRect = nativeEl.getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || nativeEl.offsetWidth,\n      height: boundingClientRect.height || nativeEl.offsetHeight,\n      top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),\n      left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft),\n    };\n  }\n\n  protected getStyle(nativeEl: HTMLElement, cssProp: string): string {\n    if ((nativeEl as any).currentStyle) {\n      return (nativeEl as any).currentStyle[cssProp];\n    }\n\n    if (window.getComputedStyle) {\n      return (window.getComputedStyle as any)(nativeEl)[cssProp];\n    }\n\n    return (nativeEl.style as any)[cssProp];\n  }\n\n  protected isStaticPositioned(nativeEl: HTMLElement): boolean {\n    return (this.getStyle(nativeEl, 'position') || 'static') === 'static';\n  }\n\n  protected parentOffsetEl(nativeEl: HTMLElement): any {\n    let offsetParent: any = nativeEl.offsetParent || window.document;\n    while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {\n      offsetParent = offsetParent.offsetParent;\n    }\n    return offsetParent || window.document;\n  }\n\n  protected getEffectivePlacement(desiredPlacement: string, hostElement: HTMLElement, targetElement: HTMLElement): string {\n    const hostElBoundingRect = hostElement.getBoundingClientRect();\n\n    if (desiredPlacement === 'top' && hostElBoundingRect.top - targetElement.offsetHeight < 0) {\n      return 'bottom';\n    }\n    if (desiredPlacement === 'bottom' && hostElBoundingRect.bottom + targetElement.offsetHeight > window.innerHeight) {\n      return 'top';\n    }\n    if (desiredPlacement === 'left' && hostElBoundingRect.left - targetElement.offsetWidth < 0) {\n      return 'right';\n    }\n    if (desiredPlacement === 'right' && hostElBoundingRect.right + targetElement.offsetWidth > window.innerWidth) {\n      return 'left';\n    }\n\n    return desiredPlacement;\n  }\n}\n","// NG2\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  ViewContainerRef,\n} from '@angular/core';\nimport { PopOverContent } from './PopOverContent';\n\n@Directive({\n  selector: '[popover]',\n})\nexport class PopOverDirective implements OnChanges {\n  protected PopoverComponent = PopOverContent;\n  protected popover: ComponentRef<PopOverContent>;\n  protected visible: boolean;\n\n  constructor(protected viewContainerRef: ViewContainerRef, protected resolver: ComponentFactoryResolver) {}\n\n  @Input('popover')\n  content: string | PopOverContent;\n  @Input()\n  popoverDisabled: boolean;\n  @Input()\n  popoverAlways: boolean;\n  @Input()\n  popoverAnimation: boolean;\n  @Input()\n  popoverPlacement: string;\n  @Input()\n  popoverTitle: string;\n  @Input()\n  popoverOnHover: boolean = false;\n  @Input()\n  popoverDismissTimeout: number = 0;\n\n  @Output()\n  onShown = new EventEmitter<PopOverDirective>();\n  @Output()\n  onHidden = new EventEmitter<PopOverDirective>();\n\n  // ---------------------------------------------------\n  // Event listeners\n  // ---------------------------------------------------\n  @HostListener('click')\n  showOrHideOnClick(): void {\n    if (this.popoverOnHover || this.popoverDisabled) {\n      return;\n    }\n    this.toggle();\n  }\n\n  @HostListener('focusin')\n  @HostListener('mouseenter')\n  showOnHover(): void {\n    if (!this.popoverOnHover || this.popoverDisabled) {\n      return;\n    }\n    this.show();\n  }\n\n  @HostListener('focusout')\n  @HostListener('mouseleave')\n  hideOnHover(): void {\n    if (!this.popoverOnHover || this.popoverDisabled) {\n      return;\n    }\n    this.hide();\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes.popoverDisabled) {\n      if (changes.popoverDisabled.currentValue) {\n        this.hide();\n      }\n    }\n    if (changes.popoverAlways) {\n      if (changes.popoverAlways.currentValue) {\n        this.show();\n      }\n    }\n  }\n\n  toggle() {\n    if (!this.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n\n    this.visible = true;\n    if (typeof this.content === 'string') {\n      const factory = this.resolver.resolveComponentFactory(this.PopoverComponent);\n      if (!this.visible) {\n        return;\n      }\n\n      this.popover = this.viewContainerRef.createComponent(factory);\n      const popover = this.popover.instance as PopOverContent;\n      popover.popover = this;\n      popover.content = this.content as string;\n      if (this.popoverPlacement !== undefined) {\n        popover.placement = this.popoverPlacement;\n      }\n      if (this.popoverAnimation !== undefined) {\n        popover.animation = this.popoverAnimation;\n      }\n      if (this.popoverTitle !== undefined) {\n        popover.title = this.popoverTitle;\n      }\n\n      popover.onCloseFromOutside.subscribe(() => this.hide());\n      if (this.popoverDismissTimeout > 0) {\n        setTimeout(() => this.hide(), this.popoverDismissTimeout);\n      }\n    } else {\n      const popover = this.content as PopOverContent;\n      popover.popover = this;\n      if (this.popoverPlacement !== undefined) {\n        popover.placement = this.popoverPlacement;\n      }\n      if (this.popoverAnimation !== undefined) {\n        popover.animation = this.popoverAnimation;\n      }\n      if (this.popoverTitle !== undefined) {\n        popover.title = this.popoverTitle;\n      }\n\n      popover.onCloseFromOutside.subscribe(() => this.hide());\n      if (this.popoverDismissTimeout > 0) {\n        setTimeout(() => this.hide(), this.popoverDismissTimeout);\n      }\n      popover.show();\n    }\n\n    this.onShown.emit(this);\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n\n    this.visible = false;\n    if (this.popover) {\n      this.popover.destroy();\n    }\n\n    if (this.content instanceof PopOverContent) {\n      (this.content as PopOverContent).hideFromPopover();\n    }\n\n    this.onHidden.emit(this);\n  }\n\n  getElement() {\n    return this.viewContainerRef.element.nativeElement;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport enum ProgressAppearance {\n  LINEAR = 'linear',\n  RADIAL = 'radial',\n}\n\n/**\n * Used to provide a progress container to a progress bar while avoiding circular references.\n * @docs-private\n */\nexport const NOVO_PROGRESS_CONTAINER = new InjectionToken('NOVO_PROGRESS_CONTAINER');\n","// NG2\nimport { NgModule } from '@angular/core';\nimport { PopOverDirective } from './PopOver';\n// APP\nimport { PopOverContent } from './PopOverContent';\n\n@NgModule({\n  declarations: [PopOverContent, PopOverDirective],\n  exports: [PopOverContent, PopOverDirective],\n})\nexport class NovoPopOverModule {}\n","// NG2\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// import type { NovoProgressElement } from './Progress';\nimport { NOVO_PROGRESS_CONTAINER, ProgressAppearance } from './ProgressConstants';\n\n// make radio-button-group ids unique\nlet nextId = 0;\n\n// Value accessor for the component (supports ngModel)\nconst PROGRESS_BAR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoProgressBarElement),\n  multi: true,\n};\n\n@Component({\n  selector: 'novo-progress-bar',\n  styleUrls: ['./ProgressBar.scss'],\n  providers: [PROGRESS_BAR_VALUE_ACCESSOR],\n  template: `\n    <div *ngIf=\"isLinear()\" class=\"progress-bar\"></div>\n    <svg *ngIf=\"isRadial()\" width=\"120\" height=\"120\">\n      <circle\n        [style.strokeDasharray]=\"circumference\"\n        [style.strokeDashoffset]=\"dashoffset\"\n        [attr.r]=\"radius\"\n        cx=\"60\"\n        cy=\"60\"\n        stroke-width=\"4\"\n        fill=\"transparent\"\n        class=\"progress__value\"\n      />\n      <!-- <text x=\"18\" y=\"20.35\" class=\"percentage\">30%</text> -->\n    </svg>\n  `,\n})\nexport class NovoProgressBarElement implements ControlValueAccessor, OnInit {\n  private _uniqueId: string = `novo-progress-${++nextId}`;\n  @HostBinding('class')\n  public appearance: ProgressAppearance = ProgressAppearance.LINEAR;\n  @Input() id: string = this._uniqueId;\n  @Input() name: string = this._uniqueId;\n  @Input() tabindex: number = 0;\n  @Input() label: string;\n  @Input() theme: string;\n  @Input() color: string;\n  @Input() indeterminate: boolean = false;\n  // Radial Value\n  public radius = 54;\n  public circumference = 2 * Math.PI * this.radius;\n  public dashoffset: number;\n\n  @HostBinding('class.striped')\n  @Input()\n  striped: boolean = false;\n\n  @HostBinding('class.animated')\n  @Input()\n  animated: boolean = false;\n\n  @HostBinding('style.width')\n  get width() {\n    if (this.isRadial()) {\n      return `100%`;\n    }\n    return `${this._percent * 100}%`;\n  }\n\n  @Output() change = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n\n  private _percent: number = 0;\n  private _value: number = 0;\n  private _disabled: boolean = false;\n\n  @Input() get value(): number {\n    return this._value;\n  }\n  set value(value) {\n    if (this.value !== value) {\n      this._value = value;\n      if (this.progress) {\n        this._percent = this.value / this.progress.total;\n      } else {\n        this._percent = value;\n      }\n      this.dashoffset = this.circumference * (1 - this._percent);\n      this.onChangeCallback(this._value);\n    }\n  }\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled || (this.progress != null && this.progress.disabled);\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  constructor(private ref: ChangeDetectorRef, @Optional() @Inject(NOVO_PROGRESS_CONTAINER) public progress: any) {\n    // NovoProgressElement\n    this.progress = progress;\n  }\n\n  ngOnInit() {\n    if (this.indeterminate) {\n      this.striped = true;\n      this.animated = true;\n      this._value = this.progress?.total || 100;\n    }\n    if (this.progress) {\n      this._percent = this._value / this.progress.total;\n      this.appearance = this.progress.appearance;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.ref.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  private onChangeCallback = (_: any) => {\n    // placeholder\n  };\n\n  private onTouchedCallback = () => {\n    // placeholder\n  };\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  isLinear() {\n    return this.appearance === ProgressAppearance.LINEAR;\n  }\n\n  isRadial() {\n    return this.appearance === ProgressAppearance.RADIAL;\n  }\n}\n","// NG2\nimport { AfterContentInit, Component, ContentChildren, forwardRef, HostBinding, Input, QueryList } from '@angular/core';\nimport { NovoProgressBarElement } from './ProgressBar';\nimport { NOVO_PROGRESS_CONTAINER, ProgressAppearance } from './ProgressConstants';\n\n@Component({\n  selector: 'novo-progress',\n  styleUrls: ['./Progress.scss'],\n  template: ` <ng-content></ng-content> `,\n  providers: [\n    {\n      provide: NOVO_PROGRESS_CONTAINER,\n      useExisting: NovoProgressElement,\n    },\n  ],\n})\nexport class NovoProgressElement implements AfterContentInit {\n  @Input()\n  color: string;\n  @Input() theme: string;\n  @Input() total: number = 100;\n  @Input() radius: number = 54;\n\n  @HostBinding('class.striped')\n  @Input()\n  striped: boolean = false;\n\n  // Private vars for getters\n  private _appearance: ProgressAppearance = ProgressAppearance.LINEAR;\n  private _disabled: boolean = false;\n\n  @HostBinding('class')\n  @Input()\n  get appearance(): ProgressAppearance {\n    return this._appearance;\n  }\n  set appearance(value: ProgressAppearance) {\n    if (this._appearance !== value) {\n      this._appearance = value as ProgressAppearance;\n      this._updateBarAppearance();\n    }\n  }\n\n  // Disabled State\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = !!value;\n  }\n\n  @ContentChildren(forwardRef(() => NovoProgressBarElement), { descendants: true })\n  _bars: QueryList<NovoProgressBarElement>;\n\n  ngAfterContentInit() {\n    this._updateBarRadius();\n  }\n\n  private _updateBarAppearance(): void {\n    if (this._bars) {\n      this._bars.forEach((bar) => {\n        bar.appearance = this.appearance as ProgressAppearance;\n      });\n    }\n  }\n\n  private _updateBarRadius(): void {\n    if (this._bars) {\n      this._bars.forEach((bar, i) => {\n        bar.radius = this.radius - i * 5;\n      });\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoProgressElement } from './Progress';\nimport { NovoProgressBarElement } from './ProgressBar';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoProgressBarElement, NovoProgressElement],\n  exports: [NovoProgressBarElement, NovoProgressElement],\n})\nexport class NovoProgressModule {}\n","import { Directive } from '@angular/core';\n\n/**\n * Directive for providing a custom clear-icon.\n * e.g.\n * <novo-select-search [formControl]=\"bankFilterCtrl\">\n *   <novo-icon novoSelectSearchClear>x</novo-icon>\n * </novo-select-search>\n */\n@Directive({\n  selector: '[novoSelectSearchClear]',\n})\nexport class NovoSelectSearchClearDirective {}\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { delay, filter, map, startWith, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { isAlphaNumeric, Key } from '../../utils';\nimport { NovoOption, _countGroupLabelsBeforeOption } from '../common';\nimport { NovoFieldElement } from '../field';\nimport { NovoSelectElement } from '../select';\nimport { NovoSelectSearchClearDirective } from './select-search-clear.directive';\n\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\nlet autoIncrement = 1;\n/* tslint:disable:member-ordering component-selector */\n/**\n * Component providing an input field for searching NovoSelectElement options.\n *\n * Example usage:\n *\n * interface Bank {\n *  id: string;\n *  name: string;\n * }\n *\n * @Component({\n *   selector: 'my-app-data-selection',\n *   template: `\n *     <novo-form-field>\n *       <novo-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\n *         <novo-option>\n *           <ngx-novo-select-search [formControl]=\"bankFilterCtrl\"></ngx-novo-select-search>\n *         </novo-option>\n *         <novo-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\n *           {{bank.name}}\n *         </novo-option>\n *       </novo-select>\n *     </novo-form-field>\n *   `\n * })\n * export class DataSelectionComponent implements OnInit, OnDestroy {\n *\n *   // control for the selected bank\n *   public bankCtrl: FormControl = new FormControl();\n *   // control for the NovoSelectElement filter keyword\n *   public bankFilterCtrl: FormControl = new FormControl();\n *\n *   // list of banks\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\n *   // list of banks filtered by search keyword\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\n *\n *   // Subject that emits when the component has been destroyed.\n *   private _onDestroy = new Subject<void>();\n *\n *\n *   ngOnInit() {\n *     // load the initial bank list\n *     this.filteredBanks.next(this.banks.slice());\n *     // listen for search field value changes\n *     this.bankFilterCtrl.valueChanges\n *       .pipe(takeUntil(this._onDestroy))\n *       .subscribe(() => {\n *         this.filterBanks();\n *       });\n *   }\n *\n *   ngOnDestroy() {\n *     this._onDestroy.next();\n *     this._onDestroy.complete();\n *   }\n *\n *   private filterBanks() {\n *     if (!this.banks) {\n *       return;\n *     }\n *\n *     // get the search keyword\n *     let search = this.bankFilterCtrl.value;\n *     if (!search) {\n *       this.filteredBanks.next(this.banks.slice());\n *       return;\n *     } else {\n *       search = search.toLowerCase();\n *     }\n *\n *     // filter the banks\n *     this.filteredBanks.next(\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\n *     );\n *   }\n * }\n */\n@Component({\n  selector: 'novo-select-search',\n  templateUrl: './select-search.component.html',\n  styleUrls: ['./select-search.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NovoSelectSearchComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSelectSearchComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  @Input() name = 'select-search-' + autoIncrement++;\n  /** Label of the search placeholder */\n  @Input() placeholderLabel = 'Search';\n\n  /** Type of the search input field */\n  @Input() type = 'text';\n\n  /** Label to be shown when no entries are found. Set to null if no message should be shown. */\n  @Input() noEntriesFoundLabel = 'No Records Found';\n\n  /**\n   *  Text that is appended to the currently active item label announced by screen readers,\n   *  informing the user of the current index, value and total options.\n   *  eg: Bank R (Germany) 1 of 6\n   */\n  @Input() indexAndLengthScreenReaderText = ' of ';\n\n  /**\n   * Whether or not the search field should be cleared after the dropdown menu is closed.\n   * Useful for server-side filtering.\n   */\n  @Input() clearSearchInput = true;\n\n  /** Whether to show the search-in-progress indicator */\n  @Input() searching = false;\n\n  /** Disables initial focusing of the input field */\n  @Input() disableInitialFocus = false;\n\n  /** Enable clear input on escape pressed */\n  @Input() enableClearOnEscapePressed = false;\n\n  /**\n   * Prevents home / end key being propagated to novo-select,\n   * allowing to move the cursor within the search input instead of navigating the options\n   */\n  @Input() preventHomeEndKeyPropagation = false;\n\n  /** Disables scrolling to active options when option list changes. Useful for server-side search */\n  @Input() disableScrollToActiveOnOptionsChanged = false;\n\n  /** Adds 508 screen reader support for search box */\n  @Input() ariaLabel = 'dropdown search';\n\n  /** Whether to show Select All Checkbox (for novo-select[multi=true]) */\n  @Input() showToggleAllCheckbox = false;\n\n  /** select all checkbox checked state */\n  @Input() toggleAllCheckboxChecked = false;\n\n  /** select all checkbox indeterminate state */\n  @Input() toggleAllCheckboxIndeterminate = false;\n\n  /** Display a message in a tooltip on the toggle-all checkbox */\n  @Input() toggleAllCheckboxTooltipMessage = '';\n\n  /** Define the position of the tooltip on the toggle-all checkbox. */\n  @Input() toogleAllCheckboxTooltipPosition: 'left' | 'right' | 'above' | 'below' | 'before' | 'after' = 'below';\n\n  /** Show/Hide the search clear button of the search input */\n  @Input() hideClearSearchButton = false;\n\n  /**\n   * Always restore selected options on selectionChange for mode multi (e.g. for lazy loading/infinity scrolling).\n   * Defaults to false, so selected options are only restored while filtering is active.\n   */\n  @Input() alwaysRestoreSelectedOptionsMulti = false;\n\n  /** Output emitter to send to parent component with the toggle all boolean */\n  @Output() toggleAll = new EventEmitter<boolean>();\n\n  /** Reference to the search input field */\n  @ViewChild('searchSelectInput', { read: ElementRef, static: true }) searchSelectInput: ElementRef;\n\n  /** Reference to the search input field */\n  @ViewChild('innerSelectSearch', { read: ElementRef, static: true }) innerSelectSearch: ElementRef;\n\n  /** Reference to custom search input clear icon */\n  @ContentChild(NovoSelectSearchClearDirective, { static: false }) clearIcon: NovoSelectSearchClearDirective;\n\n  @HostBinding('class.novo-select-search-inside-novo-option')\n  get isInsideNovoOption(): boolean {\n    return !!this.novoOption;\n  }\n\n  /** Current search value */\n  get value(): string {\n    return this._formControl.value;\n  }\n  private _lastExternalInputValue: string;\n\n  onTouched: Function = (_: any) => {};\n\n  /** Reference to the NovoSelectElement options */\n  public set _options(_options: QueryList<NovoOption>) {\n    this._options$.next(_options);\n  }\n  public get _options(): QueryList<NovoOption> {\n    return this._options$.getValue();\n  }\n  public _options$: BehaviorSubject<QueryList<NovoOption>> = new BehaviorSubject<QueryList<NovoOption>>(null);\n\n  private optionsList$: Observable<NovoOption[]> = this._options$.pipe(\n    switchMap((_options) =>\n      _options\n        ? _options.changes.pipe(\n            map((options) => options.toArray()),\n            startWith<NovoOption[]>(_options.toArray()),\n          )\n        : of(null),\n    ),\n  );\n\n  private optionsLength$: Observable<number> = this.optionsList$.pipe(map((options) => (options ? options.length : 0)));\n\n  /** Previously selected values when using <novo-select [multiple]=\"true\">*/\n  private previousSelectedValues: any[];\n\n  public _formControl: FormControl = new FormControl('');\n\n  /** whether to show the no entries found message */\n  public _showNoEntriesFound$: Observable<boolean> = combineLatest([this._formControl.valueChanges, this.optionsLength$]).pipe(\n    map(([value, optionsLength]) => this.noEntriesFoundLabel && value && optionsLength === this.getOptionsLengthOffset()),\n  );\n\n  /** Subject that emits when the component has been destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  constructor(\n    @Inject(NovoSelectElement) public novoSelect: NovoSelectElement,\n    public changeDetectorRef: ChangeDetectorRef,\n    private _viewportRuler: ViewportRuler,\n    @Optional() @Inject(NovoOption) public novoOption: NovoOption = null,\n    private liveAnnouncer: LiveAnnouncer,\n    @Optional() @Inject(NovoFieldElement) public matFormField: NovoFieldElement = null,\n  ) {}\n\n  ngOnInit() {\n    // set custom panel class\n    // const panelClass = 'novo-select-search-panel';\n    // if (this.novoSelect.panelClass) {\n    //   if (Array.isArray(this.novoSelect.panelClass)) {\n    //     (<string[]>this.novoSelect.panelClass).push(panelClass);\n    //   } else if (typeof this.novoSelect.panelClass === 'string') {\n    //     this.novoSelect.panelClass = [this.novoSelect.panelClass, panelClass];\n    //   } else if (typeof this.novoSelect.panelClass === 'object') {\n    //     this.novoSelect.panelClass[panelClass] = true;\n    //   }\n    // } else {\n    //   this.novoSelect.panelClass = panelClass;\n    // }\n\n    // set custom novo-option class if the component was placed inside a novo-option\n    if (this.novoOption) {\n      this.novoOption.disabled = true;\n      this.novoOption._getHostElement().classList.add('contains-novo-select-search');\n    } else {\n      console.error('<ngx-novo-select-search> must be placed inside a <novo-option> element');\n    }\n\n    // when the select dropdown panel is opened or closed\n    this.novoSelect.openedChange.pipe(delay(1), takeUntil(this._onDestroy)).subscribe((opened) => {\n      if (opened) {\n        this.updateInputWidth();\n        // focus the search field when opening\n        if (!this.disableInitialFocus) {\n          this._focus();\n        }\n      } else {\n        // clear it when closing\n        if (this.clearSearchInput) {\n          this._reset();\n        }\n      }\n    });\n\n    // set the first item active after the options changed\n    this.novoSelect.openedChange\n      .pipe(take(1))\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        if (this.novoSelect._keyManager) {\n          this.novoSelect._keyManager.change\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => this.adjustScrollTopToFitActiveOptionIntoView());\n        } else {\n          console.log('_keyManager was not initialized.');\n        }\n\n        this._options = this.novoSelect.contentOptions;\n\n        // Closure variable for tracking the most recent first option.\n        // In order to avoid avoid causing the list to\n        // scroll to the top when options are added to the bottom of\n        // the list (eg: infinite scroll), we compare only\n        // the changes to the first options to determine if we\n        // should set the first item as active.\n        // This prevents unnecessary scrolling to the top of the list\n        // when options are appended, but allows the first item\n        // in the list to be set as active by default when there\n        // is no active selection\n        let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];\n\n        this._options.changes.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n          // avoid \"expression has been changed\" error\n          setTimeout(() => {\n            // Convert the QueryList to an array\n            const options = this._options.toArray();\n\n            // The true first item is offset by 1\n            const currentFirstOption = options[this.getOptionsLengthOffset()];\n\n            const keyManager = this.novoSelect._keyManager;\n            if (keyManager && this.novoSelect.panelOpen) {\n              // set first item active and input width\n\n              // Check to see if the first option in these changes is different from the previous.\n              const firstOptionIsChanged = !this.novoSelect.compareWith(previousFirstOption, currentFirstOption);\n\n              // CASE: The first option is different now.\n              // Indiciates we should set it as active and scroll to the top.\n              if (\n                firstOptionIsChanged ||\n                !keyManager.activeItem ||\n                !options.find((option) => this.novoSelect.compareWith(option, keyManager.activeItem))\n              ) {\n                keyManager.setFirstItemActive();\n              }\n\n              // wait for panel width changes\n              setTimeout(() => {\n                this.updateInputWidth();\n              });\n\n              if (!this.disableScrollToActiveOnOptionsChanged) {\n                this.adjustScrollTopToFitActiveOptionIntoView();\n              }\n            }\n\n            // Update our reference\n            previousFirstOption = currentFirstOption;\n          });\n        });\n      });\n\n    // add or remove css class depending on whether to show the no entries found message\n    // note: this is hacky\n    this._showNoEntriesFound$.pipe(takeUntil(this._onDestroy)).subscribe((showNoEntriesFound) => {\n      // set no entries found class on mat option\n      if (this.novoOption) {\n        if (showNoEntriesFound) {\n          this.novoOption._getHostElement().classList.add('novo-select-search-no-entries-found');\n        } else {\n          this.novoOption._getHostElement().classList.remove('novo-select-search-no-entries-found');\n        }\n      }\n    });\n\n    // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized\n    this._viewportRuler\n      .change()\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        if (this.novoSelect.panelOpen) {\n          this.updateInputWidth();\n        }\n      });\n\n    this.initMultipleHandling();\n\n    this.optionsList$.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      // update view when available options change\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  _emitSelectAllBooleanToParent(state: boolean) {\n    this.toggleAll.emit(state);\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  _isToggleAllCheckboxVisible(): boolean {\n    return this.novoSelect.multiple && this.showToggleAllCheckbox;\n  }\n\n  /**\n   * Handles the key down event with NovoSelectElement.\n   * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n   * @param event\n   */\n  _handleKeydown(event: KeyboardEvent) {\n    // Prevent propagation for all alphanumeric characters in order to avoid selection issues\n    if (\n      (event.key && event.key.length === 1) ||\n      isAlphaNumeric(event.key) ||\n      event.key === Key.Space ||\n      (this.preventHomeEndKeyPropagation && (event.key === Key.Home || event.key === Key.End))\n    ) {\n      event.stopPropagation();\n    }\n\n    if (this.novoSelect.multiple && event.key && event.key === Key.Enter) {\n      // Regain focus after multiselect, so we can further type\n      setTimeout(() => this._focus());\n    }\n\n    // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field\n    if (this.enableClearOnEscapePressed === true && event.key === Key.Escape && this.value) {\n      this._reset(true);\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Handles the key up event with NovoSelectElement.\n   * Allows e.g. the announcing of the currently activeDescendant by screen readers.\n   */\n  _handleKeyup(event: KeyboardEvent) {\n    if (event.key === Key.ArrowUp || event.key === Key.ArrowDown) {\n      const ariaActiveDescendantId = this.novoSelect._getAriaActiveDescendant();\n      const index = this._options.toArray().findIndex((item) => item.id === ariaActiveDescendantId);\n      if (index !== -1) {\n        const activeDescendant = this._options.toArray()[index];\n        this.liveAnnouncer.announce(\n          activeDescendant.viewValue + ' ' + this.getAriaIndex(index) + this.indexAndLengthScreenReaderText + this.getAriaLength(),\n        );\n      }\n    }\n  }\n\n  /**\n   * Calculate the index of the current option, taking the offset to length into account.\n   * examples:\n   *    Case 1 [Search, 1, 2, 3] will have offset of 1, due to search and will read index of total.\n   *    Case 2 [1, 2, 3] will have offset of 0 and will read index +1 of total.\n   */\n  getAriaIndex(optionIndex: number): number {\n    if (this.getOptionsLengthOffset() === 0) {\n      return optionIndex + 1;\n    }\n    return optionIndex;\n  }\n\n  /**\n   * Calculate the length of the options, taking the offset to length into account.\n   * examples:\n   *    Case 1 [Search, 1, 2, 3] will have length of options.length -1, due to search.\n   *    Case 2 [1, 2, 3] will have length of options.length.\n   */\n  getAriaLength(): number {\n    return this._options.toArray().length - this.getOptionsLengthOffset();\n  }\n\n  writeValue(value: string) {\n    this._lastExternalInputValue = value;\n    this._formControl.setValue(value);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  onBlur() {\n    this.onTouched();\n  }\n\n  registerOnChange(fn: (value: string) => void) {\n    this._formControl.valueChanges\n      .pipe(\n        filter((value) => value !== this._lastExternalInputValue),\n        tap(() => (this._lastExternalInputValue = undefined)),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(fn);\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Focuses the search input field\n   */\n  public _focus() {\n    if (!this.searchSelectInput || !this.novoSelect.panel) {\n      return;\n    }\n    // save and restore scrollTop of panel, since it will be reset by focus()\n    // note: this is hacky\n    const panel = this.novoSelect.panel.nativeElement;\n    const scrollTop = panel.scrollTop;\n\n    // focus\n    this.searchSelectInput.nativeElement.focus();\n\n    panel.scrollTop = scrollTop;\n  }\n\n  /**\n   * Resets the current search value\n   * @param focus whether to focus after resetting\n   */\n  public _reset(focus?: boolean) {\n    this._formControl.setValue('');\n    if (focus) {\n      this._focus();\n    }\n  }\n\n  /**\n   * Initializes handling <novo-select [multiple]=\"true\">\n   * Note: to improve this code, novo-select should be extended to allow disabling resetting the selection while filtering.\n   */\n  private initMultipleHandling() {\n    if (!this.novoSelect.ngControl) {\n      if (this.novoSelect.multiple) {\n        // note: the access to novoSelect.ngControl (instead of novoSelect.value / novoSelect.valueChanges)\n        // is necessary to properly work in multi-selection mode.\n        console.error('the novo-select containing ngx-novo-select-search must have a ngModel or formControl directive when multiple=true');\n      }\n      return;\n    }\n    // if <novo-select [multiple]=\"true\">\n    // store previously selected values and restore them when they are deselected\n    // because the option is not available while we are currently filtering\n    this.previousSelectedValues = this.novoSelect.ngControl.value;\n\n    this.novoSelect.ngControl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe((values) => {\n      let restoreSelectedValues = false;\n      if (this.novoSelect.multiple) {\n        if (\n          (this.alwaysRestoreSelectedOptionsMulti || (this._formControl.value && this._formControl.value.length)) &&\n          this.previousSelectedValues &&\n          Array.isArray(this.previousSelectedValues)\n        ) {\n          if (!values || !Array.isArray(values)) {\n            values = [];\n          }\n          const optionValues = this.novoSelect.options.map((option) => option.value);\n          this.previousSelectedValues.forEach((previousValue) => {\n            if (\n              !values.some((v) => this.novoSelect.compareWith(v, previousValue)) &&\n              !optionValues.some((v) => this.novoSelect.compareWith(v, previousValue))\n            ) {\n              // if a value that was selected before is deselected and not found in the options, it was deselected\n              // due to the filtering, so we restore it.\n              values.push(previousValue);\n              restoreSelectedValues = true;\n            }\n          });\n        }\n      }\n      this.previousSelectedValues = values;\n\n      if (restoreSelectedValues) {\n        // TODO: Fix this\n        // this.novoSelect._onChange(values);\n      }\n    });\n  }\n\n  /**\n   * Scrolls the currently active option into the view if it is not yet visible.\n   */\n  private adjustScrollTopToFitActiveOptionIntoView(): void {\n    if (this.novoSelect.panel && this.novoSelect.contentOptions.length > 0) {\n      const novoOptionHeight = this.getNovoOptionHeight();\n      const activeOptionIndex = this.novoSelect._keyManager.activeItemIndex || 0;\n      const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.novoSelect.contentOptions, this.novoSelect.optionGroups);\n      // If the component is in a NovoOption, the activeItemIndex will be offset by one.\n      const indexOfOptionToFitIntoView = (this.novoOption ? -1 : 0) + labelCount + activeOptionIndex;\n      const currentScrollTop = this.novoSelect.panel.nativeElement.scrollTop;\n\n      const searchInputHeight = this.innerSelectSearch.nativeElement.offsetHeight;\n      const amountOfVisibleOptions = Math.floor((SELECT_PANEL_MAX_HEIGHT - searchInputHeight) / novoOptionHeight);\n\n      const indexOfFirstVisibleOption = Math.round((currentScrollTop + searchInputHeight) / novoOptionHeight) - 1;\n\n      if (indexOfFirstVisibleOption >= indexOfOptionToFitIntoView) {\n        this.novoSelect.panel.nativeElement.scrollTop = indexOfOptionToFitIntoView * novoOptionHeight;\n      } else if (indexOfFirstVisibleOption + amountOfVisibleOptions <= indexOfOptionToFitIntoView) {\n        this.novoSelect.panel.nativeElement.scrollTop =\n          (indexOfOptionToFitIntoView + 1) * novoOptionHeight - (SELECT_PANEL_MAX_HEIGHT - searchInputHeight);\n      }\n    }\n  }\n\n  /**\n   *  Set the width of the innerSelectSearch to fit even custom scrollbars\n   *  And support all Operation Systems\n   */\n  public updateInputWidth() {\n    if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\n      return;\n    }\n    let element: HTMLElement = this.innerSelectSearch.nativeElement;\n    let panelElement: HTMLElement;\n    while ((element = element.parentElement)) {\n      if (element.classList.contains('novo-select-panel')) {\n        panelElement = element;\n        break;\n      }\n    }\n    if (panelElement) {\n      this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\n    }\n  }\n\n  private getNovoOptionHeight(): number {\n    if (this.novoSelect.contentOptions.length > 0) {\n      return this.novoSelect.contentOptions.first._getHostElement().getBoundingClientRect().height;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Determine the offset to length that can be caused by the optional novoOption used as a search input.\n   */\n  private getOptionsLengthOffset(): number {\n    if (this.novoOption) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NovoButtonModule } from '../button';\nimport { NovoCheckboxModule } from '../checkbox';\nimport { NovoCommonModule } from '../common';\nimport { NovoIconModule } from '../icon';\nimport { NovoLoadingModule } from '../loading';\nimport { NovoTooltipModule } from '../tooltip';\nimport { NovoSelectSearchClearDirective } from './select-search-clear.directive';\nimport { NovoSelectSearchComponent } from './select-search.component';\n\n// export const NovoSelectSearchVersion = '3.3.0';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NovoCheckboxModule,\n    NovoButtonModule,\n    NovoCommonModule,\n    NovoIconModule,\n    NovoLoadingModule,\n    NovoTooltipModule,\n  ],\n  declarations: [NovoSelectSearchComponent, NovoSelectSearchClearDirective],\n  exports: [NovoSelectSearchComponent, NovoSelectSearchClearDirective],\n})\nexport class NovoSelectSearchModule {}\n","export class ActivityTableRenderers {\n  static propertyRenderer<T>(prop: string): Function {\n    const ret = (data: T): string => {\n      // TODO - allow for dots and sub props\n      return data[prop];\n    };\n    return ret;\n  }\n\n  static dateRenderer<T>(prop: string): Function {\n    const ret = (data: T): string => {\n      return data[prop] ? new Date(data[prop]).toLocaleDateString() : '';\n    };\n    return ret;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { NovoSimpleTableChange } from './interfaces';\n\n@Injectable()\nexport class NovoActivityTableState {\n  id: number = Math.random();\n  sort: { id: string; value: string } = undefined;\n  filter: { id: string; value: string } = undefined;\n  page: number = 0;\n  pageSize: number = undefined;\n  globalSearch: string = undefined;\n  selectedRows: Map<string, object> = new Map<string, object>();\n  outsideFilter: any;\n\n  updates: EventEmitter<NovoSimpleTableChange> = new EventEmitter<NovoSimpleTableChange>();\n  onReset: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  get userFiltered(): boolean {\n    return !!(this.filter || this.sort || this.globalSearch || this.outsideFilter);\n  }\n\n  public reset(fireUpdate: boolean = true, persistUserFilters?: boolean): void {\n    if (!persistUserFilters) {\n      this.sort = undefined;\n      this.globalSearch = undefined;\n      this.filter = undefined;\n    }\n    this.page = 0;\n    this.selectedRows.clear();\n    this.onReset.emit(true);\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n}\n","import { Directive, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoActivityTableState } from './state';\n\n@Directive({\n  selector: '[novoSortFilter]',\n})\nexport class NovoSortFilter {\n  constructor(private state: NovoActivityTableState) {}\n\n  public filter(id: string, value: any, transform: Function): void {\n    let filter;\n    if (!Helpers.isBlank(value)) {\n      filter = { id, value, transform };\n    } else {\n      filter = undefined;\n    }\n    this.state.filter = filter;\n    this.state.reset(false, true);\n    this.state.updates.next({ filter, sort: this.state.sort });\n  }\n\n  public sort(id: string, value: string, transform: Function): void {\n    const sort = { id, value, transform };\n    this.state.sort = sort;\n    this.state.reset(false, true);\n    this.state.updates.next({ sort, filter: this.state.filter });\n  }\n}\n\n@Directive({\n  selector: '[novoSelection]',\n})\nexport class NovoSelection implements OnDestroy {\n  @Output()\n  public novoSelectAllToggle = new EventEmitter<boolean>();\n\n  public allRows = new Map<string, object>();\n  private throttleTimeout: any;\n\n  constructor(public state: NovoActivityTableState) {}\n\n  public register(id, row): void {\n    this.allRows.set(id, row);\n  }\n\n  public deregister(id): void {\n    this.allRows.delete(id);\n    this.state.selectedRows.delete(id);\n    clearTimeout(this.throttleTimeout);\n    this.throttleTimeout = setTimeout(() => {\n      if (this.state.selectedRows.size === 0) {\n        this.novoSelectAllToggle.emit(false);\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.allRows.clear();\n    this.state.selectedRows.clear();\n  }\n\n  public toggle(id: string, selected: boolean, row: any): void {\n    if (selected) {\n      this.state.selectedRows.set(id, row);\n    } else {\n      this.state.selectedRows.delete(id);\n    }\n  }\n\n  public selectAll(value: boolean): void {\n    if (value) {\n      this.state.selectedRows = new Map<string, object>(this.allRows);\n    } else {\n      this.state.selectedRows.clear();\n    }\n    this.novoSelectAllToggle.emit(value);\n  }\n}\n","import { CdkCell, CdkCellDef, CdkColumnDef, CdkHeaderCell, CdkHeaderCellDef } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { SimpleTableActionColumn, SimpleTableActionColumnOption, SimpleTableColumn } from './interfaces';\nimport { NovoSelection } from './sort';\n\n/** Workaround for https://github.com/angular/angular/issues/17849 */\nexport const _NovoCellDef = CdkCellDef;\nexport const _NovoHeaderCellDef = CdkHeaderCellDef;\nexport const _NovoColumnDef = CdkColumnDef;\nexport const _NovoHeaderCell = CdkHeaderCell;\nexport const _NovoCell = CdkCell;\n\n@Directive({\n  selector: '[novoSimpleCellDef]',\n  providers: [{ provide: CdkCellDef, useExisting: NovoSimpleCellDef }],\n})\nexport class NovoSimpleCellDef extends _NovoCellDef {\n  // TODO: add explicit constructor\n}\n\n@Directive({\n  selector: '[novoSimpleHeaderCellDef]',\n  providers: [{ provide: CdkHeaderCellDef, useExisting: NovoSimpleHeaderCellDef }],\n})\nexport class NovoSimpleHeaderCellDef extends _NovoHeaderCellDef {\n  // TODO: add explicit constructor\n}\n\n@Directive({\n  selector: '[novoSimpleColumnDef]',\n  providers: [{ provide: CdkColumnDef, useExisting: NovoSimpleColumnDef }],\n})\nexport class NovoSimpleColumnDef extends _NovoColumnDef {\n  @Input('novoSimpleColumnDef')\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._setNameInput(name);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  protected _setNameInput(value: string) {\n    // If the directive is set without a name (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (value) {\n      this._name = value;\n      this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n      this._updateColumnCssClassName();\n    }\n  }\n}\n\n@Directive({\n  selector: 'novo-simple-header-cell',\n})\nexport class NovoSimpleHeaderCell<T> extends _NovoHeaderCell implements OnInit {\n  @HostBinding('attr.role')\n  public role = 'columnheader';\n\n  @Input()\n  public column: SimpleTableColumn<T>;\n\n  constructor(columnDef: CdkColumnDef, private elementRef: ElementRef, private renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-header-cell');\n  }\n\n  public ngOnInit(): void {\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n    }\n  }\n}\n\n@Directive({\n  selector: 'novo-simple-empty-header-cell',\n})\nexport class NovoSimpleEmptyHeaderCell extends _NovoHeaderCell {\n  @HostBinding('attr.role')\n  public role = 'columnheader';\n\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-empty-header-cell');\n  }\n}\n\n@Component({\n  selector: 'novo-simple-checkbox-header-cell',\n  template: `<novo-checkbox [(ngModel)]=\"selectAll\" (ngModelChange)=\"toggle($event)\"></novo-checkbox>`,\n})\nexport class NovoSimpleCheckboxHeaderCell extends _NovoHeaderCell implements OnDestroy {\n  @HostBinding('attr.role')\n  public role = 'columnheader';\n\n  public selectAll: boolean = false;\n  private selectAllSubscription: Subscription;\n\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    ref: ChangeDetectorRef,\n    @Optional() private _selection: NovoSelection,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-checkbox-header-cell');\n\n    this.selectAllSubscription = _selection.novoSelectAllToggle.subscribe((value: boolean) => {\n      this.selectAll = value;\n      ref.markForCheck();\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.selectAllSubscription.unsubscribe();\n  }\n\n  public toggle(value: boolean): void {\n    this._selection.selectAll(value);\n  }\n}\n\n@Component({\n  selector: 'novo-simple-cell',\n  template: ` <span [class.clickable]=\"!!column.onClick\" (click)=\"onClick($event)\" #span>{{ column.renderer(row) }}</span> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSimpleCell<T> extends _NovoCell implements OnInit {\n  @HostBinding('attr.role')\n  public role = 'gridcell';\n\n  @Input()\n  public row: any;\n  @Input()\n  public column: SimpleTableColumn<T>;\n\n  constructor(columnDef: CdkColumnDef, private elementRef: ElementRef, private renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-cell');\n  }\n\n  public ngOnInit(): void {\n    if (this.column.customClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.column.customClass(this.row));\n    }\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n      // TODO - this inhibits resizing the page after the initial load -- but do we care?!?!\n      // this.renderer.setStyle(this.spanElement.nativeElement, 'min-width', `${this.column.width - 20}px`);\n      // this.renderer.setStyle(this.spanElement.nativeElement, 'max-width', `${this.column.width - 20}px`);\n      // this.renderer.setStyle(this.spanElement.nativeElement, 'width', `${this.column.width - 20}px`);\n    }\n    // else {\n    //     // TODO - this inhibits resizing the page after the initial load -- but do we care?!?!\n    //     this.renderer.setStyle(this.spanElement.nativeElement, 'min-width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n    //     this.renderer.setStyle(this.spanElement.nativeElement, 'max-width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n    //     this.renderer.setStyle(this.spanElement.nativeElement, 'width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n    // }\n  }\n\n  public onClick(event: MouseEvent): void {\n    Helpers.swallowEvent(event);\n    if (this.column.onClick) {\n      this.column.onClick(this.row);\n    }\n    return;\n  }\n}\n\n@Component({\n  selector: 'novo-simple-checkbox-cell',\n  template: ` <novo-checkbox [ngModel]=\"selected\" (ngModelChange)=\"toggle($event)\"></novo-checkbox> `,\n})\nexport class NovoSimpleCheckboxCell extends _NovoCell implements OnDestroy, OnInit {\n  @HostBinding('attr.role')\n  public role = 'gridcell';\n\n  @Input()\n  public row: any;\n  @Input()\n  public index: any;\n\n  public selected: boolean = false;\n  private selectAllSubscription: Subscription;\n\n  constructor(public columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2, @Optional() public _selection: NovoSelection) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-checkbox-cell');\n\n    this.selectAllSubscription = _selection.novoSelectAllToggle.subscribe((value: boolean) => {\n      this.selected = value;\n    });\n  }\n\n  public ngOnInit(): void {\n    this._selection.register(this.row.id || this.index, this.row);\n    this.selected = this._selection.state.selectedRows.has(this.row.id || this.index);\n  }\n\n  public ngOnDestroy(): void {\n    this._selection.deregister(this.row.id || this.index);\n    this.selectAllSubscription.unsubscribe();\n  }\n\n  public toggle(value: boolean): void {\n    this._selection.toggle(this.row.id || this.index, value, this.row);\n  }\n}\n\n@Component({\n  selector: 'novo-simple-action-cell',\n  template: `\n    <ng-container *ngIf=\"!column.options\">\n      <novo-button theme=\"icon\" [icon]=\"column.icon\" (click)=\"column.onClick(row)\" [disabled]=\"isDisabled(column, row)\"></novo-button>\n    </ng-container>\n    <ng-container *ngIf=\"column.options\">\n      <novo-dropdown parentScrollSelector=\".novo-simple-table\" containerClass=\"novo-table-dropdown-cell\">\n        <novo-button type=\"button\" theme=\"dialogue\" icon=\"collapse\" inverse>{{ column.label || labels.actions }}</novo-button>\n        <list>\n          <item *ngFor=\"let option of column.options\" (action)=\"option.onClick(row)\" [disabled]=\"isDisabled(option, row)\">\n            <span [attr.data-automation-id]=\"option.label\">{{ option.label }}</span>\n          </item>\n        </list>\n      </novo-dropdown>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSimpleActionCell<T> extends _NovoCell implements OnInit {\n  @HostBinding('attr.role')\n  public role = 'gridcell';\n\n  @Input()\n  public row: T;\n  @Input()\n  public column: SimpleTableActionColumn<T>;\n\n  constructor(columnDef: CdkColumnDef, private elementRef: ElementRef, private renderer: Renderer2, public labels: NovoLabelService) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-action-column-${columnDef.cssClassFriendlyName}`);\n  }\n\n  public ngOnInit(): void {\n    if (this.column.options) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'novo-simple-dropdown-cell');\n    } else {\n      this.renderer.addClass(this.elementRef.nativeElement, 'novo-simple-button-cell');\n    }\n  }\n\n  public isDisabled(check: SimpleTableActionColumn<T> | SimpleTableActionColumnOption<T>, row: T): boolean {\n    if (check.disabled === true) {\n      return true;\n    }\n    if (check.disabledCheck) {\n      return check.disabledCheck(row);\n    }\n    return false;\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport * as dateFns from 'date-fns';\nimport { Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoDropdownElement } from '../dropdown/Dropdown';\nimport { NovoSimpleSortFilter, NovoSimpleTableChange, SimpleTableColumnFilterConfig, SimpleTableColumnFilterOption } from './interfaces';\nimport { NovoSortFilter } from './sort';\nimport { NovoActivityTableState } from './state';\n\n@Directive({\n  selector: '[novoSimpleFilterFocus]',\n})\nexport class NovoSimpleFilterFocus implements AfterViewInit {\n  constructor(private element: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.element.nativeElement.focus();\n  }\n}\n\n@Component({\n  selector: '[novo-simple-cell-config]',\n  template: `\n    <label (click)=\"sort()\" data-automation-id=\"novo-activity-table-label\" [class.sort-disabled]=\"!config.sortable\">\n      <ng-content></ng-content>\n    </label>\n    <div>\n      <novo-button\n        *ngIf=\"config.sortable\"\n        theme=\"icon\"\n        [icon]=\"icon\"\n        (click)=\"sort()\"\n        [class.active]=\"sortActive\"\n        data-automation-id=\"novo-activity-table-sort\"\n      ></novo-button>\n      <novo-dropdown\n        *ngIf=\"config.filterable\"\n        side=\"right\"\n        parentScrollSelector=\".novo-simple-table\"\n        containerClass=\"simple-table-dropdown\"\n        data-automation-id=\"novo-activity-table-filter\"\n      >\n        <novo-button type=\"button\" theme=\"icon\" icon=\"filter\" [class.active]=\"filterActive\"></novo-button>\n        <div class=\"header\">\n          <span>{{ labels.filters }}</span>\n          <novo-button\n            theme=\"dialogue\"\n            color=\"negative\"\n            icon=\"times\"\n            (click)=\"clearFilter()\"\n            *ngIf=\"filter\"\n            data-automation-id=\"novo-activity-table-filter-clear\"\n          >\n            {{ labels.clear }}\n          </novo-button>\n        </div>\n        <ng-container [ngSwitch]=\"config.filterConfig.type\">\n          <novo-optgroup *ngSwitchCase=\"'date'\">\n            <ng-container *ngIf=\"!showCustomRange\">\n              <novo-option\n                [class.active]=\"activeDateFilter === option.label\"\n                *ngFor=\"let option of config.filterConfig.options\"\n                (click)=\"filterData(option)\"\n                [attr.data-automation-id]=\"'novo-activity-table-filter-' + option.label\"\n              >\n                {{ option.label }} <i class=\"bhi-check\" *ngIf=\"activeDateFilter === option.label\"></i>\n              </novo-option>\n            </ng-container>\n            <novo-option\n              [class.active]=\"labels.customDateRange === activeDateFilter\"\n              (click)=\"toggleCustomRange($event, true)\"\n              *ngIf=\"config.filterConfig.allowCustomRange && !showCustomRange\"\n              [keepOpen]=\"true\"\n            >\n              {{ labels.customDateRange }} <i class=\"bhi-check\" *ngIf=\"labels.customDateRange === activeDateFilter\"></i>\n            </novo-option>\n            <div class=\"calendar-container\" *ngIf=\"showCustomRange\">\n              <div (click)=\"toggleCustomRange($event, false)\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n              <novo-date-picker (onSelect)=\"filterData($event)\" [(ngModel)]=\"filter\" range=\"true\"></novo-date-picker>\n            </div>\n          </novo-optgroup>\n          <novo-optgroup *ngSwitchCase=\"'select'\">\n            <novo-option\n              [class.active]=\"filter === option\"\n              *ngFor=\"let option of config.filterConfig.options\"\n              (click)=\"filterData(option)\"\n              [attr.data-automation-id]=\"'novo-activity-table-filter-' + (option?.label || option)\"\n            >\n              <span>{{ option?.label || option }}</span>\n              <i class=\"bhi-check\" *ngIf=\"option.hasOwnProperty('value') ? filter === option.value : filter === option\"></i>\n            </novo-option>\n          </novo-optgroup>\n          <novo-optgroup *ngSwitchDefault>\n            <novo-option class=\"filter-search\" keepOpen>\n              <input\n                type=\"text\"\n                [(ngModel)]=\"filter\"\n                (ngModelChange)=\"filterData($event)\"\n                novoSimpleFilterFocus\n                data-automation-id=\"novo-activity-table-filter-input\"\n              />\n            </novo-option>\n          </novo-optgroup>\n        </ng-container>\n      </novo-dropdown>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSimpleCellHeader implements NovoSimpleSortFilter, OnInit, OnDestroy {\n  @ViewChild(NovoDropdownElement)\n  dropdown: NovoDropdownElement;\n\n  @Input()\n  defaultSort: { id: string; value: string };\n\n  @Input('novo-simple-cell-config')\n  get config() {\n    return this._config;\n  }\n\n  set config(v) {\n    if (!v) {\n      this._config = {\n        sortable: false,\n        filterable: false,\n        filterConfig: {\n          type: 'text',\n        },\n      };\n    } else {\n      this._config = {\n        sortable: coerceBooleanProperty(v.sortable),\n        filterable: coerceBooleanProperty(v.filterable),\n        transforms: v.transforms || {},\n        filterConfig: v.filterConfig || {\n          type: 'text',\n        },\n      };\n\n      if (this._config.filterConfig.type === 'date' && !this._config.filterConfig.options) {\n        this._config.filterConfig.options = this.getDefaultDateFilterOptions();\n      }\n    }\n  }\n\n  private _config: {\n    sortable: boolean;\n    filterable: boolean;\n    transforms?: { filter?: Function; sort?: Function };\n    filterConfig: SimpleTableColumnFilterConfig;\n  };\n\n  private _rerenderSubscription: Subscription;\n  private changeTimeout: any;\n\n  public icon: string = 'sortable';\n  public id: string;\n  public filter: string | boolean;\n  public direction: string;\n  public filterActive: boolean = false;\n  public sortActive: boolean = false;\n  public showCustomRange: boolean = false;\n  public activeDateFilter: string;\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public labels: NovoLabelService,\n    private state: NovoActivityTableState,\n    @Optional() public _sort: NovoSortFilter,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    this._rerenderSubscription = state.updates.subscribe((change: NovoSimpleTableChange) => {\n      if (change.sort && change.sort.id === this.id) {\n        this.icon = `sort-${change.sort.value}`;\n        this.sortActive = true;\n      } else {\n        this.icon = 'sortable';\n        this.sortActive = false;\n      }\n      if (change.filter && change.filter.id === this.id) {\n        this.filterActive = true;\n        this.filter = change.filter.value;\n      } else {\n        this.filterActive = false;\n        this.filter = undefined;\n      }\n      changeDetectorRef.markForCheck();\n    });\n  }\n\n  public ngOnInit(): void {\n    if (this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n    if (this.defaultSort && this.id === this.defaultSort.id) {\n      this.icon = `sort-${this.defaultSort.value}`;\n      this.sortActive = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  public sort(): void {\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n    this.changeTimeout = setTimeout(() => {\n      this.direction = this.getNextSortDirection(this.direction);\n      this._sort.sort(this.id, this.direction, this._config.transforms.sort);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n\n  public toggleCustomRange(event: Event, value: boolean): void {\n    Helpers.swallowEvent(event);\n    this.showCustomRange = value;\n    this.changeDetectorRef.markForCheck();\n    this.dropdown.openPanel(); // Ensures that the panel correctly updates to the dynamic size of the dropdown\n  }\n\n  public filterData(filter?: any): void {\n    let actualFilter = filter;\n    if (this.config.filterConfig.type === 'date' && filter) {\n      this.activeDateFilter = filter.label || this.labels.customDateRange;\n      if (filter.startDate && filter.endDate) {\n        actualFilter = {\n          min: dateFns.startOfDay(filter.startDate.date),\n          max: dateFns.startOfDay(dateFns.addDays(dateFns.startOfDay(filter.endDate.date), 1)),\n        };\n      } else {\n        actualFilter = {\n          min: filter.min ? dateFns.addDays(dateFns.startOfToday(), filter.min) : dateFns.startOfToday(),\n          max: filter.max ? dateFns.addDays(dateFns.startOfTomorrow(), filter.max) : dateFns.startOfTomorrow(),\n        };\n      }\n    }\n\n    if (actualFilter && actualFilter.hasOwnProperty('value')) {\n      actualFilter = filter.value;\n    }\n\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n\n    this.changeTimeout = setTimeout(() => {\n      if (actualFilter === '') {\n        actualFilter = undefined;\n      }\n      this._sort.filter(this.id, actualFilter, this.config.transforms.filter);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n\n  public clearFilter(): void {\n    this.filter = undefined;\n    this.activeDateFilter = undefined;\n    this.filterData();\n  }\n\n  private getNextSortDirection(direction: string): string {\n    if (!direction) {\n      return 'asc';\n    }\n    if (direction === 'asc') {\n      return 'desc';\n    }\n    return 'asc';\n  }\n\n  private getDefaultDateFilterOptions(): SimpleTableColumnFilterOption[] {\n    const opts: SimpleTableColumnFilterOption[] = [\n      { label: this.labels.past1Day, min: -1, max: 0 },\n      { label: this.labels.past7Days, min: -7, max: 0 },\n      { label: this.labels.past30Days, min: -30, max: 0 },\n      { label: this.labels.past90Days, min: -90, max: 0 },\n      { label: this.labels.past1Year, min: -366, max: 0 },\n      { label: this.labels.next1Day, min: 0, max: 1 },\n      { label: this.labels.next7Days, min: 0, max: 7 },\n      { label: this.labels.next30Days, min: 0, max: 30 },\n      { label: this.labels.next90Days, min: 0, max: 90 },\n      { label: this.labels.next1Year, min: 0, max: 366 },\n    ];\n    return opts;\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoSimplePaginationEvent } from './interfaces';\nimport { NovoActivityTableState } from './state';\n\nconst DEFAULT_PAGE_SIZE = 50;\n\n@Component({\n  selector: 'novo-simple-table-pagination',\n  template: `\n    <div class=\"novo-simple-table-pagination-size\">\n      <novo-tiles\n        *ngIf=\"displayedPageSizeOptions.length > 1\"\n        [(ngModel)]=\"pageSize\"\n        [options]=\"displayedPageSizeOptions\"\n        (onChange)=\"changePageSize($event)\"\n        data-automation-id=\"novo-simple-table-pagination-tiles\"\n      >\n      </novo-tiles>\n      <div *ngIf=\"displayedPageSizeOptions.length <= 1\">{{ pageSize }}</div>\n    </div>\n\n    <div class=\"novo-simple-table-range-label-long\" data-automation-id=\"novo-simple-table-pagination-range-label-long\">\n      {{ longRangeLabel }}\n    </div>\n    <div class=\"novo-simple-table-range-label-short\" data-automation-id=\"novo-simple-table-pagination-range-label-short\">\n      {{ shortRangeLabel }}\n    </div>\n\n    <novo-button\n      theme=\"dialogue\"\n      type=\"button\"\n      class=\"novo-simple-table-pagination-navigation-previous\"\n      (click)=\"previousPage()\"\n      icon=\"previous\"\n      side=\"left\"\n      [disabled]=\"!hasPreviousPage()\"\n      data-automation-id=\"novo-simple-table-pagination-previous\"\n    >\n      <span>{{ labels.previous }}</span>\n    </novo-button>\n    <novo-button\n      theme=\"dialogue\"\n      type=\"button\"\n      class=\"novo-simple-table-pagination-navigation-next\"\n      (click)=\"nextPage()\"\n      icon=\"next\"\n      side=\"right\"\n      [disabled]=\"!hasNextPage()\"\n      data-automation-id=\"novo-simple-table-pagination-next\"\n    >\n      <span>{{ labels.next }}</span>\n    </novo-button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSimpleTablePagination implements OnInit, OnDestroy {\n  private _initialized: boolean;\n\n  @Input()\n  get page(): number {\n    return this._page;\n  }\n  set page(page: number) {\n    this._page = page;\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.state.page = this._page;\n  }\n  _page: number = 0;\n\n  @Input()\n  get length(): number {\n    return this._length;\n  }\n  set length(length: number) {\n    this._length = length;\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n  }\n  _length: number = 0;\n\n  @Input()\n  get pageSize(): number {\n    return this._pageSize;\n  }\n  set pageSize(pageSize: number) {\n    this._pageSize = pageSize;\n    this.updateDisplayedPageSizeOptions();\n    this.state.pageSize = this._pageSize;\n  }\n  private _pageSize: number;\n\n  @Input()\n  get pageSizeOptions(): number[] {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(pageSizeOptions: number[]) {\n    this._pageSizeOptions = pageSizeOptions;\n    this.updateDisplayedPageSizeOptions();\n  }\n  private _pageSizeOptions: number[] = [];\n\n  @Output()\n  pageChange = new EventEmitter<NovoSimplePaginationEvent>();\n\n  public displayedPageSizeOptions: number[];\n  public longRangeLabel: string;\n  public shortRangeLabel: string;\n\n  private resetSubscription: Subscription;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, public labels: NovoLabelService, private state: NovoActivityTableState) {\n    if (state && state.onReset) {\n      this.resetSubscription = this.state.onReset.subscribe((clear: boolean) => {\n        if (clear) {\n          this.page = 0;\n          this.changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  public ngOnInit(): void {\n    this._initialized = true;\n    this.updateDisplayedPageSizeOptions();\n  }\n\n  public ngOnDestroy(): void {\n    this.resetSubscription.unsubscribe();\n  }\n\n  public nextPage(): void {\n    if (!this.hasNextPage()) {\n      return;\n    }\n    this.page++;\n    this.emitPageEvent();\n  }\n\n  public previousPage(): void {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    this.page--;\n    this.emitPageEvent();\n  }\n\n  public hasPreviousPage(): boolean {\n    return this.page >= 1 && this.pageSize !== 0;\n  }\n\n  public hasNextPage(): boolean {\n    const numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n    return this.page < numberOfPages && this.pageSize !== 0;\n  }\n\n  public changePageSize(pageSize: number): void {\n    this.page = 0;\n    this.pageSize = pageSize;\n    this.emitPageEvent();\n  }\n\n  private updateDisplayedPageSizeOptions(): void {\n    if (!this._initialized) {\n      return;\n    }\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length !== 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n    this.displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this.displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this.displayedPageSizeOptions.push(this.pageSize);\n    }\n    this.displayedPageSizeOptions.sort((a, b) => a - b);\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n  }\n\n  private emitPageEvent(): void {\n    const event = {\n      page: this.page,\n      pageSize: this.pageSize,\n      length: this.length,\n    };\n    this.pageChange.next(event);\n    this.state.page = this.page;\n    this.state.pageSize = this.pageSize;\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.state.updates.next(event);\n  }\n}\n","import { CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CDK_ROW_TEMPLATE } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, Directive, HostBinding, Input } from '@angular/core';\n\n/** Workaround for https://github.com/angular/angular/issues/17849 */\nexport const _NovoHeaderRowDef = CdkHeaderRowDef;\nexport const _NovoCdkRowDef = CdkRowDef;\nexport const _NovoHeaderRow = CdkHeaderRow;\nexport const _NovoRow = CdkRow;\n\n@Directive({\n  selector: '[novoSimpleHeaderRowDef]',\n  providers: [{ provide: CdkHeaderRowDef, useExisting: NovoSimpleHeaderRowDef }],\n})\nexport class NovoSimpleHeaderRowDef extends _NovoHeaderRowDef {\n  // TODO: add explicit constructor\n\n  @Input('novoSimpleHeaderRowDef')\n  columns;\n}\n\n@Directive({\n  selector: '[novoSimpleRowDef]',\n  providers: [{ provide: CdkRowDef, useExisting: NovoSimpleRowDef }],\n})\nexport class NovoSimpleRowDef<T> extends _NovoCdkRowDef<T> {\n  // TODO: add explicit constructor\n\n  @Input('novoSimpleRowDefColumns')\n  columns;\n}\n\n@Component({\n  selector: 'novo-simple-header-row',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSimpleHeaderRow extends _NovoHeaderRow {\n  @HostBinding('class')\n  public rowClass = 'novo-simple-header-row';\n  @HostBinding('attr.role')\n  public role = 'row';\n}\n\n@Component({\n  selector: 'novo-simple-row',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoSimpleRow extends _NovoRow {\n  @HostBinding('class')\n  public rowClass = 'novo-simple-row';\n  @HostBinding('attr.role')\n  public role = 'row';\n}\n","import { DataSource } from '@angular/cdk/table';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { merge, Observable, of } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoActivityTableState } from './state';\n\nexport interface ActivityTableService<T> {\n  getTableResults(\n    sort: { id: string; value: string; transform?: Function },\n    filter: { id: string; value: string; transform?: Function },\n    page: number,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,\n  ): Observable<{ results: T[]; total: number }>;\n}\n\nexport abstract class RemoteActivityTableService<T> implements ActivityTableService<T> {\n  abstract getTableResults(\n    sort: { id: string; value: string; transform?: Function },\n    filter: { id: string; value: string; transform?: Function },\n    page: number,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,\n  ): Observable<{ results: T[]; total: number }>;\n}\n\nexport class StaticActivityTableService<T> implements ActivityTableService<T> {\n  constructor(private data: T[] = []) {}\n\n  public getTableResults(\n    sort: { id: string; value: string; transform?: Function },\n    filter: { id: string; value: string; transform?: Function },\n    page: number = 0,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,\n  ): Observable<{ results: T[]; total: number }> {\n    let ret: T[] = Helpers.deepClone(this.data);\n    if (ret.length !== 0) {\n      if (globalSearch) {\n        ret = ret.filter((item) => Object.keys(item).some((key) => `${item[key]}`.toLowerCase().includes(globalSearch.toLowerCase())));\n      }\n      if (filter) {\n        const value = Helpers.isString(filter.value) ? filter.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : filter.value;\n        ret = ret.filter(Helpers.filterByField(filter.id, value));\n      }\n      if (sort) {\n        ret = ret.sort(Helpers.sortByField(sort.id, sort.value === 'desc'));\n      }\n      if (!Helpers.isBlank(page) && !Helpers.isBlank(pageSize)) {\n        ret = ret.slice(page * pageSize, (page + 1) * pageSize);\n      }\n    }\n    return of({ results: ret, total: this.data.length });\n  }\n}\n\nexport class ActivityTableDataSource<T> extends DataSource<T> {\n  public total = 0;\n  public current = 0;\n  public loading = false;\n  public pristine = true;\n\n  get totallyEmpty(): boolean {\n    return this.total === 0;\n  }\n\n  get currentlyEmpty(): boolean {\n    return this.current === 0;\n  }\n\n  constructor(private tableService: ActivityTableService<T>, private state: NovoActivityTableState, private ref: ChangeDetectorRef) {\n    super();\n  }\n\n  public connect(): Observable<any[]> {\n    const displayDataChanges: any = [this.state.updates];\n    return merge(...displayDataChanges).pipe(\n      startWith(null),\n      switchMap(() => {\n        this.pristine = false;\n        this.loading = true;\n        return this.tableService.getTableResults(\n          this.state.sort,\n          this.state.filter,\n          this.state.page,\n          this.state.pageSize,\n          this.state.globalSearch,\n          this.state.outsideFilter,\n        );\n      }),\n      map((data: { results: T[]; total: number }) => {\n        this.loading = false;\n        this.total = data.total;\n        this.current = data.results.length;\n        setTimeout(() => {\n          this.ref.markForCheck();\n        });\n        return data.results;\n      }),\n      catchError((error) => {\n        console.error(error); // tslint: disable-line\n        this.loading = false;\n        return of(null);\n      }),\n    );\n  }\n\n  public disconnect(): void {}\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkTable, CDK_TABLE_TEMPLATE } from '@angular/cdk/table';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { SimpleTableActionColumn, SimpleTableColumn, SimpleTablePaginationOptions, SimpleTableSearchOptions } from './interfaces';\nimport { NovoActivityTableState } from './state';\nimport { ActivityTableDataSource, ActivityTableService } from './table-source';\n\n/** Workaround for https://github.com/angular/angular/issues/17849 */\nexport const _NovoTable = CdkTable;\n\n@Component({\n  selector: 'novo-simple-table',\n  template: CDK_TABLE_TEMPLATE,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoTable<T> extends _NovoTable<T> {\n  // TODO: add explicit constructor\n}\n\n@Directive({\n  selector: 'novo-activity-table-actions',\n})\nexport class NovoActivityTableActions {}\n\n@Directive({\n  selector: 'novo-activity-table-custom-header',\n})\nexport class NovoActivityTableCustomHeader {}\n\n@Directive({\n  selector: 'novo-activity-table-custom-filter',\n})\nexport class NovoActivityTableCustomFilter {}\n\n@Directive({\n  selector: 'novo-activity-table-empty-message',\n})\nexport class NovoActivityTableEmptyMessage {}\n\n@Directive({\n  selector: 'novo-activity-table-no-results-message',\n})\nexport class NovoActivityTableNoResultsMessage {}\n\n@Component({\n  selector: 'novo-activity-table',\n  template: `\n    <div *ngIf=\"debug\">\n      <p>Total: {{ dataSource?.total }}</p>\n      <p>Current: {{ dataSource?.current }}</p>\n      <p>Totally Empty: {{ dataSource?.totallyEmpty }}</p>\n      <p>Currently Empty: {{ dataSource?.currentlyEmpty }}</p>\n      <p>Loading (DataSource): {{ dataSource?.loading }}</p>\n      <p>User Filtered: {{ state.userFiltered }}</p>\n      <p>Loading (Table): {{ loading }}</p>\n    </div>\n    <header *ngIf=\"(!(dataSource?.totallyEmpty && !state.userFiltered) && !loading) || forceShowHeader\">\n      <ng-content select=\"[novo-activity-table-custom-header]\"></ng-content>\n      <novo-search\n        alwaysOpen=\"true\"\n        (searchChanged)=\"onSearchChange($event)\"\n        [(ngModel)]=\"state.globalSearch\"\n        *ngIf=\"!hideGlobalSearch\"\n        [placeholder]=\"searchOptions?.placeholder\"\n        [hint]=\"searchOptions?.tooltip\"\n      >\n      </novo-search>\n      <novo-simple-table-pagination\n        *ngIf=\"paginationOptions\"\n        [length]=\"dataSource?.total\"\n        [page]=\"paginationOptions.page\"\n        [pageSize]=\"paginationOptions.pageSize\"\n        [pageSizeOptions]=\"paginationOptions.pageSizeOptions\"\n      >\n      </novo-simple-table-pagination>\n      <div class=\"novo-activity-table-actions\">\n        <ng-content select=\"[novo-activity-table-actions]\"></ng-content>\n      </div>\n    </header>\n    <div class=\"novo-activity-table-loading-mask\" *ngIf=\"dataSource?.loading || loading\" data-automation-id=\"novo-activity-table-loading\">\n      <novo-loading></novo-loading>\n    </div>\n    <div class=\"novo-activity-table-filter-container\">\n      <div class=\"novo-activity-table-custom-filter\" *ngIf=\"customFilter\">\n        <ng-content select=\"[novo-activity-table-custom-filter]\"></ng-content>\n      </div>\n      <div class=\"novo-activity-table-container\">\n        <novo-simple-table\n          *ngIf=\"columns?.length > 0\"\n          [dataSource]=\"dataSource\"\n          novoSortFilter\n          novoSelection\n          [class.empty]=\"dataSource?.currentlyEmpty && state.userFiltered\"\n          [hidden]=\"dataSource?.totallyEmpty && !state.userFiltered\"\n        >\n          <ng-content></ng-content>\n          <ng-container novoSimpleColumnDef=\"selection\">\n            <novo-simple-checkbox-header-cell *novoSimpleHeaderCellDef></novo-simple-checkbox-header-cell>\n            <novo-simple-checkbox-cell *novoSimpleCellDef=\"let row; let i = index\" [row]=\"row\" [index]=\"i\"></novo-simple-checkbox-cell>\n          </ng-container>\n          <ng-container *ngFor=\"let column of actionColumns\" [novoSimpleColumnDef]=\"column.id\">\n            <novo-simple-empty-header-cell\n              [class.button-header-cell]=\"!column.options\"\n              [class.dropdown-header-cell]=\"column.options\"\n              *novoSimpleHeaderCellDef\n            ></novo-simple-empty-header-cell>\n            <novo-simple-action-cell *novoSimpleCellDef=\"let row; let i = index\" [row]=\"row\" [column]=\"column\"></novo-simple-action-cell>\n          </ng-container>\n          <ng-container *ngFor=\"let column of columns\" [novoSimpleColumnDef]=\"column.id\">\n            <novo-simple-header-cell\n              *novoSimpleHeaderCellDef\n              [column]=\"column\"\n              [novo-simple-cell-config]=\"column.config\"\n              [defaultSort]=\"defaultSort\"\n              >{{ column.label }}</novo-simple-header-cell\n            >\n            <novo-simple-cell *novoSimpleCellDef=\"let row\" [column]=\"column\" [row]=\"row\"></novo-simple-cell>\n          </ng-container>\n          <novo-simple-header-row *novoSimpleHeaderRowDef=\"displayedColumns\"></novo-simple-header-row>\n          <novo-simple-row *novoSimpleRowDef=\"let row; columns: displayedColumns\"></novo-simple-row>\n        </novo-simple-table>\n        <div\n          class=\"novo-activity-table-no-results-container\"\n          *ngIf=\"dataSource?.currentlyEmpty && state.userFiltered && !dataSource?.loading && !loading && !dataSource.pristine\"\n        >\n          <div #filtered><ng-content select=\"[novo-activity-table-no-results-message]\"></ng-content></div>\n          <div class=\"novo-activity-table-empty-message\" *ngIf=\"filtered.childNodes.length == 0\">\n            <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n          </div>\n        </div>\n        <div\n          class=\"novo-activity-table-empty-container\"\n          *ngIf=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\"\n        >\n          <div #empty><ng-content select=\"[novo-activity-table-empty-message]\"></ng-content></div>\n          <div class=\"novo-activity-table-empty-message\" *ngIf=\"empty.childNodes.length == 0\">\n            <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NovoActivityTableState],\n})\nexport class NovoActivityTable<T> implements AfterContentInit, OnChanges, OnDestroy {\n  @HostBinding('class.global-search-hidden')\n  globalSearchHiddenClassToggle: boolean = false;\n\n  @Input()\n  activityService: ActivityTableService<T>;\n  @Input()\n  columns: SimpleTableColumn<T>[];\n  @Input()\n  displayedColumns: string[];\n  @Input()\n  actionColumns: SimpleTableActionColumn<T>[];\n  @Input()\n  paginationOptions: SimpleTablePaginationOptions;\n  @Input()\n  searchOptions: SimpleTableSearchOptions;\n  @Input()\n  defaultSort: { id: string; value: string };\n  @Input()\n  outsideFilter: EventEmitter<any>;\n\n  @Input()\n  set customFilter(v: boolean) {\n    this._customFilter = coerceBooleanProperty(v);\n  }\n  get customFilter() {\n    return this._customFilter;\n  }\n  private _customFilter: boolean;\n\n  @Input()\n  set forceShowHeader(v: boolean) {\n    this._forceShowHeader = coerceBooleanProperty(v);\n  }\n  get forceShowHeader() {\n    return this._forceShowHeader;\n  }\n  private _forceShowHeader: boolean;\n\n  @Input()\n  set hideGlobalSearch(v: boolean) {\n    this._hideGlobalSearch = coerceBooleanProperty(v);\n    this.globalSearchHiddenClassToggle = this._hideGlobalSearch;\n  }\n  get hideGlobalSearch() {\n    return this._hideGlobalSearch;\n  }\n  private _hideGlobalSearch: boolean;\n\n  @Input()\n  set debug(v: boolean) {\n    this._debug = coerceBooleanProperty(v);\n  }\n  get debug() {\n    return this._debug;\n  }\n  private _debug: boolean;\n\n  public dataSource: ActivityTableDataSource<T>;\n  public loading: boolean = true;\n\n  private outsideFilterSubscription: Subscription;\n\n  @HostBinding('class.empty')\n  get empty() {\n    return this.dataSource && this.dataSource.totallyEmpty;\n  }\n\n  @HostBinding('class.loading')\n  get loadingClass() {\n    return this.loading || (this.dataSource && this.dataSource.loading);\n  }\n\n  constructor(public labels: NovoLabelService, private ref: ChangeDetectorRef, public state: NovoActivityTableState) {\n    notify('[Deprecated]: The simple table is deprecated. Please migrate to novo-data-tables!');\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.loading = changes.activityService && !changes.activityService.currentValue;\n    this.ref.detectChanges();\n    if (changes.activityService && changes.activityService.currentValue) {\n      this.loading = false;\n      this.dataSource = new ActivityTableDataSource<T>(this.activityService, this.state, this.ref);\n      this.ref.detectChanges();\n    }\n    if (changes.outsideFilter && changes.outsideFilter.currentValue) {\n      if (!this.outsideFilterSubscription) {\n        this.outsideFilterSubscription = this.outsideFilter.subscribe((filter: any) => {\n          this.state.outsideFilter = filter;\n          this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n          this.ref.markForCheck();\n        });\n      }\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.outsideFilterSubscription) {\n      this.outsideFilterSubscription.unsubscribe();\n    }\n  }\n\n  public ngAfterContentInit(): void {\n    if (this.paginationOptions && !this.paginationOptions.page) {\n      this.paginationOptions.page = 0;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSize) {\n      this.paginationOptions.pageSize = 50;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSizeOptions) {\n      this.paginationOptions.pageSizeOptions = [10, 25, 50, 100];\n    }\n    this.state.page = this.paginationOptions ? this.paginationOptions.page : undefined;\n    this.state.pageSize = this.paginationOptions ? this.paginationOptions.pageSize : undefined;\n    this.ref.markForCheck();\n  }\n\n  public onSearchChange(term: string): void {\n    this.state.globalSearch = term;\n    this.state.reset(false, true);\n    this.state.updates.next({ globalSearch: term, filter: this.state.filter, sort: this.state.sort });\n  }\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoCheckboxModule } from '../checkbox';\nimport { NovoCommonModule, NovoOptionModule } from '../common';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoSearchBoxModule } from '../search/SearchBox.module';\nimport { NovoTilesModule } from '../tiles/Tiles.module';\nimport {\n  NovoSimpleActionCell,\n  NovoSimpleCell,\n  NovoSimpleCellDef,\n  NovoSimpleCheckboxCell,\n  NovoSimpleCheckboxHeaderCell,\n  NovoSimpleColumnDef,\n  NovoSimpleEmptyHeaderCell,\n  NovoSimpleHeaderCell,\n  NovoSimpleHeaderCellDef,\n} from './cell';\nimport { NovoSimpleCellHeader, NovoSimpleFilterFocus } from './cell-header';\nimport { NovoSimpleTablePagination } from './pagination';\nimport { NovoSimpleHeaderRow, NovoSimpleHeaderRowDef, NovoSimpleRow, NovoSimpleRowDef } from './row';\nimport { NovoSelection, NovoSortFilter } from './sort';\nimport { NovoActivityTableState } from './state';\nimport {\n  NovoActivityTable,\n  NovoActivityTableActions,\n  NovoActivityTableCustomFilter,\n  NovoActivityTableCustomHeader,\n  NovoActivityTableEmptyMessage,\n  NovoActivityTableNoResultsMessage,\n  NovoTable,\n} from './table';\n\n@NgModule({\n  imports: [\n    NovoDatePickerModule,\n    CdkTableModule,\n    CommonModule,\n    FormsModule,\n    NovoCommonModule,\n    NovoButtonModule,\n    NovoDropdownModule,\n    NovoFormExtrasModule,\n    NovoLoadingModule,\n    NovoTilesModule,\n    NovoSearchBoxModule,\n    NovoCheckboxModule,\n    NovoOptionModule,\n  ],\n  exports: [\n    NovoTable,\n    NovoSimpleCellDef,\n    NovoSimpleHeaderCellDef,\n    NovoSimpleColumnDef,\n    NovoActivityTableEmptyMessage,\n    NovoActivityTableNoResultsMessage,\n    NovoSimpleHeaderRowDef,\n    NovoSimpleRowDef,\n    NovoSimpleCellHeader,\n    NovoSortFilter,\n    NovoSimpleActionCell,\n    NovoSimpleEmptyHeaderCell,\n    NovoSimpleHeaderCell,\n    NovoSimpleCell,\n    NovoSimpleHeaderRow,\n    NovoSimpleRow,\n    NovoSimpleFilterFocus,\n    NovoSimpleTablePagination,\n    NovoActivityTableCustomHeader,\n    NovoSimpleCheckboxCell,\n    NovoSimpleCheckboxHeaderCell,\n    NovoSelection,\n    NovoActivityTable,\n    NovoActivityTableActions,\n    NovoActivityTableCustomFilter,\n  ],\n  declarations: [\n    NovoTable,\n    NovoSimpleCellDef,\n    NovoSimpleHeaderCellDef,\n    NovoSimpleColumnDef,\n    NovoActivityTableEmptyMessage,\n    NovoActivityTableNoResultsMessage,\n    NovoSimpleHeaderRowDef,\n    NovoSimpleRowDef,\n    NovoSimpleCellHeader,\n    NovoSortFilter,\n    NovoSimpleActionCell,\n    NovoSimpleEmptyHeaderCell,\n    NovoSimpleHeaderCell,\n    NovoSimpleCell,\n    NovoSimpleHeaderRow,\n    NovoSimpleRow,\n    NovoSimpleFilterFocus,\n    NovoSimpleTablePagination,\n    NovoActivityTableCustomHeader,\n    NovoSimpleCheckboxCell,\n    NovoSimpleCheckboxHeaderCell,\n    NovoSelection,\n    NovoActivityTable,\n    NovoActivityTableActions,\n    NovoActivityTableCustomFilter,\n  ],\n  providers: [NovoActivityTableState],\n})\nexport class NovoSimpleTableModule {}\n","// NG2\nimport { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n// APP\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Key } from '../../utils';\n\n@Component({\n  selector: 'novo-slider',\n  template: `\n    <section class=\"slides\">\n      <ng-content select=\"div[slide]\"></ng-content>\n    </section>\n    <div class=\"controls\">\n      <button *ngIf=\"!start\" theme=\"icon\" icon=\"previous\" (click)=\"changeSlide('back')\"></button>\n      <div class=\"indicators\">\n        <div class=\"indicator-circle\" *ngFor=\"let indicator of currSlides; let i = index\" [ngClass]=\"indicator\"></div>\n      </div>\n      <button *ngIf=\"!end\" theme=\"primary\" icon=\"next\" (click)=\"changeSlide('next')\">{{ labels.next }}</button>\n      <ng-content select=\"button\" *ngIf=\"end\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class]': 'currentClass',\n  },\n})\nexport class NovoSliderElement implements OnInit, OnDestroy {\n  @Input()\n  slides: any;\n\n  currentSlide: number = 0;\n  start: boolean = true;\n  end: boolean = true;\n  currSlides: Array<any> = ['active'];\n  handleKeyDownFunc: any;\n  currentClass: string;\n\n  constructor(private element: ElementRef, public labels: NovoLabelService) {\n    this.handleKeyDownFunc = this.handleKeyDown.bind(this);\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.slides; i++) {\n      this.currSlides[i] = i > 0 ? 'inactive' : 'active';\n    }\n    // Catch Tab Events\n    this.element.nativeElement.addEventListener('keydown', this.handleKeyDownFunc);\n  }\n\n  ngOnDestroy() {\n    this.element.nativeElement.removeEventListener('keydown', this.handleKeyDownFunc);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === Key.Tab) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n    }\n  }\n\n  changeSlide(direction) {\n    if (direction === 'next') {\n      if (this.currentSlide === this.slides - 1) {\n        return;\n      }\n      this.currentSlide++;\n    } else {\n      if (this.currentSlide === 0) {\n        return;\n      }\n      this.currentSlide--;\n    }\n\n    for (let i = 0; i < this.slides; i++) {\n      this.currSlides[i] = 'inactive';\n    }\n\n    this.currSlides[this.currentSlide] = 'active';\n    this.start = this.currentSlide === 0;\n    this.end = this.currentSlide === this.slides - 1;\n    this.currentClass = `slide-${this.currentSlide}`;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoSliderElement } from './Slider';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule],\n  declarations: [NovoSliderElement],\n  exports: [NovoSliderElement],\n})\nexport class NovoSliderModule {}\n","import { CdkStepLabel } from '@angular/cdk/stepper';\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[novoStepLabel]',\n})\nexport class NovoStepLabel extends CdkStepLabel {\n  constructor(template: TemplateRef<any>) {\n    super(template);\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkStepHeader } from '@angular/cdk/stepper';\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, TemplateRef } from '@angular/core';\nimport { NovoStepLabel } from './step-label.component';\n\n@Component({\n  selector: 'novo-step-header',\n  templateUrl: 'step-header.component.html',\n  styleUrls: ['step-header.component.scss'],\n  host: {\n    class: 'novo-step-header',\n    role: 'tab',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoStepHeader extends CdkStepHeader implements OnDestroy {\n  @Input()\n  theme: string;\n  @Input()\n  color: string;\n  @Input()\n  icon: string;\n  /** State of the given step. */\n  @Input()\n  state: string;\n\n  /** Label of the given step. */\n  @Input()\n  label: NovoStepLabel | string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input()\n  iconOverrides: { [key: string]: TemplateRef<any> };\n\n  /** Index of the given step. */\n  @Input()\n  get index(): number {\n    return this._index;\n  }\n  set index(value: number) {\n    this._index = coerceNumberProperty(value);\n  }\n  private _index: number;\n\n  /** Whether the given step is selected. */\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n  }\n  private _selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n  }\n  private _active: boolean;\n\n  /** Whether the given step label is active. */\n  get touched(): boolean {\n    return this.selected || this.state === 'edit' || this.state === 'done';\n  }\n\n  /** Whether the given step is optional. */\n  @Input()\n  get optional(): boolean {\n    return this._optional;\n  }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional: boolean;\n\n  constructor(private _focusMonitor: FocusMonitor, private _element: ElementRef) {\n    super(_element);\n    _focusMonitor.monitor(_element.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._element.nativeElement);\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof NovoStepLabel ? null : this.label;\n  }\n\n  /** Returns NovoStepLabel if the label of given step is a template label. */\n  _templateLabel(): NovoStepLabel | null {\n    return this.label instanceof NovoStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\n/** Animations used by the Novo steppers. */\nexport const novoStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n    state('current', style({ transform: 'none', visibility: 'visible' })),\n    state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({ height: '0px', visibility: 'hidden' })),\n    state('next', style({ height: '0px', visibility: 'hidden' })),\n    state('current', style({ height: '*', visibility: 'visible' })),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n  ]),\n};\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { CdkStep, CdkStepper } from '@angular/cdk/stepper';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  QueryList,\n  TemplateRef,\n  ViewChildren,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { NovoIconComponent } from '../icon/Icon';\nimport { NovoStepHeader } from './step-header.component';\nimport { NovoStepLabel } from './step-label.component';\nimport { novoStepperAnimations } from './stepper.animations';\n\n@Component({\n  selector: 'novo-step',\n  templateUrl: 'step.component.html',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: CdkStep, useExisting: NovoStep }],\n})\nexport class NovoStep extends CdkStep {\n  /** Content for step label given by `<ng-template novoStepLabel>`. */\n  @ContentChild(NovoStepLabel)\n  stepLabel: NovoStepLabel;\n\n  @Input()\n  theme: string;\n  @Input()\n  color: string;\n  @Input()\n  icon: string;\n\n  constructor(@Inject(forwardRef(() => NovoStepper)) stepper: CdkStepper) {\n    super(stepper);\n  }\n}\n\n@Directive({\n  selector: '[novoStepper]',\n  providers: [\n    { provide: CdkStep, useExisting: NovoStep },\n    { provide: CdkStepper, useExisting: NovoStepper },\n  ],\n})\nexport class NovoStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(NovoStepHeader)\n  _stepHeader: QueryList<FocusableOption>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(NovoStep, { descendants: true })\n  _steps: QueryList<NovoStep>;\n\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  public get steps(): QueryList<NovoStep> {\n    return this._steps;\n  }\n  public set steps(value: QueryList<NovoStep>) {\n    this._steps = value;\n  }\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(NovoIconComponent)\n  _icons: QueryList<NovoIconComponent>;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: { [key: string]: TemplateRef<any> } = {};\n\n  get completed(): boolean {\n    try {\n      const steps = this._steps.toArray();\n      const length = steps.length - 1;\n      return steps[length].completed && length === this.selectedIndex;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  ngAfterContentInit() {\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n  }\n\n  complete() {\n    try {\n      const steps = this._steps.toArray();\n      steps[this.selectedIndex].completed = true;\n      this.next();\n      this._stateChanged();\n    } catch (err) {\n      // do nothing\n    }\n  }\n\n  getIndicatorType(index: number): 'none' | '' | 'edit' | 'done' {\n    const steps = this._steps.toArray();\n    if (index === this.selectedIndex) {\n      if (steps[index] && index === steps.length - 1 && steps[index].completed) {\n        return 'done';\n      }\n      return 'edit';\n    }\n    if (index < this.selectedIndex) {\n      return 'done';\n    }\n    return 'none';\n  }\n}\n\n@Component({\n  selector: 'novo-horizontal-stepper',\n  exportAs: 'novoHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.component.scss'],\n  host: {\n    class: 'novo-stepper-horizontal',\n    'aria-orientation': 'horizontal',\n    role: 'tablist',\n  },\n  animations: [novoStepperAnimations.horizontalStepTransition],\n  providers: [\n    { provide: NovoStepper, useExisting: NovoHorizontalStepper },\n    { provide: CdkStepper, useExisting: NovoHorizontalStepper },\n  ],\n  // encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoHorizontalStepper extends NovoStepper {}\n\n@Component({\n  selector: 'novo-vertical-stepper',\n  exportAs: 'novoVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.component.scss'],\n  host: {\n    class: 'novo-stepper-vertical',\n    'aria-orientation': 'vertical',\n    role: 'tablist',\n  },\n  animations: [novoStepperAnimations.verticalStepTransition],\n  providers: [\n    { provide: NovoStepper, useExisting: NovoVerticalStepper },\n    { provide: CdkStepper, useExisting: NovoVerticalStepper },\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NovoVerticalStepper extends NovoStepper {\n  constructor(@Optional() dir: Directionality, changeDetectorRef: ChangeDetectorRef) {\n    super(dir, changeDetectorRef);\n    this._orientation = 'vertical';\n  }\n}\n","import { ChangeDetectionStrategy, Component, forwardRef, Inject, Input } from '@angular/core';\nimport { NovoStepHeader } from './step-header.component';\nimport { NovoStepper } from './stepper.component';\n\n@Component({\n  selector: 'novo-step-status',\n  templateUrl: 'step-status.component.html',\n  // encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'novo-step-status',\n  },\n})\nexport class NovoStepStatus {\n  @Input()\n  state: string;\n\n  constructor(\n    @Inject(forwardRef(() => NovoStepper)) stepper: NovoStepper,\n    @Inject(forwardRef(() => NovoStepHeader)) step: NovoStepHeader,\n  ) {}\n}\n","import { CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';\nimport { Directive } from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[novoStepperNext],novo-button[novoStepperNext]',\n  host: {\n    class: 'novo-stepper-next',\n    '[type]': 'type',\n  },\n  inputs: ['type'],\n})\nexport class NovoStepperNext extends CdkStepperNext {}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[novoStepperPrevious],novo-button[novoStepperPrevious]',\n  host: {\n    class: 'novo-stepper-previous',\n    '[type]': 'type',\n  },\n  inputs: ['type'],\n})\nexport class NovoStepperPrevious extends CdkStepperPrevious {}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoStepHeader } from './step-header.component';\nimport { NovoStepLabel } from './step-label.component';\nimport { NovoStepStatus } from './step-status.component';\nimport { NovoStepperNext, NovoStepperPrevious } from './stepper-buttons.component';\nimport { NovoHorizontalStepper, NovoStep, NovoStepper, NovoVerticalStepper } from './stepper.component';\n@NgModule({\n  imports: [CommonModule, PortalModule, NovoButtonModule, CdkStepperModule, NovoIconModule, A11yModule],\n  exports: [\n    NovoHorizontalStepper,\n    NovoVerticalStepper,\n    NovoStep,\n    NovoStepLabel,\n    NovoStepper,\n    NovoStepHeader,\n    NovoStepStatus,\n    NovoStepperNext,\n    NovoStepperPrevious,\n  ],\n  declarations: [\n    NovoHorizontalStepper,\n    NovoVerticalStepper,\n    NovoStep,\n    NovoStepLabel,\n    NovoStepper,\n    NovoStepHeader,\n    NovoStepStatus,\n    NovoStepperNext,\n    NovoStepperPrevious,\n  ],\n})\nexport class NovoStepperModule {}\n","import { CdkScrollable } from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { binarySearch, Helpers } from '../../utils/Helpers';\nimport { NOVO_OPTION_PARENT_COMPONENT } from '../common';\n\nexport type TabbedGroupPickerTab = {\n  typeName: string;\n  typeLabel: string;\n  valueField: string;\n  labelField: string;\n  scrollOffset?: number;\n  icon?: string;\n} & (ParentTab | ChildTab);\n\nexport type ParentTab = {\n  childTypeName: string;\n  data: Array<ParentOption>;\n};\n\ntype ParentOption = {\n  selected?: boolean;\n  indeterminate?: boolean;\n  children: Array<{ selected?: boolean }>;\n} & { [key: string]: any };\n\nexport type ChildTab = {\n  data: Array<{ selected?: boolean } & { [key: string]: any }>;\n};\n\nexport type TabbedGroupPickerQuickSelect = {\n  label: string;\n  selected?: boolean;\n  childTypeName?: string;\n  children?: (({ selected?: boolean } & { [key: string]: any }) | number)[];\n  all?: boolean;\n};\n\nexport type QuickSelectConfig = { label: string; items: TabbedGroupPickerQuickSelect[] };\n\nexport type TabbedGroupPickerButtonConfig = {\n  theme: string;\n  side: string;\n  icon: string;\n  label: string;\n};\n\n@Component({\n  selector: 'novo-tabbed-group-picker',\n  templateUrl: './TabbedGroupPicker.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: NOVO_OPTION_PARENT_COMPONENT, useExisting: NovoTabbedGroupPickerElement }],\n})\nexport class NovoTabbedGroupPickerElement implements OnDestroy, OnInit {\n  @ViewChild('tabbedGroupPickerVirtualScrollViewport')\n  private scrollableInstance: CdkScrollable;\n\n  multiple = true;\n\n  @Input() buttonConfig: TabbedGroupPickerButtonConfig;\n  @Input() tabs: TabbedGroupPickerTab[];\n  @Input() quickSelectConfig: QuickSelectConfig;\n\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n  displayTabs: TabbedGroupPickerTab[];\n  displayTabIndex: number = 0;\n\n  filterText: BehaviorSubject<string> = new BehaviorSubject('');\n  filterTextSubscription: Subscription;\n\n  loading = true;\n  showClearAll: boolean = false;\n\n  // Initial height based on 13 px font rendered in chrome. Actual height retrieved onDropdownToggled.\n  scrollViewportHeight: number = 351;\n  virtualScrollItemSize: number = 39;\n\n  constructor(public labelService: NovoLabelService, private ref: ChangeDetectorRef) {}\n\n  get displayTab(): TabbedGroupPickerTab {\n    return this.displayTabs[this.displayTabIndex];\n  }\n  set displayTab(tab: TabbedGroupPickerTab) {\n    this.displayTabIndex = this.tabs.map(({ typeName }) => typeName).indexOf(tab.typeName);\n  }\n\n  get minBufferPx() {\n    return this.scrollViewportHeight; // render at least 2x the number of items visible (viewport + min buffer)\n  }\n\n  get maxBufferPx() {\n    return 2 * this.scrollViewportHeight; // render at most 3x the number of items visible (viewport + max buffer)\n  }\n\n  ngOnInit(): void {\n    this.setupDisplayData();\n    this.createChildrenReferences();\n    this.initializeDescendantSelection();\n    this.updateParentsAndQuickSelect();\n    this.updateClearAll();\n\n    this.loading = false;\n    this.filterTextSubscription = this.filterText.pipe(debounceTime(300)).subscribe({\n      next: this.filter,\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.filterTextSubscription) {\n      this.filterTextSubscription.unsubscribe();\n    }\n  }\n\n  changeTab(tab: TabbedGroupPickerTab) {\n    this.displayTab = tab;\n    if (this.scrollableInstance) {\n      this.scrollableInstance.scrollTo({ behavior: 'auto', top: 0 });\n    }\n  }\n\n  getPixelHeight(element: HTMLElement) {\n    return Number(getComputedStyle(element, '').height.match(/(\\d+(\\.\\d+)?)px$/)[1]);\n  }\n\n  setupDisplayData(): void {\n    // shallow copy here so that reassigning displayTabs[i].data doesn't mutate tabs[i].data\n    // but both data values point to the same items\n    this.displayTabs = this.tabs.map((tab) => ({ ...tab }));\n    this.displayTab = this.tabs[0];\n  }\n\n  // Replace each parent's child object with a reference to the child to avoid\n  // a child lookup for selected status; linking references allows M x N\n  // time complexity instead of M x N^2\n  createChildrenReferences(): void {\n    this.tabs.forEach((tab) => {\n      // would rather filter but TypeScript still wants a type narrowing here\n      if ('childTypeName' in tab) {\n        const childTab = this.tabs.find(({ typeName }) => typeName === tab.childTypeName);\n        const compareFunction = this.makeCompareFunction(childTab.valueField);\n        const warnFunction = this.makeWarningFunction(tab.typeName, childTab.typeName, childTab.valueField);\n        const sortedChildren = childTab.data.slice().sort(compareFunction);\n\n        tab.data\n          .filter(({ children }) => children && children.length)\n          .forEach((parent: { children?: any[] }) =>\n            this.replaceChildrenWithReferences(parent as ParentOption, sortedChildren, compareFunction, warnFunction),\n          );\n      }\n    });\n    if (this.quickSelectConfig) {\n      this.quickSelectConfig.items\n        .filter((parent) => 'all' in parent)\n        .forEach((parent) => {\n          parent.children = this.tabs.find(({ typeName }) => parent.childTypeName === typeName).data;\n        });\n\n      this.quickSelectConfig.items\n        .filter((parent) => !('all' in parent))\n        .forEach((parent) => {\n          const childTab = this.tabs.find(({ typeName }) => typeName === parent.childTypeName);\n          const compareFunction = this.makeCompareFunction(childTab.valueField);\n          const warnFunction = this.makeWarningFunction(parent.label, childTab.typeName, childTab.valueField);\n          const sortedChildren = childTab.data.slice().sort(compareFunction);\n\n          this.replaceChildrenWithReferences(parent as ParentOption, sortedChildren, compareFunction, warnFunction);\n        });\n    }\n  }\n\n  makeCompareFunction<T>(key: string): (a: T | { [key: string]: T }, b: T | { [key: string]: T }) => 1 | -1 | 0 | undefined {\n    return (a: T | { [key: string]: T }, b: T | { [key: string]: T }) => {\n      const aValue: T = (a && a[key]) || a;\n      const bValue: T = (b && b[key]) || b;\n\n      if (aValue < bValue) {\n        return -1;\n      } else if (aValue > bValue) {\n        return 1;\n      } else if (aValue === bValue) {\n        return 0;\n      } else {\n        return undefined;\n      }\n    };\n  }\n\n  replaceChildrenWithReferences(\n    parent: { children: any[] },\n    sortedData: ChildTab['data'],\n    compareFunction: (a, b) => 1 | -1 | 0,\n    warnFunction: (child) => void,\n  ): void {\n    parent.children = parent.children\n      .map((child) => binarySearch(child, sortedData, compareFunction) || warnFunction(child))\n      .filter(Boolean); // since map can return undefined, remove undefined elements\n  }\n\n  makeWarningFunction(parentLabel: string, childLabel: string, childValueField): (child) => void {\n    return (child) => {\n      const childValue = child[childValueField] || child;\n      console.warn(`No ${childLabel} found with value ${childValue} for parent ${parentLabel}`);\n    };\n  }\n\n  onDropdownToggle(event) {\n    if (event) {\n      this.scrollViewportHeight = this.getPixelHeight(this.scrollableInstance.getElementRef().nativeElement);\n      this.virtualScrollItemSize = this.getPixelHeight(\n        this.scrollableInstance.getElementRef().nativeElement.querySelector('novo-list-item'),\n      );\n    }\n  }\n\n  onItemToggled(item: { selected?: boolean; children?: Array<{ selected?: boolean; children?: Array<{ selected?: boolean }> }> }) {\n    if (Array.isArray(item.children)) {\n      this.updateDescendants(item.selected, item.children);\n    }\n    this.updateParentsAndQuickSelect();\n    this.updateClearAll(item.selected);\n    this.emitSelectedValues();\n    this.ref.markForCheck();\n  }\n\n  initializeDescendantSelection() {\n    this.tabs.forEach((tab) => {\n      if ('childTypeName' in tab && tab.data && tab.data.length) {\n        tab.data.forEach((parent) => {\n          if (parent.selected && parent.children && parent.children.length) {\n            parent.children.forEach((child) => {\n              child.selected = true;\n            });\n          }\n        });\n      }\n    });\n  }\n\n  updateDescendants(parentIsSelected: boolean, children: Array<{ selected?: boolean; children?: Array<{ selected?: boolean }> }>): void {\n    children.forEach((item) => {\n      parentIsSelected ? (item.selected = true) : delete item.selected;\n      if (Array.isArray(item.children)) {\n        this.updateDescendants(item.selected, item.children);\n      }\n    });\n  }\n\n  updateClearAll(itemWasJustSelected?: boolean) {\n    this.showClearAll = itemWasJustSelected\n      ? true\n      : this.tabs.some((tab) => {\n          if ((tab as ParentTab).childTypeName) {\n            return tab.data.some(({ selected, indeterminate }) => selected || indeterminate);\n          } else {\n            return tab.data.some(({ selected }) => selected);\n          }\n        });\n  }\n\n  updateParentsAndQuickSelect(): void {\n    // mutate here to avoid dereferencing the objects in displayTabs\n    this.tabs\n      .filter((tab) => 'childTypeName' in tab && !!tab.childTypeName)\n      .forEach((tab) => {\n        const parents = tab.data.filter(({ children }: { children?: any[] }) => children && children.length);\n\n        parents.forEach((parent: { children?: { selected?: boolean }[] }) => {\n          ['indeterminate', 'selected'].forEach((selectedStateOption) => delete parent[selectedStateOption]);\n\n          const selectedState = this.getSelectedState(parent.children);\n          if (selectedState) {\n            parent[selectedState] = true;\n          }\n        });\n      });\n\n    if (this.quickSelectConfig) {\n      this.quickSelectConfig.items.forEach((quickSelect) => {\n        delete quickSelect.selected;\n        const selectedState = this.getSelectedState(quickSelect.children as ({ selected?: boolean } & { [key: string]: any })[]);\n        if (selectedState) {\n          quickSelect[selectedState] = true;\n        }\n      });\n    }\n  }\n\n  getSelectedState = (childArray: { selected?: boolean; indeterminate?: boolean }[]): 'selected' | 'indeterminate' | undefined => {\n    const numberOfSelectedItems = childArray.filter(({ selected }) => selected).length;\n    if (!numberOfSelectedItems) {\n      return undefined;\n    }\n    return numberOfSelectedItems === childArray.length ? 'selected' : 'indeterminate';\n  };\n\n  emitSelectedValues() {\n    const selectedValues: TabbedGroupPickerTab[] = this.tabs.map((tab) => ({\n      ...tab,\n      data: tab.data.filter(({ selected }) => selected),\n    }));\n    this.selectionChange.emit(selectedValues);\n  }\n\n  deselectEverything(event) {\n    Helpers.swallowEvent(event);\n    this.showClearAll = false;\n    if (this.quickSelectConfig) {\n      this.quickSelectConfig.items.forEach((quickSelect) => {\n        delete quickSelect.selected;\n      });\n    }\n    this.tabs.forEach((tab) => {\n      if ((tab as ParentTab).childTypeName) {\n        tab.data.forEach((item) => {\n          delete item.selected;\n          delete item.indeterminate;\n          item.children.forEach((child) => delete child.selected);\n        });\n      } else {\n        (tab as ChildTab).data.forEach((item) => delete item.selected);\n      }\n    });\n    this.emitSelectedValues();\n    this.ref.markForCheck();\n  }\n\n  onClearFilter(event) {\n    Helpers.swallowEvent(event);\n    this.filterText.next('');\n  }\n\n  onFilter(event: { target: { value: string } }) {\n    this.filterText.next(event.target.value);\n  }\n\n  filter = (searchTerm: string) => {\n    this.displayTabs.forEach(\n      (displayTab, i) =>\n        (displayTab.data = this.tabs[i].data.filter((item) =>\n          item[displayTab.labelField].toLowerCase().includes(searchTerm.toLowerCase()),\n        )),\n    );\n    this.ref.markForCheck();\n  };\n}\n","// NG2\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoCheckboxModule } from '../checkbox';\nimport { NovoOptionModule } from '../common';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nimport { NovoListModule } from '../list/List.module';\nimport { NovoTabModule } from '../tabs/Tabs.module';\n// APP\nimport { NovoTabbedGroupPickerElement } from './TabbedGroupPicker';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ScrollingModule,\n    NovoTabModule,\n    NovoListModule,\n    NovoFormExtrasModule,\n    NovoButtonModule,\n    NovoDropdownModule,\n    NovoOptionModule,\n    NovoCheckboxModule,\n  ],\n  providers: [NovoLabelService],\n  declarations: [NovoTabbedGroupPickerElement],\n  exports: [NovoTabbedGroupPickerElement],\n})\nexport class NovoTabbedGroupPickerModule {}\n","export class BaseRenderer {\n  data: any = {};\n  value: any = '';\n  meta: any = {};\n}\n","// NG2\nimport { Component, Input } from '@angular/core';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// APP\nimport { BaseRenderer } from '../base-renderer/BaseRenderer';\n\n@Component({\n  selector: 'date-cell',\n  template: `\n    <div class=\"date-cell\">\n      <label>{{ getFormattedDate() }}</label>\n    </div>\n  `,\n})\nexport class DateCell extends BaseRenderer {\n  @Input()\n  value: any;\n  constructor(public labels: NovoLabelService) {\n    super();\n  }\n\n  public getFormattedDate(): string {\n    return this.labels.formatDate(this.value);\n  }\n}\n","// NG2\nimport { Component, Input, OnInit } from '@angular/core';\n// APP\nimport { BaseRenderer } from '../base-renderer/BaseRenderer';\n\nexport interface INovoDropdownCellConfig {\n  category?: string;\n  callback?: Function;\n  options: ({ label?: string; value?: string; callback?: Function } | string)[];\n}\n\n@Component({\n  selector: 'novo-dropdown-cell',\n  template: `\n    <novo-dropdown parentScrollSelector=\".table-container\" containerClass=\"novo-table-dropdown-cell\">\n      <novo-button type=\"button\" theme=\"secondary\" icon=\"collapse\" inverse>\n        <span data-automation-id=\"novo-dropdown-cell-value\">{{ value }}</span>\n      </novo-button>\n      <list>\n        <ng-container *ngFor=\"let config of meta.dropdownCellConfig; let i = index\">\n          <dropdown-item-header *ngIf=\"config.category\">{{ config.category }}</dropdown-item-header>\n          <item\n            *ngFor=\"let option of config.options\"\n            (action)=\"onClick(config, option, option.value)\"\n            [class.active]=\"(option || option.value) === value\"\n          >\n            <span [attr.data-automation-id]=\"option.label || option\">{{ option.label || option }}</span>\n            <i *ngIf=\"(option || option.value) === value\" class=\"bhi-check\"></i>\n          </item>\n          <hr *ngIf=\"i < meta.dropdownCellConfig.length - 1\" />\n        </ng-container>\n      </list>\n    </novo-dropdown>\n  `,\n})\nexport class NovoDropdownCell extends BaseRenderer implements OnInit {\n  @Input()\n  meta: any;\n  @Input()\n  value: any;\n\n  public ngOnInit(): void {\n    // Check for and fix bad config\n    if (!this.meta.dropdownCellConfig) {\n      throw new Error('Missing \"dropdownCellConfig\" on the column setup');\n    }\n  }\n\n  public onClick(config, option, value): void {\n    const callback = option.callback || config.callback;\n    callback(this.data, value || option);\n  }\n}\n","// NG2\nimport { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[keepFilterFocused]',\n})\nexport class NovoTableKeepFilterFocus implements AfterViewInit {\n  constructor(private element: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.element.nativeElement.focus();\n  }\n}\n","// NG2\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n// APP\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n\ninterface Page {\n  num: number;\n  text: string;\n  active: boolean;\n}\n@Component({\n  selector: 'novo-pagination',\n  template: `\n    <ng-container *ngIf=\"rowOptions.length > 1\">\n      <h5 class=\"rows\">{{ label }}</h5>\n      <novo-select\n        [options]=\"rowOptions\"\n        [placeholder]=\"labels.select\"\n        [(ngModel)]=\"itemsPerPage\"\n        (onSelect)=\"onPageSizeChanged($event)\"\n        data-automation-id=\"pager-select\"\n      ></novo-select>\n      <span class=\"spacer\"></span>\n    </ng-container>\n    <ul class=\"pager\" data-automation-id=\"pager\">\n      <li class=\"page\" (click)=\"selectPage(page - 1)\" [ngClass]=\"{ disabled: noPrevious() }\">\n        <i class=\"bhi-previous\" data-automation-id=\"pager-previous\"></i>\n      </li>\n      <li\n        class=\"page\"\n        [ngClass]=\"{ active: p.active }\"\n        [class.disabled]=\"disablePageSelection\"\n        *ngFor=\"let p of pages\"\n        (click)=\"selectPage(p.num, $event)\"\n      >\n        {{ p.text }}\n      </li>\n      <li class=\"page\" (click)=\"selectPage(page + 1)\" [ngClass]=\"{ disabled: noNext() }\">\n        <i class=\"bhi-next\" data-automation-id=\"pager-next\"></i>\n      </li>\n    </ul>\n  `,\n})\nexport class Pagination implements OnInit, OnChanges {\n  @Input()\n  page: number;\n  @Input()\n  totalItems: number;\n  @Input()\n  itemsPerPage = 10;\n  @Input()\n  rowOptions;\n  @Input()\n  label: string;\n  @Input()\n  get disablePageSelection(): boolean {\n    return this.pageSelectDisabled;\n  }\n  set disablePageSelection(val: boolean) {\n    this.pageSelectDisabled = coerceBooleanProperty(val);\n  }\n  @Output()\n  pageChange = new EventEmitter();\n  @Output()\n  itemsPerPageChange = new EventEmitter();\n  @Output()\n  onPageChange = new EventEmitter();\n\n  public pageSelectDisabled: boolean;\n  maxPagesDisplayed = 5;\n  totalPages: number;\n  pages: Array<Page>;\n\n  constructor(public labels: NovoLabelService) {}\n\n  ngOnInit() {\n    this.label = this.label || this.labels.itemsPerPage;\n    this.rowOptions = this.rowOptions || this.getDefaultRowOptions();\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    this.page = this.page || 1;\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getDefaultRowOptions() {\n    return [\n      { value: 10, label: '10' },\n      { value: 25, label: '25' },\n      { value: 50, label: '50' },\n      { value: 100, label: '100' },\n    ];\n  }\n\n  onPageSizeChanged(event) {\n    this.page = 1;\n    this.itemsPerPage = event.selected;\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.pageChange.emit(this.page);\n    this.itemsPerPageChange.emit(this.itemsPerPage);\n    this.onPageChange.emit({\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n    });\n  }\n\n  selectPage(page: number, event?: MouseEvent) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.page = page;\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.pageChange.emit(this.page);\n    this.onPageChange.emit({\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n    });\n  }\n\n  noPrevious() {\n    return this.page === 1;\n  }\n\n  noNext() {\n    return this.page === this.totalPages;\n  }\n\n  // Create page object used in template\n  makePage(num: number, text: string, isActive: boolean) {\n    return { num, text, active: isActive } as Page;\n  }\n\n  getPages(currentPage: number, totalPages: number) {\n    const pages: Array<Page> = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = this.maxPagesDisplayed < totalPages;\n\n    // recompute if maxPagesDisplayed\n    if (isMaxSized) {\n      // Current page is displayed in the middle of the visible ones\n      startPage = Math.max(currentPage - Math.floor(this.maxPagesDisplayed / 2), 1);\n      endPage = startPage + this.maxPagesDisplayed - 1;\n\n      // Adjust if limit is exceeded\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = endPage - this.maxPagesDisplayed + 1;\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    return pages;\n  }\n\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n}\n","// NG2\nimport { Component } from '@angular/core';\n// APP\nimport { BaseRenderer } from '../base-renderer/BaseRenderer';\n\n@Component({\n  selector: 'percentage-cell',\n  template: ` <div class=\"percentage\" *ngIf=\"value || value === 0\">{{ value | percent: '1.0-2' }}</div> `,\n})\nexport class PercentageCell extends BaseRenderer {}\n","// NG2\nimport { Component, ComponentRef, ElementRef, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { ComponentUtils } from './../../../../utils/component-utils/ComponentUtils';\n// APP\nimport { BaseRenderer } from './../base-renderer/BaseRenderer';\n\n@Component({\n  selector: 'novo-row-details',\n  template: ` <span #container></span> <span>{{ value }}</span> `,\n})\nexport class RowDetails implements OnInit {\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  @Input()\n  data: any;\n  @Input()\n  renderer: any;\n\n  value: any = '';\n\n  constructor(private element: ElementRef, private componentUtils: ComponentUtils) {}\n\n  ngOnInit() {\n    if (this.renderer) {\n      if (this.renderer.prototype instanceof BaseRenderer) {\n        const componentRef: ComponentRef<RowDetails> = this.componentUtils.append(this.renderer, this.container);\n        componentRef.instance.data = this.data;\n      } else {\n        this.value = this.renderer(this.data);\n      }\n    } else {\n      // this.value = this.row[this.column.name];\n    }\n  }\n}\n","// NG2\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'novo-table-actions',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoTableActionsElement {}\n","// NG2\nimport { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n// Vendor\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { ComponentUtils } from './../../../../utils/component-utils/ComponentUtils';\n// APP\nimport { BaseRenderer } from './../base-renderer/BaseRenderer';\n\n@Component({\n  selector: 'novo-table-cell',\n  template: `\n    <div [ngSwitch]=\"column._type\">\n      <span #container></span>\n      <date-cell *ngSwitchCase=\"'date'\" [value]=\"value\"></date-cell>\n      <a *ngSwitchCase=\"'link'\" (click)=\"onClick($event)\">{{ value }}</a> <span *ngSwitchDefault>{{ value }}</span>\n    </div>\n  `,\n})\nexport class TableCell implements OnInit, OnDestroy {\n  @ViewChild('container', { read: ViewContainerRef, static: true })\n  container: ViewContainerRef;\n\n  @Input()\n  column: any;\n  @Input()\n  row: any;\n  @Input()\n  form: FormGroup;\n  @Input()\n  hasEditor: boolean;\n\n  public value: any = '';\n  private valueChangeSubscription: any;\n\n  constructor(private element: ElementRef, private componentUtils: ComponentUtils) {\n    this.element = element;\n    this.componentUtils = componentUtils;\n  }\n\n  ngOnInit() {\n    this.column._type = this.column.type || 'text';\n    if (this.column.renderer) {\n      if (this.column.renderer.prototype instanceof BaseRenderer) {\n        this.column._type = 'custom';\n        const componentRef = this.componentUtils.append(this.column.renderer, this.container) as any;\n        componentRef.instance.meta = this.column;\n        componentRef.instance.data = this.row;\n        componentRef.instance.value = this.form && this.hasEditor ? this.form.value[this.column.name] : this.row[this.column.name];\n        // TODO - save ref to this and update in the valueChanges below!!\n      } else {\n        // TODO - wtf to do here?\n        this.value = this.column.renderer(this.row);\n      }\n    } else {\n      this.value = this.form && this.hasEditor ? this.form.value[this.column.name] : this.row[this.column.name];\n    }\n\n    if (this.form && this.hasEditor) {\n      this.valueChangeSubscription = this.form.valueChanges.pipe(debounceTime(300), distinctUntilChanged()).subscribe((value) => {\n        this.value = value[this.column.name];\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n\n  onClick(event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (this.column.onClick) {\n      this.column.onClick(this.row);\n    }\n  }\n}\n","// NG2\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { Key } from 'projects/novo-elements/src/utils';\nimport { Helpers } from './../../../../utils/Helpers';\n\n@Directive({\n  selector: '[novoTableFilter]',\n})\nexport class TableFilter implements OnInit, OnChanges {\n  @Input('novoTableFilter')\n  config: any;\n  @Output()\n  onFilterChange: EventEmitter<any> = new EventEmitter();\n\n  filterThrottle: any;\n\n  constructor(private element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit() {\n    this.ngOnChanges();\n  }\n\n  ngOnChanges(changes?: SimpleChanges) {\n    let label = '';\n    if (this.config.freetextFilter) {\n      label = this.config.freetextFilter;\n    } else if (this.config.filter) {\n      label = this.config.filter;\n    }\n    this.renderer.setProperty(this.element, 'value', label);\n  }\n\n  @HostListener('keydown', ['$event'])\n  public onChangeFilter(event: KeyboardEvent) {\n    clearTimeout(this.filterThrottle);\n    if (Key.Enter === event.key) {\n      this.config.filter = (event.target as any).value;\n      this.onFilterChange.emit({ filtering: this.config });\n    } else {\n      this.filterThrottle = setTimeout(() => {\n        this.config.filter = (event.target as any).value;\n        this.onFilterChange.emit({ filtering: this.config });\n      }, 300);\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  public onClick(event) {\n    Helpers.swallowEvent(event);\n  }\n}\n","// NG2\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'novo-table-footer',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoTableFooterElement {}\n","// NG2\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'novo-table-header',\n  template: '<ng-content></ng-content>',\n})\nexport class NovoTableHeaderElement {}\n","// NG2\nimport { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\n// App\nimport { Helpers } from '../../../../utils/Helpers';\n\n@Directive({\n  selector: '[novoThOrderable]',\n  host: {\n    '(dragstart)': 'onDragStart($event)',\n    '(dragover)': 'onDragOver($event)',\n    '(dragenter)': 'onDragEnter($event)',\n    '(dragleave)': 'onDragLeave($event)',\n    '(dragend)': 'onDragEnd($event)',\n    '(drop)': 'onDrop($event)',\n  },\n})\nexport class ThOrderable implements OnInit {\n  @Input('novoThOrderable')\n  column: any;\n  @Output()\n  onOrderChange: EventEmitter<any> = new EventEmitter();\n\n  table: any;\n  clone: any;\n  target: any;\n\n  constructor(private element: ElementRef) {\n    this.element = element;\n  }\n\n  get index() {\n    let index: number = null;\n    if (this.element.nativeElement && this.element.nativeElement.parentNode) {\n      const children: Array<any> = Array.prototype.slice.call(this.element.nativeElement.parentNode.children);\n      index = children.indexOf(this.element.nativeElement);\n    }\n    return index;\n  }\n\n  ngOnInit() {\n    if (this.column.ordering) {\n      this.element.nativeElement.setAttribute('draggable', true);\n      this.table = this.findTable(this.element.nativeElement);\n    }\n  }\n\n  onDragStart(event?: any) {\n    if (this.column.ordering) {\n      this.element.nativeElement.classList.add('dragging');\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/plain', JSON.stringify(this.column));\n\n      this.clone = this.table.cloneNode(true);\n      this.clone.style.position = 'absolute';\n      this.clone.style.left = '100%';\n      this.clone.style.width = '150px';\n      this.deleteColumns(this.clone);\n      document.body.appendChild(this.clone);\n      event.dataTransfer.setDragImage(this.clone, 75, 30);\n    }\n  }\n\n  deleteColumns(table: { rows: Array<any>; deleteRow: Function }) {\n    // TODO: `table` should be immutable and this method should return the modified data to its caller\n    if (table.rows.length > 0) {\n      const allRows = table.rows;\n      for (let i = 0; i < allRows.length; i++) {\n        if (i > 10) {\n          table.deleteRow(-1);\n        } else {\n          const cellLength = allRows[i].cells.length;\n          for (let c = 0; c < cellLength; c++) {\n            if (c < this.index) {\n              allRows[i].deleteCell(0);\n            } else if (c > this.index) {\n              allRows[i].deleteCell(-1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  findTable(start) {\n    let htmlElementNode = start;\n    while (htmlElementNode) {\n      htmlElementNode = htmlElementNode.parentNode;\n      if (htmlElementNode && htmlElementNode.tagName.toLowerCase() === 'table') {\n        return htmlElementNode;\n      }\n    }\n    return undefined;\n  }\n\n  onDrag(event?: any) {\n    Helpers.swallowEvent(event);\n    return false;\n  }\n\n  onDragEnd(event?: any) {\n    Helpers.swallowEvent(event);\n    this.element.nativeElement.classList.remove('over');\n    this.element.nativeElement.classList.remove('dragging');\n    document.body.removeChild(this.clone);\n    return false;\n  }\n\n  onDrop(event?: any) {\n    Helpers.swallowEvent(event);\n    this.element.nativeElement.classList.remove('over');\n    const data = JSON.parse(event.dataTransfer.getData('text/plain'));\n\n    this.onOrderChange.emit({\n      first: data,\n      second: this.column,\n    });\n\n    return false;\n  }\n\n  onDragOver(event: { preventDefault: Function; dataTransfer: { dropEffect: string }; stopPropagation: Function }): boolean {\n    Helpers.swallowEvent(event);\n    event.dataTransfer.dropEffect = 'move';\n    return false;\n  }\n\n  onDragEnter(event: any) {\n    this.element.nativeElement.classList.add('over');\n    this.target = event.target;\n  }\n\n  onDragLeave(event?: any) {\n    this.element.nativeElement.classList.remove('over');\n  }\n}\n","// NG2\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[novoThSortable]',\n  host: {\n    '(click)': 'onToggleSort($event)',\n  },\n})\nexport class ThSortable {\n  @Input('novoThSortable')\n  config: any;\n  @Input()\n  column: any;\n  @Output()\n  onSortChange: EventEmitter<any> = new EventEmitter();\n\n  onToggleSort(event) {\n    if (event) {\n      // event.preventDefault();\n    }\n\n    if (this.config && this.column && this.config.sorting !== false && this.column.sorting !== false) {\n      switch (this.column.sort) {\n        case 'asc':\n          this.column.sort = 'desc';\n          break;\n        default:\n          this.column.sort = 'asc';\n          break;\n      }\n\n      this.onSortChange.emit(this.column);\n    }\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Component, DoCheck, ElementRef, EventEmitter, Input, Output, QueryList, ViewChildren } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup } from '@angular/forms';\n// Vendor\nimport * as dateFns from 'date-fns';\nimport { debounceTime } from 'rxjs/operators';\n// APP\nimport { CollectionEvent } from '../../services/data-provider/CollectionEvent';\nimport { PagedArrayCollection } from '../../services/data-provider/PagedArrayCollection';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { FormUtils } from '../../utils/form-utils/FormUtils';\nimport { Helpers } from '../../utils/Helpers';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { ControlFactory, ReadOnlyControl } from './../form/FormControls';\n\nexport interface NovoTableConfig {\n  // Paging config\n  paging?: {\n    current: number; // current page\n    itemsPerPage: number; // items per page\n    onPageChange: Function; // function to handle page changing\n    rowOptions?: { value: number; label: string }[]; // page options\n    disablePageSelection?: boolean; // disables the pages from being selected\n  };\n  // Footer config (total footer)\n  footers?: Array<{\n    columns: Array<string>; // string array of columns to total\n    method: string; // method to use for the footer, SUM | AVG, defaults to SUM\n    labelColumn: string; // column to use as the \"total\" label\n    label: string; // label to use in the \"total\" label\n  }>;\n  // TODO: When these types are enforced as `boolean | Function`, there's a lint error. That's a bug.\n  filtering?: boolean | any; // Turn on filtering for the table, boolean or function for filtering callback\n  sorting?: boolean | any; // Turn on sorting for the table, boolean or function for sorting callback\n  ordering?: boolean | Function; // Turn on ordering for the table, boolean or function for ordering callback\n  resizing?: boolean | Function; // Turn on resizing for the table, boolean or function for resizing callback\n  rowSelectionStyle?: string; // Row selection style, checkbox or row\n  rowSelect?: boolean; // Turn on row selection\n  hasDetails?: boolean; // Turn on details row for the table\n  detailsRenderer?: any; // Renderer/component for the details row\n  expandAll?: boolean; // should All Rows be expanded by default\n  selectAllEnabled?: boolean; // Allows the table, while in selection mode to have a select all at the top\n}\n\n// TODO - support (1) clicking cell to edit, (2) clicking row to edit, (3) button to trigger full table to edit\nexport enum NovoTableMode {\n  VIEW = 1,\n  EDIT = 2,\n}\n\n@Component({\n  selector: 'novo-table',\n  host: {\n    class: 'novo-table',\n    '[attr.theme]': 'theme',\n    '[class.editing]': 'mode === NovoTableMode.EDIT',\n    '[class.novo-table-loading]': 'loading',\n  },\n  // directives: [],\n  template: `\n    <header *ngIf=\"columns.length\">\n      <ng-content select=\"novo-table-header\"></ng-content>\n      <div class=\"header-actions\">\n        <novo-pagination\n          *ngIf=\"config.paging && !(dataProvider.isEmpty() && !dataProvider.isFiltered())\"\n          [rowOptions]=\"config.paging.rowOptions\"\n          [disablePageSelection]=\"config.paging.disablePageSelection\"\n          [(page)]=\"dataProvider.page\"\n          [(itemsPerPage)]=\"dataProvider.pageSize\"\n          [totalItems]=\"dataProvider.total\"\n          (onPageChange)=\"onPageChange($event)\"\n        >\n        </novo-pagination>\n        <ng-content select=\"novo-table-actions\"></ng-content>\n      </div>\n    </header>\n    <div class=\"novo-table-loading-overlay\" *ngIf=\"loading || dataProvider.isLoading()\">\n      <novo-loading></novo-loading>\n    </div>\n    <novo-toast *ngIf=\"toast\" [theme]=\"toast?.theme\" [icon]=\"toast?.icon\" [message]=\"toast?.message\"></novo-toast>\n    <div class=\"table-container\" *ngIf=\"!grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast\">\n      <novo-form hideHeader=\"true\" [form]=\"tableForm\">\n        <table class=\"table table-striped dataTable\" [class.table-details]=\"config.hasDetails\" role=\"grid\">\n          <!-- skipSortAndFilterClear is a hack right now, will be removed once Canvas is refactored -->\n          <thead *ngIf=\"columns.length && (!dataProvider.isEmpty() || dataProvider.isFiltered() || skipSortAndFilterClear || editing)\">\n            <tr role=\"row\">\n              <!-- DETAILS -->\n              <th class=\"row-actions\" *ngIf=\"config.hasDetails\">\n                <novo-button\n                  theme=\"icon\"\n                  icon=\"next\"\n                  (click)=\"expandAllOnPage(config.expandAll)\"\n                  *ngIf=\"!config.expandAll\"\n                  data-automation-id=\"expand-all\"\n                ></novo-button>\n                <novo-button\n                  theme=\"icon\"\n                  icon=\"sort-desc\"\n                  (click)=\"expandAllOnPage(config.expandAll)\"\n                  *ngIf=\"config.expandAll\"\n                  data-automation-id=\"collapse-all\"\n                ></novo-button>\n              </th>\n              <!-- CHECKBOX -->\n              <th class=\"row-actions checkbox mass-action\" *ngIf=\"config.rowSelectionStyle === 'checkbox'\">\n                <novo-checkbox\n                  [(ngModel)]=\"master\"\n                  [indeterminate]=\"pageSelected.length > 0 && pageSelected.length < pagedData.length\"\n                  (ngModelChange)=\"selectPage($event)\"\n                  data-automation-id=\"select-all-checkbox\"\n                  [tooltip]=\"master ? labels.deselectAll : labels.selectAllOnPage\"\n                  tooltipPosition=\"right\"\n                ></novo-checkbox>\n              </th>\n              <!-- TABLE HEADERS -->\n              <th\n                *ngFor=\"let column of columns\"\n                [ngClass]=\"{\n                  'mass-action': config?.rowSelectionStyle === 'checkbox',\n                  actions: column?.actions?.items?.length > 0,\n                  preview: column?.name === 'preview'\n                }\"\n                [novoThOrderable]=\"column\"\n                (onOrderChange)=\"onOrderChange($event)\"\n                [hidden]=\"isColumnHidden(column)\"\n              >\n                <div class=\"th-group\" [attr.data-automation-id]=\"column.id || column.name\" *ngIf=\"!column.hideHeader\">\n                  <!-- LABEL & SORT ARROWS -->\n                  <div\n                    class=\"th-title\"\n                    [ngClass]=\"config.sorting !== false && column.sorting !== false ? 'sortable' : ''\"\n                    [novoThSortable]=\"config\"\n                    [column]=\"column\"\n                    (onSortChange)=\"onSortChange($event)\"\n                  >\n                    <label>{{ column.title || column.label }}</label>\n                    <div\n                      class=\"table-sort-icons\"\n                      tooltipPosition=\"bottom\"\n                      [tooltip]=\"labels.sort\"\n                      [ngClass]=\"column.sort || ''\"\n                      *ngIf=\"config.sorting !== false && column.sorting !== false\"\n                    >\n                      <i class=\"bhi-arrow-up\"></i>\n                      <i class=\"bhi-arrow-down\"></i>\n                    </div>\n                  </div>\n                  <!-- FILTER DROP-DOWN -->\n                  <novo-dropdown\n                    side=\"default\"\n                    *ngIf=\"config.filtering !== false && column.filtering !== false\"\n                    class=\"column-filters\"\n                    (toggled)=\"onDropdownToggled($event, column.name)\"\n                    parentScrollSelector=\".table-container\"\n                    containerClass=\"table-dropdown\"\n                  >\n                    <novo-button\n                      type=\"button\"\n                      theme=\"icon\"\n                      icon=\"filter\"\n                      tooltipPosition=\"bottom\"\n                      [tooltip]=\"labels.filters\"\n                      [class.filtered]=\"column.filter || column.filter === false\"\n                      (click)=\"focusInput()\"\n                    ></novo-button>\n                    <!-- FILTER OPTIONS LIST -->\n                    <novo-optgroup\n                      *ngIf=\"\n                        (column?.options?.length || column?.originalOptions?.length) &&\n                        column?.type !== 'date' &&\n                        toggledDropdownMap[column.name]\n                      \"\n                    >\n                      <novo-option class=\"filter-search\" inert>\n                        <div class=\"header\">\n                          <span>{{ labels.filters }}</span>\n                          <novo-button\n                            theme=\"dialogue\"\n                            color=\"negative\"\n                            icon=\"times\"\n                            (click)=\"onFilterClear(column)\"\n                            *ngIf=\"column.filter || column.filter === false\"\n                          >\n                            {{ labels.clear }}\n                          </novo-button>\n                        </div>\n                        <input\n                          type=\"text\"\n                          *ngIf=\"!!column.allowCustomTextOption\"\n                          [attr.id]=\"column.name + '-input'\"\n                          [novoTableFilter]=\"column\"\n                          (onFilterChange)=\"onFilterKeywords($event)\"\n                          [(ngModel)]=\"column.freetextFilter\"\n                          keepFilterFocused\n                          #filterInput\n                        />\n                      </novo-option>\n                      <novo-option\n                        [ngClass]=\"{ active: isFilterActive(column, option) }\"\n                        *ngFor=\"let option of column.options\"\n                        (click)=\"onFilterClick(column, option)\"\n                        [attr.data-automation-id]=\"getOptionDataAutomationId(option)\"\n                      >\n                        <span>{{ option?.label || option }}</span> <i class=\"bhi-check\" *ngIf=\"isFilterActive(column, option)\"></i>\n                      </novo-option>\n                    </novo-optgroup>\n                    <!-- FILTER SEARCH INPUT -->\n                    <novo-optgroup *ngIf=\"!(column?.options?.length || column?.originalOptions?.length) && toggledDropdownMap[column.name]\">\n                      <novo-option class=\"filter-search\" inert>\n                        <div class=\"header\">\n                          <span>{{ labels.filters }}</span>\n                          <novo-button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter\">\n                            {{ labels.clear }}\n                          </novo-button>\n                        </div>\n                        <input\n                          type=\"text\"\n                          [attr.id]=\"column.name + '-input'\"\n                          [novoTableFilter]=\"column\"\n                          (onFilterChange)=\"onFilterChange($event)\"\n                          [(ngModel)]=\"column.filter\"\n                          keepFilterFocused\n                          #filterInput\n                        />\n                      </novo-option>\n                    </novo-optgroup>\n                    <!-- FILTER DATE OPTIONS -->\n                    <novo-optgroup *ngIf=\"column?.options?.length && column?.type === 'date' && toggledDropdownMap[column.name]\">\n                      <novo-option class=\"filter-search\" *ngIf=\"!column.calenderShow\" inert>\n                        <div class=\"header\">\n                          <span>{{ labels.filters }}</span>\n                          <novo-button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter\">\n                            {{ labels.clear }}\n                          </novo-button>\n                        </div>\n                      </novo-option>\n                      <novo-option\n                        [class.active]=\"isFilterActive(column, option)\"\n                        *ngFor=\"let option of column.options\"\n                        (click)=\"onFilterClick(column, option)\"\n                        [keepOpen]=\"option.range\"\n                        [hidden]=\"column.calenderShow\"\n                        [attr.data-automation-id]=\"option?.label || option\"\n                      >\n                        {{ option?.label || option }}\n                        <novo-icon novoSuffix color=\"positive\" *ngIf=\"isFilterActive(column, option)\">check</novo-icon>\n                      </novo-option>\n                      <novo-option class=\"calendar-container\" *ngIf=\"column.calenderShow\" keepOpen inert>\n                        <novo-stack>\n                          <div class=\"back-link\" (click)=\"column.calenderShow = false\">\n                            <i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}\n                          </div>\n                          <novo-date-picker\n                            (onSelect)=\"onCalenderSelect(column, $event)\"\n                            [(ngModel)]=\"column.filter\"\n                            mode=\"range\"\n                          ></novo-date-picker>\n                        </novo-stack>\n                      </novo-option>\n                    </novo-optgroup>\n                  </novo-dropdown>\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <!-- TABLE DATA -->\n          <tbody *ngIf=\"!dataProvider.isEmpty() || editing\">\n            <tr\n              class=\"table-selection-row\"\n              *ngIf=\"config.rowSelectionStyle === 'checkbox' && showSelectAllMessage && config.selectAllEnabled\"\n              data-automation-id=\"table-selection-row\"\n            >\n              <td colspan=\"100%\">\n                {{ labels.selectedRecords(selected.length) }}\n                <a (click)=\"selectAll(true)\" data-automation-id=\"all-matching-records\">{{ labels.totalRecords(dataProvider.total) }}</a>\n              </td>\n            </tr>\n            <ng-template ngFor let-row=\"$implicit\" let-i=\"index\" [ngForOf]=\"rows\">\n              <tr\n                class=\"table-row\"\n                [ngClass]=\"row.customClass || ''\"\n                [id]=\"name + '-' + row[rowIdentifier]\"\n                [attr.data-automation-id]=\"row.id\"\n                (click)=\"rowClickHandler(row)\"\n                [class.active]=\"row.id === activeId\"\n              >\n                <td class=\"row-actions\" *ngIf=\"config.hasDetails\">\n                  <novo-button theme=\"icon\" icon=\"next\" (click)=\"row._expanded = !row._expanded\" *ngIf=\"!row._expanded\"></novo-button>\n                  <novo-button theme=\"icon\" icon=\"sort-desc\" (click)=\"row._expanded = !row._expanded\" *ngIf=\"row._expanded\"></novo-button>\n                </td>\n                <td class=\"row-actions checkbox\" *ngIf=\"config.rowSelectionStyle === 'checkbox'\">\n                  <novo-checkbox\n                    [(ngModel)]=\"row._selected\"\n                    (ngModelChange)=\"rowSelectHandler(row)\"\n                    data-automation-id=\"select-row-checkbox\"\n                  ></novo-checkbox>\n                </td>\n                <td\n                  *ngFor=\"let column of columns\"\n                  [attr.data-automation-id]=\"column.id || column.name\"\n                  [class.novo-form-row]=\"editable\"\n                  [hidden]=\"isColumnHidden(column)\"\n                >\n                  <novo-table-cell\n                    *ngIf=\"row._editing && !row._editing[column.name]\"\n                    [hasEditor]=\"editable\"\n                    [column]=\"column\"\n                    [row]=\"row\"\n                    [form]=\"getRowControlForm(i)\"\n                  ></novo-table-cell>\n                  <novo-control\n                    *ngIf=\"row._editing && row._editing[column.name]\"\n                    condensed=\"true\"\n                    [form]=\"getRowControlForm(i)\"\n                    [control]=\"row.controls[column.name]\"\n                  ></novo-control>\n                </td>\n              </tr>\n              <tr\n                class=\"details-row\"\n                *ngIf=\"config.hasDetails\"\n                [hidden]=\"!row._expanded\"\n                [attr.data-automation-id]=\"'details-row-' + row.id\"\n              >\n                <td class=\"row-actions\"></td>\n                <td [attr.colspan]=\"config.rowSelectionStyle === 'checkbox' ? columns.length + 1 : columns.length\">\n                  <novo-row-details [data]=\"row\" [renderer]=\"config.detailsRenderer\"></novo-row-details>\n                </td>\n              </tr>\n            </ng-template>\n          </tbody>\n          <!-- NO TABLE DATA PLACEHOLDER -->\n          <tbody\n            class=\"table-message\"\n            *ngIf=\"dataProvider.isEmpty() && !dataProvider.isFiltered() && !editing\"\n            data-automation-id=\"empty-table\"\n          >\n            <tr>\n              <td colspan=\"100%\">\n                <div #emptymessage><ng-content select=\"[table-empty-message]\"></ng-content></div>\n                <div class=\"table-empty-message\" *ngIf=\"emptymessage.childNodes.length == 0\">\n                  <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <!-- NO MATCHING RECORDS -->\n          <tbody class=\"table-message\" *ngIf=\"dataProvider.isEmpty() && dataProvider.isFiltered()\" data-automation-id=\"empty-table\">\n            <tr>\n              <td colspan=\"100%\">\n                <div #nomatchmessage><ng-content select=\"[table-no-matching-records-message]\"></ng-content></div>\n                <div class=\"no-matching-records\" *ngIf=\"nomatchmessage.childNodes.length == 0\">\n                  <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <!-- TABLE DATA ERROR PLACEHOLDER -->\n          <tbody class=\"table-message\" *ngIf=\"dataProvider.hasErrors()\" data-automation-id=\"table-errors\">\n            <tr>\n              <td colspan=\"100%\">\n                <div #errormessage><ng-content select=\"[table-error-message]\"></ng-content></div>\n                <div class=\"table-error-message\" *ngIf=\"errormessage.childNodes.length == 0\">\n                  <h4><i class=\"bhi-caution\"></i> {{ labels.erroredTableMessage }}</h4>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot *ngIf=\"!config.footers\" [ngClass]=\"dataProvider.length % 2 == 0 ? 'odd' : 'even'\">\n            <tr>\n              <td colspan=\"100%\">\n                <ng-content select=\"novo-table-footer\"></ng-content>\n              </td>\n            </tr>\n          </tfoot>\n          <tfoot *ngFor=\"let footer of footers; let i = index\" class=\"novo-table-total-footer\">\n            <tr>\n              <td *ngFor=\"let column of columns\" [attr.data-automation-id]=\"(column.id || column.name) + '-total-' + i\">\n                {{ footer[column.name] }}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </novo-form>\n    </div>\n  `,\n})\nexport class NovoTableElement implements DoCheck {\n  @ViewChildren('filterInput', { read: ElementRef })\n  filterInputs: QueryList<ElementRef>;\n\n  @Input()\n  config: NovoTableConfig = {};\n  @Input()\n  columns: Array<any> = [];\n  @Input()\n  theme: string;\n  @Input()\n  skipSortAndFilterClear: boolean = false;\n  @Input()\n  mode: NovoTableMode = NovoTableMode.VIEW;\n  @Input()\n  editable: boolean = false;\n  @Input()\n  rowIdentifier: string = 'id';\n  @Input()\n  name: string = 'table';\n\n  @Output()\n  onRowClick: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onRowSelect: EventEmitter<any> = new EventEmitter();\n  @Output()\n  onTableChange: EventEmitter<any> = new EventEmitter();\n\n  _dataProvider: PagedArrayCollection<any>;\n  _rows: Array<any> = [];\n  selected: Array<any> = [];\n  activeId: number = 0;\n  master: boolean = false;\n  expandAll: boolean = false;\n  indeterminate: boolean = false;\n  lastPage: number = 0;\n  selectedPageCount: number = 0;\n  showSelectAllMessage: boolean = false;\n  currentSortColumn: any;\n  pagedData: Array<any> = [];\n  pageSelected: any;\n  // Map to keep track of what dropdowns are toggled\n  // Used to properly *ngIf the <novo-optgroup> so that the keepFilterFocused Directive\n  // will properly fire the ngAfterViewInit event\n  toggledDropdownMap: any = {};\n  public NovoTableMode = NovoTableMode;\n  public tableForm: FormGroup = new FormGroup({});\n  public toast: { theme: string; icon: string; message: string };\n  public footers = [];\n  public grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast: boolean = false;\n  public loading: boolean = false;\n\n  @Input()\n  set rows(rows: Array<any>) {\n    this.dataProvider = rows;\n    if (rows && rows.length > 0) {\n      this.setupColumnDefaults();\n    }\n    // this is a temporary/hacky fix until async dataloading is handled within the table\n    if (!this.skipSortAndFilterClear) {\n      this.clearAllSortAndFilters();\n    }\n  }\n\n  get rows() {\n    return this._rows;\n  }\n\n  @Input()\n  set dataProvider(dp: any) {\n    this._dataProvider = Array.isArray(dp) ? new PagedArrayCollection<any>(dp) : dp;\n    this._dataProvider.dataChange.pipe(debounceTime(100)).subscribe((event: CollectionEvent) => {\n      switch (event.type) {\n        case CollectionEvent.CHANGE:\n          this._rows = event.data;\n          // Setup form\n          this.tableForm = this.builder.group({\n            rows: this.builder.array([]),\n          });\n          // Remove all selection on sort change if selection is on\n          if (this.config.rowSelectionStyle === 'checkbox') {\n            this.pagedData = event.data;\n            this.pageSelected = this.pagedData.filter((r) => r._selected);\n            this.rowSelectHandler();\n          }\n          // Find that columns we might need to sum up via the footer\n          let columnsToSum = [];\n          const columnSums = {};\n          if (this.config.footers) {\n            this.config.footers.forEach((config) => {\n              columnsToSum.push(...config.columns);\n            });\n            // Only have unique columns, filter out duplicates\n            columnsToSum = columnsToSum.filter((item, index, array) => array.indexOf(item) === index);\n          }\n          // Make a form for each row\n          const tableFormRows = this.tableForm.controls.rows as FormArray;\n          this._rows.forEach((row, index) => {\n            const rowControls = [];\n            row.controls = {};\n            row._editing = {};\n            row._expanded = this.config.expandAll;\n            row.rowId = this._rows.length;\n            this.columns.forEach((column) => {\n              // Use the control passed or use a ReadOnlyControl so that the form has the values\n              const control = column.editorConfig\n                ? ControlFactory.create(column.editorType, column.editorConfig)\n                : new ReadOnlyControl({ key: column.name });\n              row.controls[column.name] = control;\n              rowControls.push(control);\n            });\n            this.formUtils.setInitialValues(rowControls, row, false);\n            tableFormRows.push(this.formUtils.toFormGroup(rowControls));\n            // Setup the total footer if configured\n            // Array of keys to total\n            if (columnsToSum.length !== 0) {\n              columnsToSum.forEach((column) => {\n                if (Helpers.isBlank(columnSums[column])) {\n                  columnSums[column] = 0;\n                }\n                columnSums[column] += row[column];\n              });\n            }\n          });\n          if (this.mode === NovoTableMode.EDIT) {\n            this.setTableEdit();\n          }\n          // Setup the footers (if any)\n          if (this.config.footers) {\n            this.footers = [];\n            this.config.footers.forEach((footerConfig, footerConfigIndex) => {\n              const footer = {};\n              footer[footerConfig.labelColumn] = footerConfig.label;\n              footerConfig.columns.forEach((column) => {\n                if (footerConfig.method === 'AVG' && this._rows.length !== 0) {\n                  footer[column] = columnSums[column] / this._rows.length;\n                } else {\n                  footer[column] = columnSums[column];\n                }\n              });\n              this.footers.push(footer);\n            });\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    if (this.config.paging) {\n      this._dataProvider.page = this.config.paging.current;\n      this._dataProvider.pageSize = this.config.paging.itemsPerPage;\n    } else {\n      // Paging turned off, return basically all of the data\n      this._dataProvider.page = 1;\n      this._dataProvider.pageSize = 500;\n    }\n    if (dp && dp.length > 0) {\n      this.setupColumnDefaults();\n    }\n    this._dataProvider.refresh();\n  }\n  get dataProvider() {\n    return this._dataProvider;\n  }\n\n  get editing() {\n    return this.mode === NovoTableMode.EDIT;\n  }\n\n  get formValue() {\n    return this.tableForm.value;\n  }\n\n  constructor(public labels: NovoLabelService, private formUtils: FormUtils, private builder: FormBuilder, private cdr: ChangeDetectorRef) {\n    notify('[Deprecated]: The table is deprecated. Please migrate to novo-data-tables!');\n  }\n\n  onDropdownToggled(event, column): void {\n    this.toggledDropdownMap[column] = event;\n    this.cdr.markForCheck();\n  }\n\n  focusInput(): void {\n    if (this.filterInputs && this.filterInputs.length) {\n      this.filterInputs.forEach((filterInput) => {\n        if (filterInput.nativeElement) {\n          setTimeout(() => filterInput.nativeElement.focus(), 0);\n        }\n      });\n    }\n  }\n\n  onPageChange(event) {\n    // this.dataProvider.page = event.page;\n    // this.dataProvider.pageSize = event.itemsPerPage;\n  }\n\n  getOptionDataAutomationId(option) {\n    if (!Helpers.isBlank(option.value)) {\n      return option.value;\n    }\n    return option;\n  }\n\n  setupColumnDefaults() {\n    // Check columns for cell option types\n    this.columns.forEach((column) => {\n      if (column && column.type) {\n        switch (column.type) {\n          case 'date':\n            // Set options based on dates if there are none\n            column.options = column.options || this.getDefaultOptions(column);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n  }\n\n  ngDoCheck() {\n    if (this.config.paging && this.config.paging.current !== this.lastPage) {\n      this.rowSelectHandler();\n      this.showSelectAllMessage = false;\n    }\n    this.lastPage = this.config.paging ? this.config.paging.current : 1;\n  }\n\n  getPageStart(): number {\n    return this.config.paging ? (this.dataProvider.page - 1) * this.dataProvider.pageSize : 0;\n  }\n\n  getPageEnd(): number {\n    return this.config.paging && this.dataProvider.pageSize > -1 ? this.getPageStart() + this.dataProvider.pageSize : this.rows.length;\n  }\n\n  getRowControlForm(i): AbstractControl {\n    const tableFormRows = this.tableForm.controls.rows as FormArray;\n    return tableFormRows.controls[i];\n  }\n\n  onFilterClick(column, filter) {\n    if (filter.range && !column.calendarShow) {\n      column.calenderShow = true;\n      return;\n    }\n    if (Array.isArray(column.filter) && column.multiple) {\n      if (~column.filter.indexOf(filter)) {\n        // Remove filter\n        column.filter.splice(column.filter.indexOf(filter), 1);\n        if (filter.range) {\n          column.calenderShow = false;\n        }\n\n        if (column.filter.length === 0) {\n          column.filter = null;\n        }\n      } else {\n        // Add filter\n        column.filter.push(filter);\n      }\n    } else if (column.multiple) {\n      column.filter = new Array();\n      column.filter.push(Helpers.isBlank(filter.value) ? filter : filter.value);\n    } else {\n      column.filter = Helpers.isBlank(filter.value) ? filter : filter.value;\n    }\n    this.onFilterChange();\n  }\n\n  onFilterClear(column: any): void {\n    setTimeout(() => {\n      column.filter = null;\n      column.freetextFilter = null;\n      this.onFilterChange();\n      if (column.originalOptions) {\n        column.options = column.originalOptions;\n      }\n    });\n  }\n\n  clearAllSortAndFilters() {\n    if (this.config.filtering) {\n      this.columns.forEach((column) => {\n        column.filter = null;\n        column.sort = null;\n      });\n    }\n  }\n\n  /**\n   * @description This method updates the row data to reflect the active filters.\n   */\n  onFilterChange(event?: Event) {\n    if (this.config.filtering) {\n      // Array of filters\n      const filters = this.columns.filter((col) => !Helpers.isEmpty(col.filter));\n      if (filters.length) {\n        let query = {};\n        for (const column of filters) {\n          if (Helpers.isFunction(column.match)) {\n            query[column.name] = (value, record) => {\n              return column.match(record, column.filter);\n            };\n          } else if (column.preFilter && Helpers.isFunction(column.preFilter)) {\n            query = Object.assign({}, query, column.preFilter(this.escapeCharacters(column.filter)));\n          } else if (Array.isArray(column.filter)) {\n            // The filters are an array (multi-select), check value\n            let options = column.filter;\n            // We have an array of {value: '', labels: ''}\n            if (options[0].value || options[0].label) {\n              options = column.filter.map((opt) => opt.value);\n            }\n            query[column.name] = { any: options };\n          } else if (column.type && column.type === 'date') {\n            if (column.filter.startDate && column.filter.endDate) {\n              query[column.name] = {\n                min: dateFns.startOfDay(column.filter.startDate),\n                max: dateFns.startOfDay(dateFns.addDays(dateFns.startOfDay(column.filter.endDate), 1)),\n              };\n            } else {\n              query[column.name] = {\n                min: column.filter.min ? dateFns.addDays(dateFns.startOfToday(), column.filter.min) : dateFns.startOfToday(),\n                max: column.filter.max ? dateFns.addDays(dateFns.startOfTomorrow(), column.filter.max) : dateFns.startOfTomorrow(),\n              };\n            }\n          } else {\n            query[column.name] = column.filter;\n          }\n        }\n        if (Helpers.isFunction(this.config.filtering)) {\n          this.config.filtering(query);\n        } else {\n          this._dataProvider.filter = query;\n        }\n      } else {\n        this._dataProvider.filter = {};\n      }\n      // Trickle down to keep sort\n      // this.onSortChange(this.currentSortColumn);\n      this.fireTableChangeEvent();\n\n      // If paging, reset page\n      if (this.config.paging) {\n        this.config.paging.current = 1;\n      }\n      // Remove all selection on sort change if selection is on\n      if (this.config.rowSelectionStyle === 'checkbox') {\n        this.selectAll(false);\n      }\n    }\n  }\n\n  escapeCharacters(filter) {\n    if (typeof filter === 'string') {\n      return filter.replace(/'/g, \"''\");\n    }\n    return filter;\n  }\n\n  isFilterActive(column, filter): boolean {\n    // TODO: This needs to be refactored\n    let isActive = false;\n    if (column && !Helpers.isBlank(column.filter) && !Helpers.isBlank(filter)) {\n      if (Array.isArray(column.filter)) {\n        if (typeof filter !== 'string') {\n          isActive = column.filter.some((item) => {\n            return item.label === filter.label;\n          });\n        } else {\n          isActive = column.filter.includes(filter);\n        }\n      } else {\n        if (typeof column.filter === typeof filter) {\n          isActive = column.filter === filter;\n        } else {\n          isActive = column.filter === filter.value;\n        }\n      }\n    }\n    return isActive;\n  }\n\n  onSortChange(column) {\n    this.currentSortColumn = column;\n    const sortedColumns: any = this.columns.filter((thisColumn) => {\n      return thisColumn.sort && thisColumn !== this.currentSortColumn;\n    });\n    for (const sortedColumn of sortedColumns) {\n      sortedColumn.sort = null;\n    }\n\n    if (column) {\n      if (Helpers.isFunction(this.config.sorting)) {\n        this.config.sorting();\n      } else if (Helpers.isFunction(column.preSort)) {\n        this._dataProvider.sort = [].concat(column.preSort(column));\n      } else {\n        this._dataProvider.sort = [{ field: column.compare || column.name, reverse: column.sort === 'desc' }];\n      }\n    }\n\n    // Fire table change event\n    // this.fireTableChangeEvent();\n\n    // If paging, reset page\n    if (this.config.paging) {\n      this.config.paging.current = 1;\n    }\n\n    // Remove all selection on sort change if selection is on\n    if (this.config.rowSelectionStyle === 'checkbox') {\n      this.selectAll(false);\n    }\n  }\n\n  fireTableChangeEvent() {\n    // Construct a table change object\n    const onTableChange: any = {};\n    const filters = this.columns.filter((col) => col.filter && col.filter.length);\n    onTableChange.filter = filters.length ? filters : false;\n    onTableChange.sort = this.currentSortColumn ? this.currentSortColumn : false;\n    onTableChange.rows = this.rows;\n\n    // Emit event\n    this.onTableChange.emit(onTableChange);\n  }\n\n  findColumnIndex(value) {\n    for (let i = 0; i < this.columns.length; i += 1) {\n      if (this.columns[i].name === value) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  onOrderChange(event) {\n    const oldIndex = this.findColumnIndex(event.first.name);\n    const newIndex = this.findColumnIndex(event.second.name);\n    this.columns.splice(newIndex, 0, this.columns.splice(oldIndex, 1)[0]);\n    this.onSortChange(this.currentSortColumn);\n  }\n\n  expandAllOnPage(expanded) {\n    this.config.expandAll = !expanded;\n    for (const row of this.dataProvider.list) {\n      row._expanded = this.config.expandAll;\n    }\n  }\n\n  selectPage(data?: any) {\n    if (!this.master) {\n      this.selectAll(false);\n      // Only show the select all message when there is only one new page selected at a time\n      this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n      this.showSelectAllMessage = false;\n    } else {\n      this.indeterminate = false;\n      // this.pagedData = this.rows.slice(this.getPageStart(), this.getPageEnd());\n      for (const row of this.pagedData) {\n        row._selected = this.master;\n      }\n      this.selected = this.dataProvider.list.filter((r) => r._selected);\n      this.pageSelected = this.pagedData.filter((r) => r._selected);\n      this.emitSelected(this.selected);\n      // Only show the select all message when there is only one new page selected at a time\n      this.selectedPageCount++;\n      this.showSelectAllMessage = this.selectedPageCount === 1 && this.selected.length !== this.dataProvider.total;\n    }\n    this.cdr.detectChanges();\n  }\n\n  selectAll(value) {\n    this.master = value;\n    this.indeterminate = false;\n    for (const row of this.dataProvider.list) {\n      row._selected = value;\n    }\n    this.selected = value ? this.dataProvider.list : [];\n    this.showSelectAllMessage = false;\n    this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n    this.rowSelectHandler();\n  }\n\n  rowSelectHandler(data?: any) {\n    // this.pagedData = this.rows.slice(this.getPageStart(), this.getPageEnd());\n    this.pageSelected = this.pagedData.filter((r) => r._selected);\n    this.selected = this.dataProvider.list.filter((r) => r._selected);\n    if (this.pageSelected.length === 0) {\n      this.master = false;\n      this.indeterminate = false;\n    } else if (this.pageSelected.length === this.pagedData.length) {\n      this.master = true;\n      this.indeterminate = false;\n    } else {\n      this.master = false;\n      this.indeterminate = true;\n\n      // Breaking the selected page count\n      this.showSelectAllMessage = false;\n      this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n    }\n    this.emitSelected(this.selected);\n  }\n\n  emitSelected(selected) {\n    this.onRowSelect.emit({ length: selected.length, selected });\n  }\n\n  rowClickHandler(row) {\n    if (this.config.rowSelect) {\n      this.activeId = row.id || 0;\n      this.onRowClick.emit(row);\n    }\n  }\n\n  getDefaultOptions(column) {\n    // TODO - needs to come from label service - https://github.com/bullhorn/novo-elements/issues/116\n    const opts: any[] = [\n      { label: this.labels.past1Day, min: -1, max: 0 },\n      { label: this.labels.past7Days, min: -7, max: 0 },\n      { label: this.labels.past30Days, min: -30, max: 0 },\n      { label: this.labels.past90Days, min: -90, max: 0 },\n      { label: this.labels.past1Year, min: -366, max: 0 },\n      { label: this.labels.next1Day, min: 0, max: 1 },\n      { label: this.labels.next7Days, min: 0, max: 7 },\n      { label: this.labels.next30Days, min: 0, max: 30 },\n      { label: this.labels.next90Days, min: 0, max: 90 },\n      { label: this.labels.next1Year, min: 0, max: 366 },\n    ];\n\n    if (column && column.range) {\n      opts.push({\n        label: this.labels.customDateRange,\n        range: true,\n      });\n    }\n    return opts;\n  }\n\n  onCalenderSelect(column, event): void {\n    setTimeout(() => {\n      if (event.startDate && event.endDate) {\n        this.onFilterChange();\n      }\n    }, 10);\n  }\n\n  onFilterKeywords(config) {\n    if (config && config.filtering && config.filtering.freetextFilter) {\n      const filterKeywords = config.filtering.freetextFilter.toLowerCase();\n      if (!config.filtering.originalOptions) {\n        config.filtering.originalOptions = config.filtering.options;\n      }\n      const newOptions = config.filtering.originalOptions.filter((option) => {\n        let value = option && option.label ? option.label : option;\n        value = value.toLowerCase() ? value.toLowerCase() : value;\n        if (value === filterKeywords) {\n          return true;\n        } else if (~value.indexOf(filterKeywords) || ~value.indexOf(filterKeywords)) {\n          return true;\n        }\n        return false;\n      });\n      config.filtering.options = newOptions;\n      config.filtering.filter = config.filtering.freetextFilter;\n    } else {\n      config.filtering.options = config.filtering.originalOptions;\n    }\n    this.onFilterChange();\n  }\n\n  /**\n   * @description Sets the Table into EDIT mode, based on the row/column passed you can enter in a few states\n   * (1) setTableEdit() - don't pass any to put the FULL table into edit mode\n   * (2) setTableEdit(1) - pass only row to put that FULL row of the table into edit mode\n   * (3) setTableEdit(1, 1) - pass row and column to put that column of the row of the table into edit mode\n   * @memberOf NovoTableElement\n   */\n  setTableEdit(rowNumber?: number, columnNumber?: number): void {\n    this.mode = NovoTableMode.EDIT;\n    this._dataProvider.edit();\n    this._rows.forEach((row, rowIndex) => {\n      row._editing = row._editing || {};\n      this.columns.forEach((column, columnIndex) => {\n        if (column.viewOnly) {\n          row._editing[column.name] = false;\n        } else if (Helpers.isEmpty(rowNumber) && Helpers.isEmpty(columnNumber)) {\n          row._editing[column.name] = true;\n        } else if (!Helpers.isEmpty(rowNumber) && rowIndex === Number(rowNumber) && Helpers.isEmpty(columnNumber)) {\n          row._editing[column.name] = true;\n        } else if (\n          !Helpers.isEmpty(rowNumber) &&\n          !Helpers.isEmpty(columnNumber) &&\n          rowIndex === Number(rowNumber) &&\n          columnIndex === Number(columnNumber)\n        ) {\n          row._editing[column.name] = true;\n        } else {\n          row._editing[column.name] = false;\n        }\n      });\n    });\n  }\n\n  /**\n   * @description Leaves edit mode for the Table and puts everything back to VIEW only\n   * @memberOf NovoTableElement\n   * @param cancel - whether or not to save data or undo\n   */\n  private leaveEditMode(cancel: boolean): void {\n    this.mode = NovoTableMode.VIEW;\n    this._rows.forEach((row) => {\n      row._editing = row._editing || {};\n      this.columns.forEach((column) => {\n        row._editing[column.name] = false;\n      });\n    });\n    if (cancel) {\n      this._dataProvider.undo();\n    } else {\n      this._dataProvider.commit();\n    }\n    this.hideToastMessage();\n  }\n\n  /**\n   * @description Adds a new row into the table to be edited, can be called from a local reference of the table in your template\n   * @memberOf NovoTableElement\n   */\n  addEditableRow(defaultValue: any = {}): void {\n    const tableFormRows = this.tableForm.controls.rows as FormArray;\n    const row: any = {};\n    const rowControls = [];\n    row.controls = {};\n    row._editing = {};\n    row.rowId = this._rows.length + 1;\n    this.columns.forEach((column) => {\n      // Use the control passed or use a ReadOnlyControl so that the form has the values\n      const control = column.editorConfig\n        ? ControlFactory.create(column.editorType, column.editorConfig)\n        : new ReadOnlyControl({ key: column.name });\n      control.value = null; // remove copied column value\n      row.controls[column.name] = control;\n      row._editing[column.name] = !column.viewOnly;\n      rowControls.push(control);\n    });\n    this.formUtils.setInitialValues(rowControls, defaultValue, false);\n    tableFormRows.push(this.formUtils.toFormGroup(rowControls));\n    this._rows.push(row);\n  }\n\n  /**\n   * @description Validates the Form inside of the Table, if there are errors it will display/return the errors for each row.\n   * If there are no errors, then it will return ONLY the changed data for each row, the data returned will be in the form:\n   * { id: ID_OF_RECORD, key: value } -- data that was updated\n   * { id: undefined, key: value } -- data that was added\n   * @memberOf NovoTableElement\n   */\n  validateAndGetUpdatedData(): { changed?: any[]; errors?: { errors: any; row: any; index: number }[] } {\n    if (this.tableForm && this.tableForm.controls && this.tableForm.controls.rows) {\n      const changedRows = [];\n      const errors = [];\n      // Go over the FormArray's controls\n      (this.tableForm.controls.rows as FormArray).controls.forEach((formGroup: FormGroup, index: number) => {\n        let changedRow = null;\n        let error = null;\n        // Go over the form group controls\n        Object.keys(formGroup.controls).forEach((key: string) => {\n          const control = formGroup.controls[key];\n          // Handle value changing\n          if (control && control.dirty && !control.errors) {\n            if (!changedRow) {\n              // Append the ID, so we have some key to save against\n              changedRow = {};\n              if (this._rows[index].id) {\n                changedRow.id = this._rows[index].id;\n              }\n            }\n            // If dirty, grab value off the form\n            changedRow[key] = this.tableForm.value.rows[index][key];\n            // Set value back to row (should be already done via the server call, but do it anyway)\n            this._rows[index][key] = changedRow[key];\n          } else if (control && control.errors) {\n            // Handle errors\n            if (!error) {\n              error = {};\n            }\n            error[key] = control.errors;\n            control.markAsDirty();\n            control.markAsTouched();\n          }\n        });\n        if (changedRow) {\n          changedRows.push(changedRow);\n        }\n        if (error) {\n          errors.push({ errors: error, row: this._rows[index], index });\n        }\n      });\n      // Return errors if any, otherwise return the changed rows\n      if (errors.length === 0) {\n        return { changed: changedRows };\n      }\n      return { errors };\n    }\n  }\n\n  /**\n   * @description Refresh the data provider and leave edit mode\n   * @memberOf NovoTableElement\n   */\n  cancelEditing(): void {\n    this.leaveEditMode(true);\n  }\n\n  /**\n   * @description Refresh the data provider and leave edit mode\n   * @memberOf NovoTableElement\n   */\n  saveChanges(): void {\n    this.leaveEditMode(false);\n  }\n\n  /**\n   * @description Displays a toast message inside of the table\n   * @memberOf NovoTableElement\n   */\n  displayToastMessage(toast: { icon: string; theme: string; message: string }, hideDelay?: number): void {\n    this.loading = false;\n    this.toast = toast;\n    if (hideDelay) {\n      setTimeout(() => this.hideToastMessage(), hideDelay);\n    }\n  }\n\n  /**\n   * @description Force hide the toast message\n   * @memberOf NovoTableElement\n   */\n  hideToastMessage(): void {\n    this.toast = null;\n    // Hack to make the table display properly after hiding the toast\n    this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = true;\n    setTimeout(() => {\n      this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = false;\n    });\n  }\n\n  /**\n   * @description display the loading overlay on the table\n   * @memberOf NovoTableElement\n   */\n  toggleLoading(show: boolean): void {\n    this.loading = show;\n  }\n\n  /**\n   * @description hide a column in edit or view mode\n   * @memberOf NovoTableElement\n   */\n  isColumnHidden(column: any): boolean {\n    return this.editing ? !!column.hideColumnOnEdit : !!column.hideColumnOnView;\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NovoButtonModule } from '../../button/Button.module';\nimport { NovoCommonModule } from '../../common/common.module';\nimport { NovoDropdownModule } from '../../dropdown/Dropdown.module';\n// APP\nimport { NovoSelectModule } from '../../select/Select.module';\nimport { DateCell } from './date-cell/DateCell';\nimport { NovoDropdownCell } from './dropdown-cell/DropdownCell';\nimport { NovoTableKeepFilterFocus } from './keep-filter-focus/KeepFilterFocus';\nimport { Pagination } from './pagination/Pagination';\nimport { PercentageCell } from './percentage-cell/PercentageCell';\nimport { RowDetails } from './row-details/RowDetails';\nimport { NovoTableActionsElement } from './table-actions/TableActions';\nimport { TableCell } from './table-cell/TableCell';\nimport { TableFilter } from './table-filter/TableFilter';\nimport { NovoTableFooterElement } from './table-footer/TableFooter';\nimport { NovoTableHeaderElement } from './table-header/TableHeader';\nimport { ThOrderable } from './th-orderable/ThOrderable';\nimport { ThSortable } from './th-sortable/ThSortable';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NovoSelectModule, NovoDropdownModule, NovoButtonModule, NovoCommonModule],\n  declarations: [\n    NovoTableHeaderElement,\n    NovoTableFooterElement,\n    NovoTableActionsElement,\n    NovoTableKeepFilterFocus,\n    Pagination,\n    RowDetails,\n    TableCell,\n    TableFilter,\n    ThOrderable,\n    ThSortable,\n    DateCell,\n    PercentageCell,\n    NovoDropdownCell,\n  ],\n  exports: [\n    NovoTableHeaderElement,\n    NovoTableFooterElement,\n    NovoTableActionsElement,\n    NovoTableKeepFilterFocus,\n    Pagination,\n    RowDetails,\n    TableCell,\n    TableFilter,\n    ThOrderable,\n    ThSortable,\n    DateCell,\n    PercentageCell,\n    NovoDropdownCell,\n  ],\n})\nexport class NovoTableExtrasModule {}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoButtonModule } from '../button';\n// APP\nimport { NovoToastElement } from './Toast';\n\n@NgModule({\n  imports: [CommonModule, NovoButtonModule],\n  declarations: [NovoToastElement],\n  exports: [NovoToastElement],\n})\nexport class NovoToastModule {}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IMaskDirectiveModule } from 'angular-imask';\n// Vendor\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoCheckboxModule } from '../checkbox';\nimport { NovoCommonModule, NovoOptionModule } from '../common';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFlexModule } from '../flex/Flex.module';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nimport { NovoFormModule } from '../form/Form.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoToastModule } from '../toast/Toast.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { NovoTableExtrasModule } from './extras/TableExtras.module';\nimport { NovoTableElement } from './Table';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NovoFormModule,\n    NovoTableExtrasModule,\n    NovoToastModule,\n    NovoButtonModule,\n    NovoTooltipModule,\n    NovoDropdownModule,\n    NovoLoadingModule,\n    NovoDatePickerModule,\n    NovoFormExtrasModule,\n    NovoCheckboxModule,\n    TextMaskModule,\n    IMaskDirectiveModule,\n    NovoOptionModule,\n    NovoCommonModule,\n    NovoFlexModule,\n    NovoIconModule,\n  ],\n  declarations: [NovoTableElement],\n  exports: [NovoTableElement],\n})\nexport class NovoTableModule {}\n","import { ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList, ViewEncapsulation } from '@angular/core';\nimport { CanColor, mixinColor } from '../common/mixins';\n\n// Boilerplate for applying mixins to NovoToolbar.\n/** @docs-private */\nconst _NovoToolbarBase = mixinColor(\n  class {\n    constructor(public _elementRef: ElementRef) {}\n  },\n);\n\n@Directive({\n  selector: 'novo-toolbar-row',\n  host: { class: 'novo-toolbar-row' },\n  inputs: ['color', 'gap'],\n})\nexport class NovoToolbarRow extends _NovoToolbarBase implements CanColor {\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n}\n\n@Component({\n  selector: 'novo-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n  inputs: ['color', 'gap'],\n  host: {\n    class: 'novo-toolbar',\n    '[class.novo-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n    '[class.novo-toolbar-single-row]': '_toolbarRows.length === 0',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NovoToolbar extends _NovoToolbarBase implements CanColor {\n  /** Reference to all toolbar row elements that have been projected. */\n  @ContentChildren(NovoToolbarRow, { descendants: true }) _toolbarRows: QueryList<NovoToolbarRow>;\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoToolbar, NovoToolbarRow } from './toolbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NovoToolbar, NovoToolbarRow],\n  exports: [NovoToolbar, NovoToolbarRow],\n})\nexport class NovoToolbarModule {}\n","// NG2\nimport { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n// App\nimport { Security } from './../../services/security/Security';\n\n@Directive({\n  selector: '[bhUnless]',\n})\nexport class Unless {\n  permissions: string = '';\n  isDisplayed: boolean = false;\n\n  constructor(public templateRef: TemplateRef<any>, public viewContainer: ViewContainerRef, public security: Security) {\n    this.security.subscribe(this.check.bind(this));\n  }\n\n  @Input()\n  set bhUnless(value: string) {\n    this.permissions = value || '';\n    this.check();\n  }\n\n  check(): void {\n    let display: boolean = false;\n    if (~this.permissions.indexOf('||')) {\n      const ps: any = this.permissions.split('||');\n      for (const p of ps) {\n        if (this.security.has(p.trim())) {\n          display = true;\n        }\n      }\n    } else {\n      display = this.permissions.split('&&').every((p) => this.security.has(p.trim()));\n    }\n\n    if (display) {\n      if (!this.isDisplayed) {\n        this.isDisplayed = true;\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      }\n    } else {\n      this.isDisplayed = false;\n      this.viewContainer.clear();\n    }\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// APP\nimport { Unless } from './Unless';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [Unless],\n  exports: [Unless],\n})\nexport class UnlessModule {}\n","// NG2\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Helpers } from '../../utils/Helpers';\n\n@Component({\n  selector: 'novo-entity-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngFor=\"let entity of data.data\" class=\"entity\">\n      <a *ngIf=\"entity.isLinkable\" (click)=\"openLink(entity)\">\n        <i class=\"bhi-circle {{ entity.class }}\"></i>{{ entity | render: metaDisplay }}\n      </a>\n      <span *ngIf=\"!entity.isLinkable && entity.personSubtype\">\n        <i class=\"bhi-circle {{ entity.class }}\"></i>{{ entity | render: metaDisplay }}\n      </span>\n      <span *ngIf=\"!entity.isLinkable && !entity.personSubtype\">\n        {{ entity | render: metaDisplay }}\n      </span>\n    </div>\n  `,\n})\nexport class EntityList implements OnInit {\n  @Input()\n  data: any;\n  @Input()\n  meta: any;\n  baseEntity: string = '';\n  metaDisplay: any;\n  ENTITY_SHORT_NAMES: any = {\n    Lead: 'lead',\n    ClientContact: 'contact',\n    ClientContact1: 'contact',\n    ClientContact2: 'contact',\n    ClientContact3: 'contact',\n    ClientContact4: 'contact',\n    ClientContact5: 'contact',\n    ClientCorporation: 'company',\n    ClientCorporation1: 'company',\n    ClientCorporation2: 'company',\n    ClientCorporation3: 'company',\n    ClientCorporation4: 'company',\n    ClientCorporation5: 'company',\n    Opportunity: 'opportunity',\n    Task: 'task',\n    Note: 'note',\n    CorporateUser: 'user',\n    Candidate: 'candidate',\n    JobOrder: 'job',\n    JobOrder1: 'job',\n    JobOrder2: 'job',\n    JobOrder3: 'job',\n    JobOrder4: 'job',\n    JobOrder5: 'job',\n    Placement: 'placement',\n    JobSubmission: 'submission',\n    CandidateReference: 'references',\n    DistributionList: 'distributionList',\n    Appointment: 'appointment',\n  };\n\n  constructor() {}\n\n  ngOnInit(): any {\n    // use a local copy of the meta to set the type to TO_ONE for proper display\n    // without changing the input object\n    this.metaDisplay = Helpers.deepClone(this.meta);\n    this.metaDisplay.type = 'TO_ONE';\n    this.baseEntity = this.meta.associatedEntity.entity;\n    for (const entity of this.data.data) {\n      entity.isLinkable = this.isLinkable(entity);\n      entity.class = this.getClass(entity);\n    }\n  }\n\n  getClass(entity: any): any {\n    return this.ENTITY_SHORT_NAMES[entity.personSubtype];\n  }\n\n  openLink(entity: any): void {\n    entity.openLink(entity);\n  }\n\n  isLinkable(entity: any): boolean {\n    return entity.openLink;\n  }\n}\n","// NG2\nimport { Component, HostBinding, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { BooleanInput } from '../../utils';\n// APP\nimport { Helpers } from '../../utils/Helpers';\nexport enum NOVO_VALUE_TYPE {\n  DEFAULT,\n  ENTITY_LIST,\n  LINK,\n  INTERNAL_LINK,\n}\nexport enum NOVO_VALUE_THEME {\n  DEFAULT,\n  MOBILE,\n}\n\n@Component({\n  selector: 'novo-value',\n  template: `\n    <div class=\"value-outer\" [ngClass]=\"customClass\">\n      <novo-label>{{ meta.label }}</novo-label>\n      <span class=\"value\">\n        <i *ngIf=\"meta.showEntityIcon\" class=\"bhi-circle {{ meta.entityIconClass }}\"></i>\n        <novo-icon *ngIf=\"meta?.icon\">{{ meta.icon }}</novo-icon>\n        <ng-container [ngSwitch]=\"_type\">\n          <a *ngSwitchCase=\"NOVO_VALUE_TYPE.INTERNAL_LINK\" (click)=\"openLink()\" [innerHTML]=\"data | render: meta\"></a>\n          <a *ngSwitchCase=\"NOVO_VALUE_TYPE.LINK\" class=\"value\" [href]=\"url\" target=\"_blank\" [innerHTML]=\"data | render: meta\"></a>\n          <novo-entity-list *ngSwitchCase=\"NOVO_VALUE_TYPE.ENTITY_LIST\" [data]=\"data\" [meta]=\"meta\"></novo-entity-list>\n          <novo-text *ngSwitchDefault [innerHTML]=\"data | render: meta\"></novo-text>\n        </ng-container>\n      </span>\n    </div>\n    <div class=\"actions\" *ngIf=\"showIcon\">\n      <i *ngFor=\"let icon of meta.icons\" [class]=\"iconClass(icon)\" (click)=\"onValueClick(icon)\"></i>\n    </div>\n  `,\n})\nexport class NovoValueElement implements OnInit, OnChanges {\n  @Input()\n  data: any; // TODO use interface\n  @Input()\n  meta: any = { type: 'SCALAR', label: '' }; // TODO use interface\n  @Input()\n  theme: NOVO_VALUE_THEME = NOVO_VALUE_THEME.DEFAULT;\n\n  @HostBinding('class.horizontal')\n  @Input()\n  @BooleanInput()\n  row: Boolean = false;\n\n  _type: NOVO_VALUE_TYPE;\n  NOVO_VALUE_TYPE = NOVO_VALUE_TYPE;\n  NOVO_VALUE_THEME = NOVO_VALUE_THEME;\n  url: string;\n  customClass: string = '';\n\n  @Input()\n  set label(lbl: string) {\n    this.meta.label = lbl;\n  }\n  get label(): string {\n    return this.meta.label;\n  }\n\n  @Input()\n  set type(typ: string) {\n    this.meta.type = typ;\n  }\n  get type(): string {\n    return this.meta.type;\n  }\n\n  @Input()\n  set icon(value: string) {\n    this.meta.icon = value;\n  }\n  get icon(): string {\n    return this.meta.icon;\n  }\n\n  ngOnInit() {\n    if (Helpers.isEmpty(this.meta)) {\n      this.meta = {\n        label: '',\n      };\n    }\n  }\n\n  @HostBinding('class.mobile')\n  public get isMobile(): boolean {\n    return this.theme === NOVO_VALUE_THEME.MOBILE;\n  }\n\n  iconClass(icon): string {\n    let iconClass = '';\n    if (icon && icon.iconCls) {\n      iconClass = `bhi-${icon.iconCls} actions`;\n      if (icon.onIconClick) {\n        iconClass = `${iconClass} clickable`;\n      }\n      return iconClass;\n    }\n    return iconClass;\n  }\n\n  public get isDefault(): boolean {\n    return true;\n  }\n\n  public get showLabel(): boolean {\n    return (\n      this._type === NOVO_VALUE_TYPE.INTERNAL_LINK || this._type === NOVO_VALUE_TYPE.LINK || this._type === NOVO_VALUE_TYPE.ENTITY_LIST\n    );\n  }\n\n  public get showIcon(): boolean {\n    return this.meta && this.meta.icons && this.meta.icons.length && !Helpers.isEmpty(this.data);\n  }\n\n  onValueClick(icon): void {\n    if (icon.onIconClick && typeof icon.onIconClick === 'function') {\n      icon.onIconClick(this.data, this.meta);\n    }\n  }\n  openLink(): void {\n    if (this.meta && this.meta.openLink && typeof this.meta.openLink === 'function') {\n      this.meta.openLink(this.data, this.meta);\n    }\n  }\n\n  ngOnChanges(changes?: SimpleChanges): any {\n    if (this.meta && this.isLinkField(this.meta, this.data)) {\n      this._type = NOVO_VALUE_TYPE.LINK;\n      // Make sure the value has a protocol, otherwise the URL will be relative\n      const hasProtocol: any = new RegExp('^(http|https)://', 'i');\n      if (!hasProtocol.test(this.data)) {\n        this.url = `http://${this.data}`;\n      } else {\n        this.url = this.data;\n      }\n    } else if (this.isEntityList(this.meta.type)) {\n      this._type = NOVO_VALUE_TYPE.ENTITY_LIST;\n    } else if (this.isHTMLField(this.meta)) {\n      this.customClass = this.meta.customClass ? this.meta.customClass : '';\n      if (this.meta.stripHTML && this.data && this.data.replace) {\n        this.data = this.data.replace(/<(?!style|\\/style).+?>/gi, '').trim();\n      }\n    } else if (this.meta && this.meta.associatedEntity) {\n      switch (this.meta.associatedEntity.entity) {\n        case 'ClientCorporation':\n        case 'ClientContact':\n        case 'Candidate':\n        case 'Opportunity':\n        case 'JobOrder':\n        case 'Placement':\n        case 'Lead':\n          this._type = NOVO_VALUE_TYPE.INTERNAL_LINK;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  isLinkField(field: { name?: string; type?: NOVO_VALUE_TYPE }, data: any): boolean {\n    const linkFields: any = ['companyURL', 'clientCorporationCompanyURL'];\n    const regex: any = new RegExp('^(https?://(?:www.|(?!www))[^s.]+.[^s]{2,}|www.[^s]+.[^s]{2,})$', 'gi');\n    const isURL: any = Helpers.isString(data) && regex.exec(data.trim());\n    return linkFields.indexOf(field.name) > -1 || !!isURL || field.type === NOVO_VALUE_TYPE.LINK;\n  }\n\n  isEntityList(type: string): boolean {\n    return type === 'TO_MANY';\n  }\n\n  isHTMLField(meta: any): boolean {\n    return meta.dataSpecialization === 'HTML' || meta.inputType === 'TEXTAREA';\n  }\n}\n","// NG2\nimport { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// APP\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { findByCountryId } from '../../utils/countries/Countries';\n\n/**\n * @classdesc\n * Renders data appropriately based on the data type found in Meta\n * All data types defined by bullhorn should be supported:\n *\n * - **String**: trims value and returns\n * - **Integer**: return value\n * - **Double**: return value fixed to 2 decimals\n * - **BigDecimal**: return value fixed to 2 decimals\n * - **Address**: only city and/or state returned\n * - **Address1**: only city and/or state returned\n * - **AddressWithoutCountry**: only city and/or state returned\n * - **Currency**: put a $ in front\n * - **Percentage**: divide by 100 fix to 2 decimals place and return\n * - **Options**: returns the appropriate 'label' for the 'value' from 'options'\n * - **Array**: returns list comma separated\n * - **DateTime**: formats the date\n * - **TimeStamp**: formats the date\n * - **ToOne**: return the entity specific name (ie. name, firstName lastName, title, ...)\n * - **ToMany**: return an array of the entity specific names (ie. name, firstName lastName, title, ...)\n *\n * @example\n * ```\n * {{ expression | render:field }}\n * ```\n */\n@Pipe({\n  name: 'render',\n  pure: false,\n})\n@Injectable()\nexport class RenderPipe implements PipeTransform {\n  value: any;\n  lastValue: any;\n  lastArgs: any;\n\n  constructor(private changeDetector: ChangeDetectorRef, private sanitizationService: DomSanitizer, private labels: NovoLabelService) {}\n\n  equals(objectOne: any, objectTwo: any): any {\n    if (objectOne === objectTwo) {\n      return true;\n    }\n    if (objectOne === null || objectTwo === null) {\n      return false;\n    }\n    if (objectOne !== objectOne && objectTwo !== objectTwo) {\n      return true;\n    }\n    const t1: any = typeof objectOne;\n    const t2: any = typeof objectTwo;\n    let length: number;\n    let key: any;\n    let keySet: any;\n    if (t1 === t2 && t1 === 'object') {\n      if (Array.isArray(objectOne)) {\n        if (!Array.isArray(objectTwo)) {\n          return false;\n        }\n        length = objectOne.length;\n        if (length === objectTwo.length) {\n          for (key = 0; key < length; key++) {\n            if (!this.equals(objectOne[key], objectTwo[key])) {\n              return false;\n            }\n          }\n          return true;\n        }\n      } else {\n        if (Array.isArray(objectTwo)) {\n          return false;\n        }\n        keySet = Object.create(null);\n        for (key in objectOne) {\n          if (objectOne[key]) {\n            if (!this.equals(objectOne[key], objectTwo[key])) {\n              return false;\n            }\n            keySet[key] = true;\n          }\n        }\n        for (key in objectTwo) {\n          if (!(key in keySet) && typeof objectTwo[key] !== 'undefined') {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getEntityLabel(item: any, entity: string): string {\n    switch (entity) {\n      case 'CorporateUser':\n      case 'ClientContact':\n      case 'ClientContact1':\n      case 'ClientContact2':\n      case 'ClientContact3':\n      case 'ClientContact4':\n      case 'ClientContact5':\n      case 'Lead':\n      case 'Candidate':\n      case 'Person':\n        return `${item.firstName || ''} ${item.lastName || ''}`.trim();\n      case 'ClientCorporation':\n      case 'ClientCorporation1':\n      case 'ClientCorporation2':\n      case 'ClientCorporation3':\n      case 'ClientCorporation4':\n      case 'ClientCorporation5':\n        return `${item.name || ''}`.trim();\n      case 'JobOrder':\n      case 'JobOrder1':\n      case 'JobOrder2':\n      case 'JobOrder3':\n      case 'JobOrder4':\n      case 'JobOrder5':\n      case 'Opportunity':\n        return `${item.title || ''}`.trim();\n      case 'Placement':\n        let label: string = '';\n        if (item.candidate) {\n          label = `${item.candidate.firstName} ${item.candidate.lastName}`.trim();\n        }\n        if (item.jobOrder) {\n          label = `${label} - ${item.jobOrder.title}`.trim();\n        }\n        return label;\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Define the fields to set or retrieve for the given entity. Getter and Setter methods will automagically\n   * be set up on the entity once the fields are defined.\n   * @param args - fields can either be sent as a list of arguments or as an Array\n   * @return text\n   */\n  render(value: any, args: any): any {\n    let type: any = null;\n    let text: any = value;\n\n    // Handle when we don't have meta, but passing an entity\n    if (value && value._subtype && !args) {\n      return this.getEntityLabel(value, value._subtype);\n    }\n\n    // Stop logic for nulls\n    if (value === undefined || value === null || !args) {\n      return text;\n    }\n\n    if (args.formatter && typeof args.formatter === 'function') {\n      return args.formatter(value, args);\n    }\n    // TODO move this to a service\n    // Determine TYPE because its not just 1 value that determines this.\n    if (args.type === 'TO_MANY') {\n      type = 'ToMany';\n    } else if (args.type === 'TO_ONE') {\n      type = args.associatedEntity.entity;\n    } else if (args.dataSpecialization === 'DATETIME') {\n      type = 'DateTime';\n    } else if (args.dataSpecialization === 'YEAR') {\n      type = 'Year';\n    } else if (args.dataSpecialization === 'TIME') {\n      type = 'Time';\n    } else if (args.dataSpecialization === 'DATE' && args.dataType === 'Date') {\n      type = 'Date';\n    } else if (args.dataType === 'Timestamp') {\n      type = 'Timestamp';\n    } else if (['mobile', 'phone', 'phone1', 'phone2', 'phone3', 'workPhone'].indexOf(args.name) > -1) {\n      type = 'Phone';\n    } else if (args.name && args.name.substring(0, 5) === 'email') {\n      type = 'Email';\n    } else if ((args.name && args.name === 'address.countryID') || args.optionsType === 'Country') {\n      type = 'Country';\n    } else if (args.optionsType === 'SkillText') {\n      type = 'SkillText';\n    } else if (args.options || args.inputType === 'SELECT' || args.inputType === 'CHECKBOX') {\n      type = 'Options';\n    } else if (['MONEY', 'PERCENTAGE', 'HTML', 'SSN'].indexOf(args.dataSpecialization) > -1) {\n      type = this.capitalize(args.dataSpecialization.toLowerCase());\n    } else {\n      type = args.dataType || 'default';\n    }\n\n    // Transform data here\n    try {\n      switch (type) {\n        case 'Address':\n        case 'Address1':\n        case 'AddressWithoutCountry':\n        case 'SecondaryAddress':\n        case 'BillingAddress':\n          const country: any = findByCountryId(Number(value.countryName));\n          text = '';\n          if (value.address1 || value.address2) {\n            text += `${value.address1 || ''} ${value.address2 || ''}<br />\\n`;\n          }\n          text += `${value.city || ''} ${value.state || ''} ${value.zip || ''}${value.city || value.state || value.zip ? '<br />\\n' : ''}`;\n          text += `${country ? country.name : value.countryName || ''}${country || value.countryName ? '<br />\\n' : ''}`;\n          text = this.sanitizationService.bypassSecurityTrustHtml(text.trim());\n          break;\n        case 'DateTime':\n        case 'Timestamp':\n          text = this.labels.formatDateShort(value);\n          break;\n        case 'Date':\n          text = this.labels.formatDate(new Date(value));\n          break;\n        case 'Year':\n          text = new Date(value).getFullYear();\n          break;\n        case 'Time':\n          text = this.labels.formatTimeWithFormat(value, { hour: 'numeric', minute: 'numeric' });\n          break;\n        case 'Phone':\n        case 'Email':\n          text = value;\n          break;\n        case 'Money':\n          text = this.labels.formatCurrency(value);\n          break;\n        case 'Percentage':\n          text = this.labels.formatNumber(parseFloat(value).toString(), { style: 'percent', minimumFractionDigits: 2 });\n          break;\n        case 'Double':\n        case 'BigDecimal':\n          text = this.labels.formatNumber(value, { minimumFractionDigits: this.getNumberDecimalPlaces(value) });\n          break;\n        case 'Integer':\n          text = value;\n          break;\n        case 'BusinessSector':\n        case 'Category':\n        case 'Certification':\n        case 'ClientCorporation':\n        case 'CorporationDepartment':\n        case 'DistributionList':\n        case 'Skill':\n        case 'Tearsheet':\n        case 'Specialty':\n          text = value.label || value.name || '';\n          break;\n        case 'SkillText':\n          text = Array.isArray(value) ? value.join(', ') : value;\n          break;\n        case 'Lead':\n        case 'Candidate':\n        case 'ClientContact':\n        case 'CorporateUser':\n        case 'Person':\n          text = value.label || `${value.firstName || ''} ${value.lastName || ''}`;\n          break;\n        case 'Opportunity':\n        case 'JobOrder':\n          text = value.label || value.title || '';\n          break;\n        case 'Placement':\n          if (value.candidate) {\n            text = `${value.candidate.firstName || ''} ${value.candidate.lastName || ''}`;\n          }\n          if (value.jobOrder) {\n            text = value.candidate ? `${text} - ${value.jobOrder.title || ''}` : `${value.jobOrder.title || ''}`;\n          }\n          break;\n        case 'JobSubmission':\n          text =\n            value.label ||\n            `${value.jobOrder ? `${value.jobOrder.title} - ` : ''} ${value.candidate ? value.candidate.firstName : ''} ${\n              value.candidate ? value.candidate.lastName : ''\n            }`;\n          break;\n        case 'WorkersCompensationRate':\n          text = `${value.compensation ? `${value.compensation.code} - ` : ''} ${value.compensation ? value.compensation.name : ''}`;\n          break;\n        case 'Options':\n          text = this.options(value, args.options, args);\n          break;\n        case 'ToMany':\n          if (['Candidate', 'CorporateUser', 'Person'].indexOf(args.associatedEntity.entity) > -1) {\n            text = this.concat(value.data, 'firstName', 'lastName');\n            if (value.data.length < value.total) {\n              text = text + ', ' + this.labels.getToManyPlusMore({ quantity: value.total - value.data.length });\n            }\n          } else if (\n            ['Category', 'BusinessSector', 'Skill', 'Specialty', 'ClientCorporation', 'CorporationDepartment'].indexOf(\n              args.associatedEntity.entity,\n            ) > -1\n          ) {\n            text = this.concat(value.data, 'name');\n            if (value.data.length < value.total) {\n              text = text + ', ' + this.labels.getToManyPlusMore({ quantity: value.total - value.data.length });\n            }\n          } else if (args.associatedEntity.entity === 'MailListPushHistoryDetail') {\n            text = this.concat(value.data, 'externalListName');\n          } else {\n            text = `${value.total || ''}`;\n          }\n          break;\n        case 'Country':\n          const countryObj: any = findByCountryId(Number(value));\n          text = countryObj ? countryObj.name : value;\n          break;\n        case 'Html':\n          if (Array.isArray(value)) {\n            value = value.join(' ');\n          }\n          if (typeof text === 'string') {\n            text = this.sanitizationService.bypassSecurityTrustHtml(value.replace(/\\<a/gi, '<a target=\"_blank\"'));\n          }\n          break;\n        case 'CandidateComment':\n          text = value.comments ? `${this.labels.formatDateShort(value.dateLastModified)} (${value.name}) - ${value.comments}` : '';\n          break;\n        default:\n          text = value.trim ? value.trim() : value;\n          break;\n      }\n      return text;\n    } catch (e) {\n      console.error(`WARNING: There was a problem rendering the value of the field: ${args.label}. Please check the configuration`);\n      console.error(e);\n      return text;\n    }\n  }\n\n  updateValue(value: any, args: any): any {\n    this.value = this.render(value, args);\n    this.changeDetector.markForCheck();\n  }\n\n  transform(value?: any, args?: any): any {\n    if (value === undefined || value === null) {\n      return '';\n    }\n\n    if (this.equals(value, this.lastValue) && this.equals(args, this.lastArgs)) {\n      return this.value;\n    }\n\n    this.lastValue = value;\n    this.lastArgs = args;\n\n    this.updateValue(this.lastValue, this.lastArgs);\n\n    return this.value;\n  }\n\n  /**\n   * Simple function concat a list of fields from a list of objects\n   * @param list - the list of values to use\n   * @param fields - list of fields to extract\n   */\n  concat(list: any, ...fields: any[]): any {\n    const data: any = [];\n    for (const item of list) {\n      const label: any = [];\n      for (const field of fields) {\n        label.push(`${item[field]}`);\n      }\n      data.push(label.join(' '));\n    }\n    return data.join(', ');\n  }\n\n  /**\n   * Simple function to look up the **label** to display from options\n   * @param value - the value to find\n   * @param list - list of options (label/value pairs)\n   */\n  options(value: any, list: any, args: any): any {\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n    try {\n      return value.map((item: any) => {\n        for (const option of list) {\n          if (option.value === item) {\n            return option.label;\n          }\n        }\n        return item;\n      });\n    } catch (e) {\n      if (!args.optionsType) {\n        throw Error(e);\n      }\n      return value;\n    }\n  }\n\n  getNumberDecimalPlaces(value: any): any {\n    let decimalPlaces: any;\n    if (value) {\n      const numberString: any = parseFloat(value).toString();\n      const decimalPlace: any = (numberString || '').split('.')[1] || '';\n      decimalPlaces = decimalPlace.length;\n    }\n    return decimalPlaces || 1;\n  }\n\n  /**\n   * Capitalizes the first letter\n   */\n  capitalize(value: any): string {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n","// NG2\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NovoCommonModule } from '../common/common.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { EntityList } from './EntityList';\nimport { RenderPipe } from './Render';\nimport { NovoValueElement } from './Value';\n\n@NgModule({\n  imports: [CommonModule, NovoCommonModule, NovoIconModule],\n  declarations: [NovoValueElement, RenderPipe, EntityList],\n  exports: [NovoValueElement, RenderPipe, EntityList],\n})\nexport class NovoValueModule {}\n","// NG2\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n// APP\nimport { NovoAceEditorModule } from './elements/ace-editor/AceEditor.module';\nimport { NovoAgendaModule } from './elements/agenda/Agenda.module';\nimport { NovoAsideModule } from './elements/aside/aside.module';\nimport { NovoAvatarModule } from './elements/avatar/Avatar.module';\nimport { NovoBreadcrumbModule } from './elements/breadcrumbs/Breadcrumb.module';\nimport { NovoButtonModule } from './elements/button/Button.module';\nimport { NovoCalendarModule } from './elements/calendar/Calendar.module';\nimport { NovoCardModule } from './elements/card/Card.module';\nimport { NovoCategoryDropdownModule } from './elements/category-dropdown/CategoryDropdown.module';\nimport { NovoCheckboxModule } from './elements/checkbox/Checkbox.module';\nimport { NovoChipsModule } from './elements/chips/Chips.module';\nimport { NovoNovoCKEditorModule } from './elements/ckeditor/CKEditor.module';\nimport { NovoColorPickerModule } from './elements/color-picker/color-picker.module';\nimport { NovoCommonModule, NovoOptionModule } from './elements/common';\nimport { NovoOverlayModule } from './elements/common/overlay/Overlay.module';\nimport { NovoDataTableModule } from './elements/data-table/data-table.module';\nimport { NovoDatePickerModule } from './elements/date-picker/DatePicker.module';\nimport { NovoDateTimePickerModule } from './elements/date-time-picker/DateTimePicker.module';\nimport { NovoDividerModule } from './elements/divider/divider.module';\nimport { NovoDragulaModule } from './elements/dragula/Dragula.module';\nimport { NovoDragulaService } from './elements/dragula/DragulaService';\nimport { NovoDropdownModule } from './elements/dropdown/Dropdown.module';\nimport { NovoExpansionModule } from './elements/expansion/expansion.module';\nimport { NovoFieldModule } from './elements/field/field.module';\nimport { NovoFlexModule } from './elements/flex/Flex.module';\nimport { NovoFormExtrasModule } from './elements/form/extras/FormExtras.module';\nimport { NovoFormModule } from './elements/form/Form.module';\nimport { NovoHeaderModule } from './elements/header/Header.module';\nimport { NovoIconModule } from './elements/icon/Icon.module';\nimport { NovoLayoutModule } from './elements/layout/layout.module';\nimport { NovoListModule } from './elements/list/List.module';\nimport { NovoLoadingModule } from './elements/loading/Loading.module';\nimport { NovoMenuModule } from './elements/menu/menu.module';\nimport { NovoModalModule } from './elements/modal/modal.module';\nimport { NovoMultiPickerModule } from './elements/multi-picker/MultiPicker.module';\nimport { NovoNonIdealStateModule } from './elements/non-ideal-state/NonIdealState.module';\nimport { NovoPickerModule } from './elements/picker/Picker.module';\nimport { GooglePlacesModule } from './elements/places/places.module';\nimport { GooglePlacesService } from './elements/places/places.service';\nimport { NovoPopOverModule } from './elements/popover/PopOver.module';\nimport { NovoProgressModule } from './elements/progress/Progress.module';\nimport { NovoQuickNoteModule } from './elements/quick-note/QuickNote.module';\nimport { NovoRadioModule } from './elements/radio/Radio.module';\nimport { NovoSearchBoxModule } from './elements/search/SearchBox.module';\nimport { NovoSelectSearchModule } from './elements/select-search/select-search.module';\nimport { NovoSelectModule } from './elements/select/Select.module';\nimport { NovoSimpleTableModule } from './elements/simple-table/simple-table.module';\nimport { NovoSliderModule } from './elements/slider/Slider.module';\nimport { NovoStepperModule } from './elements/stepper/stepper.module';\nimport { NovoSwitchModule } from './elements/switch/Switch.module';\nimport { NovoTabbedGroupPickerModule } from './elements/tabbed-group-picker/TabbedGroupPicker.module';\nimport { NovoTableExtrasModule } from './elements/table/extras/TableExtras.module';\nimport { NovoTableModule } from './elements/table/Table.module';\nimport { NovoTabModule } from './elements/tabs/Tabs.module';\nimport { NovoTilesModule } from './elements/tiles/Tiles.module';\nimport { NovoTimePickerModule } from './elements/time-picker/TimePicker.module';\nimport { NovoTipWellModule } from './elements/tip-well/TipWell.module';\nimport { NovoToastModule } from './elements/toast/Toast.module';\nimport { NovoToolbarModule } from './elements/toolbar/toolbar.module';\nimport { NovoTooltipModule } from './elements/tooltip/Tooltip.module';\nimport { UnlessModule } from './elements/unless/Unless.module';\nimport { NovoValueModule } from './elements/value/Value.module';\nimport { NovoPipesModule } from './pipes/Pipes.module';\nimport { DateFormatService } from './services/date-format/DateFormat';\nimport { BrowserGlobalRef, GlobalRef } from './services/global/global.service';\nimport { NovoLabelService } from './services/novo-label-service';\nimport { OptionsService } from './services/options/OptionsService';\nimport { LocalStorageService } from './services/storage/storage.service';\nimport { ComponentUtils } from './utils/component-utils/ComponentUtils';\nimport { FormUtils } from './utils/form-utils/FormUtils';\n\n@NgModule({\n  imports: [ReactiveFormsModule],\n  exports: [\n    NovoAsideModule,\n    NovoAvatarModule,\n    NovoPipesModule,\n    NovoButtonModule,\n    NovoLoadingModule,\n    NovoCardModule,\n    NovoAgendaModule,\n    NovoCalendarModule,\n    NovoCheckboxModule,\n    NovoFlexModule,\n    NovoLayoutModule,\n    NovoDividerModule,\n    NovoToastModule,\n    NovoTooltipModule,\n    NovoHeaderModule,\n    NovoTabModule,\n    NovoTilesModule,\n    NovoModalModule,\n    NovoQuickNoteModule,\n    NovoRadioModule,\n    NovoDropdownModule,\n    NovoSelectModule,\n    NovoListModule,\n    NovoSwitchModule,\n    NovoDragulaModule,\n    NovoSliderModule,\n    NovoPickerModule,\n    NovoChipsModule,\n    NovoDatePickerModule,\n    NovoTimePickerModule,\n    NovoDateTimePickerModule,\n    NovoNovoCKEditorModule,\n    NovoTipWellModule,\n    NovoSimpleTableModule,\n    NovoTableModule,\n    NovoTableExtrasModule,\n    NovoFormModule,\n    NovoFormExtrasModule,\n    NovoCategoryDropdownModule,\n    NovoMultiPickerModule,\n    NovoPopOverModule,\n    NovoDataTableModule,\n    NovoSearchBoxModule,\n    NovoProgressModule,\n    NovoOverlayModule,\n    GooglePlacesModule,\n    NovoValueModule,\n    NovoAceEditorModule,\n    NovoIconModule,\n    NovoExpansionModule,\n    UnlessModule,\n    NovoCommonModule,\n    NovoOptionModule,\n    NovoStepperModule,\n    NovoToolbarModule,\n    ScrollingModule,\n    NovoTabbedGroupPickerModule,\n    NovoNonIdealStateModule,\n    NovoBreadcrumbModule,\n    NovoFieldModule,\n    NovoColorPickerModule,\n    NovoMenuModule,\n    NovoSelectSearchModule,\n  ],\n  providers: [\n    { provide: ComponentUtils, useClass: ComponentUtils },\n    { provide: DateFormatService, useClass: DateFormatService },\n    { provide: NovoLabelService, useClass: NovoLabelService },\n    { provide: NovoDragulaService, useClass: NovoDragulaService },\n    { provide: GooglePlacesService, useClass: GooglePlacesService },\n    { provide: GlobalRef, useClass: BrowserGlobalRef },\n    { provide: LocalStorageService, useClass: LocalStorageService },\n    { provide: OptionsService, useClass: OptionsService },\n    { provide: FormUtils, useClass: FormUtils },\n  ],\n})\nexport class NovoElementsModule {}\n","// NG2\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NovoAsideService } from './elements/aside/aside.service';\nimport { NovoDragulaService } from './elements/dragula/DragulaService';\nimport { FieldInteractionApi } from './elements/form/FieldInteractionApi';\nimport { MENU_OPTIONS } from './elements/menu/menu.tokens';\nimport { IMenuOptions } from './elements/menu/menu.types';\n// import { NovoAsideRef } from './elements/aside/aside-ref';\nimport { NovoModalService } from './elements/modal/modal.service';\n// APP\nimport { GooglePlacesService } from './elements/places/places.service';\nimport { NovoToastService } from './elements/toast/ToastService';\nimport { DateFormatService } from './services/date-format/DateFormat';\nimport { BrowserGlobalRef, GlobalRef } from './services/global/global.service';\nimport { OptionsService } from './services/options/OptionsService';\nimport { LocalStorageService } from './services/storage/storage.service';\nimport { NovoTemplateService } from './services/template/NovoTemplateService';\nimport { ComponentUtils } from './utils/component-utils/ComponentUtils';\n\nconst NOVO_ELEMENTS_PROVIDERS = [\n  { provide: NovoDragulaService, useClass: NovoDragulaService },\n  // { provide: NovoAsideRef, useClass: NovoAsideRef },\n  { provide: NovoAsideService, useClass: NovoAsideService },\n  // { provide: NovoModalRef, useClass: NovoModalRef },\n  { provide: NovoModalService, useClass: NovoModalService },\n  { provide: GooglePlacesService, useClass: GooglePlacesService },\n  { provide: NovoToastService, useClass: NovoToastService },\n  { provide: ComponentUtils, useClass: ComponentUtils },\n  { provide: GlobalRef, useClass: BrowserGlobalRef },\n  { provide: LocalStorageService, useClass: LocalStorageService },\n  { provide: OptionsService, useClass: OptionsService },\n  FieldInteractionApi,\n  DateFormatService,\n  NovoTemplateService,\n];\n\n@NgModule({\n  imports: [],\n})\nexport class NovoElementProviders {\n  static forRoot(options?: { menu: IMenuOptions }): ModuleWithProviders<NovoElementProviders> {\n    return {\n      ngModule: NovoElementProviders,\n      providers: [\n        ...NOVO_ELEMENTS_PROVIDERS,\n        {\n          provide: MENU_OPTIONS,\n          useValue: options && options.menu,\n        },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders<NovoElementProviders> {\n    return {\n      ngModule: NovoElementProviders,\n    };\n  }\n}\n","// Helper to keep track of key codes\nexport const KeyCodes = {\n  BACKSPACE: 8,\n  TAB: 9,\n  NUM_CENTER: 12,\n  ENTER: 13,\n  RETURN: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  PAUSE: 19,\n  CAPS_LOCK: 20,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  HASH_SYMBOL: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  PRINT_SCREEN: 44,\n  INSERT: 45,\n  DELETE: 46,\n  ZERO: 48,\n  ONE: 49,\n  TWO: 50,\n  THREE: 51,\n  FOUR: 52,\n  FIVE: 53,\n  SIX: 54,\n  SEVEN: 55,\n  EIGHT: 56,\n  NINE: 57,\n  AT_SYMBOL: 64,\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n  CONTEXT_MENU: 93,\n  NUM_ZERO: 96,\n  NUM_ONE: 97,\n  NUM_TWO: 98,\n  NUM_THREE: 99,\n  NUM_FOUR: 100,\n  NUM_FIVE: 101,\n  NUM_SIX: 102,\n  NUM_SEVEN: 103,\n  NUM_EIGHT: 104,\n  NUM_NINE: 105,\n  NUM_MULTIPLY: 106,\n  NUM_PLUS: 107,\n  NUM_MINUS: 109,\n  NUM_PERIOD: 110,\n  NUM_DIVISION: 111,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  DASH: 189,\n  PERIOD: 190,\n  FORWARD_SLASH: 191,\n};\n"]}