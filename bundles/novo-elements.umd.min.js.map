{"version":3,"file":"novo-elements.umd.min.js","sources":["../../../node_modules/src/cdk/accordion/accordion.ts","../../../node_modules/src/cdk/accordion/accordion-item.ts","../../../node_modules/src/cdk/accordion/accordion-module.ts","~/novo-elements/src/platform/elements/expansion/accordion.ts","../../../node_modules/src/operators/audit.ts","../../../node_modules/src/scheduler/Action.ts","../../../node_modules/src/scheduler/AsyncAction.ts","../../../node_modules/src/Scheduler.ts","../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../node_modules/src/scheduler/async.ts","../../../node_modules/src/util/isNumeric.ts","../../../node_modules/src/util/isScheduler.ts","../../../node_modules/src/util/isDate.ts","../../../node_modules/src/observable/TimerObservable.ts","../../../node_modules/src/operators/buffer.ts","../../../node_modules/src/operators/bufferCount.ts","../../../node_modules/src/operators/bufferTime.ts","../../../node_modules/src/operators/bufferToggle.ts","../../../node_modules/src/operators/bufferWhen.ts","../../../node_modules/src/operators/catchError.ts","../../../node_modules/src/observable/ScalarObservable.ts","../../../node_modules/src/observable/EmptyObservable.ts","../../../node_modules/src/observable/ArrayObservable.ts","../../../node_modules/src/operators/combineLatest.ts","../../../node_modules/src/observable/of.ts","../../../node_modules/src/observable/PromiseObservable.ts","../../../node_modules/src/observable/IteratorObservable.ts","../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../node_modules/src/Notification.ts","../../../node_modules/src/operators/observeOn.ts","../../../node_modules/src/observable/FromObservable.ts","../../../node_modules/src/observable/from.ts","../../../node_modules/src/operators/mergeMap.ts","../../../node_modules/src/util/identity.ts","../../../node_modules/src/operators/mergeAll.ts","../../../node_modules/src/operators/concatAll.ts","../../../node_modules/src/observable/concat.ts","../../../node_modules/src/operators/count.ts","../../../node_modules/src/operators/debounce.ts","../../../node_modules/src/operators/debounceTime.ts","../../../node_modules/src/operators/defaultIfEmpty.ts","../../../node_modules/src/operators/delay.ts","../../../node_modules/src/operators/delayWhen.ts","../../../node_modules/src/operators/dematerialize.ts","../../../node_modules/src/util/Set.ts","../../../node_modules/src/operators/distinct.ts","../../../node_modules/src/operators/distinctUntilChanged.ts","../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../node_modules/src/operators/elementAt.ts","../../../node_modules/src/operators/every.ts","../../../node_modules/src/operators/exhaust.ts","../../../node_modules/src/operators/exhaustMap.ts","../../../node_modules/src/operators/expand.ts","../../../node_modules/src/operators/filter.ts","../../../node_modules/src/operators/finalize.ts","../../../node_modules/src/operators/find.ts","../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../node_modules/src/SubjectSubscription.ts","../../../node_modules/src/Subject.ts","../../../node_modules/src/util/MapPolyfill.ts","../../../node_modules/src/util/Map.ts","../../../node_modules/src/util/FastMap.ts","../../../node_modules/src/operators/groupBy.ts","../../../node_modules/src/operators/ignoreElements.ts","../../../node_modules/src/operators/isEmpty.ts","../../../node_modules/src/operators/last.ts","../../../node_modules/src/operators/map.ts","../../../node_modules/src/operators/mapTo.ts","../../../node_modules/src/operators/materialize.ts","../../../node_modules/src/operators/scan.ts","../../../node_modules/src/operators/takeLast.ts","../../../node_modules/src/operators/mergeMapTo.ts","../../../node_modules/src/operators/mergeScan.ts","../../../node_modules/src/operators/refCount.ts","../../../node_modules/src/observable/ConnectableObservable.ts","../../../node_modules/src/operators/onErrorResumeNext.ts","../../../node_modules/src/operators/pairwise.ts","../../../node_modules/src/BehaviorSubject.ts","../../../node_modules/src/AsyncSubject.ts","../../../node_modules/src/scheduler/QueueAction.ts","../../../node_modules/src/scheduler/QueueScheduler.ts","../../../node_modules/src/scheduler/queue.ts","../../../node_modules/src/ReplaySubject.ts","../../../node_modules/src/observable/race.ts","../../../node_modules/src/operators/repeat.ts","../../../node_modules/src/operators/repeatWhen.ts","../../../node_modules/src/operators/retry.ts","../../../node_modules/src/operators/retryWhen.ts","../../../node_modules/src/operators/sample.ts","../../../node_modules/src/operators/sampleTime.ts","../../../node_modules/src/operators/sequenceEqual.ts","../../../node_modules/src/operators/single.ts","../../../node_modules/src/operators/skip.ts","../../../node_modules/src/operators/skipLast.ts","../../../node_modules/src/operators/skipUntil.ts","../../../node_modules/src/operators/skipWhile.ts","../../../node_modules/src/operators/startWith.ts","../../../node_modules/src/operators/switchMapTo.ts","../../../node_modules/src/operators/take.ts","../../../node_modules/src/operators/takeUntil.ts","../../../node_modules/src/operators/takeWhile.ts","../../../node_modules/src/operators/tap.ts","../../../node_modules/src/operators/throttle.ts","../../../node_modules/src/operators/throttleTime.ts","../../../node_modules/src/operators/timeInterval.ts","../../../node_modules/src/util/TimeoutError.ts","../../../node_modules/src/operators/timeout.ts","../../../node_modules/src/operators/timeoutWith.ts","../../../node_modules/src/operators/window.ts","../../../node_modules/src/operators/windowCount.ts","../../../node_modules/src/operators/windowTime.ts","../../../node_modules/src/operators/windowToggle.ts","../../../node_modules/src/operators/windowWhen.ts","../../../node_modules/src/operators/withLatestFrom.ts","../../../node_modules/src/operators/zip.ts","../../../node_modules/src/operators.ts","~/novo-elements/src/platform/elements/expansion/expansion-animations.ts","~/novo-elements/src/platform/elements/expansion/expansion-panel-content.ts","~/novo-elements/src/platform/elements/expansion/expansion-panel.ts","~/novo-elements/src/platform/elements/expansion/expansion-panel-header.ts","~/novo-elements/src/platform/elements/expansion/expansion.module.ts","~/novo-elements/src/platform/elements/stepper/step-label.component.ts","~/novo-elements/src/platform/elements/stepper/step-header.component.ts","~/novo-elements/src/platform/elements/stepper/stepper.animations.ts","~/novo-elements/src/platform/elements/stepper/stepper.component.ts","~/novo-elements/src/platform/elements/stepper/step-status.component.ts","~/novo-elements/src/platform/elements/stepper/stepper.module.ts","~/novo-elements/src/platform/elements/category-dropdown/CategoryDropdown.ts","~/novo-elements/src/platform/elements/category-dropdown/CategoryDropdown.module.ts","~/novo-elements/src/platform/elements/multi-picker/MultiPicker.ts","~/novo-elements/src/platform/elements/multi-picker/MultiPicker.module.ts","~/novo-elements/src/platform/services/security/Security.ts","~/novo-elements/src/platform/elements/unless/Unless.ts","~/novo-elements/src/platform/elements/unless/Unless.module.ts","~/novo-elements/src/platform/elements/data-table/data-table.source.ts","~/novo-elements/src/platform/elements/data-table/state/data-table-state.service.ts","~/novo-elements/src/platform/elements/data-table/services/static-data-table.service.ts","~/novo-elements/src/platform/elements/data-table/data-table.component.ts","~/novo-elements/src/platform/elements/data-table/cells/data-table-cell.component.ts","~/novo-elements/src/platform/elements/data-table/cells/data-table-checkbox-cell.component.ts","~/novo-elements/src/platform/elements/data-table/cells/data-table-expand-cell.component.ts","~/novo-elements/src/platform/elements/data-table/rows/data-table-header-row.component.ts","~/novo-elements/src/platform/elements/data-table/rows/data-table-row.component.ts","~/novo-elements/src/platform/elements/data-table/sort-filter/sort-filter.directive.ts","~/novo-elements/src/platform/elements/data-table/cell-headers/data-table-header-cell.component.ts","~/novo-elements/src/platform/elements/data-table/cell-headers/data-table-expand-header-cell.component.ts","~/novo-elements/src/platform/elements/data-table/cell-headers/data-table-checkbox-header-cell.component.ts","~/novo-elements/src/platform/elements/data-table/cell-headers/data-table-header-cell.directive.ts","~/novo-elements/src/platform/elements/data-table/pagination/data-table-pagination.component.ts","~/novo-elements/src/platform/elements/data-table/data-table.pipes.ts","~/novo-elements/src/platform/elements/data-table/data-table-expand.directive.ts","~/novo-elements/src/platform/elements/data-table/data-table-clear-button.component.ts","~/novo-elements/src/platform/elements/data-table/data-table.module.ts","~/novo-elements/src/platform/elements/data-table/services/remote-data-table.service.ts","~/novo-elements/src/platform/elements/simple-table/table-source.ts","~/novo-elements/src/platform/elements/simple-table/state.ts","~/novo-elements/src/platform/elements/simple-table/table.ts","~/novo-elements/src/platform/elements/simple-table/sort.ts","~/novo-elements/src/platform/elements/simple-table/cell.ts","~/novo-elements/src/platform/elements/simple-table/row.ts","~/novo-elements/src/platform/elements/simple-table/cell-header.ts","~/novo-elements/src/platform/elements/simple-table/pagination.ts","~/novo-elements/src/platform/elements/simple-table/activity-table-renderers.ts","~/novo-elements/src/platform/elements/simple-table/simple-table.module.ts","~/novo-elements/src/platform/services/global/global.service.ts","~/novo-elements/src/platform/services/storage/storage.service.ts","~/novo-elements/src/platform/elements/places/places.service.ts","~/novo-elements/src/platform/utils/app-bridge/AppBridge.ts","~/novo-elements/src/platform/novo-elements.providers.ts","~/novo-elements/src/platform/elements/popover/PopOverContent.ts","~/novo-elements/src/platform/elements/popover/PopOver.ts","~/novo-elements/src/platform/elements/popover/PopOver.module.ts","~/novo-elements/src/platform/elements/places/places.component.ts","~/novo-elements/src/platform/elements/places/places.module.ts","~/novo-elements/src/platform/novo-elements.module.ts","~/novo-elements/src/platform/utils/Helpers.ts","~/novo-elements/src/platform/elements/ace-editor/AceEditor.ts","~/novo-elements/src/platform/elements/ace-editor/AceEditor.module.ts","~/novo-elements/src/platform/pipes/plural/Plural.ts","~/novo-elements/src/platform/pipes/decode-uri/DecodeURI.ts","~/novo-elements/src/platform/pipes/group-by/GroupBy.ts","~/novo-elements/src/platform/pipes/Pipes.module.ts","~/novo-elements/src/platform/elements/button/Button.ts","~/novo-elements/src/platform/elements/button/Button.module.ts","~/novo-elements/src/platform/elements/loading/Loading.ts","~/novo-elements/src/platform/elements/loading/Loading.module.ts","~/novo-elements/src/platform/elements/tooltip/Tooltip.component.ts","~/novo-elements/src/platform/elements/tooltip/Tooltip.directive.ts","~/novo-elements/src/platform/elements/tooltip/Tooltip.module.ts","~/novo-elements/src/platform/services/novo-label-service.ts","~/novo-elements/src/platform/elements/card/Card.ts","~/novo-elements/src/platform/elements/card/Card.module.ts","~/novo-elements/src/platform/elements/calendar/common/EventTypeLegend.ts","~/novo-elements/src/platform/elements/calendar/common/CalendarDateChange.ts","~/novo-elements/src/platform/utils/calendar-utils/CalendarUtils.ts","~/novo-elements/src/platform/elements/calendar/month/CalendarMonthView.ts","~/novo-elements/src/platform/elements/calendar/month/CalendarMonthHeader.ts","~/novo-elements/src/platform/elements/calendar/month/CalendarMonthDay.ts","~/novo-elements/src/platform/elements/calendar/week/CalendarWeekView.ts","~/novo-elements/src/platform/elements/calendar/week/CalendarWeekHeader.ts","~/novo-elements/src/platform/elements/calendar/week/CalendarWeekEvent.ts","~/novo-elements/src/platform/elements/calendar/day/CalendarDayView.ts","~/novo-elements/src/platform/elements/calendar/day/CalendarDayEvent.ts","~/novo-elements/src/platform/elements/calendar/day/CalendarHourSegment.ts","~/novo-elements/src/platform/elements/calendar/day/CalendarAllDayEvent.ts","~/novo-elements/src/platform/elements/calendar/pipe/Weekday.pipe.ts","~/novo-elements/src/platform/elements/calendar/pipe/Month.pipe.ts","~/novo-elements/src/platform/elements/calendar/pipe/MonthDay.pipe.ts","~/novo-elements/src/platform/elements/calendar/pipe/Year.pipe.ts","~/novo-elements/src/platform/elements/calendar/pipe/Hours.pipe.ts","~/novo-elements/src/platform/elements/calendar/pipe/DayOfMonth.pipe.ts","~/novo-elements/src/platform/elements/calendar/pipe/EndOfWeekDisplayPipe.pipe.ts","~/novo-elements/src/platform/elements/calendar/Calendar.module.ts","~/novo-elements/src/platform/elements/toast/Toast.ts","~/novo-elements/src/platform/elements/toast/Toast.module.ts","~/novo-elements/src/platform/elements/header/Header.ts","~/novo-elements/src/platform/elements/header/Header.module.ts","~/novo-elements/src/platform/elements/tabs/Tabs.ts","~/novo-elements/src/platform/elements/tabs/Tabs.module.ts","~/novo-elements/src/platform/elements/tiles/Tiles.ts","~/novo-elements/src/platform/elements/tiles/Tiles.module.ts","~/novo-elements/src/platform/utils/deferred/Deferred.ts","~/novo-elements/src/platform/utils/component-utils/ComponentUtils.ts","~/novo-elements/src/platform/elements/modal/Modal.ts","~/novo-elements/src/platform/elements/modal/Modal.module.ts","~/novo-elements/src/platform/elements/list/List.ts","~/novo-elements/src/platform/elements/list/List.module.ts","~/novo-elements/src/platform/utils/outside-click/OutsideClick.ts","~/novo-elements/src/platform/utils/key-codes/KeyCodes.ts","~/novo-elements/src/platform/elements/picker/extras/base-picker-results/BasePickerResults.ts","~/novo-elements/src/platform/elements/picker/extras/picker-results/PickerResults.ts","~/novo-elements/src/platform/elements/quick-note/extras/quick-note-results/QuickNoteResults.ts","~/novo-elements/src/platform/elements/quick-note/QuickNote.ts","~/novo-elements/src/platform/elements/quick-note/QuickNote.module.ts","~/novo-elements/src/platform/elements/radio/Radio.ts","~/novo-elements/src/platform/elements/radio/Radio.module.ts","../../../node_modules/src/util/isFunction.ts","../../../node_modules/src/util/isArray.ts","../../../node_modules/src/util/isObject.ts","../../../node_modules/src/util/errorObject.ts","../../../node_modules/src/util/tryCatch.ts","../../../node_modules/src/util/UnsubscriptionError.ts","../../../node_modules/src/Subscription.ts","../../../node_modules/src/Observer.ts","../../../node_modules/src/util/root.ts","../../../node_modules/src/symbol/rxSubscriber.ts","../../../node_modules/src/Subscriber.ts","../../../node_modules/src/util/EmptyError.ts","../../../node_modules/src/operators/first.ts","../../../node_modules/src/OuterSubscriber.ts","../../../node_modules/src/util/isArrayLike.ts","../../../node_modules/src/util/isPromise.ts","../../../node_modules/src/util/toSubscriber.ts","../../../node_modules/src/symbol/observable.ts","../../../node_modules/src/util/noop.ts","../../../node_modules/src/util/pipe.ts","../../../node_modules/src/Observable.ts","../../../node_modules/src/symbol/iterator.ts","../../../node_modules/src/InnerSubscriber.ts","../../../node_modules/src/util/subscribeToResult.ts","../../../node_modules/src/operators/switchMap.ts","~/novo-elements/src/platform/elements/overlay/Overlay.ts","~/novo-elements/src/platform/utils/notifier/notifier.util.ts","~/novo-elements/src/platform/elements/dropdown/Dropdown.ts","~/novo-elements/src/platform/elements/overlay/Overlay.module.ts","~/novo-elements/src/platform/elements/dropdown/Dropdown.module.ts","~/novo-elements/src/platform/elements/select/Select.ts","~/novo-elements/src/platform/elements/select/Select.module.ts","~/novo-elements/src/platform/elements/switch/Switch.ts","~/novo-elements/src/platform/elements/switch/Switch.module.ts","~/novo-elements/src/platform/elements/picker/Picker.ts","~/novo-elements/src/platform/elements/picker/extras/entity-picker-results/EntityPickerResults.ts","~/novo-elements/src/platform/elements/picker/extras/checklist-picker-results/ChecklistPickerResults.ts","~/novo-elements/src/platform/elements/picker/extras/grouped-multi-picker-results/GroupedMultiPickerResults.ts","~/novo-elements/src/platform/elements/picker/extras/skills-picker-results/SkillsSpecialtyPickerResults.ts","~/novo-elements/src/platform/elements/picker/extras/distributionlist-picker-results/DistributionListPickerResults.ts","~/novo-elements/src/platform/elements/picker/Picker.module.ts","~/novo-elements/src/platform/elements/search/SearchBox.ts","~/novo-elements/src/platform/elements/search/SearchBox.module.ts","~/novo-elements/src/platform/elements/dragula/DragulaService.ts","~/novo-elements/src/platform/elements/dragula/Dragula.ts","~/novo-elements/src/platform/elements/dragula/Dragula.module.ts","~/novo-elements/src/platform/elements/slider/Slider.ts","~/novo-elements/src/platform/elements/slider/Slider.module.ts","~/novo-elements/src/platform/elements/chips/Chips.ts","~/novo-elements/src/platform/elements/chips/RowChips.ts","~/novo-elements/src/platform/elements/chips/Chips.module.ts","~/novo-elements/src/platform/elements/date-picker/DatePicker.ts","../../../node_modules/text-mask-addons/dist/createAutoCorrectedDatePipe.js","~/novo-elements/src/platform/services/date-format/DateFormat.ts","~/novo-elements/src/platform/elements/date-picker/DatePickerInput.ts","~/novo-elements/src/platform/elements/date-picker/DatePicker.module.ts","~/novo-elements/src/platform/elements/time-picker/TimePicker.ts","~/novo-elements/src/platform/elements/time-picker/TimePickerInput.ts","~/novo-elements/src/platform/elements/time-picker/TimePicker.module.ts","~/novo-elements/src/platform/elements/date-time-picker/DateTimePicker.ts","~/novo-elements/src/platform/elements/date-time-picker/DateTimePickerInput.ts","~/novo-elements/src/platform/elements/date-time-picker/DateTimePicker.module.ts","~/novo-elements/src/platform/elements/ckeditor/CKEditor.ts","~/novo-elements/src/platform/elements/ckeditor/CKEditor.module.ts","~/novo-elements/src/platform/elements/tip-well/TipWell.ts","~/novo-elements/src/platform/elements/tip-well/TipWell.module.ts","~/novo-elements/src/platform/services/template/NovoTemplateService.ts","~/novo-elements/src/platform/elements/common/novo-template/novo-template.directive.ts","~/novo-elements/src/platform/elements/form/DynamicForm.ts","~/novo-elements/src/platform/elements/form/Form.ts","~/novo-elements/src/platform/elements/form/NovoFormControl.ts","~/novo-elements/src/platform/elements/form/controls/BaseControl.ts","~/novo-elements/src/platform/elements/form/FormValidators.ts","~/novo-elements/src/platform/elements/form/controls/address/AddressControl.ts","~/novo-elements/src/platform/elements/form/controls/check-list/CheckListControl.ts","~/novo-elements/src/platform/elements/form/controls/checkbox/CheckboxControl.ts","~/novo-elements/src/platform/elements/form/controls/date/DateControl.ts","~/novo-elements/src/platform/elements/form/controls/date-time/DateTimeControl.ts","~/novo-elements/src/platform/elements/form/controls/editor/EditorControl.ts","~/novo-elements/src/platform/elements/form/controls/ace-editor/AceEditorControl.ts","~/novo-elements/src/platform/elements/form/controls/file/FileControl.ts","~/novo-elements/src/platform/elements/form/controls/native-select/NativeSelectControl.ts","~/novo-elements/src/platform/elements/form/controls/picker/PickerControl.ts","~/novo-elements/src/platform/elements/form/controls/quick-note/QuickNoteControl.ts","~/novo-elements/src/platform/elements/form/controls/radio/RadioControl.ts","~/novo-elements/src/platform/elements/form/controls/read-only/ReadOnlyControl.ts","~/novo-elements/src/platform/elements/form/controls/select/SelectControl.ts","~/novo-elements/src/platform/elements/form/controls/text-area/TextAreaControl.ts","~/novo-elements/src/platform/elements/form/controls/textbox/TextBoxControl.ts","~/novo-elements/src/platform/elements/form/controls/tiles/TilesControl.ts","~/novo-elements/src/platform/elements/form/controls/time/TimeControl.ts","~/novo-elements/src/platform/elements/form/controls/grouped/GroupedControl.ts","~/novo-elements/src/platform/elements/form/controls/ControlFactory.ts","~/novo-elements/src/platform/elements/form/controls/custom/CustomControl.ts","~/novo-elements/src/platform/services/options/OptionsService.ts","~/novo-elements/src/platform/utils/form-utils/FormUtils.ts","~/novo-elements/src/platform/elements/toast/ToastService.ts","~/novo-elements/src/platform/elements/modal/ModalService.ts","~/novo-elements/src/platform/elements/form/FieldInteractionModals.ts","~/novo-elements/src/platform/elements/form/FieldInteractionApi.ts","~/novo-elements/src/platform/elements/form/Control.ts","~/novo-elements/src/platform/utils/countries/Countries.ts","~/novo-elements/src/platform/elements/form/extras/address/Address.ts","~/novo-elements/src/platform/elements/form/extras/checkbox/Checkbox.ts","~/novo-elements/src/platform/elements/form/extras/checkbox/CheckList.ts","~/novo-elements/src/platform/elements/form/extras/file/extras/file/File.ts","~/novo-elements/src/platform/elements/form/extras/file/FileInput.ts","~/novo-elements/src/platform/elements/form/extras/FormExtras.module.ts","~/novo-elements/src/platform/elements/form/ControlGroup.ts","~/novo-elements/src/platform/elements/form/ControlTemplates.ts","~/novo-elements/src/platform/elements/common/common.module.ts","~/novo-elements/src/platform/elements/form/Form.module.ts","~/novo-elements/src/platform/elements/table/extras/pagination/Pagination.ts","~/novo-elements/src/platform/elements/table/extras/base-renderer/BaseRenderer.ts","~/novo-elements/src/platform/elements/table/extras/row-details/RowDetails.ts","~/novo-elements/src/platform/elements/table/extras/table-cell/TableCell.ts","~/novo-elements/src/platform/elements/table/extras/table-filter/TableFilter.ts","~/novo-elements/src/platform/elements/table/extras/th-orderable/ThOrderable.ts","~/novo-elements/src/platform/elements/table/extras/th-sortable/ThSortable.ts","~/novo-elements/src/platform/elements/table/extras/date-cell/DateCell.ts","~/novo-elements/src/platform/elements/table/extras/percentage-cell/PercentageCell.ts","~/novo-elements/src/platform/elements/table/extras/dropdown-cell/DropdownCell.ts","~/novo-elements/src/platform/elements/table/extras/keep-filter-focus/KeepFilterFocus.ts","~/novo-elements/src/platform/elements/table/extras/table-actions/TableActions.ts","~/novo-elements/src/platform/elements/table/extras/table-footer/TableFooter.ts","~/novo-elements/src/platform/elements/table/extras/table-header/TableHeader.ts","~/novo-elements/src/platform/elements/table/extras/TableExtras.module.ts","~/novo-elements/src/platform/services/data-provider/CollectionEvent.ts","~/novo-elements/src/platform/services/data-provider/ArrayCollection.ts","~/novo-elements/src/platform/services/data-provider/PagedArrayCollection.ts","~/novo-elements/src/platform/elements/table/Table.ts","~/novo-elements/src/platform/elements/table/Table.module.ts","~/novo-elements/src/platform/elements/value/Value.ts","~/novo-elements/src/platform/elements/value/Render.ts","~/novo-elements/src/platform/elements/value/EntityList.ts","~/novo-elements/src/platform/elements/value/Value.module.ts","~/novo-elements/src/platform/elements/icon/Icon.ts","~/novo-elements/src/platform/elements/icon/Icon.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n})\nexport class CdkAccordion {\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item',\n  exportAs: 'cdkAccordionItem',\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.destroyed.emit();\n    this._removeUniqueSelectionListener();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER],\n})\nexport class CdkAccordionModule {}\n","import {Directive, Input} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkAccordion} from '@angular/cdk/accordion';\n\n/** NovoAccordion's display modes. */\nexport type NovoAccordionDisplayMode = 'default' | 'flat';\n/**\n * Directive for a Material Design Accordion.\n */\nexport class NovoAccordion extends CdkAccordion {\n/**\n * Whether the expansion indicator should be hidden.\n * @return {?}\n */\nget hideToggle(): boolean { return this._hideToggle; }\n/**\n * @param {?} show\n * @return {?}\n */\nset hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\nprivate _hideToggle: boolean = false;\n/**\n * The display mode used for all expansion panels in the accordion. Currently two display\n * modes exist:\n *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n *     panel at a different elevation from the reset of the accordion.\n *  flat - no spacing is placed around expanded panels, showing all panels at the same\n *     elevation.\n */\ndisplayMode: NovoAccordionDisplayMode = 'default';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-accordion',\n  exportAs: 'novoAccordion',\n  host: {\n    class: 'novo-accordion'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hideToggle': [{ type: Input },],\n'displayMode': [{ type: Input },],\n};\n}\n\nfunction NovoAccordion_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoAccordion.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoAccordion.ctorParameters;\n/** @type {?} */\nNovoAccordion.propDecorators;\n/** @type {?} */\nNovoAccordion.prototype._hideToggle;\n/**\n * The display mode used for all expansion panels in the accordion. Currently two display\n * modes exist:\n *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n *     panel at a different elevation from the reset of the accordion.\n *  flat - no spacing is placed around expanded panels, showing all panels at the same\n *     elevation.\n * @type {?}\n */\nNovoAccordion.prototype.displayMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n  protected work: (this: this, state?: T) => void;\n\n  constructor(protected scheduler: AsyncScheduler,\n              work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n    this.work = work;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import {  ArrayObservable  } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import {  FromObservable  } from './FromObservable';\n\nexport const from = FromObservable.create;","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","\nimport { ObservableInput } from '../Observable';\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap(identity as (value: T, index: number) => ObservableInput<{}>, null, concurrent);\n}","\nimport { mergeAll } from './mergeAll';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): MonoTypeOperatorFunction<T> {\n  return mergeAll(1);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | IScheduler)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | IScheduler)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll()(of(...observables)) as Observable<R>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(/** @deprecated internal use only */ public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              public source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(v1: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(...array: Array<T | IScheduler>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(...array: Array<T | IScheduler>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len === 1) {\n      return concatStatic(new ScalarObservable<T>(<T>array[0], scheduler), source);\n    } else if (len > 1) {\n      return concatStatic(new ArrayObservable<T>(<T[]>array, scheduler), source);\n    } else {\n      return concatStatic(new EmptyObservable<T>(scheduler), source);\n    }\n  };\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import {\n  animate,\n  animateChild,\n  group,\n  state,\n  style,\n  transition,\n  trigger,\n  query,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n/**\n * Time and timing curve for expansion panel animations.\n */\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n */\nexport const novoExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed', style({transform: 'rotate(0deg)'})),\n    state('expanded', style({transform: 'rotate(180deg)'})),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ]),\n\n  /** Animation that expands and collapses the panel header height. */\n  expansionHeaderHeight: trigger('expansionHeight', [\n    state('collapsed', style({\n      height: '{{collapsedHeight}}',\n    }), {\n      params: {collapsedHeight: '48px'},\n    }),\n    state('expanded', style({\n      height: '{{expandedHeight}}'\n    }), {\n      params: {expandedHeight: '56px'}\n    }),\n    transition('expanded <=> collapsed', group([\n      query('@indicatorRotate', animateChild(), {optional: true}),\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ])),\n  ]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed', style({height: '0px', visibility: 'hidden'})),\n    state('expanded', style({height: '*', visibility: 'visible'})),\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n  ])\n};\n","import {Directive, TemplateRef} from '@angular/core';\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nexport class NovoExpansionPanelContent {\n/**\n * @param {?} _template\n */\nconstructor(public _template: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ng-template[matExpansionPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NovoExpansionPanelContent_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionPanelContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionPanelContent.ctorParameters;\n/** @type {?} */\nNovoExpansionPanelContent.prototype._template;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Output,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { filter, startWith, take } from 'rxjs/operators';\nimport { NovoAccordion } from './accordion';\nimport { novoExpansionAnimations } from './expansion-animations';\nimport { NovoExpansionPanelContent } from './expansion-panel-content';\n\n/** NovoExpansionPanel's states. */\nexport type NovoExpansionPanelState = 'expanded' | 'collapsed';\n/**\n * Counter for generating unique element ids.\n */\nlet uniqueId = 0;\n/**\n * `<novo-expansion-panel>`\n * \n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the NovoAccordion directive attached.\n */\nexport class NovoExpansionPanel extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\n   disabled: boolean;\n   expanded: boolean;\n/**\n * Whether the toggle indicator should be hidden.\n * @return {?}\n */\nget hideToggle(): boolean {\n    return this._hideToggle;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset hideToggle(value: boolean) {\n    this._hideToggle = coerceBooleanProperty(value);\n  }\nprivate _hideToggle = false;\n/**\n * @return {?}\n */\nget padding(): boolean {\n    return this._padding;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset padding(value: boolean) {\n    this._padding = coerceBooleanProperty(value);\n  }\nprivate _padding = true;\n\n   opened: EventEmitter<void> = new EventEmitter();\n   closed: EventEmitter<void> = new EventEmitter();\n   expandedChange: EventEmitter<boolean> = new EventEmitter();\n/**\n * Stream that emits for changes in `\\@Input` properties.\n */\nreadonly _inputChanges = new Subject<SimpleChanges>();\n/**\n * Optionally defined accordion the expansion panel belongs to.\n */\naccordion: NovoAccordion;\n/**\n * Content that will be rendered lazily.\n */\n_lazyContent: NovoExpansionPanelContent;\n/**\n * Portal holding the user's content.\n */\n_portal: TemplatePortal;\n/**\n * ID for the associated header element. Used for a11y labelling.\n */\n_headerId = `novo-expansion-panel-header-${uniqueId++}`;\n/**\n * @param {?} accordion\n * @param {?} _changeDetectorRef\n * @param {?} _uniqueSelectionDispatcher\n * @param {?} _viewContainerRef\n */\nconstructor(\n    \n    \n    accordion: NovoAccordion,\n    _changeDetectorRef: ChangeDetectorRef,\n    _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\nprivate _viewContainerRef: ViewContainerRef,\n  ) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this.accordion = accordion;\n  }\n/**\n * Whether the expansion indicator should be hidden.\n * @return {?}\n */\n_getHideToggle(): boolean {\n    if (this.accordion) {\n      return this.accordion.hideToggle;\n    }\n    return this.hideToggle;\n  }\n/**\n * Determines whether the expansion panel should have spacing between it and its siblings.\n * @return {?}\n */\n_hasSpacing(): boolean {\n    if (this.accordion) {\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n    return false;\n  }\n/**\n * Gets the expanded state string.\n * @return {?}\n */\n_getExpandedState(): NovoExpansionPanelState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith( /** @type {?} */((null))), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.ngOnDestroy();\n    this._inputChanges.complete();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_bodyAnimation(event: AnimationEvent) {\n    const /** @type {?} */ classList = event.element.classList;\n    const /** @type {?} */ cssClass = 'novo-expanded';\n    const { phaseName, toState } = event;\n\n    // Toggle the body's `overflow: hidden` class when closing starts or when expansion ends in\n    // order to prevent the cases where switching too early would cause the animation to jump.\n    // Note that we do it directly on the DOM element to avoid the slight delay that comes\n    // with doing it via change detection.\n    if (phaseName === 'done' && toState === 'expanded') {\n      classList.add(cssClass);\n    } else if (phaseName === 'start' && toState === 'collapsed') {\n      classList.remove(cssClass);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  styles: [`\n    @-webkit-keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @-webkit-keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @-webkit-keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @-webkit-keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    @keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    @keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    .novo-expansion-panel {\n      background: #ffffff;\n      color: #3d464d; }\n\n    .novo-action-row {\n      border-top-color: #3d464d; }\n\n    .novo-expansion-panel:not(.novo-expanded) .novo-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .novo-expansion-panel:not(.novo-expanded) .novo-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .novo-expansion-panel:not(.novo-expanded) .novo-expansion-panel-header:not([aria-disabled='true']):hover {\n      background: rgba(0, 0, 0, 0.04); }\n\n    .novo-expansion-panel-header-title {\n      color: #3d464d; }\n\n    .novo-expansion-panel-header-description,\n    .novo-expansion-indicator::after {\n      color: #999999; }\n\n    .novo-expansion-panel-header[aria-disabled='true'] {\n      color: #999999;\n      pointer-events: none; }\n      .novo-expansion-panel-header[aria-disabled='true'] .novo-expansion-panel-header-title,\n      .novo-expansion-panel-header[aria-disabled='true'] .novo-expansion-panel-header-description {\n        color: inherit; }\n\n    .novo-expansion-panel.novo-expanded[theme='company'] {\n      border-top: 3px solid #3399dd; }\n\n    .novo-expansion-panel.novo-expanded[theme='candidate'] {\n      border-top: 3px solid #44bb77; }\n\n    .novo-expansion-panel.novo-expanded[theme='navigation'] {\n      border-top: 3px solid #2f384f; }\n\n    .novo-expansion-panel.novo-expanded[theme='lead'] {\n      border-top: 3px solid #aa6699; }\n\n    .novo-expansion-panel.novo-expanded[theme='contact'] {\n      border-top: 3px solid #ffaa44; }\n\n    .novo-expansion-panel.novo-expanded[theme='opportunity'] {\n      border-top: 3px solid #662255; }\n\n    .novo-expansion-panel.novo-expanded[theme='job'] {\n      border-top: 3px solid #bb5566; }\n\n    .novo-expansion-panel.novo-expanded[theme='jobCode'] {\n      border-top: 3px solid #696d79; }\n\n    .novo-expansion-panel.novo-expanded[theme='earnCode'] {\n      border-top: 3px solid #696d79; }\n\n    .novo-expansion-panel.novo-expanded[theme='sendout'] {\n      border-top: 3px solid #747884; }\n\n    .novo-expansion-panel.novo-expanded[theme='placement'] {\n      border-top: 3px solid #0b344f; }\n\n    .novo-expansion-panel.novo-expanded[theme='task'] {\n      border-top: 3px solid #4f5361; }\n\n    .novo-expansion-panel.novo-expanded[theme='distributionList'] {\n      border-top: 3px solid #4f5361; }\n\n    .novo-expansion-panel.novo-expanded[theme='credential'] {\n      border-top: 3px solid #4f5361; }\n\n    .novo-expansion-panel.novo-expanded[theme='user'] {\n      border-top: 3px solid #4f5361; }\n\n    .novo-expansion-panel.novo-expanded[theme='corporateuser'] {\n      border-top: 3px solid #4f5361; }\n\n    .novo-expansion-panel.novo-expanded[theme='aqua'] {\n      border-top: 3px solid #3bafda; }\n\n    .novo-expansion-panel.novo-expanded[theme='ocean'] {\n      border-top: 3px solid #4a89dc; }\n\n    .novo-expansion-panel.novo-expanded[theme='mint'] {\n      border-top: 3px solid #37bc9b; }\n\n    .novo-expansion-panel.novo-expanded[theme='grass'] {\n      border-top: 3px solid #8cc152; }\n\n    .novo-expansion-panel.novo-expanded[theme='sunflower'] {\n      border-top: 3px solid #f6b042; }\n\n    .novo-expansion-panel.novo-expanded[theme='bittersweet'] {\n      border-top: 3px solid #eb6845; }\n\n    .novo-expansion-panel.novo-expanded[theme='grapefruit'] {\n      border-top: 3px solid #da4453; }\n\n    .novo-expansion-panel.novo-expanded[theme='carnation'] {\n      border-top: 3px solid #d770ad; }\n\n    .novo-expansion-panel.novo-expanded[theme='lavender'] {\n      border-top: 3px solid #967adc; }\n\n    .novo-expansion-panel.novo-expanded[theme='positive'] {\n      border-top: 3px solid #4a89dc; }\n\n    .novo-expansion-panel.novo-expanded[theme='success'] {\n      border-top: 3px solid #8cc152; }\n\n    .novo-expansion-panel.novo-expanded[theme='negative'] {\n      border-top: 3px solid #da4453; }\n\n    .novo-expansion-panel.novo-expanded[theme='warning'] {\n      border-top: 3px solid #f6b042; }\n\n    .novo-expansion-panel.novo-expanded[theme='black'] {\n      border-top: 3px solid #000000; }\n\n    .novo-expansion-panel.novo-expanded[theme='dark'] {\n      border-top: 3px solid #3d464d; }\n\n    .novo-expansion-panel.novo-expanded[theme='pulse'] {\n      border-top: 3px solid #3bafda; }\n\n    .novo-expansion-panel.novo-expanded[theme='neutral'] {\n      border-top: 3px solid #4f5361; }\n\n    .novo-expansion-panel.novo-expanded[theme='navy'] {\n      border-top: 3px solid #0d2d42; }\n\n    .novo-expansion-panel.novo-expanded[theme='contract'] {\n      border-top: 3px solid #ffaa44; }\n\n    .novo-expansion-panel.novo-expanded[theme='mountain'] {\n      border-top: 3px solid #9678b6; }\n\n    .novo-expansion-panel.novo-expanded[theme='submission'] {\n      border-top: 3px solid #a9adbb; }\n\n    .novo-expansion-panel.novo-expanded[theme='note'] {\n      border-top: 3px solid #747884; }\n\n    .novo-expansion-panel.novo-expanded[theme='background'] {\n      border-top: 3px solid #f4f4f4; }\n\n    .novo-expansion-panel.novo-expanded[theme='white'] {\n      border-top: 3px solid #ffffff; }\n\n    .novo-expansion-panel.novo-expanded[theme='grey'] {\n      border-top: 3px solid #999999; }\n\n    .novo-expansion-panel.novo-expanded[theme='off-white'] {\n      border-top: 3px solid #f4f4f4; }\n\n    .novo-expansion-panel.novo-expanded[theme='light'] {\n      border-top: 3px solid #d9dadc; }\n\n    .novo-expansion-panel {\n      -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n              box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box;\n      display: block;\n      margin: 0;\n      -webkit-transition: margin 225ms ease-in-out;\n      transition: margin 225ms ease-in-out;\n      margin: 0px 16px; }\n      .novo-expansion-panel.novo-expanded {\n        margin: 16px 4px; }\n        .novo-expansion-panel.novo-expanded:first-child {\n          margin-top: 0; }\n        .novo-expansion-panel.novo-expanded:last-child {\n          margin-bottom: 0; }\n\n    .novo-expansion-panel-content {\n      overflow: hidden; }\n      .novo-expansion-panel-content.novo-expanded {\n        overflow: visible; }\n\n    .novo-expansion-panel-padding .novo-expansion-panel-body {\n      padding: 0 24px 16px; }\n\n    .novo-accordion .novo-expansion-panel-spacing:first-child {\n      margin-top: 0; }\n\n    .novo-accordion .novo-expansion-panel-spacing:last-child {\n      margin-bottom: 0; }\n\n    .novo-action-row {\n      border-top-style: solid;\n      border-top-width: 1px;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end;\n      padding: 16px 8px 16px 24px; }\n      .novo-action-row button.novo-button {\n        margin-left: 8px; }\n        [dir='rtl'] .novo-action-row button.novo-button {\n          margin-left: 0;\n          margin-right: 8px; }\n  `],\n  selector: 'novo-expansion-panel',\n  exportAs: 'novoExpansionPanel',\n  template: `\n    <ng-content select=\"novo-expansion-panel-header\"></ng-content>\n    <div class=\"novo-expansion-panel-content\"\n         role=\"region\"\n         [@bodyExpansion]=\"_getExpandedState()\"\n         (@bodyExpansion.done)=\"_bodyAnimation($event)\"\n         (@bodyExpansion.start)=\"_bodyAnimation($event)\"\n         [attr.aria-labelledby]=\"_headerId\"\n         [id]=\"id\"\n         #body>\n      <div class=\"novo-expansion-panel-body\">\n        <ng-content></ng-content>\n        <ng-template [cdkPortalOutlet]=\"_portal\"></ng-template>\n      </div>\n      <ng-content select=\"novo-action-row\"></ng-content>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [novoExpansionAnimations.bodyExpansion],\n  host: {\n    class: 'novo-expansion-panel',\n    '[class.novo-expanded]': 'expanded',\n    '[class.novo-expansion-panel-spacing]': '_hasSpacing()',\n    '[class.novo-expansion-panel-padding]': 'padding',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoAccordion, decorators: [{ type: Optional }, { type: Host }, ]},\n{type: ChangeDetectorRef, },\n{type: UniqueSelectionDispatcher, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'expanded': [{ type: Input },],\n'hideToggle': [{ type: Input },],\n'padding': [{ type: Input },],\n'opened': [{ type: Output },],\n'closed': [{ type: Output },],\n'expandedChange': [{ type: Output },],\n'_lazyContent': [{ type: ContentChild, args: [NovoExpansionPanelContent, ] },],\n};\n}\n\nfunction NovoExpansionPanel_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionPanel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionPanel.ctorParameters;\n/** @type {?} */\nNovoExpansionPanel.propDecorators;\n/** @type {?} */\nNovoExpansionPanel.prototype.disabled;\n/** @type {?} */\nNovoExpansionPanel.prototype.expanded;\n/** @type {?} */\nNovoExpansionPanel.prototype._hideToggle;\n/** @type {?} */\nNovoExpansionPanel.prototype._padding;\n/** @type {?} */\nNovoExpansionPanel.prototype.opened;\n/** @type {?} */\nNovoExpansionPanel.prototype.closed;\n/** @type {?} */\nNovoExpansionPanel.prototype.expandedChange;\n/**\n * Stream that emits for changes in `\\@Input` properties.\n * @type {?}\n */\nNovoExpansionPanel.prototype._inputChanges;\n/**\n * Optionally defined accordion the expansion panel belongs to.\n * @type {?}\n */\nNovoExpansionPanel.prototype.accordion;\n/**\n * Content that will be rendered lazily.\n * @type {?}\n */\nNovoExpansionPanel.prototype._lazyContent;\n/**\n * Portal holding the user's content.\n * @type {?}\n */\nNovoExpansionPanel.prototype._portal;\n/**\n * ID for the associated header element. Used for a11y labelling.\n * @type {?}\n */\nNovoExpansionPanel.prototype._headerId;\n/** @type {?} */\nNovoExpansionPanel.prototype._viewContainerRef;\n}\n\nexport class NovoExpansionPanelActionRow {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-action-row',\n  host: {\n    class: 'novo-action-row',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoExpansionPanelActionRow_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionPanelActionRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionPanelActionRow.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Host,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport'rxjs/add/operator/filter';\nimport { novoExpansionAnimations } from './expansion-animations';\nimport { NovoExpansionPanel } from './expansion-panel';\n/**\n * `<novo-expansion-panel-header>`\n * \n * This component corresponds to the header element of an `<novo-expansion-panel>`.\n */\nexport class NovoExpansionPanelHeader implements OnDestroy {\nprivate _parentChangeSubscription = Subscription.EMPTY;\n/**\n * @param {?} panel\n * @param {?} _element\n * @param {?} _changeDetectorRef\n */\nconstructor(\npublic panel: NovoExpansionPanel,\nprivate _element: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to  subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(\n      panel.opened,\n      panel.closed,\n      panel._inputChanges.filter((changes) => !!(changes.hideToggle || changes.disabled)),\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n\n    // _focusMonitor.monitor(_element.nativeElement);\n  }\n/**\n * Height of the header while the panel is expanded.\n */\nexpandedHeight: string;\n/**\n * Height of the header while the panel is collapsed.\n */\ncollapsedHeight: string;\n/**\n * Toggles the expanded state of the panel.\n * @return {?}\n */\n_toggle(): void {\n    this.panel.toggle();\n  }\n/**\n * Gets whether the panel is expanded.\n * @return {?}\n */\n_isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n/**\n * Gets the expanded state string of the panel.\n * @return {?}\n */\n_getExpandedState(): string {\n    return this.panel._getExpandedState();\n  }\n/**\n * Gets the panel id.\n * @return {?}\n */\n_getPanelId(): string {\n    return this.panel.id;\n  }\n/**\n * Gets whether the expand indicator should be shown.\n * @return {?}\n */\n_showToggle(): boolean {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n/**\n * Handle keydown event calling to toggle() if appropriate.\n * @param {?} event\n * @return {?}\n */\n_keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this._toggle();\n        break;\n      default:\n        return;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    // this._focusMonitor.stopMonitoring(this._element.nativeElement);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-expansion-panel-header',\n  styles: [`\n    .novo-expansion-panel-header {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      padding: 0 24px; }\n      .novo-expansion-panel-header:focus, .novo-expansion-panel-header:hover {\n        outline: none; }\n      .novo-expansion-panel-header.novo-expanded:focus, .novo-expansion-panel-header.novo-expanded:hover {\n        background: inherit; }\n      .novo-expansion-panel-header:not([aria-disabled='true']) {\n        cursor: pointer; }\n\n    .novo-content {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      overflow: hidden; }\n\n    .novo-expansion-panel-header-title,\n    .novo-expansion-panel-header-description {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-flex: 1;\n          -ms-flex-positive: 1;\n              flex-grow: 1;\n      margin-right: 16px;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center; }\n      [dir='rtl'] .novo-expansion-panel-header-title, [dir='rtl']\n      .novo-expansion-panel-header-description {\n        margin-right: 0;\n        margin-left: 16px; }\n\n    .novo-expansion-panel-header-description {\n      -webkit-box-flex: 2;\n          -ms-flex-positive: 2;\n              flex-grow: 2; }\n\n    /**\n     * Creates the expansion indicator arrow. Done using ::after rather than having\n     * additional nodes in the template.\n     */\n    .novo-expansion-indicator::after {\n      border-style: solid;\n      border-width: 0 2px 2px 0;\n      content: '';\n      display: inline-block;\n      padding: 3px;\n      -webkit-transform: rotate(45deg);\n              transform: rotate(45deg);\n      vertical-align: middle; }\n  `],\n  template: `\n    <span class=\"novo-content\">\n      <ng-content select=\"novo-panel-title\"></ng-content>\n      <ng-content select=\"novo-panel-description\"></ng-content>\n      <ng-content></ng-content>\n    </span>\n    <span [@indicatorRotate]=\"_getExpandedState()\" *ngIf=\"_showToggle()\"\n          class=\"novo-expansion-indicator\"></span>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [novoExpansionAnimations.indicatorRotate, novoExpansionAnimations.expansionHeaderHeight],\n  host: {\n    class: 'novo-expansion-panel-header',\n    role: 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': '_isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '[class.novo-expanded]': '_isExpanded()',\n    '(click)': '_toggle()',\n    '(keydown)': '_keydown($event)',\n    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`,\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoExpansionPanel, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expandedHeight': [{ type: Input },],\n'collapsedHeight': [{ type: Input },],\n};\n}\n\nfunction NovoExpansionPanelHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionPanelHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionPanelHeader.ctorParameters;\n/** @type {?} */\nNovoExpansionPanelHeader.propDecorators;\n/** @type {?} */\nNovoExpansionPanelHeader.prototype._parentChangeSubscription;\n/**\n * Height of the header while the panel is expanded.\n * @type {?}\n */\nNovoExpansionPanelHeader.prototype.expandedHeight;\n/**\n * Height of the header while the panel is collapsed.\n * @type {?}\n */\nNovoExpansionPanelHeader.prototype.collapsedHeight;\n/** @type {?} */\nNovoExpansionPanelHeader.prototype.panel;\n/** @type {?} */\nNovoExpansionPanelHeader.prototype._element;\n/** @type {?} */\nNovoExpansionPanelHeader.prototype._changeDetectorRef;\n}\n\n/**\n * `<novo-panel-description>`\n * \n * This direction is to be used inside of the NovoExpansionPanelHeader component.\n */\nexport class NovoExpansionPanelDescription {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-panel-description',\n  host: {\n    class: 'novo-expansion-panel-header-description',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoExpansionPanelDescription_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionPanelDescription.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionPanelDescription.ctorParameters;\n}\n\n/**\n * `<novo-panel-title>`\n * \n * This direction is to be used inside of the NovoExpansionPanelHeader component.\n */\nexport class NovoExpansionPanelTitle {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-panel-title',\n  host: {\n    class: 'novo-expansion-panel-header-title',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoExpansionPanelTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionPanelTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionPanelTitle.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {NovoAccordion} from './accordion';\nimport {NovoExpansionPanel, NovoExpansionPanelActionRow} from './expansion-panel';\nimport {NovoExpansionPanelContent} from './expansion-panel-content';\nimport {\n  NovoExpansionPanelDescription,\n  NovoExpansionPanelHeader,\n  NovoExpansionPanelTitle,\n} from './expansion-panel-header';\nexport class NovoExpansionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, CdkAccordionModule, PortalModule],\n  exports: [\n    NovoAccordion,\n    NovoExpansionPanel,\n    NovoExpansionPanelActionRow,\n    NovoExpansionPanelHeader,\n    NovoExpansionPanelTitle,\n    NovoExpansionPanelDescription,\n    NovoExpansionPanelContent,\n  ],\n  declarations: [\n    NovoAccordion,\n    NovoExpansionPanel,\n    NovoExpansionPanelActionRow,\n    NovoExpansionPanelHeader,\n    NovoExpansionPanelTitle,\n    NovoExpansionPanelDescription,\n    NovoExpansionPanelContent,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoExpansionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoExpansionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoExpansionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, TemplateRef} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\nexport class NovoStepLabel extends CdkStepLabel {\n/**\n * @param {?} template\n */\nconstructor(template: TemplateRef<any>) {\n    super(template);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoStepLabel]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NovoStepLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoStepLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoStepLabel.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport {NovoStepLabel} from './step-label.component';\nexport class NovoStepHeader implements OnDestroy {\n\n   theme: string;\n   color: string;\n   icon: string;\n/**\n * State of the given step.\n */\nstate: string;\n/**\n * Label of the given step.\n */\nlabel: NovoStepLabel | string;\n/**\n * Overrides for the header icons, passed in via the stepper.\n */\niconOverrides: {[key: string]: TemplateRef<any>};\n/**\n * Index of the given step.\n * @return {?}\n */\nget index(): number { return this._index; }\n/**\n * @param {?} value\n * @return {?}\n */\nset index(value: number) { this._index = coerceNumberProperty(value); }\nprivate _index: number;\n/**\n * Whether the given step is selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selected(value: boolean) { this._selected = coerceBooleanProperty(value); }\nprivate _selected: boolean;\n/**\n * Whether the given step label is active.\n * @return {?}\n */\nget active(): boolean { return this._active; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) { this._active = coerceBooleanProperty(value); }\nprivate _active: boolean;\n/**\n * Whether the given step label is active.\n * @return {?}\n */\nget touched(): boolean { return this.selected || this.state === 'edit' || this.state === 'done'  }\n/**\n * Whether the given step is optional.\n * @return {?}\n */\nget optional(): boolean { return this._optional; }\n/**\n * @param {?} value\n * @return {?}\n */\nset optional(value: boolean) { this._optional = coerceBooleanProperty(value); }\nprivate _optional: boolean;\n/**\n * @param {?} _focusMonitor\n * @param {?} _element\n */\nconstructor(\nprivate _focusMonitor: FocusMonitor,\nprivate _element: ElementRef) {\n    _focusMonitor.monitor(_element.nativeElement, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._element.nativeElement);\n  }\n/**\n * Returns string label of given step if it is a text label.\n * @return {?}\n */\n_stringLabel(): string | null {\n    return this.label instanceof NovoStepLabel ? null : this.label;\n  }\n/**\n * Returns NovoStepLabel if the label of given step is a template label.\n * @return {?}\n */\n_templateLabel(): NovoStepLabel | null {\n    return this.label instanceof NovoStepLabel ? this.label : null;\n  }\n/**\n * Returns the host HTML element.\n * @return {?}\n */\n_getHostElement() {\n    return this._element.nativeElement;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-step-header',\n  template: `\n    <div [class.novo-step-icon]=\"touched\"\n         [class.novo-step-icon-not-touched]=\"!touched\">\n      <ng-container *ngIf=\"icon\">\n        <novo-icon size=\"small\" raised=\"true\" [theme]=\"theme\">{{icon}}</novo-icon>\n      </ng-container>\n      <ng-container *ngIf=\"!icon\">\n        <span class=\"novo-step-number\">{{index + 1}}</span>\n      </ng-container>\n    </div>\n    <div class=\"novo-step-label\"\n         [class.novo-step-label-active]=\"active\"\n         [class.novo-step-label-selected]=\"selected\">\n      <!-- If there is a label template, use it. -->\n      <ng-container *ngIf=\"_templateLabel()\" [ngTemplateOutlet]=\"_templateLabel()!.template\">\n      </ng-container>\n      <!-- It there is no label template, fall back to the text label. -->\n      <div class=\"novo-step-text-label\" *ngIf=\"_stringLabel()\">{{label}}</div>\n    </div>\n    <novo-step-status [state]=\"state\"></novo-step-status>\n  `,\n  styles: [`\n    @-webkit-keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @-webkit-keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @-webkit-keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @-webkit-keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    @keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    .novo-step-header {\n      overflow: visible;\n      outline: none;\n      cursor: pointer;\n      position: relative; }\n\n    .novo-step-optional {\n      font-size: 12px; }\n\n    .novo-step-icon,\n    .novo-step-icon-not-touched {\n      border-radius: 50%;\n      height: 24px;\n      width: 24px;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n      .novo-step-icon .novo-step-number,\n      .novo-step-icon-not-touched .novo-step-number {\n        font-size: 1em;\n        min-width: 1.6em;\n        height: 1.6em;\n        -webkit-box-shadow: 2px 2px 0px rgba(0, 0, 0, 0.2);\n                box-shadow: 2px 2px 0px rgba(0, 0, 0, 0.2);\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        border-radius: 4px; }\n\n    .novo-step-icon .novo-step-number {\n      background: #4a89dc;\n      color: #ffffff; }\n\n    .novo-step-icon-not-touched .novo-step-number {\n      background: #a9adbb;\n      color: #ffffff; }\n\n    .novo-step-label {\n      display: inline-block;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      min-width: 50px;\n      vertical-align: middle;\n      text-align: center;\n      padding: 4px 0px; }\n\n    .novo-step-text-label {\n      text-align: center;\n      text-overflow: ellipsis;\n      overflow: hidden; }\n  `],\n  host: {\n    'class': 'novo-step-header',\n    'role': 'tab',\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FocusMonitor, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'color': [{ type: Input },],\n'icon': [{ type: Input },],\n'state': [{ type: Input },],\n'label': [{ type: Input },],\n'iconOverrides': [{ type: Input },],\n'index': [{ type: Input },],\n'selected': [{ type: Input },],\n'active': [{ type: Input },],\n'optional': [{ type: Input },],\n};\n}\n\nfunction NovoStepHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoStepHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoStepHeader.ctorParameters;\n/** @type {?} */\nNovoStepHeader.propDecorators;\n/** @type {?} */\nNovoStepHeader.prototype.theme;\n/** @type {?} */\nNovoStepHeader.prototype.color;\n/** @type {?} */\nNovoStepHeader.prototype.icon;\n/**\n * State of the given step.\n * @type {?}\n */\nNovoStepHeader.prototype.state;\n/**\n * Label of the given step.\n * @type {?}\n */\nNovoStepHeader.prototype.label;\n/**\n * Overrides for the header icons, passed in via the stepper.\n * @type {?}\n */\nNovoStepHeader.prototype.iconOverrides;\n/** @type {?} */\nNovoStepHeader.prototype._index;\n/** @type {?} */\nNovoStepHeader.prototype._selected;\n/** @type {?} */\nNovoStepHeader.prototype._active;\n/** @type {?} */\nNovoStepHeader.prototype._optional;\n/** @type {?} */\nNovoStepHeader.prototype._focusMonitor;\n/** @type {?} */\nNovoStepHeader.prototype._element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n  } from '@angular/animations';\n/**\n * Animations used by the Novo steppers.\n */\nexport const novoStepperAnimations: {\n    readonly horizontalStepTransition: AnimationTriggerMetadata;\n    readonly verticalStepTransition: AnimationTriggerMetadata;\n  } = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('stepTransition', [\n      state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n      state('current', style({transform: 'none', visibility: 'visible'})),\n      state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n      transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('stepTransition', [\n      state('previous', style({height: '0px', visibility: 'hidden'})),\n      state('next', style({height: '0px', visibility: 'hidden'})),\n      state('current', style({height: '*', visibility: 'visible'})),\n      transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  };\n","import { CdkStep, CdkStepper } from '@angular/cdk/stepper';\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  QueryList,\n  ViewChildren,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Optional,\n  TemplateRef,\n  Input,\n} from '@angular/core';\n\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { NovoStepHeader } from './step-header.component';\nimport { NovoStepLabel } from './step-label.component';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { novoStepperAnimations } from './stepper.animations';\nimport { NovoIconComponent } from '../icon/Icon';\n\nexport const /** @type {?} */ _NovoStep = CdkStep;\nexport const /** @type {?} */ _NovoStepper = CdkStepper;\nexport class NovoStep extends CdkStep {\n/**\n * Content for step label given by `<ng-template novoStepLabel>`.\n */\nstepLabel: NovoStepLabel;\n\n   theme: string;\n   color: string;\n   icon: string;\n/**\n * @param {?} stepper\n */\nconstructor( stepper: NovoStepper) {\n    super(stepper);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-step',\n  template: `\n    <ng-template><ng-content></ng-content></ng-template>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoStepper, decorators: [{ type: Inject, args: [forwardRef(() => NovoStepper), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'stepLabel': [{ type: ContentChild, args: [NovoStepLabel, ] },],\n'theme': [{ type: Input },],\n'color': [{ type: Input },],\n'icon': [{ type: Input },],\n};\n}\n\nfunction NovoStep_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoStep.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoStep.ctorParameters;\n/** @type {?} */\nNovoStep.propDecorators;\n/**\n * Content for step label given by `<ng-template novoStepLabel>`.\n * @type {?}\n */\nNovoStep.prototype.stepLabel;\n/** @type {?} */\nNovoStep.prototype.theme;\n/** @type {?} */\nNovoStep.prototype.color;\n/** @type {?} */\nNovoStep.prototype.icon;\n}\n\nexport class NovoStepper extends CdkStepper implements AfterContentInit {\n/**\n * The list of step headers of the steps in the stepper.\n */\n_stepHeader: QueryList<ElementRef>;\n/**\n * Steps that the stepper holds.\n */\n_steps: QueryList<NovoStep>;\n/**\n * Custom icon overrides passed in by the consumer.\n */\n_icons: QueryList<NovoIconComponent>;\n/**\n * Consumer-specified template-refs to be used to override the header icons.\n */\n_iconOverrides: { [key: string]: TemplateRef<any> } = {};\n/**\n * @return {?}\n */\nget completed():boolean {\n    try {\n      let /** @type {?} */ steps = this._steps.toArray();\n      let /** @type {?} */ length = steps.length-1;\n      return steps[length].completed && length === this.selectedIndex ;\n    } catch ( /** @type {?} */err) {\n      return false\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    try {\n      let /** @type {?} */ steps = this._steps.toArray();\n      steps[this.selectedIndex].completed = true;\n      this.next();\n      this._stateChanged();\n    } catch ( /** @type {?} */err) {\n      // do nothing\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetIndicatorType(index: number): 'none' | '' | 'edit' | 'done' {\n    let /** @type {?} */ steps = this._steps.toArray();\n    if( index === this.selectedIndex ) {\n      if(steps[index] && index===steps.length-1 && steps[index].completed ) {\n        return 'done';\n      }\n      return 'edit'\n    }\n    if( index < this.selectedIndex ) {\n      return 'done'\n    }\n    return 'none';\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoStepper]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_stepHeader': [{ type: ViewChildren, args: [NovoStepHeader, { read: ElementRef }, ] },],\n'_steps': [{ type: ContentChildren, args: [NovoStep, ] },],\n'_icons': [{ type: ContentChildren, args: [NovoIconComponent, ] },],\n};\n}\n\nfunction NovoStepper_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoStepper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoStepper.ctorParameters;\n/** @type {?} */\nNovoStepper.propDecorators;\n/**\n * The list of step headers of the steps in the stepper.\n * @type {?}\n */\nNovoStepper.prototype._stepHeader;\n/**\n * Steps that the stepper holds.\n * @type {?}\n */\nNovoStepper.prototype._steps;\n/**\n * Custom icon overrides passed in by the consumer.\n * @type {?}\n */\nNovoStepper.prototype._icons;\n/**\n * Consumer-specified template-refs to be used to override the header icons.\n * @type {?}\n */\nNovoStepper.prototype._iconOverrides;\n}\n\nexport class NovoHorizontalStepper extends NovoStepper {\n   selectedIndex: number;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-horizontal-stepper',\n  template: `\n    <div class=\"novo-horizontal-stepper-header-container\">\n        <div class=\"novo-stepper-horizontal-line complete\"></div>\n      <ng-container *ngFor=\"let step of _steps; let i = index; let isLast = last\">\n        <novo-step-header  class=\"novo-horizontal-stepper-header\"\n                         (click)=\"step.select()\"\n                         (keydown)=\"_onKeydown($event)\"\n                         [tabIndex]=\"_focusIndex === i ? 0 : -1\"\n                         [id]=\"_getStepLabelId(i)\"\n                         [attr.aria-controls]=\"_getStepContentId(i)\"\n                         [attr.aria-selected]=\"selectedIndex == i\"\n                         [index]=\"i\"\n                         [theme]=\"step.theme\"\n                         [color]=\"step.color\"\n                         [icon]=\"step.icon\"\n                         [state]=\"getIndicatorType(i)\"\n                         [label]=\"step.stepLabel || step.label\"\n                         [selected]=\"selectedIndex === i\"\n                         [active]=\"step.completed || selectedIndex === i || !linear\"\n                         [optional]=\"step.optional\"\n                         [iconOverrides]=\"_iconOverrides\">\n        </novo-step-header>\n      </ng-container>\n      <div class=\"novo-stepper-horizontal-line\" [class.complete]=\"completed\"></div>\n    </div>\n\n    <div class=\"novo-horizontal-content-container\">\n      <div *ngFor=\"let step of _steps; let i = index\"\n           class=\"novo-horizontal-stepper-content\" role=\"tabpanel\"\n           [@stepTransition]=\"_getAnimationDirection(i)\"\n           [id]=\"_getStepContentId(i)\"\n           [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n           [attr.aria-expanded]=\"selectedIndex === i\">\n        <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n      </div>\n    </div>\n  `,\n  styles: [`\n    @-webkit-keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @-webkit-keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @-webkit-keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @-webkit-keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    @keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    .novo-stepper-vertical,\n    .novo-stepper-horizontal {\n      display: block; }\n\n    .novo-horizontal-stepper-header-container {\n      white-space: nowrap;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      margin-bottom: 1em;\n      background: #f4f4f4; }\n\n    .novo-stepper-horizontal-line {\n      border-bottom: 1px solid #d9dadc;\n      -webkit-box-flex: 1;\n          -ms-flex: auto;\n              flex: auto;\n      min-width: 0px;\n      height: 80px; }\n      .novo-stepper-horizontal-line.complete {\n        border-bottom: 1px solid #4a89dc; }\n\n    .novo-horizontal-stepper-header {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      height: 80px;\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-flow: column;\n              flex-flow: column;\n      overflow: visible;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      padding: 0 24px; }\n      .novo-horizontal-stepper-header .novo-step-status {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        width: 100%;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        position: absolute;\n        height: 1px;\n        bottom: 0px; }\n        .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line {\n          width: 100%;\n          position: absolute; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:before {\n            content: \"\";\n            display: block;\n            width: calc(50% - 8px);\n            margin-right: 8px;\n            border-bottom: 1px solid #d9dadc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:after {\n            content: \"\";\n            display: block;\n            width: calc(50% - 8px);\n            margin-left: calc(50% + 8px);\n            margin-top: -1px;\n            border-top: 1px solid #d9dadc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.edit:before {\n            border-bottom: 1px solid #4a89dc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:before {\n            border-bottom: 1px solid #4a89dc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:after {\n            border-top: 1px solid #4a89dc; }\n        .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon {\n          position: relative; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon:before {\n            content: \"\";\n            display: block;\n            background: #ffffff;\n            border-radius: 50%;\n            position: absolute;\n            z-index: 0;\n            top: 1px;\n            left: 1px;\n            bottom: 1px;\n            right: 1px; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon > * {\n            position: relative;\n            z-index: 1; }\n\n    .novo-vertical-stepper-header {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      padding: 24px;\n      max-height: 24px; }\n      .novo-vertical-stepper-header .novo-step-icon,\n      .novo-vertical-stepper-header .novo-step-icon-not-touched {\n        margin-right: 12px; }\n        [dir='rtl'] .novo-vertical-stepper-header .novo-step-icon, [dir='rtl']\n        .novo-vertical-stepper-header .novo-step-icon-not-touched {\n          margin-right: 0;\n          margin-left: 12px; }\n\n    .novo-horizontal-stepper-content {\n      overflow: hidden; }\n      .novo-horizontal-stepper-content[aria-expanded='false'] {\n        height: 0; }\n\n    .novo-horizontal-content-container {\n      overflow: hidden;\n      padding: 0 24px 24px 24px; }\n\n    .novo-vertical-content-container {\n      margin-left: 36px;\n      border: 0;\n      position: relative; }\n      [dir='rtl'] .novo-vertical-content-container {\n        margin-left: 0;\n        margin-right: 36px; }\n\n    .novo-stepper-vertical-line:before {\n      content: '';\n      position: absolute;\n      top: -16px;\n      bottom: -16px;\n      left: 0;\n      z-index: -1;\n      border-left-width: 1px;\n      border-left-style: solid;\n      border-left-color: #d9dadc; }\n      [dir='rtl'] .novo-stepper-vertical-line:before {\n        left: auto;\n        right: 0; }\n\n    .novo-stepper-vertical-line.edit:before {\n      border-left-color: 1px solid #4a89dc; }\n\n    .novo-stepper-vertical-line.done:before {\n      border-left-color: 1px solid #4a89dc; }\n\n    .novo-stepper-vertical-line.done:after {\n      border-left-color: 1px solid #4a89dc; }\n\n    .novo-stepper-vertical novo-step-status {\n      position: absolute;\n      left: 35px;\n      top: 25px;\n      -webkit-transform: scale(0.8);\n              transform: scale(0.8); }\n\n    .novo-vertical-stepper-content {\n      overflow: hidden; }\n\n    .novo-vertical-content {\n      padding: 0 24px 24px 24px; }\n\n    .novo-step:last-child .novo-vertical-content-container {\n      border: none; }\n  `],\n  host: {\n    'class': 'novo-stepper-horizontal',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [novoStepperAnimations.horizontalStepTransition],\n  providers: [{ provide: NovoStepper, useExisting: NovoHorizontalStepper }],\n  // encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectedIndex': [{ type: Input },],\n};\n}\n\nfunction NovoHorizontalStepper_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoHorizontalStepper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoHorizontalStepper.ctorParameters;\n/** @type {?} */\nNovoHorizontalStepper.propDecorators;\n/** @type {?} */\nNovoHorizontalStepper.prototype.selectedIndex;\n}\n\nexport class NovoVerticalStepper extends NovoStepper {\n   selectedIndex: number;\n/**\n * @param {?} dir\n * @param {?} changeDetectorRef\n */\nconstructor( dir: Directionality, changeDetectorRef: ChangeDetectorRef) {\n    super(dir, changeDetectorRef);\n    this._orientation = 'vertical';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-vertical-stepper',\n  template: `\n    <div class=\"novo-step\" *ngFor=\"let step of _steps; let i = index; let isLast = last\">\n        <novo-step-header  class=\"novo-vertical-stepper-header\"\n                         (click)=\"step.select()\"\n                         (keydown)=\"_onKeydown($event)\"\n                         [tabIndex]=\"_focusIndex == i ? 0 : -1\"\n                         [id]=\"_getStepLabelId(i)\"\n                         [attr.aria-controls]=\"_getStepContentId(i)\"\n                         [attr.aria-selected]=\"selectedIndex === i\"\n                         [index]=\"i\"\n                         [theme]=\"step.theme\"\n                         [color]=\"step.color\"\n                         [icon]=\"step.icon\"\n                         [state]=\"getIndicatorType(i)\"\n                         [label]=\"step.stepLabel || step.label\"\n                         [selected]=\"selectedIndex === i\"\n                         [active]=\"step.completed || selectedIndex === i || !linear\"\n                         [optional]=\"step.optional\"\n                         [iconOverrides]=\"_iconOverrides\">\n        </novo-step-header>\n  \n        <div class=\"novo-vertical-content-container\" [class.novo-stepper-vertical-line]=\"!isLast\" [ngClass]=\"getIndicatorType(i)\">\n          <div class=\"novo-vertical-stepper-content\" role=\"tabpanel\"\n               [@stepTransition]=\"_getAnimationDirection(i)\"\n               [id]=\"_getStepContentId(i)\"\n               [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n               [attr.aria-expanded]=\"selectedIndex === i\">\n            <div class=\"novo-vertical-content\">\n              <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n  `,\n  styles: [`\n    @-webkit-keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @keyframes rotate {\n      0% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); }\n      75% {\n        -webkit-transform: rotateZ(200deg);\n                transform: rotateZ(200deg); }\n      100% {\n        -webkit-transform: rotateZ(180deg);\n                transform: rotateZ(180deg); } }\n\n    @-webkit-keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @keyframes half-rotate {\n      0% {\n        -webkit-transform: rotateZ(45deg);\n                transform: rotateZ(45deg); }\n      75% {\n        -webkit-transform: rotateZ(100deg);\n                transform: rotateZ(100deg); }\n      100% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); } }\n\n    @-webkit-keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @keyframes rotateBack {\n      0% {\n        -webkit-transform: rotateZ(90deg);\n                transform: rotateZ(90deg); }\n      100% {\n        -webkit-transform: rotateZ(0deg);\n                transform: rotateZ(0deg); } }\n\n    @-webkit-keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    @keyframes show {\n      0% {\n        opacity: 0;\n        -webkit-transform: translateX(-100%);\n                transform: translateX(-100%); }\n      75% {\n        -webkit-transform: translateX(0px);\n                transform: translateX(0px); }\n      100% {\n        opacity: 1;\n        -webkit-transform: translateX(0);\n                transform: translateX(0); } }\n\n    .novo-stepper-vertical,\n    .novo-stepper-horizontal {\n      display: block; }\n\n    .novo-horizontal-stepper-header-container {\n      white-space: nowrap;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      margin-bottom: 1em;\n      background: #f4f4f4; }\n\n    .novo-stepper-horizontal-line {\n      border-bottom: 1px solid #d9dadc;\n      -webkit-box-flex: 1;\n          -ms-flex: auto;\n              flex: auto;\n      min-width: 0px;\n      height: 80px; }\n      .novo-stepper-horizontal-line.complete {\n        border-bottom: 1px solid #4a89dc; }\n\n    .novo-horizontal-stepper-header {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      height: 80px;\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-flow: column;\n              flex-flow: column;\n      overflow: visible;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      padding: 0 24px; }\n      .novo-horizontal-stepper-header .novo-step-status {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        width: 100%;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        position: absolute;\n        height: 1px;\n        bottom: 0px; }\n        .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line {\n          width: 100%;\n          position: absolute; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:before {\n            content: \"\";\n            display: block;\n            width: calc(50% - 8px);\n            margin-right: 8px;\n            border-bottom: 1px solid #d9dadc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line:after {\n            content: \"\";\n            display: block;\n            width: calc(50% - 8px);\n            margin-left: calc(50% + 8px);\n            margin-top: -1px;\n            border-top: 1px solid #d9dadc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.edit:before {\n            border-bottom: 1px solid #4a89dc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:before {\n            border-bottom: 1px solid #4a89dc; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-line.done:after {\n            border-top: 1px solid #4a89dc; }\n        .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon {\n          position: relative; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon:before {\n            content: \"\";\n            display: block;\n            background: #ffffff;\n            border-radius: 50%;\n            position: absolute;\n            z-index: 0;\n            top: 1px;\n            left: 1px;\n            bottom: 1px;\n            right: 1px; }\n          .novo-horizontal-stepper-header .novo-step-status .novo-stepper-status-icon > * {\n            position: relative;\n            z-index: 1; }\n\n    .novo-vertical-stepper-header {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      padding: 24px;\n      max-height: 24px; }\n      .novo-vertical-stepper-header .novo-step-icon,\n      .novo-vertical-stepper-header .novo-step-icon-not-touched {\n        margin-right: 12px; }\n        [dir='rtl'] .novo-vertical-stepper-header .novo-step-icon, [dir='rtl']\n        .novo-vertical-stepper-header .novo-step-icon-not-touched {\n          margin-right: 0;\n          margin-left: 12px; }\n\n    .novo-horizontal-stepper-content {\n      overflow: hidden; }\n      .novo-horizontal-stepper-content[aria-expanded='false'] {\n        height: 0; }\n\n    .novo-horizontal-content-container {\n      overflow: hidden;\n      padding: 0 24px 24px 24px; }\n\n    .novo-vertical-content-container {\n      margin-left: 36px;\n      border: 0;\n      position: relative; }\n      [dir='rtl'] .novo-vertical-content-container {\n        margin-left: 0;\n        margin-right: 36px; }\n\n    .novo-stepper-vertical-line:before {\n      content: '';\n      position: absolute;\n      top: -16px;\n      bottom: -16px;\n      left: 0;\n      z-index: -1;\n      border-left-width: 1px;\n      border-left-style: solid;\n      border-left-color: #d9dadc; }\n      [dir='rtl'] .novo-stepper-vertical-line:before {\n        left: auto;\n        right: 0; }\n\n    .novo-stepper-vertical-line.edit:before {\n      border-left-color: 1px solid #4a89dc; }\n\n    .novo-stepper-vertical-line.done:before {\n      border-left-color: 1px solid #4a89dc; }\n\n    .novo-stepper-vertical-line.done:after {\n      border-left-color: 1px solid #4a89dc; }\n\n    .novo-stepper-vertical novo-step-status {\n      position: absolute;\n      left: 35px;\n      top: 25px;\n      -webkit-transform: scale(0.8);\n              transform: scale(0.8); }\n\n    .novo-vertical-stepper-content {\n      overflow: hidden; }\n\n    .novo-vertical-content {\n      padding: 0 24px 24px 24px; }\n\n    .novo-step:last-child .novo-vertical-content-container {\n      border: none; }\n  `],\n  host: {\n    'class': 'novo-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [novoStepperAnimations.verticalStepTransition],\n  providers: [{ provide: NovoStepper, useExisting: NovoVerticalStepper }],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectedIndex': [{ type: Input },],\n};\n}\n\nfunction NovoVerticalStepper_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoVerticalStepper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoVerticalStepper.ctorParameters;\n/** @type {?} */\nNovoVerticalStepper.propDecorators;\n/** @type {?} */\nNovoVerticalStepper.prototype.selectedIndex;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Inject,\n  forwardRef\n} from '@angular/core';\nimport {NovoStepper} from './stepper.component';\nimport {NovoStepHeader} from './step-header.component';\nexport class NovoStepStatus {\n   state: string;\n/**\n * @param {?} stepper\n * @param {?} step\n */\nconstructor( stepper: NovoStepper,  step: NovoStepHeader) {\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-step-status',\n  template: `\n    <div class=\"novo-stepper-status-line\" [ngClass]=\"state\"></div>\n    <div [ngSwitch]=\"state\" class=\"novo-stepper-status-icon\">\n      <novo-icon size=\"small\" color=\"positive\" *ngSwitchCase=\"'edit'\">check-circle</novo-icon>\n      <novo-icon size=\"small\" color=\"positive\" *ngSwitchCase=\"'done'\">check-circle-filled</novo-icon>\n      <novo-icon size=\"small\" color=\"positive\" *ngSwitchDefault>circle-o</novo-icon>\n    </div>\n  `,\n  // encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'novo-step-status'\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoStepper, decorators: [{ type: Inject, args: [forwardRef(() => NovoStepper), ] }, ]},\n{type: NovoStepHeader, decorators: [{ type: Inject, args: [forwardRef(() => NovoStepHeader), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n};\n}\n\nfunction NovoStepStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoStepStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoStepStatus.ctorParameters;\n/** @type {?} */\nNovoStepStatus.propDecorators;\n/** @type {?} */\nNovoStepStatus.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoIconModule } from '../icon/Icon.module';\nimport { NovoStepHeader } from './step-header.component';\nimport { NovoStepLabel } from './step-label.component';\nimport { NovoStepStatus } from './step-status.component';\nimport { NovoHorizontalStepper, NovoStep, NovoStepper, NovoVerticalStepper } from './stepper.component';\nexport class NovoStepperModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    PortalModule,\n    NovoButtonModule,\n    CdkStepperModule,\n    NovoIconModule,\n    A11yModule,\n  ],\n  exports: [\n    NovoHorizontalStepper,\n    NovoVerticalStepper,\n    NovoStep,\n    NovoStepLabel,\n    NovoStepper,\n    NovoStepHeader,\n    NovoStepStatus,\n  ],\n  declarations: [\n    NovoHorizontalStepper,\n    NovoVerticalStepper,\n    NovoStep,\n    NovoStepLabel,\n    NovoStepper,\n    NovoStepHeader,\n    NovoStepStatus,\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoStepperModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoStepperModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoStepperModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, EventEmitter, Input, Output, OnDestroy, OnInit } from '@angular/core';\n// APP\n\nimport { OutsideClick } from '../../utils/outside-click/OutsideClick';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class NovoCategoryDropdownElement extends OutsideClick implements OnInit, OnDestroy {\n    _query: string = '';\n    _categoryMap: any = {};\n    _categories: string[] = [];\n    clickHandler: Function;\n    _masterCategoryMap: any;\n    _queryTimeout: any;\n    // Boolean to keep the selection persist when closing the dropdown\n     persistSelection: boolean = false;\n    // Boolean to close the dropdown on selection\n     closeOnSelect: boolean = false;\n    // Search Config\n    // {\n    //   placeholder: 'STRING' // defaults to \"SEARCH\" - placeholder for search input\n    //   emptyMessage: 'STRING' // defaults to \"There are no items.\" - empty message when there are no items in the category\n    //   debounce: 'NUMBER (in MS)' // defaults to 300ms - debounce time for the search\n    //   compare: 'FUNCTION' // default to simple indexOf - compare function for category search, should accept (query, item) and return true/false\n    // }\n     search: any;\n    // Footer config\n    // {\n    //   align: 'STRING' // defaults to \"right\" - alignment of the links\n    //   links: 'ARRAY' // array of links to go into the footer, be away of spacing - { label, callback } for the object inside\n    // }\n     footer: any;\n    // Event that is emitted whenever an item is selected\n     _select: EventEmitter<any> = new EventEmitter();\n    // Event that is emitted whenever a category is selected\n     categorySelected: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} categories\n * @return {?}\n */\nset categories(categories: any) {\n        this._masterCategoryMap = Object.assign({}, categories);\n        this._categoryMap = Object.assign({}, categories);\n        this._categories = Object.keys(categories);\n    }\n/**\n * @param {?} element\n * @param {?} labels\n */\nconstructor(element: ElementRef,\npublic labels: NovoLabelService) {\n        super(element);\n        this.clickHandler = this.toggleActive.bind(this);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        let /** @type {?} */ button = this.element.nativeElement.querySelector('button');\n        button.addEventListener('click', this.clickHandler);\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        let /** @type {?} */ button = this.element.nativeElement.querySelector('button');\n        if (button) {\n            button.removeEventListener('click', this.clickHandler);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDown(event) {\n        if (this.active && (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.ENTER)) {\n            this.toggleActive();\n        }\n    }\n/**\n * @return {?}\n */\nclearSelection() {\n        this._categories.forEach(category => {\n            this._categoryMap[category].forEach(item => {\n                item.selected = false;\n            });\n        });\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nselect(event, item) {\n        Helpers.swallowEvent(event);\n        // If we persist the selection, clear and show a check\n        if (this.persistSelection) {\n            this.clearSelection();\n            item.selected = true;\n        }\n        // Emit the item\n        this._select.emit(item);\n        // Close, if input is set\n        if (this.closeOnSelect) {\n            this.toggleActive();\n        }\n    }\n/**\n * @param {?} category\n * @return {?}\n */\nonCategorySelected(category) {\n        this.categorySelected.emit(category);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclearQuery(event) {\n        Helpers.swallowEvent(event);\n        this._query = '';\n        // Reset the categories\n        this._categories.forEach(category => {\n            this._categoryMap[category] = this._masterCategoryMap[category];\n        });\n    }\n/**\n * @param {?} query\n * @return {?}\n */\nqueryCategories(query) {\n        // Save the query\n        this._query = query;\n        // Check timeout\n        if (this._queryTimeout) {\n            clearTimeout(this._queryTimeout);\n        }\n        // Store a timeout, to debounce user input\n        this._queryTimeout = setTimeout(() => {\n            this._categories.forEach(category => {\n                if (this.search.compare) {\n                    this._categoryMap[category] = this._masterCategoryMap[category].filter(item => this.search.compare(query, item));\n                } else {\n                    this._categoryMap[category] = this._masterCategoryMap[category].filter(item => ~item.label.toLowerCase().indexOf(query.toLowerCase()));\n                }\n            });\n        }, this.search.debounce || 300);\n    }\n/**\n * @param {?} event\n * @param {?} link\n * @return {?}\n */\nexecuteClickCallback(event, link) {\n        link.callback(event);\n        // Close, if input is set\n        if (this.closeOnSelect) {\n            this.toggleActive();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-category-dropdown',\n    template: `\n        <ng-content select=\"button\"></ng-content>\n        <div class=\"dropdown-container\" *ngIf=\"active\">\n            <div class=\"novo-category-dropdown-search\" *ngIf=\"search\" data-automation-id=\"novo-category-dropdown-search\">\n                <input type=\"text\" [placeholder]=\"search.placeholder || labels.search\" [value]=\"_query\" (input)=\"queryCategories($event.target.value)\"/>\n                <i class=\"bhi-search\" *ngIf=\"!_query\"></i>\n                <i class=\"bhi-times\" *ngIf=\"_query\" (click)=\"clearQuery($event)\"></i>\n            </div>\n            <novo-nav theme=\"white\" [outlet]=\"novoCategoryDropdownOutlet\" direction=\"vertical\">\n                <novo-tab *ngFor=\"let category of _categories\" [attr.data-automation-id]=\"category\" (activeChange)=\"onCategorySelected(category)\">\n                    <span>{{ category }} ({{ _categoryMap[category].length }})</span>\n                </novo-tab>\n            </novo-nav>\n            <novo-nav-outlet #novoCategoryDropdownOutlet>\n                <novo-nav-content *ngFor=\"let category of _categories\">\n                    <novo-list direction=\"vertical\">\n                        <novo-list-item *ngFor=\"let item of _categoryMap[category]\" (click)=\"select($event, item)\" [attr.data-automation-id]=\"item.label\">\n                            <item-content>{{ item.label }}</item-content>\n                            <item-end class=\"novo-category-dropdown-hover\" *ngIf=\"item.hoverText && !item.selected\">{{ item.hoverText }}</item-end>\n                            <item-end class=\"novo-category-dropdown-hover\" *ngIf=\"item.hoverIcon && !item.selected\"><i class=\"bhi-{{ item.hoverIcon }}\"></i></item-end>\n                            <item-end *ngIf=\"item.selected\"><i class=\"bhi-check\"></i></item-end>\n                        </novo-list-item>\n                        <novo-list-item *ngIf=\"_categoryMap[category].length === 0 && search\" class=\"novo-category-dropdown-empty-item\">\n                            <item-content>{{ search.emptyMessage || labels.noItems }}</item-content>\n                        </novo-list-item>\n                    </novo-list>\n                </novo-nav-content>\n            </novo-nav-outlet>\n            <footer *ngIf=\"footer\" class=\"novo-category-dropdown-footer-align-{{ footer.align || 'right' }}\">\n                <a *ngFor=\"let link of footer.links\" (click)=\"executeClickCallback($event, link)\">{{ link.label }}</a>\n            </footer>\n        </div>\n    `,\n    host: {\n        '(keydown)': 'onKeyDown($event)',\n        '[class.active]': 'active'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'persistSelection': [{ type: Input },],\n'closeOnSelect': [{ type: Input },],\n'search': [{ type: Input },],\n'footer': [{ type: Input },],\n'_select': [{ type: Output, args: ['itemSelected', ] },],\n'categorySelected': [{ type: Output },],\n'categories': [{ type: Input },],\n};\n}\n\nfunction NovoCategoryDropdownElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCategoryDropdownElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCategoryDropdownElement.ctorParameters;\n/** @type {?} */\nNovoCategoryDropdownElement.propDecorators;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype._query;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype._categoryMap;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype._categories;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.clickHandler;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype._masterCategoryMap;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype._queryTimeout;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.persistSelection;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.closeOnSelect;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.search;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.footer;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype._select;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.categorySelected;\n/** @type {?} */\nNovoCategoryDropdownElement.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoCategoryDropdownElement } from './CategoryDropdown';\nimport { NovoTabModule } from './../tabs/Tabs.module';\nimport { NovoListModule } from './../list/List.module';\nexport class NovoCategoryDropdownModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoTabModule, NovoListModule],\n    declarations: [NovoCategoryDropdownElement],\n    exports: [NovoCategoryDropdownElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoCategoryDropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCategoryDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCategoryDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, OnInit, EventEmitter, forwardRef, ElementRef, Input, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\n\nimport { OutsideClick } from '../../utils/outside-click/OutsideClick';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\n// Vendor\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ CHIPS_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NovoMultiPickerElement),\n    multi: true\n};\nexport class NovoMultiPickerElement implements OnInit {\n     source: any;\n     placeholder: any = '';\n     types: any;\n     changed: EventEmitter<any> = new EventEmitter();\n     focus: EventEmitter<any> = new EventEmitter();\n     blur: EventEmitter<any> = new EventEmitter();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} selectedItems\n * @return {?}\n */\nset value(selectedItems) {\n        if (selectedItems) {\n            this.types.forEach(x => this._value[x.value] = selectedItems[x.value]);\n        } else {\n            this._value = {};\n            this.types.forEach(x => this._value[x.value] = []);\n        }\n        this.changed.emit(selectedItems);\n        this.onModelChange(selectedItems);\n    }\n\n    items: any = [];\n    _items = new ReplaySubject(1);\n    options: any;\n    _options: any;\n    selected: any = null;\n    config: any = {};\n    chipsCount: number;\n    selectAllOption: boolean;\n    strictRelationship: boolean;\n    // private data model\n    _value: any = {};\n    notShown: any = {};\n    // Placeholders for the callbacks\n    model: any;\n    onModelChange: Function = () => {\n    };\n    onModelTouched: Function = () => {\n    };\n/**\n * @param {?} element\n * @param {?} labels\n */\nconstructor(public element: ElementRef,\npublic labels: NovoLabelService) {\n        this.chipsCount = 4;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selectAllOption = this.source.selectAllOption || false;\n        this.chipsCount = this.source.chipsCount || 4;\n        this.strictRelationship = this.source.strictRelationship || false;\n        this.setupOptions();\n    }\n/**\n * @return {?}\n */\nclearValue() {\n        this.types.forEach(type => this.modifyAllOfType(type.value, 'unselect'));\n        this.items = [];\n        this._items.next(this.items);\n        this.value = this.setInitialValue(null);\n        this.onModelChange(this.value);\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nremoveFromDisplay(event, item) {\n        this.remove(true, item);\n        this.modifyAffectedParentsOrChildren(false, item);\n    }\n/**\n * @return {?}\n */\nsetupOptions() {\n        this.options = this.source.options || [];\n        this._options = [];\n        if (this.options) {\n            this.options.forEach(option => {\n                let /** @type {?} */ formattedOption = this.setupOptionsByType(option);\n                this._options.push(formattedOption);\n            });\n        }\n        this.source.options = this._options;\n    }\n/**\n * @param {?} section\n * @return {?}\n */\nsetupOptionsByType(section) {\n        let /** @type {?} */ formattedSection: any = {\n            type: section.type,\n            label: section.label || section.type\n        };\n        formattedSection.data = section.data.map(item => {\n            return this.formatOption(section, item);\n        });\n        if (this.selectAllOption) {\n            let /** @type {?} */ selectAll = this.createSelectAllOption(section);\n            formattedSection.data.splice(0, 0, selectAll);\n        }\n        formattedSection.originalData = formattedSection.data.slice();\n        return formattedSection;\n    }\n/**\n * @param {?} section\n * @param {?} item\n * @return {?}\n */\nformatOption(section, item) {\n        let /** @type {?} */ obj = {\n            value: section.field ? item[section.field] : (item.value || item),\n            label: section.format ? Helpers.interpolate(section.format, item) : item.label || String(item.value || item),\n            type: section.type,\n            checked: undefined,\n            isParentOf: section.isParentOf,\n            isChildOf: section.isChildOf\n        };\n        if (obj.isChildOf) {\n            obj[section.isChildOf] = item[section.isChildOf];\n        }\n        return obj;\n    }\n/**\n * @param {?} section\n * @return {?}\n */\ncreateSelectAllOption(section) {\n        let /** @type {?} */ selectAll = {\n            value: 'ALL',\n            label: `All ${section.type}`,\n            type: section.type,\n            checked: (this.model && this.model.length && (this.model.indexOf('ALL') !== -1)),\n            isParentOf: section.isParentOf,\n            isChildOf: section.isChildOf\n        };\n        if (section.isChildOf) {\n            let /** @type {?} */ allParents = section.data.reduce((accum, next) => {\n                return accum.concat(next[section.isChildOf]);\n            }, []);\n            selectAll[section.isChildOf] = allParents;\n        }\n        return selectAll;\n    }\n/**\n * @return {?}\n */\ndeselectAll() {\n        this.selected = null;\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nselect(event, item) {\n        this.blur.emit(event);\n        this.deselectAll();\n        this.selected = item;\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nonFocus(e) {\n        this.element.nativeElement.classList.add('selected');\n        this.focus.emit(e);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOption(event) {\n        if (event && !(event instanceof Event)) {\n            if (event.checked === false) {\n                this.remove(null, event);\n            } else {\n                this.add(event);\n            }\n            this.modifyAffectedParentsOrChildren(event.checked, event);\n            // Set focus on the picker\n            let /** @type {?} */ input = this.element.nativeElement.querySelector('novo-picker > input');\n            if (input) {\n                input.focus();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nadd(event) {\n        if (event.value === 'ALL') {\n            this.modifyAllOfType(event.type, 'select');\n        } else {\n            this.updateDisplayItems(event, 'add');\n            this.value[event.type].push(event.value);\n            this.updateAllItemState(event.type);\n            this.triggerValueUpdate();\n        }\n        this.updateParentOrChildren(event, 'select');\n        this.select(null, event);\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nupdateAllItemState(type) {\n        let /** @type {?} */ allOfType = this.getAllOfType(type);\n        let /** @type {?} */ allOfTypeSelected = this.allItemsSelected(allOfType, type);\n        if (allOfTypeSelected) {\n            this.selectAll(allOfType, type);\n        }\n        return { allOfType, allOfTypeSelected };\n    }\n/**\n * @param {?} allOfType\n * @param {?} status\n * @return {?}\n */\nsetIndeterminateState(allOfType, status) {\n        if (!this.selectAllOption) { return; }\n        let /** @type {?} */ allItem = allOfType[0];\n        allItem.indeterminate = status;\n    }\n/**\n * @param {?} item\n * @param {?} action\n * @return {?}\n */\nupdateDisplayItems(item, action) {\n        let /** @type {?} */ adding = action === 'add';\n        if (adding) {\n            this.items.push(item);\n        } else {\n            if (this.items.indexOf(item) > -1) {\n                this.items.splice(this.items.indexOf(item), 1);\n            }\n        }\n        this.updateDisplayText(this.items);\n        this._items.next(this.items);\n    }\n/**\n * @param {?} items\n * @return {?}\n */\nupdateDisplayText(items) {\n        this.notShown = [];\n        let /** @type {?} */ notShown = items.slice(this.chipsCount);\n        if (notShown.length > 0) {\n            this.types.forEach(type => {\n                let /** @type {?} */ count;\n                let /** @type {?} */ selectedOfType = notShown.filter(x => x.type === type.value);\n                if (selectedOfType.length === 1 && selectedOfType[0].value === 'ALL') {\n                    count = this.getAllOfType(type.value).length - 1;\n                } else {\n                    count = selectedOfType.length;\n                }\n                let /** @type {?} */ displayType = count === 1 ? type.singular : type.plural || type.value;\n                if (count > 0) {\n                    this.notShown.push({ type: displayType, count: count });\n                }\n            });\n        }\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nremove(event, item) {\n        let /** @type {?} */ triggeredByEvent;\n        if (event) {\n            triggeredByEvent = true;\n        }\n        let /** @type {?} */ itemToRemove = item;\n        if (itemToRemove.value === 'ALL') {\n            triggeredByEvent = false;\n            this.modifyAllOfType(itemToRemove.type, 'unselect');\n        } else if (this.allOfTypeSelected(itemToRemove.type)) {\n            this.handleRemoveItemIfAllSelected(itemToRemove);\n        }\n        this.removeItem(item, triggeredByEvent);\n    }\n/**\n * @param {?} item\n * @param {?=} triggeredByEvent\n * @return {?}\n */\nremoveItem(item, triggeredByEvent?: any) {\n        item.checked = false;\n        this.deselectAll();\n        this.removeValue(item);\n        if (item.value !== 'ALL') {\n            this.updateParentOrChildren(item, 'unselect');\n        }\n        if (triggeredByEvent) {\n            this.modifyAffectedParentsOrChildren(false, item);\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nremoveValue(item) {\n        let /** @type {?} */ updatedValues = this.value[item.type].filter(x => x !== item.value);\n        this.value[item.type] = updatedValues;\n        this.triggerValueUpdate();\n        this.updateDisplayItems(item, 'remove');\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDown(event) {\n        if (event.keyCode === KeyCodes.BACKSPACE) {\n            if (event.target && event.target.value.length === 0 && this.items.length) {\n                if (event) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                if (this.selected) {\n                    this.remove(null, this.selected);\n                } else {\n                    this.select(event, this.items[this.items.length - 1]);\n                }\n            }\n        }\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nallOfTypeSelected(type) {\n        return this.items.filter(x => x.type === type && x.value === 'ALL').length > 0;\n    }\n/**\n * @param {?} type\n * @param {?} action\n * @return {?}\n */\nmodifyAllOfType(type, action) {\n        let /** @type {?} */ selecting = action === 'select';\n        let /** @type {?} */ allOfType = this.getAllOfType(type);\n        allOfType.forEach(item => {\n            item.checked = selecting;\n            item.indeterminate = false;\n        });\n        if (selecting) {\n            this.selectAll(allOfType, type);\n        } else {\n            this.items = [...this.items.filter(x => x.type !== type)];\n            this._items.next(this.items);\n            this.value[type] = [];\n        }\n        if (this.selectAllOption) {\n            this.updateAllParentsOrChildren(allOfType[0], action);\n        }\n        this.triggerValueUpdate();\n    }\n/**\n * @return {?}\n */\ntriggerValueUpdate() {\n        let /** @type {?} */ updatedObject = {};\n        this.types.forEach(x => updatedObject[x.value] = this.value[x.value]);\n        this.value = updatedObject;\n    }\n/**\n * @param {?} allOfType\n * @param {?} type\n * @return {?}\n */\nselectAll(allOfType, type) {\n        if (!this.selectAllOption) { return; }\n        allOfType[0].checked = true;\n        let /** @type {?} */ values = allOfType.map(i => {\n            return i.value;\n        });\n        //remove 'ALL' value\n        values.splice(0, 1);\n        this.value[type] = values;\n        let /** @type {?} */ updatedItems = this.items.filter(x => x.type !== type);\n        this.items = updatedItems;\n        this.updateDisplayItems(allOfType[0], 'add');\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nhandleRemoveItemIfAllSelected(item) {\n        if (!this.selectAllOption) { return; }\n        let /** @type {?} */ type = item.type;\n        let /** @type {?} */ allOfType = this.getAllOfType(type);\n        let /** @type {?} */ allItem = allOfType[0];\n        this.removeItem(allItem);\n        allItem.indeterminate = true;\n        let /** @type {?} */ selectedItems = allOfType.filter(i => i.checked === true);\n        this.items = [...this.items, ...selectedItems];\n        let /** @type {?} */ values = selectedItems.map(i => {\n            return i.value;\n        });\n        this.value[type] = [...values];\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleOutsideClick(event) {\n        // If the elements doesn't contain the target element, it is an outside click\n        if (!this.element.nativeElement.contains(event.target)) {\n            this.blur.emit(event);\n            this.deselectAll();\n        }\n    }\n/**\n * @param {?} type\n * @return {?}\n */\ngetAllOfType(type) {\n        return this._options.filter(x => x.type === type)[0].originalData;\n    }\n/**\n * @param {?} item\n * @param {?} action\n * @return {?}\n */\nupdateParentOrChildren(item, action) {\n        if (this.strictRelationship && item.isParentOf) {\n            this.updateChildrenValue(item, action);\n        } else if (item.isChildOf && this.selectAllOption) {\n            this.updateParentValue(item, action);\n        }\n    }\n/**\n * @param {?} selecting\n * @param {?} itemChanged\n * @return {?}\n */\nmodifyAffectedParentsOrChildren(selecting, itemChanged) {\n        if (!itemChanged.isChildOf && !itemChanged.isParentOf) {\n            return;\n        }\n        let /** @type {?} */ parent = this.types.filter(x => !!x.isParentOf)[0];\n        let /** @type {?} */ parentType = parent.value;\n        let /** @type {?} */ allParentType = this.getAllOfType(parentType);\n        let /** @type {?} */ childType = allParentType[0].isParentOf;\n        let /** @type {?} */ allChildren = this.getAllOfType(childType);\n        let /** @type {?} */ allCheckedChildren = allChildren.filter(x => !!x.checked);\n\n        allParentType.forEach(obj => {\n            if (obj.value === 'ALL') {\n                return;\n            }\n            let /** @type {?} */ selectedChildrenOfParent = allCheckedChildren.filter(x => {\n                return x[parentType].filter(y => y === obj.value).length > 0;\n            });\n\n            if (selecting) {\n                if (obj.checked) { return; }\n                obj.indeterminate = selectedChildrenOfParent.length > 0;\n            } else {\n                let /** @type {?} */ allChildrenOfParent = allChildren.filter(x => {\n                    return x.value !== 'ALL' && x[parentType].filter(y => y === obj.value).length > 0;\n                });\n                if (selectedChildrenOfParent.length > 0) {\n                    if (obj.checked) {\n                        if (this.strictRelationship && (allChildrenOfParent.length !== selectedChildrenOfParent.length)) {\n                            obj.indeterminate = true;\n                            obj.checked = false;\n                            this.removeValue(obj);\n                            this.addIndividualChildren(selectedChildrenOfParent);\n                        }\n                    } else {\n                        obj.indeterminate = true;\n                    }\n                    if (this.strictRelationship && itemChanged.type !== parentType) {\n                        if (obj.checked) {\n                            obj.checked = false;\n                            this.removeValue(obj);\n                            this.addIndividualChildren(selectedChildrenOfParent);\n                        }\n                    }\n                } else {\n                    obj.indeterminate = false;\n                    if (allChildrenOfParent.length === 0) {\n                        //if it has no children and is checked, it should stay checked\n                        return;\n                    } else if (this.strictRelationship && itemChanged.type !== parentType) {\n                        this.remove(null, obj);\n                    }\n                }\n            }\n        });\n        if (this.selectAllOption) {\n            this.updateIndeterminateStates(allParentType, allChildren, allCheckedChildren);\n        }\n    }\n/**\n * @param {?} allItem\n * @param {?} action\n * @return {?}\n */\nupdateAllParentsOrChildren(allItem, action) {\n        if (allItem.isParentOf) {\n            this.updateAllChildrenValue(allItem, action);\n        } else if (allItem.isChildOf) {\n            this.updateAllParentValue(allItem, action);\n        }\n    }\n/**\n * @param {?} item\n * @param {?} action\n * @return {?}\n */\nupdateAllChildrenValue(item, action) {\n        let /** @type {?} */ selecting = action === 'select';\n        let /** @type {?} */ childType = item.isParentOf;\n        let /** @type {?} */ potentialChildren = this.getAllOfType(childType);\n        if (this.selectAllOption && this.allOfTypeSelected(childType) && !selecting) {\n            this.remove(null, potentialChildren[0]);\n            return;\n        }\n        potentialChildren.forEach(x => {\n            if (x.value === 'ALL' && !x.checked) {\n                if (selecting) {\n                    x.checked = true;\n                }\n                x.indeterminate = selecting;\n            } else {\n                if (x.checked && !selecting) {\n                    this.remove(null, x);\n                }\n                x.checked = selecting;\n            }\n        });\n    }\n/**\n * @param {?} item\n * @param {?} action\n * @return {?}\n */\nupdateAllParentValue(item, action) {\n        let /** @type {?} */ selecting = action === 'select';\n        let /** @type {?} */ parentType = item.isChildOf;\n        let /** @type {?} */ potentialParents = this.getAllOfType(parentType);\n        potentialParents.forEach(x => {\n            if (!x.checked) {\n                x.indeterminate = selecting;\n            }\n        });\n    }\n/**\n * @param {?} allParentType\n * @param {?} allChildren\n * @param {?} allCheckedChildren\n * @return {?}\n */\nupdateIndeterminateStates(allParentType, allChildren, allCheckedChildren) {\n        let /** @type {?} */ allCheckedOrIndeterminateParents = allParentType.filter(x => (!!x.checked || !!x.indeterminate) && x.value !== 'ALL');\n        let /** @type {?} */ isParentIndeterminate = !!allParentType[0].checked ? false : allCheckedOrIndeterminateParents.length > 0;\n        let /** @type {?} */ isChildIndeterminate = !!allChildren[0].checked ? false : allCheckedChildren.length > 0;\n        this.setIndeterminateState(allParentType, isParentIndeterminate);\n        this.setIndeterminateState(allChildren, isChildIndeterminate);\n    }\n/**\n * @param {?} parent\n * @param {?} action\n * @return {?}\n */\nupdateChildrenValue(parent, action) {\n        let /** @type {?} */ selecting = action === 'select';\n        let /** @type {?} */ childType = parent.isParentOf;\n        let /** @type {?} */ potentialChildren = this.getAllOfType(childType);\n        potentialChildren.forEach(x => {\n            if (x.value === 'ALL') {\n                return;\n            }\n            if (x[parent.type].filter(y => y === parent.value).length > 0) {\n                if (x.checked && !selecting) {\n                    x.checked = false;\n                    if (this.allOfTypeSelected(childType)) {\n                        this.handleRemoveItemIfAllSelected(x);\n                    } else {\n                        this.removeValue(x);\n                    }\n                }\n                x.checked = selecting;\n            }\n        });\n    }\n/**\n * @param {?} child\n * @param {?} action\n * @return {?}\n */\nupdateParentValue(child, action) {\n        let /** @type {?} */ allParentType = this.getAllOfType(child.isChildOf);\n        if (allParentType[0].checked && action !== 'select') {\n            this.handleRemoveItemIfAllSelected(allParentType[0]);\n        }\n    }\n/**\n * @param {?} children\n * @return {?}\n */\naddIndividualChildren(children) {\n        let /** @type {?} */ parentAlreadySelected = false;\n        children.forEach(x => {\n            if (x.isChildOf) { //only add children if their parents are not already selected\n                x[x.isChildOf].forEach(parent => {\n                    if (this.value[x.isChildOf].filter(p => p === parent).length > 0) {\n                        parentAlreadySelected = true;\n                    }\n                });\n            }\n            if (this.value[x.type].filter(item => item === x.value).length === 0 && !parentAlreadySelected) {\n                this.add(x);\n            }\n        });\n    }\n/**\n * @param {?} model\n * @return {?}\n */\nsetInitialValue(model) {\n        this.items = [];\n        this.value = model || {};\n        if (!this.types) {\n            return;\n        }\n        this.types.forEach(typeObj => {\n            let /** @type {?} */ type = typeObj.value;\n            if (this.value[type]) {\n                let /** @type {?} */ indeterminateIsSet = false;\n                let /** @type {?} */ options = this.updateAllItemState(type);\n                let /** @type {?} */ optionsByType = options.allOfType;\n                let /** @type {?} */ allSelected = options.allOfTypeSelected;\n                this.value[type].forEach(item => {\n                    if (!allSelected && !indeterminateIsSet) {\n                        indeterminateIsSet = true;\n                        this.setIndeterminateState(optionsByType, true);\n                    }\n                    let /** @type {?} */ value = optionsByType.filter(x => x.value === item)[0];\n                    value.checked = true;\n                    if (!allSelected) {\n                        this.updateDisplayItems(value, 'add');\n                    }\n                    if (this.strictRelationship && value.isParentOf) {\n                        this.updateChildrenValue(value, 'select');\n                    }\n                });\n                if (typeObj.isChildOf) {\n                    this.modifyAffectedParentsOrChildren(true, { value: type, isChildOf: true });\n                }\n            } else {\n                this.value[type] = [];\n            }\n        });\n    }\n/**\n * @param {?} optionsByType\n * @param {?} type\n * @return {?}\n */\nallItemsSelected(optionsByType, type) {\n        return this.value[type].length === optionsByType.length - 1;\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nonTouched(e) {\n        this.element.nativeElement.classList.remove('selected');\n        this.onModelTouched();\n        this.blur.emit(e);\n    }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n        this.model = model;\n        this.setInitialValue(model);\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'multi-picker',\n    providers: [CHIPS_VALUE_ACCESSOR],\n    template: `\n        <chip\n            *ngFor=\"let item of _items | async | slice:0:chipsCount\"\n            [type]=\"type\"\n            [class.selected]=\"item == selected\"\n            (remove)=\"removeFromDisplay($event, item)\"\n            (select)=\"select($event, item)\">\n            {{ item.label }}\n        </chip>\n        <div *ngIf=\"items.length > chipsCount\">\n            <ul class=\"summary\">\n                <li *ngFor=\"let type of notShown\">+ {{type.count}} {{ labels.more }} {{type.type}}</li>\n            </ul>\n        </div>\n        <div class=\"chip-input-container\">\n            <novo-picker\n                clearValueOnSelect=\"true\"\n                [config]=\"source\"\n                [placeholder]=\"placeholder\"\n                (select)=\"clickOption($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onFocus($event)\"\n                (blur)=\"onTouched($event)\"\n                [overrideElement]=\"element\">\n            </novo-picker>\n        </div>\n        <i class=\"bhi-search\" [class.has-value]=\"items.length\"></i>\n        <label class=\"clear-all\" *ngIf=\"items.length\" (click)=\"clearValue()\">{{ labels.clearAll }} <i class=\"bhi-times\"></i></label>\n   `,\n    host: {\n        '[class.with-value]': 'items.length > 0'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'source': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'types': [{ type: Input },],\n'changed': [{ type: Output },],\n'focus': [{ type: Output },],\n'blur': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction NovoMultiPickerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoMultiPickerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoMultiPickerElement.ctorParameters;\n/** @type {?} */\nNovoMultiPickerElement.propDecorators;\n/** @type {?} */\nNovoMultiPickerElement.prototype.source;\n/** @type {?} */\nNovoMultiPickerElement.prototype.placeholder;\n/** @type {?} */\nNovoMultiPickerElement.prototype.types;\n/** @type {?} */\nNovoMultiPickerElement.prototype.changed;\n/** @type {?} */\nNovoMultiPickerElement.prototype.focus;\n/** @type {?} */\nNovoMultiPickerElement.prototype.blur;\n/** @type {?} */\nNovoMultiPickerElement.prototype.items;\n/** @type {?} */\nNovoMultiPickerElement.prototype._items;\n/** @type {?} */\nNovoMultiPickerElement.prototype.options;\n/** @type {?} */\nNovoMultiPickerElement.prototype._options;\n/** @type {?} */\nNovoMultiPickerElement.prototype.selected;\n/** @type {?} */\nNovoMultiPickerElement.prototype.config;\n/** @type {?} */\nNovoMultiPickerElement.prototype.chipsCount;\n/** @type {?} */\nNovoMultiPickerElement.prototype.selectAllOption;\n/** @type {?} */\nNovoMultiPickerElement.prototype.strictRelationship;\n/** @type {?} */\nNovoMultiPickerElement.prototype._value;\n/** @type {?} */\nNovoMultiPickerElement.prototype.notShown;\n/** @type {?} */\nNovoMultiPickerElement.prototype.model;\n/** @type {?} */\nNovoMultiPickerElement.prototype.onModelChange;\n/** @type {?} */\nNovoMultiPickerElement.prototype.onModelTouched;\n/** @type {?} */\nNovoMultiPickerElement.prototype.element;\n/** @type {?} */\nNovoMultiPickerElement.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoChipsModule } from './../chips/Chips.module';\nimport { NovoMultiPickerElement } from './MultiPicker';\nexport class NovoMultiPickerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, NovoPickerModule, NovoChipsModule],\n    declarations: [NovoMultiPickerElement],\n    exports: [NovoMultiPickerElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoMultiPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoMultiPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoMultiPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, EventEmitter } from '@angular/core';\nexport class Security {\n    credentials: string[] = [];\n    change: EventEmitter<any> = new EventEmitter();\n/**\n * @param {?} data\n * @return {?}\n */\ngrant(data: any[] | Object): void {\n        let /** @type {?} */ parsed: any[] = [];\n        if (data instanceof Array) {\n            for (let /** @type {?} */ permission of data) {\n                parsed.push(permission.replace(/\\s/gi, ''));\n            }\n        } else if (typeof data === 'object') {\n            for (let /** @type {?} */ key in data) {\n                if (data[key] instanceof Array) {\n                    for (let /** @type {?} */ permission of data[key]) {\n                        parsed.push(`${key}.${permission}`);\n                    }\n                }\n            }\n        }\n        this.credentials = [].concat(this.credentials, parsed);\n        this.change.emit(this.credentials);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nhas(value: any): boolean {\n        return this.credentials.indexOf(value) > -1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nrevoke(value: any): void {\n        let /** @type {?} */ i: number = this.credentials.indexOf(value);\n        this.credentials.splice(i, 1);\n        this.change.emit(this.credentials);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        this.credentials = [];\n        this.change.emit(this.credentials);\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nsubscribe(fn: any): void {\n        this.change.subscribe(fn);\n    }\n/**\n * @param {?} routes\n * @param {?} options\n * @return {?}\n */\ncheckRoutes(routes: { entities?: any[], permissions?: any[] | Function, path?: string, label?: string, canDisable?: Boolean }[], options: { entityType?: string }): any {\n        let /** @type {?} */ filtered: any[] = [];\n        for (let /** @type {?} */ route of routes) {\n            if (route.entities && ~route.entities.indexOf(options.entityType)) {\n                if (route.permissions instanceof Function) {\n                    if (route.permissions(options, this)) {\n                        filtered.push(route);\n                    }\n                } else if (route.permissions && route.permissions.length) {\n                    if (route.permissions.every((perm) => this.has(perm))) {\n                        filtered.push(route);\n                    }\n                } else {\n                    filtered.push(route);\n                }\n            }\n        }\n\n        return filtered;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Security_tsickle_Closure_declarations() {\n/** @type {?} */\nSecurity.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSecurity.ctorParameters;\n/** @type {?} */\nSecurity.prototype.credentials;\n/** @type {?} */\nSecurity.prototype.change;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n// App\n\nimport { Security } from './../../services/security/Security';\nexport class Unless {\n    permissions: string = '';\n    isDisplayed: boolean = false;\n/**\n * @param {?} templateRef\n * @param {?} viewContainer\n * @param {?} security\n */\nconstructor(private templateRef: TemplateRef<any>,\nprivate viewContainer: ViewContainerRef,\nprivate security: Security) {\n        this.security.subscribe(this.check.bind(this));\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset bhUnless(value: string) {\n        this.permissions = value || '';\n        this.check();\n    }\n/**\n * @return {?}\n */\ncheck(): void {\n        let /** @type {?} */ display: boolean = false;\n        if (~this.permissions.indexOf('||')) {\n            let /** @type {?} */ ps: any = this.permissions.split('||');\n            for (let /** @type {?} */ p of ps) {\n                if (this.security.has(p.trim())) {\n                    display = true;\n                }\n            }\n        } else {\n            display = this.permissions.split('&&').every((p) => this.security.has(p.trim()));\n        }\n\n        if (display) {\n            if (!this.isDisplayed) {\n                this.isDisplayed = true;\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            }\n        } else {\n            this.isDisplayed = false;\n            this.viewContainer.clear();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[bhUnless]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Security, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'bhUnless': [{ type: Input },],\n};\n}\n\nfunction Unless_tsickle_Closure_declarations() {\n/** @type {?} */\nUnless.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUnless.ctorParameters;\n/** @type {?} */\nUnless.propDecorators;\n/** @type {?} */\nUnless.prototype.permissions;\n/** @type {?} */\nUnless.prototype.isDisplayed;\n/** @type {?} */\nUnless.prototype.templateRef;\n/** @type {?} */\nUnless.prototype.viewContainer;\n/** @type {?} */\nUnless.prototype.security;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { Unless } from './Unless';\nexport class UnlessModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [Unless],\n    exports: [Unless]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UnlessModule_tsickle_Closure_declarations() {\n/** @type {?} */\nUnlessModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUnlessModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectorRef } from '@angular/core';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs/Observable';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\nimport'rxjs/add/observable/of';\n\nimport { DataTableState } from './state/data-table-state.service';\nimport { IDataTableService } from './interfaces';\nexport class DataTableSource<T> extends DataSource<T> {\npublic total = 0;\npublic currentTotal = 0;\npublic current = 0;\npublic loading = false;\npublic pristine = true;\npublic data: T[];\nprivate totalSet: boolean = false;\n/**\n * @return {?}\n */\nget totallyEmpty(): boolean {\n    return this.total === 0;\n  }\n/**\n * @return {?}\n */\nget currentlyEmpty(): boolean {\n    return this.current === 0;\n  }\n/**\n * @param {?} tableService\n * @param {?} state\n * @param {?} ref\n */\nconstructor(private tableService: IDataTableService<T>,\nprivate state: DataTableState<T>,\nprivate ref: ChangeDetectorRef) {\n    super();\n  }\n/**\n * @return {?}\n */\npublic connect(): Observable<any[]> {\n    const /** @type {?} */ displayDataChanges: any = [this.state.updates];\n    return Observable.merge(...displayDataChanges).pipe(\n      startWith(null),\n      switchMap(() => {\n        this.pristine = false;\n        this.loading = true;\n        return this.tableService.getTableResults(\n          this.state.sort,\n          this.state.filter,\n          this.state.page,\n          this.state.pageSize,\n          this.state.globalSearch,\n          this.state.outsideFilter,\n        );\n      }),\n      map((data: { results: T[]; total: number }) => {\n        if (!this.totalSet || this.state.isForceRefresh) {\n          this.total = data.total;\n          this.totalSet = true;\n          this.state.isForceRefresh = false;\n        }\n        this.currentTotal = data.total;\n        this.current = data.results.length;\n        this.data = data.results;\n        // Clear selection\n        this.state.selectedRows.clear();\n        this.state.onSelectionChange();\n        // Mark changes\n        setTimeout(() => {\n          this.ref.markForCheck();\n          setTimeout(() => {\n            this.loading = false;\n            this.state.dataLoaded.next();\n            this.ref.markForCheck();\n          });\n        });\n        return data.results;\n      }),\n      catchError((err, caught) => {\n        console.error(err, caught); // tslint: disable-line\n        this.loading = false;\n        return Observable.of(null);\n      }),\n    );\n  }\n/**\n * @return {?}\n */\npublic disconnect(): void {}\n}\n\nfunction DataTableSource_tsickle_Closure_declarations() {\n/** @type {?} */\nDataTableSource.prototype.total;\n/** @type {?} */\nDataTableSource.prototype.currentTotal;\n/** @type {?} */\nDataTableSource.prototype.current;\n/** @type {?} */\nDataTableSource.prototype.loading;\n/** @type {?} */\nDataTableSource.prototype.pristine;\n/** @type {?} */\nDataTableSource.prototype.data;\n/** @type {?} */\nDataTableSource.prototype.totalSet;\n/** @type {?} */\nDataTableSource.prototype.tableService;\n/** @type {?} */\nDataTableSource.prototype.state;\n/** @type {?} */\nDataTableSource.prototype.ref;\n}\n\n","import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { IDataTableChangeEvent, IDataTableSortFilter } from '../interfaces';\nexport class DataTableState<T> {\npublic selectionSource = new Subject();\npublic paginationSource = new Subject();\npublic sortFilterSource = new Subject();\npublic resetSource = new Subject();\npublic expandSource = new Subject();\npublic dataLoaded = new Subject();\n\n  sort: { id: string; value: string } = undefined;\n  filter: { id: string; value: string } = undefined;\n  page: number = 0;\n  pageSize: number = undefined;\n  globalSearch: string = undefined;\n  selectedRows: Map<string, T> = new Map<string, T>();\n  expandedRows: Set<string> = new Set<string>();\n  outsideFilter: any;\n  isForceRefresh: boolean = false;\n\n  updates: EventEmitter<IDataTableChangeEvent> = new EventEmitter<IDataTableChangeEvent>();\n/**\n * @return {?}\n */\nget userFiltered(): boolean {\n    return !!(this.filter || this.sort || this.globalSearch || this.outsideFilter);\n  }\n/**\n * @return {?}\n */\nget selected(): T[] {\n    return Array.from(this.selectedRows.values());\n  }\n/**\n * @param {?=} fireUpdate\n * @param {?=} persistUserFilters\n * @return {?}\n */\npublic reset(fireUpdate: boolean = true, persistUserFilters?: boolean): void {\n    if (!persistUserFilters) {\n      this.sort = undefined;\n      this.globalSearch = undefined;\n      this.filter = undefined;\n    }\n    this.page = 0;\n    this.selectedRows.clear();\n    this.resetSource.next();\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n/**\n * @param {?=} fireUpdate\n * @return {?}\n */\npublic clearSort(fireUpdate: boolean = true): void {\n    this.sort = undefined;\n    this.page = 0;\n    this.selectedRows.clear();\n    this.resetSource.next();\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n/**\n * @param {?=} fireUpdate\n * @return {?}\n */\npublic clearFilter(fireUpdate: boolean = true): void {\n    this.filter = undefined;\n    this.globalSearch = undefined;\n    this.page = 0;\n    this.selectedRows.clear();\n    this.resetSource.next();\n    if (fireUpdate) {\n      this.updates.emit({\n        sort: this.sort,\n        filter: this.filter,\n        globalSearch: this.globalSearch,\n      });\n    }\n  }\n/**\n * @return {?}\n */\npublic onSelectionChange(): void {\n    this.selectionSource.next();\n  }\n/**\n * @return {?}\n */\npublic onExpandChange(): void {\n    this.expandSource.next();\n  }\n/**\n * @param {?} isPageSizeChange\n * @param {?} pageSize\n * @return {?}\n */\npublic onPaginationChange(isPageSizeChange: boolean, pageSize: number): void {\n    this.paginationSource.next({ isPageSizeChange, pageSize });\n  }\n/**\n * @return {?}\n */\npublic onSortFilterChange(): void {\n    this.sortFilterSource.next();\n  }\n}\n\nfunction DataTableState_tsickle_Closure_declarations() {\n/** @type {?} */\nDataTableState.prototype.selectionSource;\n/** @type {?} */\nDataTableState.prototype.paginationSource;\n/** @type {?} */\nDataTableState.prototype.sortFilterSource;\n/** @type {?} */\nDataTableState.prototype.resetSource;\n/** @type {?} */\nDataTableState.prototype.expandSource;\n/** @type {?} */\nDataTableState.prototype.dataLoaded;\n/** @type {?} */\nDataTableState.prototype.sort;\n/** @type {?} */\nDataTableState.prototype.filter;\n/** @type {?} */\nDataTableState.prototype.page;\n/** @type {?} */\nDataTableState.prototype.pageSize;\n/** @type {?} */\nDataTableState.prototype.globalSearch;\n/** @type {?} */\nDataTableState.prototype.selectedRows;\n/** @type {?} */\nDataTableState.prototype.expandedRows;\n/** @type {?} */\nDataTableState.prototype.outsideFilter;\n/** @type {?} */\nDataTableState.prototype.isForceRefresh;\n/** @type {?} */\nDataTableState.prototype.updates;\n}\n\n","import { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/of'; // TODO - new RXJS\n\n\nimport { IDataTableService } from '../interfaces';\nimport { Helpers } from '../../../utils/Helpers';\nexport class StaticDataTableService<T> implements IDataTableService<T> {\n  originalData: T[];\n/**\n * @param {?=} currentData\n */\nconstructor(private currentData: T[] = []) {\n    this.originalData = [...currentData];\n  }\n/**\n * @param {?} sort\n * @param {?} filter\n * @param {?=} page\n * @param {?=} pageSize\n * @param {?=} globalSearch\n * @param {?=} outsideFilter\n * @return {?}\n */\npublic getTableResults(\n    sort: { id: string; value: string; transform?: Function },\n    filter: { id: string; value: string; transform?: Function },\n    page: number = 0,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,\n  ): Observable<{ results: T[]; total: number }> {\n    this.currentData = [...this.originalData];\n    let /** @type {?} */ total: number = this.originalData.length;\n    if (this.currentData.length !== 0) {\n      if (globalSearch) {\n        this.currentData = this.currentData.filter((item) =>\n          Object.keys(item).some((key) => `${item[key]}`.toLowerCase().includes(globalSearch.toLowerCase())),\n        );\n        total = this.currentData.length;\n      }\n      if (filter) {\n        let /** @type {?} */ value = Helpers.isString(filter.value) ? filter.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : filter.value;\n        this.currentData = this.currentData.filter(Helpers.filterByField(filter.id, value));\n        total = this.currentData.length;\n      }\n      if (sort) {\n        this.currentData = this.currentData.sort(Helpers.sortByField(sort.id, sort.value === 'desc'));\n        total = this.currentData.length;\n      }\n      if (!sort && !filter && !globalSearch && !outsideFilter) {\n        this.currentData = [...this.originalData];\n      }\n      if (!Helpers.isBlank(page) && !Helpers.isBlank(pageSize)) {\n        this.currentData = this.currentData.slice(page * pageSize, (page + 1) * pageSize);\n      }\n    }\n    return Observable.of({ results: this.currentData, total: total });\n  }\n}\n\nfunction StaticDataTableService_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticDataTableService.prototype.originalData;\n/** @type {?} */\nStaticDataTableService.prototype.currentData;\n}\n\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewChild,\n  EventEmitter,\n  AfterContentInit,\n  ChangeDetectorRef,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  ViewChildren,\n  TemplateRef,\n  ElementRef,\n  Output,\n} from '@angular/core';\nimport { CDK_TABLE_TEMPLATE, CdkTable } from '@angular/cdk/table';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subscription } from 'rxjs/Subscription';\nimport { animate, state as animState, style, transition, trigger } from '@angular/animations';\n\nimport { NovoDataTableSortFilter } from './sort-filter/sort-filter.directive';\nimport { NovoDataTablePagination } from './pagination/data-table-pagination.component';\nimport {\n  IDataTableColumn,\n  IDataTablePaginationOptions,\n  IDataTableSearchOptions,\n  IDataTableService,\n  IDataTablePreferences,\n} from './interfaces';\nimport { DataTableSource } from './data-table.source';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { DataTableState } from './state/data-table-state.service';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nimport { Helpers } from '../../utils/Helpers';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { StaticDataTableService } from './services/static-data-table.service';\nexport class NovoDataTable<T> implements AfterContentInit, OnDestroy {\n  \n  globalSearchHiddenClassToggle: boolean = false;\n\n  \n  customTemplates: QueryList<NovoTemplate>;\n  \n  defaultTemplates: QueryList<NovoTemplate>;\n  \n  novoDataTableContainer: ElementRef;\n/**\n * @param {?} displayedColumns\n * @return {?}\n */\nset displayedColumns(displayedColumns: string[]) {\n    if (this.displayedColumns && this.displayedColumns.length !== 0) {\n      if (this.name !== 'novo-data-table') {\n        this.preferencesChanged.emit({\n          name: this.name,\n          displayedColumns: displayedColumns,\n        });\n      } else {\n        notify('Must have [name] set on data-table to use preferences!');\n      }\n    }\n    this._disabledColumns = displayedColumns;\n  }\n/**\n * @return {?}\n */\nget displayedColumns(): string[] {\n    return this._disabledColumns;\n  }\nprivate _disabledColumns: string[];\n\n  \n  paginationOptions: IDataTablePaginationOptions;\n  \n  searchOptions: IDataTableSearchOptions;\n  \n  defaultSort: { id: string; value: string };\n  \n  name: string = 'novo-data-table';\n  \n  rowIdentifier: string = 'id';\n  \n  trackByFn: Function = (index, item) => item.id;\n  \n  templates: { [key: string]: TemplateRef<any> } = {};\n/**\n * @param {?} service\n * @return {?}\n */\nset dataTableService(service: IDataTableService<T>) {\n    this.loading = false;\n    if (!service) {\n      service = new StaticDataTableService([]);\n    }\n    this.dataSource = new DataTableSource<T>(service, this.state, this.ref);\n    this.ref.detectChanges();\n  }\n/**\n * @param {?} rows\n * @return {?}\n */\nset rows(rows: T[]) {\n    this.loading = false;\n    let /** @type {?} */ service = new StaticDataTableService(rows);\n    this.dataSource = new DataTableSource<T>(service, this.state, this.ref);\n    this.ref.detectChanges();\n  }\n/**\n * @param {?} outsideFilter\n * @return {?}\n */\nset outsideFilter(outsideFilter: EventEmitter<any>) {\n    // Unsubscribe\n    if (this.outsideFilterSubscription) {\n      this.outsideFilterSubscription.unsubscribe();\n    }\n    if (outsideFilter) {\n      // Re-subscribe\n      this.outsideFilterSubscription = outsideFilter.subscribe((filter: any) => {\n        this.state.outsideFilter = filter;\n        this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n        this.ref.markForCheck();\n      });\n    }\n  }\n/**\n * @param {?} refreshSubject\n * @return {?}\n */\nset refreshSubject(refreshSubject: EventEmitter<any>) {\n    // Unsubscribe\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n    if (refreshSubject) {\n      // Re-subscribe\n      this.refreshSubscription = refreshSubject.subscribe((filter: any) => {\n        this.state.isForceRefresh = true;\n        this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n        this.ref.markForCheck();\n      });\n    }\n  }\n/**\n * @param {?} columns\n * @return {?}\n */\nset columns(columns: IDataTableColumn<T>[]) {\n    this._columns = columns;\n    this.configureColumns();\n  }\n/**\n * @return {?}\n */\nget columns(): IDataTableColumn<T>[] {\n    return this._columns;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset customFilter(v: boolean) {\n    this._customFilter = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget customFilter() {\n    return this._customFilter;\n  }\nprivate _customFilter: boolean;\n/**\n * @param {?} v\n * @return {?}\n */\nset hasExandedRows(v: boolean) {\n    this._hasExandedRows = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget hasExandedRows() {\n    return this._hasExandedRows;\n  }\nprivate _hasExandedRows: boolean;\n/**\n * @param {?} v\n * @return {?}\n */\nset forceShowHeader(v: boolean) {\n    this._forceShowHeader = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget forceShowHeader() {\n    return this._forceShowHeader;\n  }\nprivate _forceShowHeader: boolean;\n/**\n * @param {?} v\n * @return {?}\n */\nset hideGlobalSearch(v: boolean) {\n    this._hideGlobalSearch = coerceBooleanProperty(v);\n    this.globalSearchHiddenClassToggle = this._hideGlobalSearch;\n  }\n/**\n * @return {?}\n */\nget hideGlobalSearch() {\n    return this._hideGlobalSearch;\n  }\nprivate _hideGlobalSearch: boolean = true;\n\n  \n  preferencesChanged: EventEmitter<IDataTablePreferences> = new EventEmitter<IDataTablePreferences>();\npublic dataSource: DataTableSource<T>;\npublic loading: boolean = true;\npublic columnToTemplate: { [key: string]: TemplateRef<any> } = {};\npublic columnsLoaded: boolean = false;\npublic selection: Set<string> = new Set();\npublic scrollLeft: number = 0;\npublic expandable: boolean = false;\nprivate outsideFilterSubscription: Subscription;\nprivate refreshSubscription: Subscription;\nprivate resetSubscription: Subscription;\nprivate paginationSubscription: Subscription;\nprivate _columns: IDataTableColumn<T>[];\nprivate scrollListenerHandler: any;\n/**\n * @return {?}\n */\nget empty() {\n    return this.dataSource && this.dataSource.totallyEmpty;\n  }\n/**\n * @return {?}\n */\nget loadingClass() {\n    return this.loading || (this.dataSource && this.dataSource.loading);\n  }\n/**\n * @param {?} labels\n * @param {?} ref\n * @param {?} state\n */\nconstructor(public labels: NovoLabelService,\nprivate ref: ChangeDetectorRef,\npublic state: DataTableState<T>) {\n    this.scrollListenerHandler = this.scrollListener.bind(this);\n    this.paginationSubscription = this.state.paginationSource.subscribe((event: { isPageSizeChange: boolean; pageSize: number }) => {\n      if (this.name !== 'novo-data-table') {\n        if (event.isPageSizeChange) {\n          this.preferencesChanged.emit({ name: this.name, pageSize: event.pageSize });\n        }\n      } else {\n        notify('Must have [name] set on data-table to use preferences!');\n      }\n    });\n    this.resetSubscription = this.state.resetSource.subscribe(() => {\n      setTimeout(() => {\n        this.ref.detectChanges();\n      }, 300);\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    if (this.outsideFilterSubscription) {\n      this.outsideFilterSubscription.unsubscribe();\n    }\n    if (this.novoDataTableContainer) {\n      ( /** @type {?} */((this.novoDataTableContainer.nativeElement as Element))).removeEventListener('scroll', this.scrollListenerHandler);\n    }\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n  }\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n    if (this.displayedColumns && this.displayedColumns.length) {\n      this.expandable = this.displayedColumns.includes('expand');\n    }\n\n    // Default templates defined here\n    this.defaultTemplates.forEach((item) => {\n      // Only override if it doesn't already exist\n      if (!this.templates[item.getType()]) {\n        this.templates[item.getType()] = item.template;\n      }\n    });\n    // Custom templates passed in\n    this.customTemplates.forEach((item) => {\n      // Override anything that is custom and in HTML\n      this.templates[item.getType()] = item.template;\n    });\n    // Load columns\n    this.configureColumns();\n\n    // State\n    if (this.paginationOptions && !this.paginationOptions.page) {\n      this.paginationOptions.page = 0;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSize) {\n      this.paginationOptions.pageSize = 50;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSizeOptions) {\n      this.paginationOptions.pageSizeOptions = [10, 25, 50, 100];\n    }\n    this.state.page = this.paginationOptions ? this.paginationOptions.page : undefined;\n    this.state.pageSize = this.paginationOptions ? this.paginationOptions.pageSize : undefined;\n\n    // Scrolling inside table\n    ( /** @type {?} */((this.novoDataTableContainer.nativeElement as Element))).addEventListener('scroll', this.scrollListenerHandler);\n\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} term\n * @return {?}\n */\npublic onSearchChange(term: string): void {\n    this.state.globalSearch = term;\n    this.state.reset(false, true);\n    this.state.updates.next({ globalSearch: term, filter: this.state.filter, sort: this.state.sort });\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\npublic trackColumnsBy(index: number, item: IDataTableColumn<T>) {\n    return item.id;\n  }\n/**\n * @param {?} check\n * @param {?} row\n * @return {?}\n */\npublic isDisabled(check: any, row: T): boolean {\n    if (check.disabled === true) {\n      return true;\n    }\n    if (check.disabledFunc) {\n      return check.disabledFunc(row);\n    }\n    return false;\n  }\n/**\n * @param {?} row\n * @return {?}\n */\npublic isExpanded(row: T): boolean {\n    if (!row) {\n      return false;\n    }\n    return this.state.expandedRows.has(`${row[this.rowIdentifier]}`);\n  }\n/**\n * @param {?} row\n * @return {?}\n */\npublic expandRow(row: T): void {\n    let /** @type {?} */ expanded = this.isExpanded(row);\n\n    if (expanded) {\n      this.state.expandedRows.delete(`${row[this.rowIdentifier]}`);\n    } else {\n      this.state.expandedRows.add(`${row[this.rowIdentifier]}`);\n    }\n    this.state.onExpandChange();\n  }\n/**\n * @param {?} expand\n * @return {?}\n */\npublic expandRows(expand: boolean): void {\n    (this.dataSource.data || []).forEach((row: T) => {\n      if (!expand) {\n        this.state.expandedRows.delete(`${row[this.rowIdentifier]}`);\n      } else {\n        this.state.expandedRows.add(`${row[this.rowIdentifier]}`);\n      }\n    });\n    this.state.onExpandChange();\n  }\n/**\n * @return {?}\n */\npublic allCurrentRowsExpanded(): boolean {\n    for (let /** @type {?} */ i = 0; i < (this.dataSource.data || []).length; i++) {\n      if (!this.isExpanded((this.dataSource.data || [])[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} row\n * @return {?}\n */\npublic isSelected(row: T): boolean {\n    if (!row) {\n      return false;\n    }\n    return this.state.selectedRows.has(`${row[this.rowIdentifier]}`);\n  }\n/**\n * @param {?} row\n * @return {?}\n */\npublic selectRow(row: T): void {\n    let /** @type {?} */ selected = this.isSelected(row);\n\n    if (selected) {\n      this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n    } else {\n      this.state.selectedRows.set(`${row[this.rowIdentifier]}`, row);\n    }\n    this.state.onSelectionChange();\n  }\n/**\n * @param {?} selected\n * @return {?}\n */\npublic selectRows(selected: boolean): void {\n    (this.dataSource.data || []).forEach((row: T) => {\n      if (!selected) {\n        this.state.selectedRows.delete(`${row[this.rowIdentifier]}`);\n      } else {\n        this.state.selectedRows.set(`${row[this.rowIdentifier]}`, row);\n      }\n    });\n    this.state.onSelectionChange();\n  }\n/**\n * @return {?}\n */\npublic allCurrentRowsSelected(): boolean {\n    for (let /** @type {?} */ i = 0; i < (this.dataSource.data || []).length; i++) {\n      if (!this.isSelected((this.dataSource.data || [])[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @return {?}\n */\nprivate configureColumns(): void {\n    if (this.columns && this.columns.length !== 0 && Object.keys(this.templates).length !== 0) {\n      // Figure the column templates\n      this.columns.forEach((column: IDataTableColumn<T>) => {\n        // Figure the template\n        let /** @type {?} */ templateName: string;\n        if (column.template) {\n          // Pass it in as template\n          templateName = column.template;\n        } else if (!!this.templates[column.id]) {\n          // Custom template for the column id\n          templateName = column.id;\n        } else {\n          // Default to the defaulCellTemplate\n          if (column.type === 'action') {\n            if (column.action && column.action.options) {\n              templateName = 'dropdownCellTemplate';\n            } else {\n              templateName = 'buttonCellTemplate';\n            }\n          } else {\n            if (column.type === 'link:tel' || column.type === 'link:mailto') {\n              templateName = `${column.type.split(':')[1]}CellTemplate`;\n            } else {\n              templateName = `${column.type}CellTemplate`;\n            }\n          }\n        }\n        this.columnToTemplate[column.id] = this.templates[templateName];\n      });\n      this.columnsLoaded = true;\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate scrollListener(event: Event): void {\n    let /** @type {?} */ left: number = ( /** @type {?} */((event.target as Element))).scrollLeft;\n    if (left !== this.scrollLeft) {\n      this.scrollLeft = ( /** @type {?} */((event.target as Element))).scrollLeft;\n      this.ref.markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table',\n  animations: [\n    trigger('expand', [\n      animState('void', style({ height: '0px', minHeight: '0', visibility: 'hidden' })),\n      animState('*', style({ height: '*', visibility: 'visible' })),\n      transition('void <=> *', animate('70ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n  template: `\n    <header *ngIf=\"(!(dataSource?.totallyEmpty && !state.userFiltered) && !loading) || forceShowHeader\"\n            [class.empty]=\"hideGlobalSearch && !paginationOptions && !templates['customActions']\">\n      <ng-container *ngTemplateOutlet=\"templates['customHeader']\"></ng-container>\n        <novo-search\n            alwaysOpen=\"true\"\n            (searchChanged)=\"onSearchChange($event)\"\n            [(ngModel)]=\"state.globalSearch\"\n            *ngIf=\"!hideGlobalSearch\"\n            [placeholder]=\"searchOptions?.placeholder\"\n            [hint]=\"searchOptions?.tooltip\">\n        </novo-search>\n        <novo-data-table-pagination\n            *ngIf=\"paginationOptions\"\n            [theme]=\"paginationOptions.theme\"\n            [length]=\"dataSource?.currentTotal\"\n            [page]=\"paginationOptions.page\"\n            [pageSize]=\"paginationOptions.pageSize\"\n            [pageSizeOptions]=\"paginationOptions.pageSizeOptions\">\n        </novo-data-table-pagination>\n        <div class=\"novo-data-table-actions\" *ngIf=\"templates['customActions']\">\n          <ng-container *ngTemplateOutlet=\"templates['customActions']\"></ng-container>\n        </div>\n    </header>\n    <div class=\"novo-data-table-loading-mask\" *ngIf=\"dataSource?.loading || loading\" data-automation-id=\"novo-data-table-loading\">\n        <novo-loading></novo-loading>\n    </div>\n    <div class=\"novo-data-table-outside-container\">\n        <div class=\"novo-data-table-custom-filter\" *ngIf=\"customFilter\">\n          <ng-container *ngTemplateOutlet=\"templates['customFilter']\"></ng-container>\n        </div>\n        <div #novoDataTableContainer class=\"novo-data-table-container\" [class.empty-user-filtered]=\"dataSource?.currentlyEmpty && state.userFiltered\" [class.empty]=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\">\n            <cdk-table *ngIf=\"(columns?.length > 0) && columnsLoaded && dataSource\" [dataSource]=\"dataSource\" [trackBy]=\"trackByFn\" novoDataTableSortFilter [class.expandable]=\"expandable\" [class.empty]=\"dataSource?.currentlyEmpty && state.userFiltered\" [hidden]=\"dataSource?.totallyEmpty && !userFiltered\">\n                <ng-container cdkColumnDef=\"selection\">\n                    <novo-data-table-checkbox-header-cell *cdkHeaderCellDef></novo-data-table-checkbox-header-cell>\n                    <novo-data-table-checkbox-cell *cdkCellDef=\"let row; let i = index\" [row]=\"row\"></novo-data-table-checkbox-cell>\n                </ng-container>\n                <ng-container cdkColumnDef=\"expand\">\n                    <novo-data-table-expand-header-cell *cdkHeaderCellDef></novo-data-table-expand-header-cell>\n                    <novo-data-table-expand-cell *cdkCellDef=\"let row; let i = index\" [row]=\"row\"></novo-data-table-expand-cell>\n                </ng-container>\n                <ng-container *ngFor=\"let column of columns;trackBy: trackColumnsBy\" [cdkColumnDef]=\"column.id\">\n                  <novo-data-table-header-cell *cdkHeaderCellDef [column]=\"column\" [novo-data-table-cell-config]=\"column\" [defaultSort]=\"defaultSort\" [class.empty]=\"column?.type === 'action' && !column?.label\" [class.button-header-cell]=\"column?.type === 'expand' || (column?.type === 'action' && !column?.action?.options)\" [class.dropdown-header-cell]=\"column?.type === 'action' && column?.action?.options\"></novo-data-table-header-cell>\n                  <novo-data-table-cell *cdkCellDef=\"let row\" [column]=\"column\" [row]=\"row\" [template]=\"columnToTemplate[column.id]\" [class.empty]=\"column?.type === 'action' && !column?.label\" [class.button-cell]=\"column?.type === 'expand' || (column?.type === 'action' && !column?.action?.options)\" [class.dropdown-cell]=\"column?.type === 'action' && column?.action?.options\"></novo-data-table-cell>\n                </ng-container>\n                <novo-data-table-header-row *cdkHeaderRowDef=\"displayedColumns\" data-automation-id=\"novo-data-table-header-row\"></novo-data-table-header-row>\n                <novo-data-table-row *cdkRowDef=\"let row; columns: displayedColumns\" [novoDataTableExpand]=\"detailRowTemplate\" [row]=\"row\" [id]=\"name + '-' + row[rowIdentifier]\" [dataAutomationId]=\"row[rowIdentifier]\"></novo-data-table-row>\n            </cdk-table>\n            <div class=\"novo-data-table-footer\" *ngIf=\"templates['footer']\">\n              <ng-container *ngTemplateOutlet=\"templates['footer']; context: {$implicit: columns, data: dataSource.data}\"></ng-container>\n            </div>\n            <div class=\"novo-data-table-no-results-container\" [style.left.px]=\"scrollLeft\" *ngIf=\"dataSource?.currentlyEmpty && state.userFiltered && !dataSource?.loading && !loading && !dataSource.pristine\">\n              <div class=\"novo-data-table-empty-message\" >\n                <ng-container *ngTemplateOutlet=\"templates['noResultsMessage'] || templates['defaultNoResultsMessage']\"></ng-container>\n              </div>\n            </div>\n        </div>\n        <div class=\"novo-data-table-empty-container\" *ngIf=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\">\n          <div class=\"novo-data-table-empty-message\">\n            <ng-container *ngTemplateOutlet=\"templates['emptyMessage'] || templates['defaultNoResultsMessage']\"></ng-container>\n          </div>\n        </div>\n    </div>\n\n      <!-- DEFAULT CELL TEMPLATE -->\n    <ng-template novoTemplate=\"textCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <span>{{ row[col.id] | dataTableInterpolate:col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"dateCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <span>{{ row[col.id] | dataTableInterpolate:col | dataTableDateRenderer:col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"datetimeCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <span>{{ row[col.id] | dataTableInterpolate:col | dataTableDateTimeRenderer:col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"timeCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <span>{{ row[col.id] | dataTableInterpolate:col | dataTableTimeRenderer:col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"currencyCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <span>{{ row[col.id] | dataTableInterpolate:col | dataTableCurrencyRenderer:col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"numberCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <span>{{ row[col.id] | dataTableInterpolate:col | dataTableNumberRenderer:col }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"percentCellTemplate\"\n        let-row\n        let-col=\"col\">\n        <span>{{ row[col.id] | dataTableInterpolate:col | dataTableNumberRenderer:col:true }}</span>\n    </ng-template>\n    <ng-template novoTemplate=\"linkCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <a (click)=\"col.handlers?.click({originalEvent: $event, row: row})\">{{ row[col.id] | dataTableInterpolate:col }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"telCellTemplate\"\n          let-row\n          let-col=\"col\">\n        <a href=\"tel:{{ row[col.id] | dataTableInterpolate:col }}\" [target]=\"col?.attributes?.target\">{{ row[col.id] | dataTableInterpolate:col }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"mailtoCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <a href=\"mailto:{{ row[col.id] | dataTableInterpolate:col }}\" [target]=\"col?.attributes?.target\">{{ row[col.id] | dataTableInterpolate:col }}</a>\n    </ng-template>\n    <ng-template novoTemplate=\"buttonCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <p [tooltip]=\"col?.action?.tooltip\" tooltipPosition=\"right\">\n            <i class=\"bhi-{{ col?.action?.icon }} data-table-icon\" (click)=\"col.handlers?.click({ originalEvent: $event, row: row })\" [class.disabled]=\"isDisabled(col, row)\"></i>\n          </p>\n    </ng-template>\n    <ng-template novoTemplate=\"dropdownCellTemplate\"\n          let-row\n          let-col=\"col\">\n          <novo-dropdown parentScrollSelector=\".novo-data-table-container\" containerClass=\"novo-data-table-dropdown\">\n            <button type=\"button\" theme=\"dialogue\" icon=\"collapse\" inverse>{{ col.label }}</button>\n            <list>\n                <item *ngFor=\"let option of col?.action?.options\" (action)=\"option.handlers.click({ originalEvent: $event?.originalEvent, row: row })\" [disabled]=\"isDisabled(option, row)\">\n                    <span [attr.data-automation-id]=\"option.label\">{{ option.label }}</span>\n                </item>\n            </list>\n        </novo-dropdown>\n    </ng-template>\n    <ng-template novoTemplate=\"defaultNoResultsMessage\">\n      <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n    </ng-template>\n    <ng-template novoTemplate=\"defaultEmptyMessage\">\n      <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n    </ng-template>\n    <ng-template novoTemplate=\"expandedRow\">\n      You did not provide an \"expandedRow\" template!\n    </ng-template>\n    <ng-template #detailRowTemplate let-row>\n      <div class=\"novo-data-table-detail-row\" [@expand] style=\"overflow: hidden\">\n        <ng-container *ngTemplateOutlet=\"templates['expandedRow']; context: {$implicit: row}\"></ng-container>\n      </div>\n    </ng-template>\n    <!-- CUSTOM CELLS PASSED IN -->\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [DataTableState],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n{type: DataTableState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'globalSearchHiddenClassToggle': [{ type: HostBinding, args: ['class.global-search-hidden', ] },],\n'customTemplates': [{ type: ContentChildren, args: [NovoTemplate, ] },],\n'defaultTemplates': [{ type: ViewChildren, args: [NovoTemplate, ] },],\n'novoDataTableContainer': [{ type: ViewChild, args: ['novoDataTableContainer', ] },],\n'displayedColumns': [{ type: Input },],\n'paginationOptions': [{ type: Input },],\n'searchOptions': [{ type: Input },],\n'defaultSort': [{ type: Input },],\n'name': [{ type: Input },],\n'rowIdentifier': [{ type: Input },],\n'trackByFn': [{ type: Input },],\n'templates': [{ type: Input },],\n'dataTableService': [{ type: Input },],\n'rows': [{ type: Input },],\n'outsideFilter': [{ type: Input },],\n'refreshSubject': [{ type: Input },],\n'columns': [{ type: Input },],\n'customFilter': [{ type: Input },],\n'hasExandedRows': [{ type: Input },],\n'forceShowHeader': [{ type: Input },],\n'hideGlobalSearch': [{ type: Input },],\n'preferencesChanged': [{ type: Output },],\n'empty': [{ type: HostBinding, args: ['class.empty', ] },],\n'loadingClass': [{ type: HostBinding, args: ['class.loading', ] },],\n};\n}\n\nfunction NovoDataTable_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTable.ctorParameters;\n/** @type {?} */\nNovoDataTable.propDecorators;\n/** @type {?} */\nNovoDataTable.prototype.globalSearchHiddenClassToggle;\n/** @type {?} */\nNovoDataTable.prototype.customTemplates;\n/** @type {?} */\nNovoDataTable.prototype.defaultTemplates;\n/** @type {?} */\nNovoDataTable.prototype.novoDataTableContainer;\n/** @type {?} */\nNovoDataTable.prototype._disabledColumns;\n/** @type {?} */\nNovoDataTable.prototype.paginationOptions;\n/** @type {?} */\nNovoDataTable.prototype.searchOptions;\n/** @type {?} */\nNovoDataTable.prototype.defaultSort;\n/** @type {?} */\nNovoDataTable.prototype.name;\n/** @type {?} */\nNovoDataTable.prototype.rowIdentifier;\n/** @type {?} */\nNovoDataTable.prototype.trackByFn;\n/** @type {?} */\nNovoDataTable.prototype.templates;\n/** @type {?} */\nNovoDataTable.prototype._customFilter;\n/** @type {?} */\nNovoDataTable.prototype._hasExandedRows;\n/** @type {?} */\nNovoDataTable.prototype._forceShowHeader;\n/** @type {?} */\nNovoDataTable.prototype._hideGlobalSearch;\n/** @type {?} */\nNovoDataTable.prototype.preferencesChanged;\n/** @type {?} */\nNovoDataTable.prototype.dataSource;\n/** @type {?} */\nNovoDataTable.prototype.loading;\n/** @type {?} */\nNovoDataTable.prototype.columnToTemplate;\n/** @type {?} */\nNovoDataTable.prototype.columnsLoaded;\n/** @type {?} */\nNovoDataTable.prototype.selection;\n/** @type {?} */\nNovoDataTable.prototype.scrollLeft;\n/** @type {?} */\nNovoDataTable.prototype.expandable;\n/** @type {?} */\nNovoDataTable.prototype.outsideFilterSubscription;\n/** @type {?} */\nNovoDataTable.prototype.refreshSubscription;\n/** @type {?} */\nNovoDataTable.prototype.resetSubscription;\n/** @type {?} */\nNovoDataTable.prototype.paginationSubscription;\n/** @type {?} */\nNovoDataTable.prototype._columns;\n/** @type {?} */\nNovoDataTable.prototype.scrollListenerHandler;\n/** @type {?} */\nNovoDataTable.prototype.labels;\n/** @type {?} */\nNovoDataTable.prototype.ref;\n/** @type {?} */\nNovoDataTable.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ElementRef, Input, Renderer2, HostBinding, Component, ChangeDetectionStrategy, OnInit, TemplateRef } from '@angular/core';\nimport { CdkCell, CdkColumnDef } from '@angular/cdk/table';\n\nimport { IDataTableColumn } from '../interfaces';\nexport class NovoDataTableCell<T> extends CdkCell implements OnInit {\npublic role = 'gridcell';\npublic row: T;\npublic template: TemplateRef<any>;\npublic column: IDataTableColumn<T>;\npublic templateName: string;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-cell');\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this.column.cellClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.column.cellClass(this.row));\n    }\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-cell',\n  template: `\n    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: row, col: column}\"></ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'row': [{ type: Input },],\n'template': [{ type: Input },],\n'column': [{ type: Input },],\n};\n}\n\nfunction NovoDataTableCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableCell.ctorParameters;\n/** @type {?} */\nNovoDataTableCell.propDecorators;\n/** @type {?} */\nNovoDataTableCell.prototype.role;\n/** @type {?} */\nNovoDataTableCell.prototype.row;\n/** @type {?} */\nNovoDataTableCell.prototype.template;\n/** @type {?} */\nNovoDataTableCell.prototype.column;\n/** @type {?} */\nNovoDataTableCell.prototype.templateName;\n/** @type {?} */\nNovoDataTableCell.prototype.elementRef;\n/** @type {?} */\nNovoDataTableCell.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ElementRef,\n  Input,\n  Renderer2,\n  HostBinding,\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CdkCell, CdkColumnDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoDataTable } from '../data-table.component';\nimport { DataTableState } from '../state/data-table-state.service';\nexport class NovoDataTableCheckboxCell<T> extends CdkCell implements OnInit, OnDestroy {\npublic role = 'gridcell';\npublic row: T;\npublic checked: boolean = false;\nprivate selectionSubscription: Subscription;\nprivate resetSubscription: Subscription;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} dataTable\n * @param {?} ref\n */\nconstructor(\npublic columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\npublic dataTable: NovoDataTable<T>,\nprivate ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-checkbox-cell');\n\n    this.selectionSubscription = this.dataTable.state.selectionSource.subscribe(() => {\n      this.checked = this.dataTable.isSelected(this.row);\n      this.ref.markForCheck();\n    });\n    this.resetSubscription = this.dataTable.state.resetSource.subscribe(() => {\n      this.checked = false;\n      this.ref.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this.checked = this.dataTable.isSelected(this.row);\n  }\n/**\n * @return {?}\n */\npublic onClick(): void {\n    this.dataTable.selectRow(this.row);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    if (this.selectionSubscription) {\n      this.selectionSubscription.unsubscribe();\n    }\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-checkbox-cell',\n  template: `\n    <div class=\"data-table-checkbox\" (click)=\"onClick()\">\n      <input type=\"checkbox\" [checked]=\"checked\">\n      <label>\n        <i [class.bhi-checkbox-empty]=\"!checked\"\n          [class.bhi-checkbox-filled]=\"checked\"></i>\n      </label>\n    </div>\n    `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoDataTable, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'row': [{ type: Input },],\n};\n}\n\nfunction NovoDataTableCheckboxCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableCheckboxCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableCheckboxCell.ctorParameters;\n/** @type {?} */\nNovoDataTableCheckboxCell.propDecorators;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.role;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.row;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.checked;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.selectionSubscription;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.resetSubscription;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.columnDef;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.dataTable;\n/** @type {?} */\nNovoDataTableCheckboxCell.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ElementRef,\n  Input,\n  Renderer2,\n  HostBinding,\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CdkCell, CdkColumnDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoDataTable } from '../data-table.component';\nimport { DataTableState } from '../state/data-table-state.service';\nexport class NovoDataTableExpandCell<T> extends CdkCell implements OnInit, OnDestroy {\npublic role = 'gridcell';\npublic row: T;\npublic expanded: boolean = false;\nprivate expandSubscription: Subscription;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} dataTable\n * @param {?} ref\n */\nconstructor(\npublic columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\npublic dataTable: NovoDataTable<T>,\nprivate ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-expand-cell');\n\n    this.expandSubscription = this.dataTable.state.expandSource.subscribe(() => {\n      this.expanded = this.dataTable.isExpanded(this.row);\n      this.ref.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this.expanded = this.dataTable.isExpanded(this.row);\n  }\n/**\n * @return {?}\n */\npublic onClick(): void {\n    this.dataTable.expandRow(this.row);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    if (this.expandSubscription) {\n      this.expandSubscription.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-expand-cell',\n  template: `\n    <i class=\"bhi-next data-table-icon\" novo-data-table-expander=\"true\" [class.expanded]=\"expanded\"></i>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoDataTable, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'row': [{ type: Input },],\n};\n}\n\nfunction NovoDataTableExpandCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableExpandCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableExpandCell.ctorParameters;\n/** @type {?} */\nNovoDataTableExpandCell.propDecorators;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.role;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.row;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.expanded;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.expandSubscription;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.columnDef;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.dataTable;\n/** @type {?} */\nNovoDataTableExpandCell.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, Input, HostBinding } from '@angular/core';\nimport { CdkHeaderRow, CDK_ROW_TEMPLATE } from '@angular/cdk/table';\nexport class NovoDataTableHeaderRow extends CdkHeaderRow {\npublic rowClass = 'novo-data-table-header-row';\npublic role = 'row';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-header-row',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowClass': [{ type: HostBinding, args: ['class', ] },],\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoDataTableHeaderRow_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableHeaderRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableHeaderRow.ctorParameters;\n/** @type {?} */\nNovoDataTableHeaderRow.propDecorators;\n/** @type {?} */\nNovoDataTableHeaderRow.prototype.rowClass;\n/** @type {?} */\nNovoDataTableHeaderRow.prototype.role;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, Input, HostBinding } from '@angular/core';\nimport { CdkRow, CDK_ROW_TEMPLATE } from '@angular/cdk/table';\nexport class NovoDataTableRow extends CdkRow {\npublic rowClass = 'novo-data-table-row';\npublic role = 'row';\n\n  \n  \n  id;\n\n  \n  \n  dataAutomationId;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-row',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowClass': [{ type: HostBinding, args: ['class', ] },],\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'id': [{ type: HostBinding, args: ['attr.id', ] },{ type: Input },],\n'dataAutomationId': [{ type: HostBinding, args: ['attr.data-automation-id', ] },{ type: Input },],\n};\n}\n\nfunction NovoDataTableRow_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableRow.ctorParameters;\n/** @type {?} */\nNovoDataTableRow.propDecorators;\n/** @type {?} */\nNovoDataTableRow.prototype.rowClass;\n/** @type {?} */\nNovoDataTableRow.prototype.role;\n/** @type {?} */\nNovoDataTableRow.prototype.id;\n/** @type {?} */\nNovoDataTableRow.prototype.dataAutomationId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { DataTableState } from '../state/data-table-state.service';\nimport { Helpers } from '../../../utils/Helpers';\nexport class NovoDataTableSortFilter<T> {\n/**\n * @param {?} state\n */\nconstructor(private state: DataTableState<T>) {}\n/**\n * @param {?} id\n * @param {?} value\n * @param {?} transform\n * @return {?}\n */\npublic filter(id: string, value: any, transform: Function): void {\n    let /** @type {?} */ filter;\n    if (!Helpers.isBlank(value)) {\n      filter = { id, value, transform };\n    } else {\n      filter = undefined;\n    }\n    this.state.filter = filter;\n    this.state.reset(false, true);\n    this.state.updates.next({ filter: filter, sort: this.state.sort });\n    this.state.onSortFilterChange();\n  }\n/**\n * @param {?} id\n * @param {?} value\n * @param {?} transform\n * @return {?}\n */\npublic sort(id: string, value: string, transform: Function): void {\n    let /** @type {?} */ sort = { id, value, transform };\n    this.state.sort = sort;\n    this.state.reset(false, true);\n    this.state.updates.next({ sort: sort, filter: this.state.filter });\n    this.state.onSortFilterChange();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoDataTableSortFilter]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DataTableState, },\n];\n}\n\nfunction NovoDataTableSortFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableSortFilter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableSortFilter.ctorParameters;\n/** @type {?} */\nNovoDataTableSortFilter.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Optional,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as dateFns from 'date-fns';\n\nimport {\n  IDataTableSortFilter,\n  IDataTableChangeEvent,\n  IDataTableColumn,\n  IDataTableColumnFilterOption,\n  IDataTableColumnFilterConfig,\n  IDataTableColumnSortConfig,\n} from '../interfaces';\nimport { NovoDataTableSortFilter } from '../sort-filter/sort-filter.directive';\nimport { NovoDropdownElement } from '../../dropdown/Dropdown';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { DataTableState } from '../state/data-table-state.service';\nimport { Helpers } from '../../../utils/Helpers';\nexport class NovoDataTableCellHeader<T> implements IDataTableSortFilter, OnInit, OnDestroy {\n  \n  filterInput: ElementRef;\n  \n  dropdown: NovoDropdownElement;\n\n  \n  defaultSort: { id: string; value: string };\n/**\n * @param {?} column\n * @return {?}\n */\nset column(column: IDataTableColumn<T>) {\n    this.label = column.type === 'action' ? '' : column.label;\n    this.labelIcon = column.labelIcon;\n\n    this.config = {\n      sortable: !!column.sortable,\n      filterable: !!column.filterable,\n    };\n\n    let /** @type {?} */ transforms: { filter?: Function; sort?: Function } = {};\n\n    if (column.filterable && Helpers.isObject(column.filterable)) {\n      this.config.filterConfig = /** @type {?} */(( column.filterable as IDataTableColumnFilterConfig));\n      if (!this.config.filterConfig.type) {\n        this.config.filterConfig = { type: 'text' };\n      }\n      if (( /** @type {?} */((column.filterable as IDataTableColumnFilterConfig))).transform) {\n        transforms.filter = ( /** @type {?} */((column.filterable as IDataTableColumnFilterConfig))).transform;\n      }\n    } else {\n      this.config.filterConfig = { type: 'text' };\n    }\n\n    if (column.sortable && Helpers.isObject(column.sortable)) {\n      if (( /** @type {?} */((column.sortable as IDataTableColumnSortConfig))).transform) {\n        transforms.sort = ( /** @type {?} */((column.sortable as IDataTableColumnSortConfig))).transform;\n      }\n    }\n\n    if (this.config.filterConfig.type === 'date' && !this.config.filterConfig.options) {\n      this.config.filterConfig.options = this.getDefaultDateFilterOptions();\n    }\n\n    this.config.transforms = transforms;\n  }\nprivate _rerenderSubscription: Subscription;\nprivate changeTimeout: any;\npublic label: string;\npublic icon: string = 'sortable';\npublic labelIcon: string;\npublic id: string;\npublic filter: any;\npublic direction: string;\npublic filterActive: boolean = false;\npublic sortActive: boolean = false;\npublic showCustomRange: boolean = false;\npublic activeDateFilter: string;\npublic config: {\n    sortable: boolean;\n    filterable: boolean;\n    transforms?: { filter?: Function; sort?: Function };\n    filterConfig?: IDataTableColumnFilterConfig;\n  };\n/**\n * @param {?} changeDetectorRef\n * @param {?} labels\n * @param {?} state\n * @param {?} _sort\n * @param {?} _cdkColumnDef\n */\nconstructor(\nprivate changeDetectorRef: ChangeDetectorRef,\npublic labels: NovoLabelService,\nprivate state: DataTableState<T>,\npublic _sort: NovoDataTableSortFilter<T>,\npublic _cdkColumnDef: CdkColumnDef,\n  ) {\n    this._rerenderSubscription = state.updates.subscribe((change: IDataTableChangeEvent) => {\n      if (change.sort && change.sort.id === this.id) {\n        this.icon = `sort-${change.sort.value}`;\n        this.sortActive = true;\n      } else {\n        this.icon = 'sortable';\n        this.sortActive = false;\n      }\n      if (change.filter && change.filter.id === this.id) {\n        this.filterActive = true;\n        this.filter = change.filter.value;\n      } else {\n        this.filterActive = false;\n        this.filter = undefined;\n      }\n      changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n    if (this.defaultSort && this.id === this.defaultSort.id) {\n      this.icon = `sort-${this.defaultSort.value}`;\n      this.sortActive = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n  }\n/**\n * @param {?} event\n * @param {?} value\n * @return {?}\n */\npublic toggleCustomRange(event: Event, value: boolean): void {\n    Helpers.swallowEvent(event);\n    this.showCustomRange = value;\n    this.changeDetectorRef.markForCheck();\n    this.dropdown.openPanel(); // Ensures that the panel correctly updates to the dynamic size of the dropdown\n  }\n/**\n * @return {?}\n */\npublic focusInput(): void {\n    if (this.filterInput && this.filterInput.nativeElement) {\n      setTimeout(() => this.filterInput.nativeElement.focus(), 0);\n    }\n  }\n/**\n * @return {?}\n */\npublic sort(): void {\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n    this.changeTimeout = setTimeout(() => {\n      this.direction = this.getNextSortDirection(this.direction);\n      this._sort.sort(this.id, this.direction, this.config.transforms.sort);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n/**\n * @param {?=} filter\n * @return {?}\n */\npublic filterData(filter?: any): void {\n    let /** @type {?} */ actualFilter = filter;\n    if (this.config.filterConfig.type === 'date' && filter) {\n      this.activeDateFilter = filter.label || this.labels.customDateRange;\n      if (filter.startDate && filter.endDate) {\n        actualFilter = {\n          min: dateFns.startOfDay(filter.startDate.date),\n          max: dateFns.startOfDay(dateFns.addDays(dateFns.startOfDay(filter.endDate.date), 1)),\n        };\n      } else {\n        actualFilter = {\n          min: filter.min ? dateFns.addDays(dateFns.startOfToday(), filter.min) : dateFns.startOfToday(),\n          max: filter.max ? dateFns.addDays(dateFns.endOfToday(), filter.max) : dateFns.endOfToday(),\n        };\n      }\n    }\n\n    if (actualFilter && actualFilter.hasOwnProperty('value')) {\n      actualFilter = filter.value;\n    }\n\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n\n    this.changeTimeout = setTimeout(() => {\n      if (actualFilter === '') {\n        actualFilter = undefined;\n      }\n      this._sort.filter(this.id, actualFilter, this.config.transforms.filter);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n/**\n * @return {?}\n */\npublic clearFilter(): void {\n    this.filter = undefined;\n    this.activeDateFilter = undefined;\n    this.filterData(undefined);\n  }\n/**\n * @param {?} direction\n * @return {?}\n */\nprivate getNextSortDirection(direction: string): string {\n    if (!direction) {\n      return 'asc';\n    }\n    if (direction === 'asc') {\n      return 'desc';\n    }\n    return 'asc';\n  }\n/**\n * @return {?}\n */\nprivate getDefaultDateFilterOptions(): IDataTableColumnFilterOption[] {\n    let /** @type {?} */ opts: IDataTableColumnFilterOption[] = [\n      { label: this.labels.past1Day, min: -1, max: 0 },\n      { label: this.labels.past7Days, min: -7, max: 0 },\n      { label: this.labels.past30Days, min: -30, max: 0 },\n      { label: this.labels.past90Days, min: -90, max: 0 },\n      { label: this.labels.past1Year, min: -366, max: 0 },\n      { label: this.labels.next1Day, min: 0, max: 1 },\n      { label: this.labels.next7Days, min: 0, max: 7 },\n      { label: this.labels.next30Days, min: 0, max: 30 },\n      { label: this.labels.next90Days, min: 0, max: 90 },\n      { label: this.labels.next1Year, min: 0, max: 366 },\n    ];\n    return opts;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: '[novo-data-table-cell-config]',\n  template: `\n        <i class=\"bhi-{{ labelIcon }} label-icon\" *ngIf=\"labelIcon\" data-automation-id=\"novo-data-table-header-icon\"></i>\n        <label data-automation-id=\"novo-data-table-label\">{{ label }}</label>\n        <div>\n            <button *ngIf=\"config.sortable\" tooltipPosition=\"right\" [tooltip]=\"labels.sort\" theme=\"icon\" [icon]=\"icon\" (click)=\"sort()\" [class.active]=\"sortActive\" data-automation-id=\"novo-data-table-sort\"></button>\n            <novo-dropdown *ngIf=\"config.filterable\" side=\"right\" parentScrollSelector=\".novo-data-table-container\" containerClass=\"data-table-dropdown\" data-automation-id=\"novo-data-table-filter\">\n                <button type=\"button\" theme=\"icon\" icon=\"filter\" [class.active]=\"filterActive\" (click)=\"focusInput()\" tooltipPosition=\"right\" [tooltip]=\"labels.filters\"></button>\n                <div class=\"header\">\n                    <span>{{ labels.filters }}</span>\n                    <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"clearFilter()\" *ngIf=\"filter !== null && filter !== undefined && filter !== ''\" data-automation-id=\"novo-data-table-filter-clear\">{{ labels.clear }}</button>\n                </div>\n                <ng-container [ngSwitch]=\"config.filterConfig.type\">\n                    <list *ngSwitchCase=\"'date'\">\n                        <ng-container *ngIf=\"!showCustomRange\">\n                            <item [class.active]=\"activeDateFilter === option.label\" *ngFor=\"let option of config.filterConfig.options\" (click)=\"filterData(option)\" [attr.data-automation-id]=\"'novo-data-table-filter-' + option.label\">\n                                {{ option.label }} <i class=\"bhi-check\" *ngIf=\"activeDateFilter === option.label\"></i>\n                            </item>\n                        </ng-container>\n                        <item [class.active]=\"labels.customDateRange === activeDateFilter\" (click)=\"toggleCustomRange($event, true)\" *ngIf=\"config.filterConfig.allowCustomRange && !showCustomRange\" [keepOpen]=\"true\">\n                            {{ labels.customDateRange }} <i class=\"bhi-check\" *ngIf=\"labels.customDateRange === activeDateFilter\"></i>\n                        </item>\n                        <div class=\"calendar-container\" *ngIf=\"showCustomRange\">\n                            <div (click)=\"toggleCustomRange($event, false)\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n                            <novo-date-picker (onSelect)=\"filterData($event)\" [(ngModel)]=\"filter\" range=\"true\"></novo-date-picker>\n                        </div>\n                    </list>\n                    <list *ngSwitchCase=\"'select'\">\n                        <item [class.active]=\"filter === option\" *ngFor=\"let option of config.filterConfig.options\" (click)=\"filterData(option)\" [attr.data-automation-id]=\"'novo-data-table-filter-' + (option?.label || option)\">\n                            <span>{{ option?.label || option }}</span> <i class=\"bhi-check\" *ngIf=\"option.hasOwnProperty('value') ? filter === option.value : filter === option\"></i>\n                        </item>\n                    </list>\n                    <list *ngSwitchDefault>\n                        <item class=\"filter-search\" keepOpen=\"true\">\n                            <input [type]=\"config.filterConfig.type\" [(ngModel)]=\"filter\" (ngModelChange)=\"filterData($event)\" #filterInput data-automation-id=\"novo-data-table-filter-input\"/>\n                        </item>\n                    </list>\n                </ng-container>\n            </novo-dropdown>\n        </div>\n    `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: NovoLabelService, },\n{type: DataTableState, },\n{type: NovoDataTableSortFilter, decorators: [{ type: Optional }, ]},\n{type: CdkColumnDef, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filterInput': [{ type: ViewChild, args: ['filterInput', ] },],\n'dropdown': [{ type: ViewChild, args: [NovoDropdownElement, ] },],\n'defaultSort': [{ type: Input },],\n'column': [{ type: Input, args: ['novo-data-table-cell-config', ] },],\n};\n}\n\nfunction NovoDataTableCellHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableCellHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableCellHeader.ctorParameters;\n/** @type {?} */\nNovoDataTableCellHeader.propDecorators;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.filterInput;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.dropdown;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.defaultSort;\n/** @type {?} */\nNovoDataTableCellHeader.prototype._rerenderSubscription;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.changeTimeout;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.label;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.icon;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.labelIcon;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.id;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.filter;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.direction;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.filterActive;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.sortActive;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.showCustomRange;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.activeDateFilter;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.config;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.changeDetectorRef;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.labels;\n/** @type {?} */\nNovoDataTableCellHeader.prototype.state;\n/** @type {?} */\nNovoDataTableCellHeader.prototype._sort;\n/** @type {?} */\nNovoDataTableCellHeader.prototype._cdkColumnDef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  HostBinding,\n  OnDestroy,\n  ElementRef,\n  Renderer2,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CdkHeaderCell, CdkColumnDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoDataTable } from '../data-table.component';\nexport class NovoDataTableExpandHeaderCell<T> extends CdkHeaderCell implements OnDestroy {\npublic role = 'columnheader';\npublic expanded: boolean = false;\nprivate expandSubscription: Subscription;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} dataTable\n * @param {?} ref\n */\nconstructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\nprivate dataTable: NovoDataTable<T>,\nprivate ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-expand-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-expand-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-expand-header-cell');\n\n    this.expandSubscription = this.dataTable.state.expandSource.subscribe(() => {\n      this.expanded = this.dataTable.allCurrentRowsExpanded();\n      this.ref.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    if (this.expandSubscription) {\n      this.expandSubscription.unsubscribe();\n    }\n  }\n/**\n * @return {?}\n */\npublic expandAll(): void {\n    this.dataTable.expandRows(!this.expanded);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-expand-header-cell',\n  template: `\n    <i class=\"bhi-next data-table-icon\" novo-data-table-expander=\"true\" (click)=\"expandAll()\" [class.expanded]=\"expanded\"></i>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoDataTable, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoDataTableExpandHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableExpandHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableExpandHeaderCell.ctorParameters;\n/** @type {?} */\nNovoDataTableExpandHeaderCell.propDecorators;\n/** @type {?} */\nNovoDataTableExpandHeaderCell.prototype.role;\n/** @type {?} */\nNovoDataTableExpandHeaderCell.prototype.expanded;\n/** @type {?} */\nNovoDataTableExpandHeaderCell.prototype.expandSubscription;\n/** @type {?} */\nNovoDataTableExpandHeaderCell.prototype.dataTable;\n/** @type {?} */\nNovoDataTableExpandHeaderCell.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  HostBinding,\n  OnDestroy,\n  ElementRef,\n  Renderer2,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CdkHeaderCell, CdkColumnDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoDataTable } from '../data-table.component';\nexport class NovoDataTableCheckboxHeaderCell<T> extends CdkHeaderCell implements OnDestroy {\npublic role = 'columnheader';\npublic checked: boolean = false;\nprivate selectionSubscription: Subscription;\nprivate paginationSubscription: Subscription;\nprivate resetSubscription: Subscription;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} dataTable\n * @param {?} ref\n */\nconstructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\nprivate dataTable: NovoDataTable<T>,\nprivate ref: ChangeDetectorRef,\n  ) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-checkbox-header-cell');\n\n    this.selectionSubscription = this.dataTable.state.selectionSource.subscribe(() => {\n      this.checked = this.dataTable.allCurrentRowsSelected();\n      this.ref.markForCheck();\n    });\n    this.paginationSubscription = this.dataTable.state.paginationSource.subscribe((event: { isPageSizeChange: boolean }) => {\n      if (event.isPageSizeChange) {\n        this.checked = false;\n        this.dataTable.selectRows(false);\n      } else {\n        this.checked = this.dataTable.allCurrentRowsSelected();\n      }\n      this.ref.markForCheck();\n    });\n    this.resetSubscription = this.dataTable.state.resetSource.subscribe(() => {\n      this.checked = false;\n      this.ref.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    if (this.selectionSubscription) {\n      this.selectionSubscription.unsubscribe();\n    }\n    if (this.paginationSubscription) {\n      this.paginationSubscription.unsubscribe();\n    }\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n  }\n/**\n * @return {?}\n */\npublic onClick(): void {\n    this.dataTable.selectRows(!this.checked);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-checkbox-header-cell',\n  template: `\n    <div class=\"data-table-checkbox\" (click)=\"onClick()\">\n      <input type=\"checkbox\" [checked]=\"checked\">\n      <label>\n        <i [class.bhi-checkbox-empty]=\"!checked\"\n          [class.bhi-checkbox-filled]=\"checked\"></i>\n      </label>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoDataTable, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoDataTableCheckboxHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableCheckboxHeaderCell.ctorParameters;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.propDecorators;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.role;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.checked;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.selectionSubscription;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.paginationSubscription;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.resetSubscription;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.dataTable;\n/** @type {?} */\nNovoDataTableCheckboxHeaderCell.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, ElementRef, Renderer2, Input, HostBinding } from '@angular/core';\nimport { CdkHeaderCell, CdkColumnDef } from '@angular/cdk/table';\n\nimport { IDataTableColumn } from '../interfaces';\nexport class NovoDataTableHeaderCell<T> extends CdkHeaderCell implements OnInit {\npublic role = 'columnheader';\npublic column: IDataTableColumn<T>;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-data-table-header-cell');\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-data-table-header-cell',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'column': [{ type: Input },],\n};\n}\n\nfunction NovoDataTableHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableHeaderCell.ctorParameters;\n/** @type {?} */\nNovoDataTableHeaderCell.propDecorators;\n/** @type {?} */\nNovoDataTableHeaderCell.prototype.role;\n/** @type {?} */\nNovoDataTableHeaderCell.prototype.column;\n/** @type {?} */\nNovoDataTableHeaderCell.prototype.elementRef;\n/** @type {?} */\nNovoDataTableHeaderCell.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  HostBinding,\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { IDataTablePaginationEvent } from '../interfaces';\nimport { NovoLabelService } from '../../../services/novo-label-service';\nimport { DataTableState } from '../state/data-table-state.service';\n\nconst /** @type {?} */ DEFAULT_PAGE_SIZE = 50;\nconst /** @type {?} */ MAX_PAGES_DISPLAYED = 5;\nexport class NovoDataTablePagination<T> implements OnInit, OnDestroy {\n  \n  \n  theme: string = 'standard';\n/**\n * @return {?}\n */\nget page(): number {\n    return this._page;\n  }\n/**\n * @param {?} page\n * @return {?}\n */\nset page(page: number) {\n    this._page = page;\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.state.page = this._page;\n  }\n  _page: number = 0;\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this._pageSize;\n  }\n/**\n * @param {?} pageSize\n * @return {?}\n */\nset pageSize(pageSize: number) {\n    this._pageSize = pageSize;\n    this.updateDisplayedPageSizeOptions();\n    this.state.pageSize = this._pageSize;\n  }\nprivate _pageSize: number;\n/**\n * @return {?}\n */\nget pageSizeOptions(): any[] {\n    return this._pageSizeOptions;\n  }\n/**\n * @param {?} pageSizeOptions\n * @return {?}\n */\nset pageSizeOptions(pageSizeOptions: any[]) {\n    this._pageSizeOptions = pageSizeOptions;\n    this.updateDisplayedPageSizeOptions();\n  }\nprivate _pageSizeOptions: any[] = [];\n/**\n * @return {?}\n */\nget length(): number {\n    return this._length;\n  }\n/**\n * @param {?} length\n * @return {?}\n */\nset length(length: number) {\n    this._length = length;\n    this.changeDetectorRef.markForCheck();\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  _length: number = 0;\n\n  \n  pageChange = new EventEmitter<IDataTablePaginationEvent>();\npublic displayedPageSizeOptions: { value: string; label: string }[];\npublic longRangeLabel: string;\npublic shortRangeLabel: string;\npublic pages: { number: number; text: string; active: boolean }[];\nprivate resetSubscription: Subscription;\nprivate totalPages: number;\nprivate _initialized: boolean;\n/**\n * @param {?} changeDetectorRef\n * @param {?} labels\n * @param {?} state\n */\nconstructor(private changeDetectorRef: ChangeDetectorRef,\npublic labels: NovoLabelService,\nprivate state: DataTableState<T>) {\n    this.resetSubscription = this.state.resetSource.subscribe(() => {\n      this.page = 0;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this._initialized = true;\n    this.updateDisplayedPageSizeOptions();\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this.resetSubscription.unsubscribe();\n  }\n/**\n * @param {?} page\n * @return {?}\n */\npublic selectPage(page) {\n    this.page = page;\n    this.emitPageEvent();\n  }\n/**\n * @return {?}\n */\npublic nextPage(): void {\n    if (!this.hasNextPage()) {\n      return;\n    }\n    this.page++;\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.emitPageEvent();\n  }\n/**\n * @return {?}\n */\npublic previousPage(): void {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n    this.page--;\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.emitPageEvent();\n  }\n/**\n * @return {?}\n */\npublic hasPreviousPage(): boolean {\n    return this.page >= 1 && this.pageSize !== 0;\n  }\n/**\n * @return {?}\n */\npublic hasNextPage(): boolean {\n    const /** @type {?} */ numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n    return this.page < numberOfPages && this.pageSize !== 0;\n  }\n/**\n * @param {?} pageSize\n * @return {?}\n */\npublic changePageSize(pageSize: number): void {\n    this.page = 0;\n    this.pageSize = pageSize;\n    this.emitPageEvent(true);\n  }\n/**\n * @return {?}\n */\nprivate updateDisplayedPageSizeOptions(): void {\n    if (!this._initialized) {\n      return;\n    }\n    if (!this.displayedPageSizeOptions) {\n      this.displayedPageSizeOptions = [];\n      this.pageSizeOptions.forEach((option: any) => {\n        if (option.hasOwnProperty('value')) {\n          this.displayedPageSizeOptions.push(option);\n        } else {\n          this.displayedPageSizeOptions.push({\n            value: option,\n            label: option,\n          });\n        }\n      });\n    }\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.changeDetectorRef.detectChanges();\n  }\n/**\n * @param {?=} isPageSizeChange\n * @return {?}\n */\nprivate emitPageEvent(isPageSizeChange: boolean = false): void {\n    let /** @type {?} */ event = {\n      page: this.page,\n      pageSize: this.pageSize,\n      length: this.length,\n      filter: this.state.filter,\n      sort: this.state.sort,\n    };\n    this.pageChange.next(event);\n    this.state.page = this.page;\n    this.state.pageSize = this.pageSize;\n    this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n    this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    this.totalPages = this.calculateTotalPages();\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.state.updates.next(event);\n    this.state.onPaginationChange(isPageSizeChange, this.pageSize);\n  }\n/**\n * @return {?}\n */\nprivate calculateTotalPages() {\n    const /** @type {?} */ totalPages = this.pageSize < 1 ? 1 : Math.ceil(this.length / this.pageSize);\n    return Math.max(totalPages || 0, 1);\n  }\n/**\n * @param {?} number\n * @param {?} text\n * @param {?} isActive\n * @return {?}\n */\nprivate makePage(number: number, text: string, isActive: boolean): { number: number; text: string; active: boolean } {\n    return {\n      number: number,\n      text: text,\n      active: isActive,\n    };\n  }\n/**\n * @param {?} currentPage\n * @param {?} totalPages\n * @return {?}\n */\nprivate getPages(currentPage: number, totalPages: number): { number: number; text: string; active: boolean }[] {\n    let /** @type {?} */ pages = [];\n\n    // Default page limits\n    let /** @type {?} */ startPage = 1;\n    let /** @type {?} */ endPage = totalPages;\n    const /** @type {?} */ isMaxSized = MAX_PAGES_DISPLAYED < totalPages;\n\n    // Recompute if maxPagesDisplayed\n    if (isMaxSized) {\n      // Current page is displayed in the middle of the visible ones\n      startPage = Math.max(currentPage - Math.floor(MAX_PAGES_DISPLAYED / 2), 1);\n      endPage = startPage + MAX_PAGES_DISPLAYED - 1;\n\n      // Adjust if limit is exceeded\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = endPage - MAX_PAGES_DISPLAYED + 1;\n      }\n    }\n\n    // Add page number links\n    for (let /** @type {?} */ number = startPage; number <= endPage; number++) {\n      const /** @type {?} */ page = this.makePage(number, number.toString(), number === currentPage);\n      pages.push(page);\n    }\n    return pages;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-pagination',\n  template: `\n      <ng-container *ngIf=\"theme === 'basic' || theme === 'basic-wide'\">\n        <div class=\"novo-data-table-pagination-size\">\n            <novo-tiles *ngIf=\"displayedPageSizeOptions.length > 1\"\n                        [(ngModel)]=\"pageSize\"\n                        [options]=\"displayedPageSizeOptions\"\n                        (onChange)=\"changePageSize($event)\"\n                        data-automation-id=\"novo-data-table-pagination-tiles\">\n            </novo-tiles>\n            <div *ngIf=\"displayedPageSizeOptions.length <= 1\">{{ pageSize }}</div>\n        </div>\n\n        <div class=\"novo-data-table-range-label-long\" data-automation-id=\"novo-data-table-pagination-range-label-long\">\n            {{ longRangeLabel }}\n        </div>\n        <div class=\"novo-data-table-range-label-short\" data-automation-id=\"novo-data-table-pagination-range-label-short\">\n            {{ shortRangeLabel }}\n        </div>\n        <span class=\"spacer novo-data-table-spacer\" *ngIf=\"theme === 'basic-wide'\"></span>\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-data-table-pagination-navigation-previous\"\n                (click)=\"previousPage()\"\n                icon=\"previous\"\n                side=\"left\"\n                [disabled]=\"!hasPreviousPage()\"\n                data-automation-id=\"novo-data-table-pagination-previous\">\n            <span>{{ labels.previous }}</span>\n        </button>\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-data-table-pagination-navigation-next\"\n                (click)=\"nextPage()\"\n                icon=\"next\"\n                side=\"right\"\n                [disabled]=\"!hasNextPage()\"\n                data-automation-id=\"novo-data-table-pagination-next\">\n            <span>{{ labels.next }}</span>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"theme === 'standard'\">\n        <h5 class=\"rows\">{{ labels.itemsPerPage }}</h5>\n        <novo-select [options]=\"displayedPageSizeOptions\" [placeholder]=\"labels.select\" [(ngModel)]=\"pageSize\" (onSelect)=\"changePageSize($event.selected)\" data-automation-id=\"pager-select\"></novo-select>\n        <span class=\"spacer\"></span>\n        <ul class=\"pager\" data-automation-id=\"pager\">\n            <li class=\"page\" (click)=\"selectPage(page - 1)\" [ngClass]=\"{ 'disabled': page === 0 }\"><i class=\"bhi-previous\" data-automation-id=\"pager-previous\"></i></li>\n            <li class=\"page\" [ngClass]=\"{active: p.number === page + 1}\" *ngFor=\"let p of pages\" (click)=\"selectPage(p.number - 1)\">{{ p.text }}</li>\n            <li class=\"page\" (click)=\"selectPage(page + 1)\" [ngClass]=\"{ 'disabled': page + 1 === totalPages }\"><i class=\"bhi-next\" data-automation-id=\"pager-next\"></i></li>\n        </ul>\n      </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: NovoLabelService, },\n{type: DataTableState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: HostBinding, args: ['class', ] },{ type: Input },],\n'page': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'pageSizeOptions': [{ type: Input },],\n'length': [{ type: Input },],\n'pageChange': [{ type: Output },],\n};\n}\n\nfunction NovoDataTablePagination_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTablePagination.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTablePagination.ctorParameters;\n/** @type {?} */\nNovoDataTablePagination.propDecorators;\n/** @type {?} */\nNovoDataTablePagination.prototype.theme;\n/** @type {?} */\nNovoDataTablePagination.prototype._page;\n/** @type {?} */\nNovoDataTablePagination.prototype._pageSize;\n/** @type {?} */\nNovoDataTablePagination.prototype._pageSizeOptions;\n/** @type {?} */\nNovoDataTablePagination.prototype._length;\n/** @type {?} */\nNovoDataTablePagination.prototype.pageChange;\n/** @type {?} */\nNovoDataTablePagination.prototype.displayedPageSizeOptions;\n/** @type {?} */\nNovoDataTablePagination.prototype.longRangeLabel;\n/** @type {?} */\nNovoDataTablePagination.prototype.shortRangeLabel;\n/** @type {?} */\nNovoDataTablePagination.prototype.pages;\n/** @type {?} */\nNovoDataTablePagination.prototype.resetSubscription;\n/** @type {?} */\nNovoDataTablePagination.prototype.totalPages;\n/** @type {?} */\nNovoDataTablePagination.prototype._initialized;\n/** @type {?} */\nNovoDataTablePagination.prototype.changeDetectorRef;\n/** @type {?} */\nNovoDataTablePagination.prototype.labels;\n/** @type {?} */\nNovoDataTablePagination.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { IDataTableColumn } from './interfaces';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\n/**\n * @template T\n * @param {?} value\n * @param {?} col\n * @return {?}\n */\nexport function interpolateCell<T>(value: any, col: IDataTableColumn<T>): string {\n  if (col.format) {\n    return Helpers.interpolateWithFallback(col.format, value);\n  }\n  return value;\n}\nexport class DataTableInterpolatePipe<T> implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} column\n * @return {?}\n */\ntransform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      return interpolateCell<T>(value, column);\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'dataTableInterpolate',\n  pure: true,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DataTableInterpolatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDataTableInterpolatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDataTableInterpolatePipe.ctorParameters;\n}\n\nexport class DateTableDateRendererPipe<T> implements PipeTransform {\n/**\n * @param {?} labels\n */\nconstructor(private labels: NovoLabelService) {}\n/**\n * @param {?} value\n * @param {?} column\n * @return {?}\n */\ntransform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      let /** @type {?} */ val = interpolateCell<T>(value, column);\n      return this.labels.formatDate(val);\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'dataTableDateRenderer',\n  pure: true,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\n}\n\nfunction DateTableDateRendererPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTableDateRendererPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTableDateRendererPipe.ctorParameters;\n/** @type {?} */\nDateTableDateRendererPipe.prototype.labels;\n}\n\nexport class DateTableDateTimeRendererPipe<T> implements PipeTransform {\n/**\n * @param {?} labels\n */\nconstructor(private labels: NovoLabelService) {}\n/**\n * @param {?} value\n * @param {?} column\n * @return {?}\n */\ntransform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      let /** @type {?} */ val = interpolateCell<T>(value, column);\n      return this.labels.formatDateShort(val);\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'dataTableDateTimeRenderer',\n  pure: true,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\n}\n\nfunction DateTableDateTimeRendererPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTableDateTimeRendererPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTableDateTimeRendererPipe.ctorParameters;\n/** @type {?} */\nDateTableDateTimeRendererPipe.prototype.labels;\n}\n\nexport class DateTableTimeRendererPipe<T> implements PipeTransform {\n/**\n * @param {?} labels\n */\nconstructor(private labels: NovoLabelService) {}\n/**\n * @param {?} value\n * @param {?} column\n * @return {?}\n */\ntransform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      let /** @type {?} */ val = interpolateCell<T>(value, column);\n      return this.labels.formatTime(val);\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'dataTableTimeRenderer',\n  pure: true,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\n}\n\nfunction DateTableTimeRendererPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTableTimeRendererPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTableTimeRendererPipe.ctorParameters;\n/** @type {?} */\nDateTableTimeRendererPipe.prototype.labels;\n}\n\nexport class DateTableNumberRendererPipe<T> implements PipeTransform {\n/**\n * @param {?} labels\n */\nconstructor(private labels: NovoLabelService) {}\n/**\n * @param {?} value\n * @param {?} column\n * @param {?=} isPercent\n * @return {?}\n */\ntransform(value: any, column: IDataTableColumn<T>, isPercent: boolean = false): string {\n    if (!Helpers.isEmpty(value)) {\n      let /** @type {?} */ val = interpolateCell<T>(value, column);\n      if (isPercent && Helpers.isNumber(val)) {\n        val = `${Number(val) * 100}`;\n      }\n      return `${this.labels.formatNumber(val)}${isPercent ? '%' : ''}`;\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'dataTableNumberRenderer',\n  pure: true,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\n}\n\nfunction DateTableNumberRendererPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTableNumberRendererPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTableNumberRendererPipe.ctorParameters;\n/** @type {?} */\nDateTableNumberRendererPipe.prototype.labels;\n}\n\nexport class DateTableCurrencyRendererPipe<T> implements PipeTransform {\n/**\n * @param {?} labels\n */\nconstructor(private labels: NovoLabelService) {}\n/**\n * @param {?} value\n * @param {?} column\n * @return {?}\n */\ntransform(value: any, column: IDataTableColumn<T>): string {\n    if (!Helpers.isEmpty(value)) {\n      let /** @type {?} */ val = interpolateCell<T>(value, column);\n      return this.labels.formatCurrency(Number(val));\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'dataTableCurrencyRenderer',\n  pure: true,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\n}\n\nfunction DateTableCurrencyRendererPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTableCurrencyRendererPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTableCurrencyRendererPipe.ctorParameters;\n/** @type {?} */\nDateTableCurrencyRendererPipe.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { DataTableState } from './state/data-table-state.service';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoDataTable } from './data-table.component';\nexport class NovoDataTableExpandDirective<T> implements OnDestroy {\n   row: T;\n   template: TemplateRef<any>;\nprivate subscription: Subscription;\n/**\n * @param {?} vcRef\n * @param {?} state\n * @param {?} dataTable\n */\nconstructor(public vcRef: ViewContainerRef,\nprivate state: DataTableState<T>,\nprivate dataTable: NovoDataTable<T>) {\n    this.subscription = this.state.expandSource.subscribe(() => {\n      if (dataTable.isExpanded(this.row)) {\n        this.render();\n      } else {\n        this.clear();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonClick(event: MouseEvent): void {\n    if (( /** @type {?} */((event.target as Element))).hasAttribute('novo-data-table-expander')) {\n      Helpers.swallowEvent(event);\n      this.dataTable.expandRow(this.row);\n    }\n  }\n/**\n * @return {?}\n */\nprivate clear(): void {\n    this.vcRef.clear();\n  }\n/**\n * @return {?}\n */\nprivate render(): void {\n    this.vcRef.clear();\n    if (this.template && this.row) {\n      this.vcRef.createEmbeddedView(this.template, { $implicit: this.row });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoDataTableExpand]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: DataTableState, },\n{type: NovoDataTable, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'row': [{ type: Input },],\n'template': [{ type: Input, args: ['novoDataTableExpand', ] },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction NovoDataTableExpandDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableExpandDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableExpandDirective.ctorParameters;\n/** @type {?} */\nNovoDataTableExpandDirective.propDecorators;\n/** @type {?} */\nNovoDataTableExpandDirective.prototype.row;\n/** @type {?} */\nNovoDataTableExpandDirective.prototype.template;\n/** @type {?} */\nNovoDataTableExpandDirective.prototype.subscription;\n/** @type {?} */\nNovoDataTableExpandDirective.prototype.vcRef;\n/** @type {?} */\nNovoDataTableExpandDirective.prototype.state;\n/** @type {?} */\nNovoDataTableExpandDirective.prototype.dataTable;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\n\nimport { DataTableState } from './state/data-table-state.service';\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class NovoDataTableClearButton<T> {\n   sortClear: EventEmitter<boolean> = new EventEmitter();\n   filterClear: EventEmitter<boolean> = new EventEmitter();\n   allClear: EventEmitter<boolean> = new EventEmitter();\n/**\n * @param {?} state\n * @param {?} ref\n * @param {?} labels\n */\nconstructor(public state: DataTableState<T>,\nprivate ref: ChangeDetectorRef,\npublic labels: NovoLabelService) {}\n/**\n * @return {?}\n */\nclearSort(): void {\n    this.state.clearSort();\n    this.sortClear.emit(true);\n  }\n/**\n * @return {?}\n */\nclearFilter(): void {\n    this.state.clearFilter();\n    this.filterClear.emit(true);\n  }\n/**\n * @return {?}\n */\nclearAll(): void {\n    this.state.reset();\n    this.allClear.emit(true);\n    this.sortClear.emit(true);\n    this.filterClear.emit(true);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-data-table-clear-button',\n  template: `\n    <novo-dropdown side=\"right\" class=\"novo-data-table-clear-button\" data-automation-id=\"novo-data-table-clear-dropdown\">\n      <button type=\"button\" theme=\"primary\" color=\"negative\" icon=\"collapse\" data-automation-id=\"novo-data-table-clear-dropdown-btn\">{{ labels.clear }}</button>\n      <list>\n          <item *ngIf=\"state.sort\" (click)=\"clearSort()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-sort\">{{ labels.clearSort }}</item>\n          <item *ngIf=\"state.filter\" (click)=\"clearFilter()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-filter\">{{ labels.clearFilter }}</item>\n          <item *ngIf=\"state.sort && state.filter\" (click)=\"clearAll()\" data-automation-id=\"novo-data-table-clear-dropdown-clear-all\">{{ labels.clearAllNormalCase }}</item>\n      </list>\n    </novo-dropdown>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DataTableState, },\n{type: ChangeDetectorRef, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sortClear': [{ type: Output },],\n'filterClear': [{ type: Output },],\n'allClear': [{ type: Output },],\n};\n}\n\nfunction NovoDataTableClearButton_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableClearButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableClearButton.ctorParameters;\n/** @type {?} */\nNovoDataTableClearButton.propDecorators;\n/** @type {?} */\nNovoDataTableClearButton.prototype.sortClear;\n/** @type {?} */\nNovoDataTableClearButton.prototype.filterClear;\n/** @type {?} */\nNovoDataTableClearButton.prototype.allClear;\n/** @type {?} */\nNovoDataTableClearButton.prototype.state;\n/** @type {?} */\nNovoDataTableClearButton.prototype.ref;\n/** @type {?} */\nNovoDataTableClearButton.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoTilesModule } from '../tiles/Tiles.module';\nimport { NovoSearchBoxModule } from '../search/SearchBox.module';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoCommonModule } from '../common/common.module';\nimport { NovoSelectModule } from '../select/Select.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\n\nimport { NovoDataTable } from './data-table.component';\nimport { NovoDataTableCell } from './cells/data-table-cell.component';\nimport { NovoDataTableCheckboxCell } from './cells/data-table-checkbox-cell.component';\nimport { NovoDataTableExpandCell } from './cells/data-table-expand-cell.component';\nimport { NovoDataTableHeaderRow } from './rows/data-table-header-row.component';\nimport { NovoDataTableRow } from './rows/data-table-row.component';\nimport { NovoDataTableCellHeader } from './cell-headers/data-table-header-cell.component';\nimport { NovoDataTableExpandHeaderCell } from './cell-headers/data-table-expand-header-cell.component';\nimport { NovoDataTableCheckboxHeaderCell } from './cell-headers/data-table-checkbox-header-cell.component';\nimport { NovoDataTableHeaderCell } from './cell-headers/data-table-header-cell.directive';\nimport { NovoDataTableSortFilter } from './sort-filter/sort-filter.directive';\nimport { NovoDataTablePagination } from './pagination/data-table-pagination.component';\nimport { DataTableState } from './state/data-table-state.service';\nimport {\n  DataTableInterpolatePipe,\n  DateTableDateRendererPipe,\n  DateTableCurrencyRendererPipe,\n  DateTableDateTimeRendererPipe,\n  DateTableNumberRendererPipe,\n  DateTableTimeRendererPipe,\n} from './data-table.pipes';\nimport { NovoDataTableExpandDirective } from './data-table-expand.directive';\nimport { NovoDataTableClearButton } from './data-table-clear-button.component';\nexport class NovoDataTableModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    NovoDatePickerModule,\n    CdkTableModule,\n    CommonModule,\n    FormsModule,\n    NovoButtonModule,\n    NovoDropdownModule,\n    NovoFormExtrasModule,\n    NovoLoadingModule,\n    NovoTilesModule,\n    NovoSearchBoxModule,\n    NovoCommonModule,\n    NovoSelectModule,\n    NovoTooltipModule,\n  ],\n  declarations: [\n    DataTableInterpolatePipe,\n    DateTableDateRendererPipe,\n    DateTableCurrencyRendererPipe,\n    DateTableDateTimeRendererPipe,\n    DateTableNumberRendererPipe,\n    DateTableTimeRendererPipe,\n    NovoDataTableCellHeader,\n    NovoDataTableSortFilter,\n    NovoDataTableHeaderCell,\n    NovoDataTableCell,\n    NovoDataTableHeaderRow,\n    NovoDataTableRow,\n    NovoDataTablePagination,\n    NovoDataTableCheckboxCell,\n    NovoDataTableCheckboxHeaderCell,\n    NovoDataTableExpandCell,\n    NovoDataTableExpandHeaderCell,\n    NovoDataTable,\n    NovoDataTableExpandDirective,\n    NovoDataTableClearButton,\n  ],\n  providers: [DataTableState],\n  exports: [\n    NovoDataTable,\n    DataTableInterpolatePipe,\n    DateTableDateRendererPipe,\n    DateTableCurrencyRendererPipe,\n    DateTableDateTimeRendererPipe,\n    DateTableNumberRendererPipe,\n    DateTableTimeRendererPipe,\n    NovoDataTableClearButton,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoDataTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDataTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDataTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Observable } from 'rxjs/Observable';\n\nimport { IDataTableService } from '../interfaces';\n/**\n * @abstract\n */\nexport abstract class RemoteDataTableService<T> implements IDataTableService<T> {\n/**\n * @abstract\n * @param {?} sort\n * @param {?} filter\n * @param {?} page\n * @param {?} pageSize\n * @param {?=} globalSearch\n * @param {?=} outsideFilter\n * @return {?}\n */\ngetTableResults(\n    sort: { id: string; value: string; transform?: Function },\n    filter: { id: string; value: string; transform?: Function },\n    page: number,\n    pageSize: number,\n    globalSearch?: string,\n    outsideFilter?: any,) {}\n}\n","import { EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/catch';\n\nimport { NovoSortFilter } from './sort';\nimport { NovoSimpleTablePagination } from './pagination';\nimport { NovoActivityTableState } from './state';\nimport { Helpers } from '../../utils/Helpers';\n\nexport interface ActivityTableService<T> {\n    getTableResults(sort: { id: string, value: string, transform?: Function }, filter: { id: string, value: string, transform?: Function }, page: number, pageSize: number, globalSearch?: string, outsideFilter?: any): Observable<{ results: T[], total: number }>;\n}\n/**\n * @abstract\n */\nexport abstract class RemoteActivityTableService<T> implements ActivityTableService<T> {\n/**\n * @abstract\n * @param {?} sort\n * @param {?} filter\n * @param {?} page\n * @param {?} pageSize\n * @param {?=} globalSearch\n * @param {?=} outsideFilter\n * @return {?}\n */\ngetTableResults(sort: { id: string, value: string, transform?: Function }, filter: { id: string, value: string, transform?: Function }, page: number, pageSize: number, globalSearch?: string, outsideFilter?: any) {}\n}\nexport class StaticActivityTableService<T> implements ActivityTableService<T> {\n/**\n * @param {?=} data\n */\nconstructor(private data: T[] = []) { }\n/**\n * @param {?} sort\n * @param {?} filter\n * @param {?=} page\n * @param {?=} pageSize\n * @param {?=} globalSearch\n * @param {?=} outsideFilter\n * @return {?}\n */\npublic getTableResults(sort: { id: string, value: string, transform?: Function }, filter: { id: string, value: string, transform?: Function }, page: number = 0, pageSize: number, globalSearch?: string, outsideFilter?: any): Observable<{ results: T[], total: number }> {\n        let /** @type {?} */ ret: T[] = Helpers.deepClone(this.data);\n        if (ret.length !== 0) {\n            if (globalSearch) {\n                ret = ret.filter(item => Object.keys(item).some(key => `${item[key]}`.toLowerCase().includes(globalSearch.toLowerCase())));\n            }\n            if (filter) {\n                let /** @type {?} */ value = Helpers.isString(filter.value) ? filter.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : filter.value;\n                ret = ret.filter(Helpers.filterByField(filter.id, value));\n            }\n            if (sort) {\n                ret = ret.sort(Helpers.sortByField(sort.id, sort.value === 'desc'));\n            }\n            if (!Helpers.isBlank(page) && !Helpers.isBlank(pageSize)) {\n                ret = ret.slice(page * pageSize, (page + 1) * pageSize);\n            }\n        }\n        return Observable.of({ results: ret, total: this.data.length });\n    }\n}\n\nfunction StaticActivityTableService_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticActivityTableService.prototype.data;\n}\n\nexport class ActivityTableDataSource<T> extends DataSource<T> {\npublic total = 0;\npublic current = 0;\npublic loading = false;\npublic pristine = true;\n/**\n * @return {?}\n */\nget totallyEmpty(): boolean {\n        return this.total === 0;\n    }\n/**\n * @return {?}\n */\nget currentlyEmpty(): boolean {\n        return this.current === 0;\n    }\n/**\n * @param {?} tableService\n * @param {?} state\n * @param {?} ref\n */\nconstructor(private tableService: ActivityTableService<T>,\nprivate state: NovoActivityTableState,\nprivate ref: ChangeDetectorRef) {\n        super();\n    }\n/**\n * @return {?}\n */\npublic connect(): Observable<any[]> {\n        const /** @type {?} */ displayDataChanges: any = [\n            this.state.updates\n        ];\n        return Observable.merge(...displayDataChanges)\n            .startWith(null)\n            .switchMap(() => {\n                this.pristine = false;\n                this.loading = true;\n                return this.tableService.getTableResults(this.state.sort, this.state.filter, this.state.page, this.state.pageSize, this.state.globalSearch, this.state.outsideFilter);\n            })\n            .map((data: { results: T[], total: number }) => {\n                this.loading = false;\n                this.total = data.total;\n                this.current = data.results.length;\n                setTimeout(() => {\n                    this.ref.markForCheck();\n                });\n                return data.results;\n            })\n            .catch((error) => {\n                console.error(error); // tslint: disable-line\n                this.loading = false;\n                return Observable.of(null);\n            });\n    }\n/**\n * @return {?}\n */\npublic disconnect(): void { }\n}\n\nfunction ActivityTableDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nActivityTableDataSource.prototype.total;\n/** @type {?} */\nActivityTableDataSource.prototype.current;\n/** @type {?} */\nActivityTableDataSource.prototype.loading;\n/** @type {?} */\nActivityTableDataSource.prototype.pristine;\n/** @type {?} */\nActivityTableDataSource.prototype.tableService;\n/** @type {?} */\nActivityTableDataSource.prototype.state;\n/** @type {?} */\nActivityTableDataSource.prototype.ref;\n}\n\n","import { EventEmitter } from '@angular/core';\n\nimport { NovoSimpleTableChange, NovoSimpleSortFilter } from './interfaces';\nexport class NovoActivityTableState {\n    id: number = Math.random();\n    sort: { id: string, value: string } = undefined;\n    filter: { id: string, value: string } = undefined;\n    page: number = 0;\n    pageSize: number = undefined;\n    globalSearch: string = undefined;\n    selectedRows: Map<string, object> = new Map<string, object>();\n    outsideFilter: any;\n\n    updates: EventEmitter<NovoSimpleTableChange> = new EventEmitter<NovoSimpleTableChange>();\n    onReset: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget userFiltered(): boolean {\n        return !!(this.filter || this.sort || this.globalSearch || this.outsideFilter);\n    }\n/**\n * @param {?=} fireUpdate\n * @param {?=} persistUserFilters\n * @return {?}\n */\npublic reset(fireUpdate: boolean = true, persistUserFilters?: boolean): void {\n        if (!persistUserFilters) {\n            this.sort = undefined;\n            this.globalSearch = undefined;\n            this.filter = undefined;\n        }\n        this.page = 0;\n        this.selectedRows.clear();\n        this.onReset.emit(true);\n        if (fireUpdate) {\n            this.updates.emit({\n                sort: this.sort,\n                filter: this.filter,\n                globalSearch: this.globalSearch\n            });\n        }\n    }\n}\n\nfunction NovoActivityTableState_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTableState.prototype.id;\n/** @type {?} */\nNovoActivityTableState.prototype.sort;\n/** @type {?} */\nNovoActivityTableState.prototype.filter;\n/** @type {?} */\nNovoActivityTableState.prototype.page;\n/** @type {?} */\nNovoActivityTableState.prototype.pageSize;\n/** @type {?} */\nNovoActivityTableState.prototype.globalSearch;\n/** @type {?} */\nNovoActivityTableState.prototype.selectedRows;\n/** @type {?} */\nNovoActivityTableState.prototype.outsideFilter;\n/** @type {?} */\nNovoActivityTableState.prototype.updates;\n/** @type {?} */\nNovoActivityTableState.prototype.onReset;\n}\n\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n  HostBinding,\n  Input,\n  ViewChild,\n  Directive,\n  EventEmitter,\n  Output,\n  AfterContentInit,\n  SimpleChanges,\n  ChangeDetectorRef,\n  Injectable,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { CDK_TABLE_TEMPLATE, CdkTable } from '@angular/cdk/table';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoSortFilter, NovoSelection } from './sort';\nimport { NovoSimpleTablePagination } from './pagination';\nimport { SimpleTableColumn, SimpleTableActionColumn, SimpleTablePaginationOptions, SimpleTableSearchOptions } from './interfaces';\nimport { ActivityTableService, ActivityTableDataSource } from './table-source';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoActivityTableState } from './state';\nimport { notify } from '../../utils/notifier/notifier.util';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _NovoTable = CdkTable;\nexport class NovoTable<T> extends _NovoTable<T> {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-simple-table',\n  template: CDK_TABLE_TEMPLATE,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTable_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTable.ctorParameters;\n}\n\nexport class NovoActivityTableActions {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-activity-table-actions',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoActivityTableActions_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTableActions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoActivityTableActions.ctorParameters;\n}\n\nexport class NovoActivityTableCustomHeader {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-activity-table-custom-header',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoActivityTableCustomHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTableCustomHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoActivityTableCustomHeader.ctorParameters;\n}\n\nexport class NovoActivityTableCustomFilter {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-activity-table-custom-filter',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoActivityTableCustomFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTableCustomFilter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoActivityTableCustomFilter.ctorParameters;\n}\n\nexport class NovoActivityTableEmptyMessage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-activity-table-empty-message',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoActivityTableEmptyMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTableEmptyMessage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoActivityTableEmptyMessage.ctorParameters;\n}\n\nexport class NovoActivityTableNoResultsMessage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-activity-table-no-results-message',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoActivityTableNoResultsMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTableNoResultsMessage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoActivityTableNoResultsMessage.ctorParameters;\n}\n\nexport class NovoActivityTable<T> implements AfterContentInit, OnChanges, OnDestroy {\n  \n  globalSearchHiddenClassToggle: boolean = false;\n\n  \n  activityService: ActivityTableService<T>;\n  \n  columns: SimpleTableColumn<T>[];\n  \n  displayedColumns: string[];\n  \n  actionColumns: SimpleTableActionColumn<T>[];\n  \n  paginationOptions: SimpleTablePaginationOptions;\n  \n  searchOptions: SimpleTableSearchOptions;\n  \n  defaultSort: { id: string; value: string };\n  \n  outsideFilter: EventEmitter<any>;\n/**\n * @param {?} v\n * @return {?}\n */\nset customFilter(v: boolean) {\n    this._customFilter = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget customFilter() {\n    return this._customFilter;\n  }\nprivate _customFilter: boolean;\n/**\n * @param {?} v\n * @return {?}\n */\nset forceShowHeader(v: boolean) {\n    this._forceShowHeader = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget forceShowHeader() {\n    return this._forceShowHeader;\n  }\nprivate _forceShowHeader: boolean;\n/**\n * @param {?} v\n * @return {?}\n */\nset hideGlobalSearch(v: boolean) {\n    this._hideGlobalSearch = coerceBooleanProperty(v);\n    this.globalSearchHiddenClassToggle = this._hideGlobalSearch;\n  }\n/**\n * @return {?}\n */\nget hideGlobalSearch() {\n    return this._hideGlobalSearch;\n  }\nprivate _hideGlobalSearch: boolean;\n/**\n * @param {?} v\n * @return {?}\n */\nset debug(v: boolean) {\n    this._debug = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget debug() {\n    return this._debug;\n  }\nprivate _debug: boolean;\npublic dataSource: ActivityTableDataSource<T>;\npublic loading: boolean = true;\nprivate outsideFilterSubscription: Subscription;\n/**\n * @return {?}\n */\nget empty() {\n    return this.dataSource && this.dataSource.totallyEmpty;\n  }\n/**\n * @return {?}\n */\nget loadingClass() {\n    return this.loading || (this.dataSource && this.dataSource.loading);\n  }\n/**\n * @param {?} labels\n * @param {?} ref\n * @param {?} state\n */\nconstructor(public labels: NovoLabelService,\nprivate ref: ChangeDetectorRef,\npublic state: NovoActivityTableState) {\n    notify('[Deprecated]: The simple table is deprecated. Please migrate to novo-data-tables!');\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\npublic ngOnChanges(changes: SimpleChanges): void {\n    this.loading = changes['activityService'] && !changes['activityService'].currentValue;\n    this.ref.detectChanges();\n    if (changes['activityService'] && changes['activityService'].currentValue) {\n      this.loading = false;\n      this.dataSource = new ActivityTableDataSource<T>(this.activityService, this.state, this.ref);\n      this.ref.detectChanges();\n    }\n    if (changes['outsideFilter'] && changes['outsideFilter'].currentValue) {\n      if (!this.outsideFilterSubscription) {\n        this.outsideFilterSubscription = this.outsideFilter.subscribe((filter: any) => {\n          this.state.outsideFilter = filter;\n          this.state.updates.next({ globalSearch: this.state.globalSearch, filter: this.state.filter, sort: this.state.sort });\n          this.ref.markForCheck();\n        });\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    if (this.outsideFilterSubscription) {\n      this.outsideFilterSubscription.unsubscribe();\n    }\n  }\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n    if (this.paginationOptions && !this.paginationOptions.page) {\n      this.paginationOptions.page = 0;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSize) {\n      this.paginationOptions.pageSize = 50;\n    }\n    if (this.paginationOptions && !this.paginationOptions.pageSizeOptions) {\n      this.paginationOptions.pageSizeOptions = [10, 25, 50, 100];\n    }\n    this.state.page = this.paginationOptions ? this.paginationOptions.page : undefined;\n    this.state.pageSize = this.paginationOptions ? this.paginationOptions.pageSize : undefined;\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} term\n * @return {?}\n */\npublic onSearchChange(term: string): void {\n    this.state.globalSearch = term;\n    this.state.reset(false, true);\n    this.state.updates.next({ globalSearch: term, filter: this.state.filter, sort: this.state.sort });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-activity-table',\n  template: `\n        <div *ngIf=\"debug\">\n            <p>Total: {{ dataSource?.total }}</p>\n            <p>Current: {{ dataSource?.current }}</p>\n            <p>Totally Empty: {{ dataSource?.totallyEmpty }}</p>\n            <p>Currently Empty: {{ dataSource?.currentlyEmpty }}</p>\n            <p>Loading (DataSource): {{ dataSource?.loading }}</p>\n            <p>User Filtered: {{ state.userFiltered }}</p>\n            <p>Loading (Table): {{ loading }}</p>\n        </div>\n        <header *ngIf=\"(!(dataSource?.totallyEmpty && !state.userFiltered) && !loading) || forceShowHeader\">\n            <ng-content select=\"[novo-activity-table-custom-header]\"></ng-content>\n            <novo-search\n                alwaysOpen=\"true\"\n                (searchChanged)=\"onSearchChange($event)\"\n                [(ngModel)]=\"state.globalSearch\"\n                *ngIf=\"!hideGlobalSearch\"\n                [placeholder]=\"searchOptions?.placeholder\"\n                [hint]=\"searchOptions?.tooltip\">\n            </novo-search>\n            <novo-simple-table-pagination\n                *ngIf=\"paginationOptions\"\n                [length]=\"dataSource?.total\"\n                [page]=\"paginationOptions.page\"\n                [pageSize]=\"paginationOptions.pageSize\"\n                [pageSizeOptions]=\"paginationOptions.pageSizeOptions\">\n            </novo-simple-table-pagination>\n            <div class=\"novo-activity-table-actions\">\n                <ng-content select=\"[novo-activity-table-actions]\"></ng-content>\n            </div>\n        </header>\n        <div class=\"novo-activity-table-loading-mask\" *ngIf=\"dataSource?.loading || loading\" data-automation-id=\"novo-activity-table-loading\">\n            <novo-loading></novo-loading>\n        </div>\n        <div class=\"novo-activity-table-filter-container\">\n            <div class=\"novo-activity-table-custom-filter\" *ngIf=\"customFilter\">\n                <ng-content select=\"[novo-activity-table-custom-filter]\"></ng-content>\n            </div>\n            <div class=\"novo-activity-table-container\">\n                <novo-simple-table *ngIf=\"(columns?.length > 0)\" [dataSource]=\"dataSource\" novoSortFilter novoSelection [class.empty]=\"dataSource?.currentlyEmpty && state.userFiltered\" [hidden]=\"dataSource?.totallyEmpty && !userFiltered\">\n                    <ng-content></ng-content>\n                    <ng-container novoSimpleColumnDef=\"selection\">\n                        <novo-simple-checkbox-header-cell *novoSimpleHeaderCellDef></novo-simple-checkbox-header-cell>\n                        <novo-simple-checkbox-cell *novoSimpleCellDef=\"let row; let i = index\" [row]=\"row\" [index]=\"i\"></novo-simple-checkbox-cell>\n                    </ng-container>\n                    <ng-container *ngFor=\"let column of actionColumns\" [novoSimpleColumnDef]=\"column.id\">\n                        <novo-simple-empty-header-cell [class.button-header-cell]=\"!column.options\" [class.dropdown-header-cell]=\"column.options\" *novoSimpleHeaderCellDef></novo-simple-empty-header-cell>\n                        <novo-simple-action-cell *novoSimpleCellDef=\"let row; let i = index\" [row]=\"row\" [column]=\"column\"></novo-simple-action-cell>\n                    </ng-container>\n                    <ng-container *ngFor=\"let column of columns\" [novoSimpleColumnDef]=\"column.id\">\n                        <novo-simple-header-cell *novoSimpleHeaderCellDef [column]=\"column\" [novo-simple-cell-config]=\"column.config\" [defaultSort]=\"defaultSort\">{{ column.label }}</novo-simple-header-cell>\n                        <novo-simple-cell *novoSimpleCellDef=\"let row\" [column]=\"column\" [row]=\"row\"></novo-simple-cell>\n                    </ng-container>\n                    <novo-simple-header-row *novoSimpleHeaderRowDef=\"displayedColumns\"></novo-simple-header-row>\n                    <novo-simple-row *novoSimpleRowDef=\"let row; columns: displayedColumns;\"></novo-simple-row>\n                </novo-simple-table>\n                <div class=\"novo-activity-table-no-results-container\" *ngIf=\"dataSource?.currentlyEmpty && state.userFiltered && !dataSource?.loading && !loading && !dataSource.pristine\">\n                    <div #filtered><ng-content select=\"[novo-activity-table-no-results-message]\"></ng-content></div>\n                    <div class=\"novo-activity-table-empty-message\" *ngIf=\"filtered.childNodes.length == 0\">\n                        <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n                    </div>\n                </div>\n                <div class=\"novo-activity-table-empty-container\" *ngIf=\"dataSource?.totallyEmpty && !dataSource?.loading && !loading && !state.userFiltered && !dataSource.pristine\">\n                    <div #empty><ng-content select=\"[novo-activity-table-empty-message]\"></ng-content></div>\n                    <div class=\"novo-activity-table-empty-message\" *ngIf=\"empty.childNodes.length == 0\">\n                        <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NovoActivityTableState],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n{type: NovoActivityTableState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'globalSearchHiddenClassToggle': [{ type: HostBinding, args: ['class.global-search-hidden', ] },],\n'activityService': [{ type: Input },],\n'columns': [{ type: Input },],\n'displayedColumns': [{ type: Input },],\n'actionColumns': [{ type: Input },],\n'paginationOptions': [{ type: Input },],\n'searchOptions': [{ type: Input },],\n'defaultSort': [{ type: Input },],\n'outsideFilter': [{ type: Input },],\n'customFilter': [{ type: Input },],\n'forceShowHeader': [{ type: Input },],\n'hideGlobalSearch': [{ type: Input },],\n'debug': [{ type: Input },],\n'empty': [{ type: HostBinding, args: ['class.empty', ] },],\n'loadingClass': [{ type: HostBinding, args: ['class.loading', ] },],\n};\n}\n\nfunction NovoActivityTable_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoActivityTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoActivityTable.ctorParameters;\n/** @type {?} */\nNovoActivityTable.propDecorators;\n/** @type {?} */\nNovoActivityTable.prototype.globalSearchHiddenClassToggle;\n/** @type {?} */\nNovoActivityTable.prototype.activityService;\n/** @type {?} */\nNovoActivityTable.prototype.columns;\n/** @type {?} */\nNovoActivityTable.prototype.displayedColumns;\n/** @type {?} */\nNovoActivityTable.prototype.actionColumns;\n/** @type {?} */\nNovoActivityTable.prototype.paginationOptions;\n/** @type {?} */\nNovoActivityTable.prototype.searchOptions;\n/** @type {?} */\nNovoActivityTable.prototype.defaultSort;\n/** @type {?} */\nNovoActivityTable.prototype.outsideFilter;\n/** @type {?} */\nNovoActivityTable.prototype._customFilter;\n/** @type {?} */\nNovoActivityTable.prototype._forceShowHeader;\n/** @type {?} */\nNovoActivityTable.prototype._hideGlobalSearch;\n/** @type {?} */\nNovoActivityTable.prototype._debug;\n/** @type {?} */\nNovoActivityTable.prototype.dataSource;\n/** @type {?} */\nNovoActivityTable.prototype.loading;\n/** @type {?} */\nNovoActivityTable.prototype.outsideFilterSubscription;\n/** @type {?} */\nNovoActivityTable.prototype.labels;\n/** @type {?} */\nNovoActivityTable.prototype.ref;\n/** @type {?} */\nNovoActivityTable.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { NovoSimpleTableChange, NovoSimpleSelectionChange } from './interfaces';\nimport { NovoActivityTableState } from './state';\nimport { Helpers } from '../../utils/Helpers';\nexport class NovoSortFilter {\n/**\n * @param {?} state\n */\nconstructor(private state: NovoActivityTableState) { }\n/**\n * @param {?} id\n * @param {?} value\n * @param {?} transform\n * @return {?}\n */\npublic filter(id: string, value: any, transform: Function): void {\n        let /** @type {?} */ filter;\n        if (!Helpers.isBlank(value)) {\n            filter = { id, value, transform };\n        } else {\n            filter = undefined;\n        }\n        this.state.filter = filter;\n        this.state.reset(false, true);\n        this.state.updates.next({ filter: filter, sort: this.state.sort });\n    }\n/**\n * @param {?} id\n * @param {?} value\n * @param {?} transform\n * @return {?}\n */\npublic sort(id: string, value: string, transform: Function): void {\n        let /** @type {?} */ sort = { id, value, transform };\n        this.state.sort = sort;\n        this.state.reset(false, true);\n        this.state.updates.next({ sort: sort, filter: this.state.filter });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoSortFilter]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoActivityTableState, },\n];\n}\n\nfunction NovoSortFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSortFilter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSortFilter.ctorParameters;\n/** @type {?} */\nNovoSortFilter.prototype.state;\n}\n\nexport class NovoSelection implements OnDestroy {\npublic novoSelectAllToggle = new EventEmitter<boolean>();\npublic allRows = new Map<string, object>();\nprivate throttleTimeout: any;\n/**\n * @param {?} state\n */\nconstructor(public state: NovoActivityTableState) { }\n/**\n * @param {?} id\n * @param {?} row\n * @return {?}\n */\npublic register(id, row): void {\n        this.allRows.set(id, row);\n    }\n/**\n * @param {?} id\n * @return {?}\n */\npublic deregister(id): void {\n        this.allRows.delete(id);\n        this.state.selectedRows.delete(id);\n        clearTimeout(this.throttleTimeout);\n        this.throttleTimeout = setTimeout(() => {\n            if (this.state.selectedRows.size === 0) {\n                this.novoSelectAllToggle.emit(false);\n            }\n        });\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.allRows.clear();\n        this.state.selectedRows.clear();\n    }\n/**\n * @param {?} id\n * @param {?} selected\n * @param {?} row\n * @return {?}\n */\npublic toggle(id: string, selected: boolean, row: any): void {\n        if (selected) {\n            this.state.selectedRows.set(id, row);\n        } else {\n            this.state.selectedRows.delete(id);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic selectAll(value: boolean): void {\n        if (value) {\n            this.state.selectedRows = new Map<string, object>(this.allRows);\n        } else {\n            this.state.selectedRows.clear();\n        }\n        this.novoSelectAllToggle.emit(value);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoSelection]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoActivityTableState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'novoSelectAllToggle': [{ type: Output },],\n};\n}\n\nfunction NovoSelection_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSelection.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSelection.ctorParameters;\n/** @type {?} */\nNovoSelection.propDecorators;\n/** @type {?} */\nNovoSelection.prototype.novoSelectAllToggle;\n/** @type {?} */\nNovoSelection.prototype.allRows;\n/** @type {?} */\nNovoSelection.prototype.throttleTimeout;\n/** @type {?} */\nNovoSelection.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2, ViewChild\n} from '@angular/core';\nimport { CdkCell, CdkCellDef, CdkColumnDef, CdkHeaderCell, CdkHeaderCellDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoSelection } from './sort';\nimport { SimpleTableActionColumn, SimpleTableActionColumnOption, SimpleTableColumn } from './interfaces';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _NovoCellDef = CdkCellDef;\nexport const /** @type {?} */ _NovoHeaderCellDef = CdkHeaderCellDef;\nexport const /** @type {?} */ _NovoColumnDef = CdkColumnDef;\nexport const /** @type {?} */ _NovoHeaderCell = CdkHeaderCell;\nexport const /** @type {?} */ _NovoCell = CdkCell;\nexport class NovoSimpleCellDef extends _NovoCellDef {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoSimpleCellDef]',\n  providers: [{ provide: CdkCellDef, useExisting: NovoSimpleCellDef }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSimpleCellDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleCellDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleCellDef.ctorParameters;\n}\n\nexport class NovoSimpleHeaderCellDef extends _NovoHeaderCellDef {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoSimpleHeaderCellDef]',\n  providers: [{ provide: CdkHeaderCellDef, useExisting: NovoSimpleHeaderCellDef }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSimpleHeaderCellDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleHeaderCellDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleHeaderCellDef.ctorParameters;\n}\n\nexport class NovoSimpleColumnDef extends _NovoColumnDef {\n   name: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoSimpleColumnDef]',\n  providers: [{ provide: CdkColumnDef, useExisting: NovoSimpleColumnDef }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['novoSimpleColumnDef', ] },],\n};\n}\n\nfunction NovoSimpleColumnDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleColumnDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleColumnDef.ctorParameters;\n/** @type {?} */\nNovoSimpleColumnDef.propDecorators;\n/** @type {?} */\nNovoSimpleColumnDef.prototype.name;\n}\n\nexport class NovoSimpleHeaderCell<T> extends _NovoHeaderCell implements OnInit {\npublic role = 'columnheader';\npublic column: SimpleTableColumn<T>;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-header-cell');\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-simple-header-cell',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'column': [{ type: Input },],\n};\n}\n\nfunction NovoSimpleHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleHeaderCell.ctorParameters;\n/** @type {?} */\nNovoSimpleHeaderCell.propDecorators;\n/** @type {?} */\nNovoSimpleHeaderCell.prototype.role;\n/** @type {?} */\nNovoSimpleHeaderCell.prototype.column;\n/** @type {?} */\nNovoSimpleHeaderCell.prototype.elementRef;\n/** @type {?} */\nNovoSimpleHeaderCell.prototype.renderer;\n}\n\nexport class NovoSimpleEmptyHeaderCell extends _NovoHeaderCell {\npublic role = 'columnheader';\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-empty-header-cell');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'novo-simple-empty-header-cell',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoSimpleEmptyHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleEmptyHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleEmptyHeaderCell.ctorParameters;\n/** @type {?} */\nNovoSimpleEmptyHeaderCell.propDecorators;\n/** @type {?} */\nNovoSimpleEmptyHeaderCell.prototype.role;\n}\n\nexport class NovoSimpleCheckboxHeaderCell extends _NovoHeaderCell implements OnDestroy {\npublic role = 'columnheader';\npublic selectAll: boolean = false;\nprivate selectAllSubscription: Subscription;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} ref\n * @param {?} _selection\n */\nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2, ref: ChangeDetectorRef,\nprivate _selection: NovoSelection) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-header-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-checkbox-header-cell');\n\n    this.selectAllSubscription = _selection.novoSelectAllToggle.subscribe((value: boolean) => {\n      this.selectAll = value;\n      ref.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this.selectAllSubscription.unsubscribe();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic toggle(value: boolean): void {\n    this._selection.selectAll(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-simple-checkbox-header-cell',\n  template: `<novo-checkbox [(ngModel)]=\"selectAll\" (ngModelChange)=\"toggle($event)\"></novo-checkbox>`,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n{type: NovoSelection, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoSimpleCheckboxHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleCheckboxHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleCheckboxHeaderCell.ctorParameters;\n/** @type {?} */\nNovoSimpleCheckboxHeaderCell.propDecorators;\n/** @type {?} */\nNovoSimpleCheckboxHeaderCell.prototype.role;\n/** @type {?} */\nNovoSimpleCheckboxHeaderCell.prototype.selectAll;\n/** @type {?} */\nNovoSimpleCheckboxHeaderCell.prototype.selectAllSubscription;\n/** @type {?} */\nNovoSimpleCheckboxHeaderCell.prototype._selection;\n}\n\nexport class NovoSimpleCell<T> extends _NovoCell implements OnInit {\npublic role = 'gridcell';\npublic row: any;\npublic column: SimpleTableColumn<T>;\nprivate spanElement: ElementRef;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-cell');\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this.column.customClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.column.customClass(this.row));\n    }\n    if (this.column.width) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'min-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'max-width', `${this.column.width}px`);\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.column.width}px`);\n      // TODO - this inhibits resizing the page after the initial load -- but do we care?!?!\n      // this.renderer.setStyle(this.spanElement.nativeElement, 'min-width', `${this.column.width - 20}px`);\n      // this.renderer.setStyle(this.spanElement.nativeElement, 'max-width', `${this.column.width - 20}px`);\n      // this.renderer.setStyle(this.spanElement.nativeElement, 'width', `${this.column.width - 20}px`);\n    }\n    // else {\n    //     // TODO - this inhibits resizing the page after the initial load -- but do we care?!?!\n    //     this.renderer.setStyle(this.spanElement.nativeElement, 'min-width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n    //     this.renderer.setStyle(this.spanElement.nativeElement, 'max-width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n    //     this.renderer.setStyle(this.spanElement.nativeElement, 'width', `${this.elementRef.nativeElement.offsetWidth - 20}px`);\n    // }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onClick(event: MouseEvent): void {\n    Helpers.swallowEvent(event);\n    if (this.column.onClick) {\n      this.column.onClick(this.row);\n    }\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-simple-cell',\n  template: `    \n    <span [class.clickable]=\"!!column.onClick\" (click)=\"onClick($event)\" #span>{{ column.renderer(row) }}</span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'row': [{ type: Input },],\n'column': [{ type: Input },],\n'spanElement': [{ type: ViewChild, args: ['span', ] },],\n};\n}\n\nfunction NovoSimpleCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleCell.ctorParameters;\n/** @type {?} */\nNovoSimpleCell.propDecorators;\n/** @type {?} */\nNovoSimpleCell.prototype.role;\n/** @type {?} */\nNovoSimpleCell.prototype.row;\n/** @type {?} */\nNovoSimpleCell.prototype.column;\n/** @type {?} */\nNovoSimpleCell.prototype.spanElement;\n/** @type {?} */\nNovoSimpleCell.prototype.elementRef;\n/** @type {?} */\nNovoSimpleCell.prototype.renderer;\n}\n\nexport class NovoSimpleCheckboxCell extends _NovoCell implements OnDestroy, OnInit {\npublic role = 'gridcell';\npublic row: any;\npublic index: any;\npublic selected: boolean = false;\nprivate selectAllSubscription: Subscription;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} _selection\n */\nconstructor(public columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer2,\npublic _selection: NovoSelection) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, `novo-checkbox-column-${columnDef.cssClassFriendlyName}`);\n    renderer.addClass(elementRef.nativeElement, 'novo-simple-checkbox-cell');\n\n    this.selectAllSubscription = _selection.novoSelectAllToggle.subscribe((value: boolean) => {\n      this.selected = value;\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this._selection.register(this.row.id || this.index, this.row);\n    this.selected = this._selection.state.selectedRows.has(this.row.id || this.index);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this._selection.deregister(this.row.id || this.index);\n    this.selectAllSubscription.unsubscribe();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic toggle(value: boolean): void {\n    this._selection.toggle(this.row.id || this.index, value, this.row);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-simple-checkbox-cell',\n  template: `\n    <novo-checkbox [ngModel]=\"selected\" (ngModelChange)=\"toggle($event)\"></novo-checkbox>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoSelection, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'row': [{ type: Input },],\n'index': [{ type: Input },],\n};\n}\n\nfunction NovoSimpleCheckboxCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleCheckboxCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleCheckboxCell.ctorParameters;\n/** @type {?} */\nNovoSimpleCheckboxCell.propDecorators;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype.role;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype.row;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype.index;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype.selected;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype.selectAllSubscription;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype.columnDef;\n/** @type {?} */\nNovoSimpleCheckboxCell.prototype._selection;\n}\n\nexport class NovoSimpleActionCell<T> extends _NovoCell implements OnInit {\npublic role = 'gridcell';\npublic row: T;\npublic column: SimpleTableActionColumn<T>;\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} labels\n */\nconstructor(columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2,\nprivate labels: NovoLabelService) {\n    super(columnDef, elementRef);\n    renderer.setAttribute(elementRef.nativeElement, 'data-automation-id', `novo-action-column-${columnDef.cssClassFriendlyName}`);\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this.column.options) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'novo-simple-dropdown-cell');\n    } else {\n      this.renderer.addClass(this.elementRef.nativeElement, 'novo-simple-button-cell');\n    }\n  }\n/**\n * @param {?} check\n * @param {?} row\n * @return {?}\n */\npublic isDisabled(check: SimpleTableActionColumn<T> | SimpleTableActionColumnOption<T>, row: T): boolean {\n    if (check.disabled === true) {\n      return true;\n    }\n    if (check.disabledCheck) {\n      return check.disabledCheck(row);\n    }\n    return false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-simple-action-cell',\n  template: `\n    <ng-container *ngIf=\"!column.options\">\n      <button theme=\"icon\" [icon]=\"column.icon\" (click)=\"column.onClick(row)\" [disabled]=\"isDisabled(column, row)\"></button>\n    </ng-container>\n    <ng-container *ngIf=\"column.options\">\n      <novo-dropdown parentScrollSelector=\".novo-simple-table\" containerClass=\"novo-table-dropdown-cell\">\n        <button type=\"button\" theme=\"dialogue\" icon=\"collapse\" inverse>{{ column.label || labels.actions }}</button>\n        <list>\n          <item *ngFor=\"let option of column.options\" (action)=\"option.onClick(row)\" [disabled]=\"isDisabled(option, row)\">\n            <span [attr.data-automation-id]=\"option.label\">{{ option.label }}</span>\n          </item>\n        </list>\n      </novo-dropdown>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'row': [{ type: Input },],\n'column': [{ type: Input },],\n};\n}\n\nfunction NovoSimpleActionCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleActionCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleActionCell.ctorParameters;\n/** @type {?} */\nNovoSimpleActionCell.propDecorators;\n/** @type {?} */\nNovoSimpleActionCell.prototype.role;\n/** @type {?} */\nNovoSimpleActionCell.prototype.row;\n/** @type {?} */\nNovoSimpleActionCell.prototype.column;\n/** @type {?} */\nNovoSimpleActionCell.prototype.elementRef;\n/** @type {?} */\nNovoSimpleActionCell.prototype.renderer;\n/** @type {?} */\nNovoSimpleActionCell.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, Directive, Input, HostBinding } from '@angular/core';\nimport { CdkHeaderRow, CdkRow, CDK_ROW_TEMPLATE, CdkRowDef, CdkHeaderRowDef } from '@angular/cdk/table';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _NovoHeaderRowDef = CdkHeaderRowDef;\nexport const /** @type {?} */ _NovoCdkRowDef = CdkRowDef;\nexport const /** @type {?} */ _NovoHeaderRow = CdkHeaderRow;\nexport const /** @type {?} */ _NovoRow = CdkRow;\nexport class NovoSimpleHeaderRowDef extends _NovoHeaderRowDef {\n     columns;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoSimpleHeaderRowDef]',\n    providers: [{ provide: CdkHeaderRowDef, useExisting: NovoSimpleHeaderRowDef }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columns': [{ type: Input, args: ['novoSimpleHeaderRowDef', ] },],\n};\n}\n\nfunction NovoSimpleHeaderRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleHeaderRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleHeaderRowDef.ctorParameters;\n/** @type {?} */\nNovoSimpleHeaderRowDef.propDecorators;\n/** @type {?} */\nNovoSimpleHeaderRowDef.prototype.columns;\n}\n\nexport class NovoSimpleRowDef<T> extends _NovoCdkRowDef<T> {\n     columns;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoSimpleRowDef]',\n    providers: [{ provide: CdkRowDef, useExisting: NovoSimpleRowDef }]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columns': [{ type: Input, args: ['novoSimpleRowDefColumns', ] },],\n};\n}\n\nfunction NovoSimpleRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleRowDef.ctorParameters;\n/** @type {?} */\nNovoSimpleRowDef.propDecorators;\n/** @type {?} */\nNovoSimpleRowDef.prototype.columns;\n}\n\nexport class NovoSimpleHeaderRow extends _NovoHeaderRow {\npublic rowClass = 'novo-simple-header-row';\npublic role = 'row';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-simple-header-row',\n    template: CDK_ROW_TEMPLATE,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowClass': [{ type: HostBinding, args: ['class', ] },],\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoSimpleHeaderRow_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleHeaderRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleHeaderRow.ctorParameters;\n/** @type {?} */\nNovoSimpleHeaderRow.propDecorators;\n/** @type {?} */\nNovoSimpleHeaderRow.prototype.rowClass;\n/** @type {?} */\nNovoSimpleHeaderRow.prototype.role;\n}\n\nexport class NovoSimpleRow extends _NovoRow {\npublic rowClass = 'novo-simple-row';\npublic role = 'row';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-simple-row',\n    template: CDK_ROW_TEMPLATE,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowClass': [{ type: HostBinding, args: ['class', ] },],\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n};\n}\n\nfunction NovoSimpleRow_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleRow.ctorParameters;\n/** @type {?} */\nNovoSimpleRow.propDecorators;\n/** @type {?} */\nNovoSimpleRow.prototype.rowClass;\n/** @type {?} */\nNovoSimpleRow.prototype.role;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as dateFns from 'date-fns';\n\nimport { NovoDropdownElement } from '../dropdown/Dropdown';\nimport { NovoSimpleSortFilter, NovoSimpleTableChange, SimpleTableColumnFilterConfig, SimpleTableColumnFilterOption } from './interfaces';\nimport { NovoSortFilter } from './sort';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoActivityTableState } from './state';\nimport { Helpers } from '../../utils/Helpers';\nexport class NovoSimpleFilterFocus implements AfterViewInit {\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.element.nativeElement.focus();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoSimpleFilterFocus]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction NovoSimpleFilterFocus_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleFilterFocus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleFilterFocus.ctorParameters;\n/** @type {?} */\nNovoSimpleFilterFocus.prototype.element;\n}\n\nexport class NovoSimpleCellHeader implements NovoSimpleSortFilter, OnInit, OnDestroy {\n   dropdown: NovoDropdownElement;\n\n   defaultSort: { id: string; value: string };\n/**\n * @return {?}\n */\nget config() {\n    return this._config;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset config(v) {\n    if (!v) {\n      this._config = {\n        sortable: false,\n        filterable: false,\n        filterConfig: {\n          type: 'text',\n        },\n      };\n    } else {\n      this._config = {\n        sortable: coerceBooleanProperty(v.sortable),\n        filterable: coerceBooleanProperty(v.filterable),\n        transforms: v.transforms || {},\n        filterConfig: v.filterConfig || {\n          type: 'text',\n        },\n      };\n\n      if (this._config.filterConfig.type === 'date' && !this._config.filterConfig.options) {\n        this._config.filterConfig.options = this.getDefaultDateFilterOptions();\n      }\n    }\n  }\nprivate _config: {\n    sortable: boolean;\n    filterable: boolean;\n    transforms?: { filter?: Function; sort?: Function };\n    filterConfig: SimpleTableColumnFilterConfig;\n  };\nprivate _rerenderSubscription: Subscription;\nprivate changeTimeout: any;\npublic icon: string = 'sortable';\npublic id: string;\npublic filter: string | boolean;\npublic direction: string;\npublic filterActive: boolean = false;\npublic sortActive: boolean = false;\npublic showCustomRange: boolean = false;\npublic activeDateFilter: string;\n/**\n * @param {?} changeDetectorRef\n * @param {?} labels\n * @param {?} state\n * @param {?} _sort\n * @param {?} _cdkColumnDef\n */\nconstructor(\nprivate changeDetectorRef: ChangeDetectorRef,\npublic labels: NovoLabelService,\nprivate state: NovoActivityTableState,\npublic _sort: NovoSortFilter,\npublic _cdkColumnDef: CdkColumnDef,\n  ) {\n    this._rerenderSubscription = state.updates.subscribe((change: NovoSimpleTableChange) => {\n      if (change.sort && change.sort.id === this.id) {\n        this.icon = `sort-${change.sort.value}`;\n        this.sortActive = true;\n      } else {\n        this.icon = 'sortable';\n        this.sortActive = false;\n      }\n      if (change.filter && change.filter.id === this.id) {\n        this.filterActive = true;\n        this.filter = change.filter.value;\n      } else {\n        this.filterActive = false;\n        this.filter = undefined;\n      }\n      changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n    if (this.defaultSort && this.id === this.defaultSort.id) {\n      this.icon = `sort-${this.defaultSort.value}`;\n      this.sortActive = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n  }\n/**\n * @return {?}\n */\npublic sort(): void {\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n    this.changeTimeout = setTimeout(() => {\n      this.direction = this.getNextSortDirection(this.direction);\n      this._sort.sort(this.id, this.direction, this._config.transforms.sort);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n/**\n * @param {?} event\n * @param {?} value\n * @return {?}\n */\npublic toggleCustomRange(event: Event, value: boolean): void {\n    Helpers.swallowEvent(event);\n    this.showCustomRange = value;\n    this.changeDetectorRef.markForCheck();\n    this.dropdown.openPanel(); // Ensures that the panel correctly updates to the dynamic size of the dropdown\n  }\n/**\n * @param {?=} filter\n * @return {?}\n */\npublic filterData(filter?: any): void {\n    let /** @type {?} */ actualFilter = filter;\n    if (this.config.filterConfig.type === 'date' && filter) {\n      this.activeDateFilter = filter.label || this.labels.customDateRange;\n      if (filter.startDate && filter.endDate) {\n        actualFilter = {\n          min: dateFns.startOfDay(filter.startDate.date),\n          max: dateFns.startOfDay(dateFns.addDays(dateFns.startOfDay(filter.endDate.date), 1)),\n        };\n      } else {\n        actualFilter = {\n          min: filter.min ? dateFns.addDays(dateFns.startOfToday(), filter.min) : dateFns.startOfToday(),\n          max: filter.max ? dateFns.addDays(dateFns.startOfTomorrow(), filter.max) : dateFns.startOfTomorrow(),\n        };\n      }\n    }\n\n    if (actualFilter && actualFilter.hasOwnProperty('value')) {\n      actualFilter = filter.value;\n    }\n\n    if (this.changeTimeout) {\n      clearTimeout(this.changeTimeout);\n    }\n\n    this.changeTimeout = setTimeout(() => {\n      if (actualFilter === '') {\n        actualFilter = undefined;\n      }\n      this._sort.filter(this.id, actualFilter, this.config.transforms.filter);\n      this.changeDetectorRef.markForCheck();\n    }, 300);\n  }\n/**\n * @return {?}\n */\npublic clearFilter(): void {\n    this.filter = undefined;\n    this.activeDateFilter = undefined;\n    this.filterData();\n  }\n/**\n * @param {?} direction\n * @return {?}\n */\nprivate getNextSortDirection(direction: string): string {\n    if (!direction) {\n      return 'asc';\n    }\n    if (direction === 'asc') {\n      return 'desc';\n    }\n    return 'asc';\n  }\n/**\n * @return {?}\n */\nprivate getDefaultDateFilterOptions(): SimpleTableColumnFilterOption[] {\n    let /** @type {?} */ opts: SimpleTableColumnFilterOption[] = [\n      { label: this.labels.past1Day, min: -1, max: 0 },\n      { label: this.labels.past7Days, min: -7, max: 0 },\n      { label: this.labels.past30Days, min: -30, max: 0 },\n      { label: this.labels.past90Days, min: -90, max: 0 },\n      { label: this.labels.past1Year, min: -366, max: 0 },\n      { label: this.labels.next1Day, min: 0, max: 1 },\n      { label: this.labels.next7Days, min: 0, max: 7 },\n      { label: this.labels.next30Days, min: 0, max: 30 },\n      { label: this.labels.next90Days, min: 0, max: 90 },\n      { label: this.labels.next1Year, min: 0, max: 366 },\n    ];\n    return opts;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: '[novo-simple-cell-config]',\n  template: `\n    <label (click)=\"sort()\" data-automation-id=\"novo-activity-table-label\" [class.sort-disabled]=\"!config.sortable\">\n      <ng-content></ng-content>\n    </label>\n    <div>\n      <button *ngIf=\"config.sortable\" theme=\"icon\" [icon]=\"icon\" (click)=\"sort()\" [class.active]=\"sortActive\"\n              data-automation-id=\"novo-activity-table-sort\"></button>\n      <novo-dropdown *ngIf=\"config.filterable\" side=\"right\" parentScrollSelector=\".novo-simple-table\" containerClass=\"simple-table-dropdown\"\n                     data-automation-id=\"novo-activity-table-filter\">\n        <button type=\"button\" theme=\"icon\" icon=\"filter\" [class.active]=\"filterActive\"></button>\n        <div class=\"header\">\n          <span>{{ labels.filters }}</span>\n          <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"clearFilter()\"\n                  *ngIf=\"filter !== null && filter !== undefined && filter !== ''\" data-automation-id=\"novo-activity-table-filter-clear\">\n            {{ labels.clear }}\n          </button>\n        </div>\n        <ng-container [ngSwitch]=\"config.filterConfig.type\">\n          <list *ngSwitchCase=\"'date'\">\n            <ng-container *ngIf=\"!showCustomRange\">\n              <item [class.active]=\"activeDateFilter === option.label\" *ngFor=\"let option of config.filterConfig.options\" (click)=\"filterData(option)\"\n                    [attr.data-automation-id]=\"'novo-activity-table-filter-' + option.label\">\n                {{ option.label }} <i class=\"bhi-check\" *ngIf=\"activeDateFilter === option.label\"></i>\n              </item>\n            </ng-container>\n            <item [class.active]=\"labels.customDateRange === activeDateFilter\" (click)=\"toggleCustomRange($event, true)\"\n                  *ngIf=\"config.filterConfig.allowCustomRange && !showCustomRange\" [keepOpen]=\"true\">\n              {{ labels.customDateRange }} <i class=\"bhi-check\" *ngIf=\"labels.customDateRange === activeDateFilter\"></i>\n            </item>\n            <div class=\"calendar-container\" *ngIf=\"showCustomRange\">\n              <div (click)=\"toggleCustomRange($event, false)\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n              <novo-date-picker (onSelect)=\"filterData($event)\" [(ngModel)]=\"filter\" range=\"true\"></novo-date-picker>\n            </div>\n          </list>\n          <list *ngSwitchCase=\"'select'\">\n            <item [class.active]=\"filter === option\" *ngFor=\"let option of config.filterConfig.options\" (click)=\"filterData(option)\"\n                  [attr.data-automation-id]=\"'novo-activity-table-filter-' + (option?.label || option)\">\n              <span>{{ option?.label || option }}</span> <i class=\"bhi-check\"\n                                                            *ngIf=\"option.hasOwnProperty('value') ? filter === option.value : filter === option\"></i>\n            </item>\n          </list>\n          <list *ngSwitchDefault>\n            <item class=\"filter-search\" keepOpen=\"true\">\n              <input type=\"text\" [(ngModel)]=\"filter\" (ngModelChange)=\"filterData($event)\" novoSimpleFilterFocus\n                     data-automation-id=\"novo-activity-table-filter-input\"/>\n            </item>\n          </list>\n        </ng-container>\n      </novo-dropdown>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: NovoLabelService, },\n{type: NovoActivityTableState, },\n{type: NovoSortFilter, decorators: [{ type: Optional }, ]},\n{type: CdkColumnDef, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dropdown': [{ type: ViewChild, args: [NovoDropdownElement, ] },],\n'defaultSort': [{ type: Input },],\n'config': [{ type: Input, args: ['novo-simple-cell-config', ] },],\n};\n}\n\nfunction NovoSimpleCellHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleCellHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleCellHeader.ctorParameters;\n/** @type {?} */\nNovoSimpleCellHeader.propDecorators;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.dropdown;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.defaultSort;\n/** @type {?} */\nNovoSimpleCellHeader.prototype._config;\n/** @type {?} */\nNovoSimpleCellHeader.prototype._rerenderSubscription;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.changeTimeout;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.icon;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.id;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.filter;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.direction;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.filterActive;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.sortActive;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.showCustomRange;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.activeDateFilter;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.changeDetectorRef;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.labels;\n/** @type {?} */\nNovoSimpleCellHeader.prototype.state;\n/** @type {?} */\nNovoSimpleCellHeader.prototype._sort;\n/** @type {?} */\nNovoSimpleCellHeader.prototype._cdkColumnDef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnDestroy, OnInit, Output, ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NovoSimplePaginationEvent } from './interfaces';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { NovoActivityTableState } from './state';\n\nconst /** @type {?} */ DEFAULT_PAGE_SIZE = 50;\nexport class NovoSimpleTablePagination implements OnInit, OnDestroy {\nprivate _initialized: boolean;\n/**\n * @return {?}\n */\nget page(): number { return this._page; }\n/**\n * @param {?} page\n * @return {?}\n */\nset page(page: number) {\n        this._page = page;\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.state.page = this._page;\n    }\n    _page: number = 0;\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} length\n * @return {?}\n */\nset length(length: number) {\n        this._length = length;\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    }\n    _length: number = 0;\n/**\n * @return {?}\n */\nget pageSize(): number { return this._pageSize; }\n/**\n * @param {?} pageSize\n * @return {?}\n */\nset pageSize(pageSize: number) {\n        this._pageSize = pageSize;\n        this.updateDisplayedPageSizeOptions();\n        this.state.pageSize = this._pageSize;\n    }\nprivate _pageSize: number;\n/**\n * @return {?}\n */\nget pageSizeOptions(): number[] { return this._pageSizeOptions; }\n/**\n * @param {?} pageSizeOptions\n * @return {?}\n */\nset pageSizeOptions(pageSizeOptions: number[]) {\n        this._pageSizeOptions = pageSizeOptions;\n        this.updateDisplayedPageSizeOptions();\n    }\nprivate _pageSizeOptions: number[] = [];\n\n     pageChange = new EventEmitter<NovoSimplePaginationEvent>();\npublic displayedPageSizeOptions: number[];\npublic longRangeLabel: string;\npublic shortRangeLabel: string;\nprivate resetSubscription: Subscription;\n/**\n * @param {?} changeDetectorRef\n * @param {?} labels\n * @param {?} state\n */\nconstructor(private changeDetectorRef: ChangeDetectorRef,\npublic labels: NovoLabelService,\nprivate state: NovoActivityTableState) {\n        if (state && state.onReset) {\n            this.resetSubscription = this.state.onReset.subscribe((clear: boolean) => {\n                if (clear) {\n                    this.page = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            })\n        }\n    }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n        this._initialized = true;\n        this.updateDisplayedPageSizeOptions();\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.resetSubscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\npublic nextPage(): void {\n        if (!this.hasNextPage()) { return; }\n        this.page++;\n        this.emitPageEvent();\n    }\n/**\n * @return {?}\n */\npublic previousPage(): void {\n        if (!this.hasPreviousPage()) { return; }\n        this.page--;\n        this.emitPageEvent();\n    }\n/**\n * @return {?}\n */\npublic hasPreviousPage(): boolean {\n        return this.page >= 1 && this.pageSize !== 0;\n    }\n/**\n * @return {?}\n */\npublic hasNextPage(): boolean {\n        const /** @type {?} */ numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n        return this.page < numberOfPages && this.pageSize !== 0;\n    }\n/**\n * @param {?} pageSize\n * @return {?}\n */\npublic changePageSize(pageSize: number): void {\n        this.page = 0;\n        this.pageSize = pageSize;\n        this.emitPageEvent();\n    }\n/**\n * @return {?}\n */\nprivate updateDisplayedPageSizeOptions(): void {\n        if (!this._initialized) { return; }\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length !== 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this.displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this.displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this.displayedPageSizeOptions.push(this.pageSize);\n        }\n        this.displayedPageSizeOptions.sort((a, b) => a - b);\n        this.changeDetectorRef.markForCheck();\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n    }\n/**\n * @return {?}\n */\nprivate emitPageEvent(): void {\n        let /** @type {?} */ event = {\n            page: this.page,\n            pageSize: this.pageSize,\n            length: this.length\n        };\n        this.pageChange.next(event);\n        this.state.page = this.page;\n        this.state.pageSize = this.pageSize;\n        this.longRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, false);\n        this.shortRangeLabel = this.labels.getRangeText(this.page, this.pageSize, this.length, true);\n        this.state.updates.next(event)\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-simple-table-pagination',\n    template: `\n        <div class=\"novo-simple-table-pagination-size\">\n            <novo-tiles *ngIf=\"displayedPageSizeOptions.length > 1\"\n                        [(ngModel)]=\"pageSize\"\n                        [options]=\"displayedPageSizeOptions\"\n                        (onChange)=\"changePageSize($event)\"\n                        data-automation-id=\"novo-simple-table-pagination-tiles\">\n            </novo-tiles>\n            <div *ngIf=\"displayedPageSizeOptions.length <= 1\">{{ pageSize }}</div>\n        </div>\n\n        <div class=\"novo-simple-table-range-label-long\"data-automation-id=\"novo-simple-table-pagination-range-label-long\">\n            {{ longRangeLabel }}\n        </div>\n        <div class=\"novo-simple-table-range-label-short\"data-automation-id=\"novo-simple-table-pagination-range-label-short\">\n            {{ shortRangeLabel }}\n        </div>\n\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-simple-table-pagination-navigation-previous\"\n                (click)=\"previousPage()\"\n                icon=\"previous\"\n                side=\"left\"\n                [disabled]=\"!hasPreviousPage()\"\n                data-automation-id=\"novo-simple-table-pagination-previous\">\n            <span>{{ labels.previous }}</span>\n        </button>\n        <button theme=\"dialogue\" type=\"button\"\n                class=\"novo-simple-table-pagination-navigation-next\"\n                (click)=\"nextPage()\"\n                icon=\"next\"\n                side=\"right\"\n                [disabled]=\"!hasNextPage()\"\n                data-automation-id=\"novo-simple-table-pagination-next\">\n            <span>{{ labels.next }}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: NovoLabelService, },\n{type: NovoActivityTableState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'page': [{ type: Input },],\n'length': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'pageSizeOptions': [{ type: Input },],\n'pageChange': [{ type: Output },],\n};\n}\n\nfunction NovoSimpleTablePagination_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleTablePagination.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleTablePagination.ctorParameters;\n/** @type {?} */\nNovoSimpleTablePagination.propDecorators;\n/** @type {?} */\nNovoSimpleTablePagination.prototype._initialized;\n/** @type {?} */\nNovoSimpleTablePagination.prototype._page;\n/** @type {?} */\nNovoSimpleTablePagination.prototype._length;\n/** @type {?} */\nNovoSimpleTablePagination.prototype._pageSize;\n/** @type {?} */\nNovoSimpleTablePagination.prototype._pageSizeOptions;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.pageChange;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.displayedPageSizeOptions;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.longRangeLabel;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.shortRangeLabel;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.resetSubscription;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.changeDetectorRef;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.labels;\n/** @type {?} */\nNovoSimpleTablePagination.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ActivityTableRenderers {\n/**\n * @template T\n * @param {?} prop\n * @return {?}\n */\nstatic propertyRenderer<T>(prop: string): Function {\n        return (data: T): string => {\n            // TODO - allow for dots and sub props\n            return data[prop];\n        }\n    }\n/**\n * @template T\n * @param {?} prop\n * @return {?}\n */\nstatic dateRenderer<T>(prop: string): Function {\n        return (data: T): string => {\n            return data[prop] ? new Date(data[prop]).toLocaleDateString() : '';\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoTilesModule } from '../tiles/Tiles.module';\nimport { NovoSearchBoxModule } from '../search/SearchBox.module';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\n\nimport {\n    NovoTable, NovoActivityTable, NovoActivityTableActions, NovoActivityTableCustomFilter,\n    NovoActivityTableEmptyMessage, NovoActivityTableNoResultsMessage, NovoActivityTableCustomHeader\n} from './table';\nimport {\n    NovoSimpleCell, NovoSimpleCheckboxCell, NovoSimpleCheckboxHeaderCell, NovoSimpleHeaderCell,\n    NovoSimpleCellDef, NovoSimpleHeaderCellDef, NovoSimpleColumnDef, NovoSimpleActionCell, NovoSimpleEmptyHeaderCell\n} from './cell';\nimport { NovoSimpleHeaderRow, NovoSimpleRow, NovoSimpleHeaderRowDef, NovoSimpleRowDef } from './row';\nimport { NovoSimpleCellHeader, NovoSimpleFilterFocus } from './cell-header';\nimport { NovoSortFilter, NovoSelection } from './sort';\nimport { NovoSimpleTablePagination } from './pagination';\nimport { NovoActivityTableState } from './state';\nexport class NovoSimpleTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        NovoDatePickerModule, CdkTableModule, CommonModule, FormsModule, NovoButtonModule,\n        NovoDropdownModule, NovoFormExtrasModule, NovoLoadingModule, NovoTilesModule, NovoSearchBoxModule\n    ],\n    exports: [\n        NovoTable, NovoSimpleCellDef, NovoSimpleHeaderCellDef, NovoSimpleColumnDef, NovoActivityTableEmptyMessage, NovoActivityTableNoResultsMessage,\n        NovoSimpleHeaderRowDef, NovoSimpleRowDef, NovoSimpleCellHeader, NovoSortFilter, NovoSimpleActionCell, NovoSimpleEmptyHeaderCell,\n        NovoSimpleHeaderCell, NovoSimpleCell, NovoSimpleHeaderRow, NovoSimpleRow, NovoSimpleFilterFocus, NovoSimpleTablePagination, NovoActivityTableCustomHeader,\n        NovoSimpleCheckboxCell, NovoSimpleCheckboxHeaderCell, NovoSelection, NovoActivityTable, NovoActivityTableActions, NovoActivityTableCustomFilter\n    ],\n    declarations: [\n        NovoTable, NovoSimpleCellDef, NovoSimpleHeaderCellDef, NovoSimpleColumnDef, NovoActivityTableEmptyMessage, NovoActivityTableNoResultsMessage,\n        NovoSimpleHeaderRowDef, NovoSimpleRowDef, NovoSimpleCellHeader, NovoSortFilter, NovoSimpleActionCell, NovoSimpleEmptyHeaderCell,\n        NovoSimpleHeaderCell, NovoSimpleCell, NovoSimpleHeaderRow, NovoSimpleRow, NovoSimpleFilterFocus, NovoSimpleTablePagination, NovoActivityTableCustomHeader,\n        NovoSimpleCheckboxCell, NovoSimpleCheckboxHeaderCell, NovoSelection, NovoActivityTable, NovoActivityTableActions, NovoActivityTableCustomFilter\n    ],\n    providers: [\n        NovoActivityTableState\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSimpleTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSimpleTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSimpleTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export interface Global {\n}\n/**\n * @abstract\n */\nexport abstract class GlobalRef {\n/**\n * @abstract\n * @return {?}\n */\nnativeGlobal() {}\n}\nexport class BrowserGlobalRef extends GlobalRef {\n/**\n * @return {?}\n */\nget nativeGlobal(): Global {\n        return /** @type {?} */(( window as Global));\n    }\n}\nexport class NodeGlobalRef extends GlobalRef {\n/**\n * @return {?}\n */\nget nativeGlobal(): Global {\n        throw new Error('global doesn\\'t compile for some reason');\n        //return global as Global;\n    }\n}\n","import { Injectable } from '@angular/core';\nexport class LocalStorageService {\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: any, value: any): any {\n    localStorage.setItem(key, value);\n  }\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: any): any {\n    return localStorage.getItem(key);\n\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: any): any {\n    localStorage.removeItem(key);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocalStorageService_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalStorageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalStorageService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { GlobalRef } from '../../services/global/global.service';\nimport { LocalStorageService } from '../../services/storage/storage.service';\nexport class GooglePlacesService {\n/**\n * @param {?} _http\n * @param {?} platformId\n * @param {?} _global\n * @param {?} _localStorageService\n */\nconstructor(\nprivate _http: HttpClient,\nprivate platformId: Object,\nprivate _global: GlobalRef,\nprivate _localStorageService: LocalStorageService,\n  ) {}\n/**\n * @param {?} url\n * @param {?} query\n * @return {?}\n */\ngetPredictions(url: string, query: string): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?query=' + query).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n/**\n * @param {?} url\n * @param {?} lat\n * @param {?} lng\n * @return {?}\n */\ngetLatLngDetail(url: string, lat: number, lng: number): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?lat=' + lat + '&lng=' + lng).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n/**\n * @param {?} url\n * @param {?} placeId\n * @return {?}\n */\ngetPlaceDetails(url: string, placeId: string): Promise<any> {\n    return new Promise((resolve) => {\n      this._http.get(url + '?query=' + placeId).subscribe((data: any) => {\n        if (data) {\n          resolve(data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\ngetGeoCurrentLocation(): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        let /** @type {?} */ _window: any = this._global.nativeGlobal;\n        if (_window.navigator.geolocation) {\n          _window.navigator.geolocation.getCurrentPosition((pos) => {\n            let /** @type {?} */ latlng: any = { lat: parseFloat(pos.coords.latitude + ''), lng: parseFloat(pos.coords.longitude + '') };\n            resolve(latlng);\n          });\n        } else {\n          resolve(false);\n        }\n      } else {\n        resolve(false);\n      }\n    });\n  }\n/**\n * @param {?} latlng\n * @return {?}\n */\ngetGeoLatLngDetail(latlng: any): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        let /** @type {?} */ _window: any = this._global.nativeGlobal;\n        let /** @type {?} */ geocoder: any = new _window.google.maps.Geocoder();\n        geocoder.geocode({ location: latlng }, (results, status) => {\n          if (status === 'OK') {\n            this.getGeoPlaceDetail(results[0].place_id).then((result) => {\n              if (result) {\n                resolve(result);\n              } else {\n                resolve(false);\n              }\n            });\n          } else {\n            resolve(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n/**\n * @param {?} params\n * @return {?}\n */\ngetGeoPrediction(params: any): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        let /** @type {?} */ _window: any = this._global.nativeGlobal;\n        let /** @type {?} */ placesService: any = new _window.google.maps.places.AutocompleteService();\n        let /** @type {?} */ queryInput: any = {};\n        let /** @type {?} */ promiseArr: any = [];\n        if (params.countryRestriction.length) {\n          queryInput = {\n            input: params.query,\n            componentRestrictions: { country: params.countryRestriction },\n          };\n        } else {\n          queryInput = {\n            input: params.query,\n          };\n        }\n        if (params.geoLocation) {\n          queryInput.location = new _window.google.maps.LatLng(parseFloat(params.geoLocation[0]), parseFloat(params.geoLocation[1]));\n          queryInput.radius = params.radius;\n        }\n        if (params.geoTypes.length) {\n          for (let /** @type {?} */ i: number = 0; i < params.geoTypes.length; i++) {\n            let /** @type {?} */ _tempQuery: any = queryInput;\n            _tempQuery['types'] = new Array(params.geoTypes[i]);\n            promiseArr.push(this.geoPredictionCall(placesService, _tempQuery));\n          }\n        } else {\n          promiseArr.push(this.geoPredictionCall(placesService, queryInput));\n        }\n\n        Promise.all(promiseArr).then((values) => {\n          let /** @type {?} */ val: any = values;\n          if (val.length > 1) {\n            let /** @type {?} */ _tempArr: any = [];\n            for (let /** @type {?} */ j: number = 0; j < val.length; j++) {\n              if (val[j] && val[j].length) {\n                _tempArr = _tempArr.concat(val[j]);\n              }\n            }\n            _tempArr = this.getUniqueResults(_tempArr);\n            resolve(_tempArr);\n          } else {\n            resolve(values[0]);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n/**\n * @param {?} placeId\n * @return {?}\n */\ngetGeoPlaceDetail(placeId: string): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        let /** @type {?} */ _window: any = this._global.nativeGlobal;\n        let /** @type {?} */ placesService: any = new _window.google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails({ placeId: placeId }, (result: any, status: any) => {\n          if (result === null || result.length === 0) {\n            this.getGeoPaceDetailByReferance(result.referance).then((referanceData: any) => {\n              if (!referanceData) {\n                resolve(false);\n              } else {\n                resolve(referanceData);\n              }\n            });\n          } else {\n            resolve(result);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n/**\n * @param {?} referance\n * @return {?}\n */\ngetGeoPaceDetailByReferance(referance: string): Promise<any> {\n    return new Promise((resolve) => {\n      if (isPlatformBrowser(this.platformId)) {\n        let /** @type {?} */ _window: any = this._global.nativeGlobal;\n        let /** @type {?} */ placesService: any = new _window.google.maps.places.PlacesService();\n        placesService.getDetails({ reference: referance }, (result: any, status: any) => {\n          if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(result);\n          } else {\n            resolve(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n/**\n * @param {?} localStorageName\n * @param {?} result\n * @param {?} itemSavedLength\n * @return {?}\n */\naddRecentList(localStorageName: string, result: any, itemSavedLength: number): any {\n    this.getRecentList(localStorageName).then((data: any) => {\n      if (data) {\n        for (let /** @type {?} */ i: number = 0; i < data.length; i++) {\n          if (data[i].description === result.description) {\n            data.splice(i, 1);\n            break;\n          }\n        }\n        data.unshift(result);\n        if (data.length > itemSavedLength) {\n          data.pop();\n        }\n        this._localStorageService.setItem(localStorageName, JSON.stringify(data));\n      }\n    });\n  }\n/**\n * @param {?} localStorageName\n * @return {?}\n */\ngetRecentList(localStorageName: string): Promise<any> {\n    return new Promise((resolve) => {\n      let /** @type {?} */ value: any = this._localStorageService.getItem(localStorageName);\n      if (value) {\n        value = JSON.parse(value);\n      } else {\n        value = [];\n      }\n      resolve(value);\n    });\n  }\n/**\n * @param {?} arr\n * @return {?}\n */\nprivate getUniqueResults(arr: any): any {\n    return Array.from(arr.reduce((m, t) => m.set(t.place_id, t), new Map()).values());\n  }\n/**\n * @param {?} placesService\n * @param {?} queryInput\n * @return {?}\n */\nprivate geoPredictionCall(placesService: any, queryInput: any): Promise<any> {\n    let /** @type {?} */ _window: any = this._global.nativeGlobal;\n    return new Promise((resolve) => {\n      placesService.getPlacePredictions(queryInput, (result: any, status: any) => {\n        if (status === _window.google.maps.places.PlacesServiceStatus.OK) {\n          resolve(result);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: GlobalRef, },\n{type: LocalStorageService, },\n];\n}\n\nfunction GooglePlacesService_tsickle_Closure_declarations() {\n/** @type {?} */\nGooglePlacesService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGooglePlacesService.ctorParameters;\n/** @type {?} */\nGooglePlacesService.prototype._http;\n/** @type {?} */\nGooglePlacesService.prototype.platformId;\n/** @type {?} */\nGooglePlacesService.prototype._global;\n/** @type {?} */\nGooglePlacesService.prototype._localStorageService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// Vendor\n\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/toPromise';\nexport type AppBridgeHandler = number;\nexport let AppBridgeHandler: any = {};\nAppBridgeHandler.HTTP = 0;\nAppBridgeHandler.OPEN = 1;\nAppBridgeHandler.OPEN_LIST = 2;\nAppBridgeHandler.CLOSE = 3;\nAppBridgeHandler.REFRESH = 4;\nAppBridgeHandler.PIN = 5;\nAppBridgeHandler.REGISTER = 6;\nAppBridgeHandler.UPDATE = 7;\nAppBridgeHandler.REQUEST_DATA = 8;\nAppBridgeHandler.CALLBACK = 9;\nAppBridgeHandler[AppBridgeHandler.HTTP] = \"HTTP\";\nAppBridgeHandler[AppBridgeHandler.OPEN] = \"OPEN\";\nAppBridgeHandler[AppBridgeHandler.OPEN_LIST] = \"OPEN_LIST\";\nAppBridgeHandler[AppBridgeHandler.CLOSE] = \"CLOSE\";\nAppBridgeHandler[AppBridgeHandler.REFRESH] = \"REFRESH\";\nAppBridgeHandler[AppBridgeHandler.PIN] = \"PIN\";\nAppBridgeHandler[AppBridgeHandler.REGISTER] = \"REGISTER\";\nAppBridgeHandler[AppBridgeHandler.UPDATE] = \"UPDATE\";\nAppBridgeHandler[AppBridgeHandler.REQUEST_DATA] = \"REQUEST_DATA\";\nAppBridgeHandler[AppBridgeHandler.CALLBACK] = \"CALLBACK\";\n\n\nexport type NovoApps = 'record' | 'add' | 'fast-add' | 'custom';\n\nexport interface IAppBridgeOpenEvent {\n  type: NovoApps;\n  entityType: string;\n  entityId?: string;\n  tab?: string;\n  data?: any;\n  passthrough?: string;\n}\n\nexport type MosaicLists =\n  | 'Candidate'\n  | 'ClientContact'\n  | 'ClientCorporation'\n  | 'JobOrder'\n  | 'JobSubmission'\n  | 'JobPosting'\n  | 'Placement'\n  | 'Lead'\n  | 'Opportunity';\n\nexport interface IAppBridgeOpenListEvent {\n  type: MosaicLists;\n  keywords: Array<string>;\n  criteria: any;\n}\n\nexport type NovoDataType = 'entitlements' | 'settings' | 'user';\n\nexport interface IAppBridgeRequestDataEvent {\n  type: NovoDataType;\n}\n\nconst /** @type {?} */ HTTP_VERBS = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n};\n\nconst /** @type {?} */ MESSAGE_TYPES = {\n  REGISTER: 'register',\n  OPEN: 'open',\n  OPEN_LIST: 'openList',\n  CLOSE: 'close',\n  REFRESH: 'refresh',\n  PIN: 'pin',\n  UPDATE: 'update',\n  HTTP_GET: 'httpGET',\n  HTTP_POST: 'httpPOST',\n  HTTP_PUT: 'httpPUT',\n  HTTP_DELETE: 'httpDELETE',\n  CUSTOM_EVENT: 'customEvent',\n  REQUEST_DATA: 'requestData',\n  CALLBACK: 'callback',\n};\n\ndeclare const postRobot: any;\nexport class AppBridgeService {\n/**\n * @param {?} name\n * @return {?}\n */\ncreate(name: string) {\n    return new AppBridge(name);\n  }\n}\nexport class DevAppBridgeService {\n/**\n * @param {?} http\n */\nconstructor(private http: HttpClient) {}\n/**\n * @param {?} name\n * @return {?}\n */\ncreate(name: string) {\n    return new DevAppBridge(name, this.http);\n  }\n}\n\nfunction DevAppBridgeService_tsickle_Closure_declarations() {\n/** @type {?} */\nDevAppBridgeService.prototype.http;\n}\n\nexport class AppBridge {\npublic id: string = `${Date.now()}`;\npublic traceName: string;\npublic windowName: string;\nprivate _registeredFrames: any[] = [];\nprivate _handlers = {};\nprivate _tracing: boolean = false;\nprivate _eventListeners: any = {};\n/**\n * @param {?=} traceName\n */\nconstructor(traceName: string = 'AppBridge') {\n    this.traceName = traceName;\n    if (postRobot) {\n      postRobot.CONFIG.LOG_LEVEL = 'error';\n      try {\n        this._setupHandlers();\n      } catch (error) {\n        // No op\n      }\n    }\n  }\n/**\n * @param {?} tracing\n * @return {?}\n */\nset tracing(tracing: boolean) {\n    this._tracing = tracing;\n  }\n/**\n * @param {?} type\n * @param {?} handler\n * @return {?}\n */\npublic handle(type: AppBridgeHandler, handler: Function) {\n    this._handlers[type] = handler;\n  }\n/**\n * @param {?} eventType\n * @param {?} event\n * @return {?}\n */\nprivate _trace(eventType, event) {\n    if (this._tracing) {\n      console.log(`[${this.traceName || this.id}] \"${eventType}\"`, event); // tslint:disable-line\n    }\n  }\n/**\n * @return {?}\n */\nprotected _setupHandlers(): void {\n    // Register\n    postRobot.on(MESSAGE_TYPES.REGISTER, (event) => {\n      this._trace(MESSAGE_TYPES.REGISTER, event);\n      this._registeredFrames.push(event);\n      return this.register(event.data).then((windowName) => {\n        return { windowName };\n      });\n    });\n    // Update\n    postRobot.on(MESSAGE_TYPES.UPDATE, (event) => {\n      this._trace(MESSAGE_TYPES.UPDATE, event);\n      return this.update(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Open\n    postRobot.on(MESSAGE_TYPES.OPEN, (event) => {\n      this._trace(MESSAGE_TYPES.OPEN, event);\n      return this.open(event.data).then((success) => {\n        return { success };\n      });\n    });\n    postRobot.on(MESSAGE_TYPES.OPEN_LIST, (event) => {\n      this._trace(MESSAGE_TYPES.OPEN_LIST, event);\n      return this.openList(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Close\n    postRobot.on(MESSAGE_TYPES.CLOSE, (event) => {\n      this._trace(MESSAGE_TYPES.CLOSE, event);\n      const /** @type {?} */ index = this._registeredFrames.findIndex((frame) => frame.data.id === event.data.id);\n      if (index !== -1) {\n        this._registeredFrames.splice(index, 1);\n      }\n      return this.close(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // Refresh\n    postRobot.on(MESSAGE_TYPES.REFRESH, (event) => {\n      this._trace(MESSAGE_TYPES.REFRESH, event);\n      return this.refresh(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // PIN\n    postRobot.on(MESSAGE_TYPES.PIN, (event) => {\n      this._trace(MESSAGE_TYPES.PIN, event);\n      return this.pin(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // REQUEST_DATA\n    postRobot.on(MESSAGE_TYPES.REQUEST_DATA, (event) => {\n      this._trace(MESSAGE_TYPES.REQUEST_DATA, event);\n      return this.requestData(event.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // CALLBACKS\n    postRobot.on(MESSAGE_TYPES.CALLBACK, (event) => {\n      this._trace(MESSAGE_TYPES.CALLBACK, event);\n      return this.callback(event.data).then((success) => {\n        return { success };\n      });\n    });\n    // HTTP-GET\n    postRobot.on(MESSAGE_TYPES.HTTP_GET, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_GET, event);\n      return this.httpGET(event.data.relativeURL).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-POST\n    postRobot.on(MESSAGE_TYPES.HTTP_POST, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_POST, event);\n      return this.httpPOST(event.data.relativeURL, event.data.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-PUT\n    postRobot.on(MESSAGE_TYPES.HTTP_PUT, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_PUT, event);\n      return this.httpPUT(event.data.relativeURL, event.data.data).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // HTTP-DELETE\n    postRobot.on(MESSAGE_TYPES.HTTP_DELETE, (event) => {\n      this._trace(MESSAGE_TYPES.HTTP_DELETE, event);\n      return this.httpDELETE(event.data.relativeURL).then((result) => {\n        return { data: result.data, error: result.error };\n      });\n    });\n    // Custom Events\n    postRobot.on(MESSAGE_TYPES.CUSTOM_EVENT, (event) => {\n      this._trace(MESSAGE_TYPES.CUSTOM_EVENT, event);\n      if (this._eventListeners[event.data.event]) {\n        this._eventListeners[event.data.event].forEach((listener) => {\n          listener(event.data.data);\n        });\n      }\n      if (this._registeredFrames.length > 0) {\n        this._registeredFrames.forEach((frame) => {\n          postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, event.data);\n        });\n      }\n    });\n  }\n/**\n * Fires or responds to an open event\n * @param {?} packet any - packet of data to send with the open event\n * @return {?}\n */\npublic open(packet: IAppBridgeOpenEvent): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.OPEN]) {\n        this._handlers[AppBridgeHandler.OPEN](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.OPEN, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.OPEN} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an openList event\n * @param {?} packet any - packet of data to send with the open event\n * @return {?}\n */\npublic openList(packet: Partial<IAppBridgeOpenListEvent>): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.OPEN_LIST]) {\n        this._handlers[AppBridgeHandler.OPEN_LIST](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        let /** @type {?} */ openListPacket = {};\n        Object.assign(openListPacket, { type: 'List', entityType: packet.type, keywords: packet.keywords, criteria: packet.criteria });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.OPEN_LIST, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.OPEN_LIST} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an close event\n * @param {?} packet any - packet of data to send with the close event\n * @return {?}\n */\npublic update(\n    packet: Partial<{ entityType: string; entityId: string; title: string; titleKey: string; color: string }>,\n  ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.UPDATE]) {\n        this._handlers[AppBridgeHandler.UPDATE](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.UPDATE, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.UPDATE} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an close event\n * @param {?=} packet\n * @return {?}\n */\npublic close(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.CLOSE]) {\n        this._handlers[AppBridgeHandler.CLOSE](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - close(packet) is deprecated! Please just use close()!'); // tslint:disable-line\n        }\n        let /** @type {?} */ realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.CLOSE, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.CLOSE} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an close event\n * @param {?=} packet\n * @return {?}\n */\npublic refresh(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REFRESH]) {\n        this._handlers[AppBridgeHandler.REFRESH](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - refresh(packet) is deprecated! Please just use refresh()!'); // tslint:disable-line\n        }\n        let /** @type {?} */ realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REFRESH, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REFRESH} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to a pin event\n * @param {?=} packet\n * @return {?}\n */\npublic pin(packet?: object): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.PIN]) {\n        this._handlers[AppBridgeHandler.PIN](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        if (packet) {\n          console.info('[AppBridge] - pin(packet) is deprecated! Please just use pin()!'); // tslint:disable-line\n        }\n        let /** @type {?} */ realPacket = { id: this.id, windowName: this.windowName };\n        postRobot\n          .sendToParent(MESSAGE_TYPES.PIN, realPacket)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.PIN} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to a requestData event\n * @param {?} packet any - packet of data to send with the requestData event\n * @return {?}\n */\npublic requestData(packet: { type: string }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REQUEST_DATA]) {\n        this._handlers[AppBridgeHandler.REQUEST_DATA](packet, (data: any) => {\n          if (data) {\n            resolve({ data });\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REQUEST_DATA, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REQUEST_DATA} (callback)`, event);\n            if (event.data) {\n              resolve({ data: event.data.data });\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires a generic callback command\n * @param {?} packet string - key: string, generic: boolean\n * @return {?}\n */\npublic callback(packet: { key: string; generic: boolean; options: object }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.CALLBACK]) {\n        this._handlers[AppBridgeHandler.CALLBACK](packet, (success: boolean) => {\n          if (success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id, windowName: this.windowName });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.CALLBACK, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.CALLBACK} (callback)`, event);\n            if (event.data) {\n              resolve(true);\n            } else {\n              reject(false);\n            }\n          })\n          .catch((err) => {\n            reject(false);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an register event\n * @param {?=} packet any - packet of data to send with the event\n * @return {?}\n */\npublic register(packet: Partial<{ title: string; url: string; color: string }> = {}): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.REGISTER]) {\n        this._handlers[AppBridgeHandler.REGISTER](packet, (windowName: string) => {\n          if (windowName) {\n            resolve(windowName);\n          } else {\n            resolve(null);\n          }\n        });\n      } else {\n        Object.assign(packet, { id: this.id });\n        postRobot\n          .sendToParent(MESSAGE_TYPES.REGISTER, packet)\n          .then((event) => {\n            this._trace(`${MESSAGE_TYPES.REGISTER} (callback)`, event);\n            if (event.data) {\n              this.windowName = event.data.windowName;\n              resolve(event.data.windowName);\n            } else {\n              resolve(null);\n            }\n          })\n          .catch((err) => {\n            this._trace(`${MESSAGE_TYPES.REGISTER} - FAILED - (no parent)`, err);\n            resolve(null);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an HTTP_GET event\n * @param {?} relativeURL\n * @return {?}\n */\npublic httpGET(relativeURL: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.GET, relativeURL: relativeURL }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_GET, { relativeURL })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an HTTP_POST event\n * @param {?} relativeURL\n * @param {?} postData\n * @return {?}\n */\npublic httpPOST(relativeURL: string, postData: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP](\n          { verb: HTTP_VERBS.POST, relativeURL: relativeURL, data: postData },\n          (data: any, error: any) => {\n            resolve({ data, error });\n          },\n        );\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_POST, { relativeURL: relativeURL, data: postData })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an HTTP_PUT event\n * @param {?} relativeURL\n * @param {?} putData\n * @return {?}\n */\npublic httpPUT(relativeURL: string, putData: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP](\n          { verb: HTTP_VERBS.PUT, relativeURL: relativeURL, data: putData },\n          (data: any, error: any) => {\n            resolve({ data, error });\n          },\n        );\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_PUT, { relativeURL: relativeURL, data: putData })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n/**\n * Fires or responds to an HTTP_DELETE event\n * @param {?} relativeURL\n * @return {?}\n */\npublic httpDELETE(relativeURL: string): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      if (this._handlers[AppBridgeHandler.HTTP]) {\n        this._handlers[AppBridgeHandler.HTTP]({ verb: HTTP_VERBS.DELETE, relativeURL: relativeURL }, (data: any, error: any) => {\n          resolve({ data, error });\n        });\n      } else {\n        postRobot\n          .sendToParent(MESSAGE_TYPES.HTTP_DELETE, { relativeURL })\n          .then((event: any) => {\n            resolve({ data: event.data.data, error: event.data.error });\n          })\n          .catch((err) => {\n            reject(null);\n          });\n      }\n    });\n  }\n/**\n * Fires a custom event to anywhere in the application\n * @param {?} event string - event name to fire\n * @param {?} data any - data to be sent along with the event\n * @return {?}\n */\npublic fireEvent(event: string, data: any): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      postRobot\n        .sendToParent(MESSAGE_TYPES.CUSTOM_EVENT, { event, data })\n        .then((e: any) => {\n          resolve(e);\n        })\n        .catch((err) => {\n          reject(null);\n        });\n    });\n  }\n/**\n * Fires a custom event to all registered frames\n * @param {?} event string - event name to fire\n * @param {?} data any - data to be sent along with the event\n * @return {?}\n */\npublic fireEventToChildren(event: string, data: any): void {\n    if (this._registeredFrames.length > 0) {\n      this._registeredFrames.forEach((frame) => {\n        postRobot.send(frame.source, MESSAGE_TYPES.CUSTOM_EVENT, {\n          eventType: event,\n          data: data,\n        });\n      });\n    }\n  }\n/**\n * Adds an event listener to a custom event\n * @param {?} event string - event name to listen to\n * @param {?} callback function - callback to be fired when an event is caught\n * @return {?}\n */\npublic addEventListener(event: string, callback: Function): void {\n    if (!this._eventListeners[event]) {\n      this._eventListeners[event] = [];\n    }\n    this._eventListeners[event].push(callback);\n  }\n}\n\nfunction AppBridge_tsickle_Closure_declarations() {\n/** @type {?} */\nAppBridge.prototype.id;\n/** @type {?} */\nAppBridge.prototype.traceName;\n/** @type {?} */\nAppBridge.prototype.windowName;\n/** @type {?} */\nAppBridge.prototype._registeredFrames;\n/** @type {?} */\nAppBridge.prototype._handlers;\n/** @type {?} */\nAppBridge.prototype._tracing;\n/** @type {?} */\nAppBridge.prototype._eventListeners;\n}\n\nexport class DevAppBridge extends AppBridge {\nprivate baseURL: string;\n/**\n * @param {?=} traceName\n * @param {?=} http\n */\nconstructor(traceName: string = 'DevAppBridge',\nprivate http: HttpClient) {\n    super(traceName);\n    let cookie = this.getCookie('UlEncodedIdentity');\n    if (cookie && cookie.length) {\n      let identity = JSON.parse(decodeURIComponent(cookie));\n      let endpoints = identity.sessions.reduce((obj, session) => {\n        obj[session.name] = session.value.endpoint;\n        return obj;\n      }, {});\n      this.baseURL = endpoints.rest;\n    }\n  }\n/**\n * @return {?}\n */\nprotected _setupHandlers(): void {}\n/**\n * Fires or responds to an HTTP_GET event\n * @param {?} relativeURL\n * @return {?}\n */\npublic httpGET(relativeURL: string): Promise<any> {\n    return this.http\n      .get(`${this.baseURL}/${relativeURL}`, { withCredentials: true })\n      .map((res) => ({ data: res }))\n      .toPromise();\n  }\n/**\n * Fires or responds to an HTTP_POST event\n * @param {?} relativeURL\n * @param {?} postData\n * @return {?}\n */\npublic httpPOST(relativeURL: string, postData: any): Promise<any> {\n    return this.http\n      .post(`${this.baseURL}/${relativeURL}`, postData, { withCredentials: true })\n      .map((res) => ({ data: res }))\n      .toPromise();\n  }\n/**\n * Fires or responds to an HTTP_PUT event\n * @param {?} relativeURL\n * @param {?} putData\n * @return {?}\n */\npublic httpPUT(relativeURL: string, putData: any): Promise<any> {\n    return this.http\n      .put(`${this.baseURL}/${relativeURL}`, putData, { withCredentials: true })\n      .map((res) => ({ data: res }))\n      .toPromise();\n  }\n/**\n * Fires or responds to an HTTP_DELETE event\n * @param {?} relativeURL\n * @return {?}\n */\npublic httpDELETE(relativeURL: string): Promise<any> {\n    return this.http\n      .delete(`${this.baseURL}/${relativeURL}`, { withCredentials: true })\n      .map((res) => ({ data: res }))\n      .toPromise();\n  }\n/**\n * @param {?} cname\n * @return {?}\n */\nprivate getCookie(cname: string): any {\n    if (document) {\n      let /** @type {?} */ name = `${cname}=`;\n      let /** @type {?} */ ca = document.cookie.split(';');\n      for (let /** @type {?} */ i = 0; i < ca.length; i++) {\n        let /** @type {?} */ c = ca[i];\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n    }\n    return false;\n  }\n}\n\nfunction DevAppBridge_tsickle_Closure_declarations() {\n/** @type {?} */\nDevAppBridge.prototype.baseURL;\n/** @type {?} */\nDevAppBridge.prototype.http;\n}\n\n","// NG2\n\nimport { NgModule } from '@angular/core';\n// APP\n\nimport { GooglePlacesService } from './elements/places/places.service';\nimport { NovoDragulaService } from './elements/dragula/DragulaService';\nimport { NovoModalService } from './elements/modal/ModalService';\nimport { NovoModalRef } from './elements/modal/Modal';\nimport { NovoToastService } from './elements/toast/ToastService';\nimport { ComponentUtils } from './utils/component-utils/ComponentUtils';\nimport { FormUtils } from './utils/form-utils/FormUtils';\nimport { FieldInteractionApi } from './elements/form/FieldInteractionApi';\nimport { DateFormatService } from './services/date-format/DateFormat';\nimport { GlobalRef, BrowserGlobalRef } from './services/global/global.service';\nimport { LocalStorageService } from './services/storage/storage.service';\nimport { Security } from './services/security/Security';\nimport { OptionsService } from './services/options/OptionsService';\nimport { NovoTemplateService } from './services/template/NovoTemplateService';\n\nconst /** @type {?} */ NOVO_ELEMENTS_PROVIDERS = [\n  { provide: NovoDragulaService, useClass: NovoDragulaService },\n  { provide: NovoModalRef, useClass: NovoModalRef },\n  { provide: NovoModalService, useClass: NovoModalService },\n  { provide: GooglePlacesService, useClass: GooglePlacesService },\n  { provide: NovoToastService, useClass: NovoToastService },\n  { provide: ComponentUtils, useClass: ComponentUtils },\n  { provide: GlobalRef, useClass: BrowserGlobalRef },\n  { provide: LocalStorageService, useClass: LocalStorageService },\n  { provide: OptionsService, useClass: OptionsService },\n  FieldInteractionApi,\n  DateFormatService,\n  Security,\n  NovoTemplateService,\n];\nexport class NovoElementProviders {\n/**\n * @return {?}\n */\nstatic forRoot() {\n    return {\n      ngModule: NovoElementProviders,\n      providers: [...NOVO_ELEMENTS_PROVIDERS]\n    };\n  }\n/**\n * @return {?}\n */\nstatic forChild() {\n    return {\n      ngModule: NovoElementProviders\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoElementProviders_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoElementProviders.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoElementProviders.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, AfterViewInit, OnDestroy, Input, ViewChild, ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { PopOverDirective } from './PopOver';\nexport class PopOverContent implements AfterViewInit {\n     content: string;\n     placement: string = 'top';\n     title: string;\n     animation: boolean = true;\n\n    \n    popoverDiv: ElementRef;\n    popover: PopOverDirective;\n    onCloseFromOutside = new EventEmitter();\n    top: number = -10000;\n    left: number = -10000;\n    displayType: string = 'none';\n    effectivePlacement: string;\n    effectiveAlignment: string;\n    isHidden: boolean = false;\n/**\n * @param {?} element\n * @param {?} cdr\n */\nconstructor(protected element: ElementRef,\n        protected cdr: ChangeDetectorRef) {\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.show();\n        this.cdr.detectChanges();\n    }\n/**\n * @return {?}\n */\ntoggle(): void {\n        if (this.isHidden) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n/**\n * @return {?}\n */\nshow(): void {\n        if (!this.popover || !this.popover.getElement()) {\n            return;\n        }\n\n        const /** @type {?} */ p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n        this.displayType = 'block';\n        this.top = p.top;\n        this.left = p.left;\n        this.isHidden = false;\n    }\n/**\n * @return {?}\n */\nhide(): void {\n        this.top = -10000;\n        this.left = -10000;\n        this.isHidden = true;\n        this.popover.hide();\n    }\n/**\n * @return {?}\n */\nhideFromPopover() {\n        this.top = -10000;\n        this.left = -10000;\n    }\n/**\n * @param {?} hostEl\n * @param {?} targetEl\n * @param {?} positionStr\n * @param {?=} appendToBody\n * @return {?}\n */\nprotected positionElements(hostEl: HTMLElement, targetEl: HTMLElement, positionStr: string, appendToBody = false): { top: number, left: number } {\n        let /** @type {?} */ positionStrParts = positionStr.split('-');\n        let /** @type {?} */ mainSide = this.effectivePlacement = this.getEffectivePlacement(positionStrParts[0] || 'right', hostEl, targetEl);\n        let /** @type {?} */ orientation = this.effectiveAlignment = positionStrParts[1] || 'center';\n        let /** @type {?} */ hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n        let /** @type {?} */ targetElWidth = targetEl.offsetWidth;\n        let /** @type {?} */ targetElHeight = targetEl.offsetHeight;\n\n        let /** @type {?} */ shiftWidth: any = {\n            center: function (): number {\n                return hostElPos.left + (hostElPos.width - targetElWidth) / 2;\n            },\n            right: function (): number {\n                return hostElPos.left;\n            },\n            left: function (): number {\n                return hostElPos.left + (hostElPos.width - targetElWidth);\n            }\n        };\n\n        let /** @type {?} */ shiftHeight: any = {\n            center: function (): number {\n                return hostElPos.top + (hostElPos.height - targetElHeight) / 2;\n            },\n            bottom: function (): number {\n                return hostElPos.top;\n            },\n            top: function (): number {\n                return hostElPos.top + (hostElPos.height - targetElHeight);\n            }\n        };\n\n        let /** @type {?} */ targetElPos: { top: number, left: number };\n        switch (mainSide) {\n            case 'right':\n                targetElPos = {\n                    top: shiftHeight[orientation](),\n                    left: hostElPos.left + hostElPos.width\n                };\n                break;\n\n            case 'left':\n                targetElPos = {\n                    top: shiftHeight[orientation](),\n                    left: hostElPos.left - targetElWidth\n                };\n                break;\n\n            case 'bottom':\n                targetElPos = {\n                    top: hostElPos.top + hostElPos.height,\n                    left: shiftWidth[orientation]()\n                };\n                break;\n\n            default:\n                targetElPos = {\n                    top: hostElPos.top - targetElHeight,\n                    left: shiftWidth[orientation]()\n                };\n                break;\n        }\n\n        return targetElPos;\n    }\n/**\n * @param {?} nativeEl\n * @return {?}\n */\nprotected position(nativeEl: HTMLElement): { width: number, height: number, top: number, left: number } {\n        let /** @type {?} */ offsetParentBCR = { top: 0, left: 0 };\n        const /** @type {?} */ elBCR = this.offset(nativeEl);\n        const /** @type {?} */ offsetParentEl = this.parentOffsetEl(nativeEl);\n        if (offsetParentEl !== window.document) {\n            offsetParentBCR = this.offset(offsetParentEl);\n            offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n            offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n        }\n\n        const /** @type {?} */ boundingClientRect = nativeEl.getBoundingClientRect();\n        return {\n            width: boundingClientRect.width || nativeEl.offsetWidth,\n            height: boundingClientRect.height || nativeEl.offsetHeight,\n            top: elBCR.top - offsetParentBCR.top,\n            left: elBCR.left - offsetParentBCR.left\n        };\n    }\n/**\n * @param {?} nativeEl\n * @return {?}\n */\nprotected offset(nativeEl: any): { width: number, height: number, top: number, left: number } {\n        const /** @type {?} */ boundingClientRect = nativeEl.getBoundingClientRect();\n        return {\n            width: boundingClientRect.width || nativeEl.offsetWidth,\n            height: boundingClientRect.height || nativeEl.offsetHeight,\n            top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),\n            left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft)\n        };\n    }\n/**\n * @param {?} nativeEl\n * @param {?} cssProp\n * @return {?}\n */\nprotected getStyle(nativeEl: HTMLElement, cssProp: string): string {\n        if (( /** @type {?} */((nativeEl as any))).currentStyle) {\n            return ( /** @type {?} */((nativeEl as any))).currentStyle[cssProp];\n        }\n\n        if (window.getComputedStyle) {\n            return ( /** @type {?} */((window.getComputedStyle as any)))(nativeEl)[cssProp];\n        }\n\n        return ( /** @type {?} */((nativeEl.style as any)))[cssProp];\n    }\n/**\n * @param {?} nativeEl\n * @return {?}\n */\nprotected isStaticPositioned(nativeEl: HTMLElement): boolean {\n        return (this.getStyle(nativeEl, 'position') || 'static') === 'static';\n    }\n/**\n * @param {?} nativeEl\n * @return {?}\n */\nprotected parentOffsetEl(nativeEl: HTMLElement): any {\n        let /** @type {?} */ offsetParent: any = nativeEl.offsetParent || window.document;\n        while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || window.document;\n    }\n/**\n * @param {?} desiredPlacement\n * @param {?} hostElement\n * @param {?} targetElement\n * @return {?}\n */\nprotected getEffectivePlacement(desiredPlacement: string, hostElement: HTMLElement, targetElement: HTMLElement): string {\n        const /** @type {?} */ hostElBoundingRect = hostElement.getBoundingClientRect();\n\n        if (desiredPlacement === 'top' && hostElBoundingRect.top - targetElement.offsetHeight < 0) {\n            return 'bottom';\n        }\n        if (desiredPlacement === 'bottom' && hostElBoundingRect.bottom + targetElement.offsetHeight > window.innerHeight) {\n            return 'top';\n        }\n        if (desiredPlacement === 'left' && hostElBoundingRect.left - targetElement.offsetWidth < 0) {\n            return 'right';\n        }\n        if (desiredPlacement === 'right' && hostElBoundingRect.right + targetElement.offsetWidth > window.innerWidth) {\n            return 'left';\n        }\n\n        return desiredPlacement;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'popover-content',\n    template: `\n        <div #popoverDiv\n            class=\"popover {{ effectivePlacement }}\"\n            [style.top]=\"top + 'px'\"\n            [style.left]=\"left + 'px'\"\n            [class.fade]=\"animation\"\n            style=\"display: block\"\n            role=\"popover\">\n            <div class=\"arrow {{effectiveAlignment}}\"></div>\n            <h4 class=\"popover-title\" [hidden]=\"!title\">{{ title }}</h4>\n            <div class=\"popover-content\">\n                <ng-content></ng-content>\n                <div class=\"popover-content-text\">{{ content }}</div>\n            </div>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input },],\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n'animation': [{ type: Input },],\n'popoverDiv': [{ type: ViewChild, args: ['popoverDiv', ] },],\n};\n}\n\nfunction PopOverContent_tsickle_Closure_declarations() {\n/** @type {?} */\nPopOverContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopOverContent.ctorParameters;\n/** @type {?} */\nPopOverContent.propDecorators;\n/** @type {?} */\nPopOverContent.prototype.content;\n/** @type {?} */\nPopOverContent.prototype.placement;\n/** @type {?} */\nPopOverContent.prototype.title;\n/** @type {?} */\nPopOverContent.prototype.animation;\n/** @type {?} */\nPopOverContent.prototype.popoverDiv;\n/** @type {?} */\nPopOverContent.prototype.popover;\n/** @type {?} */\nPopOverContent.prototype.onCloseFromOutside;\n/** @type {?} */\nPopOverContent.prototype.top;\n/** @type {?} */\nPopOverContent.prototype.left;\n/** @type {?} */\nPopOverContent.prototype.displayType;\n/** @type {?} */\nPopOverContent.prototype.effectivePlacement;\n/** @type {?} */\nPopOverContent.prototype.effectiveAlignment;\n/** @type {?} */\nPopOverContent.prototype.isHidden;\n/** @type {?} */\nPopOverContent.prototype.element;\n/** @type {?} */\nPopOverContent.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, OnChanges, ComponentRef, ViewContainerRef, ComponentFactoryResolver, Input, Output, EventEmitter, HostListener, SimpleChange } from '@angular/core';\nimport { PopOverContent } from './PopOverContent';\nexport class PopOverDirective implements OnChanges {\n    protected PopoverComponent = PopOverContent;\n    protected popover: ComponentRef<PopOverContent>;\n    protected visible: boolean;\n/**\n * @param {?} viewContainerRef\n * @param {?} resolver\n */\nconstructor(protected viewContainerRef: ViewContainerRef, protected resolver: ComponentFactoryResolver) { }\n\n     content: string | PopOverContent;\n     popoverDisabled: boolean;\n     popoverAlways: boolean;\n     popoverAnimation: boolean;\n     popoverPlacement: string;\n     popoverTitle: string;\n     popoverOnHover: boolean = false;\n     popoverDismissTimeout: number = 0;\n\n     onShown = new EventEmitter<PopOverDirective>();\n     onHidden = new EventEmitter<PopOverDirective>();\n/**\n * @return {?}\n */\nshowOrHideOnClick(): void {\n        if (this.popoverOnHover || this.popoverDisabled) {\n            return;\n        }\n        this.toggle();\n    }\n/**\n * @return {?}\n */\nshowOnHover(): void {\n        if (!this.popoverOnHover || this.popoverDisabled) {\n            return;\n        }\n        this.show();\n    }\n/**\n * @return {?}\n */\nhideOnHover(): void {\n        if (!this.popoverOnHover || this.popoverDisabled) {\n            return;\n        }\n        this.hide();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n        if (changes['popoverDisabled']) {\n            if (changes['popoverDisabled'].currentValue) {\n                this.hide();\n            }\n        }\n        if (changes['popoverAlways']) {\n            if (changes['popoverAlways'].currentValue) {\n                this.show();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ntoggle() {\n        if (!this.visible) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n/**\n * @return {?}\n */\nshow() {\n        if (this.visible) {\n            return;\n        }\n\n        this.visible = true;\n        if (typeof this.content === 'string') {\n            const /** @type {?} */ factory = this.resolver.resolveComponentFactory(this.PopoverComponent);\n            if (!this.visible) {\n                return;\n            }\n\n            this.popover = this.viewContainerRef.createComponent(factory);\n            const /** @type {?} */ popover = /** @type {?} */(( this.popover.instance as PopOverContent));\n            popover.popover = this;\n            popover.content = /** @type {?} */(( this.content as string));\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n\n            popover.onCloseFromOutside.subscribe(() => this.hide());\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout(() => this.hide(), this.popoverDismissTimeout);\n            }\n        } else {\n            const /** @type {?} */ popover = /** @type {?} */(( this.content as PopOverContent));\n            popover.popover = this;\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n\n            popover.onCloseFromOutside.subscribe(() => this.hide());\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout(() => this.hide(), this.popoverDismissTimeout);\n            }\n            popover.show();\n        }\n\n        this.onShown.emit(this);\n    }\n/**\n * @return {?}\n */\nhide() {\n        if (!this.visible) {\n            return;\n        }\n\n        this.visible = false;\n        if (this.popover) {\n            this.popover.destroy();\n        }\n\n        if (this.content instanceof PopOverContent) {\n            ( /** @type {?} */((this.content as PopOverContent))).hideFromPopover();\n        }\n\n        this.onHidden.emit(this);\n    }\n/**\n * @return {?}\n */\ngetElement() {\n        return this.viewContainerRef.element.nativeElement;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[popover]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input, args: ['popover', ] },],\n'popoverDisabled': [{ type: Input },],\n'popoverAlways': [{ type: Input },],\n'popoverAnimation': [{ type: Input },],\n'popoverPlacement': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'popoverOnHover': [{ type: Input },],\n'popoverDismissTimeout': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'showOrHideOnClick': [{ type: HostListener, args: ['click', ] },],\n'showOnHover': [{ type: HostListener, args: ['focusin', ] },{ type: HostListener, args: ['mouseenter', ] },],\n'hideOnHover': [{ type: HostListener, args: ['focusout', ] },{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction PopOverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPopOverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopOverDirective.ctorParameters;\n/** @type {?} */\nPopOverDirective.propDecorators;\n/** @type {?} */\nPopOverDirective.prototype.PopoverComponent;\n/** @type {?} */\nPopOverDirective.prototype.popover;\n/** @type {?} */\nPopOverDirective.prototype.visible;\n/** @type {?} */\nPopOverDirective.prototype.content;\n/** @type {?} */\nPopOverDirective.prototype.popoverDisabled;\n/** @type {?} */\nPopOverDirective.prototype.popoverAlways;\n/** @type {?} */\nPopOverDirective.prototype.popoverAnimation;\n/** @type {?} */\nPopOverDirective.prototype.popoverPlacement;\n/** @type {?} */\nPopOverDirective.prototype.popoverTitle;\n/** @type {?} */\nPopOverDirective.prototype.popoverOnHover;\n/** @type {?} */\nPopOverDirective.prototype.popoverDismissTimeout;\n/** @type {?} */\nPopOverDirective.prototype.onShown;\n/** @type {?} */\nPopOverDirective.prototype.onHidden;\n/** @type {?} */\nPopOverDirective.prototype.viewContainerRef;\n/** @type {?} */\nPopOverDirective.prototype.resolver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\n// APP\n\nimport { PopOverContent } from './PopOverContent';\nimport { PopOverDirective } from './PopOver';\nexport class NovoPopOverModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [PopOverContent, PopOverDirective],\n    exports: [PopOverContent, PopOverDirective],\n    entryComponents: [PopOverContent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoPopOverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoPopOverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoPopOverModule.ctorParameters;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, PLATFORM_ID, Inject, Input, Output, Optional, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nimport { NovoSearchBoxElement } from '../search/SearchBox';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { GlobalRef } from '../../services/global/global.service';\nimport { GooglePlacesService } from './places.service';\n\nexport interface Settings {\n    geoPredictionServerUrl?: string;\n    geoLatLangServiceUrl?: string;\n    geoLocDetailServerUrl?: string;\n    geoCountryRestriction?: any;\n    geoTypes?: any;\n    geoLocation?: any;\n    geoRadius?: number;\n    serverResponseListHierarchy?: any;\n    serverResponseatLangHierarchy?: any;\n    serverResponseDetailHierarchy?: any;\n    resOnSearchButtonClickOnly?: boolean;\n    useGoogleGeoApi?: boolean;\n    inputPlaceholderText?: string;\n    inputString?: string;\n    showSearchButton?: boolean;\n    showRecentSearch?: boolean;\n    showCurrentLocation?: boolean;\n    recentStorageName?: string;\n    noOfRecentSearchSave?: number;\n    currentLocIconUrl?: string;\n    searchIconUrl?: string;\n    locationIconUrl?: string;\n}\nexport class PlacesListComponent implements OnInit, OnChanges {\n     userSettings: Settings;\n     term: string = '';\n     termChange: EventEmitter<any> = new EventEmitter<any>();\n     select: EventEmitter<any> = new EventEmitter<any>();\npublic locationInput: string = '';\npublic gettingCurrentLocationFlag: boolean = false;\npublic dropdownOpen: boolean = false;\npublic recentDropdownOpen: boolean = false;\npublic queryItems: any = [];\npublic isSettingsError: boolean = false;\npublic settingsErrorMsg: string = '';\npublic settings: Settings = {};\nprivate moduleinit: boolean = false;\nprivate selectedDataIndex: number = -1;\nprivate recentSearchData: any = [];\nprivate userSelectedOption: any = '';\nprivate defaultSettings: Settings = {\n        geoPredictionServerUrl: '',\n        geoLatLangServiceUrl: '',\n        geoLocDetailServerUrl: '',\n        geoCountryRestriction: [],\n        geoTypes: [],\n        geoLocation: [],\n        geoRadius: 0,\n        serverResponseListHierarchy: [],\n        serverResponseatLangHierarchy: [],\n        serverResponseDetailHierarchy: [],\n        resOnSearchButtonClickOnly: false,\n        useGoogleGeoApi: true,\n        inputPlaceholderText: 'Enter Area Name',\n        inputString: '',\n        showSearchButton: true,\n        showRecentSearch: true,\n        showCurrentLocation: true,\n        recentStorageName: 'recentSearches',\n        noOfRecentSearchSave: 5,\n        currentLocIconUrl: '',\n        searchIconUrl: '',\n        locationIconUrl: ''\n    };\n/**\n * @param {?} platformId\n * @param {?} _elmRef\n * @param {?} _global\n * @param {?} _googlePlacesService\n */\nconstructor(\nprivate platformId: Object,\nprivate _elmRef: ElementRef,\nprivate _global: GlobalRef,\nprivate _googlePlacesService: GooglePlacesService\n    ) {\n\n    }\n/**\n * @return {?}\n */\nngOnInit(): any {\n        if (!this.moduleinit) {\n            this.moduleInit();\n        }\n    }\n/**\n * @return {?}\n */\nngOnChanges(): any {\n        this.moduleinit = true;\n        this.moduleInit();\n        this.searchinputCallback(null);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsearchinputClickCallback(event: any): any {\n        event.target.select();\n        this.searchinputCallback(event);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsearchinputCallback(event: any): any {\n        let /** @type {?} */ inputVal: any = this.locationInput;\n        if (inputVal) {\n            this.getListQuery(inputVal);\n        } else {\n            this.queryItems = [];\n            if (this.userSelectedOption) {\n                this.userQuerySubmit('false');\n            }\n            this.userSelectedOption = '';\n            if (this.settings.showRecentSearch) {\n                this.showRecentSearch();\n            } else {\n                this.dropdownOpen = false;\n            }\n        }\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nactiveListNode(index: number): any {\n        for (let /** @type {?} */ i: number = 0; i < this.queryItems.length; i++) {\n            if (index === i) {\n                this.queryItems[i].active = true;\n                this.selectedDataIndex = index;\n            } else {\n                this.queryItems[i].active = false;\n            }\n        }\n    }\n/**\n * @param {?} event\n * @param {?} index\n * @return {?}\n */\nselectedListNode(event: MouseEvent, index: number): any {\n        this.dropdownOpen = false;\n        if (this.recentDropdownOpen) {\n            this.setRecentLocation(this.queryItems[index]);\n        } else {\n            this.getPlaceLocationInfo(this.queryItems[index]);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ncloseAutocomplete(event: any): any {\n        if (!this._elmRef.nativeElement.contains(event.target)) {\n            this.selectedDataIndex = -1;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * @param {?=} selectedOption\n * @return {?}\n */\nuserQuerySubmit(selectedOption?: any): any {\n        let /** @type {?} */ _userOption: any = selectedOption === 'false' ? '' : this.userSelectedOption;\n        if (_userOption) {\n            this.select.emit(this.userSelectedOption);\n        } else {\n            //this.select.emit(false);\n        }\n    }\n/**\n * @return {?}\n */\ncurrentLocationSelected(): any {\n        if (isPlatformBrowser(this.platformId)) {\n            this.gettingCurrentLocationFlag = true;\n            this.dropdownOpen = false;\n            this._googlePlacesService.getGeoCurrentLocation().then((result: any) => {\n                if (!result) {\n                    this.gettingCurrentLocationFlag = false;\n                } else {\n                    this.getCurrentLocationInfo(result);\n                }\n            });\n        }\n    }\n/**\n * @return {?}\n */\nprivate moduleInit(): any {\n        this.settings = this.setUserSettings();\n        //condition to check if Radius is set without location detail.\n        if (this.settings.geoRadius) {\n            if (this.settings.geoLocation.length !== 2) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg = this.settingsErrorMsg +\n                    'Radius should be used with GeoLocation. Please use \"geoLocation\" key to set lat and lng. ';\n            }\n        }\n\n        //condition to check if lat and lng is set and radious is not set then it will set to 20,000KM by default\n        if ((this.settings.geoLocation.length === 2) && !this.settings.geoRadius) {\n            this.settings.geoRadius = 20000000;\n        }\n        if (this.settings.showRecentSearch) {\n            this.getRecentLocations();\n        }\n        if (!this.settings.useGoogleGeoApi) {\n            if (!this.settings.geoPredictionServerUrl) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg = this.settingsErrorMsg +\n                    'Prediction custom server url is not defined. Please use \"geoPredictionServerUrl\" key to set. ';\n            }\n            if (!this.settings.geoLatLangServiceUrl) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg = this.settingsErrorMsg +\n                    'Latitude and longitude custom server url is not defined. Please use \"geoLatLangServiceUrl\" key to set. ';\n            }\n            if (!this.settings.geoLocDetailServerUrl) {\n                this.isSettingsError = true;\n                this.settingsErrorMsg = this.settingsErrorMsg +\n                    'Location detail custom server url is not defined. Please use \"geoLocDetailServerUrl\" key to set. ';\n            }\n        }\n        this.locationInput = this.term;\n    }\n/**\n * @return {?}\n */\nprivate processSearchQuery(): any {\n        if (this.queryItems.length) {\n            if (this.selectedDataIndex > -1) {\n                this.selectedListNode(null, this.selectedDataIndex);\n            } else {\n                this.selectedListNode(null, 0);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate setUserSettings(): Settings {\n        let /** @type {?} */ _tempObj: any = {};\n        if (this.userSettings && typeof (this.userSettings) === 'object') {\n            let /** @type {?} */ keys: string[] = Object.keys(this.defaultSettings);\n            for (let /** @type {?} */ value of keys) {\n                _tempObj[value] = (this.userSettings[value] !== undefined) ? this.userSettings[value] : this.defaultSettings[value];\n            }\n            return _tempObj;\n        } else {\n            return this.defaultSettings;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate getListQuery(value: string): any {\n        this.recentDropdownOpen = false;\n        if (this.settings.useGoogleGeoApi) {\n            let /** @type {?} */ _tempParams: any = {\n                'query': value,\n                'countryRestriction': this.settings.geoCountryRestriction,\n                'geoTypes': this.settings.geoTypes\n            };\n            if (this.settings.geoLocation.length === 2) {\n                _tempParams.geoLocation = this.settings.geoLocation;\n                _tempParams.radius = this.settings.geoRadius;\n            }\n            this._googlePlacesService.getGeoPrediction(_tempParams).then((result) => {\n                this.updateListItem(result);\n            });\n        } else {\n            this._googlePlacesService.getPredictions(this.settings.geoPredictionServerUrl, value).then((result) => {\n                result = this.extractServerList(this.settings.serverResponseListHierarchy, result);\n                this.updateListItem(result);\n            });\n        }\n    }\n/**\n * @param {?} arrayList\n * @param {?} data\n * @return {?}\n */\nprivate extractServerList(arrayList: any, data: any): any {\n        if (arrayList.length) {\n            let /** @type {?} */ _tempData: any = data;\n            for (let /** @type {?} */ key of arrayList) {\n                _tempData = _tempData[key];\n            }\n            return _tempData;\n        } else {\n            return data;\n        }\n    }\n/**\n * @param {?} listData\n * @return {?}\n */\nprivate updateListItem(listData: any): any {\n        this.queryItems = listData ? listData : [];\n        this.dropdownOpen = true;\n    }\n/**\n * @return {?}\n */\nprivate showRecentSearch(): any {\n        this.recentDropdownOpen = true;\n        this.dropdownOpen = true;\n        this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((result: any) => {\n            if (result) {\n                this.queryItems = result;\n            } else {\n                this.queryItems = [];\n            }\n        });\n    }\n/**\n * @param {?} latlng\n * @return {?}\n */\nprivate getCurrentLocationInfo(latlng: any): any {\n        if (this.settings.useGoogleGeoApi) {\n            this._googlePlacesService.getGeoLatLngDetail(latlng).then((result: any) => {\n                if (result) {\n                    this.setRecentLocation(result);\n                }\n                this.gettingCurrentLocationFlag = false;\n            });\n        } else {\n            this._googlePlacesService.getLatLngDetail(this.settings.geoLatLangServiceUrl, latlng.lat, latlng.lng).then((result: any) => {\n                if (result) {\n                    result = this.extractServerList(this.settings.serverResponseatLangHierarchy, result);\n                    this.setRecentLocation(result);\n                }\n                this.gettingCurrentLocationFlag = false;\n            });\n        }\n    }\n/**\n * @param {?} selectedData\n * @return {?}\n */\nprivate getPlaceLocationInfo(selectedData: any): any {\n        if (this.settings.useGoogleGeoApi) {\n            this._googlePlacesService.getGeoPlaceDetail(selectedData.place_id).then((data: any) => {\n                if (data) {\n                    this.setRecentLocation(data);\n                }\n            });\n        } else {\n            this._googlePlacesService.getPlaceDetails(this.settings.geoLocDetailServerUrl, selectedData.place_id).then((result: any) => {\n                if (result) {\n                    result = this.extractServerList(this.settings.serverResponseDetailHierarchy, result);\n                    this.setRecentLocation(result);\n                }\n            });\n        }\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprivate setRecentLocation(data: any): any {\n        data = JSON.parse(JSON.stringify(data));\n        data.description = data.description ? data.description : data.formatted_address;\n        data.active = false;\n        this.selectedDataIndex = -1;\n        this.locationInput = data.description;\n        if (this.settings.showRecentSearch) {\n            this._googlePlacesService.addRecentList(this.settings.recentStorageName, data, this.settings.noOfRecentSearchSave);\n            this.getRecentLocations();\n        }\n        this.userSelectedOption = data;\n        //below code will execute only when user press enter or select any option selection and it emit a callback to the parent component.\n        if (!this.settings.resOnSearchButtonClickOnly) {\n            this.select.emit(data);\n            this.termChange.emit(data);\n        }\n    }\n/**\n * @return {?}\n */\nprivate getRecentLocations(): any {\n        this._googlePlacesService.getRecentList(this.settings.recentStorageName).then((data: any) => {\n            this.recentSearchData = (data && data.length) ? data : [];\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'google-places-list',\n    template: `\n        <novo-list direction=\"vertical\">\n            <novo-list-item *ngFor=\"let data of queryItems;let $index = index\" (click)=\"selectedListNode($event, $index)\">\n                <item-header>\n                    <item-avatar icon=\"location\"></item-avatar>\n                    <item-title>{{data.structured_formatting?.main_text ? data.structured_formatting.main_text : data.description}}</item-title>\n                </item-header>\n                <item-content>{{data.structured_formatting?.secondary_text}}</item-content>\n            </novo-list-item>\n        </novo-list>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: ElementRef, },\n{type: GlobalRef, },\n{type: GooglePlacesService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'userSettings': [{ type: Input },],\n'term': [{ type: Input },],\n'termChange': [{ type: Output },],\n'select': [{ type: Output },],\n};\n}\n\nfunction PlacesListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPlacesListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlacesListComponent.ctorParameters;\n/** @type {?} */\nPlacesListComponent.propDecorators;\n/** @type {?} */\nPlacesListComponent.prototype.userSettings;\n/** @type {?} */\nPlacesListComponent.prototype.term;\n/** @type {?} */\nPlacesListComponent.prototype.termChange;\n/** @type {?} */\nPlacesListComponent.prototype.select;\n/** @type {?} */\nPlacesListComponent.prototype.locationInput;\n/** @type {?} */\nPlacesListComponent.prototype.gettingCurrentLocationFlag;\n/** @type {?} */\nPlacesListComponent.prototype.dropdownOpen;\n/** @type {?} */\nPlacesListComponent.prototype.recentDropdownOpen;\n/** @type {?} */\nPlacesListComponent.prototype.queryItems;\n/** @type {?} */\nPlacesListComponent.prototype.isSettingsError;\n/** @type {?} */\nPlacesListComponent.prototype.settingsErrorMsg;\n/** @type {?} */\nPlacesListComponent.prototype.settings;\n/** @type {?} */\nPlacesListComponent.prototype.moduleinit;\n/** @type {?} */\nPlacesListComponent.prototype.selectedDataIndex;\n/** @type {?} */\nPlacesListComponent.prototype.recentSearchData;\n/** @type {?} */\nPlacesListComponent.prototype.userSelectedOption;\n/** @type {?} */\nPlacesListComponent.prototype.defaultSettings;\n/** @type {?} */\nPlacesListComponent.prototype.platformId;\n/** @type {?} */\nPlacesListComponent.prototype._elmRef;\n/** @type {?} */\nPlacesListComponent.prototype._global;\n/** @type {?} */\nPlacesListComponent.prototype._googlePlacesService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { PlacesListComponent } from './places.component';\nimport { GooglePlacesService } from './places.service';\nimport { NovoListModule } from '../list/List.module';\nexport class GooglePlacesModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [PlacesListComponent],\n  imports: [CommonModule, HttpClientModule, FormsModule, NovoListModule],\n  exports: [PlacesListComponent],\n  providers: [GooglePlacesService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GooglePlacesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nGooglePlacesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGooglePlacesModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n// APP\n\nimport { NovoPipesModule } from './pipes/Pipes.module';\nimport { NovoButtonModule } from './elements/button/Button.module';\nimport { NovoAceEditorModule } from './elements/ace-editor/AceEditor.module';\nimport { NovoLoadingModule } from './elements/loading/Loading.module';\nimport { NovoCardModule } from './elements/card/Card.module';\nimport { NovoCalendarModule } from './elements/calendar/Calendar.module';\nimport { NovoToastModule } from './elements/toast/Toast.module';\nimport { NovoTooltipModule } from './elements/tooltip/Tooltip.module';\nimport { NovoHeaderModule } from './elements/header/Header.module';\nimport { NovoTabModule } from './elements/tabs/Tabs.module';\nimport { NovoTilesModule } from './elements/tiles/Tiles.module';\nimport { NovoModalModule } from './elements/modal/Modal.module';\nimport { NovoQuickNoteModule } from './elements/quick-note/QuickNote.module';\nimport { NovoRadioModule } from './elements/radio/Radio.module';\nimport { NovoDropdownModule } from './elements/dropdown/Dropdown.module';\nimport { NovoSelectModule } from './elements/select/Select.module';\nimport { NovoListModule } from './elements/list/List.module';\nimport { NovoSwitchModule } from './elements/switch/Switch.module';\nimport { NovoDragulaModule } from './elements/dragula/Dragula.module';\nimport { NovoSliderModule } from './elements/slider/Slider.module';\nimport { NovoPickerModule } from './elements/picker/Picker.module';\nimport { NovoChipsModule } from './elements/chips/Chips.module';\nimport { NovoDatePickerModule } from './elements/date-picker/DatePicker.module';\nimport { NovoTimePickerModule } from './elements/time-picker/TimePicker.module';\nimport { NovoDateTimePickerModule } from './elements/date-time-picker/DateTimePicker.module';\nimport { NovoNovoCKEditorModule } from './elements/ckeditor/CKEditor.module';\nimport { NovoTipWellModule } from './elements/tip-well/TipWell.module';\nimport { NovoTableModule } from './elements/table/Table.module';\nimport { NovoTableExtrasModule } from './elements/table/extras/TableExtras.module';\nimport { NovoFormModule } from './elements/form/Form.module';\nimport { NovoFormExtrasModule } from './elements/form/extras/FormExtras.module';\nimport { NovoCategoryDropdownModule } from './elements/category-dropdown/CategoryDropdown.module';\nimport { NovoMultiPickerModule } from './elements/multi-picker/MultiPicker.module';\nimport { NovoPopOverModule } from './elements/popover/PopOver.module';\nimport { NovoSearchBoxModule } from './elements/search/SearchBox.module';\nimport { GooglePlacesModule } from './elements/places/places.module';\nimport { NovoValueModule } from './elements/value/Value.module';\nimport { NovoDataTableModule } from './elements/data-table/data-table.module';\nimport { NovoSimpleTableModule } from './elements/simple-table/simple-table.module';\nimport { NovoIconModule } from './elements/icon/Icon.module';\nimport { NovoExpansionModule } from './elements/expansion/expansion.module';\nimport { NovoStepperModule } from './elements/stepper/stepper.module';\nimport { UnlessModule } from './elements/unless/Unless.module';\nimport { NovoOverlayModule } from './elements/overlay/Overlay.module';\nimport { DateFormatService } from './services/date-format/DateFormat';\nimport { NovoLabelService } from './services/novo-label-service';\nimport { NovoDragulaService } from './elements/dragula/DragulaService';\nimport { GooglePlacesService } from './elements/places/places.service';\nimport { GlobalRef, BrowserGlobalRef } from './services/global/global.service';\nimport { LocalStorageService } from './services/storage/storage.service';\nimport { ComponentUtils } from './utils/component-utils/ComponentUtils';\nimport { FormUtils } from './utils/form-utils/FormUtils';\nimport { OptionsService } from './services/options/OptionsService';\n\nimport { NovoCommonModule } from './elements/common/common.module';\nexport class NovoElementsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [ReactiveFormsModule],\n  exports: [\n    NovoPipesModule,\n    NovoButtonModule,\n    NovoLoadingModule,\n    NovoCardModule,\n    NovoCalendarModule,\n    NovoToastModule,\n    NovoTooltipModule,\n    NovoHeaderModule,\n    NovoTabModule,\n    NovoTilesModule,\n    NovoModalModule,\n    NovoQuickNoteModule,\n    NovoRadioModule,\n    NovoDropdownModule,\n    NovoSelectModule,\n    NovoListModule,\n    NovoSwitchModule,\n    NovoDragulaModule,\n    NovoSliderModule,\n    NovoPickerModule,\n    NovoChipsModule,\n    NovoDatePickerModule,\n    NovoTimePickerModule,\n    NovoDateTimePickerModule,\n    NovoNovoCKEditorModule,\n    NovoTipWellModule,\n    NovoTableModule,\n    NovoTableExtrasModule,\n    NovoFormModule,\n    NovoFormExtrasModule,\n    NovoCategoryDropdownModule,\n    NovoMultiPickerModule,\n    NovoPopOverModule,\n    NovoDataTableModule,\n    NovoSimpleTableModule,\n    NovoSearchBoxModule,\n    NovoOverlayModule,\n    GooglePlacesModule,\n    NovoValueModule,\n    NovoAceEditorModule,\n    NovoIconModule,\n    NovoExpansionModule,\n    UnlessModule,\n    NovoCommonModule,\n    NovoStepperModule,\n    ScrollDispatchModule,\n  ],\n  providers: [\n    { provide: ComponentUtils, useClass: ComponentUtils },\n    { provide: DateFormatService, useClass: DateFormatService },\n    { provide: NovoLabelService, useClass: NovoLabelService },\n    { provide: NovoDragulaService, useClass: NovoDragulaService },\n    { provide: GooglePlacesService, useClass: GooglePlacesService },\n    { provide: GlobalRef, useClass: BrowserGlobalRef },\n    { provide: LocalStorageService, useClass: LocalStorageService },\n    { provide: OptionsService, useClass: OptionsService },\n    { provide: FormUtils, useClass: FormUtils },\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoElementsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoElementsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoElementsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Helpers {\n/**\n * Swallows an event to stop further execution\n * @param {?} event\n * @return {?}\n */\nstatic swallowEvent(event) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n/**\n * @param {?} str\n * @param {?} props\n * @return {?}\n */\nstatic interpolate(str: string, props: any): string {\n    return str.replace(/\\$([\\w\\.]+)/g, (original, key) => {\n      let /** @type {?} */ keys = key.split('.');\n      let /** @type {?} */ value = props[keys.shift()];\n      while (keys.length && value !== undefined) {\n        let /** @type {?} */ k = keys.shift();\n        value = k ? value[k] : `${value}.`;\n      }\n      return value !== undefined ? value : '';\n    });\n  }\n/**\n * @param {?} formatString\n * @param {?} data\n * @return {?}\n */\nstatic interpolateWithFallback(formatString: string | string[], data: any): string {\n    // Format string can be an array, it will attempt to interpolate each item\n    // in the array, if there is a failure to replace it will mark it as such\n    // It will either return the first successful replacement of ALL variables,\n    // or an empty string\n    if (Array.isArray(formatString)) {\n      let /** @type {?} */ successes: string[] = [];\n      let /** @type {?} */ failures: string[] = [];\n      formatString.forEach((format: string) => {\n        let /** @type {?} */ isSuccess: boolean = true;\n        let /** @type {?} */ attempt = format.replace(/\\$([\\w\\.]+)/g, (original, key) => {\n          let /** @type {?} */ keys = key.split('.');\n          let /** @type {?} */ value = data[keys.shift()];\n          while (keys.length && value !== undefined) {\n            let /** @type {?} */ k = keys.shift();\n            value = k ? value[k] : `${value}.`;\n          }\n          if (isSuccess && Helpers.isEmpty(value)) {\n            isSuccess = false;\n          }\n          return Helpers.isEmpty(value) ? '' : value;\n        });\n        if (isSuccess) {\n          successes.push(attempt);\n        } else {\n          failures.push(attempt);\n        }\n      });\n      if (successes.length !== 0) {\n        return successes[0];\n      }\n      return '';\n    } else {\n      return Helpers.interpolate(formatString, data);\n    }\n  }\n/**\n * Verifies that an object has every property expected by a string to interpolate\n * @param {?} str\n * @param {?} props\n * @return {?}\n */\nstatic validateInterpolationProps(str, props) {\n    let /** @type {?} */ keys = str.match(/\\$([\\w\\.]+)/g);\n    return keys.every((key) => {\n      return props.hasOwnProperty(key.substr(1));\n    });\n  }\n/**\n * @param {?} item\n * @return {?}\n */\nstatic isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item) && item !== null;\n  }\n/**\n * Checks to see if the object is a string\n * @param {?} obj\n * @return {?}\n */\nstatic isString(obj: any) {\n    return typeof obj === 'string';\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nstatic isNumber(obj: any) {\n    return obj && !isNaN(parseInt(obj, 10));\n  }\n/**\n * Checks to see if the object is a undefined or null\n * @param {?} obj\n * @return {?}\n */\nstatic isBlank(obj: any): boolean {\n    return obj === undefined || obj === null;\n  }\n/**\n * Checks to see if the object is a undefined or null\n * @param {?} obj\n * @return {?}\n */\nstatic isEmpty(obj: any): boolean {\n    return Helpers.isBlank(obj) || obj === '' || (Array.isArray(obj) && obj.length === 0);\n  }\n/**\n * Checks to see if the object is a function\n * @param {?} obj\n * @return {?}\n */\nstatic isFunction(obj: any): boolean {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  }\n/**\n * Checks to see if the object is a Date\n * @param {?} obj\n * @return {?}\n */\nstatic isDate(obj: any) {\n    return obj instanceof Date;\n  }\n/**\n * @param {?} fields\n * @param {?=} reverse\n * @return {?}\n */\nstatic sortByField(fields: any, reverse = false) {\n    return (previous: any, current: any) => {\n      if (Helpers.isFunction(fields)) {\n        return fields(reverse ? 'desc' : 'asc', previous, current);\n      }\n      if (!Array.isArray(fields)) {\n        fields = [fields];\n      }\n      for (let /** @type {?} */ i = 0; i < fields.length; i++) {\n        let /** @type {?} */ field: string = fields[i];\n        let /** @type {?} */ first = previous[field] || '';\n        let /** @type {?} */ second = current[field] || '';\n\n        if (Helpers.isDate(first) && Helpers.isDate(second)) {\n          // Dates\n          first = first.getTime();\n          second = second.getTime();\n        } else if (Helpers.isString(first) && Helpers.isString(second)) {\n          // Basic strings\n          first = first.toLowerCase();\n          second = second.toLowerCase();\n        } else {\n          // Numbers\n          first = isNaN(Number(first)) ? first : Number(first);\n          second = isNaN(Number(second)) ? second : Number(second);\n        }\n\n        if (first > second) {\n          return reverse ? -1 : 1;\n        } else if (first < second) {\n          return reverse ? 1 : -1;\n        }\n      }\n      return 0;\n    };\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nstatic filterByField(key, value) {\n    return (item) => {\n      let /** @type {?} */ results = [];\n      let /** @type {?} */ field = can(item).have(key);\n      if (value instanceof Function) {\n        results.push(value(field, item));\n      } else if (Array.isArray(value)) {\n        results.push(value.includes(field));\n      } else if (value instanceof Object) {\n        if (field instanceof Date) {\n          field = field.getTime();\n        }\n        if (value.min) {\n          results.push(field >= value.min);\n        }\n        if (value.max) {\n          results.push(field <= value.max);\n        }\n        if (value.any && Array.isArray(value.any)) {\n          if (Array.isArray(field)) {\n            results.push(value.any.some((v) => field.includes(v)));\n          } else {\n            results.push(value.any.includes(field));\n          }\n        }\n        if (value.all && Array.isArray(value.all)) {\n          results.push(value.all.every((v) => field.includes(v)));\n        }\n        if (value.not) {\n          results.push(!Helpers.filterByField(key, value.not)(item));\n        }\n        for (let /** @type {?} */ subkey in value) {\n          if (['min', 'max', 'any', 'all', 'not'].indexOf(subkey) < 0) {\n            let /** @type {?} */ subvalue = value[subkey];\n            results.push(Helpers.filterByField(`${key}.${subkey}`, subvalue)(item));\n          }\n        }\n      } else {\n        results.push(JSON.stringify(field).match(new RegExp(value, 'gi')));\n      }\n      return results.every((x) => x);\n    };\n  }\n/**\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nstatic findAncestor(element: Element, selector: string): Element {\n    while ((element = element.parentElement) && !element.matches.call(element, selector)) ; // tslint:disable-line\n    return element;\n  }\n/**\n * @param {?} item\n * @return {?}\n */\nstatic deepClone(item: any): any {\n    if (Array.isArray(item)) {\n      let /** @type {?} */ newArr = [];\n      for (let /** @type {?} */ i = item.length; i-- > 0;) {\n        // tslint:disable-line\n        newArr[i] = Helpers.deepClone(item[i]);\n      }\n      return newArr;\n    }\n    if (typeof item === 'function' && !/\\(\\) \\{ \\[native/.test(item.toString())) {\n      let /** @type {?} */ obj;\n      eval('obj = ' + item.toString()); // tslint:disable-line\n      for (let /** @type {?} */ k in item) {\n        if (k in item) {\n          obj[k] = Helpers.deepClone(item[k]);\n        }\n      }\n      return obj;\n    }\n    if (item && typeof item === 'object') {\n      let /** @type {?} */ obj = {};\n      for (let /** @type {?} */ k in item) {\n        if (k in item) {\n          obj[k] = Helpers.deepClone(item[k]);\n        }\n      }\n      return obj;\n    }\n    return item;\n  }\n/**\n * @param {...?} objs\n * @return {?}\n */\nstatic deepAssign(...objs) {\n    if (objs.length < 2) {\n      throw new Error('Need two or more objects to merge');\n    }\n    const /** @type {?} */ target = Object.assign({}, objs[0]);\n    for (let /** @type {?} */ i = 1; i < objs.length; i++) {\n      const /** @type {?} */ source = Object.assign({}, objs[i]);\n      Object.keys(source).forEach((prop) => {\n        const /** @type {?} */ value = source[prop];\n        if (Helpers.isObject(value)) {\n          if (target.hasOwnProperty(prop) && Helpers.isObject(target[prop])) {\n            target[prop] = Helpers.deepAssign(target[prop], value);\n          } else {\n            target[prop] = value;\n          }\n        } else if (Array.isArray(value)) {\n          if (target.hasOwnProperty(prop) && Array.isArray(target[prop])) {\n            const /** @type {?} */ targetArray = target[prop];\n            value.forEach((sourceItem, itemIndex) => {\n              if (itemIndex < targetArray.length) {\n                const /** @type {?} */ targetItem = targetArray[itemIndex];\n                if (Object.is(targetItem, sourceItem)) {\n                  return;\n                }\n                if (Helpers.isObject(targetItem) && Helpers.isObject(sourceItem)) {\n                  targetArray[itemIndex] = Helpers.deepAssign(targetItem, sourceItem);\n                } else if (Array.isArray(targetItem) && Array.isArray(sourceItem)) {\n                  targetArray[itemIndex] = Helpers.deepAssign(targetItem, sourceItem);\n                } else {\n                  targetArray[itemIndex] = sourceItem;\n                }\n              } else {\n                targetArray.push(sourceItem);\n              }\n            });\n          } else {\n            target[prop] = value;\n          }\n        } else {\n          target[prop] = value;\n        }\n      });\n    }\n\n    return target;\n  }\n/**\n * Workaround for Edge browser since Element:nextElementSibling is undefined inside of template directives\n * @param {?} element any document element\n * @return {?} the next sibling node that is of type: Element\n */\nstatic getNextElementSibling(element: Element): Node {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    } else {\n      let /** @type {?} */ e = element.nextSibling;\n      while (e && 1 !== e.nodeType) {\n        e = e.nextSibling;\n      }\n      return e;\n    }\n  }\n}\nexport class Can {\n  obj: Object;\n/**\n * @param {?} obj\n */\nconstructor(obj: Object) {\n    this.obj = obj;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nhave(key: string): any {\n    let /** @type {?} */ props = key.split('.');\n    let /** @type {?} */ item: any = this.obj;\n    for (let /** @type {?} */ i = 0; i < props.length; i++) {\n      item = item[props[i]];\n      if (this.check(item) === false) {\n        return item;\n      }\n    }\n    return item;\n  }\n/**\n * @param {?} thing\n * @return {?}\n */\ncheck(thing: any): boolean {\n    return thing !== void 0;\n  }\n}\n\nfunction Can_tsickle_Closure_declarations() {\n/** @type {?} */\nCan.prototype.obj;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function can(obj) {\n  return new Can(obj);\n}\n","// NG2\n\nimport { Component, EventEmitter, Output, ElementRef, Input, forwardRef, OnInit, OnDestroy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// Vendor\n\nimport'brace/index';\nimport'brace/theme/chrome';\nimport'brace/mode/javascript';\nimport'brace/ext/language_tools.js';\n// APP\n\nimport { Helpers } from '../../utils/Helpers';\n\ndeclare var ace: any;\n\nconst /** @type {?} */ ACE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NovoAceEditor),\n    multi: true\n};\nexport class NovoAceEditor implements ControlValueAccessor, OnInit, OnDestroy {\n/**\n * @param {?} theme\n * @return {?}\n */\nset theme(theme: any) {\n        this.setTheme(theme);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nset options(options: any) {\n        this.setOptions(options);\n    }\n/**\n * @param {?} mode\n * @return {?}\n */\nset mode(mode: any) {\n        this.setMode(mode);\n    }\n\n     name: string;\n     blur = new EventEmitter();\n     focus = new EventEmitter();\nprivate _options: any = {\n        showPrintMargin: false,\n        displayIndentGuides: true,\n    };\nprivate _theme: string = 'chrome';\nprivate _mode: string = 'javascript';\nprivate text: string = '';\nprivate oldText: string;\nprivate editor: any;\nprivate onChange = (_: any) => { };\nprivate onTouched = () => { };\n/**\n * @param {?} elementRef\n */\nconstructor(private elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.editor) {\n            this.editor.destroy();\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.initializeEditor();\n        this.initializeOptions();\n        this.initializeEvents();\n    }\n/**\n * @return {?}\n */\nprivate initializeEditor() {\n        let /** @type {?} */ el = this.elementRef.nativeElement;\n        this.editor = ace.edit(el);\n        this.editor.$blockScrolling = Infinity;\n    }\n/**\n * @return {?}\n */\nprivate initializeOptions() {\n        this.setOptions(this._options || {});\n        this.setTheme(this._theme);\n        this.setMode(this._mode);\n    }\n/**\n * @return {?}\n */\nprivate initializeEvents() {\n        this.editor.on('focus', (event) => this.focus.emit(event));\n        this.editor.on('blur', (event) => this.focus.emit(event));\n        this.editor.on('change', () => this.updateText());\n        this.editor.on('paste', () => this.updateText());\n    }\n/**\n * @return {?}\n */\nprivate updateText() {\n        let /** @type {?} */ newVal = this.editor.getValue(), /** @type {?} */ that = this;\n\n        if (newVal === this.oldText) {\n            return;\n        }\n\n        this.text = newVal;\n        this.onChange(newVal);\n        this.oldText = newVal;\n    }\n/**\n * @param {?} text\n * @return {?}\n */\nprivate setText(text: string) {\n        if (Helpers.isBlank(text)) {\n            text = '';\n        }\n        if (this.text !== text) {\n            this.text = text;\n            this.editor.setValue(text);\n            this.onChange(text);\n            this.editor.clearSelection();\n        }\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nprivate setOptions(options: any) {\n        this._options = options;\n        this.editor.setOptions(options || {});\n    }\n/**\n * @param {?} theme\n * @return {?}\n */\nprivate setTheme(theme: string) {\n        this._theme = theme;\n        this.editor.setTheme(`ace/theme/${theme}`);\n    }\n/**\n * @param {?} mode\n * @return {?}\n */\nprivate setMode(mode: any) {\n        this._mode = mode;\n        this.editor.getSession().setMode(`ace/mode/${this._mode}`);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n        this.setText(value);\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-ace-editor',\n    template: '',\n    providers: [ACE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'options': [{ type: Input },],\n'mode': [{ type: Input },],\n'name': [{ type: Input },],\n'blur': [{ type: Output },],\n'focus': [{ type: Output },],\n};\n}\n\nfunction NovoAceEditor_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoAceEditor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoAceEditor.ctorParameters;\n/** @type {?} */\nNovoAceEditor.propDecorators;\n/** @type {?} */\nNovoAceEditor.prototype.name;\n/** @type {?} */\nNovoAceEditor.prototype.blur;\n/** @type {?} */\nNovoAceEditor.prototype.focus;\n/** @type {?} */\nNovoAceEditor.prototype._options;\n/** @type {?} */\nNovoAceEditor.prototype._theme;\n/** @type {?} */\nNovoAceEditor.prototype._mode;\n/** @type {?} */\nNovoAceEditor.prototype.text;\n/** @type {?} */\nNovoAceEditor.prototype.oldText;\n/** @type {?} */\nNovoAceEditor.prototype.editor;\n/** @type {?} */\nNovoAceEditor.prototype.onChange;\n/** @type {?} */\nNovoAceEditor.prototype.onTouched;\n/** @type {?} */\nNovoAceEditor.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoAceEditor } from './AceEditor';\nexport class NovoAceEditorModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NovoAceEditor],\n    exports: [NovoAceEditor]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoAceEditorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoAceEditorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoAceEditorModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n// Rule storage - pluralize and singularize need to be run sequentially,\n// while other rules can be optimized using an object for instant lookups.\nlet /** @type {?} */ pluralRules = [];\nlet /** @type {?} */ singularRules = [];\nlet /** @type {?} */ uncountables = {};\nlet /** @type {?} */ irregularPlurals = {};\nlet /** @type {?} */ irregularSingles = {};\n/**\n * Title case a string.\n * @param {?} str\n * @return {?}\n */\nfunction toTitleCase(str) {\n    return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n}\n/**\n * Sanitize a pluralization rule to a usable regular expression.\n * @param {?} rule\n * @return {?}\n */\nfunction sanitizeRule(rule) {\n    if (typeof rule === 'string') {\n        return new RegExp('^' + rule + '$', 'i');\n    }\n    return rule;\n}\n/**\n * Pass in a word token to produce a function that can replicate the case on\n * another word.\n * @param {?} word\n * @param {?} token\n * @return {?}\n */\nfunction restoreCase(word, token) {\n    // Upper cased words. E.g. \"HELLO\".\n    if (word === word.toUpperCase()) {\n        return token.toUpperCase();\n    }\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n        return toTitleCase(token);\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n}\n/**\n * Interpolate a regexp string.\n * @param {?} str\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, (match, index) => {\n        return args[index] || '';\n    });\n}\n/**\n * Sanitize a word by passing in the word and sanitization rules.\n * @param {?} token\n * @param {?} word\n * @param {?} collection\n * @return {?}\n */\nfunction sanitizeWord(token, word, collection) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n        return word;\n    }\n\n    let /** @type {?} */ len = collection.length;\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n        let /** @type {?} */ rule = collection[len];\n        // If the rule passes, return the replacement.\n        if (rule[0].test(word)) {\n            return word.replace(rule[0], (match, index, words) => {\n                let /** @type {?} */ result = interpolate(rule[1], [match, index, words]);\n                if (match === '') {\n                    return restoreCase(words[index - 1], result);\n                }\n                return restoreCase(match, result);\n            });\n        }\n    }\n    return word;\n}\n/**\n * Replace a word with the updated word.\n * @param {?} replaceMap\n * @param {?} keepMap\n * @param {?} rules\n * @return {?}\n */\nfunction replaceWord(replaceMap, keepMap, rules) {\n    return (word) => {\n        // Get the correct token and case restoration functions.\n        let /** @type {?} */ token = word.toLowerCase();\n\n        // Check against the keep object map.\n        if (keepMap.hasOwnProperty(token)) {\n            return restoreCase(word, token);\n        }\n\n        // Check against the replacement map for a direct word replacement.\n        if (replaceMap.hasOwnProperty(token)) {\n            return restoreCase(word, replaceMap[token]);\n        }\n\n        // Run all the rules against the word.\n        return sanitizeWord(token, word, rules);\n    };\n}\nclass Pluralize {\n/**\n * @param {?} word\n * @param {?=} count\n * @param {?=} inclusive\n * @return {?}\n */\nstatic pluralize(word, count = 1, inclusive?) {\n        let /** @type {?} */ pluralized = count === 1 ? Pluralize.singular(word) : Pluralize.plural(word);\n        return (inclusive ? `${count} ` : '') + pluralized;\n    }\n/**\n * @param {?} word\n * @return {?}\n */\nstatic singular(word) {\n        return replaceWord(irregularSingles, irregularPlurals, pluralRules)(word);\n    }\n/**\n * @param {?} word\n * @return {?}\n */\nstatic plural(word) {\n        return replaceWord(irregularPlurals, irregularSingles, singularRules)(word);\n    }\n/**\n * @param {?} rule\n * @param {?} replacement\n * @return {?}\n */\nstatic addPluralRule(rule, replacement) {\n        pluralRules.push([sanitizeRule(rule), replacement]);\n    }\n/**\n * @param {?} rule\n * @param {?} replacement\n * @return {?}\n */\nstatic addSingularRule(rule, replacement) {\n        singularRules.push([sanitizeRule(rule), replacement]);\n    }\n/**\n * @param {?} word\n * @return {?}\n */\nstatic addUncountableRule(word) {\n        if (typeof word === 'string') {\n            uncountables[word.toLowerCase()] = true;\n            return;\n        }\n\n        // Set singular and plural references for the word.\n        Pluralize.addPluralRule(word, '$0');\n        Pluralize.addSingularRule(word, '$0');\n    }\n/**\n * @param {?} single\n * @param {?} plural\n * @return {?}\n */\nstatic addIrregularRule(single, plural) {\n        let /** @type {?} */ one = plural.toLowerCase();\n        let /** @type {?} */ many = single.toLowerCase();\n\n        irregularSingles[one] = many;\n        irregularPlurals[many] = one;\n    };\n}\n\n/**\n * Irregular rules.\n */\n[\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['thief', 'thieves'],\n    ['genie', 'genies'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['whiskey', 'whiskies']\n].forEach((rule) => {\n    return Pluralize.addIrregularRule(rule[0], rule[1]);\n});\n\n/**\n * Pluralization rules.\n */\n[\n    [/s?$/i, 's'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n].forEach((rule) => {\n    return Pluralize.addPluralRule(rule[0], rule[1]);\n});\n\n/**\n * Singularization rules.\n */\n[\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(?:sis|ses)$/i, '$1sis'],\n    [/(^analy)(?:sis|ses)$/i, '$1sis'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/([^aeiouy]|qu)ies$/i, '$1y'],\n    [/(^[pl]|zomb|^(?:neck)?t|[aeo][lt]|cut)ies$/i, '$1ie'],\n    [/(\\b(?:mon|smil))ies$/i, '$1ey'],\n    [/(m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n    [/(e[mn]u)s?$/i, '$1'],\n    [/(movie|twelve)s$/i, '$1'],\n    [/(cris|test|diagnos)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n].forEach((rule) => {\n    return Pluralize.addSingularRule(rule[0], rule[1]);\n});\n\n/**\n * Uncountable rules.\n */\n[\n    // Singular words with no plurals.\n    'advice',\n    'adulthood',\n    'agenda',\n    'aid',\n    'alcohol',\n    'ammo',\n    'athletics',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'commerce',\n    'cod',\n    'cooperation',\n    'corps',\n    'digestion',\n    'debris',\n    'diabetes',\n    'energy',\n    'equipment',\n    'elk',\n    'excretion',\n    'expertise',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'news',\n    'pike',\n    'plankton',\n    'pliers',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'species',\n    'staff',\n    'swine',\n    'trout',\n    'traffic',\n    'transporation',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    // Regexes.\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /ois$/i,\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /sheep$/i,\n    /measles$/i,\n    /[^aeiou]ese$/i // \"chinese\", \"japanese\"\n].forEach(Pluralize.addUncountableRule);\nexport class PluralPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value) {\n        return Pluralize.pluralize(value);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'plural' }, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PluralPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nPluralPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPluralPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n// App\n\nimport { Helpers } from '../../utils/Helpers';\nexport class DecodeURIPipe implements PipeTransform {\n/**\n * @param {?} encodedString\n * @return {?}\n */\ntransform(encodedString: string): string {\n        let /** @type {?} */ decodedString: string = '';\n        if (!Helpers.isBlank(encodedString) && typeof encodedString === 'string') {\n            decodedString = decodeURIComponent(encodedString);\n        }\n        return decodedString;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'decodeURI' }, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DecodeURIPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDecodeURIPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecodeURIPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Helpers, can } from '../../utils/Helpers';\nexport class GroupByPipe implements PipeTransform {\n/**\n * @param {?} input\n * @param {?} prop\n * @return {?}\n */\ntransform(input: any, prop: string): Array<any> {\n\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    const /** @type {?} */ arr: { [key: string]: Array<any> } = {};\n\n    for (const /** @type {?} */ value of input) {\n      const /** @type {?} */ field: any = can(value).have(prop);\n      if (Helpers.isBlank(arr[field])) {\n        arr[field] = [];\n      }\n\n      arr[field].push(value);\n    }\n\n    return Object.keys(arr).map(key => ({ key, 'value': arr[key] }));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'groupBy'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GroupByPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nGroupByPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGroupByPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\n// APP\n\nimport { PluralPipe } from './plural/Plural';\nimport { DecodeURIPipe } from './decode-uri/DecodeURI';\nimport { GroupByPipe } from './group-by/GroupBy';\nexport class NovoPipesModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [PluralPipe, DecodeURIPipe, GroupByPipe],\n    exports: [PluralPipe, DecodeURIPipe, GroupByPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoPipesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoPipesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoPipesModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nexport class NovoButtonElement {\n   color: string;\n   side: string = 'right';\n   theme: string;\n   loading: boolean;\n/**\n * @param {?} icon\n * @return {?}\n */\nset icon(icon: string) {\n    this._icon = `bhi-${icon}`;\n  }\n/**\n * @return {?}\n */\nget icon(): string {\n    return this._icon;\n  }\nprivate _icon: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'button[theme]',\n  host: {\n    '[attr.theme]': 'theme',\n    '[attr.color]': 'color',\n    '[attr.icon]': 'icon',\n    '[attr.loading]': 'loading',\n    '[attr.side]': 'side',\n  },\n  template: `\n        <div class=\"flex-wrapper\">\n            <!--Left Icon-->\n            <i *ngIf=\"icon && side === 'left' && !loading\" [ngClass]=\"icon\"></i>\n            <!--Transcluded Content-->\n            <ng-content></ng-content>\n            <!--Right Icon-->\n            <i *ngIf=\"icon && side === 'right' && !loading\" [ngClass]=\"icon\"></i>\n            <!--Loading-->\n            <i *ngIf=\"loading\" class=\"loading\">\n                <svg version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                    x=\"0px\" y=\"0px\" width=\"18.2px\" height=\"18.5px\" viewBox=\"0 0 18.2 18.5\" style=\"enable-background:new 0 0 18.2 18.5;\"\n                    xml:space=\"preserve\">\n                <style type=\"text/css\">\n                    .spinner { fill:#FFFFFF; }\n                </style>\n                    <path class=\"spinner\" d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                        c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                        c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"/>\n                </svg>\n            </i>\n        </div>\n    `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'side': [{ type: Input },],\n'theme': [{ type: Input },],\n'loading': [{ type: Input },],\n'icon': [{ type: Input },],\n};\n}\n\nfunction NovoButtonElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoButtonElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoButtonElement.ctorParameters;\n/** @type {?} */\nNovoButtonElement.propDecorators;\n/** @type {?} */\nNovoButtonElement.prototype.color;\n/** @type {?} */\nNovoButtonElement.prototype.side;\n/** @type {?} */\nNovoButtonElement.prototype.theme;\n/** @type {?} */\nNovoButtonElement.prototype.loading;\n/** @type {?} */\nNovoButtonElement.prototype._icon;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoButtonElement } from './Button';\nexport class NovoButtonModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NovoButtonElement],\n    exports: [NovoButtonElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input } from '@angular/core';\nexport class NovoLoadingElement {\n     theme: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-loading',\n    host: {\n        '[class]': 'theme || \"\"'\n    },\n    template: `\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n        <span class=\"dot\"></span>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n};\n}\n\nfunction NovoLoadingElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoLoadingElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoLoadingElement.ctorParameters;\n/** @type {?} */\nNovoLoadingElement.propDecorators;\n/** @type {?} */\nNovoLoadingElement.prototype.theme;\n}\n\nexport class NovoSpinnerElement {\n     theme: string;\n     inverse: boolean;\n     baseHref: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-spinner',\n    template: `\n        <svg class=\"bullhornSpinner\" [ngClass]=\"theme\" height=\"100\" width=\"100\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.inverse]=\"inverse\">\n            <title>Bullhorn Spinner Animation</title>\n            <desc>Spinner animation indicating loading</desc>\n            <defs>\n                <style>\n                    .bullhornSpinner g.circleGroup {\n                        -webkit-filter: url(\"{{baseHref || ''}}#gooEffect\");\n                        filter: url(\"{{baseHref || ''}}#gooEffect\");\n                    }\n                    _:-webkit-full-screen:not(:root:root), .bullhornSpinner g.circleGroup {\n                        -webkit-filter: none;\n                        filter: none;\n                    }\n                    @supports (-webkit-text-size-adjust:none) and (not (-ms-accelerator:true)) and (not (-moz-appearance:none)) {\n                        .bullhornSpinner g.circleGroup {\n                            -webkit-filter: none;\n                            filter: none;\n                        }\n                    }\n                    @supports (-webkit-text-size-adjust:none) and (not (-ms-accelerator:true)) and (not (-moz-appearance:none)) {\n                        .bullhornSpinner g.circleGroup {\n                            -webkit-filter: none;\n                            filter: none;\n                        }\n                    }\n                </style>\n                <filter id=\"gooEffect\">\n                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"5\" result=\"blur\" />\n                    <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"\n                            1.3 0 0 0 0\n                            0 1.3 0 0 0\n                            0 0 1.3 0 0\n                            0 0 0 19 -7\" result=\"gooEffect\" />\n                    <feComposite in=\"SourceGraphic\" in2=\"gooEffect\" operator=\"atop\" />\n                </filter>\n            </defs>\n            <path d=\"M 43 43 L 54 45 L 80 40 L 43 43\" stroke=\"none\" fill=\"none\" id=\"firstLinePath\"/>\n            <path d=\"M 43 43 L 48 41 L 48 18 L 43 43\" stroke=\"none\" fill=\"none\" id=\"secondLinePath\"/>\n            <path d=\"M 43 43 L 42 45 L 15 40 L 43 43\" stroke=\"none\" fill=\"none\" id=\"thirdLinePath\"/>\n            <path d=\"M 43 43 L 44 52 L 29 78 L 43 43\" stroke=\"none\" fill=\"none\" id=\"fourthLinePath\"/>\n            <path d=\"M 43 43 L 52 52 L 68 78 L 43 43\" stroke=\"none\" fill=\"none\" id=\"fifthLinePath\"/>\n            <g class=\"circleGroup\" transform=\"translate(7, 7)\">\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#firstLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#secondLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#thirdLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#fourthLinePath\"/>\n                    </animateMotion>\n                </circle>\n                <circle r=\"6\" cx=\"0\" cy=\"0\">\n                    <!-- Define the motion path animation -->\n                    <animateMotion dur=\"3.4\" repeatCount=\"indefinite\">\n                        <mpath xlink:href=\"#fifthLinePath\"/>\n                    </animateMotion>\n                </circle>\n            </g>\n        </svg>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'inverse': [{ type: Input },],\n'baseHref': [{ type: Input },],\n};\n}\n\nfunction NovoSpinnerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSpinnerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSpinnerElement.ctorParameters;\n/** @type {?} */\nNovoSpinnerElement.propDecorators;\n/** @type {?} */\nNovoSpinnerElement.prototype.theme;\n/** @type {?} */\nNovoSpinnerElement.prototype.inverse;\n/** @type {?} */\nNovoSpinnerElement.prototype.baseHref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoLoadingElement, NovoSpinnerElement } from './Loading';\nexport class NovoLoadingModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NovoLoadingElement, NovoSpinnerElement],\n    exports: [NovoLoadingElement, NovoSpinnerElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoLoadingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoLoadingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoLoadingModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, Input, HostListener, OnDestroy, ViewChild, Component, ViewContainerRef } from '@angular/core';\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nexport class NovoTooltip {\npublic message: string;\npublic hidden: boolean;\npublic tooltipType: string;\npublic rounded: boolean;\npublic size: string;\npublic positionStrategy: any;\npublic preline: boolean;\npublic noAnimate: boolean;\npublic position: string;\n/**\n * @param {?} overlay\n * @param {?} containerRef\n */\nconstructor(private overlay: Overlay,\nprivate containerRef: ViewContainerRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-tooltip',\n  template: `<div [@state]=\"noAnimate ? 'no-animation' : 'visible'\" \n  [ngClass]=\"[tooltipType, this.rounded ? 'rounded' : '', size ? size : '', this.preline? 'preline' : '', position]\">{{message}}</div>`,\n  styles: [`\n    novo-tooltip div {\n      background: #383838;\n      color: #fff;\n      padding: 8px 10px;\n      font-size: 12px;\n      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      line-height: 12px;\n      white-space: nowrap;\n      text-shadow: 0 -1px 0 #000;\n      -webkit-box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n              box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3); }\n      novo-tooltip div.error {\n        background-color: #b34e4d;\n        text-shadow: 0 -1px 0 #592726; }\n      novo-tooltip div.info {\n        background-color: #3986ac;\n        text-shadow: 0 -1px 0 #1a3c4d; }\n      novo-tooltip div.warning {\n        background-color: #c09854;\n        text-shadow: 0 -1px 0 #6c5328; }\n      novo-tooltip div.success {\n        background-color: #458746;\n        text-shadow: 0 -1px 0 #1a321a; }\n      novo-tooltip div.rounded {\n        border-radius: 4px; }\n      novo-tooltip div.extra-large, novo-tooltip div.large, novo-tooltip div.small, novo-tooltip div.medium {\n        white-space: normal;\n        line-height: 1.4em;\n        word-wrap: break-word; }\n      novo-tooltip div.extra-large {\n        width: 400px;\n        font-size: 1.2vh; }\n      novo-tooltip div.large {\n        width: 300px; }\n      novo-tooltip div.medium {\n        width: 150px; }\n      novo-tooltip div.small {\n        width: 80px; }\n      novo-tooltip div.preline {\n        white-space: pre-line; }\n      novo-tooltip div.top:before {\n        margin-bottom: -11px;\n        left: calc(50% - 6px);\n        bottom: 0;\n        border-top-color: #383838; }\n      novo-tooltip div.top.error:before {\n        border-top-color: #b34e4d; }\n      novo-tooltip div.top.info:before {\n        border-top-color: #3986ac; }\n      novo-tooltip div.top.warning:before {\n        border-top-color: #c09854; }\n      novo-tooltip div.top.success:before {\n        border-top-color: #458746; }\n      novo-tooltip div.top-left:before {\n        border-top-color: #383838;\n        margin-right: 0;\n        margin-bottom: -11px;\n        right: 0;\n        bottom: 0; }\n      novo-tooltip div.top-left.error:before {\n        border-top-color: #b34e4d; }\n      novo-tooltip div.top-left.info:before {\n        border-top-color: #3986ac; }\n      novo-tooltip div.top-left.warning:before {\n        border-top-color: #c09854; }\n      novo-tooltip div.top-left.success:before {\n        border-top-color: #458746; }\n      novo-tooltip div.top-right:before {\n        border-top-color: #383838;\n        margin-left: 0;\n        margin-bottom: -11px;\n        left: 0;\n        bottom: 0; }\n      novo-tooltip div.top-right.error:before {\n        border-top-color: #b34e4d; }\n      novo-tooltip div.top-right.info:before {\n        border-top-color: #3986ac; }\n      novo-tooltip div.top-right.warning:before {\n        border-top-color: #c09854; }\n      novo-tooltip div.top-right.success:before {\n        border-top-color: #458746; }\n      novo-tooltip div.bottom:before {\n        margin-top: -11px;\n        left: calc(50% - 6px);\n        top: 0;\n        border-bottom-color: #383838; }\n      novo-tooltip div.bottom.error:before {\n        border-top-color: #b34e4d; }\n      novo-tooltip div.bottom.info:before {\n        border-top-color: #3986ac; }\n      novo-tooltip div.bottom.warning:before {\n        border-top-color: #c09854; }\n      novo-tooltip div.bottom.success:before {\n        border-top-color: #458746; }\n      novo-tooltip div.bottom-left:before {\n        border-bottom-color: #383838;\n        margin-right: 0;\n        margin-top: -11px;\n        right: 0;\n        top: 0; }\n      novo-tooltip div.bottom-left.error:before {\n        border-bottom-color: #b34e4d; }\n      novo-tooltip div.bottom-left.info:before {\n        border-bottom-color: #3986ac; }\n      novo-tooltip div.bottom-left.warning:before {\n        border-bottom-color: #c09854; }\n      novo-tooltip div.bottom-left.success:before {\n        border-bottom-color: #458746; }\n      novo-tooltip div.bottom-right:before {\n        border-bottom-color: #383838;\n        margin-left: 0;\n        margin-top: -11px;\n        left: 0;\n        top: 0; }\n      novo-tooltip div.bottom-right.error:before {\n        border-bottom-color: #b34e4d; }\n      novo-tooltip div.bottom-right.info:before {\n        border-bottom-color: #3986ac; }\n      novo-tooltip div.bottom-right.warning:before {\n        border-bottom-color: #c09854; }\n      novo-tooltip div.bottom-right.success:before {\n        border-bottom-color: #458746; }\n      novo-tooltip div.left:before {\n        border-left-color: #383838;\n        margin-right: -11px;\n        margin-bottom: -6px;\n        right: 0;\n        bottom: 50%; }\n      novo-tooltip div.left.error:before {\n        border-left-color: #b34e4d; }\n      novo-tooltip div.left.info:before {\n        border-left-color: #3986ac; }\n      novo-tooltip div.left.warning:before {\n        border-left-color: #c09854; }\n      novo-tooltip div.left.success:before {\n        border-left-color: #458746; }\n      novo-tooltip div.right:before {\n        left: 0;\n        bottom: 50%;\n        border-right-color: #383838;\n        margin-left: -11px;\n        margin-bottom: -6px; }\n      novo-tooltip div.right.error:before {\n        border-right-color: #b34e4d; }\n      novo-tooltip div.right.info:before {\n        border-right-color: #3986ac; }\n      novo-tooltip div.right.warning:before {\n        border-right-color: #c09854; }\n      novo-tooltip div.right.success:before {\n        border-right-color: #458746; }\n      novo-tooltip div:before {\n        content: '';\n        position: absolute;\n        background: 0 0;\n        border: 6px solid transparent;\n        -webkit-box-sizing: border-box;\n                box-sizing: border-box; }\n  `],\n  animations: [\n    trigger('state', [\n      state('initial, void, hidden', style({ opacity: '0' })),\n      state('visible', style({ opacity: '1' })),\n      transition('* => visible', [\n        style({\n          opacity: 0,\n          visibility: 'visible',\n        }),\n        animate('0.3s ease-in'),\n      ]),\n      transition('* => hidden', [\n        style({\n          opacity: 1,\n          visibility: 'hidden',\n        }),\n        animate('0.3s ease-in'),\n      ]),\n    ]),\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ViewContainerRef, },\n];\n}\n\nfunction NovoTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTooltip.ctorParameters;\n/** @type {?} */\nNovoTooltip.prototype.message;\n/** @type {?} */\nNovoTooltip.prototype.hidden;\n/** @type {?} */\nNovoTooltip.prototype.tooltipType;\n/** @type {?} */\nNovoTooltip.prototype.rounded;\n/** @type {?} */\nNovoTooltip.prototype.size;\n/** @type {?} */\nNovoTooltip.prototype.positionStrategy;\n/** @type {?} */\nNovoTooltip.prototype.preline;\n/** @type {?} */\nNovoTooltip.prototype.noAnimate;\n/** @type {?} */\nNovoTooltip.prototype.position;\n/** @type {?} */\nNovoTooltip.prototype.overlay;\n/** @type {?} */\nNovoTooltip.prototype.containerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG\n\nimport { Directive, Input, HostListener, OnDestroy, ViewContainerRef, ElementRef, OnInit } from '@angular/core';\nimport {\n  Overlay,\n  OverlayRef,\n  OverlayConfig,\n  ConnectedPositionStrategy,\n  OriginConnectionPosition,\n  OverlayConnectionPosition,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\n// APP\n\nimport { NovoTooltip } from './Tooltip.component';\nexport class TooltipDirective implements OnDestroy, OnInit {\n  \n  tooltip: string;\n  \n  position: string = 'top';\n  \n  type: string = 'normal';\n  \n  size: string;\n  \n  bounce: string;\n  \n  noAnimate: boolean;\n  \n  rounded: boolean;\n  \n  always: boolean;\n  \n  active: boolean = true;\n  \n  preline: boolean;\n  \n  removeArrow: boolean = false;\n  \n  autoPosition: boolean = false;\nprivate tooltipInstance: NovoTooltip | null;\nprivate portal: ComponentPortal<NovoTooltip>;\nprivate overlayRef: OverlayRef;\n/**\n * @param {?} overlay\n * @param {?} viewContainerRef\n * @param {?} elementRef\n */\nconstructor(protected overlay: Overlay,\nprivate viewContainerRef: ViewContainerRef,\nprivate elementRef: ElementRef) {}\n/**\n * @param {?} position\n * @return {?}\n */\nisPosition(position: string): boolean {\n    return position.toLowerCase() === (this.position || '').toLowerCase();\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisType(type: string): boolean {\n    return type.toLowerCase() === (this.type || '').toLowerCase();\n  }\n/**\n * @param {?} size\n * @return {?}\n */\nisSize(size: string): boolean {\n    return size.toLowerCase() === (this.size || '').toLowerCase();\n  }\n/**\n * @return {?}\n */\nonMouseEnter(): void {\n    if (this.tooltip && this.active && !this.always) {\n      this.show();\n    }\n  }\n/**\n * @return {?}\n */\nonMouseLeave(): void {\n    if (this.overlayRef && !this.always) {\n      this.hide();\n      this.overlayRef.dispose();\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    if (this.tooltip && this.always && this.active) {\n      this.show();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.overlayRef && !this.always) {\n      this.hide();\n      this.overlayRef.dispose();\n    }\n  }\n/**\n * @return {?}\n */\nprivate show(): void {\n    const /** @type {?} */ overlayState = new OverlayConfig();\n    overlayState.positionStrategy = this.getPosition();\n\n    if (this.always) {\n      overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n    } else {\n      overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n    }\n    overlayState.scrollStrategy.enable();\n\n    this.overlayRef = this.overlay.create(overlayState);\n\n    this.overlayRef.detach();\n    this.portal = this.portal || new ComponentPortal(NovoTooltip, this.viewContainerRef);\n\n    let /** @type {?} */ tooltipInstance = this.overlayRef.attach(this.portal).instance;\n    tooltipInstance.message = this.tooltip;\n    tooltipInstance.tooltipType = this.type;\n    tooltipInstance.rounded = this.rounded;\n    tooltipInstance.size = this.size;\n    tooltipInstance.preline = this.preline;\n    tooltipInstance.noAnimate = this.noAnimate;\n    tooltipInstance.position = this.removeArrow ? 'no-arrow' : this.position;\n  }\n/**\n * @return {?}\n */\nprivate hide(): void {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n    }\n  }\n/**\n * @return {?}\n */\nprivate getPosition(): ConnectedPositionStrategy {\n    let /** @type {?} */ strategy: ConnectedPositionStrategy;\n    let /** @type {?} */ originPosition: OriginConnectionPosition;\n    let /** @type {?} */ overlayPosition: OverlayConnectionPosition;\n    let /** @type {?} */ offsetX: number;\n    let /** @type {?} */ offsetY: number;\n\n    switch (this.position) {\n      case 'right':\n        originPosition = { originX: 'end', originY: 'center' };\n        overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        offsetX = 8;\n        offsetY = 0;\n        break;\n      case 'bottom':\n        originPosition = { originX: 'center', originY: 'bottom' };\n        overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        offsetX = 0;\n        offsetY = 8;\n        break;\n      case 'top':\n        originPosition = { originX: 'center', originY: 'top' };\n        overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        offsetX = 0;\n        offsetY = -8;\n        break;\n      case 'left':\n        originPosition = { originX: 'start', originY: 'center' };\n        overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        offsetX = -8;\n        offsetY = 0;\n        break;\n      case 'top-left':\n        originPosition = { originX: 'start', originY: 'top' };\n        overlayPosition = { overlayX: 'end', overlayY: 'bottom' };\n        offsetX = 8;\n        offsetY = -8;\n        break;\n      case 'bottom-left':\n        originPosition = { originX: 'start', originY: 'bottom' };\n        overlayPosition = { overlayX: 'end', overlayY: 'top' };\n        offsetX = 8;\n        offsetY = 8;\n        break;\n      case 'top-right':\n        originPosition = { originX: 'end', originY: 'top' };\n        overlayPosition = { overlayX: 'start', overlayY: 'bottom' };\n        offsetX = -8;\n        offsetY = -8;\n        break;\n      case 'bottom-right':\n        originPosition = { originX: 'end', originY: 'bottom' };\n        overlayPosition = { overlayX: 'start', overlayY: 'top' };\n        offsetX = -8;\n        offsetY = 8;\n        break;\n\n      default:\n        break;\n    }\n    strategy = this.overlay\n      .position()\n      .connectedTo(this.elementRef, originPosition, overlayPosition)\n      .withOffsetX(offsetX)\n      .withOffsetY(offsetY);\n\n    return this.autoPosition ? this.withFallbackStrategy(strategy) : strategy;\n  }\n/**\n * @param {?} strategy\n * @return {?}\n */\nprivate withFallbackStrategy(strategy: ConnectedPositionStrategy): ConnectedPositionStrategy {\n    strategy\n      .withFallbackPosition({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }, 0, 8)\n      .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, 0, 8)\n      .withFallbackPosition({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }, 8, 0)\n      .withFallbackPosition({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }, -8, 0)\n      .withFallbackPosition({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }, 0, -8)\n      .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, 0, 8)\n      .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, 0, -8)\n      .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, 0, -8)\n      .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }, 8, -8)\n      .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }, 8, 8)\n      .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }, -8, -8)\n      .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }, -8, 8);\n\n    return strategy;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip]',\n  host: {\n    '[attr.data-hint]': 'tooltip',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ViewContainerRef, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'position': [{ type: Input, args: ['tooltipPosition', ] },],\n'type': [{ type: Input, args: ['tooltipType', ] },],\n'size': [{ type: Input, args: ['tooltipSize', ] },],\n'bounce': [{ type: Input, args: ['tooltipBounce', ] },],\n'noAnimate': [{ type: Input, args: ['tooltipNoAnimate', ] },],\n'rounded': [{ type: Input, args: ['tooltipRounded', ] },],\n'always': [{ type: Input, args: ['tooltipAlways', ] },],\n'active': [{ type: Input, args: ['tooltipActive', ] },],\n'preline': [{ type: Input, args: ['tooltipPreline', ] },],\n'removeArrow': [{ type: Input, args: ['removeTooltipArrow', ] },],\n'autoPosition': [{ type: Input, args: ['tooltipAutoPosition', ] },],\n'onMouseEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'onMouseLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction TooltipDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipDirective.ctorParameters;\n/** @type {?} */\nTooltipDirective.propDecorators;\n/** @type {?} */\nTooltipDirective.prototype.tooltip;\n/** @type {?} */\nTooltipDirective.prototype.position;\n/** @type {?} */\nTooltipDirective.prototype.type;\n/** @type {?} */\nTooltipDirective.prototype.size;\n/** @type {?} */\nTooltipDirective.prototype.bounce;\n/** @type {?} */\nTooltipDirective.prototype.noAnimate;\n/** @type {?} */\nTooltipDirective.prototype.rounded;\n/** @type {?} */\nTooltipDirective.prototype.always;\n/** @type {?} */\nTooltipDirective.prototype.active;\n/** @type {?} */\nTooltipDirective.prototype.preline;\n/** @type {?} */\nTooltipDirective.prototype.removeArrow;\n/** @type {?} */\nTooltipDirective.prototype.autoPosition;\n/** @type {?} */\nTooltipDirective.prototype.tooltipInstance;\n/** @type {?} */\nTooltipDirective.prototype.portal;\n/** @type {?} */\nTooltipDirective.prototype.overlayRef;\n/** @type {?} */\nTooltipDirective.prototype.overlay;\n/** @type {?} */\nTooltipDirective.prototype.viewContainerRef;\n/** @type {?} */\nTooltipDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { TooltipDirective } from './Tooltip.directive';\nimport { NovoTooltip } from './Tooltip.component';\nexport class NovoTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [TooltipDirective, NovoTooltip],\n  exports: [TooltipDirective],\n  entryComponents: [NovoTooltip],\n  imports: [CommonModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTooltipModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, Inject, Optional, LOCALE_ID } from '@angular/core';\nexport class NovoLabelService {\n  filters = 'Filter';\n  clear = 'Clear';\n  sort = 'Sort';\n  emptyTableMessage = 'No Records to display...';\n  noMatchingRecordsMessage = 'No Matching Records';\n  erroredTableMessage = 'Oops! An error occurred.';\n  pickerError = 'Oops! An error occurred.';\n  pickerEmpty = 'No results to display...';\n  quickNoteError = 'Oops! An error occurred.';\n  quickNoteEmpty = 'No results to display...';\n  required = 'Required';\n  numberTooLarge = 'Number is too large';\n  save = 'Save';\n  cancel = 'Cancel';\n  next = 'Next';\n  itemsPerPage = 'Items per page:';\n  select = 'Select...';\n  selected = 'Selected';\n  selectAllOnPage = 'Select all on page';\n  deselectAll = 'Deselect all';\n  refresh = 'Refresh';\n  close = 'Close';\n  move = 'Move';\n  startDate = 'Start Date';\n  endDate = 'End Date';\n  more = 'more';\n  clearAll = 'CLEAR ALL';\n  clearAllNormalCase = 'Clear All';\n  clearSort = 'Clear Sort';\n  clearFilter = 'Clear Filter';\n  today = 'Today';\n  now = 'Now';\n  isRequired = 'is required';\n  notValidYear = 'is not a valid year';\n  isTooLarge = 'is too large';\n  invalidAddress = 'requires at least one field filled out';\n  invalidEmail = 'requires a valid email (ex. abc@123.com)';\n  minLength = 'is required to be a minimum length of';\n  past1Day = 'Past 1 Day';\n  past7Days = 'Past 7 Days';\n  past30Days = 'Past 30 Days';\n  past90Days = 'Past 90 Days';\n  past1Year = 'Past 1 Year';\n  next1Day = 'Next 1 Day';\n  next7Days = 'Next 7 Days';\n  next30Days = 'Next 30 Days';\n  next90Days = 'Next 90 Days';\n  next1Year = 'Next 1 Year';\n  customDateRange = 'Custom Date Range';\n  backToPresetFilters = 'Back to Preset Filters';\n  okGotIt = 'Ok, Got it';\n  address = 'Address';\n  address1 = 'Address';\n  apt = 'Apt'; // TODO delete\n  address2 = 'Apt';\n  city = 'City / Locality';\n  state = 'State / Region';\n  zip = 'Postal Code';\n  zipCode = 'Postal Code'; // TODO delete\n  country = 'Country';\n  or = 'or';\n  clickToBrowse = 'click to browse';\n  chooseAFile = 'Choose a file';\n  no = 'No';\n  yes = 'Yes';\n  search = 'SEARCH';\n  noItems = 'There are no items';\n  dateFormat = 'MM/dd/yyyy';\n  dateFormatPlaceholder = 'MM/DD/YYYY';\n  timeFormatPlaceholderAM = 'hh:mm AM';\n  timeFormatPlaceholder24Hour = 'HH:mm';\n  timeFormatAM = 'AM';\n  timeFormatPM = 'PM';\n  confirmChangesModalMessage = 'Are you sure you want to change this field?';\n  promptModalMessage = 'Do you want to perform the following changes?';\n  asyncFailure = 'Async validation was not called within the 10s threshold, you might want to reload the page to try again';\n  previous = 'Previous';\n  actions = 'Actions';\n  all = 'All';\n  groupedMultiPickerEmpty = 'No items to display';\n  groupedMultiPickerSelectCategory = 'Select a category from the right to get started';\n  add = 'Add';\n  encryptedFieldTooltip = 'This data has been stored at the highest level of security';\n  noStatesForCountry = 'No states available for the selected country';\n  selectCountryFirst = 'Please select a country before selecting a state';\n  invalidIntegerInput = 'Special characters are not allowed for';\n/**\n * @param {?=} userLocale\n */\nconstructor(\npublic userLocale: string = 'en-US',\n  ) {}\n/**\n * @param {?} field\n * @param {?} maxlength\n * @return {?}\n */\nmaxlengthMetWithField(field: string, maxlength: number): string {\n    return `Sorry, you have reached the maximum character count of ${maxlength} for ${field}.`;\n  }\n/**\n * @param {?} maxlength\n * @return {?}\n */\nmaxlengthMet(maxlength: number): string {\n    return `Sorry, you have reached the maximum character count of ${maxlength} for this field.`;\n  }\n/**\n * @param {?} field\n * @param {?} maxlength\n * @return {?}\n */\ninvalidMaxlengthWithField(field: string, maxlength: number): string {\n    return `Sorry, you have exceeded the maximum character count of ${maxlength} for ${field}.`;\n  }\n/**\n * @param {?} maxlength\n * @return {?}\n */\ninvalidMaxlength(maxlength: number): string {\n    return `Sorry, you have exceeded the maximum character count of ${maxlength} for this field.`;\n  }\n/**\n * @param {?} toMany\n * @return {?}\n */\ngetToManyPlusMore(toMany: { quantity: number }): string {\n    return `+${toMany.quantity} more`;\n  }\n/**\n * @param {?} selected\n * @return {?}\n */\nselectedRecords(selected: number) {\n    return `${selected} records are selected.`;\n  }\n/**\n * @param {?} shown\n * @param {?} total\n * @return {?}\n */\nshowingXofXResults(shown: number, total: number) {\n    return `Showing ${shown} of ${total} Results.`;\n  }\n/**\n * @param {?} total\n * @param {?} select\n * @return {?}\n */\ntotalRecords(total: number, select: boolean) {\n    return select ? `Select all ${total} records.` : `De-select remaining ${total} records.`;\n  }\n/**\n * @param {?} value\n * @param {?} format\n * @return {?}\n */\nformatDateWithFormat(value: any, format: Intl.DateTimeFormatOptions) {\n    let /** @type {?} */ date = value instanceof Date ? value : new Date(value);\n    if (date.getTime() !== date.getTime()) {\n      return value;\n    }\n    return new Intl.DateTimeFormat(this.userLocale, format).format(date);\n  }\n/**\n * @return {?}\n */\ngetWeekdays(): string[] {\n/**\n * @param {?} dayOfWeek\n * @return {?}\n */\nfunction getDay(dayOfWeek) {\n      let /** @type {?} */ dt = new Date();\n      return dt.setDate(dt.getDate() - dt.getDay() + dayOfWeek);\n    }\n\n    return [getDay(0), getDay(1), getDay(2), getDay(3), getDay(4), getDay(5), getDay(6)].reduce((weekdays, dt) => {\n      weekdays.push(new Intl.DateTimeFormat(this.userLocale, { weekday: 'long' }).format(dt));\n      return weekdays;\n    }, []);\n  }\n/**\n * @return {?}\n */\ngetMonths(): string[] {\n/**\n * @param {?} month\n * @return {?}\n */\nfunction getMonth(month) {\n      let /** @type {?} */ dt = new Date();\n      return dt.setMonth(month, 1);\n    }\n\n    return [\n      getMonth(0),\n      getMonth(1),\n      getMonth(2),\n      getMonth(3),\n      getMonth(4),\n      getMonth(5),\n      getMonth(6),\n      getMonth(7),\n      getMonth(8),\n      getMonth(9),\n      getMonth(10),\n      getMonth(11),\n    ].reduce((months, dt) => {\n      months.push(new Intl.DateTimeFormat(this.userLocale, { month: 'long' }).format(dt));\n      return months;\n    }, []);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ngetProperty(value: string) {\n    return this[value];\n  }\n/**\n * @param {?} page\n * @param {?} pageSize\n * @param {?} length\n * @param {?} short\n * @return {?}\n */\ngetRangeText(page: number, pageSize: number, length: number, short: boolean): string {\n    if (length === 0 || pageSize === 0) {\n      return `Displaying 0 of ${length}`;\n    }\n\n    length = Math.max(length, 0);\n\n    const /** @type {?} */ startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const /** @type {?} */ endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n\n    return short ? `${startIndex + 1} - ${endIndex}/${length}` : `Displaying ${startIndex + 1} - ${endIndex} of ${length}`;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nformatCurrency(value: number): string {\n    let /** @type {?} */ options = { style: 'currency', currency: 'USD' };\n    return new Intl.NumberFormat(this.userLocale, options).format(value);\n  }\n/**\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nformatNumber(value: any, options?: Intl.NumberFormatOptions): string {\n    return new Intl.NumberFormat(this.userLocale, options).format(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nformatDateShort(value: any): string {\n    let /** @type {?} */ options: Intl.DateTimeFormatOptions = {\n      // DD/MM/YYYY, HH:MM A - 02/14/2017, 1:17 PM\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    let /** @type {?} */ _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nformatTime(value: any): string {\n    let /** @type {?} */ options: Intl.DateTimeFormatOptions = {\n      //HH:MM A - 1:17 PM\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    let /** @type {?} */ _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nformatDate(value: any): string {\n    let /** @type {?} */ options: Intl.DateTimeFormatOptions = {\n      // DD/MM/YYYY - 02/14/2017\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    };\n    let /** @type {?} */ _value = value === null || value === undefined || value === '' ? new Date() : new Date(value);\n    return new Intl.DateTimeFormat(this.userLocale, options).format(_value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NovoLabelService_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoLabelService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoLabelService.ctorParameters;\n/** @type {?} */\nNovoLabelService.prototype.filters;\n/** @type {?} */\nNovoLabelService.prototype.clear;\n/** @type {?} */\nNovoLabelService.prototype.sort;\n/** @type {?} */\nNovoLabelService.prototype.emptyTableMessage;\n/** @type {?} */\nNovoLabelService.prototype.noMatchingRecordsMessage;\n/** @type {?} */\nNovoLabelService.prototype.erroredTableMessage;\n/** @type {?} */\nNovoLabelService.prototype.pickerError;\n/** @type {?} */\nNovoLabelService.prototype.pickerEmpty;\n/** @type {?} */\nNovoLabelService.prototype.quickNoteError;\n/** @type {?} */\nNovoLabelService.prototype.quickNoteEmpty;\n/** @type {?} */\nNovoLabelService.prototype.required;\n/** @type {?} */\nNovoLabelService.prototype.numberTooLarge;\n/** @type {?} */\nNovoLabelService.prototype.save;\n/** @type {?} */\nNovoLabelService.prototype.cancel;\n/** @type {?} */\nNovoLabelService.prototype.next;\n/** @type {?} */\nNovoLabelService.prototype.itemsPerPage;\n/** @type {?} */\nNovoLabelService.prototype.select;\n/** @type {?} */\nNovoLabelService.prototype.selected;\n/** @type {?} */\nNovoLabelService.prototype.selectAllOnPage;\n/** @type {?} */\nNovoLabelService.prototype.deselectAll;\n/** @type {?} */\nNovoLabelService.prototype.refresh;\n/** @type {?} */\nNovoLabelService.prototype.close;\n/** @type {?} */\nNovoLabelService.prototype.move;\n/** @type {?} */\nNovoLabelService.prototype.startDate;\n/** @type {?} */\nNovoLabelService.prototype.endDate;\n/** @type {?} */\nNovoLabelService.prototype.more;\n/** @type {?} */\nNovoLabelService.prototype.clearAll;\n/** @type {?} */\nNovoLabelService.prototype.clearAllNormalCase;\n/** @type {?} */\nNovoLabelService.prototype.clearSort;\n/** @type {?} */\nNovoLabelService.prototype.clearFilter;\n/** @type {?} */\nNovoLabelService.prototype.today;\n/** @type {?} */\nNovoLabelService.prototype.now;\n/** @type {?} */\nNovoLabelService.prototype.isRequired;\n/** @type {?} */\nNovoLabelService.prototype.notValidYear;\n/** @type {?} */\nNovoLabelService.prototype.isTooLarge;\n/** @type {?} */\nNovoLabelService.prototype.invalidAddress;\n/** @type {?} */\nNovoLabelService.prototype.invalidEmail;\n/** @type {?} */\nNovoLabelService.prototype.minLength;\n/** @type {?} */\nNovoLabelService.prototype.past1Day;\n/** @type {?} */\nNovoLabelService.prototype.past7Days;\n/** @type {?} */\nNovoLabelService.prototype.past30Days;\n/** @type {?} */\nNovoLabelService.prototype.past90Days;\n/** @type {?} */\nNovoLabelService.prototype.past1Year;\n/** @type {?} */\nNovoLabelService.prototype.next1Day;\n/** @type {?} */\nNovoLabelService.prototype.next7Days;\n/** @type {?} */\nNovoLabelService.prototype.next30Days;\n/** @type {?} */\nNovoLabelService.prototype.next90Days;\n/** @type {?} */\nNovoLabelService.prototype.next1Year;\n/** @type {?} */\nNovoLabelService.prototype.customDateRange;\n/** @type {?} */\nNovoLabelService.prototype.backToPresetFilters;\n/** @type {?} */\nNovoLabelService.prototype.okGotIt;\n/** @type {?} */\nNovoLabelService.prototype.address;\n/** @type {?} */\nNovoLabelService.prototype.address1;\n/** @type {?} */\nNovoLabelService.prototype.apt;\n/** @type {?} */\nNovoLabelService.prototype.address2;\n/** @type {?} */\nNovoLabelService.prototype.city;\n/** @type {?} */\nNovoLabelService.prototype.state;\n/** @type {?} */\nNovoLabelService.prototype.zip;\n/** @type {?} */\nNovoLabelService.prototype.zipCode;\n/** @type {?} */\nNovoLabelService.prototype.country;\n/** @type {?} */\nNovoLabelService.prototype.or;\n/** @type {?} */\nNovoLabelService.prototype.clickToBrowse;\n/** @type {?} */\nNovoLabelService.prototype.chooseAFile;\n/** @type {?} */\nNovoLabelService.prototype.no;\n/** @type {?} */\nNovoLabelService.prototype.yes;\n/** @type {?} */\nNovoLabelService.prototype.search;\n/** @type {?} */\nNovoLabelService.prototype.noItems;\n/** @type {?} */\nNovoLabelService.prototype.dateFormat;\n/** @type {?} */\nNovoLabelService.prototype.dateFormatPlaceholder;\n/** @type {?} */\nNovoLabelService.prototype.timeFormatPlaceholderAM;\n/** @type {?} */\nNovoLabelService.prototype.timeFormatPlaceholder24Hour;\n/** @type {?} */\nNovoLabelService.prototype.timeFormatAM;\n/** @type {?} */\nNovoLabelService.prototype.timeFormatPM;\n/** @type {?} */\nNovoLabelService.prototype.confirmChangesModalMessage;\n/** @type {?} */\nNovoLabelService.prototype.promptModalMessage;\n/** @type {?} */\nNovoLabelService.prototype.asyncFailure;\n/** @type {?} */\nNovoLabelService.prototype.previous;\n/** @type {?} */\nNovoLabelService.prototype.actions;\n/** @type {?} */\nNovoLabelService.prototype.all;\n/** @type {?} */\nNovoLabelService.prototype.groupedMultiPickerEmpty;\n/** @type {?} */\nNovoLabelService.prototype.groupedMultiPickerSelectCategory;\n/** @type {?} */\nNovoLabelService.prototype.add;\n/** @type {?} */\nNovoLabelService.prototype.encryptedFieldTooltip;\n/** @type {?} */\nNovoLabelService.prototype.noStatesForCountry;\n/** @type {?} */\nNovoLabelService.prototype.selectCountryFirst;\n/** @type {?} */\nNovoLabelService.prototype.invalidIntegerInput;\n/** @type {?} */\nNovoLabelService.prototype.userLocale;\n}\n\n\nexport const /** @type {?} */ NOVO_ELEMENTS_LABELS_PROVIDERS = [{ provide: NovoLabelService, useClass: NovoLabelService }];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, EventEmitter, Input, Output, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n// APP\n\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class CardActionsElement {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-card-actions',\n  template: '<ng-content></ng-content>',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardActionsElement_tsickle_Closure_declarations() {\n/** @type {?} */\nCardActionsElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardActionsElement.ctorParameters;\n}\n\nexport class CardElement implements OnChanges, OnInit {\n   padding: boolean = true;\n   config: any = {};\n   title: string;\n   message: string;\n   messageIcon: string;\n   icon: string;\n   iconTooltip: string;\n   refresh: boolean;\n   close: boolean;\n   move: boolean;\n   loading: boolean;\n\n   onClose: EventEmitter<any> = new EventEmitter();\n   onRefresh: EventEmitter<any> = new EventEmitter();\n\n  cardAutomationId: string;\n  labels: NovoLabelService;\n  iconClass: string | null;\n  messageIconClass: string;\n/**\n * @param {?} labels\n */\nconstructor(labels: NovoLabelService) {\n    this.labels = labels;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.config = this.config || {};\n  }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n    this.config = this.config || {};\n    this.cardAutomationId = `${(this.title || this.config.title || 'no-title').toLowerCase().replace(/\\s/g, '-')}-card`;\n\n    let /** @type {?} */ newIcon: string = this.icon || this.config.icon;\n    let /** @type {?} */ newMessageIcon: string = this.messageIcon || this.config.messageIcon;\n    this.iconClass = newIcon ? `bhi-${newIcon}` : null;\n    this.messageIconClass = newMessageIcon ? `bhi-${newMessageIcon}` : null;\n  }\n/**\n * @return {?}\n */\ntoggleClose() {\n    if (!this.config.onClose) {\n      this.onClose.next();\n    } else {\n      this.config.onClose();\n    }\n  }\n/**\n * @return {?}\n */\ntoggleRefresh() {\n    if (!this.config.onRefresh) {\n      this.onRefresh.next();\n    } else {\n      this.config.onRefresh();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-card',\n  template: `\n        <div class=\"novo-card\" [attr.data-automation-id]=\"cardAutomationId\" [ngClass]=\"{'no-padding': !padding}\" [class.loading]=\"loading || config.loading\">\n            <!--Loading-->\n            <div class=\"card-loading-container\" *ngIf=\"loading || config.loading\">\n                <novo-loading theme=\"line\" [attr.data-automation-id]=\"cardAutomationId + '-loading'\"></novo-loading>\n            </div>\n            <!--Card Header-->\n            <header>\n                <div class=\"title\">\n                    <!--Grabber Icon-->\n                    <span tooltip=\"{{ labels.move }}\" tooltipPosition=\"bottom-right\"><i *ngIf=\"move || config.move\" class=\"bhi-move\" [attr.data-automation-id]=\"cardAutomationId + '-move'\"></i></span>\n                    <!--Card Title-->\n                    <h3 [attr.data-automation-id]=\"cardAutomationId + '-title'\"><span [tooltip]=\"iconTooltip\" tooltipPosition=\"right\"><i *ngIf=\"icon\" [ngClass]=\"iconClass\"></i></span> {{title || config.title}}</h3>\n                </div>\n                <!--Card Actions-->\n                <div class=\"actions\" [attr.data-automation-id]=\"cardAutomationId + '-actions'\">\n                    <ng-content select=\"novo-card-actions\"></ng-content>\n                    <button theme=\"icon\" icon=\"refresh\"  (click)=\"toggleRefresh()\" *ngIf=\"refresh || config.refresh\" [attr.data-automation-id]=\"cardAutomationId + '-refresh'\" tooltip=\"{{ labels.refresh }}\" tooltipPosition=\"bottom-left\"></button>\n                    <button theme=\"icon\" icon=\"close-o\" (click)=\"toggleClose()\" *ngIf=\"close || config.close\" [attr.data-automation-id]=\"cardAutomationId + '-close'\" tooltip=\"{{ labels.close }}\" tooltipPosition=\"bottom-left\"></button>\n                </div>\n            </header>\n            <!--Card Main-->\n            <main>\n                <!--Content (transcluded)-->\n                <ng-content *ngIf=\"!(loading || config.loading) && !(message || config.message)\"></ng-content>\n                <!--Error/Empty Message-->\n                <p class=\"card-message\" *ngIf=\"!(loading || config.loading) && (message || config.message)\" [attr.data-automation-id]=\"cardAutomationId + '-message'\"><i *ngIf=\"messageIconClass\" [ngClass]=\"messageIconClass\"></i> <span [innerHtml]=\"message || config.message\"></span></p>\n            </main>\n            <!--Card Footer-->\n            <ng-content *ngIf=\"!(loading || config.loading) && !(message || config.message)\" select=\"footer\"></ng-content>\n        </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'padding': [{ type: Input },],\n'config': [{ type: Input },],\n'title': [{ type: Input },],\n'message': [{ type: Input },],\n'messageIcon': [{ type: Input },],\n'icon': [{ type: Input },],\n'iconTooltip': [{ type: Input },],\n'refresh': [{ type: Input },],\n'close': [{ type: Input },],\n'move': [{ type: Input },],\n'loading': [{ type: Input },],\n'onClose': [{ type: Output },],\n'onRefresh': [{ type: Output },],\n};\n}\n\nfunction CardElement_tsickle_Closure_declarations() {\n/** @type {?} */\nCardElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardElement.ctorParameters;\n/** @type {?} */\nCardElement.propDecorators;\n/** @type {?} */\nCardElement.prototype.padding;\n/** @type {?} */\nCardElement.prototype.config;\n/** @type {?} */\nCardElement.prototype.title;\n/** @type {?} */\nCardElement.prototype.message;\n/** @type {?} */\nCardElement.prototype.messageIcon;\n/** @type {?} */\nCardElement.prototype.icon;\n/** @type {?} */\nCardElement.prototype.iconTooltip;\n/** @type {?} */\nCardElement.prototype.refresh;\n/** @type {?} */\nCardElement.prototype.close;\n/** @type {?} */\nCardElement.prototype.move;\n/** @type {?} */\nCardElement.prototype.loading;\n/** @type {?} */\nCardElement.prototype.onClose;\n/** @type {?} */\nCardElement.prototype.onRefresh;\n/** @type {?} */\nCardElement.prototype.cardAutomationId;\n/** @type {?} */\nCardElement.prototype.labels;\n/** @type {?} */\nCardElement.prototype.iconClass;\n/** @type {?} */\nCardElement.prototype.messageIconClass;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { CardElement, CardActionsElement } from './Card';\nexport class NovoCardModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule, NovoLoadingModule, NovoTooltipModule],\n    declarations: [CardElement, CardActionsElement],\n    exports: [CardElement, CardActionsElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoEventTypeLegendElement {\n\n     events: CalendarEvent[];\n\n     customTemplate: TemplateRef<any>;\n\n     eventTypeClicked: EventEmitter<any> = new EventEmitter();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-event-type-legend',\n    template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-event-legend\">\n        <div class=\"cal-event-type\"\n          *ngFor=\"let type of events | groupBy : 'type'\"\n          (click)=\"$event.stopPropagation(); eventTypeClicked.emit({event:type?.key})\">\n          <div class=\"cal-event-type-swatch\"></div><div>{{type?.key}}</div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{events: events, eventTypeClicked: eventTypeClicked}\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'events': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventTypeClicked': [{ type: Output },],\n};\n}\n\nfunction NovoEventTypeLegendElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoEventTypeLegendElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoEventTypeLegendElement.ctorParameters;\n/** @type {?} */\nNovoEventTypeLegendElement.propDecorators;\n/** @type {?} */\nNovoEventTypeLegendElement.prototype.events;\n/** @type {?} */\nNovoEventTypeLegendElement.prototype.customTemplate;\n/** @type {?} */\nNovoEventTypeLegendElement.prototype.eventTypeClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Inject, Input, LOCALE_ID, Output } from '@angular/core';\n\nimport * as dateFns from 'date-fns';\nexport class NovoCalendarDateChangeElement {\n/**\n * The current view\n */\nview: string;\n/**\n * The current view date\n */\nviewDate: Date;\n\n     locale: string;\n/**\n * Called when the view date is changed\n */\nviewDateChange: EventEmitter<Date> = new EventEmitter();\n/**\n * @param {?} locale\n */\nconstructor(  locale: string) {\n        this.locale = locale;\n    }\n/**\n * @hidden\n * @return {?}\n */\nsubtractDate(): void {\n        this.changeDate(-1);\n    }\n/**\n * @return {?}\n */\naddDate(): void {\n        this.changeDate(1);\n    }\n/**\n * @param {?} unit\n * @return {?}\n */\nchangeDate(unit: number): void {\n        const /** @type {?} */ addFn: any = {\n            day: dateFns.addDays,\n            week: dateFns.addWeeks,\n            month: dateFns.addMonths\n        }[this.view];\n\n        this.viewDateChange.emit(addFn(this.viewDate, unit));\n    }\n/**\n * @return {?}\n */\nget startOfWeek() {\n        return dateFns.startOfWeek(this.viewDate);\n    }\n/**\n * @return {?}\n */\nget endOfWeek() {\n        return dateFns.endOfWeek(this.viewDate);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-date-change',\n    template: `\n    <div class=\"cal-date-change\">\n        <i class=\"bhi-arrow-left\" (click)=\"subtractDate()\" ></i>\n        <span [ngSwitch]=\"view\">\n            <span *ngSwitchCase=\"'month'\">{{ ( viewDate | month:locale ) + ' ' + ( viewDate | year:locale ) }}</span>\n            <span *ngSwitchCase=\"'week'\">{{ ( startOfWeek | monthday:locale:'long' ) + ' - ' + ( endOfWeek | endofweekdisplay:startOfWeek:locale:'long' ) }}</span>\n            <span *ngSwitchCase=\"'day'\">{{ ( viewDate | weekday:locale:'long' ) + ', ' + ( viewDate | month:locale ) + ' ' + ( viewDate | dayofmonth:locale ) }}</span>\n        </span>\n        <i class=\"bhi-arrow-right\" (click)=\"addDate()\"></i>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'view': [{ type: Input },],\n'viewDate': [{ type: Input },],\n'locale': [{ type: Input },],\n'viewDateChange': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarDateChangeElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarDateChangeElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarDateChangeElement.ctorParameters;\n/** @type {?} */\nNovoCalendarDateChangeElement.propDecorators;\n/**\n * The current view\n * @type {?}\n */\nNovoCalendarDateChangeElement.prototype.view;\n/**\n * The current view date\n * @type {?}\n */\nNovoCalendarDateChangeElement.prototype.viewDate;\n/** @type {?} */\nNovoCalendarDateChangeElement.prototype.locale;\n/**\n * Called when the view date is changed\n * @type {?}\n */\nNovoCalendarDateChangeElement.prototype.viewDateChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import * as dateFns from 'date-fns';\n\nconst /** @type {?} */ WEEKEND_DAY_NUMBERS: number[] = [0, 6];\nconst /** @type {?} */ DAYS_IN_WEEK: number = 7;\nconst /** @type {?} */ HOURS_IN_DAY: number = 24;\nconst /** @type {?} */ MINUTES_IN_HOUR: number = 60;\nexport type CalendarEventResponse = number;\nexport let CalendarEventResponse: any = {};\nCalendarEventResponse.Maybe = 0;\nCalendarEventResponse.Accepted = 1;\nCalendarEventResponse.Rejected = 2;\nCalendarEventResponse[CalendarEventResponse.Maybe] = \"Maybe\";\nCalendarEventResponse[CalendarEventResponse.Accepted] = \"Accepted\";\nCalendarEventResponse[CalendarEventResponse.Rejected] = \"Rejected\";\n\n\nexport interface CalendarEventTimesChangedEvent {\n    event: CalendarEvent;\n    newStart: Date;\n    newEnd?: Date;\n}\n\nexport interface WeekDay {\n    date: Date;\n    isPast: boolean;\n    isToday: boolean;\n    isFuture: boolean;\n    isWeekend: boolean;\n}\n\nexport interface EventColor {\n    primary: string;\n    secondary: string;\n}\n\nexport interface EventAction {\n    label: string;\n    cssClass?: string;\n    onClick({ event }: { event: CalendarEvent }): any;\n}\n\nexport interface CalendarEvent {\n    id?:number;\n    start: Date;\n    end?: Date;\n    title: string;\n    description?: string;\n    color: EventColor;\n    type?: string;\n    response?: CalendarEventResponse;\n    actions?: EventAction[];\n    allDay?: boolean;\n    cssClass?: string;\n    resizable?: {\n        beforeStart?: boolean;\n        afterEnd?: boolean;\n    };\n    draggable?: boolean;\n}\n\nexport interface WeekViewEvent {\n    event: CalendarEvent;\n    offset: number;\n    span: number;\n    startsBeforeWeek: boolean;\n    endsAfterWeek: boolean;\n    top?: number;\n    height?: number;\n}\n\nexport interface WeekViewEventRow {\n    row: WeekViewEvent[];\n}\n\nexport interface MonthViewDay extends WeekDay {\n    inMonth: boolean;\n    events: CalendarEvent[];\n    backgroundColor?: string;\n    cssClass?: string;\n    badgeTotal: number;\n}\n\nexport interface MonthView {\n    rowOffsets: number[];\n    days: MonthViewDay[];\n    totalDaysVisibleInWeek: number;\n}\n\nexport interface DayViewEvent {\n    event: CalendarEvent;\n    height: number;\n    width: number;\n    top: number;\n    left: number;\n    startsBeforeDay: boolean;\n    endsAfterDay: boolean;\n}\n\nexport interface DayView {\n    events: DayViewEvent[];\n    width: number;\n    allDayEvents: CalendarEvent[];\n}\n\nexport interface DayViewHourSegment {\n    isStart: boolean;\n    date: Date;\n    cssClass?: string;\n}\n\nexport interface DayViewHour {\n    segments: DayViewHourSegment[];\n}\n\nexport interface IsEventInPeriodArgs {\n    event: CalendarEvent;\n    periodStart: Date;\n    periodEnd: Date;\n}\n\nexport interface GetEventsInPeriodArgs {\n    events: CalendarEvent[];\n    periodStart: Date;\n    periodEnd: Date;\n}\n\nexport interface GetDayViewArgs {\n    events?: CalendarEvent[];\n    viewDate: Date;\n    hourSegments: number;\n    dayStart: {\n        hour: number;\n        minute: number;\n    };\n    dayEnd: {\n        hour: number;\n        minute: number;\n    };\n    eventWidth: number;\n    segmentHeight: number;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getExcludedDays({ startDate, days, excluded }: { startDate: Date, days: number, excluded: number[] }): number {\n    if (excluded.length < 1) {\n        return 0;\n    }\n    let /** @type {?} */ day: number = startDate.getDay();\n    let /** @type {?} */ reduce: number = 0;\n    for (let /** @type {?} */ i: number = 0; i < days; i++) {\n        if (day === DAYS_IN_WEEK) {\n            day = 0;\n        }\n        if (excluded.some(e => e === day)) {\n            reduce++;\n        }\n        day++;\n    }\n    return reduce;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekViewEventSpan(\n    { event, offset, startOfWeek, excluded }: { event: CalendarEvent, offset: number, startOfWeek: Date, excluded: number[] }): number {\n    const /** @type {?} */ begin: Date = event.start < startOfWeek ? startOfWeek : event.start;\n    let /** @type {?} */ span: number = 1;\n    if (event.end) {\n        span = dateFns.differenceInDays(dateFns.addMinutes(dateFns.endOfDay(event.end), 1), dateFns.startOfDay(begin));\n    }\n    const /** @type {?} */ totalLength: number = offset + span;\n    if (totalLength > DAYS_IN_WEEK) {\n        span = DAYS_IN_WEEK - offset;\n    }\n    return span - getExcludedDays({ startDate: begin, days: span, excluded });\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function getWeekViewEventOffset(\n    { event, startOfWeek, excluded = [] }: { event: CalendarEvent, startOfWeek: Date, excluded?: number[] }): number {\n    if (event.start < startOfWeek) {\n        return 0;\n    }\n    const /** @type {?} */ distance: number = dateFns.differenceInDays(event.start, startOfWeek);\n    return distance - getExcludedDays({ startDate: startOfWeek, days: distance, excluded });\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction isEventIsPeriod({ event, periodStart, periodEnd }: IsEventInPeriodArgs): boolean {\n\n    const /** @type {?} */ eventStart: Date = event.start;\n    const /** @type {?} */ eventEnd: Date = event.end || event.start;\n\n    if (eventStart > periodStart && eventStart < periodEnd) {\n        return true;\n    }\n\n    if (eventEnd > periodStart && eventEnd < periodEnd) {\n        return true;\n    }\n\n    if (eventStart < periodStart && eventEnd > periodEnd) {\n        return true;\n    }\n\n    if (dateFns.isSameSecond(eventStart, periodStart) || dateFns.isSameSecond(eventStart, periodEnd)) {\n        return true;\n    }\n\n    if (dateFns.isSameSecond(eventEnd, periodStart) || dateFns.isSameSecond(eventEnd, periodEnd)) {\n        return true;\n    }\n\n    return false;\n\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getEventsInPeriod({ events, periodStart, periodEnd }: GetEventsInPeriodArgs): CalendarEvent[] {\n    return events.filter((event: CalendarEvent) => isEventIsPeriod({ event, periodStart, periodEnd }));\n}\n/**\n * @param {?} events\n * @param {?} dayStart\n * @param {?} dayEnd\n * @return {?}\n */\nfunction getEventsInTimeRange(events: CalendarEvent[], dayStart: any, dayEnd: any) {\n    return events.filter( event => {\n        const /** @type {?} */ eventStart: Date = event.start;\n        const /** @type {?} */ eventEnd: Date = event.end || eventStart;\n\n        const /** @type {?} */ startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(eventStart), dayStart.hour), dayStart.minute);\n        const /** @type {?} */ endOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfMinute(eventStart), dayEnd.hour), dayEnd.minute);\n\n        return dateFns.isAfter(eventEnd, startOfView)\n            && dateFns.isBefore(eventStart, endOfView);\n    });\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getWeekDay({ date }: { date: Date }): WeekDay {\n    const /** @type {?} */ today: Date = dateFns.startOfDay(new Date());\n    return {\n        date,\n        isPast: date < today,\n        isToday: dateFns.isSameDay(date, today),\n        isFuture: date > today,\n        isWeekend: WEEKEND_DAY_NUMBERS.indexOf(dateFns.getDay(date)) > -1\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function getWeekViewHeader({ viewDate, weekStartsOn, excluded = [] }:\n    { viewDate: Date, weekStartsOn: number, excluded?: number[] }): WeekDay[] {\n    const /** @type {?} */ start: Date = dateFns.startOfWeek(viewDate, { weekStartsOn });\n    const /** @type {?} */ days: WeekDay[] = [];\n    for (let /** @type {?} */ i: number = 0; i < DAYS_IN_WEEK; i++) {\n        const /** @type {?} */ date: Date = dateFns.addDays(start, i);\n        if (!excluded.some(e => date.getDay() === e)) {\n            days.push(getWeekDay({ date }));\n        }\n    }\n\n    return days;\n\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function getWeekView({ events = [], viewDate, weekStartsOn, excluded = [], hourSegments, segmentHeight, dayStart, dayEnd }: { events?: CalendarEvent[], viewDate: Date, weekStartsOn: number, excluded?: number[], hourSegments:number, segmentHeight:number, dayStart:any, dayEnd:any }): WeekViewEventRow[] {\n    if (!events) {\n        events = [];\n    }\n\n    const /** @type {?} */ startOfViewWeek: Date = dateFns.startOfWeek(viewDate, { weekStartsOn });\n    const /** @type {?} */ endOfViewWeek: Date = dateFns.endOfWeek(viewDate, { weekStartsOn });\n    const /** @type {?} */ maxRange: number = DAYS_IN_WEEK - excluded.length;\n\n    const /** @type {?} */ eventsMapped: WeekViewEvent[] = getEventsInTimeRange(getEventsInPeriod({ events, periodStart: startOfViewWeek, periodEnd: endOfViewWeek }), dayStart, dayEnd).map(event => {\n        const /** @type {?} */ offset: number = getWeekViewEventOffset({ event, startOfWeek: startOfViewWeek, excluded });\n        const /** @type {?} */ span: number = 1; //getWeekViewEventSpan({ event, offset, startOfWeek: startOfViewWeek, excluded });\n        return { event, offset, span };\n    }).filter(e => e.offset < maxRange).filter(e => e.span > 0).map(entry => ({\n        event: entry.event,\n        offset: entry.offset,\n        span: entry.span,\n        startsBeforeWeek: entry.event.start < startOfViewWeek,\n        endsAfterWeek: (entry.event.end || entry.event.start) > endOfViewWeek,\n        top: 0\n    })).sort((itemA, itemB): number => {\n        const /** @type {?} */ startSecondsDiff: number = dateFns.differenceInSeconds(itemA.event.start, itemB.event.start);\n        if (startSecondsDiff === 0) {\n            return dateFns.differenceInSeconds(itemB.event.end || itemB.event.start, itemA.event.end || itemA.event.start);\n        }\n        return startSecondsDiff;\n    }).map((entry: WeekViewEvent) => {\n        const /** @type {?} */ startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(entry.event.start), dayStart.hour), dayStart.minute);\n        const /** @type {?} */ endOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfMinute(dateFns.endOfDay(entry.event.start)), dayEnd.hour), dayEnd.minute);\n\n        const /** @type {?} */ eventStart: Date = entry.event.start;\n        const /** @type {?} */ eventEnd: Date = entry.event.end || eventStart;\n\n        const /** @type {?} */ hourHeightModifier: number = (hourSegments * segmentHeight) / MINUTES_IN_HOUR;\n\n        if (eventStart > startOfView) {\n            entry.top += dateFns.differenceInMinutes(eventStart, startOfView);\n        }\n\n        entry.top *= hourHeightModifier;\n\n        const /** @type {?} */ startsBeforeDay: boolean = eventStart < startOfView;\n        const /** @type {?} */ endsAfterDay: boolean = eventEnd > endOfView;\n\n        const /** @type {?} */ startDate: Date = startsBeforeDay ? startOfView : eventStart;\n        const /** @type {?} */ endDate: Date = endsAfterDay ? endOfView : eventEnd;\n\n        let /** @type {?} */ height: number = dateFns.differenceInMinutes(endDate, startDate);\n\n        if (!entry.event.end) {\n            height = segmentHeight;\n        } else {\n            height *= hourHeightModifier;\n        }\n\n        entry.height = height;\n\n        return entry;\n    });\n\n    const /** @type {?} */ eventRows: WeekViewEventRow[] = [];\n    const /** @type {?} */ allocatedEvents: WeekViewEvent[] = [];\n\n    eventsMapped.forEach((event: WeekViewEvent, index: number) => {\n        if (allocatedEvents.indexOf(event) === -1) {\n            allocatedEvents.push(event);\n\n            const /** @type {?} */ otherRowEvents: WeekViewEvent[] = eventsMapped.slice(index + 1).filter(nextEvent => {\n                return nextEvent.top === event.top && nextEvent.offset === event.offset;\n            });\n\n            if (otherRowEvents.length > 0) {\n                let /** @type {?} */ totalEventsForRow = otherRowEvents.length + 1;\n\n                event.span = ( 1 / totalEventsForRow );\n\n                let /** @type {?} */ nextOffset = event.span + event.offset;\n\n                otherRowEvents.forEach( (nextEvent:WeekViewEvent) => {\n                    nextEvent.offset = nextOffset;\n                    nextEvent.span = event.span;\n                    nextOffset = nextEvent.span + nextEvent.offset;\n                });\n\n                allocatedEvents.push(...otherRowEvents);\n            }\n\n            eventRows.push({\n                row: [\n                    event,\n                    ...otherRowEvents\n                ]\n            });\n        }\n    });\n\n    return eventRows;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function getMonthView({ events = [], viewDate, weekStartsOn, excluded = [] }: { events?: CalendarEvent[], viewDate: Date, weekStartsOn: number, excluded?: number[] }): MonthView {\n    if (!events) {\n        events = [];\n    }\n\n    const /** @type {?} */ start: Date = dateFns.startOfWeek(dateFns.startOfMonth(viewDate), { weekStartsOn });\n    const /** @type {?} */ end: Date = dateFns.endOfWeek(dateFns.endOfMonth(viewDate), { weekStartsOn });\n    const /** @type {?} */ eventsInMonth: CalendarEvent[] = getEventsInPeriod({\n        events,\n        periodStart: start,\n        periodEnd: end\n    });\n    const /** @type {?} */ days: MonthViewDay[] = [];\n    for (let /** @type {?} */ i: number = 0; i < dateFns.differenceInDays(end, start) + 1; i++) {\n        const /** @type {?} */ date: Date = dateFns.addDays(start, i);\n        if (!excluded.some(e => date.getDay() === e)) {\n            const /** @type {?} */ day: MonthViewDay = /** @type {?} */(( getWeekDay({ date }) as MonthViewDay));\n            const /** @type {?} */ calEvents: CalendarEvent[] = getEventsInPeriod({\n                events: eventsInMonth,\n                periodStart: dateFns.startOfDay(date),\n                periodEnd: dateFns.endOfDay(date)\n            });\n            day.inMonth = dateFns.isSameMonth(date, viewDate);\n            day.events = calEvents;\n            day.badgeTotal = calEvents.length;\n            days.push(day);\n        }\n    }\n\n    const /** @type {?} */ totalDaysVisibleInWeek: number = DAYS_IN_WEEK - excluded.length;\n    const /** @type {?} */ rows: number = Math.floor(days.length / totalDaysVisibleInWeek);\n    const /** @type {?} */ rowOffsets: number[] = [];\n    for (let /** @type {?} */ i: number = 0; i < rows; i++) {\n        rowOffsets.push(i * totalDaysVisibleInWeek);\n    }\n\n    return {\n        rowOffsets,\n        totalDaysVisibleInWeek,\n        days\n    };\n\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function getDayView({ events = [], viewDate, hourSegments, dayStart, dayEnd, eventWidth, segmentHeight }: GetDayViewArgs): DayView {\n    if (!events) {\n        events = [];\n    }\n\n    const /** @type {?} */ startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(viewDate), dayStart.hour), dayStart.minute);\n    const /** @type {?} */ endOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfMinute(dateFns.endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\n    const /** @type {?} */ previousDayEvents: DayViewEvent[] = [];\n\n    const /** @type {?} */ dayViewEvents: DayViewEvent[] = getEventsInTimeRange(getEventsInPeriod({\n        events: events.filter((event: CalendarEvent) => !event.allDay),\n        periodStart: startOfView,\n        periodEnd: endOfView\n    }), dayStart, dayEnd).sort((eventA: CalendarEvent, eventB: CalendarEvent) => {\n        return eventA.start.valueOf() - eventB.start.valueOf();\n    }).map((event: CalendarEvent) => {\n        const /** @type {?} */ eventStart: Date = event.start;\n        const /** @type {?} */ eventEnd: Date = event.end || eventStart;\n        const /** @type {?} */ startsBeforeDay: boolean = eventStart < startOfView;\n        const /** @type {?} */ endsAfterDay: boolean = eventEnd > endOfView;\n        const /** @type {?} */ hourHeightModifier: number = (hourSegments * segmentHeight) / MINUTES_IN_HOUR;\n\n        let /** @type {?} */ top: number = 0;\n\n        if (eventStart > startOfView) {\n            top += dateFns.differenceInMinutes(eventStart, startOfView);\n        }\n\n        top *= hourHeightModifier;\n\n        const /** @type {?} */ startDate: Date = startsBeforeDay ? startOfView : eventStart;\n        const /** @type {?} */ endDate: Date = endsAfterDay ? endOfView : eventEnd;\n\n        let /** @type {?} */ height: number = dateFns.differenceInMinutes(endDate, startDate);\n\n        if (!event.end) {\n            height = segmentHeight;\n        } else {\n            height *= hourHeightModifier;\n        }\n\n        const /** @type {?} */ bottom: number = top + height;\n\n        const /** @type {?} */ overlappingPreviousEvents: DayViewEvent[] = previousDayEvents.filter((previousEvent: DayViewEvent) => {\n            const /** @type {?} */ previousEventTop: number = previousEvent.top;\n            const /** @type {?} */ previousEventBottom: number = previousEvent.top + previousEvent.height;\n\n            if (top < previousEventBottom && previousEventBottom < bottom) {\n                return true;\n            } else if (previousEventTop <= top && bottom <= previousEventBottom) {\n                return true;\n            }\n\n            return false;\n\n        });\n\n        let /** @type {?} */ left: number = 0;\n\n        while (overlappingPreviousEvents.some(previousEvent => previousEvent.left === left)) {\n            left += eventWidth;\n        }\n\n        const /** @type {?} */ dayEvent: DayViewEvent = {\n            event,\n            height,\n            width: eventWidth,\n            top,\n            left,\n            startsBeforeDay,\n            endsAfterDay\n        };\n\n        if (height > 0) {\n            previousDayEvents.push(dayEvent);\n        }\n\n        return dayEvent;\n    }).filter((dayEvent: DayViewEvent) => dayEvent.height > 0);\n\n    const /** @type {?} */ width: number = Math.max(...dayViewEvents.map((event: DayViewEvent) => event.left + event.width));\n    const /** @type {?} */ allDayEvents: CalendarEvent[] = getEventsInPeriod({\n        events: events.filter((event: CalendarEvent) => event.allDay),\n        periodStart: dateFns.startOfDay(startOfView),\n        periodEnd: dateFns.endOfDay(endOfView)\n    });\n\n    return {\n        events: dayViewEvents,\n        width,\n        allDayEvents\n    };\n\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function getDayViewHourGrid(\n    { viewDate, hourSegments, dayStart, dayEnd }:\n        { viewDate: Date, hourSegments: number, dayStart: any, dayEnd: any }\n): DayViewHour[] {\n\n    const /** @type {?} */ hours: DayViewHour[] = [];\n\n    const /** @type {?} */ startOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfDay(viewDate), dayStart.hour), dayStart.minute);\n    const /** @type {?} */ endOfView: Date = dateFns.setMinutes(dateFns.setHours(dateFns.startOfMinute(dateFns.endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\n    const /** @type {?} */ segmentDuration: number = MINUTES_IN_HOUR / hourSegments;\n    const /** @type {?} */ startOfViewDay: Date = dateFns.startOfDay(viewDate);\n\n    for (let /** @type {?} */ i: number = 0; i < HOURS_IN_DAY; i++) {\n        const /** @type {?} */ segments: DayViewHourSegment[] = [];\n        for (let /** @type {?} */ j: number = 0; j < hourSegments; j++) {\n            const /** @type {?} */ date: Date = dateFns.addMinutes(dateFns.addHours(startOfViewDay, i), j * segmentDuration);\n            if (date >= startOfView && date < endOfView) {\n                segments.push({\n                    date,\n                    isStart: j === 0\n                });\n            }\n        }\n        if (segments.length > 0) {\n            hours.push({ segments });\n        }\n    }\n\n    return hours;\n}\n","import { Component, OnChanges, Input, Output, EventEmitter, ChangeDetectorRef, OnInit, OnDestroy, LOCALE_ID, Inject, TemplateRef } from '@angular/core';\nimport { CalendarEvent, WeekDay, MonthView, MonthViewDay, CalendarEventTimesChangedEvent, getWeekViewHeader, getMonthView } from '../../../utils/calendar-utils/CalendarUtils';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as dateFns from 'date-fns';\n/**\n * Shows all events on a given month. Example usage:\n * \n * ```\n * &lt;novo-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-month-view&gt;\n * ```\n */\nexport class NovoCalendarMonthViewElement implements OnChanges, OnInit, OnDestroy {\n/**\n * The current view date\n */\nviewDate: Date;\n/**\n * An array of events to display on view\n */\nevents: CalendarEvent[] = [];\n/**\n * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n */\nexcludeDays: number[] = [];\n/**\n * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\n * If you add the `cssClass` property to the cell it will add that class to the cell in the template\n */\ndayModifier: Function;\n/**\n * An observable that when emitted on will re-render the current view\n */\nrefresh: Subject<any>;\n/**\n * The locale used to format dates\n */\nlocale: string = 'en-US';\n/**\n * The placement of the event tooltip\n */\ntooltipPosition: string = 'top';\n/**\n * The start number of the week\n */\nweekStartsOn: number;\n/**\n * A custom template to use to replace the header\n */\nheaderTemplate: TemplateRef<any>;\n/**\n * A custom template to use to replace the day cell\n */\ncellTemplate: TemplateRef<any>;\n/**\n * Called when the day cell is clicked\n */\ndayClicked: EventEmitter<{ day: MonthViewDay }> = new EventEmitter<{ day: MonthViewDay }>();\n/**\n * Called when the event title is clicked\n */\neventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n/**\n * Called when an event is dragged and dropped\n */\neventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n     viewDateChange: EventEmitter<Date> = new EventEmitter<Date>();\n/**\n * @hidden\n */\ncolumnHeaders: WeekDay[];\n/**\n * @hidden\n */\nview: MonthView;\n/**\n * @hidden\n */\nrefreshSubscription: Subscription;\n/**\n * @hidden\n * @param {?} cdr\n * @param {?} locale\n */\nconstructor(private cdr: ChangeDetectorRef,  locale: string) {\n        this.locale = locale;\n    }\n/**\n * @hidden\n * @return {?}\n */\nngOnInit(): void {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe(() => {\n                this.refreshAll();\n                this.cdr.markForCheck();\n            });\n        }\n    }\n/**\n * @hidden\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: any): void {\n        if (changes.viewDate || changes.excludeDays) {\n            this.refreshHeader();\n        }\n        if (changes.viewDate || changes.events || changes.excludeDays) {\n            this.refreshBody();\n        }\n    }\n/**\n * @hidden\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n/**\n * @hidden\n * @param {?} day\n * @param {?} event\n * @return {?}\n */\neventDropped(day: MonthViewDay, event: CalendarEvent): void {\n        const /** @type {?} */ year: number = dateFns.getYear(day.date);\n        const /** @type {?} */ month: number = dateFns.getMonth(day.date);\n        const /** @type {?} */ date: number = dateFns.getDate(day.date);\n        const /** @type {?} */ newStart: Date = dateFns.setYear(dateFns.setMonth(dateFns.setDate(event.start, date), month), year);\n        let /** @type {?} */ newEnd: Date;\n        if (event.end) {\n            const /** @type {?} */ secondsDiff: number = dateFns.differenceInSeconds(newStart, event.start);\n            newEnd = dateFns.addSeconds(event.end, secondsDiff);\n        }\n        this.eventTimesChanged.emit({ event, newStart, newEnd });\n    }\n/**\n * @return {?}\n */\nprivate refreshHeader(): void {\n        this.columnHeaders = getWeekViewHeader({\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays\n        });\n    }\n/**\n * @return {?}\n */\nprivate refreshBody(): void {\n        this.view = getMonthView({\n            events: this.events,\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays\n        });\n        if (this.dayModifier) {\n            this.view.days.forEach(day => this.dayModifier(day));\n        }\n    }\n/**\n * @return {?}\n */\npublic refreshAll(): void {\n        this.refreshHeader();\n        this.refreshBody();\n        this.viewDateChange.emit(this.viewDate);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-month',\n    template: `\n    <div class=\"calendar-month-view\">\n       <novo-calendar-month-header\n         [(viewDate)]=\"viewDate\"\n         [days]=\"columnHeaders\"\n         [locale]=\"locale\"\n         [customTemplate]=\"headerTemplate\"\n         (viewDateChange)=\"refreshAll()\">\n       </novo-calendar-month-header>\n      <div class=\"calendar-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets\">\n          <div class=\"calendar-cell-row\">\n            <novo-calendar-month-day\n              *ngFor=\"let day of view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)\"\n              [day]=\"day\"\n              [locale]=\"locale\"\n              [customTemplate]=\"cellTemplate\"\n              (click)=\"dayClicked.emit({day: day})\"\n              (eventClicked)=\"eventClicked.emit({ day: day, event: $event.event})\">\n            </novo-calendar-month-day>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'excludeDays': [{ type: Input },],\n'dayModifier': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPosition': [{ type: Input },],\n'weekStartsOn': [{ type: Input },],\n'headerTemplate': [{ type: Input },],\n'cellTemplate': [{ type: Input },],\n'dayClicked': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n'viewDateChange': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarMonthViewElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarMonthViewElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarMonthViewElement.ctorParameters;\n/** @type {?} */\nNovoCalendarMonthViewElement.propDecorators;\n/**\n * The current view date\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.viewDate;\n/**\n * An array of events to display on view\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.events;\n/**\n * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.excludeDays;\n/**\n * A function that will be called before each cell is rendered. The first argument will contain the calendar cell.\n * If you add the `cssClass` property to the cell it will add that class to the cell in the template\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.dayModifier;\n/**\n * An observable that when emitted on will re-render the current view\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.refresh;\n/**\n * The locale used to format dates\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.locale;\n/**\n * The placement of the event tooltip\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.tooltipPosition;\n/**\n * The start number of the week\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.weekStartsOn;\n/**\n * A custom template to use to replace the header\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.headerTemplate;\n/**\n * A custom template to use to replace the day cell\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.cellTemplate;\n/**\n * Called when the day cell is clicked\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.dayClicked;\n/**\n * Called when the event title is clicked\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.eventClicked;\n/**\n * Called when an event is dragged and dropped\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.eventTimesChanged;\n/** @type {?} */\nNovoCalendarMonthViewElement.prototype.viewDateChange;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.columnHeaders;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.view;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarMonthViewElement.prototype.refreshSubscription;\n/** @type {?} */\nNovoCalendarMonthViewElement.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { WeekDay } from '../../../utils/calendar-utils/CalendarUtils';\nimport * as dateFns from 'date-fns';\nexport class NovoCalendarMonthHeaderElement {\n     viewDate: Date;\n\n     days: WeekDay[];\n\n     locale: string;\n\n     customTemplate: TemplateRef<any>;\n/**\n * Called when the view date is changed\n */\nviewDateChange: EventEmitter<Date> = new EventEmitter();\n/**\n * @return {?}\n */\nprevMonth() {\n        this.viewDateChange.emit(dateFns.subMonths(this.viewDate, 1));\n    }\n/**\n * @return {?}\n */\nnextMonth() {\n        this.viewDateChange.emit(dateFns.addMonths(this.viewDate, 1));\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-month-header',\n    template: `\n    <ng-template #defaultTemplate>\n      <div class=\"calendar-header\">\n        <div class=\"calendar-header-top\">\n          <button theme=\"icon\" icon=\"previous\" (click)=\"prevMonth($event)\"></button>\n          <div class=\"calendar-month\">{{ viewDate | month:locale }}</div>\n          <button theme=\"icon\" icon=\"next\" (click)=\"nextMonth($event)\"></button>\n        </div>\n        <div class=\"calendar-weekdays\">\n          <div\n            class=\"calendar-weekday\"\n            *ngFor=\"let day of days\"\n            [class.calendar-past]=\"day.isPast\"\n            [class.calendar-today]=\"day.isToday\"\n            [class.calendar-future]=\"day.isFuture\"\n            [class.calendar-weekend]=\"day.isWeekend\">\n            {{ day.date | weekday:locale }}\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, viewDate: viewDate}\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'days': [{ type: Input },],\n'locale': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'viewDateChange': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarMonthHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarMonthHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarMonthHeaderElement.ctorParameters;\n/** @type {?} */\nNovoCalendarMonthHeaderElement.propDecorators;\n/** @type {?} */\nNovoCalendarMonthHeaderElement.prototype.viewDate;\n/** @type {?} */\nNovoCalendarMonthHeaderElement.prototype.days;\n/** @type {?} */\nNovoCalendarMonthHeaderElement.prototype.locale;\n/** @type {?} */\nNovoCalendarMonthHeaderElement.prototype.customTemplate;\n/**\n * Called when the view date is changed\n * @type {?}\n */\nNovoCalendarMonthHeaderElement.prototype.viewDateChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { MonthViewDay, CalendarEvent, CalendarEventResponse } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoCalendarMonthDayElement {\n\n     day: MonthViewDay;\n\n     locale: string;\n\n     tooltipPosition: string;\n\n     customTemplate: TemplateRef<any>;\n\n     eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n/**\n * @return {?}\n */\nget accepted(): Array<CalendarEvent> {\n        if (!this.day) {\n            return [];\n        }\n        return this.day.events.filter((evt) => {\n            return (evt.response === CalendarEventResponse.Accepted);\n        });\n    }\n/**\n * @return {?}\n */\nget rejected(): Array<CalendarEvent> {\n        if (!this.day) {\n            return [];\n        }\n        return this.day.events.filter((evt) => {\n            return (evt.response === CalendarEventResponse.Rejected);\n        });\n    }\n/**\n * @return {?}\n */\nget maybes(): Array<CalendarEvent> {\n        if (!this.day) {\n            return [];\n        }\n        return this.day.events.filter((evt) => {\n            return (evt.response === CalendarEventResponse.Maybe);\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-month-day',\n    template: `\n    <ng-template #defaultTemplate>\n      <div class=\"calendar-day-top\">\n        <span class=\"calendar-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"calendar-day-number\">{{ day.date | dayofmonth:locale }}</span>\n      </div>\n      <div class=\"calendar-events\">\n        <div\n          class=\"calendar-event\"\n          *ngFor=\"let type of day.events | groupBy : 'type'\"\n          [style.backgroundColor]=\"type?.value[0]?.color.primary\"\n          [ngClass]=\"type?.value[0]?.cssClass\"\n          (click)=\"$event.stopPropagation(); eventClicked.emit({event:type?.value[0]})\">\n          {{type?.value.length}}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        locale: locale,\n        tooltipPosition: tooltipPosition,\n        eventClicked: eventClicked,\n        accepted: accepted,\n        rejected: rejected,\n        maybes: maybes\n      }\">\n    </ng-template>\n  `,\n    host: {\n        '[class]': '\"calendar-cell calendar-day-cell \" + day?.cssClass',\n        '[class.calendar-day-accepted]': 'accepted.length',\n        '[class.calendar-day-rejected]': 'rejected.length',\n        '[class.calendar-past]': 'day.isPast',\n        '[class.calendar-today]': 'day.isToday',\n        '[class.calendar-future]': 'day.isFuture',\n        '[class.calendar-weekend]': 'day.isWeekend',\n        '[class.calendar-in-month]': 'day.inMonth',\n        '[class.calendar-out-month]': '!day.inMonth',\n        '[class.calendar-has-events]': 'day.events.length > 0',\n        '[style.backgroundColor]': 'day.backgroundColor'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'day': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPosition': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarMonthDayElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarMonthDayElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarMonthDayElement.ctorParameters;\n/** @type {?} */\nNovoCalendarMonthDayElement.propDecorators;\n/** @type {?} */\nNovoCalendarMonthDayElement.prototype.day;\n/** @type {?} */\nNovoCalendarMonthDayElement.prototype.locale;\n/** @type {?} */\nNovoCalendarMonthDayElement.prototype.tooltipPosition;\n/** @type {?} */\nNovoCalendarMonthDayElement.prototype.customTemplate;\n/** @type {?} */\nNovoCalendarMonthDayElement.prototype.eventClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    LOCALE_ID,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {\n    CalendarEvent,\n    CalendarEventTimesChangedEvent,\n    DayViewHour,\n    getDayViewHourGrid,\n    getWeekView,\n    getWeekViewHeader,\n    WeekDay,\n    WeekViewEventRow\n} from '../../../utils/calendar-utils/CalendarUtils';\n/**\n * @hidden\n */\nconst SEGMENT_HEIGHT: number = 30;\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n/**\n * Shows all events on a given week. Example usage:\n * \n * ```typescript\n * &lt;novo-calendar-week\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-week&gt;\n * ```\n */\nexport class NovoCalendarWeekViewElement implements OnChanges, OnInit, OnDestroy {\n/**\n * The current view date\n */\nviewDate: Date;\n/**\n * An array of events to display on view\n */\nevents: CalendarEvent[] = [];\n/**\n * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n */\nexcludeDays: number[] = [];\n/**\n * An observable that when emitted on will re-render the current view\n */\nrefresh: Subject<any>;\n/**\n * The locale used to format dates\n */\nlocale: string;\n/**\n * The placement of the event tooltip\n */\ntooltipPosition: string = 'bottom';\n/**\n * The start number of the week\n */\nweekStartsOn: number;\n/**\n * A custom template to use to replace the header\n */\nheaderTemplate: TemplateRef<any>;\n/**\n * A custom template to use for week view events\n */\neventTemplate: TemplateRef<any>;\n/**\n * The precision to display events.\n * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n */\nprecision: 'days' | 'minutes' = 'days';\n/**\n * The number of segments in an hour. Must be <= 6\n */\nhourSegments: number = 2;\n/**\n * The day start hours in 24 hour time. Must be 0-23\n */\ndayStartHour: number = 0;\n/**\n * The day start minutes. Must be 0-59\n */\ndayStartMinute: number = 0;\n/**\n * The day end hours in 24 hour time. Must be 0-23\n */\ndayEndHour: number = 23;\n/**\n * The day end minutes. Must be 0-59\n */\ndayEndMinute: number = 59;\n/**\n * A custom template to use to replace the hour segment\n */\nhourSegmentTemplate: TemplateRef<any>;\n/**\n * Called when an hour segment is clicked\n */\nhourSegmentClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n/**\n * Called when a header week day is clicked\n */\ndayClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n/**\n * Called when the event title is clicked\n */\neventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n/**\n * Called when an event is resized or dragged and dropped\n */\neventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n/**\n * @hidden\n */\ndays: WeekDay[];\n/**\n * @hidden\n */\nhours: DayViewHour[] = [];\n/**\n * @hidden\n */\neventRows: WeekViewEventRow[] = [];\n/**\n * @hidden\n */\nrefreshSubscription: Subscription;\n/**\n * @hidden\n */\ncurrentResize: {\n        originalOffset: number,\n        originalSpan: number,\n        edge: string\n    };\n/**\n * @hidden\n */\nvalidateDrag: Function;\n/**\n * @hidden\n */\nvalidateResize: Function;\n/**\n * @hidden\n * @param {?} cdr\n * @param {?} locale\n */\nconstructor(private cdr: ChangeDetectorRef,  locale: string) {\n        this.locale = locale;\n    }\n/**\n * @hidden\n * @return {?}\n */\nngOnInit(): void {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe(() => {\n                this.refreshAll();\n                this.cdr.detectChanges();\n            });\n        }\n    }\n/**\n * @hidden\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: any): void {\n\n        if (changes.viewDate || changes.excludeDays) {\n            this.refreshHeader();\n        }\n\n        if (changes.events || changes.viewDate || changes.excludeDays) {\n            this.refreshBody();\n        }\n\n        if (\n            changes.viewDate ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute\n        ) {\n            this.refreshHourGrid();\n        }\n\n    }\n/**\n * @hidden\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n/**\n * @param {?} eventRowContainer\n * @return {?}\n */\ngetDayColumnWidth(eventRowContainer: HTMLElement): number {\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n    }\n/**\n * @return {?}\n */\nprivate refreshHeader(): void {\n        this.days = getWeekViewHeader({\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays\n        });\n    }\n/**\n * @return {?}\n */\nprivate refreshBody(): void {\n        this.eventRows = getWeekView({\n            events: this.events,\n            viewDate: this.viewDate,\n            weekStartsOn: this.weekStartsOn,\n            excluded: this.excludeDays,\n            hourSegments: this.hourSegments,\n            segmentHeight: SEGMENT_HEIGHT,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            },\n            //precision: this.precision\n        });\n    }\n/**\n * @return {?}\n */\nprivate refreshHourGrid(): void {\n        this.hours = getDayViewHourGrid({\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            }\n        });\n        // if (this.hourSegmentModifier) {\n        //   this.hours.forEach(hour => {\n        //     hour.segments.forEach(segment => this.hourSegmentModifier(segment));\n        //   });\n        // }\n    }\n/**\n * @return {?}\n */\nprivate refreshAll(): void {\n        this.refreshHeader();\n        this.refreshHourGrid();\n        this.refreshBody();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-week',\n    template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <novo-calendar-week-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayClicked)=\"dayClicked.emit($event)\">\n      </novo-calendar-week-header>\n      <div *ngFor=\"let eventRow of eventRows\" #eventRowContainer>\n        <div\n          class=\"cal-event-container\"\n          #event\n          *ngFor=\"let weekEvent of eventRow.row\"\n          [style.width]=\"((100 / days.length) * weekEvent.span) + '%'\"\n          [style.marginTop.px]=\"weekEvent.top\"\n          [style.height.px]=\"weekEvent.height\"\n          [style.marginLeft]=\"((100 / days.length) * weekEvent.offset) + '%'\">\n          <novo-calendar-week-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPosition]=\"tooltipPosition\"\n            [customTemplate]=\"eventTemplate\"\n            (eventClicked)=\"eventClicked.emit($event)\">\n          </novo-calendar-week-event>\n        </div>\n      </div>\n      <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"view?.width + 70\">\n        <novo-calendar-day-hour-segment\n          *ngFor=\"let segment of hour.segments\"\n          [segment]=\"segment\"\n          [locale]=\"locale\"\n          [customTemplate]=\"hourSegmentTemplate\"\n          (click)=\"hourSegmentClicked.emit({date: segment.date})\">\n        </novo-calendar-day-hour-segment>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'excludeDays': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'tooltipPosition': [{ type: Input },],\n'weekStartsOn': [{ type: Input },],\n'headerTemplate': [{ type: Input },],\n'eventTemplate': [{ type: Input },],\n'precision': [{ type: Input },],\n'hourSegments': [{ type: Input },],\n'dayStartHour': [{ type: Input },],\n'dayStartMinute': [{ type: Input },],\n'dayEndHour': [{ type: Input },],\n'dayEndMinute': [{ type: Input },],\n'hourSegmentTemplate': [{ type: Input },],\n'hourSegmentClicked': [{ type: Output },],\n'dayClicked': [{ type: Output },],\n'eventClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarWeekViewElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarWeekViewElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarWeekViewElement.ctorParameters;\n/** @type {?} */\nNovoCalendarWeekViewElement.propDecorators;\n/**\n * The current view date\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.viewDate;\n/**\n * An array of events to display on view\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.events;\n/**\n * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.excludeDays;\n/**\n * An observable that when emitted on will re-render the current view\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.refresh;\n/**\n * The locale used to format dates\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.locale;\n/**\n * The placement of the event tooltip\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.tooltipPosition;\n/**\n * The start number of the week\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.weekStartsOn;\n/**\n * A custom template to use to replace the header\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.headerTemplate;\n/**\n * A custom template to use for week view events\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.eventTemplate;\n/**\n * The precision to display events.\n * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.precision;\n/**\n * The number of segments in an hour. Must be <= 6\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.hourSegments;\n/**\n * The day start hours in 24 hour time. Must be 0-23\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.dayStartHour;\n/**\n * The day start minutes. Must be 0-59\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.dayStartMinute;\n/**\n * The day end hours in 24 hour time. Must be 0-23\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.dayEndHour;\n/**\n * The day end minutes. Must be 0-59\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.dayEndMinute;\n/**\n * A custom template to use to replace the hour segment\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.hourSegmentTemplate;\n/**\n * Called when an hour segment is clicked\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.hourSegmentClicked;\n/**\n * Called when a header week day is clicked\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.dayClicked;\n/**\n * Called when the event title is clicked\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.eventClicked;\n/**\n * Called when an event is resized or dragged and dropped\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.eventTimesChanged;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.days;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.hours;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.eventRows;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.refreshSubscription;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.currentResize;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.validateDrag;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarWeekViewElement.prototype.validateResize;\n/** @type {?} */\nNovoCalendarWeekViewElement.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { CalendarEvent, WeekDay } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoCalendarWeekHeaderElement {\n\n     days: WeekDay[];\n\n     locale: string;\n\n     customTemplate: TemplateRef<any>;\n\n     dayClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n\n     eventDropped: EventEmitter<{ event: CalendarEvent, newStart: Date }> = new EventEmitter<{ event: CalendarEvent, newStart: Date }>();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-week-header',\n    template: `\n    <ng-template #defaultTemplate>\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [class.cal-drag-over]=\"day.dragOver\"\n          (click)=\"dayClicked.emit({date: day.date})\"\n          mwlDroppable\n          (dragEnter)=\"day.dragOver = true\"\n          (dragLeave)=\"day.dragOver = false\"\n          (drop)=\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n          <b>{{ day.date | weekday:locale:'long'}}</b><br>\n          <span>{{ day.date | monthday:locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, dayClicked: dayClicked, eventDropped: eventDropped}\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'days': [{ type: Input },],\n'locale': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'dayClicked': [{ type: Output },],\n'eventDropped': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarWeekHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarWeekHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarWeekHeaderElement.ctorParameters;\n/** @type {?} */\nNovoCalendarWeekHeaderElement.propDecorators;\n/** @type {?} */\nNovoCalendarWeekHeaderElement.prototype.days;\n/** @type {?} */\nNovoCalendarWeekHeaderElement.prototype.locale;\n/** @type {?} */\nNovoCalendarWeekHeaderElement.prototype.customTemplate;\n/** @type {?} */\nNovoCalendarWeekHeaderElement.prototype.dayClicked;\n/** @type {?} */\nNovoCalendarWeekHeaderElement.prototype.eventDropped;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { WeekViewEvent } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoCalendarWeekEventElement {\n\n     weekEvent: WeekViewEvent;\n\n     tooltipPosition: string;\n\n     customTemplate: TemplateRef<any>;\n\n     eventClicked: EventEmitter<any> = new EventEmitter();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-week-event',\n    template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-event\"\n        [class.cal-starts-within-week]=\"!weekEvent.startsBeforeWeek\"\n        [class.cal-ends-within-week]=\"!weekEvent.endsAfterWeek\"\n        [ngClass]=\"weekEvent.event?.cssClass\"\n        [tooltip]=\"weekEvent.event.description\"\n        [tooltipPosition]=\"tooltipPosition\"\n        (click)=\"eventClicked.emit({event: weekEvent.event})\">\n        <div class=\"cal-event-ribbon\" [style.backgroundColor]=\"weekEvent.event.color.primary\"></div>\n        <div class=\"cal-event-title\">{{weekEvent.event?.title}}</div>\n        <div class=\"cal-event-description\">{{weekEvent.event?.description}}</div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{weekEvent: weekEvent, tooltipPosition: tooltipPosition, eventClicked: eventClicked}\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'weekEvent': [{ type: Input },],\n'tooltipPosition': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarWeekEventElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarWeekEventElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarWeekEventElement.ctorParameters;\n/** @type {?} */\nNovoCalendarWeekEventElement.propDecorators;\n/** @type {?} */\nNovoCalendarWeekEventElement.prototype.weekEvent;\n/** @type {?} */\nNovoCalendarWeekEventElement.prototype.tooltipPosition;\n/** @type {?} */\nNovoCalendarWeekEventElement.prototype.customTemplate;\n/** @type {?} */\nNovoCalendarWeekEventElement.prototype.eventClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    Output,\n    EventEmitter,\n    ChangeDetectorRef,\n    LOCALE_ID,\n    Inject,\n    OnInit,\n    OnDestroy,\n    TemplateRef\n} from '@angular/core';\nimport {\n    CalendarEvent,\n    DayView,\n    DayViewHour,\n    DayViewHourSegment,\n    DayViewEvent,\n    CalendarEventTimesChangedEvent,\n    getDayView,\n    getDayViewHourGrid\n} from '../../../utils/calendar-utils/CalendarUtils';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n * @hidden\n */\nconst SEGMENT_HEIGHT: number = 30;\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n/**\n * Shows all events on a given day. Example usage:\n * \n * ```typescript\n * &lt;novo-calendar-day\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\"&gt;\n * &lt;/novo-calendar-day&gt;\n * ```\n */\nexport class NovoCalendarDayViewElement implements OnChanges, OnInit, OnDestroy {\n/**\n * The current view date\n */\nviewDate: Date;\n/**\n * An array of events to display on view\n */\nevents: CalendarEvent[] = [];\n/**\n * The number of segments in an hour. Must be <= 6\n */\nhourSegments: number = 2;\n/**\n * The day start hours in 24 hour time. Must be 0-23\n */\ndayStartHour: number = 0;\n/**\n * The day start minutes. Must be 0-59\n */\ndayStartMinute: number = 0;\n/**\n * The day end hours in 24 hour time. Must be 0-23\n */\ndayEndHour: number = 23;\n/**\n * The day end minutes. Must be 0-59\n */\ndayEndMinute: number = 59;\n/**\n * The width in pixels of each event on the view\n */\neventWidth: number = 150;\n/**\n * An observable that when emitted on will re-render the current view\n */\nrefresh: Subject<any>;\n/**\n * The locale used to format dates\n */\nlocale: string;\n/**\n * A function that will be called before each hour segment is called. The first argument will contain the hour segment.\n * If you add the `cssClass` property to the segment it will add that class to the hour segment in the template\n */\nhourSegmentModifier: Function;\n/**\n * The grid size to snap resizing and dragging of events to\n */\neventSnapSize: number = 30;\n/**\n * The placement of the event tooltip\n */\ntooltipPosition: string = 'top';\n/**\n * A custom template to use to replace the hour segment\n */\nhourSegmentTemplate: TemplateRef<any>;\n/**\n * A custom template to use for all day events\n */\nallDayEventTemplate: TemplateRef<any>;\n/**\n * A custom template to use for day view events\n */\neventTemplate: TemplateRef<any>;\n/**\n * Called when an event title is clicked\n */\neventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{ event: CalendarEvent }>();\n/**\n * Called when an hour segment is clicked\n */\nhourSegmentClicked: EventEmitter<{ date: Date }> = new EventEmitter<{ date: Date }>();\n/**\n * Called when an event is resized or dragged and dropped\n */\neventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent> = new EventEmitter<CalendarEventTimesChangedEvent>();\n/**\n * @hidden\n */\nhours: DayViewHour[] = [];\n/**\n * @hidden\n */\nview: DayView;\n/**\n * @hidden\n */\nwidth: number = 0;\n/**\n * @hidden\n */\nrefreshSubscription: Subscription;\n/**\n * @hidden\n */\ncurrentResize: {\n        originalTop: number,\n        originalHeight: number,\n        edge: string\n    };\n/**\n * @hidden\n */\nvalidateDrag: Function;\n/**\n * @hidden\n */\nvalidateResize: Function;\n/**\n * @hidden\n * @param {?} cdr\n * @param {?} locale\n */\nconstructor(private cdr: ChangeDetectorRef,  locale: string) {\n        this.locale = locale;\n    }\n/**\n * @hidden\n * @return {?}\n */\nngOnInit(): void {\n        if (this.refresh) {\n            this.refreshSubscription = this.refresh.subscribe(() => {\n                this.refreshAll();\n                this.cdr.detectChanges();\n            });\n        }\n    }\n/**\n * @hidden\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this.refreshSubscription) {\n            this.refreshSubscription.unsubscribe();\n        }\n    }\n/**\n * @hidden\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: any): void {\n\n        if (\n            changes.viewDate ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute\n        ) {\n            this.refreshHourGrid();\n        }\n\n        if (\n            changes.viewDate ||\n            changes.events ||\n            changes.dayStartHour ||\n            changes.dayStartMinute ||\n            changes.dayEndHour ||\n            changes.dayEndMinute ||\n            changes.eventWidth\n        ) {\n            this.refreshView();\n        }\n\n    }\n/**\n * @return {?}\n */\nprivate refreshHourGrid(): void {\n        this.hours = getDayViewHourGrid({\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            }\n        });\n        if (this.hourSegmentModifier) {\n            this.hours.forEach(hour => {\n                hour.segments.forEach(segment => this.hourSegmentModifier(segment));\n            });\n        }\n    }\n/**\n * @return {?}\n */\nprivate refreshView(): void {\n        this.view = getDayView({\n            events: this.events,\n            viewDate: this.viewDate,\n            hourSegments: this.hourSegments,\n            dayStart: {\n                hour: this.dayStartHour,\n                minute: this.dayStartMinute\n            },\n            dayEnd: {\n                hour: this.dayEndHour,\n                minute: this.dayEndMinute\n            },\n            eventWidth: this.eventWidth,\n            segmentHeight: SEGMENT_HEIGHT\n        });\n    }\n/**\n * @return {?}\n */\nprivate refreshAll(): void {\n        this.refreshHourGrid();\n        this.refreshView();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-day',\n    template: `\n    <div class=\"cal-day-view\" #dayViewContainer>\n      <novo-calendar-all-day-event\n        *ngFor=\"let event of view.allDayEvents\"\n        [event]=\"event\"\n        [customTemplate]=\"allDayEventTemplate\"\n        (eventClicked)=\"eventClicked.emit({event: event})\">\n      </novo-calendar-all-day-event>\n      <div class=\"cal-hour-rows\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events\"\n            class=\"cal-event-container\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\">\n            <novo-calendar-day-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPosition]=\"tooltipPosition\"\n              [customTemplate]=\"eventTemplate\"\n              (eventClicked)=\"eventClicked.emit($event)\">\n            </novo-calendar-day-event>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours\" [style.minWidth.px]=\"view?.width + 70\">\n          <novo-calendar-day-hour-segment\n            *ngFor=\"let segment of hour.segments\"\n            [segment]=\"segment\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (click)=\"hourSegmentClicked.emit({date: segment.date})\">\n          </novo-calendar-day-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'viewDate': [{ type: Input },],\n'events': [{ type: Input },],\n'hourSegments': [{ type: Input },],\n'dayStartHour': [{ type: Input },],\n'dayStartMinute': [{ type: Input },],\n'dayEndHour': [{ type: Input },],\n'dayEndMinute': [{ type: Input },],\n'eventWidth': [{ type: Input },],\n'refresh': [{ type: Input },],\n'locale': [{ type: Input },],\n'hourSegmentModifier': [{ type: Input },],\n'eventSnapSize': [{ type: Input },],\n'tooltipPosition': [{ type: Input },],\n'hourSegmentTemplate': [{ type: Input },],\n'allDayEventTemplate': [{ type: Input },],\n'eventTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n'hourSegmentClicked': [{ type: Output },],\n'eventTimesChanged': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarDayViewElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarDayViewElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarDayViewElement.ctorParameters;\n/** @type {?} */\nNovoCalendarDayViewElement.propDecorators;\n/**\n * The current view date\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.viewDate;\n/**\n * An array of events to display on view\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.events;\n/**\n * The number of segments in an hour. Must be <= 6\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.hourSegments;\n/**\n * The day start hours in 24 hour time. Must be 0-23\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.dayStartHour;\n/**\n * The day start minutes. Must be 0-59\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.dayStartMinute;\n/**\n * The day end hours in 24 hour time. Must be 0-23\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.dayEndHour;\n/**\n * The day end minutes. Must be 0-59\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.dayEndMinute;\n/**\n * The width in pixels of each event on the view\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.eventWidth;\n/**\n * An observable that when emitted on will re-render the current view\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.refresh;\n/**\n * The locale used to format dates\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.locale;\n/**\n * A function that will be called before each hour segment is called. The first argument will contain the hour segment.\n * If you add the `cssClass` property to the segment it will add that class to the hour segment in the template\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.hourSegmentModifier;\n/**\n * The grid size to snap resizing and dragging of events to\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.eventSnapSize;\n/**\n * The placement of the event tooltip\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.tooltipPosition;\n/**\n * A custom template to use to replace the hour segment\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.hourSegmentTemplate;\n/**\n * A custom template to use for all day events\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.allDayEventTemplate;\n/**\n * A custom template to use for day view events\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.eventTemplate;\n/**\n * Called when an event title is clicked\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.eventClicked;\n/**\n * Called when an hour segment is clicked\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.hourSegmentClicked;\n/**\n * Called when an event is resized or dragged and dropped\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.eventTimesChanged;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.hours;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.view;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.width;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.refreshSubscription;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.currentResize;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.validateDrag;\n/**\n * @hidden\n * @type {?}\n */\nNovoCalendarDayViewElement.prototype.validateResize;\n/** @type {?} */\nNovoCalendarDayViewElement.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { DayViewEvent } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoCalendarDayEventElement {\n\n     dayEvent: DayViewEvent;\n\n     tooltipPosition: string;\n\n     customTemplate: TemplateRef<any>;\n\n     eventClicked: EventEmitter<any> = new EventEmitter();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-day-event',\n    template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-event\"\n        [style.borderColor]=\"dayEvent.event.color.secondary\"\n        [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n        [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n        [ngClass]=\"dayEvent.event.cssClass\"\n        [tooltip]=\"dayEvent.event.description\"\n        [tooltipPosition]=\"tooltipPosition\"\n        (click)=\"eventClicked.emit({event: dayEvent.event})\">\n          <div class=\"cal-event-ribbon\" [style.backgroundColor]=\"dayEvent.event.color.primary\"></div>\n          <div class=\"cal-event-group\">\n            <div class=\"cal-event-title\">{{dayEvent.event.title}}</div>\n            <div class=\"cal-event-description\">{{dayEvent.event?.description}}</div>\n          </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{dayEvent: dayEvent, tooltipPosition: tooltipPosition, eventClicked: eventClicked}\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayEvent': [{ type: Input },],\n'tooltipPosition': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarDayEventElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarDayEventElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarDayEventElement.ctorParameters;\n/** @type {?} */\nNovoCalendarDayEventElement.propDecorators;\n/** @type {?} */\nNovoCalendarDayEventElement.prototype.dayEvent;\n/** @type {?} */\nNovoCalendarDayEventElement.prototype.tooltipPosition;\n/** @type {?} */\nNovoCalendarDayEventElement.prototype.customTemplate;\n/** @type {?} */\nNovoCalendarDayEventElement.prototype.eventClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoCalendarHourSegmentElement {\n\n     segment: DayViewHourSegment;\n\n     locale: string;\n\n     customTemplate: TemplateRef<any>;\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-day-hour-segment',\n    template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-hour-segment\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\">\n          {{ segment.date | hours:locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'segment': [{ type: Input },],\n'locale': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n};\n}\n\nfunction NovoCalendarHourSegmentElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarHourSegmentElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarHourSegmentElement.ctorParameters;\n/** @type {?} */\nNovoCalendarHourSegmentElement.propDecorators;\n/** @type {?} */\nNovoCalendarHourSegmentElement.prototype.segment;\n/** @type {?} */\nNovoCalendarHourSegmentElement.prototype.locale;\n/** @type {?} */\nNovoCalendarHourSegmentElement.prototype.customTemplate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from '../../../utils/calendar-utils/CalendarUtils';\nexport class NovoCalendarAllDayEventElement {\n\n     event: CalendarEvent;\n\n     customTemplate: TemplateRef<any>;\n\n     eventClicked: EventEmitter<any> = new EventEmitter();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-calendar-all-day-event',\n    template: `\n    <ng-template #defaultTemplate>\n      <div\n        class=\"cal-all-day-event\"\n        [style.backgroundColor]=\"event.color.secondary\"\n        [style.borderColor]=\"event.color.primary\">\n        {{event.title}}\n        <!--<novo-calendar-event-title\n          [event]=\"event\"\n          view=\"day\"\n          (click)=\"eventClicked.emit()\">\n        </novo-calendar-event-title>\n        <novo-calendar-event-actions [event]=\"event\"></novo-calendar-event-actions>-->\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        eventClicked: eventClicked\n      }\">\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Input },],\n'customTemplate': [{ type: Input },],\n'eventClicked': [{ type: Output },],\n};\n}\n\nfunction NovoCalendarAllDayEventElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarAllDayEventElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarAllDayEventElement.ctorParameters;\n/** @type {?} */\nNovoCalendarAllDayEventElement.propDecorators;\n/** @type {?} */\nNovoCalendarAllDayEventElement.prototype.event;\n/** @type {?} */\nNovoCalendarAllDayEventElement.prototype.customTemplate;\n/** @type {?} */\nNovoCalendarAllDayEventElement.prototype.eventClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class WeekdayPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(date: Date, locale: string = this.locale, method: string = 'short'): string {\n        return new Intl.DateTimeFormat(locale, { weekday: method }).format(date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'weekday' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction WeekdayPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nWeekdayPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeekdayPipe.ctorParameters;\n/** @type {?} */\nWeekdayPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class MonthPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(date: Date, locale: string = this.locale, method: string = 'long'): string {\n        return new Intl.DateTimeFormat(locale, { month: method }).format(date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'month' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction MonthPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthPipe.ctorParameters;\n/** @type {?} */\nMonthPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class MonthDayPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(date: Date, locale: string = this.locale, method: string = 'short'): string {\n        return new Intl.DateTimeFormat(locale, { month: method, day: 'numeric' }).format(date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'monthday' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction MonthDayPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthDayPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthDayPipe.ctorParameters;\n/** @type {?} */\nMonthDayPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class YearPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(date: Date, locale: string = this.locale, method: string = 'numeric'): string {\n        return new Intl.DateTimeFormat(locale, { year: method }).format(date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'year' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction YearPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nYearPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearPipe.ctorParameters;\n/** @type {?} */\nYearPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class HoursPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(date: Date, locale: string = this.locale, method: string = 'numeric'): string {\n        return new Intl.DateTimeFormat(locale, { hour: method }).format(date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'hours' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction HoursPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nHoursPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoursPipe.ctorParameters;\n/** @type {?} */\nHoursPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class DayOfMonthPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(date: Date, locale: string = this.locale, method: string = 'numeric'): string {\n        return new Intl.DateTimeFormat(locale, { day: method }).format(date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'dayofmonth' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DayOfMonthPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDayOfMonthPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayOfMonthPipe.ctorParameters;\n/** @type {?} */\nDayOfMonthPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nexport class EndOfWeekDisplayPipe implements PipeTransform {\n/**\n * @param {?=} locale\n */\nconstructor(\nprivate locale: string = 'en-US') { }\n/**\n * @param {?} endOfWeek\n * @param {?} startOfWeek\n * @param {?=} locale\n * @param {?=} method\n * @return {?}\n */\ntransform(endOfWeek: Date, startOfWeek: Date, locale: string = this.locale, method: string = 'short'): String {\n        if (endOfWeek.getMonth() === startOfWeek.getMonth()) {\n            return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(endOfWeek);\n        }\n\n        return new Intl.DateTimeFormat(locale, { month: method, day: 'numeric' }).format(endOfWeek);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'endofweekdisplay' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction EndOfWeekDisplayPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nEndOfWeekDisplayPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEndOfWeekDisplayPipe.ctorParameters;\n/** @type {?} */\nEndOfWeekDisplayPipe.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { NovoPipesModule } from '../../pipes/Pipes.module';\n// Common Elements\n\nimport { NovoEventTypeLegendElement } from './common/EventTypeLegend';\nimport { NovoCalendarDateChangeElement } from './common/CalendarDateChange';\n\n// Month View\n\nimport { NovoCalendarMonthViewElement } from './month/CalendarMonthView';\nimport { NovoCalendarMonthHeaderElement } from './month/CalendarMonthHeader';\nimport { NovoCalendarMonthDayElement } from './month/CalendarMonthDay';\n// Week View\n\nimport { NovoCalendarWeekViewElement } from './week/CalendarWeekView';\nimport { NovoCalendarWeekHeaderElement } from './week/CalendarWeekHeader';\nimport { NovoCalendarWeekEventElement } from './week/CalendarWeekEvent';\n// Day View\n\nimport { NovoCalendarDayViewElement } from './day/CalendarDayView';\nimport { NovoCalendarDayEventElement } from './day/CalendarDayEvent';\nimport { NovoCalendarHourSegmentElement } from './day/CalendarHourSegment';\nimport { NovoCalendarAllDayEventElement } from './day/CalendarAllDayEvent';\n// Common\n\nimport { WeekdayPipe } from './pipe/Weekday.pipe';\nimport { MonthPipe } from './pipe/Month.pipe';\nimport { MonthDayPipe } from './pipe/MonthDay.pipe';\nimport { YearPipe } from './pipe/Year.pipe';\nimport { HoursPipe } from './pipe/Hours.pipe';\nimport { DayOfMonthPipe } from './pipe/DayOfMonth.pipe';\nimport { EndOfWeekDisplayPipe } from './pipe/EndOfWeekDisplayPipe.pipe';\nexport class NovoCalendarModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule, NovoTooltipModule, NovoPipesModule],\n    declarations: [\n        NovoEventTypeLegendElement,\n        NovoCalendarMonthViewElement,\n        NovoCalendarMonthHeaderElement,\n        NovoCalendarMonthDayElement,\n        NovoCalendarWeekViewElement,\n        NovoCalendarWeekHeaderElement,\n        NovoCalendarWeekEventElement,\n        NovoCalendarDayViewElement,\n        NovoCalendarDayEventElement,\n        NovoCalendarHourSegmentElement,\n        NovoCalendarAllDayEventElement,\n        NovoCalendarDateChangeElement,\n        WeekdayPipe,\n        DayOfMonthPipe,\n        MonthPipe,\n        MonthDayPipe,\n        YearPipe,\n        HoursPipe,\n        EndOfWeekDisplayPipe\n    ],\n    exports: [\n        NovoEventTypeLegendElement,\n        NovoCalendarMonthViewElement,\n        NovoCalendarMonthHeaderElement,\n        NovoCalendarMonthDayElement,\n        NovoCalendarWeekViewElement,\n        NovoCalendarWeekHeaderElement,\n        NovoCalendarWeekEventElement,\n        NovoCalendarDayViewElement,\n        NovoCalendarDayEventElement,\n        NovoCalendarHourSegmentElement,\n        NovoCalendarAllDayEventElement,\n        NovoCalendarDateChangeElement,\n        WeekdayPipe,\n        DayOfMonthPipe,\n        MonthPipe,\n        MonthDayPipe,\n        YearPipe,\n        HoursPipe,\n        EndOfWeekDisplayPipe\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoCalendarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCalendarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCalendarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nexport class NovoToastElement implements OnInit, OnChanges {\n   theme: string = 'danger';\n   icon: string = 'caution';\n   title: string;\n   hasDialogue: boolean = false;\n   link: string;\n   isCloseable: boolean = false;\n/**\n * @param {?} m\n * @return {?}\n */\nset message(m: string) {\n    this._message = this.sanitizer.bypassSecurityTrustHtml(m);\n  }\n   closed: EventEmitter<any> = new EventEmitter();\n\n  _message: SafeHtml;\n  show: boolean = false;\n  animate: boolean = false;\n  parent: any = null;\n  launched: boolean = false;\n  position: any;\n  time: any;\n  iconClass: string;\n  alertTheme: string;\n  embedded: any;\n/**\n * @param {?} sanitizer\n */\nconstructor(private sanitizer: DomSanitizer) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.launched) {\n      // clear position and time\n      this.position = null;\n      this.time = null;\n\n      // set icon and styling\n      this.iconClass = `bhi-${this.icon}`;\n      this.alertTheme = `${this.theme} toast-container embedded`;\n      if (this.hasDialogue) {\n        this.alertTheme += ' dialogue';\n      }\n    }\n  }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n    // set icon and styling\n    this.iconClass = `bhi-${this.icon}`;\n    this.alertTheme = `${this.theme} toast-container embedded`;\n    if (this.hasDialogue) {\n      this.alertTheme += ' dialogue';\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandler(event) {\n    if (!this.isCloseable) {\n      if (event) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      if (this.parent) {\n        this.parent.hide(this);\n      } else {\n        this.closed.emit({ closed: true });\n      }\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclose(event) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (this.parent) {\n      this.parent.hide(this);\n    } else {\n      this.closed.emit({ closed: true });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-toast',\n  host: {\n    '[class]': 'alertTheme',\n    '[class.show]': 'show',\n    '[class.animate]': 'animate',\n    '[class.embedded]': 'embedded',\n    '(click)': '!isCloseable && clickHandler($event)',\n  },\n  template: `\n        <div class=\"toast-icon\">\n            <i [ngClass]=\"iconClass\"></i>\n        </div>\n        <div class=\"toast-content\">\n            <h5 *ngIf=\"title\">{{title}}</h5>\n            <p *ngIf=\"_message\" [class.message-only]=\"!title\" [innerHtml]=\"_message\"></p>\n            <div *ngIf=\"link\" class=\"link-generated\">\n                <input type=\"text\" [value]=\"link\" onfocus=\"this.select();\"/>\n            </div>\n            <div class=\"dialogue\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div class=\"close-icon\" *ngIf=\"isCloseable\" (click)=\"close($event)\">\n            <i class=\"bhi-times\"></i>\n        </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'icon': [{ type: Input },],\n'title': [{ type: Input },],\n'hasDialogue': [{ type: Input },],\n'link': [{ type: Input },],\n'isCloseable': [{ type: Input },],\n'message': [{ type: Input },],\n'closed': [{ type: Output },],\n};\n}\n\nfunction NovoToastElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoToastElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoToastElement.ctorParameters;\n/** @type {?} */\nNovoToastElement.propDecorators;\n/** @type {?} */\nNovoToastElement.prototype.theme;\n/** @type {?} */\nNovoToastElement.prototype.icon;\n/** @type {?} */\nNovoToastElement.prototype.title;\n/** @type {?} */\nNovoToastElement.prototype.hasDialogue;\n/** @type {?} */\nNovoToastElement.prototype.link;\n/** @type {?} */\nNovoToastElement.prototype.isCloseable;\n/** @type {?} */\nNovoToastElement.prototype.closed;\n/** @type {?} */\nNovoToastElement.prototype._message;\n/** @type {?} */\nNovoToastElement.prototype.show;\n/** @type {?} */\nNovoToastElement.prototype.animate;\n/** @type {?} */\nNovoToastElement.prototype.parent;\n/** @type {?} */\nNovoToastElement.prototype.launched;\n/** @type {?} */\nNovoToastElement.prototype.position;\n/** @type {?} */\nNovoToastElement.prototype.time;\n/** @type {?} */\nNovoToastElement.prototype.iconClass;\n/** @type {?} */\nNovoToastElement.prototype.alertTheme;\n/** @type {?} */\nNovoToastElement.prototype.embedded;\n/** @type {?} */\nNovoToastElement.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoToastElement } from './Toast';\nexport class NovoToastModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NovoToastElement],\n    exports: [NovoToastElement],\n    entryComponents: [NovoToastElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoToastModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoToastModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoToastModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nexport class NovoHeaderSpacer {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'header-spacer',\n  template: `\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoHeaderSpacer_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoHeaderSpacer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoHeaderSpacer.ctorParameters;\n}\n\nexport class NovoUtilsComponent {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'utils',\n  template: `\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoUtilsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoUtilsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoUtilsComponent.ctorParameters;\n}\n\nexport class NovoUtilActionComponent {\npublic icon: string;\npublic inverse: boolean;\npublic disabled: boolean;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'util-action, novo-action',\n  template: `\n    <button theme=\"icon\" [icon]=\"icon\" [attr.inverse]=\"inverse\" [disabled]=\"disabled\">\n      <ng-content></ng-content>\n    </button>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'inverse': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NovoUtilActionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoUtilActionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoUtilActionComponent.ctorParameters;\n/** @type {?} */\nNovoUtilActionComponent.propDecorators;\n/** @type {?} */\nNovoUtilActionComponent.prototype.icon;\n/** @type {?} */\nNovoUtilActionComponent.prototype.inverse;\n/** @type {?} */\nNovoUtilActionComponent.prototype.disabled;\n}\n\nexport class NovoHeaderComponent {\npublic headerClass: string = 'novo-header';\npublic condensed: boolean = false;\npublic title: string;\npublic subTitle: string;\npublic inverse: string = 'inverse';\n/**\n * @param {?} theme\n * @return {?}\n */\nset theme(theme: string) {\n    this._theme = theme;\n    this.inverse = theme === 'white' || theme === 'off-white' || theme === 'light' ? undefined : 'inverse';\n  }\n/**\n * @return {?}\n */\nget theme(): string {\n    return this._theme;\n  }\n/**\n * @param {?} icon\n * @return {?}\n */\nset icon(icon: string) {\n    this._icon = `bhi-${icon}`;\n  }\n/**\n * @return {?}\n */\nget icon(): string {\n    return this._icon;\n  }\nprivate _theme: string;\nprivate _icon: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'header[theme]',\n  template: `\n    <section>\n      <div class=\"header-title\">\n        <ng-container *ngIf=\"title\">\n          <i *ngIf=\"icon\" class=\"header-icon\" [ngClass]=\"icon\"></i>\n          <div class=\"header-titles\">\n            <h1>{{ title }}</h1>\n            <small *ngIf=\"subTitle\">{{ subTitle }}</small>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!title\">\n          <ng-content select=\"novo-icon, [novo-icon]\"></ng-content>\n          <div class=\"header-titles\">\n            <ng-content select=\"h1, h2, h3, h4, h5, h6, small, [novo-title], [novo-subtitle]\"></ng-content>\n          </div>\n        </ng-container>\n      </div>\n      <ng-content select=\"section\"></ng-content>\n      <span flex></span>\n      <ng-content select=\"utils\"></ng-content>\n    </section>\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'headerClass': [{ type: HostBinding, args: ['class', ] },],\n'condensed': [{ type: HostBinding, args: ['class.condensed', ] },{ type: Input },],\n'title': [{ type: Input },],\n'subTitle': [{ type: Input },],\n'theme': [{ type: HostBinding, args: ['attr.theme', ] },{ type: Input },],\n'icon': [{ type: Input },],\n};\n}\n\nfunction NovoHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoHeaderComponent.ctorParameters;\n/** @type {?} */\nNovoHeaderComponent.propDecorators;\n/** @type {?} */\nNovoHeaderComponent.prototype.headerClass;\n/** @type {?} */\nNovoHeaderComponent.prototype.condensed;\n/** @type {?} */\nNovoHeaderComponent.prototype.title;\n/** @type {?} */\nNovoHeaderComponent.prototype.subTitle;\n/** @type {?} */\nNovoHeaderComponent.prototype.inverse;\n/** @type {?} */\nNovoHeaderComponent.prototype._theme;\n/** @type {?} */\nNovoHeaderComponent.prototype._icon;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NovoButtonModule } from './../button/Button.module';\nimport {\n    NovoHeaderComponent, NovoUtilActionComponent,\n    NovoUtilsComponent, NovoHeaderSpacer,\n} from './Header';\nexport class NovoHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        NovoButtonModule,\n    ],\n    declarations: [\n        NovoHeaderComponent,\n        NovoUtilActionComponent,\n        NovoUtilsComponent,\n        NovoHeaderSpacer\n    ],\n    exports: [\n        NovoHeaderComponent,\n        NovoUtilActionComponent,\n        NovoUtilsComponent,\n        NovoHeaderSpacer,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, EventEmitter, Output, HostBinding } from '@angular/core';\nexport class NovoNavElement {\n     theme: string = '';\n     direction: string = '';\n     outlet: any;\n     router: string;\n      condensed: boolean = false;\n\n    items: Array<any> = [];\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item) {\n/**\n * Deactivate all other tabs\n * @param {?} items\n * @return {?}\n */\nfunction _deactivateAllItems(items) {\n            items.forEach((t) => {\n                if (t.active === true) {\n                    // t.deselected.next();\n                }\n                t.active = false;\n            });\n        }\n\n        _deactivateAllItems(this.items);\n        item.active = true;\n        if (this.outlet) {\n            this.outlet.show(this.items.indexOf(item));\n        }\n\n        // TODO - remove hack to make DOM rerender - jgodi\n        let /** @type {?} */ element = /** @type {?} */(( document.querySelector('novo-tab-link.active span.indicator') as any));\n        if (element) {\n            element.style.opacity = 0.99;\n            setTimeout(() => {\n                element.style.opacity = 1;\n            }, 10);\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nadd(item) {\n        if (this.items.length === 0) {\n            item.active = true;\n            // item.selected.next();\n        }\n        this.items.push(item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-nav',\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'direction': [{ type: Input },],\n'outlet': [{ type: Input },],\n'router': [{ type: Input },],\n'condensed': [{ type: HostBinding, args: ['class.condensed', ] },{ type: Input },],\n};\n}\n\nfunction NovoNavElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoNavElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoNavElement.ctorParameters;\n/** @type {?} */\nNovoNavElement.propDecorators;\n/** @type {?} */\nNovoNavElement.prototype.theme;\n/** @type {?} */\nNovoNavElement.prototype.direction;\n/** @type {?} */\nNovoNavElement.prototype.outlet;\n/** @type {?} */\nNovoNavElement.prototype.router;\n/** @type {?} */\nNovoNavElement.prototype.condensed;\n/** @type {?} */\nNovoNavElement.prototype.items;\n}\n\nexport class NovoTabElement {\n     active: boolean = false;\n     disabled: boolean = false;\n     activeChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    nav: any;\n/**\n * @param {?} nav\n */\nconstructor(nav: NovoNavElement) {\n        this.nav = nav;\n        this.nav.add(this);\n    }\n/**\n * @return {?}\n */\nselect() {\n        if (!this.disabled) {\n            this.activeChange.emit(true);\n            this.nav.select(this);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-tab',\n    host: {\n        '(click)': 'select()',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled'\n    },\n    template: `\n        <div class=\"novo-tab-link\">\n            <ng-content></ng-content>\n        </div>\n        <span class=\"indicator\"></span>\n   `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoNavElement, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n'disabled': [{ type: Input },],\n'activeChange': [{ type: Output },],\n};\n}\n\nfunction NovoTabElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTabElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTabElement.ctorParameters;\n/** @type {?} */\nNovoTabElement.propDecorators;\n/** @type {?} */\nNovoTabElement.prototype.active;\n/** @type {?} */\nNovoTabElement.prototype.disabled;\n/** @type {?} */\nNovoTabElement.prototype.activeChange;\n/** @type {?} */\nNovoTabElement.prototype.nav;\n}\n\nexport class NovoTabButtonElement {\n     active: boolean = false;\n     disabled: boolean = false;\n\n    nav: any;\n/**\n * @param {?} nav\n */\nconstructor(nav: NovoNavElement) {\n        this.nav = nav;\n        this.nav.add(this);\n    }\n/**\n * @return {?}\n */\nselect() {\n        if (!this.disabled) {\n            this.nav.select(this);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-tab-button',\n    host: {\n        '(click)': 'select()',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled'\n    },\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoNavElement, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NovoTabButtonElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTabButtonElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTabButtonElement.ctorParameters;\n/** @type {?} */\nNovoTabButtonElement.propDecorators;\n/** @type {?} */\nNovoTabButtonElement.prototype.active;\n/** @type {?} */\nNovoTabButtonElement.prototype.disabled;\n/** @type {?} */\nNovoTabButtonElement.prototype.nav;\n}\n\nexport class NovoTabLinkElement {\n     active: boolean = false;\n     disabled: boolean = false;\n\n    nav: any;\n/**\n * @param {?} nav\n */\nconstructor(nav: NovoNavElement) {\n        this.nav = nav;\n        this.nav.add(this);\n    }\n/**\n * @return {?}\n */\nselect() {\n        if (!this.disabled) {\n            this.nav.select(this);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-tab-link',\n    host: {\n        '(click)': 'select()',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled'\n    },\n    template: `\n        <div class=\"novo-tab-link\">\n            <ng-content></ng-content>\n        </div>\n        <span class=\"indicator\"></span>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoNavElement, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NovoTabLinkElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTabLinkElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTabLinkElement.ctorParameters;\n/** @type {?} */\nNovoTabLinkElement.propDecorators;\n/** @type {?} */\nNovoTabLinkElement.prototype.active;\n/** @type {?} */\nNovoTabLinkElement.prototype.disabled;\n/** @type {?} */\nNovoTabLinkElement.prototype.nav;\n}\n\nexport class NovoNavOutletElement {\n    items: Array<any> = [];\n/**\n * @param {?} index\n * @return {?}\n */\nshow(index) {\n        let /** @type {?} */ item = this.items[index];\n/**\n * Deactivates other tab items\n * @param {?} items - deactivated items\n * @return {?}\n */\nfunction _deactivateAllItems(items) {\n            items.forEach((t) => {\n                if (t.active === true) {\n                    // t.deselected.next();\n                }\n                t.active = false;\n            });\n        }\n\n        _deactivateAllItems(this.items);\n        item.active = true;\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nadd(item) {\n        if (this.items.length === 0) {\n            item.active = true;\n        }\n        this.items.push(item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-nav-outlet',\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoNavOutletElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoNavOutletElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoNavOutletElement.ctorParameters;\n/** @type {?} */\nNovoNavOutletElement.prototype.items;\n}\n\nexport class NovoNavContentElement {\n     active: boolean = false;\n/**\n * @param {?} outlet\n */\nconstructor(outlet: NovoNavOutletElement) {\n        outlet.add(this);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-nav-content',\n    host: {\n        '[class.active]': 'active'\n    },\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoNavOutletElement, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n};\n}\n\nfunction NovoNavContentElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoNavContentElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoNavContentElement.ctorParameters;\n/** @type {?} */\nNovoNavContentElement.propDecorators;\n/** @type {?} */\nNovoNavContentElement.prototype.active;\n}\n\nexport class NovoNavHeaderElement {\n     active: boolean = false;\n     forElement: any;\n    outlet: any;\n/**\n * @param {?} outlet\n */\nconstructor(outlet: NovoNavOutletElement) {\n        this.active = this.active || false;\n        this.outlet = outlet;\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nshow(event?: any) {\n        try {\n            const /** @type {?} */ INDEX = this.outlet.items.indexOf(this.forElement);\n            if (INDEX > -1) {\n                this.outlet.show(INDEX);\n            }\n        } catch ( /** @type {?} */err) {\n            // do nothing\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-nav-header',\n    host: {\n        '[class.active]': 'active',\n        '(click)': 'show($event)'\n    },\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoNavOutletElement, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n'forElement': [{ type: Input, args: ['for', ] },],\n};\n}\n\nfunction NovoNavHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoNavHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoNavHeaderElement.ctorParameters;\n/** @type {?} */\nNovoNavHeaderElement.propDecorators;\n/** @type {?} */\nNovoNavHeaderElement.prototype.active;\n/** @type {?} */\nNovoNavHeaderElement.prototype.forElement;\n/** @type {?} */\nNovoNavHeaderElement.prototype.outlet;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport {\n    NovoNavElement,\n    NovoTabElement,\n    NovoTabButtonElement,\n    NovoTabLinkElement,\n    NovoNavOutletElement,\n    NovoNavContentElement,\n    NovoNavHeaderElement\n} from './Tabs';\nexport class NovoTabModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        NovoNavElement,\n        NovoTabElement,\n        NovoTabButtonElement,\n        NovoTabLinkElement,\n        NovoNavOutletElement,\n        NovoNavContentElement,\n        NovoNavHeaderElement\n    ],\n    exports: [\n        NovoNavElement,\n        NovoTabElement,\n        NovoTabButtonElement,\n        NovoTabLinkElement,\n        NovoNavOutletElement,\n        NovoNavContentElement,\n        NovoNavHeaderElement\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTabModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTabModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTabModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ElementRef,\n  AfterContentInit,\n  OnChanges,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n// APP\n\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ TILES_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTilesElement),\n  multi: true,\n};\nexport class NovoTilesElement implements ControlValueAccessor, AfterContentInit, OnChanges {\n  \n  name: string = new Date().getTime().toString();\n  \n  options: any;\n  \n  required: boolean;\n  \n  disabled: boolean = false;\n  \n  onChange: EventEmitter<any> = new EventEmitter();\n  \n  onSelectedOptionClick: EventEmitter<any> = new EventEmitter();\n  \n  onDisabledOptionClick: EventEmitter<any> = new EventEmitter();\n\n  _options: Array<any> = [];\npublic activeTile: any = null;\npublic state: String = 'inactive';\npublic focused: boolean = false;\n\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @param {?} element\n * @param {?} ref\n */\nconstructor(private element: ElementRef,\nprivate ref: ChangeDetectorRef) {}\n/**\n * @param {?} focus\n * @return {?}\n */\npublic setFocus(focus: boolean): void {\n    this.focused = focus;\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.name = this.name || '';\n    this.setupOptions();\n  }\n/**\n * @param {?} change\n * @return {?}\n */\nngOnChanges(change: SimpleChanges) {\n    if (change['options'] && change['options'].currentValue && !change['options'].firstChange) {\n      this.name = this.name || '';\n      this._options = [];\n      this.setupOptions();\n    }\n  }\n/**\n * @return {?}\n */\nsetupOptions() {\n    if (this.options && this.options.length && (this.options[0].value === undefined || this.options[0].value === null)) {\n      this._options = this.options.map((x) => {\n        let /** @type {?} */ item = { value: x, label: x, checked: this.model === x };\n        if (item.checked) {\n          this.setTile(item);\n        }\n        return item;\n      });\n    } else {\n      this._options = this.options.map((x) => {\n        x.checked = this.model === x.value;\n        if (x.checked) {\n          this.setTile(x);\n        }\n        return x;\n      });\n    }\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nselect(event, item) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    if (!item.disabled) {\n      if (item.checked) {\n        this.onSelectedOptionClick.emit(item);\n        return;\n      }\n\n      for (let /** @type {?} */ option of this._options) {\n        option.checked = false;\n      }\n\n      item.checked = !item.checked;\n      this.onChange.emit(item.value);\n      this.onModelChange(item.value);\n      this.setTile(item);\n      this.model = item.value;\n    } else {\n      this.onDisabledOptionClick.emit(item);\n    }\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} item\n * @return {?}\n */\nsetTile(item) {\n    if (item) {\n      this.activeTile = item.value;\n      this.moveTile();\n    }\n  }\n/**\n * @return {?}\n */\nmoveTile() {\n    setTimeout(() => {\n      let /** @type {?} */ ind = this.element.nativeElement.querySelector('.active-indicator');\n      let /** @type {?} */ el = this.element.nativeElement.querySelector('.tile.active');\n      if (ind && el) {\n        let /** @type {?} */ w: number = el.clientWidth;\n        let /** @type {?} */ left: number = el.offsetLeft - el.offsetTop; // Removes the border width that Firefox adds without affecting other browsers\n        ind.style.width = `calc(${w}px + 0.32em)`;\n        ind.style.left = `${left}px`;\n        this.state = 'active';\n        this.ref.markForCheck();\n      }\n    });\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n    if (!Helpers.isBlank(model)) {\n      this.setupOptions();\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-tiles',\n  providers: [TILES_VALUE_ACCESSOR],\n  template: `\n        <div class=\"tile-container\" [class.active]=\"focused\" [class.disabled]=\"disabled\">\n            <div class=\"tile\" *ngFor=\"let option of _options; let i = index\" [ngClass]=\"{active: option.checked, disabled: option.disabled}\" (click)=\"select($event, option, i)\" [attr.data-automation-id]=\"option.label || option\">\n                <input class=\"tiles-input\" [name]=\"name\" type=\"radio\" [value]=\"option.checked || option\" [attr.id]=\"name + i\" (change)=\"select($event, option, i)\" (focus)=\"setFocus(true)\" (blur)=\"setFocus(false)\" [disabled]=\"disabled\">\n                <label [attr.for]=\"name + i\" [attr.data-automation-id]=\"option.label || option\">\n                    {{ option.label || option }}\n                </label>\n            </div>\n            <span class=\"active-indicator\" [@tileState]=\"state\" [hidden]=\"activeTile === undefined || activeTile === null\"></span>\n        </div>\n    `,\n  animations: [\n    trigger('tileState', [\n      state(\n        'inactive',\n        style({\n          opacity: '0',\n        }),\n      ),\n      state(\n        'active',\n        style({\n          opacity: '1',\n        }),\n      ),\n      transition('inactive => active', animate('200ms ease-in')),\n      transition('active => inactive', animate('200ms ease-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'options': [{ type: Input },],\n'required': [{ type: Input },],\n'disabled': [{ type: Input, args: ['controlDisabled', ] },],\n'onChange': [{ type: Output },],\n'onSelectedOptionClick': [{ type: Output },],\n'onDisabledOptionClick': [{ type: Output },],\n};\n}\n\nfunction NovoTilesElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTilesElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTilesElement.ctorParameters;\n/** @type {?} */\nNovoTilesElement.propDecorators;\n/** @type {?} */\nNovoTilesElement.prototype.name;\n/** @type {?} */\nNovoTilesElement.prototype.options;\n/** @type {?} */\nNovoTilesElement.prototype.required;\n/** @type {?} */\nNovoTilesElement.prototype.disabled;\n/** @type {?} */\nNovoTilesElement.prototype.onChange;\n/** @type {?} */\nNovoTilesElement.prototype.onSelectedOptionClick;\n/** @type {?} */\nNovoTilesElement.prototype.onDisabledOptionClick;\n/** @type {?} */\nNovoTilesElement.prototype._options;\n/** @type {?} */\nNovoTilesElement.prototype.activeTile;\n/** @type {?} */\nNovoTilesElement.prototype.state;\n/** @type {?} */\nNovoTilesElement.prototype.focused;\n/** @type {?} */\nNovoTilesElement.prototype.model;\n/** @type {?} */\nNovoTilesElement.prototype.onModelChange;\n/** @type {?} */\nNovoTilesElement.prototype.onModelTouched;\n/** @type {?} */\nNovoTilesElement.prototype.element;\n/** @type {?} */\nNovoTilesElement.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n// APP\n\nimport { NovoTilesElement } from './Tiles';\nexport class NovoTilesModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ReactiveFormsModule],\n    declarations: [NovoTilesElement],\n    exports: [NovoTilesElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTilesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTilesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTilesModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * A Promise that uses the deferred anti-pattern\n * @return {?}\n */\nexport function Deferred() {\n    const /** @type {?} */ temp: any = {};\n    const /** @type {?} */ promise: any = new Promise((resolve: any, reject: any) => {\n        temp.resolve = resolve;\n        temp.reject = reject;\n    });\n    promise.resolve = temp.resolve;\n    promise.reject = temp.reject;\n    return promise;\n}\n","// NG2\n\nimport { ComponentFactoryResolver, ComponentRef, Injectable, Injector, ReflectiveInjector, ViewContainerRef, ResolvedReflectiveProvider } from '@angular/core';\nexport class ComponentUtils {\n    componentFactoryResolver: ComponentFactoryResolver;\n/**\n * @param {?} componentFactoryResolver\n */\nconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n/**\n * @param {?} ComponentClass\n * @param {?} location\n * @param {?=} providers\n * @return {?}\n */\nappendNextToLocation(ComponentClass, location: ViewContainerRef, providers?: ResolvedReflectiveProvider[]): ComponentRef<any> {\n        let /** @type {?} */ componentFactory = this.componentFactoryResolver.resolveComponentFactory(ComponentClass);\n        let /** @type {?} */ parentInjector = location.parentInjector;\n        let /** @type {?} */ childInjector: Injector = parentInjector;\n        if (providers && providers.length > 0) {\n            childInjector = ReflectiveInjector.fromResolvedProviders(providers, parentInjector);\n        }\n        return location.createComponent(componentFactory, location.length, childInjector);\n    }\n/**\n * @param {?} ComponentClass\n * @param {?} location\n * @param {?=} providers\n * @return {?}\n */\nappendTopOfLocation(ComponentClass, location: ViewContainerRef, providers?: ResolvedReflectiveProvider[]): ComponentRef<any> {\n        let /** @type {?} */ componentFactory = this.componentFactoryResolver.resolveComponentFactory(ComponentClass);\n        let /** @type {?} */ parentInjector = location.parentInjector;\n        let /** @type {?} */ childInjector: Injector = parentInjector;\n        if (providers && providers.length > 0) {\n            childInjector = ReflectiveInjector.fromResolvedProviders(providers, parentInjector);\n        }\n        return location.createComponent(componentFactory, 0, childInjector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n];\n}\n\nfunction ComponentUtils_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentUtils.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nComponentUtils.ctorParameters;\n/** @type {?} */\nComponentUtils.prototype.componentFactoryResolver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ViewContainerRef, ViewChild, AfterViewInit, Input, Output, EventEmitter, OnInit, Injectable } from '@angular/core';\n// APP\n\nimport { Deferred } from './../../utils/deferred/Deferred';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\n\n/**\n * Params that can be passed to the Modal\n */\n\nexport interface ModalParams {\n    [propName: string]: any;\n}\nexport class NovoModalParams implements ModalParams {\n}\n/**\n * Reference to an opened dialog.\n */\nexport class NovoModalRef {\n    component: any = null;\n    contentRef: any = null;\n    containerRef: any = null;\n    isClosed: boolean = false;\n    _onClosed: any = Deferred();\n/**\n * @return {?}\n */\nget onClosed() {\n        return this._onClosed;\n    }\n/**\n * @return {?}\n */\nopen() {\n        document.body.classList.add('modal-open');\n    }\n/**\n * @param {?=} result\n * @return {?}\n */\nclose(result?: any) {\n        document.body.classList.remove('modal-open');\n\n        if (this.contentRef) {\n            this.contentRef.destroy();\n        }\n\n        if (this.containerRef) {\n            this.containerRef.destroy();\n        }\n\n        this._onClosed.resolve(result);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoModalRef_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoModalRef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoModalRef.ctorParameters;\n/** @type {?} */\nNovoModalRef.prototype.component;\n/** @type {?} */\nNovoModalRef.prototype.contentRef;\n/** @type {?} */\nNovoModalRef.prototype.containerRef;\n/** @type {?} */\nNovoModalRef.prototype.isClosed;\n/** @type {?} */\nNovoModalRef.prototype._onClosed;\n}\n\nexport class NovoModalContainerElement implements AfterViewInit {\n     container: ViewContainerRef;\n/**\n * @param {?} modalRef\n * @param {?} componentUtils\n */\nconstructor(private modalRef: NovoModalRef,\nprivate componentUtils: ComponentUtils) {}\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        setTimeout(() => {\n            this.modalRef.contentRef = this.componentUtils.appendNextToLocation(this.modalRef.component, this.container);\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-modal-container',\n    template: '<span #container></span>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoModalRef, },\n{type: ComponentUtils, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n};\n}\n\nfunction NovoModalContainerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoModalContainerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoModalContainerElement.ctorParameters;\n/** @type {?} */\nNovoModalContainerElement.propDecorators;\n/** @type {?} */\nNovoModalContainerElement.prototype.container;\n/** @type {?} */\nNovoModalContainerElement.prototype.modalRef;\n/** @type {?} */\nNovoModalContainerElement.prototype.componentUtils;\n}\n\nexport class NovoModalElement {\n/**\n * @param {?} modalRef\n */\nconstructor(private modalRef: NovoModalRef) {\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.modalRef.close();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-modal',\n    template: `\n        <ng-content select=\"header\"></ng-content>\n        <ng-content select=\"section\"></ng-content>\n        <footer>\n            <ng-content select=\"button\"></ng-content>\n        </footer>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoModalRef, },\n];\n}\n\nfunction NovoModalElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoModalElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoModalElement.ctorParameters;\n/** @type {?} */\nNovoModalElement.prototype.modalRef;\n}\n\nexport class NovoModalNotificationElement implements OnInit {\n     type: string;\n     icon: string;\n\n     cancel: EventEmitter<any> = new EventEmitter();\n\n    iconType: string;\n/**\n * @param {?} modalRef\n */\nconstructor(private modalRef: NovoModalRef) {\n        this.modalRef = modalRef;\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.cancel.emit();\n        this.modalRef.close();\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        switch (this.type) {\n            case 'success':\n                this.iconType = 'bhi-check';\n                break;\n            case 'warning':\n                this.iconType = 'bhi-caution-o';\n                break;\n            case 'error':\n                this.iconType = 'bhi-caution-o';\n                break;\n            case 'custom':\n                this.iconType = `bhi-${this.icon}`;\n                break;\n            default:\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-notification',\n    template: `\n        <button class=\"modal-close\" theme=\"icon\" icon=\"times\" (click)=\"close()\"></button>\n        <header>\n            <ng-content select=\"label\"></ng-content>\n        </header>\n        <section class=\"notification-body\">\n            <i class=\"indicator\" [ngClass]=\"iconType\" *ngIf=\"iconType\"></i>\n            <ng-content select=\"h1\"></ng-content>\n            <ng-content select=\"h2\"></ng-content>\n            <ng-content select=\"p\"></ng-content>\n        </section>\n        <footer>\n            <ng-content select=\"button\"></ng-content>\n        </footer>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoModalRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'icon': [{ type: Input },],\n'cancel': [{ type: Output },],\n};\n}\n\nfunction NovoModalNotificationElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoModalNotificationElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoModalNotificationElement.ctorParameters;\n/** @type {?} */\nNovoModalNotificationElement.propDecorators;\n/** @type {?} */\nNovoModalNotificationElement.prototype.type;\n/** @type {?} */\nNovoModalNotificationElement.prototype.icon;\n/** @type {?} */\nNovoModalNotificationElement.prototype.cancel;\n/** @type {?} */\nNovoModalNotificationElement.prototype.iconType;\n/** @type {?} */\nNovoModalNotificationElement.prototype.modalRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoModalContainerElement, NovoModalElement, NovoModalNotificationElement } from './Modal';\nexport class NovoModalModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule],\n    declarations: [NovoModalContainerElement, NovoModalElement, NovoModalNotificationElement],\n    exports: [NovoModalElement, NovoModalNotificationElement],\n    entryComponents: [NovoModalContainerElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nexport class NovoListElement {\n     theme: string;\n     direction: string;\n/**\n * @param {?} element\n */\nconstructor(public element: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-list',\n    host: {\n        '[class.vertical-list]': 'direction === \"vertical\"',\n        '[class.horizontal-list]': 'direction === \"horizontal\"',\n        '[attr.theme]': 'theme'\n    },\n    template: `\n        <ng-content></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'direction': [{ type: Input },],\n};\n}\n\nfunction NovoListElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoListElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoListElement.ctorParameters;\n/** @type {?} */\nNovoListElement.propDecorators;\n/** @type {?} */\nNovoListElement.prototype.theme;\n/** @type {?} */\nNovoListElement.prototype.direction;\n/** @type {?} */\nNovoListElement.prototype.element;\n}\n\nexport class NovoListItemElement implements OnInit {\n    avatar: boolean = false;\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.avatar = !!this.element.nativeElement.querySelector('item-avatar');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-list-item',\n    template: `\n        <div class=\"list-item\" [ngClass]=\"{'avatar': avatar}\">\n            <ng-content select=\"item-header\"></ng-content>\n            <ng-content select=\"item-content\"></ng-content>   \n        </div>\n        <ng-content></ng-content>\n        <ng-content select=\"item-end\"></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction NovoListItemElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoListItemElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoListItemElement.ctorParameters;\n/** @type {?} */\nNovoListItemElement.prototype.avatar;\n/** @type {?} */\nNovoListItemElement.prototype.element;\n}\n\nexport class NovoItemAvatarElement implements OnChanges, OnInit {\n     icon: string;\n\n    iconClass: string;\n    classMap: any;\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n        this.iconClass = (this.icon) ? `bhi-${this.icon}` : null;\n        this.classMap = [this.iconClass, this.icon];\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.ngOnChanges();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'item-avatar',\n    template: `\n        <i *ngIf=\"iconClass\" [ngClass]=\"classMap\" theme=\"contained\"></i>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n};\n}\n\nfunction NovoItemAvatarElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemAvatarElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemAvatarElement.ctorParameters;\n/** @type {?} */\nNovoItemAvatarElement.propDecorators;\n/** @type {?} */\nNovoItemAvatarElement.prototype.icon;\n/** @type {?} */\nNovoItemAvatarElement.prototype.iconClass;\n/** @type {?} */\nNovoItemAvatarElement.prototype.classMap;\n}\n\nexport class NovoItemTitleElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'item-title',\n    template: `\n        <h6><ng-content></ng-content></h6>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoItemTitleElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemTitleElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemTitleElement.ctorParameters;\n}\n\nexport class NovoItemHeaderElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'item-header',\n    template: `\n        <ng-content select=\"item-avatar\"></ng-content>\n        <ng-content select=\"item-title\"></ng-content>\n        <ng-content select=\"item-header-end\"></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoItemHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemHeaderElement.ctorParameters;\n}\n\nexport class NovoItemDateElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'item-header-end',\n    template: `\n        <ng-content></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoItemDateElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemDateElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemDateElement.ctorParameters;\n}\n\nexport class NovoItemContentElement {\n     direction: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'item-content',\n    host: {\n        '[class.vertical-list]': 'direction === \"vertical\"',\n        '[class.horizontal-list]': 'direction === \"horizontal\"'\n    },\n    template: `\n        <ng-content></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n};\n}\n\nfunction NovoItemContentElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemContentElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemContentElement.ctorParameters;\n/** @type {?} */\nNovoItemContentElement.propDecorators;\n/** @type {?} */\nNovoItemContentElement.prototype.direction;\n}\n\nexport class NovoItemEndElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'item-end',\n    template: `\n        <ng-content></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoItemEndElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemEndElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemEndElement.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoListElement, NovoListItemElement, NovoItemAvatarElement, NovoItemTitleElement, NovoItemContentElement, NovoItemEndElement, NovoItemHeaderElement, NovoItemDateElement } from './List';\nexport class NovoListModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NovoListElement, NovoListItemElement, NovoItemAvatarElement, NovoItemTitleElement, NovoItemContentElement, NovoItemEndElement, NovoItemHeaderElement, NovoItemDateElement],\n    exports: [NovoListElement, NovoListItemElement, NovoItemAvatarElement, NovoItemTitleElement, NovoItemHeaderElement, NovoItemContentElement, NovoItemEndElement, NovoItemDateElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoListModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { EventEmitter, ElementRef, OnDestroy } from '@angular/core';\n// APP\n\nimport { Helpers } from '../Helpers';\n/**\n * Outside click helper, makes to set the element as inactive when clicking outside of it\n */\nexport class OutsideClick implements OnDestroy {\n    element: ElementRef;\n    otherElement: ElementRef;\n    active: boolean = false;\n    onOutsideClick: EventListenerOrEventListenerObject;\n    onActiveChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} element\n */\nconstructor(element: ElementRef) {\n        // Component element\n        this.element = element;\n        // Outside click handler\n        // Property because `this.func.bind(this)` returns a new function each time\n        this.onOutsideClick = this.handleOutsideClick.bind(this);\n    }\n/**\n * When the element is destroyed, make sure to remove the handler\n * @return {?}\n */\nngOnDestroy() {\n        window.removeEventListener('click', this.onOutsideClick);\n    }\n/**\n * Toggles the element as active and adds/removes the outside click handler\n * @param {?=} event\n * @param {?=} forceValue\n * @return {?}\n */\npublic toggleActive(event?: MouseEvent, forceValue?: boolean): void {\n        // Reverse the active property (if forceValue, use that)\n        this.active = !Helpers.isBlank(forceValue) ? forceValue : !this.active;\n        // Bind window click events to hide on outside click\n        if (this.active) {\n            window.addEventListener('click', this.onOutsideClick);\n        } else {\n            window.removeEventListener('click', this.onOutsideClick);\n        }\n        // Fire the active change event\n        this.onActiveChange.emit(this.active);\n    }\n/**\n * When clicking outside, checks the element and closes if outside\n * @param {?} event\n * @return {?}\n */\npublic handleOutsideClick(event: MouseEvent): void {\n        // If the elements doesn't contain the target element, it is an outside click\n        let /** @type {?} */ outsideClick = !this.element.nativeElement.contains(event.target);\n        if (this.otherElement && outsideClick) {\n            outsideClick = !this.otherElement.nativeElement.contains(event.target);\n        }\n        if (outsideClick) {\n            this.toggleActive(event, false);\n        }\n    }\n}\n\nfunction OutsideClick_tsickle_Closure_declarations() {\n/** @type {?} */\nOutsideClick.prototype.element;\n/** @type {?} */\nOutsideClick.prototype.otherElement;\n/** @type {?} */\nOutsideClick.prototype.active;\n/** @type {?} */\nOutsideClick.prototype.onOutsideClick;\n/** @type {?} */\nOutsideClick.prototype.onActiveChange;\n}\n\n","// Helper to keep track of key codes\nexport const /** @type {?} */ KeyCodes = {\n    BACKSPACE: 8,\n    TAB: 9,\n    NUM_CENTER: 12,\n    ENTER: 13,\n    RETURN: 13,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAUSE: 19,\n    CAPS_LOCK: 20,\n    ESC: 27,\n    SPACE: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HASH_SYMBOL: 35,\n    HOME: 36,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    PRINT_SCREEN: 44,\n    INSERT: 45,\n    DELETE: 46,\n    ZERO: 48,\n    ONE: 49,\n    TWO: 50,\n    THREE: 51,\n    FOUR: 52,\n    FIVE: 53,\n    SIX: 54,\n    SEVEN: 55,\n    EIGHT: 56,\n    NINE: 57,\n    AT_SYMBOL: 64,\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 85,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90,\n    CONTEXT_MENU: 93,\n    NUM_ZERO: 96,\n    NUM_ONE: 97,\n    NUM_TWO: 98,\n    NUM_THREE: 99,\n    NUM_FOUR: 100,\n    NUM_FIVE: 101,\n    NUM_SIX: 102,\n    NUM_SEVEN: 103,\n    NUM_EIGHT: 104,\n    NUM_NINE: 105,\n    NUM_MULTIPLY: 106,\n    NUM_PLUS: 107,\n    NUM_MINUS: 109,\n    NUM_PERIOD: 110,\n    NUM_DIVISION: 111,\n    F1: 112,\n    F2: 113,\n    F3: 114,\n    F4: 115,\n    F5: 116,\n    F6: 117,\n    F7: 118,\n    F8: 119,\n    F9: 120,\n    F10: 121,\n    F11: 122,\n    F12: 123,\n    DASH: 189,\n    PERIOD: 190,\n    FORWARD_SLASH: 191\n};\n","// NG2\n\nimport { ElementRef, Input, ChangeDetectorRef } from '@angular/core';\n// APP\n\nimport { Helpers } from '../../../../utils/Helpers';\n// Vendor\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromPromise';\nimport { OverlayRef } from '@angular/cdk/overlay';\n/**\n * \\@name: PickerResults\n * \n * \\@description This is the actual list of matches that gets injected into the DOM. It's also the piece that can be\n * overwritten if custom list options are needed.\n */\nexport class BasePickerResults {\n  _term: string = '';\n  selected: Array<any> = [];\n  \n  matches: any = [];\n  hasError: boolean = false;\n  isLoading: boolean = false;\n  isStatic: boolean = true;\n  config: any;\n  activeMatch: any;\n  parent: any;\n  element: ElementRef;\n  ref: ChangeDetectorRef;\n  page: number = 0;\n  lastPage: boolean = false;\n  autoSelectFirstOption: boolean = true;\n  overlay: OverlayRef;\nprivate selectingMatches: boolean = false;\nprivate scrollHandler: any;\n/**\n * @param {?} element\n * @param {?} ref\n */\nconstructor(element: ElementRef, ref: ChangeDetectorRef) {\n    this.element = element;\n    this.ref = ref;\n    this.scrollHandler = this.onScrollDown.bind(this);\n  }\n/**\n * @return {?}\n */\ncleanUp(): void {\n    let /** @type {?} */ element: Element = this.getListElement();\n    if (element && element.hasAttribute('scrollListener')) {\n      element.removeAttribute('scrollListener');\n      element.removeEventListener('scroll', this.scrollHandler);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonScrollDown(event: MouseWheelEvent) {\n    let /** @type {?} */ element: any = event.target;\n    if (element) {\n      let /** @type {?} */ offset = element.offsetHeight + element.scrollTop, /** @type {?} */\n        bottom = element.scrollHeight - 300;\n      if (offset >= bottom) {\n        event.stopPropagation();\n        if (!this.lastPage && !this.isLoading) {\n          this.processSearch();\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nget term() {\n    return this._term;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset term(value) {\n    if (value !== this._term || this.page === 0) {\n      this._term = value;\n      this.page = 0;\n      this.matches = [];\n      this.processSearch(true);\n    } else {\n      this.addScrollListener();\n    }\n  }\n/**\n * @return {?}\n */\naddScrollListener(): void {\n    if (this.config.enableInfiniteScroll) {\n      let /** @type {?} */ element: Element = this.getListElement();\n      if (element && !element.hasAttribute('scrollListener')) {\n        element.setAttribute('scrollListener', 'true');\n        element.addEventListener('scroll', this.scrollHandler);\n      }\n    }\n  }\n/**\n * @param {?=} shouldReset\n * @return {?}\n */\nprocessSearch(shouldReset?: boolean) {\n    this.hasError = false;\n    this.isLoading = true;\n    this.ref.markForCheck();\n    this.search(this.term).subscribe(\n      (results: any) => {\n        if (shouldReset) {\n          this.matches = [];\n        }\n        if (this.isStatic) {\n          this.matches = this.filterData(results);\n        } else {\n          this.matches = this.matches.concat(results);\n          this.lastPage = results && !results.length;\n        }\n        if (this.matches.length > 0 && this.autoSelectFirstOption && !this.selectingMatches) {\n          this.nextActiveMatch();\n        }\n        this.isLoading = false;\n        this.ref.markForCheck();\n        setTimeout(() => {\n          this.overlay.updatePosition();\n          this.addScrollListener();\n        }); // @bkimball: This was added for Dylan Schulte, 9.18.2017 4:14PM EST, you're welcome!\n      },\n      (err) => {\n        this.hasError = this.term && this.term.length !== 0;\n        this.isLoading = false;\n        this.lastPage = true;\n        if (this.term && this.term.length !== 0) {\n          console.error(err); // tslint:disable-lineno\n        }\n        this.ref.markForCheck();\n      },\n    );\n  }\n/**\n * @param {?} term\n * @param {?=} mode\n * @return {?}\n */\nsearch(term, mode?) {\n    let /** @type {?} */ options = this.config.options;\n    return Observable.fromPromise(\n      new Promise((resolve, reject) => {\n        // Check if there is match data\n        if (options) {\n          // Resolve the data\n          if (Array.isArray(options)) {\n            this.isStatic = true;\n            // Arrays are returned immediately\n            resolve(this.structureArray(options));\n          } else if (term && term.length >= (this.config.minSearchLength || 1)) {\n            if (\n              (options.hasOwnProperty('reject') && options.hasOwnProperty('resolve')) ||\n              Object.getPrototypeOf(options).hasOwnProperty('then')\n            ) {\n              this.isStatic = false;\n              // Promises (ES6 or Deferred) are resolved whenever they resolve\n              options.then(this.structureArray.bind(this)).then(resolve, reject);\n            } else if (typeof options === 'function') {\n              this.isStatic = false;\n              // Promises (ES6 or Deferred) are resolved whenever they resolve\n              options(term, ++this.page)\n                .then(this.structureArray.bind(this))\n                .then(resolve, reject);\n            } else {\n              // All other kinds of data are rejected\n              reject('The data provided is not an array or a promise');\n              throw new Error('The data provided is not an array or a promise');\n            }\n          } else {\n            if (this.config.defaultOptions) {\n              this.isStatic = false;\n              if (typeof this.config.defaultOptions === 'function') {\n                let /** @type {?} */ defaultOptions = this.config.defaultOptions(term, ++this.page);\n                if (Object.getPrototypeOf(defaultOptions).hasOwnProperty('then')) {\n                  defaultOptions.then(this.structureArray.bind(this)).then(resolve, reject);\n                } else {\n                  resolve(this.structureArray(defaultOptions));\n                }\n              } else {\n                resolve(this.structureArray(this.config.defaultOptions));\n              }\n            } else {\n              // No search term gets rejected\n              reject('No search term');\n            }\n          }\n        } else {\n          // No data gets rejected\n          reject('error');\n        }\n      }),\n    );\n  }\n/**\n * \\@name structureArray\n * \\@description This function structures an array of nodes into an array of objects with a\n * 'name' field by default.\n * @param {?} collection - the data once getData resolves it\n * \n * @return {?}\n */\nstructureArray(collection: any): any {\n    let /** @type {?} */ dataArray = collection.data ? collection.data : collection;\n    if (dataArray && (typeof dataArray[0] === 'string' || typeof dataArray[0] === 'number')) {\n      return collection.map((item) => {\n        return {\n          value: item,\n          label: item,\n        };\n      });\n    }\n    return dataArray.map((data) => {\n      let /** @type {?} */ value = this.config.field ? data[this.config.field] : data.value || data;\n      if (this.config.valueFormat) {\n        value = Helpers.interpolate(this.config.valueFormat, data);\n      }\n      let /** @type {?} */ label = this.config.format ? Helpers.interpolate(this.config.format, data) : data.label || String(value);\n      return { value, label, data };\n    });\n  }\n/**\n * \\@name filterData=\n * \\@description This function loops through the picker options and creates a filtered list of objects that contain\n * the newSearch.\n * @param {?} matches - Collection of objects=\n * \n * @return {?}\n */\nfilterData(matches): Array<any> {\n    if (this.term && matches) {\n      return matches.filter((match) => {\n        return ~String(match.label)\n          .toLowerCase()\n          .indexOf(this.term.toLowerCase());\n      });\n    }\n    // Show no recent results template\n    return matches;\n  }\n/**\n * \\@name selectActiveMatch\n * \n * \\@description This function is called when the user presses the enter key to call the selectMatch method.\n * @return {?}\n */\nselectActiveMatch() {\n    this.selectMatch();\n  }\n/**\n * \\@name prevActiveMatch\n * \n * \\@description This function sets activeMatch to the match before the current node.\n * @return {?}\n */\nprevActiveMatch() {\n    let /** @type {?} */ index = this.matches.indexOf(this.activeMatch);\n    this.activeMatch = this.matches[index - 1 < 0 ? this.matches.length - 1 : index - 1];\n    this.scrollToActive();\n    this.ref.markForCheck();\n  }\n/**\n * \\@name nextActiveMatch\n * \n * \\@description This function sets activeMatch to the match after the current node.\n * @return {?}\n */\nnextActiveMatch() {\n    let /** @type {?} */ index = this.matches.indexOf(this.activeMatch);\n    this.activeMatch = this.matches[index + 1 > this.matches.length - 1 ? 0 : index + 1];\n    this.scrollToActive();\n    this.ref.markForCheck();\n  }\n/**\n * @return {?}\n */\ngetListElement() {\n    return this.element.nativeElement;\n  }\n/**\n * @return {?}\n */\ngetChildrenOfListElement() {\n    let /** @type {?} */ children = [];\n    if (this.getListElement()) {\n      children = this.getListElement().children;\n    }\n    return children;\n  }\n/**\n * @return {?}\n */\nscrollToActive() {\n    let /** @type {?} */ list = this.getListElement();\n    let /** @type {?} */ items = this.getChildrenOfListElement();\n    let /** @type {?} */ index = this.matches.indexOf(this.activeMatch);\n    let /** @type {?} */ item = items[index];\n    if (item) {\n      list.scrollTop = item.offsetTop;\n    }\n  }\n/**\n * \\@name selectActive\n * \\@description\n * @param {?} match \n * \n * @return {?}\n */\nselectActive(match) {\n    this.activeMatch = match;\n  }\n/**\n * \\@name isActive\n * \\@description\n * @param {?} match \n * \n * @return {?}\n */\nisActive(match) {\n    return this.activeMatch === match;\n  }\n/**\n * \\@name selectMatch\n * \\@description\n * @param {?=} event\n * @param {?=} item \n * \n * @return {?}\n */\nselectMatch(event?: any, item?: any) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    let /** @type {?} */ selected = this.activeMatch;\n    if (selected && this.parent) {\n      this.parent.value = selected;\n      this.selectingMatches = true;\n      if (this.parent.closeOnSelect) {\n        this.parent.hideResults();\n        this.selectingMatches = false;\n      }\n    }\n    this.ref.markForCheck();\n    return false;\n  }\n/**\n * \\@name escapeRegexp\n * \\@description This function captures the whole query string and replace it with the string that will be used to\n * match.\n * @param {?} queryToEscape \n * \n * @return {?}\n */\nescapeRegexp(queryToEscape) {\n    // Ex: if the capture is \"a\" the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n/**\n * \\@name highlight\n * \\@description This function should return a <strong>-tag wrapped HTML string.\n * @param {?} match\n * @param {?} query \n * \n * @return {?}\n */\nhighlight(match, query) {\n    // Replaces the capture string with a the same string inside of a \"strong\" tag\n    return query ? match.replace(new RegExp(this.escapeRegexp(query.trim()), 'gi'), '<strong>$&</strong>') : match;\n  }\n/**\n * @param {?} match\n * @return {?}\n */\npreselected(match) {\n    return (\n      this.selected.findIndex((item) => {\n        let /** @type {?} */ isPreselected = false;\n        if (item && item.value && match && match.value) {\n          if (item.value.id && match.value.id) {\n            isPreselected = item.value.id === match.value.id;\n          } else {\n            isPreselected = item.value === match.value;\n          }\n        }\n        return isPreselected;\n      }) !== -1\n    );\n  }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'matches': [{ type: Input },],\n};\n}\n\nfunction BasePickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nBasePickerResults.propDecorators;\n/** @type {?} */\nBasePickerResults.prototype._term;\n/** @type {?} */\nBasePickerResults.prototype.selected;\n/** @type {?} */\nBasePickerResults.prototype.matches;\n/** @type {?} */\nBasePickerResults.prototype.hasError;\n/** @type {?} */\nBasePickerResults.prototype.isLoading;\n/** @type {?} */\nBasePickerResults.prototype.isStatic;\n/** @type {?} */\nBasePickerResults.prototype.config;\n/** @type {?} */\nBasePickerResults.prototype.activeMatch;\n/** @type {?} */\nBasePickerResults.prototype.parent;\n/** @type {?} */\nBasePickerResults.prototype.element;\n/** @type {?} */\nBasePickerResults.prototype.ref;\n/** @type {?} */\nBasePickerResults.prototype.page;\n/** @type {?} */\nBasePickerResults.prototype.lastPage;\n/** @type {?} */\nBasePickerResults.prototype.autoSelectFirstOption;\n/** @type {?} */\nBasePickerResults.prototype.overlay;\n/** @type {?} */\nBasePickerResults.prototype.selectingMatches;\n/** @type {?} */\nBasePickerResults.prototype.scrollHandler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, ChangeDetectorRef } from '@angular/core';\n// APP\n\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\nexport class PickerResults extends BasePickerResults {\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(element: ElementRef,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n        super(element, ref);\n    }\n/**\n * @return {?}\n */\ngetListElement() {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'picker-results',\n    host: {\n        'class': 'active'\n    },\n    template: `\n        <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n            <novo-list-item\n                *ngFor=\"let match of matches\"\n                (click)=\"selectMatch($event)\"\n                [class.active]=\"match === activeMatch\"\n                (mouseenter)=\"selectActive(match)\"\n                [class.disabled]=\"preselected(match)\">\n                <item-content>\n                    <span [innerHtml]=\"highlight(match.label, term)\"></span>\n                </item-content>\n            </novo-list-item>\n            <novo-loading *ngIf=\"isLoading && matches.length > 0\" theme=\"line\"></novo-loading>\n        </novo-list>\n        <div class=\"picker-loader\" *ngIf=\"isLoading && matches.length === 0\">\n            <novo-loading theme=\"line\"></novo-loading>\n        </div>\n        <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n        <p class=\"picker-null-results\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.pickerEmpty }}</p>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction PickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nPickerResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPickerResults.ctorParameters;\n/** @type {?} */\nPickerResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, ChangeDetectorRef } from '@angular/core';\n// Vendor\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromPromise';\n// APP\n\nimport { Helpers } from '../../../../utils/Helpers';\nimport { PickerResults } from '../../../picker/extras/picker-results/PickerResults';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nexport class QuickNoteResults extends PickerResults {\n    // Mode that the quick note is in for tagging\n    taggingMode: string = '';\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(element: ElementRef,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n        super(element, labels, ref);\n    }\n/**\n * @return {?}\n */\nget term() {\n        return this._term;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset term(value: any) {\n        this._term = value.searchTerm;\n        this.taggingMode = value.taggingMode;\n        this.hasError = false;\n        this.isLoading = true;\n        this.search(value, this.taggingMode)\n            .subscribe(\n            results => {\n                this.matches = this.isStatic ? this.filterData(results) : results;\n                this.isLoading = false;\n            },\n            () => {\n                this.hasError = true;\n                this.isLoading = false;\n            });\n    }\n/**\n * @param {?} term\n * @param {?} taggingMode\n * @return {?}\n */\nsearch(term: string, taggingMode) {\n        let /** @type {?} */ searchCall = this.config.options[taggingMode];\n        return Observable.fromPromise(new Promise((resolve, reject) => {\n            // Check if there is match data\n            if (searchCall) {\n                // Resolve the data\n                if (Array.isArray(searchCall)) {\n                    this.isStatic = true;\n                    // Arrays are returned immediately\n                    resolve(this.structureArray(searchCall));\n                } else if ((searchCall.hasOwnProperty('reject') && searchCall.hasOwnProperty('resolve')) || Object.getPrototypeOf(searchCall).hasOwnProperty('then')) {\n                    this.isStatic = false;\n                    // Promises (ES6 or Deferred) are resolved whenever they resolve\n                    searchCall\n                        .then(this.structureArray.bind(this))\n                        .then(resolve, reject);\n                } else if (typeof searchCall === 'function') {\n                    this.isStatic = false;\n                    // Promises (ES6 or Deferred) are resolved whenever they resolve\n                    searchCall(term)\n                        .then(this.structureArray.bind(this))\n                        .then(resolve, reject);\n                } else {\n                    // All other kinds of data are rejected\n                    reject('The data provided is not an array or a promise');\n                    throw new Error('The data provided is not an array or a promise');\n                }\n            } else {\n                // No data gets rejected\n                reject('error');\n            }\n        }));\n    }\n/**\n * \\@name structureArray\n * \\@description This function structures an array of nodes into an array of objects with a\n * 'name' field by default.\n * @param {?} collection - the data once getData resolves it\n * \n * @return {?}\n */\nstructureArray(collection: Array<any>) {\n        if (collection && (typeof collection[0] === 'string' || typeof collection[0] === 'number')) {\n            return collection.map((item) => {\n                return {\n                    value: item,\n                    label: item\n                };\n            });\n        }\n        return collection.map((data) => {\n            let /** @type {?} */ value = this.config.field ? data[this.config.field[this.taggingMode]] : (data.value || data);\n            let /** @type {?} */ label = this.config.format ? Helpers.interpolate(this.config.format[this.taggingMode], data) : data.label || String(value);\n            return { value, label, data };\n        });\n    }\n/**\n * \\@name selectMatch\n * \\@description\n * @param {?} event \n * \n * @return {?}\n */\nselectMatch(event: KeyboardEvent) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n        let /** @type {?} */ selected = this.activeMatch;\n        if (selected) {\n            this.parent.onSelected(this.taggingMode, selected);\n            this.parent.hideResults();\n        }\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'quick-note-results',\n    host: {\n        'class': 'active'\n    },\n    template: `\n        <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n        <novo-list *ngIf=\"matches.length > 0\">\n            <novo-list-item\n                *ngFor=\"let match of matches\"\n                (click)=\"selectMatch($event)\"\n                [class.active]=\"match===activeMatch\"\n                (mouseenter)=\"selectActive(match)\">\n                <item-content>\n                    <p [innerHtml]=\"highlight(match.label, term)\"></p>\n                </item-content>\n            </novo-list-item>\n        </novo-list>\n        <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.quickNoteError }}</p>\n        <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.quickNoteEmpty }}</p>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction QuickNoteResults_tsickle_Closure_declarations() {\n/** @type {?} */\nQuickNoteResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQuickNoteResults.ctorParameters;\n/** @type {?} */\nQuickNoteResults.prototype.taggingMode;\n/** @type {?} */\nQuickNoteResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport {\n  Component,\n  EventEmitter,\n  forwardRef,\n  ElementRef,\n  ViewChild,\n  ViewContainerRef,\n  Input,\n  Output,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n// APP\n\nimport { OutsideClick } from './../../utils/outside-click/OutsideClick';\nimport { KeyCodes } from './../../utils/key-codes/KeyCodes';\nimport { QuickNoteResults } from './extras/quick-note-results/QuickNoteResults';\nimport { ComponentUtils } from './../../utils/component-utils/ComponentUtils';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ QUICK_NOTE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QuickNoteElement),\n  multi: true,\n};\n\ndeclare var CKEDITOR: any;\nexport class QuickNoteElement extends OutsideClick implements OnInit, OnDestroy, AfterViewInit {\npublic wrapper: ElementRef;\npublic host: ElementRef;\n  \n  results: ViewContainerRef;\n\n  \n  config: any;\n  \n  startupFocus: boolean = false;\n  \n  placeholder: string;\n\n  // Emitter for selects\n  \n  focus: EventEmitter<any> = new EventEmitter();\n  \n  blur: EventEmitter<any> = new EventEmitter();\n  \n  change: EventEmitter<any> = new EventEmitter();\nprivate resultsComponent: any;\nprivate quickNoteResults: any;\nprivate isTagging: boolean;\nprivate taggingMode: string;\nprivate model: any;\nprivate ckeInstance: any;\nprivate debounceTimeout: any;\nprivate placeholderVisible: boolean = false;\nprivate _placeholderElement: any = null;\nprivate static TOOLBAR_HEIGHT = 40;\nprivate onModelChange: Function = () => {};\nprivate onModelTouched: Function = () => {};\n/**\n * @param {?} zone\n * @param {?} element\n * @param {?} componentUtils\n */\nconstructor(private zone: NgZone, element: ElementRef,\nprivate componentUtils: ComponentUtils) {\n    super(element);\n    // Bind to the active change event from the OutsideClick\n    this.onActiveChange.subscribe((active) => {\n      if (!active) {\n        setTimeout(() => {\n          this.hideResults();\n        });\n      }\n    });\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    // Make sure we have a proper config\n    if (!this.config) {\n      throw new Error('No config set for QuickNote!');\n    }\n    // Make sure that we have triggers\n    if (!this.config.triggers) {\n      throw new Error('QuickNote config must supply triggers!');\n    }\n    // Make sure that we have options\n    if (!this.config.options) {\n      throw new Error('QuickNote config must supply options!');\n    }\n    // Allow for callers to use a custom results template class in the config\n    this.resultsComponent = this.config.resultsTemplate || QuickNoteResults;\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    // Tear down the CKEditor instance\n    if (this.ckeInstance) {\n      this.ckeInstance.focusManager.blur(true); // Remove focus from editor\n      setTimeout(() => {\n        this.ckeInstance.removeAllListeners();\n        CKEDITOR.instances[this.ckeInstance.name].destroy();\n        this.ckeInstance.destroy();\n        this.ckeInstance = null;\n      });\n    }\n  }\n/**\n * Connect to key/mouse events from CKEditor after the editor has been initialized\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    if (!CKEDITOR) {\n      console.error('Make sure to include CKEditor sources in your dependencies!');\n      return;\n    }\n\n    // Replace the textarea with an instance of CKEditor\n    this.ckeInstance = CKEDITOR.replace(this.host.nativeElement, this.getCKEditorConfig());\n\n    // Set initial value of the note in the editor\n    this.writeValue(this.model);\n\n    // Connect to the key event in CKEditor for showing results dropdown\n    this.ckeInstance.on('key', (event: any) => {\n      if (!this.onKey(event.data.domEvent.$)) {\n        event.cancel();\n      }\n    });\n\n    // Connect to the change event in CKEditor for debouncing user modifications\n    this.ckeInstance.on('change', () => {\n      // Debounce update\n      if (this.debounceTimeout) {\n        clearTimeout(this.debounceTimeout);\n      }\n      this.debounceTimeout = setTimeout(() => {\n        // Run within the context of this angular element since we don't need to cancel event\n        this.zone.run(() => {\n          this.onValueChange();\n        });\n        this.debounceTimeout = null;\n      }, 250);\n    });\n\n    // Propagate blur events from CKEditor to the Element's listeners\n    this.ckeInstance.on('blur', (event: any) => {\n      this.showPlaceholder();\n      this.blur.emit(event);\n    });\n\n    // Propagate blur events from CKEditor to the Element's listeners\n    this.ckeInstance.on('focus', (event: any) => {\n      this.hidePlaceholder();\n      this.focus.emit(event);\n    });\n\n    // Show placeholder if the note is empty, after the editor is instantiated\n    this.ckeInstance.on('instanceReady', (event: any) => {\n      this.showPlaceholder();\n      // Set editor to readOnly\n      if (this.config.readOnly) {\n        this.ckeInstance.setReadOnly(this.config.readOnly);\n      }\n    });\n  }\n/**\n * @param {?=} event\n * @return {?}\n */\npublic onTouched(event?: any) {\n    this.onModelTouched();\n  }\n/**\n * Handles setting the model and the view from the outside caller or the user's typing\n * \n * @param {?} model A model that has a note (html content) and references (array of objects)\n * @return {?}\n */\npublic writeValue(model: any): void {\n    // Set value of the model\n    if (model && (model.references || model.note)) {\n      this.model = {\n        note: model.note || '',\n        references: model.references || {},\n      };\n    } else {\n      this.model = {\n        note: model,\n        references: {},\n      };\n    }\n\n    // Set the note html value in the editor\n    if (this.ckeInstance) {\n      this.ckeInstance.setData(this.model.note);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * If a renderer is not provided, the QuickNote will default to using this one, an anchor tag with no href\n * @param {?} symbol\n * @param {?} item\n * @return {?}\n */\nprivate static defaultRenderer(symbol: string, item: any): string {\n    return `<a>${symbol}${item.label}</a>`;\n  }\n/**\n * Returns the renderer for a given tagging mode if it exists in the config, otherwise the default.\n * @param {?} taggingMode\n * @return {?}\n */\nprivate getRenderer(taggingMode: string): any {\n    return this.config.renderer ? this.config.renderer[taggingMode] : QuickNoteElement.defaultRenderer;\n  }\n/**\n * Called every time a keystroke is made in the editor. Listens for particular keys (e.g. UP arrow, ESC, etc.)\n * to handle certain behaviors of the picker.\n * \n * Runs within the context of the CKEditor, so actions that affect the view have to be run back inside of the\n * Angular zone of this class.\n * \n * @param {?} event The key press event\n * @return {?} true to allow the event to occur, false to cancel the event\n */\nprivate onKey(event: KeyboardEvent): boolean {\n    if (event.key) {\n      if (this.quickNoteResults) {\n        // Hide results on escape key\n        if (event.keyCode === KeyCodes.ESC) {\n          this.zone.run(() => {\n            this.hideResults();\n          });\n          return false;\n        }\n\n        // Navigation inside the results\n        if (event.keyCode === KeyCodes.UP) {\n          this.zone.run(() => {\n            this.quickNoteResults.instance.prevActiveMatch();\n          });\n          return false;\n        }\n\n        if (event.keyCode === KeyCodes.DOWN) {\n          this.zone.run(() => {\n            this.quickNoteResults.instance.nextActiveMatch();\n          });\n          return false;\n        }\n\n        if (event.keyCode === KeyCodes.ENTER) {\n          this.zone.run(() => {\n            this.quickNoteResults.instance.selectActiveMatch();\n          });\n          return false;\n        }\n      } else {\n        // Loop through all triggers and turn on tagging mode if the user just pressed a trigger character\n        let /** @type {?} */ triggers = this.config.triggers || {};\n        Object.keys(triggers).forEach((key) => {\n          let /** @type {?} */ trigger = triggers[key] || {};\n          if (event.key === trigger) {\n            this.isTagging = true;\n            this.taggingMode = key;\n          }\n        });\n      }\n    }\n    return true;\n  }\n/**\n * Debounced method that is run in the proper Angular context when the user has modified the CKEditor.\n * After the value has been updated in CKEditor, this will propagate that change to the model and listeners.\n * @return {?}\n */\nprivate onValueChange(): void {\n    // Get the html text in CKEditor\n    let /** @type {?} */ value = this.ckeInstance.getData();\n\n    // Remove empty 'ZERO WIDTH SPACE' characters that can get added erroneously by the editor\n    let /** @type {?} */ regex = new RegExp(String.fromCharCode(8203), 'g');\n    value = value.replace(regex, '');\n\n    // Make sure that any references in the model are still valid\n    this.validateReferences();\n\n    // Possibly show results if the user has entered a search term\n    this.showResults();\n\n    // Propagate change to ngModel for form validation, and send null if the note is empty\n    let /** @type {?} */ newModel = null;\n    if (value) {\n      newModel = {\n        note: value,\n        references: this.model.references,\n      };\n    }\n\n    // Inform listeners to the ngModel change event that something has changed\n    this.onModelChange(newModel);\n\n    // Inform listeners of the `@Output() change` event that the model has been updated\n    this.change.emit(newModel);\n\n    // Inform listeners to the ngModel touched event that something has changed\n    this.onTouched();\n  }\n/**\n * Creates an instance of the results (called popup) and adds all the bindings to that instance.\n * @return {?}\n */\nprivate showResults(): void {\n    if (this.isTagging) {\n      let /** @type {?} */ searchTerm = this.getSearchTerm();\n      if (searchTerm.length) {\n        // Update Matches\n        if (this.quickNoteResults) {\n          // Update existing list\n          this.quickNoteResults.instance.term = {\n            searchTerm: searchTerm,\n            taggingMode: this.taggingMode,\n          };\n        } else {\n          // Create the results DOM element\n          this.quickNoteResults = this.componentUtils.appendNextToLocation(this.resultsComponent, this.results);\n          this.quickNoteResults.instance.parent = this;\n          this.quickNoteResults.instance.config = this.config;\n          this.quickNoteResults.instance.term = {\n            searchTerm: searchTerm,\n            taggingMode: this.taggingMode,\n          };\n          this.positionResultsDropdown();\n        }\n      } else if (this.quickNoteResults) {\n        this.quickNoteResults.destroy();\n        this.quickNoteResults = null;\n      }\n\n      // Tell the OutsideClick base class to start listening for an outside clicks\n      this.toggleActive(null, true);\n    }\n  }\n/**\n * Deletes the picker results from the DOM.\n * @return {?}\n */\nprivate hideResults(): void {\n    this.isTagging = false;\n    if (this.quickNoteResults) {\n      this.quickNoteResults.destroy();\n      this.quickNoteResults = null;\n    }\n  }\n/**\n * Handles the selection from the QuickNoteResults Component. Called by the QuickNoteResults component on it's\n * parent (this element).\n * \n * @param {?} taggingMode - type of tags we are looking for\n * @param {?} selected - selected object from the picker that has a label and value\n * @return {?}\n */\nprivate onSelected(taggingMode: string, selected: any): void {\n    // Turn off tagging\n    this.isTagging = false;\n\n    // Replace searchTerm with link\n    let /** @type {?} */ symbol = this.config.triggers[taggingMode];\n    let /** @type {?} */ renderer = this.getRenderer(taggingMode);\n    let /** @type {?} */ renderedText = renderer(symbol, selected);\n\n    this.replaceWordAtCursor(renderedText);\n\n    // Add the new reference, if it doesn't already exist\n    this.model.references = this.model.references || {};\n    this.model.references[taggingMode] = this.model.references[taggingMode] || [];\n    let /** @type {?} */ matchingItems = this.model.references[taggingMode].filter((item) => JSON.stringify(item) === JSON.stringify(selected));\n    if (matchingItems.length === 0) {\n      this.model.references[taggingMode].push(selected);\n    }\n\n    // Update the quick note with the changes due to the user's selection of an item in the dropdown\n    this.onValueChange();\n  }\n/**\n * Convenience method that gets the current word that the cursor is on, minus the tag.\n * Also, trims any whitespace before/after the term to aid in searching.\n * @return {?}\n */\nprivate getSearchTerm(): string {\n    let /** @type {?} */ word = this.getWordAtCursor().trim();\n    if (this.isTagging) {\n      let /** @type {?} */ symbol = this.config.triggers[this.taggingMode];\n      if (!word.includes(symbol)) {\n        this.hideResults();\n        return '';\n      }\n      word = word.slice(word.indexOf(symbol) + symbol.length);\n    }\n    return word;\n  }\n/**\n * Gets the current word that the cursor is on CKEditor. Current word starts at the beginning of the line or a\n * tag character if we are in tagging mode. Current word ends at the end of the line or an empty space.\n * \n * @return {?} plain text string (removes all html formatting)\n */\nprivate getWordAtCursor(): string {\n    let /** @type {?} */ range = this.ckeInstance.getSelection().getRanges()[0];\n    let /** @type {?} */ start = range.startContainer;\n\n    if (start.type === CKEDITOR.NODE_TEXT && range.startOffset) {\n      let /** @type {?} */ text = start.getText();\n      let /** @type {?} */ symbol = this.config.triggers[this.taggingMode];\n      let /** @type {?} */ wordStart = text.lastIndexOf(symbol, range.startOffset - 1);\n\n      if (wordStart > 0) {\n        let /** @type {?} */ beforeSymbol: string = text.charAt(wordStart - 1);\n        // We don't want to trigger the lookup call unless the symbol was preceded by whitespace\n        if (beforeSymbol !== '\\u200B' && /\\S/.test(beforeSymbol)) {\n          return '';\n        }\n      } else if (start.hasPrevious() && /\\S$/.test(start.getPrevious().getText())) {\n        // When wordStart is <= 0, we need to check the previous node's text to see if it ended with whitespace or not\n        return '';\n      }\n\n      let /** @type {?} */ wordEnd = text.indexOf(' ', range.startOffset + 1);\n      if (wordStart === -1) {\n        wordStart = 0;\n      }\n      if (wordEnd === -1) {\n        wordEnd = text.length;\n      }\n\n      return text.substring(wordStart, wordEnd);\n    }\n\n    // Selection starts at the 0 index of the text node or there's no previous text node in contents\n    return '';\n  }\n/**\n * Replaces the word that the user is on with the given html.\n * \n * CKEditor gives us access to the current line of html in the editor, so we replace the content of\n * the line, replacing only the current word.\n * @param {?} newWord\n * @return {?}\n */\nprivate replaceWordAtCursor(newWord: string): void {\n    let /** @type {?} */ originalWord = this.getWordAtCursor().trim();\n    let /** @type {?} */ range = this.ckeInstance.getSelection().getRanges()[0];\n    let /** @type {?} */ start = range.startContainer;\n    let /** @type {?} */ parentNode = start.getParent();\n\n    if (start.type === CKEDITOR.NODE_TEXT && parentNode) {\n      let /** @type {?} */ line = parentNode.getHtml();\n      let /** @type {?} */ index = line.lastIndexOf(originalWord);\n\n      if (index >= 0) {\n        // Add a space after the replaced word so that multiple references can be added back to back\n        let /** @type {?} */ newLine = line.substring(0, index) + newWord + ' ' + line.substring(index + originalWord.length);\n        parentNode.setHtml(newLine);\n\n        // Place selection at the end of the line\n        range.moveToPosition(parentNode, CKEDITOR.POSITION_BEFORE_END);\n        this.ckeInstance.getSelection().selectRanges([range]);\n      }\n    }\n  }\n/**\n * Returns current references, minus any from the model that have been removed from the editor.\n * @return {?}\n */\nprivate validateReferences(): void {\n    let /** @type {?} */ html = this.ckeInstance.document.getBody().getHtml();\n\n    // CKEditor stopped supporting the config.forceSimpleAmpersand setting, so we have to convert '&amp;' to '&'\n    // when we pull html from the editor - see: https://dev.ckeditor.com/ticket/13723\n    let /** @type {?} */ ampRegex = new RegExp('&amp;', 'g');\n    html = html.replace(ampRegex, '&');\n\n    Object.keys(this.model.references).forEach((taggingMode) => {\n      let /** @type {?} */ array = this.model.references[taggingMode] || [];\n      let /** @type {?} */ symbol = this.config.triggers[taggingMode];\n      let /** @type {?} */ renderer = this.getRenderer(taggingMode);\n\n      this.model.references[taggingMode] = array.filter((item) => {\n        let /** @type {?} */ renderedText = renderer(symbol, item);\n        return html.includes(renderedText);\n      });\n\n      // If no references, then delete the key\n      if (this.model.references[taggingMode].length === 0) {\n        delete this.model.references[taggingMode];\n      }\n    });\n  }\n/**\n * Configures the CKEditor for QuickNote functionality.\n * \n * Sets the height of the CKEditor dynamically to the height of the wrapper upon initialization.\n * Removes the toolbar on the bottom and configures a slimmed down version of the toolbar.\n * Removes plugins and turns off setting to allow browser based spell checking.\n * @return {?}\n */\nprivate getCKEditorConfig(): any {\n    // Use the height of the wrapper element to set the initial height of the editor, then\n    // set it to 100% to allow the editor to resize using the grippy.\n    let /** @type {?} */ editorHeight = this.wrapper.nativeElement.clientHeight - QuickNoteElement.TOOLBAR_HEIGHT;\n    this.wrapper.nativeElement.style.setProperty('height', '100%');\n\n    return {\n      enterMode: CKEDITOR.ENTER_BR,\n      shiftEnterMode: CKEDITOR.ENTER_P,\n      disableNativeSpellChecker: false,\n      height: editorHeight,\n      startupFocus: this.startupFocus,\n      removePlugins: 'liststyle,tabletools,contextmenu', // allows browser based spell checking\n      toolbar: [\n        {\n          name: 'basicstyles',\n          items: [\n            'Styles',\n            'FontSize',\n            'Bold',\n            'Italic',\n            'Underline',\n            'TextColor',\n            '-',\n            'NumberedList',\n            'BulletedList',\n            'Outdent',\n            'Indent',\n            'Link',\n          ],\n        },\n      ],\n    };\n  }\n/**\n * Returns the current screen position of the cursor in CKEditor, accounting for any scrolling in the editor.\n * \n * @return {?}\n */\nprivate getCursorPosition(): any {\n    let /** @type {?} */ range = this.ckeInstance.getSelection().getRanges()[0];\n    let /** @type {?} */ parentElement = range.startContainer.$.parentElement;\n    let /** @type {?} */ editorElement = this.ckeInstance.editable().$;\n\n    // Since the editor is a text node in the DOM that does not know about it's position, a temporary element has to\n    // be inserted in order to locate the cursor position.\n    let /** @type {?} */ cursorElement = document.createElement('img');\n    cursorElement.setAttribute('src', 'null');\n    cursorElement.setAttribute('width', '0');\n    cursorElement.setAttribute('height', '0');\n\n    parentElement.appendChild(cursorElement);\n    let /** @type {?} */ cursorPosition = {\n      top: cursorElement.offsetTop - editorElement.scrollTop,\n      left: cursorElement.offsetLeft - editorElement.scrollLeft,\n    };\n    cursorElement.remove();\n\n    return cursorPosition;\n  }\n/**\n * Positions the results dropdown based on the location of the cursor in the text field\n * @return {?}\n */\nprivate positionResultsDropdown(): void {\n    const /** @type {?} */ MIN_MARGIN_TOP: number = QuickNoteElement.TOOLBAR_HEIGHT * 2;\n    const /** @type {?} */ MAX_MARGIN_TOP: number = this.getContentHeight() + QuickNoteElement.TOOLBAR_HEIGHT;\n\n    let /** @type {?} */ cursorPosition = this.getCursorPosition();\n    let /** @type {?} */ marginTop: number = cursorPosition.top + QuickNoteElement.TOOLBAR_HEIGHT;\n\n    // Check that the margin is within the visible bounds\n    marginTop = Math.max(marginTop, MIN_MARGIN_TOP);\n    marginTop = Math.min(marginTop, MAX_MARGIN_TOP);\n\n    // Set the margin-top of the dropdown\n    this.quickNoteResults.instance.element.nativeElement.style.setProperty('margin-top', marginTop + 'px');\n  }\n/**\n * Returns the height in pixels of the content area - the text that the user has entered.\n * @return {?}\n */\nprivate getContentHeight(): number {\n    let /** @type {?} */ contentHeight: number = 0;\n    if (\n      this.ckeInstance.ui &&\n      this.ckeInstance.ui.contentsElement &&\n      this.ckeInstance.ui.contentsElement.$ &&\n      this.ckeInstance.ui.contentsElement.$.style\n    ) {\n      let /** @type {?} */ cssText: string = this.ckeInstance.ui.contentsElement.$.style.cssText;\n      if (cssText.indexOf('height: ') !== -1) {\n        let /** @type {?} */ height: string = cssText.split('height: ')[1];\n        height = height.split('px')[0];\n        contentHeight = parseInt(height);\n      }\n    }\n    return contentHeight;\n  }\n/**\n * Show the placeholder text if the editor is empty\n * @return {?}\n */\nprivate showPlaceholder(): void {\n    if (!this.ckeInstance.getData() && !this.startupFocus) {\n      this.ckeInstance\n        .editable()\n        .getParent()\n        .$.appendChild(this.placeholderElement);\n      this.placeholderVisible = true;\n    }\n  }\n/**\n * Hide the placeholder text by removing the placeholder element from the DOM\n * @return {?}\n */\nprivate hidePlaceholder(): void {\n    if (this.placeholderVisible) {\n      this.ckeInstance\n        .editable()\n        .getParent()\n        .$.removeChild(this.placeholderElement);\n      this.placeholderVisible = false;\n    }\n  }\n/**\n * Get or create the single placeholder object that is constructed only when needed.\n * @return {?}\n */\nprivate get placeholderElement(): any {\n    if (!this._placeholderElement) {\n      this._placeholderElement = document.createElement('div');\n      this._placeholderElement.className = 'placeholder';\n      this._placeholderElement.style.cssText =\n        'margin: 20px; color: #AAAAAA; font-family: sans-serif; font-size: 13px; line-height: 20px; position: absolute; top: 0';\n      this._placeholderElement.textContent = this.placeholder;\n    }\n    return this._placeholderElement;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-quick-note',\n  providers: [QUICK_NOTE_VALUE_ACCESSOR],\n  template: `\n        <div class=\"quick-note-wrapper\" #wrapper>\n            <textarea #host></textarea>\n            <span #results></span>\n        </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: ElementRef, },\n{type: ComponentUtils, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'wrapper': [{ type: ViewChild, args: ['wrapper', ] },],\n'host': [{ type: ViewChild, args: ['host', ] },],\n'results': [{ type: ViewChild, args: ['results', { read: ViewContainerRef }, ] },],\n'config': [{ type: Input },],\n'startupFocus': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'focus': [{ type: Output },],\n'blur': [{ type: Output },],\n'change': [{ type: Output },],\n};\n}\n\nfunction QuickNoteElement_tsickle_Closure_declarations() {\n/** @type {?} */\nQuickNoteElement.TOOLBAR_HEIGHT;\n/** @type {?} */\nQuickNoteElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nQuickNoteElement.ctorParameters;\n/** @type {?} */\nQuickNoteElement.propDecorators;\n/** @type {?} */\nQuickNoteElement.prototype.wrapper;\n/** @type {?} */\nQuickNoteElement.prototype.host;\n/** @type {?} */\nQuickNoteElement.prototype.results;\n/** @type {?} */\nQuickNoteElement.prototype.config;\n/** @type {?} */\nQuickNoteElement.prototype.startupFocus;\n/** @type {?} */\nQuickNoteElement.prototype.placeholder;\n/** @type {?} */\nQuickNoteElement.prototype.focus;\n/** @type {?} */\nQuickNoteElement.prototype.blur;\n/** @type {?} */\nQuickNoteElement.prototype.change;\n/** @type {?} */\nQuickNoteElement.prototype.resultsComponent;\n/** @type {?} */\nQuickNoteElement.prototype.quickNoteResults;\n/** @type {?} */\nQuickNoteElement.prototype.isTagging;\n/** @type {?} */\nQuickNoteElement.prototype.taggingMode;\n/** @type {?} */\nQuickNoteElement.prototype.model;\n/** @type {?} */\nQuickNoteElement.prototype.ckeInstance;\n/** @type {?} */\nQuickNoteElement.prototype.debounceTimeout;\n/** @type {?} */\nQuickNoteElement.prototype.placeholderVisible;\n/** @type {?} */\nQuickNoteElement.prototype._placeholderElement;\n/** @type {?} */\nQuickNoteElement.prototype.onModelChange;\n/** @type {?} */\nQuickNoteElement.prototype.onModelTouched;\n/** @type {?} */\nQuickNoteElement.prototype.zone;\n/** @type {?} */\nQuickNoteElement.prototype.componentUtils;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoLoadingModule } from './../loading/Loading.module';\nimport { NovoListModule } from './../list/List.module';\nimport { QuickNoteElement } from './QuickNote';\nimport { QuickNoteResults } from './extras/quick-note-results/QuickNoteResults';\nexport class NovoQuickNoteModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, NovoLoadingModule, NovoListModule],\n    declarations: [QuickNoteElement, QuickNoteResults],\n    exports: [QuickNoteElement, QuickNoteResults],\n    entryComponents: [QuickNoteResults]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoQuickNoteModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoQuickNoteModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoQuickNoteModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoRadioElement),\n  multi: true,\n};\nexport class NovoRadioGroup {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-radio-group',\n  template: '<ng-content></ng-content>',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoRadioGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoRadioGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoRadioGroup.ctorParameters;\n}\n\nexport class NovoRadioElement implements ControlValueAccessor {\n  \n  name: string;\n  \n  value: any;\n  \n  checked: boolean;\n  \n  vertical: boolean;\n  \n  label: string;\n  \n  button: boolean = false;\n  \n  theme: string = 'secondary';\n  \n  icon: string;\n  \n  disabled: boolean = false;\n\n  \n  change: EventEmitter<any> = new EventEmitter();\n\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @param {?} ref\n */\nconstructor(private ref: ChangeDetectorRef) {}\n/**\n * @param {?} event\n * @return {?}\n */\nselect(event) {\n    Helpers.swallowEvent(event);\n    // Only change the checked state if this is a new radio, they are not toggle buttons\n    if (!this.checked) {\n      this.checked = !this.checked;\n      this.change.emit(this.value);\n      this.onModelChange(this.value);\n      this.ref.markForCheck();\n    }\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-radio',\n  providers: [RADIO_VALUE_ACCESSOR],\n  template: `\n        <input [name]=\"name\" type=\"radio\" [checked]=\"checked\" [attr.id]=\"name\" (change)=\"select($event)\" [disabled]=\"disabled\">\n        <label [attr.for]=\"name\" (click)=\"select($event)\" [class.disabled]=\"disabled\">\n            <button *ngIf=\"button\" [ngClass]=\"{'unchecked': !checked, 'checked': checked, 'has-icon': !!icon}\" [theme]=\"theme\" [icon]=\"icon\">{{ label }}</button>\n            <div *ngIf=\"!button\">\n                <i [ngClass]=\"{'bhi-radio-empty': !checked, 'bhi-radio-filled': checked}\"></i>\n                {{ label }}\n                <ng-content></ng-content>\n            </div>\n        </label>\n    `,\n  host: {\n    '[class.vertical]': 'vertical',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'value': [{ type: Input },],\n'checked': [{ type: Input },],\n'vertical': [{ type: Input },],\n'label': [{ type: Input },],\n'button': [{ type: Input },],\n'theme': [{ type: Input },],\n'icon': [{ type: Input },],\n'disabled': [{ type: Input },],\n'change': [{ type: Output },],\n};\n}\n\nfunction NovoRadioElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoRadioElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoRadioElement.ctorParameters;\n/** @type {?} */\nNovoRadioElement.propDecorators;\n/** @type {?} */\nNovoRadioElement.prototype.name;\n/** @type {?} */\nNovoRadioElement.prototype.value;\n/** @type {?} */\nNovoRadioElement.prototype.checked;\n/** @type {?} */\nNovoRadioElement.prototype.vertical;\n/** @type {?} */\nNovoRadioElement.prototype.label;\n/** @type {?} */\nNovoRadioElement.prototype.button;\n/** @type {?} */\nNovoRadioElement.prototype.theme;\n/** @type {?} */\nNovoRadioElement.prototype.icon;\n/** @type {?} */\nNovoRadioElement.prototype.disabled;\n/** @type {?} */\nNovoRadioElement.prototype.change;\n/** @type {?} */\nNovoRadioElement.prototype.model;\n/** @type {?} */\nNovoRadioElement.prototype.onModelChange;\n/** @type {?} */\nNovoRadioElement.prototype.onModelTouched;\n/** @type {?} */\nNovoRadioElement.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoRadioElement, NovoRadioGroup } from './Radio';\nexport class NovoRadioModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule],\n    declarations: [NovoRadioElement, NovoRadioGroup],\n    exports: [NovoRadioElement, NovoRadioGroup]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoRadioModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoRadioModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoRadioModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","// Angular\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\n// Vendor\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { filter } from 'rxjs/operators/filter';\nimport { first } from 'rxjs/operators/first';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { switchMap } from 'rxjs/operators/switchMap';\nexport class NovoOverlayTemplateComponent implements OnDestroy {\npublic id: string = `novo-overlay-${Date.now()}`;\npublic template: TemplateRef<any>;\npublic panel: ElementRef;\npublic position:\n    | 'default'\n    | 'right'\n    | 'above-below'\n    | 'right-above-below'\n    | 'center'\n    | 'bottom'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'top-left'\n    | 'top-right' =\n    'default';\npublic scrollStrategy: 'reposition' | 'block' | 'close' = 'reposition';\npublic width: number;\npublic height: number;\npublic closeOnSelect: boolean = true;\npublic select: EventEmitter<any> = new EventEmitter();\npublic closing: EventEmitter<any> = new EventEmitter();\npublic overlayRef: OverlayRef | null;\npublic portal: TemplatePortal<any>;\n\n  // The subscription for closing actions (some are bound to document)\n  protected closingActionsSubscription: Subscription;\nprivate _parent: ElementRef;\n/**\n * @param {?} overlay\n * @param {?} viewContainerRef\n * @param {?} zone\n * @param {?} changeDetectorRef\n * @param {?} document\n */\nconstructor(\n    protected overlay: Overlay,\n    protected viewContainerRef: ViewContainerRef,\n    protected zone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    \n    \n    protected document: any,\n  ) {}\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this.destroyOverlay();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this.overlayRef && this.overlayRef.hasAttached();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set parent(value: ElementRef) {\n    this._parent = value;\n    this.checkSizes();\n  }\n/**\n * @return {?}\n */\npublic get parent(): ElementRef {\n    return this._parent;\n  }\n/**\n * @return {?}\n */\npublic openPanel(): void {\n    if (!this.overlayRef) {\n      this.createOverlay(this.template);\n    } else {\n      this.checkSizes();\n    }\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n    this.changeDetectorRef.markForCheck();\n    setTimeout(() => {\n      if (this.overlayRef) {\n        this.overlayRef.updatePosition();\n      }\n    });\n  }\n/**\n * @return {?}\n */\npublic closePanel(): void {\n    this.zone.run(() => {\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n        this.closingActionsSubscription.unsubscribe();\n      }\n      this.closing.emit(true);\n      if (this.panelOpen) {\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onClosingAction(event: any): void {\n    this.closePanel();\n  }\n/**\n * A stream of actions that should close the autocomplete panel, including\n * when an option is selected, on blur, and when TAB is pressed.\n * @return {?}\n */\npublic get panelClosingActions(): Observable<any> {\n    return merge(\n      // this.overlayTemplate._keyManager.tabOut,\n      this.outsideClickStream,\n    );\n  }\n/**\n * Stream of clicks outside of the autocomplete panel.\n * @return {?}\n */\nprotected get outsideClickStream(): Observable<any> {\n    if (!this.document) {\n      return observableOf();\n    }\n\n    return merge(fromEvent(this.document, 'mousedown'), fromEvent(this.document, 'touchend')).pipe(\n      filter((event: MouseEvent | TouchEvent) => {\n        const /** @type {?} */ clickTarget: HTMLElement = /** @type {?} */(( event.target as HTMLElement));\n        const /** @type {?} */ clicked: boolean =\n          this.panelOpen &&\n          clickTarget !== this.getConnectedElement().nativeElement &&\n          !this.getConnectedElement().nativeElement.contains(clickTarget) &&\n          (!!this.overlayRef && !this.overlayRef.overlayElement.contains(clickTarget));\n        if (this.panelOpen && !!this.overlayRef && this.overlayRef.overlayElement.contains(clickTarget) && this.closeOnSelect) {\n          this.select.emit(event);\n        }\n        return clicked;\n      }),\n    );\n  }\n/**\n * This method listens to a stream of panel closing actions and resets the\n * stream every time the option list changes.\n * @return {?}\n */\nprotected subscribeToClosingActions(): Subscription {\n    const /** @type {?} */ firstStable: Observable<any> = this.zone.onStable.asObservable().pipe(first());\n    // const valueChanges = Observable.from(this.value);\n    // When the zone is stable initially, and when the option list changes...\n    return (\n      merge(firstStable)\n        .pipe(\n          // create a new stream of panelClosingActions, replacing any previous streams\n          // that were created, and flatten it so our stream only emits closing events...\n          switchMap(() => {\n            return this.panelClosingActions;\n          }),\n          // when the first closing event occurs...\n          first(),\n        )\n        // set the value, close the panel, and complete.\n        .subscribe((event: any) => this.onClosingAction(event))\n    );\n  }\n/**\n * @param {?} template\n * @return {?}\n */\nprotected createOverlay(template: TemplateRef<any>): void {\n    this.portal = new TemplatePortal(template, this.viewContainerRef);\n    this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    this.overlayRef.backdropClick().subscribe(() => this.closePanel());\n  }\n/**\n * @return {?}\n */\nprotected destroyOverlay(): void {\n    if (this.overlayRef) {\n      this.closePanel();\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n  }\n/**\n * @return {?}\n */\nprotected getOverlayConfig(): OverlayConfig {\n    const /** @type {?} */ config: OverlayConfig = new OverlayConfig();\n\n    if (!this.width) {\n      config.width = this.getHostWidth();\n    } else {\n      config.width = this.width;\n    }\n\n    if (this.height) {\n      config.height = this.height;\n    }\n\n    config.positionStrategy = this.getPosition();\n    config.hasBackdrop = false;\n    config.direction = 'ltr';\n    config.scrollStrategy = this.getScrollStrategy();\n\n    return config;\n  }\n/**\n * Supports the following position strategies:\n * 'default', 'right', 'bottom', 'center', 'bottom-left', 'bottom-right', 'top-left', 'top-right'\n * @return {?}\n */\nprotected getPosition(): ConnectedPositionStrategy {\n    if (this.position === 'center') {\n      return this.overlay\n        .position()\n        .connectedTo(this.getConnectedElement(), { originX: 'start', originY: 'center' }, { overlayX: 'start', overlayY: 'center' })\n        .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' });\n    }\n\n    let [originX, fallbackX]: HorizontalConnectionPos[] = this.position.includes('right') ? ['end', 'start'] : ['start', 'end'];\n    let [originY, overlayY]: VerticalConnectionPos[] = this.position.includes('top') ? ['top', 'bottom'] : ['bottom', 'top'];\n\n    let /** @type {?} */ strategy: ConnectedPositionStrategy = this.overlay\n      .position()\n      .connectedTo(this.getConnectedElement(), { originX, originY }, { overlayX: originX, overlayY })\n      .withDirection('ltr');\n\n    if (this.position === 'bottom') {\n      strategy = strategy.withFallbackPosition({ originX: fallbackX, originY: 'bottom' }, { overlayX: fallbackX, overlayY: 'top' });\n    } else if (this.position === 'right' || this.position === 'default' || this.position.includes('above-below')) {\n      strategy = strategy\n        .withFallbackPosition({ originX, originY: 'top' }, { overlayX: originX, overlayY: 'bottom' })\n        .withFallbackPosition({ originX: fallbackX, originY: 'bottom' }, { overlayX: fallbackX, overlayY: 'top' })\n        .withFallbackPosition({ originX: fallbackX, originY: 'top' }, { overlayX: fallbackX, overlayY: 'bottom' });\n      if (!this.position.includes('above-below')) {\n        strategy = strategy\n          .withFallbackPosition({ originX: originX, originY: 'center' }, { overlayX: originX, overlayY: 'center' })\n          .withFallbackPosition({ originX: fallbackX, originY: 'center' }, { overlayX: fallbackX, overlayY: 'center' });\n      }\n    }\n    return strategy;\n  }\n/**\n * @return {?}\n */\nprotected getScrollStrategy(): ScrollStrategy {\n    switch (this.scrollStrategy) {\n      case 'block':\n        return this.overlay.scrollStrategies.block();\n      case 'reposition':\n        return this.overlay.scrollStrategies.reposition();\n      default:\n        return this.overlay.scrollStrategies.close();\n    }\n  }\n/**\n * @return {?}\n */\nprotected checkSizes(): void {\n    if (this.overlayRef) {\n      if (!this.width) {\n        this.overlayRef.getConfig().width = this.getHostWidth();\n      }\n      if (this.height) {\n        this.overlayRef.getConfig().height = this.height;\n      }\n      this.overlayRef.updateSize(this.overlayRef.getConfig());\n      this.overlayRef.updatePosition();\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nprotected getConnectedElement(): ElementRef {\n    return this.parent;\n  }\n/**\n * @return {?}\n */\nprotected getHostWidth(): number {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-overlay-template',\n  template: `\n    <ng-template>\n      <div class=\"novo-overlay-panel\" role=\"listbox\" [id]=\"id\" #panel>\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n'panel': [{ type: ViewChild, args: ['panel', ] },],\n'position': [{ type: Input },],\n'scrollStrategy': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'closeOnSelect': [{ type: Input },],\n'select': [{ type: Output },],\n'closing': [{ type: Output },],\n'parent': [{ type: Input },],\n};\n}\n\nfunction NovoOverlayTemplateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoOverlayTemplateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoOverlayTemplateComponent.ctorParameters;\n/** @type {?} */\nNovoOverlayTemplateComponent.propDecorators;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.id;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.template;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.panel;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.position;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.scrollStrategy;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.width;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.height;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.closeOnSelect;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.select;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.closing;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.overlayRef;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.portal;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.closingActionsSubscription;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype._parent;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.overlay;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.viewContainerRef;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.zone;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.changeDetectorRef;\n/** @type {?} */\nNovoOverlayTemplateComponent.prototype.document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\n\nconst /** @type {?} */ notifications: { [key: string]: boolean } = {};\n/**\n * @param {?} message\n * @return {?}\n */\nexport function notify(message: string): void {\n  if (!isDevMode() || message in notifications) {\n    return;\n  }\n  notifications[message] = true;\n  console.warn(message); // tslint:disable-line\n}\n","// NG2\n\nimport {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\n// APP\n\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { Helpers } from '../../utils/Helpers';\nimport { notify } from '../../utils/notifier/notifier.util';\nexport class NovoDropdownElement implements OnInit, OnDestroy {\n   parentScrollSelector: string;\n   parentScrollAction: string = 'close';\n   containerClass: string;\n  \n  side:\n    | 'default'\n    | 'right'\n    | 'above-below'\n    | 'right-above-below'\n    | 'center'\n    | 'bottom'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'top-left'\n    | 'top-right' =\n    'default';\n   scrollStrategy: 'reposition' | 'block' | 'close' = 'reposition';\n   height: number;\n   width: number = -1; // Defaults to dynamic width (no hardcoded width value and no host width lookup)\n   appendToBody: boolean = false; // Deprecated\n\n   toggled: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   overlay: NovoOverlayTemplateComponent;\npublic button;\n\n  clickHandler: any;\n  closeHandler: any;\n  parentScrollElement: Element;\nprivate _items: QueryList<NovoItemElement>;\nprivate _textItems: string[];\nprivate activeIndex: number = -1;\nprivate filterTerm: string = '';\nprivate filterTermTimeout: any;\n/**\n * @param {?} element\n * @param {?} ref\n */\nconstructor(public element: ElementRef,\nprivate ref: ChangeDetectorRef) {\n    this.clickHandler = this.togglePanel.bind(this);\n    this.closeHandler = this.closePanel.bind(this);\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    // Add a click handler to the button to toggle the menu\n    let /** @type {?} */ button = this.element.nativeElement.querySelector('button');\n    button.addEventListener('click', this.clickHandler);\n    if (this.parentScrollSelector) {\n      this.parentScrollElement = Helpers.findAncestor(this.element.nativeElement, this.parentScrollSelector);\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    // Remove listener\n    let /** @type {?} */ button = this.element.nativeElement.querySelector('button');\n    if (button) {\n      button.removeEventListener('click', this.clickHandler);\n    }\n    if (this.parentScrollElement && this.parentScrollAction === 'close') {\n      this.parentScrollElement.removeEventListener('scroll', this.closeHandler);\n    }\n  }\n/**\n * @param {?} items\n * @return {?}\n */\npublic set items(items: QueryList<NovoItemElement>) {\n    this._items = items;\n    // Get the innerText of all the items to allow for searching\n    this._textItems = items.map((item: NovoItemElement) => {\n      return item.element.nativeElement.innerText;\n    });\n  }\n/**\n * BEGIN: Convenient Panel Methods.\n * @return {?}\n */\npublic get panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n/**\n * @return {?}\n */\npublic openPanel(): void {\n    this.overlay.openPanel();\n    if (this.parentScrollElement && this.parentScrollAction === 'close') {\n      this.parentScrollElement.addEventListener('scroll', this.closeHandler);\n    }\n    this.toggled.emit(true);\n  }\n/**\n * @return {?}\n */\npublic closePanel(): void {\n    this.overlay.closePanel();\n    if (this.parentScrollElement && this.parentScrollAction === 'close') {\n      this.parentScrollElement.removeEventListener('scroll', this.closeHandler);\n    }\n    // Clear active index\n    if (this.activeIndex !== -1) {\n      this._items.toArray()[this.activeIndex].active = false;\n    }\n    this.activeIndex = -1;\n    this.ref.markForCheck();\n    this.toggled.emit(false);\n  }\n/**\n * @return {?}\n */\npublic togglePanel(): void {\n    this.panelOpen ? this.closePanel() : this.openPanel();\n  }\n/**\n * END: Convenient Panel Methods.\n * @param {?} event\n * @return {?}\n */\npublic onKeyDown(event: KeyboardEvent): void {\n    if (this.panelOpen && event.keyCode === KeyCodes.ESC) {\n      Helpers.swallowEvent(event);\n      // active & esc hit -- close\n      this.closePanel();\n    } else if (event.keyCode === KeyCodes.ENTER) {\n      Helpers.swallowEvent(event);\n      // enter -- perform the \"click\"\n      this._items.toArray()[this.activeIndex].onClick(event);\n    } else if (event.keyCode === KeyCodes.DOWN) {\n      Helpers.swallowEvent(event);\n      // down - navigate through the list ignoring disabled ones\n      if (this.activeIndex !== -1) {\n        this._items.toArray()[this.activeIndex].active = false;\n      }\n      this.activeIndex++;\n      if (this.activeIndex === this._items.length) {\n        this.activeIndex = 0;\n      }\n      while (this._items.toArray()[this.activeIndex].disabled) {\n        this.activeIndex++;\n        if (this.activeIndex === this._items.length) {\n          this.activeIndex = 0;\n        }\n      }\n      this._items.toArray()[this.activeIndex].active = true;\n      this.scrollToActive();\n    } else if (event.keyCode === KeyCodes.UP) {\n      Helpers.swallowEvent(event);\n      // up -- navigate through the list ignoring disabled ones\n      if (this.activeIndex !== -1) {\n        this._items.toArray()[this.activeIndex].active = false;\n      }\n      this.activeIndex--;\n      if (this.activeIndex < 0) {\n        this.activeIndex = this._items.length - 1;\n      }\n      while (this._items.toArray()[this.activeIndex].disabled) {\n        this.activeIndex--;\n        if (this.activeIndex < 0) {\n          this.activeIndex = this._items.length - 1;\n        }\n      }\n      this._items.toArray()[this.activeIndex].active = true;\n      this.scrollToActive();\n    } else if (\n      (event.keyCode >= 65 && event.keyCode <= 90) ||\n      (event.keyCode >= 96 && event.keyCode <= 105) ||\n      (event.keyCode >= 48 && event.keyCode <= 57) ||\n      event.keyCode === KeyCodes.SPACE\n    ) {\n      Helpers.swallowEvent(event);\n      // A-Z, 0-9, space -- filter the list and scroll to active filter\n      // filter has hard reset after 2s\n      clearTimeout(this.filterTermTimeout);\n      this.filterTermTimeout = setTimeout(() => {\n        this.filterTerm = '';\n      }, 2000);\n      let /** @type {?} */ char = String.fromCharCode(event.keyCode);\n      this.filterTerm = this.filterTerm.concat(char);\n      let /** @type {?} */ index = this._textItems.findIndex((value: string) => {\n        return new RegExp(`^${this.filterTerm.toLowerCase()}`).test(value.trim().toLowerCase());\n      });\n      if (index !== -1) {\n        if (this.activeIndex !== -1) {\n          this._items.toArray()[this.activeIndex].active = false;\n        }\n        this.activeIndex = index;\n        this._items.toArray()[this.activeIndex].active = true;\n        this.scrollToActive();\n      }\n    } else if ([KeyCodes.BACKSPACE, KeyCodes.DELETE].includes(event.keyCode)) {\n      Helpers.swallowEvent(event);\n      // backspace, delete -- remove partial filters\n      clearTimeout(this.filterTermTimeout);\n      this.filterTermTimeout = setTimeout(() => {\n        this.filterTerm = '';\n      }, 2000);\n      this.filterTerm = this.filterTerm.slice(0, -1);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onOverlayKeyDown(event: KeyboardEvent): void {\n    if (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.ENTER) {\n      Helpers.swallowEvent(event);\n      this.closePanel();\n    }\n  }\n/**\n * @return {?}\n */\nprivate scrollToActive(): void {\n    let /** @type {?} */ container = this.overlay.overlayRef.overlayElement.querySelector('.dropdown-container');\n    let /** @type {?} */ item = this._items.toArray()[this.activeIndex];\n    if (container && item) {\n      container.scrollTop = item.element.nativeElement.offsetTop;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-dropdown',\n  template: `\n    <ng-content select=\"button\" #trigger></ng-content>\n    <novo-overlay-template [parent]=\"element\" [width]=\"width\" [position]=\"side\" [scrollStrategy]=\"scrollStrategy\">\n      <div class=\"dropdown-container {{ containerClass }}\" [style.height.px]=\"height\" [class.has-height]=\"!!height\" (keydown)=\"onOverlayKeyDown($event)\">\n        <ng-content></ng-content>\n      </div>\n    </novo-overlay-template>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'parentScrollSelector': [{ type: Input },],\n'parentScrollAction': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'side': [{ type: Input },],\n'scrollStrategy': [{ type: Input },],\n'height': [{ type: Input },],\n'width': [{ type: Input },],\n'appendToBody': [{ type: Input },],\n'toggled': [{ type: Output },],\n'overlay': [{ type: ViewChild, args: [NovoOverlayTemplateComponent, ] },],\n'button': [{ type: ViewChild, args: ['trigger', ] },],\n'onKeyDown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction NovoDropdownElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDropdownElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDropdownElement.ctorParameters;\n/** @type {?} */\nNovoDropdownElement.propDecorators;\n/** @type {?} */\nNovoDropdownElement.prototype.parentScrollSelector;\n/** @type {?} */\nNovoDropdownElement.prototype.parentScrollAction;\n/** @type {?} */\nNovoDropdownElement.prototype.containerClass;\n/** @type {?} */\nNovoDropdownElement.prototype.side;\n/** @type {?} */\nNovoDropdownElement.prototype.scrollStrategy;\n/** @type {?} */\nNovoDropdownElement.prototype.height;\n/** @type {?} */\nNovoDropdownElement.prototype.width;\n/** @type {?} */\nNovoDropdownElement.prototype.appendToBody;\n/** @type {?} */\nNovoDropdownElement.prototype.toggled;\n/** @type {?} */\nNovoDropdownElement.prototype.overlay;\n/** @type {?} */\nNovoDropdownElement.prototype.button;\n/** @type {?} */\nNovoDropdownElement.prototype.clickHandler;\n/** @type {?} */\nNovoDropdownElement.prototype.closeHandler;\n/** @type {?} */\nNovoDropdownElement.prototype.parentScrollElement;\n/** @type {?} */\nNovoDropdownElement.prototype._items;\n/** @type {?} */\nNovoDropdownElement.prototype._textItems;\n/** @type {?} */\nNovoDropdownElement.prototype.activeIndex;\n/** @type {?} */\nNovoDropdownElement.prototype.filterTerm;\n/** @type {?} */\nNovoDropdownElement.prototype.filterTermTimeout;\n/** @type {?} */\nNovoDropdownElement.prototype.element;\n/** @type {?} */\nNovoDropdownElement.prototype.ref;\n}\n\nexport class NovoItemElement {\npublic disabled: boolean;\npublic keepOpen: boolean = false;\npublic action: EventEmitter<any> = new EventEmitter();\npublic active: boolean = false;\n/**\n * @param {?} dropdown\n * @param {?} element\n */\nconstructor(private dropdown: NovoDropdownElement,\npublic element: ElementRef) {}\n/**\n * @param {?} event\n * @return {?}\n */\npublic onClick(event: Event): void {\n    // Poor man's disable\n    if (!this.disabled) {\n      // Close if keepOpen is false\n      if (!this.keepOpen) {\n        this.dropdown.closePanel();\n      }\n      // Emit the action\n      this.action.emit({ originalEvent: event });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'item',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.active]': 'active',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoDropdownElement, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'keepOpen': [{ type: Input },],\n'action': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction NovoItemElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemElement.ctorParameters;\n/** @type {?} */\nNovoItemElement.propDecorators;\n/** @type {?} */\nNovoItemElement.prototype.disabled;\n/** @type {?} */\nNovoItemElement.prototype.keepOpen;\n/** @type {?} */\nNovoItemElement.prototype.action;\n/** @type {?} */\nNovoItemElement.prototype.active;\n/** @type {?} */\nNovoItemElement.prototype.dropdown;\n/** @type {?} */\nNovoItemElement.prototype.element;\n}\n\nexport class NovoListElement implements AfterContentInit {\npublic items: QueryList<NovoItemElement>;\n/**\n * @param {?} dropdown\n */\nconstructor(private dropdown: NovoDropdownElement) {}\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n    this.dropdown.items = this.items;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'list',\n  template: '<ng-content></ng-content>',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoDropdownElement, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: ContentChildren, args: [NovoItemElement, ] },],\n};\n}\n\nfunction NovoListElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoListElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoListElement.ctorParameters;\n/** @type {?} */\nNovoListElement.propDecorators;\n/** @type {?} */\nNovoListElement.prototype.items;\n/** @type {?} */\nNovoListElement.prototype.dropdown;\n}\n\nexport class NovoItemHeaderElement {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dropdown-item-header',\n  template: '<ng-content></ng-content>',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoItemHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoItemHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoItemHeaderElement.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n// APP\n\nimport { NovoOverlayTemplateComponent } from './Overlay';\nexport class NovoOverlayModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule, OverlayModule, ScrollDispatchModule],\n  declarations: [NovoOverlayTemplateComponent],\n  exports: [NovoOverlayTemplateComponent, ScrollDispatchModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoOverlayModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoOverlayModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoOverlayModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\n// APP\n\nimport { NovoDropdownElement, NovoItemElement, NovoItemHeaderElement, NovoListElement } from './Dropdown';\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nexport class NovoDropdownModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [NovoOverlayModule],\n  declarations: [NovoDropdownElement, NovoItemElement, NovoListElement, NovoItemHeaderElement],\n  exports: [NovoDropdownElement, NovoItemElement, NovoListElement, NovoItemHeaderElement],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoDropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  forwardRef,\n  ElementRef,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ChangeDetectorRef,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { TAB, ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n// App\n\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoSelectElement),\n  multi: true,\n};\nexport class NovoSelectElement implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n  \n  name: string;\n  \n  options: Array<any>;\n  \n  placeholder: string = 'Select...';\n  \n  readonly: boolean;\n  \n  headerConfig: any;\n  \n  onSelect: EventEmitter<any> = new EventEmitter();\n\n  selectedIndex: number = -1;\n  empty: boolean = true;\n  header: any = {\n    open: false,\n    valid: true,\n    value: '',\n  };\n  createdItem: any;\n  selected: any;\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n  filterTerm: string = '';\n  filterTermTimeout;\n  filteredOptions: any;\n  disabled: boolean = false;\n/**\n * Element for the panel containing the autocomplete options.\n */\noverlay: NovoOverlayTemplateComponent;\n  \n  dropdown: ElementRef;\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} ref\n * @param {?} focusMonitor\n * @param {?} ngZone\n */\nconstructor(\npublic element: ElementRef,\npublic labels: NovoLabelService,\npublic ref: ChangeDetectorRef,\nprivate focusMonitor: FocusMonitor,\nprivate ngZone: NgZone,\n  ) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.focusMonitor.monitor(this.dropdown.nativeElement).subscribe((origin) =>\n      this.ngZone.run(() => {\n        if (origin === 'keyboard' && !this.disabled) {\n          this.openPanel();\n        }\n      }),\n    );\n    this.ngOnChanges();\n  }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n    this.readonly = this.readonly === true;\n    if (this.options && this.options.length && typeof this.options[0] === 'string') {\n      this.filteredOptions = this.options.map((item) => {\n        return { value: item, label: item };\n      });\n    } else {\n      this.filteredOptions = (this.options || [])\n        .filter((item) => {\n          return !item.readOnly;\n        })\n        .map((element) => {\n          return {\n            ...element,\n            active: false,\n          };\n        });\n    }\n    if (!this.model && !this.createdItem) {\n      this.clear();\n    } else if (this.createdItem) {\n      let /** @type {?} */ item = this.options.find((i) => i.label === this.createdItem);\n      let /** @type {?} */ index = this.options.indexOf(item);\n      this.select(item, index);\n    } else {\n      this.writeValue(this.model);\n    }\n    if (this.panelOpen) {\n      this.openPanel();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.dropdown.nativeElement);\n  }\n/**\n * BEGIN: Convienient Panel Methods.\n * @return {?}\n */\nopenPanel(): void {\n    this.overlay.openPanel();\n  }\n/**\n * @return {?}\n */\nclosePanel(): void {\n    this.overlay.closePanel();\n  }\n/**\n * @return {?}\n */\ntogglePanel(): void {\n    if (this.panelOpen) {\n      this.closePanel();\n    } else {\n      setTimeout(() => {\n        this.dropdown.nativeElement.focus();\n      });\n      this.openPanel();\n    }\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n/**\n * This method closes the panel, and if a value is specified, also sets the associated\n * control to that value. It will also mark the control as dirty if this interaction\n * stemmed from the user.\n * @param {?} event\n * @return {?}\n */\nsetValueAndClose(event: any | null): void {\n    if (event.value && event.index >= 0) {\n      this.select(event.value, event.index);\n    }\n    this.closePanel();\n  }\n/**\n * @param {?} option\n * @param {?} i\n * @param {?=} fireEvents\n * @return {?}\n */\nselect(option, i, fireEvents: boolean = true) {\n    if (this.selected) {\n      this.selected.active = false;\n    }\n    this.selectedIndex = i;\n    this.selected = option;\n    this.selected.active = true;\n    this.empty = false;\n    if (fireEvents) {\n      this.onModelChange(this.selected.value);\n      this.onSelect.emit({ selected: this.selected.value });\n    }\n  }\n/**\n * @return {?}\n */\nclear() {\n    this.selected = {\n      label: this.placeholder,\n      value: null,\n      active: false,\n    };\n    this.header = {\n      open: false,\n      valid: true,\n      value: '',\n    };\n    this.selectedIndex = -1;\n    this.empty = true;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDown(event: KeyboardEvent): void {\n    // To prevent default window scrolling\n    if ([KeyCodes.UP, KeyCodes.DOWN].includes(event.keyCode)) {\n      event.preventDefault();\n    }\n    if ([KeyCodes.ESC, KeyCodes.TAB].includes(event.keyCode)) {\n      this.closePanel();\n    } else if (event.keyCode === KeyCodes.ENTER) {\n      if (this.header.open && this.header.value) {\n        this.saveHeader();\n      } else {\n        this.setValueAndClose({\n          value: this.filteredOptions[this.selectedIndex],\n          index: this.selectedIndex,\n        });\n      }\n    } else if (event.keyCode === KeyCodes.UP) {\n      if (!this.panelOpen) {\n        this.openPanel();\n      }\n      if (this.selectedIndex > 0) {\n        this.selectedIndex--;\n        this.select(this.filteredOptions[this.selectedIndex], this.selectedIndex);\n        this.scrollToSelected();\n      }\n    } else if (event.keyCode === KeyCodes.DOWN) {\n      if (!this.panelOpen) {\n        this.openPanel();\n      }\n      if (this.selectedIndex < this.filteredOptions.length - 1) {\n        this.selectedIndex++;\n        this.select(this.filteredOptions[this.selectedIndex], this.selectedIndex);\n        this.scrollToSelected();\n        if (this.header.open) {\n          this.toggleHeader(null, false);\n        }\n      }\n    } else if (event.keyCode === KeyCodes.UP && this.selectedIndex === 0) {\n      if (!this.panelOpen) {\n        this.openPanel();\n      }\n      this.selectedIndex--;\n      this.toggleHeader(null, true);\n    } else if ((event.keyCode >= 65 && event.keyCode <= 90) || event.keyCode === KeyCodes.SPACE) {\n      if (event.keyCode === KeyCodes.SPACE) {\n        event.preventDefault();\n      }\n      if (!this.panelOpen) {\n        this.openPanel();\n      }\n      clearTimeout(this.filterTermTimeout);\n      this.filterTermTimeout = setTimeout(() => {\n        this.filterTerm = '';\n      }, 2000);\n      let /** @type {?} */ char = String.fromCharCode(event.keyCode);\n      this.filterTerm = this.filterTerm.concat(char);\n      let /** @type {?} */ item = this.filteredOptions.find((i) => i.label.toUpperCase().indexOf(this.filterTerm) === 0);\n      if (item) {\n        this.select(item, this.filteredOptions.indexOf(item));\n        this.scrollToSelected();\n      }\n    } else if ([KeyCodes.BACKSPACE, KeyCodes.DELETE].includes(event.keyCode)) {\n      clearTimeout(this.filterTermTimeout);\n      this.filterTermTimeout = setTimeout(() => {\n        this.filterTerm = '';\n      }, 2000);\n      this.filterTerm = this.filterTerm.slice(0, -1);\n    }\n  }\n/**\n * @return {?}\n */\nscrollToSelected() {\n    this.scrollToIndex(this.selectedIndex);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nscrollToIndex(index: number) {\n    let /** @type {?} */ element = this.overlay.overlayRef.overlayElement;\n    let /** @type {?} */ list = element.querySelector('.novo-select-list');\n    let /** @type {?} */ items = list.querySelectorAll('li');\n    let /** @type {?} */ item = items[this.headerConfig ? index + 1 : index];\n    if (item) {\n      list.scrollTop = item.offsetTop;\n    }\n  }\n/**\n * @param {?} event\n * @param {?} forceValue\n * @return {?}\n */\ntoggleHeader(event, forceValue) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    // Reverse the active property (if forceValue, use that)\n    this.header = {\n      open: forceValue !== undefined ? forceValue : !this.header.open,\n      value: '',\n      valid: true,\n    };\n  }\n/**\n * @param {?} match\n * @param {?} query\n * @return {?}\n */\nhighlight(match, query) {\n    // Replaces the capture string with a the same string inside of a \"strong\" tag\n    return query ? match.replace(new RegExp(this.escapeRegexp(query), 'gi'), '<strong>$&</strong>') : match;\n  }\n/**\n * @param {?} queryToEscape\n * @return {?}\n */\nescapeRegexp(queryToEscape) {\n    // Ex: if the capture is \"a\" the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n/**\n * @return {?}\n */\nsaveHeader() {\n    if (this.header.value) {\n      this.headerConfig.onSave(this.header.value);\n      this.createdItem = this.header.value;\n      this.closePanel();\n    } else {\n      this.header.valid = false;\n    }\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n    if (this.options) {\n      let /** @type {?} */ item = this.filteredOptions.find((i) => i.value === model);\n      if (!item && !Helpers.isEmpty(model)) {\n        item = {\n          label: model,\n          value: model,\n        };\n        if (!item.readOnly) {\n          this.options.unshift(item);\n        }\n      }\n      if (item) {\n        this.select(item, this.filteredOptions.indexOf(item), false);\n        this.empty = false;\n      } else {\n        this.clear();\n      }\n    }\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-select',\n  providers: [SELECT_VALUE_ACCESSOR],\n  template: `\n    <div #dropdownElement (click)=\"togglePanel(); false\" tabIndex=\"{{ disabled ? -1 : 0 }}\" type=\"button\" [class.empty]=\"empty\">{{selected.label}}<i class=\"bhi-collapse\"></i></div>\n    <novo-overlay-template [parent]=\"element\" position=\"center\" (closing)=\"dropdown.nativeElement.focus()\">\n      <ul class=\"novo-select-list\" tabIndex=\"-1\" [class.header]=\"headerConfig\" [class.active]=\"panelOpen\">\n        <ng-content></ng-content>\n        <li *ngIf=\"headerConfig\" class=\"select-header\" [class.open]=\"header.open\">\n          <button *ngIf=\"!header.open\" (click)=\"toggleHeader($event); false\" tabIndex=\"-1\" type=\"button\" class=\"header\"><i class=\"bhi-add-thin\"></i>&nbsp;{{headerConfig.label}}\n          </button>\n          <div *ngIf=\"header.open\" [ngClass]=\"{active: header.open}\">\n            <input autofocus type=\"text\" [placeholder]=\"headerConfig.placeholder\" [attr.id]=\"name\" autocomplete=\"false\" [(ngModel)]=\"header.value\" [ngClass]=\"{invalid: !header.valid}\" />\n            <footer>\n              <button (click)=\"toggleHeader($event, false)\">{{labels.cancel}}</button>\n              <button (click)=\"saveHeader()\" class=\"primary\">{{labels.save}}</button>\n            </footer>\n          </div>\n        </li>\n        <li *ngFor=\"let option of filteredOptions; let i = index\" [ngClass]=\"{active: option.active}\" (click)=\"setValueAndClose({value: option, index: i})\" [attr.data-automation-value]=\"option.label\">\n          <span [innerHtml]=\"highlight(option.label, filterTerm)\"></span>\n          <i *ngIf=\"option.active\" class=\"bhi-check\"></i>\n        </li>\n      </ul>\n    </novo-overlay-template>\n  `,\n  host: {\n    '(keydown)': 'onKeyDown($event)',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n{type: FocusMonitor, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'options': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'readonly': [{ type: Input },],\n'headerConfig': [{ type: Input },],\n'onSelect': [{ type: Output },],\n'overlay': [{ type: ViewChild, args: [NovoOverlayTemplateComponent, ] },],\n'dropdown': [{ type: ViewChild, args: ['dropdownElement', ] },],\n'onKeyDown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction NovoSelectElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSelectElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSelectElement.ctorParameters;\n/** @type {?} */\nNovoSelectElement.propDecorators;\n/** @type {?} */\nNovoSelectElement.prototype.name;\n/** @type {?} */\nNovoSelectElement.prototype.options;\n/** @type {?} */\nNovoSelectElement.prototype.placeholder;\n/** @type {?} */\nNovoSelectElement.prototype.readonly;\n/** @type {?} */\nNovoSelectElement.prototype.headerConfig;\n/** @type {?} */\nNovoSelectElement.prototype.onSelect;\n/** @type {?} */\nNovoSelectElement.prototype.selectedIndex;\n/** @type {?} */\nNovoSelectElement.prototype.empty;\n/** @type {?} */\nNovoSelectElement.prototype.header;\n/** @type {?} */\nNovoSelectElement.prototype.createdItem;\n/** @type {?} */\nNovoSelectElement.prototype.selected;\n/** @type {?} */\nNovoSelectElement.prototype.model;\n/** @type {?} */\nNovoSelectElement.prototype.onModelChange;\n/** @type {?} */\nNovoSelectElement.prototype.onModelTouched;\n/** @type {?} */\nNovoSelectElement.prototype.filterTerm;\n/** @type {?} */\nNovoSelectElement.prototype.filterTermTimeout;\n/** @type {?} */\nNovoSelectElement.prototype.filteredOptions;\n/** @type {?} */\nNovoSelectElement.prototype.disabled;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nNovoSelectElement.prototype.overlay;\n/** @type {?} */\nNovoSelectElement.prototype.dropdown;\n/** @type {?} */\nNovoSelectElement.prototype.element;\n/** @type {?} */\nNovoSelectElement.prototype.labels;\n/** @type {?} */\nNovoSelectElement.prototype.ref;\n/** @type {?} */\nNovoSelectElement.prototype.focusMonitor;\n/** @type {?} */\nNovoSelectElement.prototype.ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@angular/cdk/a11y';\n// App\n\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nimport { NovoSelectElement } from './Select';\nexport class NovoSelectModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule, A11yModule, NovoOverlayModule],\n  declarations: [NovoSelectElement],\n  exports: [NovoSelectElement],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ SWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NovoSwitchElement),\n    multi: true\n};\nexport class NovoSwitchElement implements ControlValueAccessor {\n     theme: string;\n     onChange: EventEmitter<any> = new EventEmitter();\n\n    _disabled: boolean = false;\n    model: boolean;\n    onModelChange: Function = () => {\n    };\n    onModelTouched: Function = () => {\n    };\n/**\n * @return {?}\n */\nget disabled() {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = (!value);\n    }\n/**\n * @param {?} ref\n */\nconstructor(private ref: ChangeDetectorRef) { }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeydown(event) {\n        if (event.keyCode === KeyCodes.SPACE) {\n            event.preventDefault();\n            this.toggle(event);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntoggle(event) {\n        if (event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n        if (this.disabled) {\n            return;\n        }\n\n        this.model = !this.model;\n        this.onChange.next(this.model);\n        this.onModelChange(this.model);\n        this.ref.markForCheck();\n    }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: boolean): void {\n        this.model = model;\n        this.ref.markForCheck();\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-switch',\n    providers: [SWITCH_VALUE_ACCESSOR],\n    template: `\n        <div (click)=\"toggle($event)\">\n            <div class=\"novo-switch-container\">\n                <div class=\"novo-switch-bar\"></div>\n                <div class=\"novo-switch-thumb-container\">\n                    <div class=\"novo-switch-thumb\"></div>\n                </div>\n            </div>\n            <div class=\"novo-switch-label\"><ng-content></ng-content></div>\n        </div>\n    `,\n    host: {\n        'role': 'checkbox',\n        '[attr.aria-checked]': 'model',\n        '[attr.aria-disabled]': 'disabled',\n        '(keydown)': 'onKeydown($event)',\n        '[class]': 'theme'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'theme': [{ type: Input },],\n'onChange': [{ type: Output },],\n'disabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\nfunction NovoSwitchElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSwitchElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSwitchElement.ctorParameters;\n/** @type {?} */\nNovoSwitchElement.propDecorators;\n/** @type {?} */\nNovoSwitchElement.prototype.theme;\n/** @type {?} */\nNovoSwitchElement.prototype.onChange;\n/** @type {?} */\nNovoSwitchElement.prototype._disabled;\n/** @type {?} */\nNovoSwitchElement.prototype.model;\n/** @type {?} */\nNovoSwitchElement.prototype.onModelChange;\n/** @type {?} */\nNovoSwitchElement.prototype.onModelTouched;\n/** @type {?} */\nNovoSwitchElement.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n// APP\n\nimport { NovoSwitchElement } from './Switch';\nexport class NovoSwitchModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule],\n    declarations: [NovoSwitchElement],\n    exports: [NovoSwitchElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\n\nimport { Observable } from 'rxjs/Observable';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/debounceTime';\nimport'rxjs/add/operator/distinctUntilChanged';\n// APP\n\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { PickerResults } from './extras/picker-results/PickerResults';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { notify } from '../../utils/notifier/notifier.util';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoPickerElement),\n  multi: true,\n};\n/**\n * \\@name Picker\n * \n * \\@description This class is the directive definition of the Picker. If you add and attribute of `picker` to an input,\n * it will create an instance of the picker which wraps the input in all of the picker HTML elements and functionality.\n * Picker should be added as a two-way bound ngModel instance `[(picker)]=\"\"` in order to have the picker options\n * dynamically populate.\n */\nexport class NovoPickerElement implements OnInit {\n  // Container for the results\n  \n  results: ViewContainerRef;\n\n  \n  config: any;\n  \n  placeholder: string;\n  \n  clearValueOnSelect: boolean;\n  \n  closeOnSelect: boolean = true;\n  \n  selected: Array<any> = [];\n  // Deprecated\n  \n  appendToBody: boolean = false;\n  // Deprecated\n  \n  parentScrollSelector: string;\n  // Deprecated\n  \n  parentScrollAction: string = 'close';\n  // Custom class for the dropdown container\n  \n  containerClass: string;\n  // Side the dropdown will open\n  \n  side: string = 'left';\n  // Autoselects the first option in the results\n  \n  autoSelectFirstOption: boolean = true;\n  \n  overrideElement: ElementRef;\n/**\n * @param {?} v\n * @return {?}\n */\nset disablePickerInput(v: boolean) {\n    this._disablePickerInput = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget disablePickerInput() {\n    return this._disablePickerInput;\n  }\nprivate _disablePickerInput: boolean = false;\n\n  // Emitter for selects\n  \n  changed: EventEmitter<any> = new EventEmitter();\n  \n  select: EventEmitter<any> = new EventEmitter();\n  \n  focus: EventEmitter<any> = new EventEmitter();\n  \n  blur: EventEmitter<any> = new EventEmitter();\n  \n  typing: EventEmitter<any> = new EventEmitter();\npublic container: NovoOverlayTemplateComponent;\nprivate input: ElementRef;\n\n  closeHandler: any;\n  isStatic: boolean = true;\n  term: string = '';\n  resultsComponent: any;\n  popup: any;\n  _value: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @param {?} element\n * @param {?} componentUtils\n * @param {?} ref\n */\nconstructor(public element: ElementRef,\nprivate componentUtils: ComponentUtils,\nprivate ref: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.overrideElement) {\n      this.element = this.overrideElement;\n    }\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    // Custom results template\n    this.resultsComponent = this.config.resultsTemplate || PickerResults;\n    // Get all distinct key up events from the input and only fire if long enough and distinct\n    //let input = this.element.nativeElement.querySelector('input');\n    const /** @type {?} */ pasteObserver = Observable.fromEvent(this.input.nativeElement, 'paste')\n      .debounceTime(250)\n      .distinctUntilChanged();\n    pasteObserver.subscribe((event: ClipboardEvent) => this.onDebouncedKeyup(event), (err) => this.hideResults(err));\n    const /** @type {?} */ keyboardObserver = Observable.fromEvent(this.input.nativeElement, 'keyup')\n      .debounceTime(250)\n      .distinctUntilChanged();\n    keyboardObserver.subscribe((event: KeyboardEvent) => this.onDebouncedKeyup(event), (err) => this.hideResults(err));\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onDebouncedKeyup(event: Event) {\n    if ([KeyCodes.ESC, KeyCodes.UP, KeyCodes.DOWN, KeyCodes.ENTER, KeyCodes.TAB].includes(event['keyCode'])) {\n      return;\n    }\n    this.show(( /** @type {?} */((event.target as any))).value);\n  }\n/**\n * BEGIN: Convenient Panel Methods.\n * @return {?}\n */\npublic openPanel(): void {\n    this.container.openPanel();\n  }\n/**\n * @return {?}\n */\npublic closePanel(): void {\n    this.container.closePanel();\n  }\n/**\n * @return {?}\n */\npublic get panelOpen(): boolean {\n    return this.container && this.container.panelOpen;\n  }\n/**\n * END: Convenient Panel Methods.\n * @param {?=} term\n * @return {?}\n */\nprivate show(term?: string): void {\n    this.openPanel();\n    // Show the results inside\n    this.showResults(term);\n  }\n/**\n * @return {?}\n */\nprivate hide(): void {\n    this.closePanel();\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDown(event: KeyboardEvent) {\n    if (this.disablePickerInput) {\n      Helpers.swallowEvent(event);\n      return;\n    }\n    if (this.panelOpen && !this.disablePickerInput) {\n      if (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.TAB) {\n        this.hideResults();\n        return;\n      }\n\n      if (event.keyCode === KeyCodes.UP) {\n        this.popup.instance.prevActiveMatch();\n        this.ref.markForCheck();\n        return;\n      }\n\n      if (event.keyCode === KeyCodes.DOWN) {\n        this.popup.instance.nextActiveMatch();\n        this.ref.markForCheck();\n        return;\n      }\n\n      if (event.keyCode === KeyCodes.ENTER) {\n        this.popup.instance.selectActiveMatch();\n        this.ref.markForCheck();\n        return;\n      }\n\n      if ((event.keyCode === KeyCodes.BACKSPACE || event.keyCode === KeyCodes.DELETE) && !Helpers.isBlank(this._value)) {\n        this.clearValue(false);\n        this.closePanel();\n      }\n      if (event.keyCode === KeyCodes.DELETE && Helpers.isBlank(this._value)) {\n        this.clearValue(true);\n      }\n    }\n  }\n/**\n * @param {?} wipeTerm\n * @return {?}\n */\nclearValue(wipeTerm) {\n    this._value = null;\n    this.select.emit(this._value);\n    this.changed.emit({ value: this._value, rawValue: { label: '', value: this._value } });\n    this.onModelChange(this._value);\n\n    if (wipeTerm) {\n      this.term = null;\n      this.hideResults();\n    }\n    this.ref.markForCheck();\n  }\n/**\n * \\@name onFocus\n * \\@description When the input's focus event is called this method calls the debounced function that displays the\n * results.\n * @param {?} event\n * @return {?}\n */\nonFocus(event) {\n    if (!this.panelOpen) {\n      this.show();\n    }\n    this.focus.emit(event);\n  }\n/**\n * \\@name showResults\n * \n * \\@description This method creates an instance of the results (called popup) and adds all the bindings to that\n * instance.\n * @param {?=} term\n * @return {?}\n */\nshowResults(term?: any) {\n    // Update Matches\n    if (this.popup) {\n      // Update existing list or create the DOM element\n      this.popup.instance.config = this.config;\n      this.popup.instance.term = this.term;\n      this.popup.instance.selected = this.selected;\n      this.popup.instance.autoSelectFirstOption = this.autoSelectFirstOption;\n      this.ref.markForCheck();\n    } else {\n      this.popup = this.componentUtils.appendNextToLocation(this.resultsComponent, this.results);\n      this.popup.instance.parent = this;\n      this.popup.instance.config = this.config;\n      this.popup.instance.term = this.term;\n      this.popup.instance.selected = this.selected;\n      this.popup.instance.autoSelectFirstOption = this.autoSelectFirstOption;\n      this.popup.instance.overlay = this.container.overlayRef;\n      this.ref.markForCheck();\n    }\n  }\n/**\n * \\@name hideResults\n * \n * \\@description - This method deletes the picker results from the DOM.\n * @param {?=} err\n * @return {?}\n */\nhideResults(err?: any) {\n    if (this.popup) {\n      this.popup.destroy();\n      this.popup = null;\n    }\n    this.hide();\n  }\n/**\n * @return {?}\n */\nonOverlayClosed(): void {\n    if (this.popup && this.popup.instance && this.popup.instance.cleanUp) {\n      this.popup.instance.cleanUp();\n    }\n  }\n/**\n * @return {?}\n */\nget value() {\n    return this._value;\n  }\n/**\n * @param {?} selected\n * @return {?}\n */\nset value(selected) {\n    if (!selected) {\n      this.term = '';\n      this._value = null;\n      this.onModelChange(this._value);\n    } else if (selected.value !== this._value) {\n      this.term = this.clearValueOnSelect ? '' : selected.label;\n      this._value = selected.value;\n      this.changed.emit({ value: selected.value, rawValue: { label: this.term, value: selected.value } });\n      this.select.emit(selected);\n      this.onModelChange(selected.value);\n    } else {\n      this.changed.emit({ value: selected.value, rawValue: { label: this.term, value: this._value } });\n      this.select.emit(selected);\n    }\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ncheckTerm(event) {\n    this.typing.emit(event);\n    if (!event || !event.length) {\n      this._value = null;\n      this.onModelChange(this._value);\n    }\n    this.ref.markForCheck();\n  }\n/**\n * @param {?=} event\n * @return {?}\n */\nonTouched(event?: Event) {\n    this.onModelTouched();\n    this.blur.emit(event);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    if (this.clearValueOnSelect) {\n      this.term = '';\n    } else {\n      if (typeof value === 'string') {\n        this.term = value;\n      } else if (value && value.label) {\n        this.term = value.label;\n      } else if (value && value.firstName) {\n        this.term = `${value.firstName} ${value.lastName}`;\n      } else if (value && value.name) {\n        this.term = value.name;\n      } else if (typeof this.config.getLabels === 'function') {\n        this.config.getLabels(value).then((result) => {\n          if (result) {\n            this.term = result.length ? result[0].label || '' : result.label || '';\n          } else {\n            this.term = value;\n          }\n          this.ref.markForCheck();\n        });\n      } else {\n        this.term = value || '';\n      }\n    }\n    this._value = value;\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this._disablePickerInput = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-picker',\n  providers: [PICKER_VALUE_ACCESSOR],\n  template: `\n        <i class=\"bhi-more\" *ngIf=\"config?.entityIcon && !_value\"></i>\n        <i class=\"bhi-{{ config?.entityIcon }} entity-icon {{ config?.entityIcon }}\" *ngIf=\"config?.entityIcon && _value\"></i>\n        <input\n            type=\"text\"\n            class=\"picker-input\"\n            [(ngModel)]=\"term\"\n            [class.entity-picker]=\"config?.entityIcon\"\n            [class.entity-selected]=\"config?.entityIcon && _value\"\n            (ngModelChange)=\"checkTerm($event)\"\n            [placeholder]=\"placeholder\"\n            (keydown)=\"onKeyDown($event)\"\n            (focus)=\"onFocus($event)\"\n            (click)=\"onFocus($event)\"\n            (blur)=\"onTouched($event)\"\n            autocomplete=\"off\" #input\n            [disabled]=\"disablePickerInput\"/>\n        <i class=\"bhi-search\" *ngIf=\"(!_value || clearValueOnSelect) && !disablePickerInput\"></i>\n        <i class=\"bhi-times\" [class.entity-selected]=\"config?.entityIcon && _value\" *ngIf=\"_value && !clearValueOnSelect && !disablePickerInput\" (click)=\"clearValue(true)\"></i>\n        <novo-overlay-template class=\"picker-results-container\" [parent]=\"element\" position=\"above-below\" (closing)=\"onOverlayClosed()\">\n            <span #results></span>\n            <ng-content></ng-content>\n        </novo-overlay-template>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ComponentUtils, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'results': [{ type: ViewChild, args: ['results', { read: ViewContainerRef }, ] },],\n'config': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'clearValueOnSelect': [{ type: Input },],\n'closeOnSelect': [{ type: Input },],\n'selected': [{ type: Input },],\n'appendToBody': [{ type: Input },],\n'parentScrollSelector': [{ type: Input },],\n'parentScrollAction': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'side': [{ type: Input },],\n'autoSelectFirstOption': [{ type: Input },],\n'overrideElement': [{ type: Input },],\n'disablePickerInput': [{ type: Input },],\n'changed': [{ type: Output },],\n'select': [{ type: Output },],\n'focus': [{ type: Output },],\n'blur': [{ type: Output },],\n'typing': [{ type: Output },],\n'container': [{ type: ViewChild, args: [NovoOverlayTemplateComponent, ] },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n};\n}\n\nfunction NovoPickerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoPickerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoPickerElement.ctorParameters;\n/** @type {?} */\nNovoPickerElement.propDecorators;\n/** @type {?} */\nNovoPickerElement.prototype.results;\n/** @type {?} */\nNovoPickerElement.prototype.config;\n/** @type {?} */\nNovoPickerElement.prototype.placeholder;\n/** @type {?} */\nNovoPickerElement.prototype.clearValueOnSelect;\n/** @type {?} */\nNovoPickerElement.prototype.closeOnSelect;\n/** @type {?} */\nNovoPickerElement.prototype.selected;\n/** @type {?} */\nNovoPickerElement.prototype.appendToBody;\n/** @type {?} */\nNovoPickerElement.prototype.parentScrollSelector;\n/** @type {?} */\nNovoPickerElement.prototype.parentScrollAction;\n/** @type {?} */\nNovoPickerElement.prototype.containerClass;\n/** @type {?} */\nNovoPickerElement.prototype.side;\n/** @type {?} */\nNovoPickerElement.prototype.autoSelectFirstOption;\n/** @type {?} */\nNovoPickerElement.prototype.overrideElement;\n/** @type {?} */\nNovoPickerElement.prototype._disablePickerInput;\n/** @type {?} */\nNovoPickerElement.prototype.changed;\n/** @type {?} */\nNovoPickerElement.prototype.select;\n/** @type {?} */\nNovoPickerElement.prototype.focus;\n/** @type {?} */\nNovoPickerElement.prototype.blur;\n/** @type {?} */\nNovoPickerElement.prototype.typing;\n/** @type {?} */\nNovoPickerElement.prototype.container;\n/** @type {?} */\nNovoPickerElement.prototype.input;\n/** @type {?} */\nNovoPickerElement.prototype.closeHandler;\n/** @type {?} */\nNovoPickerElement.prototype.isStatic;\n/** @type {?} */\nNovoPickerElement.prototype.term;\n/** @type {?} */\nNovoPickerElement.prototype.resultsComponent;\n/** @type {?} */\nNovoPickerElement.prototype.popup;\n/** @type {?} */\nNovoPickerElement.prototype._value;\n/** @type {?} */\nNovoPickerElement.prototype.onModelChange;\n/** @type {?} */\nNovoPickerElement.prototype.onModelTouched;\n/** @type {?} */\nNovoPickerElement.prototype.element;\n/** @type {?} */\nNovoPickerElement.prototype.componentUtils;\n/** @type {?} */\nNovoPickerElement.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\n// Vendor\n// APP\n\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nexport class EntityPickerResult {\n  \n  match: any;\n  \n  term: any;\n/**\n * @param {?} labels\n */\nconstructor(public labels: NovoLabelService) {}\n/**\n * \\@name escapeRegexp\n * \\@description This function captures the whole query string and replace it with the string that will be used to\n * match.\n * @param {?} queryToEscape \n * \n * @return {?}\n */\nescapeRegexp(queryToEscape) {\n    // Ex: if the capture is \"a\" the result will be \\a\n    return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n/**\n * \\@name highlight\n * \\@description This function should return a <strong>-tag wrapped HTML string.\n * @param {?} match\n * @param {?} query \n * \n * @return {?}\n */\nhighlight(match, query) {\n    // Replaces the capture string with a the same string inside of a \"strong\" tag\n    return query && match ? match.replace(new RegExp(this.escapeRegexp(query.trim()), 'gi'), '<strong>$&</strong>') : match;\n  }\n/**\n * @param {?=} result\n * @return {?}\n */\ngetIconForResult(result?: any): string {\n    if (result) {\n      switch (result.searchEntity) {\n        case 'ClientContact':\n          return 'person contact';\n        case 'ClientCorporation':\n          return 'company';\n        case 'Opportunity':\n          return 'opportunity';\n        case 'Candidate':\n          return 'candidate';\n        case 'Lead':\n          return 'lead';\n        case 'JobOrder':\n          return 'job';\n        case 'Placement':\n          return 'star placement';\n        case 'CorporateUser':\n          return 'user';\n        default:\n          return '';\n      }\n    }\n    return '';\n  }\n/**\n * @param {?=} date\n * @return {?}\n */\nrenderTimestamp(date?: any) {\n    let /** @type {?} */ timestamp = '';\n    if (date) {\n      timestamp = this.labels.formatDateWithFormat(date, { year: 'numeric', month: 'numeric', day: 'numeric' });\n    }\n    return timestamp;\n  }\n/**\n * @param {?=} result\n * @return {?}\n */\ngetNameForResult(result?: any) {\n    if (result) {\n      switch (result.searchEntity) {\n        case 'Lead':\n        case 'CorporateUser':\n        case 'ClientContact':\n        case 'Candidate':\n        case 'Person':\n          if ('firstName' in result) {\n            return `${result.firstName} ${result.lastName}`.trim();\n          }\n          return `${result.name || ''}`.trim();\n        case 'ClientCorporation':\n          return `${result.name || ''}`.trim();\n        case 'Opportunity':\n        case 'JobOrder':\n          return `${result.title || ''}`.trim();\n        case 'Placement':\n          let /** @type {?} */ label = '';\n          if (result.candidate) {\n            label = `${result.candidate.firstName} ${result.candidate.lastName}`.trim();\n          }\n          if (result.jobOrder) {\n            label = `${label} - ${result.jobOrder.title}`.trim();\n          }\n          return label;\n        default:\n          return `${result.name || ''}`.trim();\n      }\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'entity-picker-result',\n  template: `\n        <novo-list-item *ngIf=\"match.data\">\n            <item-header>\n                <item-avatar [icon]=\"getIconForResult(match.data)\"></item-avatar>\n                <item-title>\n                    <span [innerHtml]=\"highlight(getNameForResult(match.data), term)\"></span>\n                </item-title>\n            </item-header>\n            <item-content direction=\"horizontal\">\n                <!-- COMPANY 1 -->\n                <p class=\"company\" *ngIf=\"match.data.companyName || match.data?.clientCorporation?.name\">\n                    <i class=\"bhi-company\"></i>\n                    <span [innerHtml]=\"highlight(match.data.companyName || match.data?.clientCorporation?.name, term)\"></span>\n                </p>\n                <!-- CLIENT CONTACT -->\n                <p class=\"contact\" *ngIf=\"match.data?.clientContact?.firstName\">\n                    <i class=\"bhi-person contact person\"></i>\n                    <span [innerHtml]=\"highlight(match.data.clientContact.firstName + ' ' + match.data.clientContact.lastName, term)\"></span>\n                </p>\n                <!-- CANDIDATE -->\n                <p class=\"candidate\" *ngIf=\"match.data.candidate && match.data.searchEntity === 'Placement'\">\n                    <i class=\"bhi-candidate\"></i>\n                    <span [innerHtml]=\"highlight((match.data.candidate.firstName + ' ' + match.data.candidate.lastName), term)\"></span>\n                </p>\n                <!-- START & END DATE -->\n                <p class=\"start-date\" *ngIf=\"match.data.dateBegin && match.data.searchEntity === 'Placement'\">\n                    <i class=\"bhi-calendar\"></i>\n                    <span [innerHtml]=\"renderTimestamp(match.data.dateBegin) + ' - ' + renderTimestamp(match.data.dateEnd)\"></span>\n                </p>\n                <!-- EMAIL -->\n                <p class=\"email\" *ngIf=\"match.data.email\">\n                    <i class=\"bhi-email\"></i>\n                    <span [innerHtml]=\"highlight(match.data.email, term)\"></span>\n                </p>\n                <!-- PHONE -->\n                <p class=\"phone\" *ngIf=\"match.data.phone\">\n                    <i class=\"bhi-phone\"></i>\n                    <span [innerHtml]=\"highlight(match.data.phone, term)\"></span>\n                </p>\n                <!-- ADDRESS -->\n                <p class=\"location\" *ngIf=\"match.data.address && (match.data.address.city || match.data.address.state)\">\n                    <i class=\"bhi-location\"></i>\n                    <span *ngIf=\"match.data.address.city\" [innerHtml]=\"highlight(match.data.address.city, term)\"></span>\n                    <span *ngIf=\"match.data.address.city && match.data.address.state\">, </span>\n                    <span *ngIf=\"match.data.address.state\" [innerHtml]=\"highlight(match.data.address.state, term)\"></span>\n                </p>\n                <!-- STATUS -->\n                <p class=\"status\" *ngIf=\"match.data.status\">\n                    <i class=\"bhi-info\"></i>\n                    <span [innerHtml]=\"highlight(match.data.status, term)\"></span>\n                </p>\n                <!-- OWNER -->\n                <p class=\"owner\" *ngIf=\"match.data.owner && match.data.owner.name && match.data.searchEntity === 'Candidate'\">\n                    <i class=\"bhi-person\"></i>\n                    <span [innerHtml]=\"highlight(match.data.owner.name, term)\"></span>\n                </p>\n                <!-- PRIMARY DEPARTMENT -->\n                <p class=\"primary-department\" *ngIf=\"match.data.primaryDepartment && match.data.primaryDepartment.name && match.data.searchEntity === 'CorporateUser'\">\n                    <i class=\"bhi-department\"></i>\n                    <span [innerHtml]=\"highlight(match.data.primaryDepartment.name, term)\"></span>\n                </p>\n                <!-- OCCUPATION -->\n                <p class=\"occupation\" *ngIf=\"match.data.occupation && match.data.searchEntity === 'CorporateUser'\">\n                    <i class=\"bhi-occupation\"></i>\n                    <span [innerHtml]=\"highlight(match.data.occupation, term)\"></span>\n                </p>\n            </item-content>\n        </novo-list-item>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'match': [{ type: Input },],\n'term': [{ type: Input },],\n};\n}\n\nfunction EntityPickerResult_tsickle_Closure_declarations() {\n/** @type {?} */\nEntityPickerResult.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEntityPickerResult.ctorParameters;\n/** @type {?} */\nEntityPickerResult.propDecorators;\n/** @type {?} */\nEntityPickerResult.prototype.match;\n/** @type {?} */\nEntityPickerResult.prototype.term;\n/** @type {?} */\nEntityPickerResult.prototype.labels;\n}\n\nexport class EntityPickerResults extends BasePickerResults {\n  \n  select: EventEmitter<any> = new EventEmitter();\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(element: ElementRef,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n    super(element, ref);\n  }\n/**\n * @return {?}\n */\ngetListElement() {\n    return this.element.nativeElement.querySelector('novo-list');\n  }\n/**\n * @param {?=} event\n * @param {?=} item\n * @return {?}\n */\nselectMatch(event?: any, item?: any) {\n    this.select.next(item);\n    return super.selectMatch(event, item);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'entity-picker-results',\n  template: `\n        <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n            <entity-picker-result *ngFor=\"let match of matches\"\n                    [match]=\"match\"\n                    [term]=\"term\"\n                    (click)=\"selectMatch($event, match)\"\n                    [ngClass]=\"{active: isActive(match)}\"\n                    (mouseenter)=\"selectActive(match)\"\n                    [class.disabled]=\"preselected(match)\">\n            </entity-picker-result>\n            <novo-loading theme=\"line\" *ngIf=\"isLoading && matches.length > 0\"></novo-loading>\n        </novo-list>\n        <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n        <p class=\"picker-null-results\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.pickerEmpty }}</p>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'select': [{ type: Output },],\n};\n}\n\nfunction EntityPickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nEntityPickerResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEntityPickerResults.ctorParameters;\n/** @type {?} */\nEntityPickerResults.propDecorators;\n/** @type {?} */\nEntityPickerResults.prototype.select;\n/** @type {?} */\nEntityPickerResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, ChangeDetectorRef } from '@angular/core';\n// APP\n\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\nimport { Helpers } from '../../../../utils/Helpers';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\n// Vendor\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromPromise';\n/**\n * \\@name: ChecklistPickerResults\n * \n * \\@description This is the actual list of matches that gets injected into the DOM.\n */\nexport class ChecklistPickerResults extends BasePickerResults {\n    filteredMatches: any;\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(element: ElementRef,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n        super(element, ref);\n    }\n/**\n * @return {?}\n */\nsearch() {\n        let /** @type {?} */ options = this.config.options;\n        //only set this the first time\n        return Observable.fromPromise(new Promise((resolve, reject) => {\n            // Check if there is match data\n            if (options) {\n                // Resolve the data\n                if (Array.isArray(options)) {\n                    this.isStatic = true;\n                    // Arrays are returned immediately\n                    resolve(options);\n                } else {\n                    // All other kinds of data are rejected\n                    reject('The data provided is not an array or a promise');\n                    throw new Error('The data provided is not an array or a promise');\n                }\n            } else {\n                // No data gets rejected\n                reject('error');\n            }\n        }));\n    }\n/**\n * \\@name filterData=\n * \\@description This function loops through the picker options and creates a filtered list of objects that contain\n * the newSearch.\n * @param {?} matches - Collection of objects=\n * \n * @return {?}\n */\nfilterData(matches): any {\n        if (this.term && matches) {\n            this.filteredMatches = matches.map(section => {\n                let /** @type {?} */ items = section.originalData.filter((match) => {\n                    return ~String(match.label).toLowerCase().indexOf(this.term.toLowerCase());\n                });\n                section.data = items;\n                return section;\n            }, this);\n            return this.filteredMatches;\n        } else if (this.term === '') {\n            matches.forEach(section => {\n                section.data = section.originalData;\n            });\n            return matches;\n        }\n        // Show no recent results template\n        return matches;\n    }\n/**\n * \\@name selectMatch\n * \\@description\n * @param {?} event\n * @param {?} item \n * \n * @return {?}\n */\nselectMatch(event, item) {\n        Helpers.swallowEvent(event);\n        if (item.indeterminate) {\n            item.indeterminate = false;\n            item.checked = true;\n        } else {\n            item.checked = !item.checked;\n        }\n\n        let /** @type {?} */ selected = this.activeMatch;\n        if (selected) {\n            this.parent.value = selected;\n        }\n        this.ref.markForCheck();\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'checklist-picker-results',\n    host: {\n        'class': 'active picker-results'\n    },\n    template: `\n        <novo-loading theme=\"line\" *ngIf=\"isLoading && !matches.length\"></novo-loading>\n        <ul *ngIf=\"matches.length > 0\">\n            <span *ngFor=\"let section of matches; let i = index\">\n                <li class=\"header caption\" *ngIf=\"section.data.length > 0\">{{ section.label || section.type }}</li>\n                <li\n                    *ngFor=\"let match of section.data; let i = index\" [ngClass]=\"{checked: match.checked}\"\n                    (click)=\"selectMatch($event, match)\"\n                    [class.active]=\"match === activeMatch\"\n                    (mouseenter)=\"selectActive(match)\">\n                    <label>\n                        <i [ngClass]=\"{'bhi-checkbox-empty': !match.checked, 'bhi-checkbox-filled': match.checked, 'bhi-checkbox-indeterminate': match.indeterminate }\"></i>\n                        {{match.label}}\n                    </label>\n                </li>\n            </span>\n        </ul>\n        <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n        <p class=\"picker-null-results\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.pickerEmpty }}</p>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction ChecklistPickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nChecklistPickerResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChecklistPickerResults.ctorParameters;\n/** @type {?} */\nChecklistPickerResults.prototype.filteredMatches;\n/** @type {?} */\nChecklistPickerResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewChild, OnInit, OnDestroy, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\nimport { Helpers } from '../../../../utils/Helpers';\nimport { NovoListElement } from '../../../list/List';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nexport class GroupedMultiPickerResults extends BasePickerResults implements OnInit, OnDestroy {\nprivate inputElement: ElementRef;\nprivate listElement: NovoListElement;\npublic selectedCategory: { value: string, label: string };\npublic searchTerm: string;\npublic customFilterEnabled: boolean = false;\npublic customFilterLabel: string;\npublic placeholder: string = '';\nprivate keyboardSubscription: Subscription;\nprivate internalMap: Map<string, { value: string, label: string, items: { value: string, label: string }[] }> = new Map<string, { value: string, label: string, items: { value: string, label: string }[] }>();\npublic customFilterValue: any;\n/**\n * @param {?} value\n * @return {?}\n */\nset term(value) {\n        // Display all only will work for static categories\n        if (this.config.displayAll && this.config.getItemsForCategoryAsync) {\n            throw new Error('[GroupedMultiPickerResults] - you can only have `displayAll` with a static `categoryMap`. Not available with `getItemsForCategoryAsync`');\n        }\n        // Custom filter\n        if (this.config.customFilter) {\n            this.customFilterEnabled = true;\n            this.customFilterLabel = this.config.customFilter.label;\n            this.customFilterValue = !!this.config.customFilter.defaultFilterValue;\n            this.ref.markForCheck();\n            if (!this.customFilterLabel || !this.config.customFilter.matchFunction) {\n                throw new Error('[GroupedMultiPickerResults] - custom filter/matchFunction set no label was provided!');\n            }\n        } else {\n            this.customFilterEnabled = false;\n        }\n        // Configure ALL\n        if (this.config.displayAll && !this.selectedCategory) {\n            this.setAllCategory();\n        }\n        // Placeholder\n        if (this.config.placeholder) {\n            this.placeholder = this.config.placeholder;\n        }\n        // Focus\n        setTimeout(() => {\n            this.inputElement.nativeElement.focus();\n        });\n    }\n/**\n * @return {?}\n */\nget categories() {\n        if (this.config.categories || this.config.categoryMap) {\n            return this.config.categories || Array.from(this.config.categoryMap.values()).filter((category: { value: string }) => {\n                return category.value !== 'all';\n            });\n        }\n        return [];\n    }\n/**\n * @param {?} element\n * @param {?} renderer\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(element: ElementRef,\nprivate renderer: Renderer2,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n        super(element, ref);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        // Subscribe to keyboard events and debounce\n        this.keyboardSubscription = Observable.fromEvent(this.inputElement.nativeElement, 'keyup')\n            .debounceTime(350)\n            .distinctUntilChanged()\n            .subscribe((event: KeyboardEvent) => {\n                this.searchTerm = event.target['value'];\n                this.matches = this.filterData();\n                this.ref.markForCheck();\n            });\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy() {\n        // Cleanup\n        this.keyboardSubscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\npublic setAllCategory() {\n        // If we have display all, set the all categories up\n        if (this.config.displayAll) {\n            this.selectedCategory = { value: 'all', label: 'all' };\n            let /** @type {?} */ allItems = [];\n            Array.from(this.config.categoryMap.values())\n                .filter((category: { value: string }) => {\n                    return category.value !== 'all';\n                })\n                .forEach((v: { value: string, label: string, items: any[] }) => allItems.push(...v.items));\n            this.matches = this.filter(allItems);\n            this.config.categoryMap.set('all', { value: 'all', label: 'All', items: allItems });\n            this.ref.markForCheck();\n        }\n    }\n/**\n * @param {?} category\n * @return {?}\n */\npublic selectCategory(category: { value: string, label: string }): void {\n        // Scroll to top\n        this.renderer.setProperty(this.listElement.element.nativeElement, 'scrollTop', 0);\n        // Set focus\n        this.inputElement.nativeElement.focus();\n        // Find new items\n        let /** @type {?} */ key: string = category.value;\n        this.selectedCategory = category;\n        // Clear\n        this.matches = [];\n        this.ref.markForCheck();\n        // New matches\n        this.getNewMatches(category, key);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic clearSearchTerm(event: MouseEvent) {\n        Helpers.swallowEvent(event);\n        this.searchTerm = '';\n        this.selectCategory({ value: this.selectedCategory.value, label: this.selectedCategory.label });\n        this.ref.markForCheck();\n    }\n/**\n * @param {?=} event\n * @param {?=} item\n * @return {?}\n */\npublic selectMatch(event?: MouseEvent, item?: { value: string, label: string }): boolean {\n        // Set focus\n        this.inputElement.nativeElement.focus();\n        return super.selectMatch(event, item);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic fireCustomFilter(value: boolean) {\n        this.customFilterValue = value;\n        // Clear cache map\n        this.internalMap.clear();\n        // Only fire if we have a selected category\n        if (this.selectCategory) {\n            // Find new items\n            let /** @type {?} */ key: string = this.selectedCategory.value;\n            // Get new matches\n            this.getNewMatches(this.selectedCategory, key);\n            this.ref.markForCheck();\n        }\n        // Focus\n        setTimeout(() => {\n            this.inputElement.nativeElement.focus();\n        });\n    }\n/**\n * @return {?}\n */\nfilterData(): { value: string, label: string }[] {\n        if (this.selectedCategory) {\n            if (this.config.categoryMap) {\n                return this.filter(this.config.categoryMap.get(this.selectedCategory.value).items);\n            } else {\n                return this.filter(this.internalMap.get(this.selectedCategory.value).items);\n            }\n        }\n        return [];\n    }\n/**\n * @param {?} category\n * @param {?} key\n * @return {?}\n */\nprivate getNewMatches(category: { value: string, label: string }, key: string): void {\n        // Get new matches\n        if (this.config.categoryMap) {\n            this.matches = this.filter(this.config.categoryMap.get(key).items);\n            this.ref.markForCheck();\n        } else {\n            if (!this.config.getItemsForCategoryAsync) {\n                throw new Error('The \"config\" for the Chips must include a function \"getItemsForCategoryAsync(categoryKey: string)\" to retrieve the items by category. Or if you have static data provide a \"categoryMap\"');\n            }\n            if (!this.internalMap.get(key)) {\n                this.isLoading = true;\n                this.config.getItemsForCategoryAsync(key, this.customFilterValue).then((items: { value: string, label: string }[]) => {\n                    this.internalMap.set(key, { value: category.value, label: category.label, items: items });\n                    this.matches = this.filter(items, true);\n                    this.isLoading = false;\n                    this.ref.markForCheck();\n                    setTimeout(() => {\n                        this.inputElement.nativeElement.focus();\n                    });\n                });\n            } else {\n                this.matches = this.filter(this.internalMap.get(key).items);\n                this.ref.markForCheck();\n            }\n        }\n    }\n/**\n * @param {?} array\n * @param {?=} ignoreCustomFilter\n * @return {?}\n */\nprivate filter(array: { value: string, label: string, filterValue?: any }[], ignoreCustomFilter: boolean = false): { value: string, label: string }[] {\n        let /** @type {?} */ matches: { value: string, label: string, filterValue?: any }[] = array;\n        if (this.searchTerm && this.searchTerm.length !== 0 && this.selectedCategory) {\n            matches = matches.filter((match) => {\n                return ~String(match.label).toLowerCase().indexOf(this.searchTerm.toLowerCase());\n            });\n        }\n        if (this.customFilterEnabled && this.config.customFilter.matchFunction && !ignoreCustomFilter) {\n            matches = matches.filter((match) => {\n                return this.config.customFilter.matchFunction(match, this.customFilterValue);\n            });\n        }\n        return matches;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'grouped-multi-picker-results',\n    template: `\n        <div class=\"grouped-multi-picker-groups\">\n            <novo-list direction=\"vertical\">\n                <novo-list-item\n                    *ngIf=\"config.displayAll\"\n                    (click)=\"selectCategory({ value: 'all', label: 'all' })\"\n                    [class.active]=\"selectedCategory?.value === 'all'\"\n                    data-automation-id=\"display-all\"\n                    [class.disabled]=\"isLoading\">\n                    <item-content>\n                        <span data-automation-id=\"label\">{{ labels.all }}</span>\n                    </item-content>\n                    <item-end>\n                        <i class=\"bhi-next\"></i>\n                    </item-end>\n                </novo-list-item>\n                <novo-list-item\n                    *ngFor=\"let category of categories\"\n                    (click)=\"selectCategory(category)\"\n                    [class.active]=\"selectedCategory?.value === category.value\"\n                    [attr.data-automation-id]=\"category.label\"\n                    [class.disabled]=\"isLoading\">\n                    <item-content>\n                        <span data-automation-id=\"label\">{{ category.label }}</span>\n                    </item-content>\n                    <item-end>\n                        <i class=\"bhi-next\"></i>\n                    </item-end>\n                </novo-list-item>\n            </novo-list>\n            <footer class=\"grouped-multi-picker-groups-footer\" *ngIf=\"customFilterEnabled\" data-automation-id=\"footer\" [class.disabled]=\"isLoading\">\n                <novo-switch [(ngModel)]=\"customFilterValue\" (onChange)=\"fireCustomFilter($event)\" data-automation-id=\"switch\"></novo-switch>\n                <label data-automation-id=\"label\">{{ customFilterLabel }}</label>\n            </footer>\n        </div>\n        <div class=\"grouped-multi-picker-matches\">\n            <div class=\"grouped-multi-picker-input-container\" [hidden]=\"!selectedCategory\" data-automation-id=\"input-container\">\n                <input autofocus #input [(ngModel)]=\"searchTerm\" [disabled]=\"isLoading\" data-automation-id=\"input\" [placeholder]=\"placeholder\"/>\n                <i class=\"bhi-search\" *ngIf=\"!searchTerm\" [class.disabled]=\"isLoading\" data-automation-id=\"seach-icon\"></i>\n                <i class=\"bhi-times\" *ngIf=\"searchTerm\" (click)=\"clearSearchTerm($event)\" [class.disabled]=\"isLoading\" data-automation-id=\"remove-icon\"></i>\n            </div>\n            <div class=\"grouped-multi-picker-list-container\">\n                <novo-list direction=\"vertical\" #list>\n                    <novo-list-item\n                        *ngFor=\"let match of matches\"\n                        (click)=\"selectMatch($event)\"\n                        [class.active]=\"match === activeMatch\"\n                        (mouseenter)=\"selectActive(match)\"\n                        [class.disabled]=\"preselected(match)\"\n                        [attr.data-automation-id]=\"match.label\"\n                        [class.disabled]=\"isLoading\">\n                        <item-content>\n                            <span>{{ match.label }}</span>\n                        </item-content>\n                    </novo-list-item>\n                </novo-list>\n                <div class=\"grouped-multi-picker-no-results\" *ngIf=\"matches.length === 0 && !isLoading && selectedCategory\" data-automation-id=\"empty-message\">\n                    {{ labels.groupedMultiPickerEmpty }}\n                </div>\n                <div class=\"grouped-multi-picker-no-category\" *ngIf=\"matches.length === 0 && !isLoading && !selectedCategory\" data-automation-id=\"select-category-message\">\n                    {{ labels.groupedMultiPickerSelectCategory }}\n                </div>\n                <div class=\"grouped-multi-picker-loading\" *ngIf=\"isLoading\" data-automation-id=\"loading-message\">\n                    <novo-loading theme=\"line\"></novo-loading>\n                </div>\n            </div>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'inputElement': [{ type: ViewChild, args: ['input', ] },],\n'listElement': [{ type: ViewChild, args: ['list', ] },],\n};\n}\n\nfunction GroupedMultiPickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nGroupedMultiPickerResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGroupedMultiPickerResults.ctorParameters;\n/** @type {?} */\nGroupedMultiPickerResults.propDecorators;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.inputElement;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.listElement;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.selectedCategory;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.searchTerm;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.customFilterEnabled;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.customFilterLabel;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.placeholder;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.keyboardSubscription;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.internalMap;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.customFilterValue;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.renderer;\n/** @type {?} */\nGroupedMultiPickerResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n// App\n\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { Helpers } from '../../../../utils/Helpers';\nexport class SkillsSpecialtyPickerResults extends BasePickerResults {\n     active: boolean = true;\n    limitedTo: boolean = false;\n    limit: number = 200;\n    total: number;\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(public element: ElementRef,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n        super(element, ref);\n    }\n/**\n * @return {?}\n */\ngetListElement(): any {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n/**\n * \\@name structureArray\n * \\@description This function structures an array of nodes into an array of objects with a\n * 'name' field by default.\n * @param {?} collection - the data once getData resolves it\n * \n * @return {?}\n */\nstructureArray(collection: any): any {\n        let /** @type {?} */ data = collection;\n        if (collection.hasOwnProperty('data')) {\n            this.limitedTo = collection.limitedTo200;\n            this.total = collection.total;\n            data = collection.data;\n        } else if (data.length > this.limit) {\n            this.limitedTo = true;\n            this.total = data.length;\n            data = data.slice(0, this.limit);\n        }\n        return super.structureArray(data);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'skill-specialty-picker-results',\n    template: `\n        <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\">\n            <novo-loading theme=\"line\"></novo-loading>\n        </section>\n        <novo-list *ngIf=\"matches.length > 0\" direction=\"vertical\">\n            <novo-list-item\n                *ngFor=\"let match of matches\"\n                (click)=\"selectMatch($event)\"\n                [class.active]=\"match === activeMatch\"\n                (mouseenter)=\"selectActive(match)\"\n                [class.disabled]=\"preselected(match)\">\n                <item-content>\n                    <h6><span [innerHtml]=\"highlight(match.label, term)\"></span></h6>\n                    <div class=\"category\">\n                        <i class=\"bhi-category-tags\"></i><span [innerHtml]=\"highlight(match.data.categories || match.data.parentCategory.name, term)\"></span>\n                    </div>\n                </item-content>\n            </novo-list-item>\n            <novo-list-item *ngIf=\"limitedTo\"><div>{{labels.showingXofXResults(limit, total)}}</div></novo-list-item>\n            <novo-loading theme=\"line\" *ngIf=\"isLoading && matches.length > 0\"></novo-loading>\n        </novo-list>\n        <p class=\"picker-error\" *ngIf=\"hasError\">{{ labels.pickerError }}</p>\n        <p class=\"picker-null\" *ngIf=\"!isLoading && !matches.length && !hasError\">{{ labels.pickerEmpty }}</p>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n};\n}\n\nfunction SkillsSpecialtyPickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nSkillsSpecialtyPickerResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSkillsSpecialtyPickerResults.ctorParameters;\n/** @type {?} */\nSkillsSpecialtyPickerResults.propDecorators;\n/** @type {?} */\nSkillsSpecialtyPickerResults.prototype.active;\n/** @type {?} */\nSkillsSpecialtyPickerResults.prototype.limitedTo;\n/** @type {?} */\nSkillsSpecialtyPickerResults.prototype.limit;\n/** @type {?} */\nSkillsSpecialtyPickerResults.prototype.total;\n/** @type {?} */\nSkillsSpecialtyPickerResults.prototype.element;\n/** @type {?} */\nSkillsSpecialtyPickerResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// Vendor\n\nimport { BasePickerResults } from '../base-picker-results/BasePickerResults';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nexport class DistributionListPickerResults extends BasePickerResults {\n     active: boolean = true;\n/**\n * @return {?}\n */\nget isHidden(): boolean {\n        return this.matches.length === 0;\n    }\n/**\n * @param {?} element\n * @param {?} sanitizer\n * @param {?} labels\n * @param {?} ref\n */\nconstructor(element: ElementRef,\nprivate sanitizer: DomSanitizer,\npublic labels: NovoLabelService, ref: ChangeDetectorRef) {\n        super(element, ref);\n        this.sanitizer = sanitizer;\n    }\n/**\n * @return {?}\n */\ngetListElement(): any {\n        return this.element.nativeElement.querySelector('novo-list');\n    }\n/**\n * @param {?} html\n * @return {?}\n */\nsanitizeHTML(html: any): any {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'distribution-list-picker-results',\n    template: `\n        <section class=\"picker-loading\" *ngIf=\"isLoading && !matches?.length\">\n            <novo-loading theme=\"line\"></novo-loading>\n        </section>\n        <novo-list direction=\"vertical\" *ngIf=\"matches?.length > 0 && !hasError\">\n            <novo-list-item *ngFor=\"let match of matches\" (click)=\"selectMatch($event)\" [class.active]=\"match === activeMatch\" (mouseenter)=\"selectActive(match)\" [class.disabled]=\"preselected(match)\">\n                <item-header>\n                    <item-title>\n                        <span [innerHtml]=\"sanitizeHTML(match.label)\"></span>\n                    </item-title>\n                </item-header>\n                <item-content direction=\"horizontal\">\n                    <p>\n                        <span class='label'>{{ labels.distributionListOwner }}: </span><span>{{ match?.data?.owner?.name }}</span>\n                    </p>\n                    <p>\n                        <span class='label'>{{ labels.dateAdded }}: </span><span>{{ labels.formatDateWithFormat(match?.data?.dateAdded, 'L') }}</span>\n                    </p>\n                </item-content>\n            </novo-list-item>\n            <novo-loading theme=\"line\" *ngIf=\"isLoading && matches?.length > 0\"></novo-loading>\n        </novo-list>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DomSanitizer, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n'isHidden': [{ type: HostBinding, args: ['hidden', ] },],\n};\n}\n\nfunction DistributionListPickerResults_tsickle_Closure_declarations() {\n/** @type {?} */\nDistributionListPickerResults.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDistributionListPickerResults.ctorParameters;\n/** @type {?} */\nDistributionListPickerResults.propDecorators;\n/** @type {?} */\nDistributionListPickerResults.prototype.active;\n/** @type {?} */\nDistributionListPickerResults.prototype.sanitizer;\n/** @type {?} */\nDistributionListPickerResults.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nimport { NovoListModule } from '../list/List.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoSwitchModule } from '../switch/Switch.module';\nimport { NovoPickerElement } from './Picker';\nimport { PickerResults } from './extras/picker-results/PickerResults';\nimport { EntityPickerResult, EntityPickerResults } from './extras/entity-picker-results/EntityPickerResults';\nimport { ChecklistPickerResults } from './extras/checklist-picker-results/ChecklistPickerResults';\nimport { GroupedMultiPickerResults } from './extras/grouped-multi-picker-results/GroupedMultiPickerResults';\nimport { SkillsSpecialtyPickerResults } from './extras/skills-picker-results/SkillsSpecialtyPickerResults';\nimport { DistributionListPickerResults } from './extras/distributionlist-picker-results/DistributionListPickerResults';\nexport class NovoPickerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, NovoLoadingModule, NovoListModule, NovoOverlayModule, NovoSwitchModule],\n    declarations: [\n        NovoPickerElement,\n        PickerResults,\n        EntityPickerResult,\n        EntityPickerResults,\n        ChecklistPickerResults,\n        GroupedMultiPickerResults,\n        DistributionListPickerResults,\n        SkillsSpecialtyPickerResults\n    ],\n    exports: [\n        NovoPickerElement,\n        PickerResults,\n        EntityPickerResult,\n        EntityPickerResults,\n        ChecklistPickerResults,\n        GroupedMultiPickerResults,\n        DistributionListPickerResults,\n        SkillsSpecialtyPickerResults\n    ],\n    entryComponents: [\n        PickerResults,\n        EntityPickerResult,\n        EntityPickerResults,\n        ChecklistPickerResults,\n        GroupedMultiPickerResults,\n        DistributionListPickerResults,\n        SkillsSpecialtyPickerResults\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  forwardRef,\n  ElementRef,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostBinding,\n  HostListener,\n  ChangeDetectorRef,\n  NgZone,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { TAB, ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n// APP\n\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ SEARCH_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoSearchBoxElement),\n  multi: true,\n};\nexport class NovoSearchBoxElement implements ControlValueAccessor {\npublic name: string;\npublic icon: string = 'search';\npublic placeholder: string = 'Search...';\npublic alwaysOpen: boolean = false;\npublic theme: string = 'positive';\npublic closeOnSelect: boolean = true;\npublic displayField: string;\npublic displayValue: string;\npublic hint: string;\npublic searchChanged: EventEmitter<string> = new EventEmitter<string>();\n   focused: boolean = false;\npublic value: any;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n/**\n * Element for the panel containing the autocomplete options.\n */\noverlay: any;\n   input: any;\nprivate debounceSearchChange: any;\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} _changeDetectorRef\n * @param {?} _zone\n */\nconstructor(\npublic element: ElementRef,\npublic labels: NovoLabelService,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _zone: NgZone,\n  ) {}\n/**\n * \\@name showFasterFind\n * \\@description This function shows the picker and adds the active class (for animation)\n * @param {?=} event\n * @param {?=} forceClose\n * @return {?}\n */\nshowSearch(event?: any, forceClose: boolean = false) {\n    if (!this.panelOpen) {\n      // Reset search\n      // Set focus on search\n      setTimeout(() => {\n        let /** @type {?} */ element = this.input.nativeElement;\n        if (element) {\n          element.focus();\n        }\n      }, 10);\n    }\n  }\n/**\n * @return {?}\n */\nonFocus() {\n    this._zone.run(() => {\n      this.focused = true;\n      this.openPanel();\n    });\n  }\n/**\n * @return {?}\n */\nonBlur() {\n    this.focused = false;\n  }\n/**\n * BEGIN: Convenient Panel Methods.\n * @return {?}\n */\nopenPanel(): void {\n    this.overlay.openPanel();\n  }\n/**\n * @return {?}\n */\nclosePanel(): void {\n    this.overlay.closePanel();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n/**\n * @return {?}\n */\nget active(): boolean {\n    return this.panelOpen || this.alwaysOpen;\n  }\n/**\n * END: Convenient Panel Methods.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ESCAPE || event.keyCode === ENTER || event.keyCode === TAB) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      this._onChange(( /** @type {?} */((event.target as HTMLInputElement))).value);\n\n      if (this.debounceSearchChange) {\n        clearTimeout(this.debounceSearchChange);\n      }\n      this.debounceSearchChange = setTimeout(() => {\n        this.searchChanged.emit(( /** @type {?} */((event.target as HTMLInputElement))).value);\n      }, 400);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._setValue(value);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setValue(value: any): void {\n    this.value = value;\n    let /** @type {?} */ toDisplay = value;\n    if (value && this.displayField) {\n      toDisplay = value.hasOwnProperty(this.displayField) ? value[this.displayField] : value;\n    }\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    this.displayValue = toDisplay ? toDisplay : '';\n    this.input.nativeElement.value = this.displayValue;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * This method closes the panel, and if a value is specified, also sets the associated\n * control to that value. It will also mark the control as dirty if this interaction\n * stemmed from the user.\n * @param {?} event\n * @return {?}\n */\npublic setValueAndClose(event: any | null): void {\n    if (event && event.value) {\n      this._setValue(event.value);\n      this._onChange(event.value);\n    }\n    this.closePanel();\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @param {?} skip\n * @return {?}\n */\npublic clearValue(skip: any) {\n    this.writeValue(null);\n    this._onChange(null);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-search',\n  providers: [SEARCH_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n        <!-- SEARCH ICON -->\n        <button theme=\"fab\" [color]=\"theme\" [icon]=\"icon\" (click)=\"showSearch()\" [tooltip]=\"hint\" tooltipPosition=\"bottom\" data-automation-id=\"novo-search-fab\"></button>\n        <!-- SEARCH INPUT -->\n        <input type=\"text\" [attr.name]=\"name\" [attr.value]=\"displayValue\" [attr.placeholder]=\"placeholder\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" (keydown)=\"_handleKeydown($event)\" (input)=\"_handleInput($event)\" #input data-automation-id=\"novo-search-input\"/>\n        <!-- SEARCH OVERLAY -->\n        <novo-overlay-template [parent]=\"element\" [closeOnSelect]=\"closeOnSelect\" position=\"above-below\" (select)=\"closePanel()\" (closing)=\"onBlur()\">\n            <ng-content></ng-content>\n        </novo-overlay-template>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'icon': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'alwaysOpen': [{ type: Input },],\n'theme': [{ type: Input },],\n'closeOnSelect': [{ type: Input },],\n'displayField': [{ type: Input },],\n'displayValue': [{ type: Input },],\n'hint': [{ type: Input },],\n'searchChanged': [{ type: Output },],\n'focused': [{ type: HostBinding, args: ['class.focused', ] },],\n'overlay': [{ type: ViewChild, args: [NovoOverlayTemplateComponent, ] },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n};\n}\n\nfunction NovoSearchBoxElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSearchBoxElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSearchBoxElement.ctorParameters;\n/** @type {?} */\nNovoSearchBoxElement.propDecorators;\n/** @type {?} */\nNovoSearchBoxElement.prototype.name;\n/** @type {?} */\nNovoSearchBoxElement.prototype.icon;\n/** @type {?} */\nNovoSearchBoxElement.prototype.placeholder;\n/** @type {?} */\nNovoSearchBoxElement.prototype.alwaysOpen;\n/** @type {?} */\nNovoSearchBoxElement.prototype.theme;\n/** @type {?} */\nNovoSearchBoxElement.prototype.closeOnSelect;\n/** @type {?} */\nNovoSearchBoxElement.prototype.displayField;\n/** @type {?} */\nNovoSearchBoxElement.prototype.displayValue;\n/** @type {?} */\nNovoSearchBoxElement.prototype.hint;\n/** @type {?} */\nNovoSearchBoxElement.prototype.searchChanged;\n/** @type {?} */\nNovoSearchBoxElement.prototype.focused;\n/** @type {?} */\nNovoSearchBoxElement.prototype.value;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nNovoSearchBoxElement.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nNovoSearchBoxElement.prototype._onTouched;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nNovoSearchBoxElement.prototype.overlay;\n/** @type {?} */\nNovoSearchBoxElement.prototype.input;\n/** @type {?} */\nNovoSearchBoxElement.prototype.debounceSearchChange;\n/** @type {?} */\nNovoSearchBoxElement.prototype.element;\n/** @type {?} */\nNovoSearchBoxElement.prototype.labels;\n/** @type {?} */\nNovoSearchBoxElement.prototype._changeDetectorRef;\n/** @type {?} */\nNovoSearchBoxElement.prototype._zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoTooltipModule } from './../tooltip/Tooltip.module';\nimport { NovoSearchBoxElement } from './SearchBox';\nexport class NovoSearchBoxModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule, NovoPickerModule, NovoTooltipModule, NovoOverlayModule],\n    declarations: [NovoSearchBoxElement],\n    exports: [NovoSearchBoxElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSearchBoxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSearchBoxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSearchBoxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, EventEmitter } from '@angular/core';\n// Vendor\n\nimport * as dragulaImported from '@bullhorn/dragula';\nconst /** @type {?} */ dragula = dragulaImported;\nexport class NovoDragulaService {\n  cancel: EventEmitter<any> = new EventEmitter();\n  cloned: EventEmitter<any> = new EventEmitter();\n  drag: EventEmitter<any> = new EventEmitter();\n  dragend: EventEmitter<any> = new EventEmitter();\n  drop: EventEmitter<any> = new EventEmitter();\n  out: EventEmitter<any> = new EventEmitter();\n  over: EventEmitter<any> = new EventEmitter();\n  remove: EventEmitter<any> = new EventEmitter();\n  shadow: EventEmitter<any> = new EventEmitter();\n  dropModel: EventEmitter<any> = new EventEmitter();\n  removeModel: EventEmitter<any> = new EventEmitter();\n  events: Array<string> = ['cancel', 'cloned', 'drag', 'dragend', 'drop', 'out', 'over', 'remove', 'shadow', 'dropModel', 'removeModel'];\n  bags: Array<any> = [];\n/**\n * \\@name add\n * @param {?} name\n * @param {?} drake\n * @return {?}\n */\nadd(name, drake) {\n    let /** @type {?} */ bag = this.find(name);\n    if (bag) {\n      throw new Error(`Bag named: ${name} already exists.`);\n    }\n    bag = {\n      name: name,\n      drake: drake,\n    };\n    this.bags.push(bag);\n    if (drake.models) {\n      // models to sync with (must have same structure as containers)\n      this.handleModels(name, drake);\n    }\n    if (!bag.initEvents) {\n      this.setupEvents(bag);\n    }\n    return bag;\n  }\n/**\n * \\@name find\n * @param {?} name\n * @return {?}\n */\nfind(name) {\n    for (let /** @type {?} */ i = 0; i < this.bags.length; i++) {\n      if (this.bags[i].name === name) {\n        return this.bags[i];\n      }\n    }\n    return null;\n  }\n/**\n * \\@name destroy\n * @param {?} name\n * @return {?}\n */\ndestroy(name) {\n    let /** @type {?} */ bag = this.find(name);\n    let /** @type {?} */ i = this.bags.indexOf(bag);\n    this.bags.splice(i, 1);\n    bag.drake.destroy();\n  }\n/**\n * \\@name setOptions\n * @param {?} name\n * @param {?} options\n * @return {?}\n */\nsetOptions(name, options) {\n    let /** @type {?} */ bag = this.add(name, dragula(options));\n    this.handleModels(name, bag.drake);\n  }\n/**\n * \\@name handleModels\n * @param {?} name\n * @param {?} drake\n * @return {?}\n */\nhandleModels(name, drake) {\n    let /** @type {?} */ dragElm;\n    let /** @type {?} */ dragIndex;\n    let /** @type {?} */ dropIndex;\n    let /** @type {?} */ sourceModel;\n    drake.on('remove', (el, source) => {\n      if (!drake.models) {\n        return;\n      }\n      sourceModel = drake.models[drake.containers.indexOf(source)];\n      sourceModel.splice(dragIndex, 1);\n      this.removeModel.emit([name, el, source]);\n    });\n    drake.on('drag', (el, source) => {\n      dragElm = el;\n      dragIndex = this.domIndexOf(el, source);\n    });\n    drake.on('drop', (dropElm, target, source) => {\n      if (!drake.models) {\n        return;\n      }\n      dropIndex = this.domIndexOf(dropElm, target);\n      sourceModel = drake.models[drake.containers.indexOf(source)];\n      if (target === source) {\n        sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n      } else {\n        let /** @type {?} */ notCopy = dragElm === dropElm;\n        let /** @type {?} */ targetModel = drake.models[drake.containers.indexOf(target)];\n        let /** @type {?} */ dropElmModel = notCopy ? sourceModel[dragIndex] : JSON.parse(JSON.stringify(sourceModel[dragIndex]));\n\n        if (notCopy) {\n          sourceModel.splice(dragIndex, 1);\n        }\n        targetModel.splice(dropIndex, 0, dropElmModel);\n        target.removeChild(dropElm); // element must be removed for ngFor to apply correctly\n      }\n      this.dropModel.emit([name, dropElm, target, source]);\n    });\n  }\n/**\n * \\@name setupEvents\n * @param {?} bag\n * @return {?}\n */\nsetupEvents(bag) {\n    bag.initEvents = true;\n    let /** @type {?} */ that = this;\n    let /** @type {?} */ emitter = (type) => {\n/**\n * @return {?}\n */\nfunction replicate() {\n        let /** @type {?} */ args = Array.prototype.slice.call(arguments);\n        that[type].emit([bag.name].concat(args));\n      }\n\n      bag.drake.on(type, replicate);\n    };\n    this.events.forEach(emitter);\n  }\n/**\n * \\@name domIndexOf\n * @param {?} child\n * @param {?} parent\n * @return {?}\n */\ndomIndexOf(child, parent) {\n    return Array.prototype.indexOf.call(parent.children, child);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoDragulaService_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDragulaService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDragulaService.ctorParameters;\n/** @type {?} */\nNovoDragulaService.prototype.cancel;\n/** @type {?} */\nNovoDragulaService.prototype.cloned;\n/** @type {?} */\nNovoDragulaService.prototype.drag;\n/** @type {?} */\nNovoDragulaService.prototype.dragend;\n/** @type {?} */\nNovoDragulaService.prototype.drop;\n/** @type {?} */\nNovoDragulaService.prototype.out;\n/** @type {?} */\nNovoDragulaService.prototype.over;\n/** @type {?} */\nNovoDragulaService.prototype.remove;\n/** @type {?} */\nNovoDragulaService.prototype.shadow;\n/** @type {?} */\nNovoDragulaService.prototype.dropModel;\n/** @type {?} */\nNovoDragulaService.prototype.removeModel;\n/** @type {?} */\nNovoDragulaService.prototype.events;\n/** @type {?} */\nNovoDragulaService.prototype.bags;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, ElementRef, OnInit, Input, OnChanges } from '@angular/core';\n// Vendor\n\nimport * as dragulaImported from '@bullhorn/dragula';\nconst /** @type {?} */ dragula = dragulaImported;\n// APP\n\nimport { NovoDragulaService } from './DragulaService';\nexport class NovoDragulaElement implements OnInit, OnChanges {\n   bag: any;\n   dragulaModel: any;\n  drake: any = null;\n  container: any;\n/**\n * @param {?} element\n * @param {?} dragulaService\n */\nconstructor(element: ElementRef,\nprivate dragulaService: NovoDragulaService) {\n    this.container = element.nativeElement;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    let /** @type {?} */ bag = this.dragulaService.find(this.bag);\n\n    if (bag) {\n      this.drake = bag.drake;\n      this.checkModel();\n      this.drake.containers.push(this.container);\n    } else {\n      this.drake = dragula({\n        containers: [this.container],\n      });\n      this.checkModel();\n      this.dragulaService.add(this.bag, this.drake);\n    }\n  }\n/**\n * @return {?}\n */\ncheckModel() {\n    if (this.dragulaModel) {\n      if (this.drake.models) {\n        this.drake.models.push(this.dragulaModel);\n      } else {\n        this.drake.models = [this.dragulaModel];\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes) {\n    if (changes && changes.dragulaModel) {\n      if (this.drake) {\n        if (this.drake.models) {\n          let /** @type {?} */ modelIndex = this.drake.models.indexOf(changes.dragulaModel.previousValue);\n          this.drake.models.splice(modelIndex, 1, changes.dragulaModel.currentValue);\n        } else {\n          this.drake.models = [changes.dragulaModel.currentValue];\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dragula]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoDragulaService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'bag': [{ type: Input, args: ['dragula', ] },],\n'dragulaModel': [{ type: Input },],\n};\n}\n\nfunction NovoDragulaElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDragulaElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDragulaElement.ctorParameters;\n/** @type {?} */\nNovoDragulaElement.propDecorators;\n/** @type {?} */\nNovoDragulaElement.prototype.bag;\n/** @type {?} */\nNovoDragulaElement.prototype.dragulaModel;\n/** @type {?} */\nNovoDragulaElement.prototype.drake;\n/** @type {?} */\nNovoDragulaElement.prototype.container;\n/** @type {?} */\nNovoDragulaElement.prototype.dragulaService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\n// APP\n\nimport { NovoDragulaElement } from './Dragula';\nexport class NovoDragulaModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [NovoDragulaElement],\n    exports: [NovoDragulaElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoDragulaModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDragulaModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDragulaModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n// APP\n\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class NovoSliderElement implements OnInit, OnDestroy {\n     slides: any;\n\n    currentSlide: number = 0;\n    start: boolean = true;\n    end: boolean = true;\n    currSlides: Array<any> = ['active'];\n    handleKeyDownFunc: any;\n    currentClass: string;\n/**\n * @param {?} element\n * @param {?} labels\n */\nconstructor(private element: ElementRef,\npublic labels: NovoLabelService) {\n        this.handleKeyDownFunc = this.handleKeyDown.bind(this);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        for (let /** @type {?} */ i = 0; i < this.slides; i++) {\n            this.currSlides[i] = (i > 0) ? 'inactive' : 'active';\n        }\n        // Catch Tab Events\n        this.element.nativeElement.addEventListener('keydown', this.handleKeyDownFunc);\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.element.nativeElement.removeEventListener('keydown', this.handleKeyDownFunc);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleKeyDown(event) {\n        if (event.keyCode === 9) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} direction\n * @return {?}\n */\nchangeSlide(direction) {\n        if (direction === 'next') {\n            if (this.currentSlide === this.slides - 1) {\n                return;\n            }\n            this.currentSlide++;\n        } else {\n            if (this.currentSlide === 0) {\n                return;\n            }\n            this.currentSlide--;\n        }\n\n        for (let /** @type {?} */ i = 0; i < this.slides; i++) {\n            this.currSlides[i] = 'inactive';\n        }\n\n        this.currSlides[this.currentSlide] = 'active';\n        this.start = (this.currentSlide === 0);\n        this.end = (this.currentSlide === this.slides - 1);\n        this.currentClass = `slide-${this.currentSlide}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-slider',\n    template: `\n        <section class=\"slides\">\n            <ng-content select=\"div[slide]\"></ng-content>\n        </section>\n        <div class=\"controls\">\n            <button *ngIf=\"!start\" theme=\"icon\" icon=\"previous\" (click)=\"changeSlide('back')\"></button>\n            <div class=\"indicators\">\n                <div class=\"indicator-circle\" *ngFor=\"let indicator of currSlides; let i = index\" [ngClass]=\"indicator\"></div>\n            </div>\n            <button *ngIf=\"!end\" theme=\"primary\" icon=\"next\" (click)=\"changeSlide('next')\">{{ labels.next }}</button>\n            <ng-content select=\"button\" *ngIf=\"end\"></ng-content>\n        </div>\n    `,\n    host: {\n        '[class]': 'currentClass'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'slides': [{ type: Input },],\n};\n}\n\nfunction NovoSliderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSliderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSliderElement.ctorParameters;\n/** @type {?} */\nNovoSliderElement.propDecorators;\n/** @type {?} */\nNovoSliderElement.prototype.slides;\n/** @type {?} */\nNovoSliderElement.prototype.currentSlide;\n/** @type {?} */\nNovoSliderElement.prototype.start;\n/** @type {?} */\nNovoSliderElement.prototype.end;\n/** @type {?} */\nNovoSliderElement.prototype.currSlides;\n/** @type {?} */\nNovoSliderElement.prototype.handleKeyDownFunc;\n/** @type {?} */\nNovoSliderElement.prototype.currentClass;\n/** @type {?} */\nNovoSliderElement.prototype.element;\n/** @type {?} */\nNovoSliderElement.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoSliderElement } from './Slider';\nexport class NovoSliderModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule],\n    declarations: [NovoSliderElement],\n    exports: [NovoSliderElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoSliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoSliderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, EventEmitter, Input, Output, forwardRef, ElementRef, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// Vendor\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n// APP\n\nimport { OutsideClick } from '../../utils/outside-click/OutsideClick';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ CHIPS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoChipsElement),\n  multi: true,\n};\nexport class NovoChipElement {\n/**\n * @param {?} type\n * @return {?}\n */\nset type(type: string) {\n    this._type = type ? type.toLowerCase() : null;\n  }\n\n  \n  disabled: boolean = false;\n\n  \n  select: EventEmitter<any> = new EventEmitter();\n  \n  remove: EventEmitter<any> = new EventEmitter();\n  \n  deselect: EventEmitter<any> = new EventEmitter();\n\n  entity: string;\n  _type: string;\n/**\n * @param {?} e\n * @return {?}\n */\nonRemove(e) {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.remove.emit(e);\n    return false;\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nonSelect(e) {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.select.emit(e);\n    return false;\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nonDeselect(e) {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.deselect.emit(e);\n    return false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'chip,novo-chip',\n  template: `\n        <span (click)=\"onSelect($event)\" (mouseenter)=\"onSelect($event)\" (mouseleave)=\"onDeselect($event)\" [ngClass]=\"_type\">\n            <i *ngIf=\"_type\" class=\"bhi-circle\"></i>\n            <span><ng-content></ng-content></span>\n        </span>\n        <i class=\"bhi-close\" *ngIf=\"!disabled\" (click)=\"onRemove($event)\"></i>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'disabled': [{ type: Input },],\n'select': [{ type: Output },],\n'remove': [{ type: Output },],\n'deselect': [{ type: Output },],\n};\n}\n\nfunction NovoChipElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoChipElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoChipElement.ctorParameters;\n/** @type {?} */\nNovoChipElement.propDecorators;\n/** @type {?} */\nNovoChipElement.prototype.disabled;\n/** @type {?} */\nNovoChipElement.prototype.select;\n/** @type {?} */\nNovoChipElement.prototype.remove;\n/** @type {?} */\nNovoChipElement.prototype.deselect;\n/** @type {?} */\nNovoChipElement.prototype.entity;\n/** @type {?} */\nNovoChipElement.prototype._type;\n}\n\nexport class NovoChipsElement implements OnInit, ControlValueAccessor {\n  \n  closeOnSelect: boolean = false;\n  \n  placeholder: string = '';\n  \n  source: any;\n  \n  type: any;\n/**\n * @param {?} v\n * @return {?}\n */\nset disablePickerInput(v: boolean) {\n    this._disablePickerInput = coerceBooleanProperty(v);\n  }\n/**\n * @return {?}\n */\nget disablePickerInput() {\n    return this._disablePickerInput;\n  }\nprivate _disablePickerInput: boolean = false;\n\n  \n  changed: EventEmitter<any> = new EventEmitter();\n  \n  focus: EventEmitter<any> = new EventEmitter();\n  \n  blur: EventEmitter<any> = new EventEmitter();\n  \n  typing: EventEmitter<any> = new EventEmitter();\n\n  \n  preview: ViewContainerRef;\n\n  items: Array<any> = [];\n  selected: any = null;\n  config: any = {};\n  model: any;\n  itemToAdd: any;\n  popup: any;\n  // private data model\n  _value: any = '';\n  _items = new ReplaySubject(1);\n  // Placeholders for the callbacks\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @param {?} element\n * @param {?} componentUtils\n * @param {?} labels\n */\nconstructor(public element: ElementRef,\nprivate componentUtils: ComponentUtils,\npublic labels: NovoLabelService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.setItems();\n  }\n/**\n * @return {?}\n */\nget value() {\n    return this._value;\n  }\n/**\n * @param {?} selected\n * @return {?}\n */\nset value(selected) {\n    this.itemToAdd = '';\n    if (selected !== this._value) {\n      this._value = selected;\n      this.changed.emit({ value: selected, rawValue: this.items });\n      this.onModelChange(selected);\n    }\n  }\n/**\n * @return {?}\n */\nclearValue() {\n    this.items = [];\n    this._items.next(this.items);\n    this.value = null;\n    this.changed.emit({ value: this.value, rawValue: this.items });\n    this.onModelChange(this.value);\n  }\n/**\n * @return {?}\n */\nsetItems() {\n    this.items = [];\n    if (this.model && Array.isArray(this.model)) {\n      let /** @type {?} */ noLabels = [];\n      for (let /** @type {?} */ value of this.model) {\n        let /** @type {?} */ label;\n        if (this.source && this.source.format && Helpers.validateInterpolationProps(this.source.format, value)) {\n          label = Helpers.interpolate(this.source.format, value);\n        }\n        if (this.source && label && label !== this.source.format) {\n          this.items.push({\n            value,\n            label,\n          });\n        } else if (this.source.getLabels && typeof this.source.getLabels === 'function') {\n          noLabels.push(value);\n        } else if (this.source.options && Array.isArray(this.source.options)) {\n          this.items.push(this.getLabelFromOptions(value));\n        } else {\n          this.items.push({\n            value,\n            label: value,\n          });\n        }\n      }\n      if (noLabels.length > 0 && this.source && this.source.getLabels && typeof this.source.getLabels === 'function') {\n        this.source.getLabels(noLabels).then((result) => {\n          for (let /** @type {?} */ value of result) {\n            if (value.hasOwnProperty('label')) {\n              this.items.push({\n                value,\n                label: value.label,\n              });\n            } else if (this.source.options && Array.isArray(this.source.options)) {\n              this.items.push(this.getLabelFromOptions(value));\n            } else {\n              this.items.push(value);\n            }\n          }\n          this._items.next(this.items);\n        });\n      }\n    }\n    this.changed.emit({ value: this.model, rawValue: this.items });\n    this._items.next(this.items);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ngetLabelFromOptions(value) {\n    let /** @type {?} */ optLabel = this.source.options.find((val) => val.value === value);\n    return {\n      value,\n      label: optLabel ? optLabel.label : value,\n    };\n  }\n/**\n * @param {?=} event\n * @return {?}\n */\ndeselectAll(event?) {\n    this.selected = null;\n    this.hidePreview();\n  }\n/**\n * @param {?=} event\n * @param {?=} item\n * @return {?}\n */\nselect(event?, item?) {\n    this.blur.emit(event);\n    this.deselectAll();\n    this.selected = item;\n    this.showPreview();\n  }\n/**\n * @param {?=} event\n * @param {?=} item\n * @return {?}\n */\ndeselect(event?, item?) {\n    this.blur.emit(event);\n    this.deselectAll();\n  }\n/**\n * @param {?=} event\n * @return {?}\n */\nonTyping(event?) {\n    this.typing.emit(event);\n  }\n/**\n * @param {?=} event\n * @return {?}\n */\nonFocus(event?) {\n    this.deselectAll();\n    this.element.nativeElement.classList.add('selected');\n    this.focus.emit(event);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nadd(event) {\n    if (event && !(event instanceof Event)) {\n      this.items.push(event);\n      this.value = this.items.map((i) => i.value);\n      // Set focus on the picker\n      let /** @type {?} */ input = this.element.nativeElement.querySelector('novo-picker > input');\n      if (input) {\n        input.focus();\n      }\n    }\n    this._items.next(this.items);\n  }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nremove(event, item) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    this.items.splice(this.items.indexOf(item), 1);\n    this.deselectAll();\n    this.value = this.items.map((i) => i.value);\n    this.changed.emit({ value: this.value.length ? this.value : '', rawValue: this.items });\n    this.onModelChange(this.value.length ? this.value : '');\n    this._items.next(this.items);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDown(event) {\n    if (event.keyCode === KeyCodes.BACKSPACE) {\n      if (event.target && event.target.value.length === 0 && this.items.length) {\n        if (event) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n        if (this.selected) {\n          this.remove(event, this.selected);\n        } else {\n          this.select(event, this.items[this.items.length - 1]);\n        }\n      }\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nonTouched(e) {\n    this.element.nativeElement.classList.remove('selected');\n    this.onModelTouched();\n    this.blur.emit(e);\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n    this.setItems();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this._disablePickerInput = disabled;\n  }\n/**\n * \\@name showPreview\n * \n * \\@description This method creates an instance of the preview (called popup) and adds all the bindings to that\n * instance. Will reuse the popup or create a new one if it does not already exist. Will only work if there is\n * a previewTemplate given in the config.\n * @return {?}\n */\nshowPreview() {\n    if (this.source.previewTemplate) {\n      if (!this.popup) {\n        this.popup = this.componentUtils.appendNextToLocation(this.source.previewTemplate, this.preview);\n      }\n      this.popup.instance.match = this.selected;\n    }\n  }\n/**\n * \\@name hidePreview\n * \n * \\@description - This method deletes the preview popup from the DOM.\n * @return {?}\n */\nhidePreview() {\n    if (this.popup) {\n      this.popup.destroy();\n      this.popup = null;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'chips,novo-chips',\n  providers: [CHIPS_VALUE_ACCESSOR],\n  template: `\n        <novo-chip\n            *ngFor=\"let item of _items | async\"\n            [type]=\"type || item?.value?.searchEntity\"\n            [class.selected]=\"item == selected\"\n            [disabled]=\"disablePickerInput\"\n            (remove)=\"remove($event, item)\"\n            (select)=\"select($event, item)\"\n            (deselect)=\"deselect($event, item)\">\n            {{ item.label }}\n        </novo-chip>\n        <div class=\"chip-input-container\">\n            <novo-picker\n                clearValueOnSelect=\"true\"\n                [closeOnSelect]=\"closeOnSelect\"\n                [config]=\"source\"\n                [disablePickerInput]=\"disablePickerInput\"\n                [placeholder]=\"placeholder\"\n                [(ngModel)]=\"itemToAdd\"\n                (select)=\"add($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (focus)=\"onFocus($event)\"\n                (typing)=\"onTyping($event)\"\n                (blur)=\"onTouched($event)\"\n                [selected]=\"items\"\n                [overrideElement]=\"element\">\n            </novo-picker>\n        </div>\n        <div class=\"preview-container\">\n            <span #preview></span>\n        </div>\n        <i class=\"bhi-search\" [class.has-value]=\"items.length\" *ngIf=\"!disablePickerInput\"></i>\n        <label class=\"clear-all\" *ngIf=\"items.length && !disablePickerInput\" (click)=\"clearValue()\">{{ labels.clearAll }} <i class=\"bhi-times\"></i></label>\n   `,\n  host: {\n    '[class.with-value]': 'items.length > 0',\n    '[class.disabled]': 'disablePickerInput',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ComponentUtils, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'closeOnSelect': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'disablePickerInput': [{ type: Input },],\n'changed': [{ type: Output },],\n'focus': [{ type: Output },],\n'blur': [{ type: Output },],\n'typing': [{ type: Output },],\n'preview': [{ type: ViewChild, args: ['preview', { read: ViewContainerRef }, ] },],\n'value': [{ type: Input },],\n};\n}\n\nfunction NovoChipsElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoChipsElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoChipsElement.ctorParameters;\n/** @type {?} */\nNovoChipsElement.propDecorators;\n/** @type {?} */\nNovoChipsElement.prototype.closeOnSelect;\n/** @type {?} */\nNovoChipsElement.prototype.placeholder;\n/** @type {?} */\nNovoChipsElement.prototype.source;\n/** @type {?} */\nNovoChipsElement.prototype.type;\n/** @type {?} */\nNovoChipsElement.prototype._disablePickerInput;\n/** @type {?} */\nNovoChipsElement.prototype.changed;\n/** @type {?} */\nNovoChipsElement.prototype.focus;\n/** @type {?} */\nNovoChipsElement.prototype.blur;\n/** @type {?} */\nNovoChipsElement.prototype.typing;\n/** @type {?} */\nNovoChipsElement.prototype.preview;\n/** @type {?} */\nNovoChipsElement.prototype.items;\n/** @type {?} */\nNovoChipsElement.prototype.selected;\n/** @type {?} */\nNovoChipsElement.prototype.config;\n/** @type {?} */\nNovoChipsElement.prototype.model;\n/** @type {?} */\nNovoChipsElement.prototype.itemToAdd;\n/** @type {?} */\nNovoChipsElement.prototype.popup;\n/** @type {?} */\nNovoChipsElement.prototype._value;\n/** @type {?} */\nNovoChipsElement.prototype._items;\n/** @type {?} */\nNovoChipsElement.prototype.onModelChange;\n/** @type {?} */\nNovoChipsElement.prototype.onModelTouched;\n/** @type {?} */\nNovoChipsElement.prototype.element;\n/** @type {?} */\nNovoChipsElement.prototype.componentUtils;\n/** @type {?} */\nNovoChipsElement.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, forwardRef, ElementRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n// Vendor\n// APP\n\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\nimport { NovoChipElement, NovoChipsElement } from './Chips';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ CHIPS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoRowChipsElement),\n  multi: true,\n};\nexport class NovoRowChipElement extends NovoChipElement {\n/**\n * @param {?} e\n * @return {?}\n */\nonSelect(e) {\n    return false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-row-chip',\n  template: `<div class=\"novo-row-chips-columns\"><ng-content></ng-content><i class=\"bhi-delete-o\" *ngIf=\"!disabled\" (click)=\"onRemove($event)\"></i></div>`,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoRowChipElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoRowChipElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoRowChipElement.ctorParameters;\n}\n\nexport class NovoRowChipsElement extends NovoChipsElement {\n  \n  closeOnSelect: boolean = true;\n/**\n * @param {?} element\n * @param {?} componentUtils\n * @param {?} labels\n */\nconstructor(element: ElementRef, componentUtils: ComponentUtils, labels: NovoLabelService) {\n    super(element, componentUtils, labels);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDown(event) {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-row-chips',\n  providers: [CHIPS_VALUE_ACCESSOR],\n  host: {\n    '[class.with-value]': 'items.length > 0',\n  },\n  template: `\n        <div class=\"novo-row-chips-columns\" *ngIf=\"items.length > 0\">\n          <div class=\"column-label\" *ngFor=\"let column of source.columns\">{{ column.label }}</div>\n        </div>\n        <novo-row-chip\n          *ngFor=\"let item of _items | async\"\n          [type]=\"type || item?.value?.searchEntity\"\n          [class.selected]=\"item == selected\"\n          [disabled]=\"disablePickerInput\"\n          (remove)=\"remove($event, item)\"\n          (select)=\"select($event, item)\">\n          <div class=\"column-data\" *ngFor=\"let column of source.columns\"><span>{{ column.data(item) }}</span></div>\n        </novo-row-chip>\n        <novo-picker\n            clearValueOnSelect=\"true\"\n            [closeOnSelect]=\"closeOnSelect\"\n            [config]=\"source\"\n            [disablePickerInput]=\"disablePickerInput\"\n            [hidden]=\"disablePickerInput\"\n            [placeholder]=\"placeholder\"\n            [(ngModel)]=\"itemToAdd\"\n            (select)=\"add($event)\"\n            (keydown)=\"onKeyDown($event)\"\n            (focus)=\"onFocus($event)\"\n            (typing)=\"onTyping($event)\"\n            (blur)=\"onTouched($event)\"\n            [selected]=\"items\"\n            [overrideElement]=\"element\">\n        </novo-picker>\n        <div class=\"preview-container\">\n            <span #preview></span>\n        </div>\n   `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ComponentUtils, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'closeOnSelect': [{ type: Input },],\n};\n}\n\nfunction NovoRowChipsElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoRowChipsElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoRowChipsElement.ctorParameters;\n/** @type {?} */\nNovoRowChipsElement.propDecorators;\n/** @type {?} */\nNovoRowChipsElement.prototype.closeOnSelect;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoChipElement, NovoChipsElement } from './Chips';\nimport { NovoRowChipElement, NovoRowChipsElement } from './RowChips';\nexport class NovoChipsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule, NovoPickerModule],\n  declarations: [NovoChipElement, NovoChipsElement, NovoRowChipElement, NovoRowChipsElement],\n  exports: [NovoChipElement, NovoChipsElement, NovoRowChipElement, NovoRowChipsElement],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoChipsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoChipsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoChipsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport {\n  ElementRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  OnInit,\n  ViewChild,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n// Vendor\n\nimport * as dateFns from 'date-fns';\n// APP\n\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ DATE_PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDatePickerElement),\n  multi: true,\n};\n\nexport interface RangeModal {\n  startDate: Date;\n  endDate: Date;\n}\nexport type modelTypes = Date | RangeModal;\n\nexport interface Day {\n  date: Date;\n  isCurrentMonth?: boolean;\n  isToday?: boolean;\n  name?: string;\n  number?: string | number;\n}\n\nexport type rangeSelectModes = 'startDate' | 'endDate';\nexport class NovoDatePickerElement implements ControlValueAccessor, OnInit, OnChanges {\n  \n  minYear: string | number;\n  \n  maxYear: string | number;\n  \n  start: Date;\n  \n  end: Date;\n  \n  inline: boolean;\n  \n  range: boolean;\n  \n  weekRangeSelect: boolean;\n  \n  weekStart: number = 0;\n  // Select callback for output\n  \n  onSelect: EventEmitter<any> = new EventEmitter(false);\n  \n  template: TemplateRef<any>;\n\n  // List of all the weekdays\n  weekdays: string[] = [];\n  // List of all months\n  months: string[] = [];\n  // List of all years (generated in ngOnInit)\n  years: Array<any> = [];\n  // Default view mode (select days)\n  view: string = 'days';\n  heading: any;\n\n  model: modelTypes;\n  month: Date;\n  monthLabel: string;\n  weeks: any;\n  selected: Date;\n  selectedLabel: string;\n  selected2: Date;\n  selected2Label: string;\n  hoverDay: any;\n\n  rangeSelectMode: rangeSelectModes = 'startDate';\n  _onChange: Function = () => {};\n  _onTouched: Function = () => {};\n/**\n * @param {?} labels\n * @param {?} element\n */\nconstructor(public labels: NovoLabelService,\nprivate element: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    // Determine the year array\n    let /** @type {?} */ now = new Date();\n    let /** @type {?} */ start = this.minYear ? Number(this.minYear) : now.getFullYear() - 100;\n    let /** @type {?} */ end = this.maxYear ? Number(this.maxYear) : now.getFullYear() + 10;\n\n    for (let /** @type {?} */ i = start; i <= end; i++) {\n      this.years.push(i);\n    }\n\n    // Set weekdays / months\n    this.weekdays = this.setupWeekdays();\n    this.months = this.labels.getMonths();\n\n    // Set labels\n    this.selectedLabel = this.labels.startDate;\n    this.selected2Label = this.labels.endDate;\n    this.updateView(this.model, false, true);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    let /** @type {?} */ weekRangeSelectChange: SimpleChange = changes['weekRangeSelect'];\n    if (\n      weekRangeSelectChange &&\n      weekRangeSelectChange.currentValue !== weekRangeSelectChange.previousValue &&\n      !weekRangeSelectChange.firstChange\n    ) {\n      this.clearRange();\n    }\n    let /** @type {?} */ weekStartChanges: SimpleChange = changes['weekStart'];\n    if (weekStartChanges && weekStartChanges.currentValue !== weekStartChanges.previousValue && !weekStartChanges.firstChange) {\n      this.weekdays = this.setupWeekdays();\n      this.updateView(this.model, false, false);\n    }\n  }\n/**\n * @return {?}\n */\nsetupWeekdays(): string[] {\n    let /** @type {?} */ weekdays = this.labels.getWeekdays();\n    // Weekstart must be 0-6 (Sunday - Saturday)\n    if (!Helpers.isBlank(this.weekStart) && this.weekStart > 0 && this.weekStart <= 6) {\n      let /** @type {?} */ newStart = weekdays.splice(this.weekStart);\n      weekdays = [...newStart, ...weekdays];\n    }\n    return weekdays;\n  }\n/**\n * @param {?} range\n * @param {?} day\n * @param {?} selected\n * @param {?} selected2\n * @param {?} hoverDay\n * @param {?} rangeSelectMode\n * @param {?} weekRangeSelect\n * @return {?}\n */\nisSelectingRange(range, day, selected, selected2, hoverDay, rangeSelectMode, weekRangeSelect) {\n    if (range && !weekRangeSelect) {\n      let /** @type {?} */ isRangeModeEndDate =\n        rangeSelectMode === 'endDate' && (selected && selected2 && dateFns.isAfter(day, selected2) && dateFns.isBefore(day, hoverDay));\n      let /** @type {?} */ isRangeModeStartDate =\n        rangeSelectMode === 'startDate' && (selected && selected2 && dateFns.isBefore(day, selected) && dateFns.isAfter(day, hoverDay));\n      let /** @type {?} */ isNotSelected = !selected && selected2 && dateFns.isBefore(day, selected2) && dateFns.isAfter(day, hoverDay);\n      let /** @type {?} */ isNotSelected2 = selected && !selected2 && dateFns.isAfter(day, selected) && dateFns.isBefore(day, hoverDay);\n      return isNotSelected2 || isNotSelected || isRangeModeStartDate || isRangeModeEndDate;\n    }\n    return false;\n  }\n/**\n * @param {?} range\n * @param {?} day\n * @param {?} selected\n * @param {?} selected2\n * @return {?}\n */\nisEndFill(range, day, selected, selected2) {\n    if (range && selected2 && selected) {\n      return !dateFns.isSameDay(selected, selected2) && dateFns.isSameDay(day, selected2) && dateFns.isAfter(day, selected);\n    }\n    return false;\n  }\n/**\n * @param {?} range\n * @param {?} day\n * @param {?} selected\n * @param {?} selected2\n * @return {?}\n */\nisStartFill(range, day, selected, selected2) {\n    if (range && selected2 && selected) {\n      return !dateFns.isSameDay(selected, selected2) && dateFns.isSameDay(day, selected) && dateFns.isBefore(day, selected2);\n    }\n    return false;\n  }\n/**\n * @param {?} range\n * @param {?} day\n * @param {?} selected\n * @param {?} selected2\n * @return {?}\n */\nisFiller(range, day, selected, selected2) {\n    if (range && selected2 && selected) {\n      return (\n        (dateFns.isAfter(day, selected) && dateFns.isBefore(day, selected2)) ||\n        dateFns.isSameDay(day, selected) ||\n        dateFns.isSameDay(day, selected2)\n      );\n    }\n    return false;\n  }\n/**\n * @param {?} range\n * @param {?} day\n * @param {?} selected\n * @param {?} selected2\n * @return {?}\n */\nisSelected(range, day, selected, selected2) {\n    if (range) {\n      return (\n        day &&\n        ((selected &&\n          (day.getDate() === selected.getDate() &&\n            day.getMonth() === selected.getMonth() &&\n            day.getFullYear() === selected.getFullYear())) ||\n          (selected2 &&\n            (day.getDate() === selected2.getDate() &&\n              day.getMonth() === selected2.getMonth() &&\n              day.getFullYear() === selected2.getFullYear())))\n      );\n    }\n    return day.getDate() === selected.getDate() && day.getMonth() === selected.getMonth() && day.getFullYear() === selected.getFullYear();\n  }\n/**\n * @param {?} day\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\nisDisabled(day, start, end) {\n    return dateFns.isBefore(day, start) || dateFns.isAfter(day, end);\n  }\n/**\n * @param {?} date\n * @param {?} fireEvents\n * @param {?} markedSelected\n * @return {?}\n */\nupdateView(date, fireEvents: boolean, markedSelected: boolean) {\n    if (date && date.startDate === null) {\n      this.clearRange();\n    } else {\n      if (!date) {\n        this.clearRange();\n      }\n      let /** @type {?} */ value: any = date ? new Date(date) : new Date();\n      value = this.removeTime(value);\n      this.month = new Date(value);\n      this.monthLabel = this.labels.formatDateWithFormat(this.month, { month: 'short' });\n\n      let /** @type {?} */ start = new Date(value.getTime());\n      start.setDate(1);\n      this.removeTime(start.setDate(1));\n\n      this.buildMonth(start, this.month);\n\n      if (markedSelected) {\n        this.select(null, { date: value }, fireEvents);\n      }\n    }\n  }\n/**\n * @return {?}\n */\nsetToday() {\n    let /** @type {?} */ tmp = new Date();\n    this.updateView(tmp, true, true);\n    // Go back to days\n    this.open(null, 'days');\n  }\n/**\n * @return {?}\n */\nclearRange() {\n    this.selected = null;\n    this.selectedLabel = this.labels.startDate;\n    this.selected2 = null;\n    this.selected2Label = this.labels.endDate;\n  }\n/**\n * @param {?} month\n * @return {?}\n */\nsetMonth(month: number): void {\n    let /** @type {?} */ date = this.month ? this.month : new Date();\n    let /** @type {?} */ tmp = dateFns.setMonth(date, month);\n    this.updateView(tmp, true, false);\n    // Go back to days\n    this.open(null, 'days');\n  }\n/**\n * @param {?} year\n * @return {?}\n */\nsetYear(year: number): void {\n    let /** @type {?} */ date = this.month ? this.month : new Date();\n    let /** @type {?} */ tmp = dateFns.setYear(date, year);\n    this.updateView(tmp, true, false);\n    // Go back to days\n    this.open(null, 'days');\n  }\n/**\n * @param {?} event\n * @param {?} day\n * @param {?} fireEvents\n * @return {?}\n */\nselect(event: Event, day: Day, fireEvents: boolean) {\n    Helpers.swallowEvent(event);\n    if (this.range) {\n      if (this.weekRangeSelect) {\n        this.selected = dateFns.startOfWeek(day.date, { weekStartsOn: this.weekStart });\n        this.selected2 = dateFns.endOfWeek(day.date, { weekStartsOn: this.weekStart });\n        this.selectedLabel = this.labels.formatDateWithFormat(this.selected, {\n          month: 'short',\n          day: '2-digit',\n          year: 'numeric',\n        });\n        this.selected2Label = this.labels.formatDateWithFormat(this.selected2, {\n          month: 'short',\n          day: '2-digit',\n          year: 'numeric',\n        });\n        // Make sure to fire this, since we default to the current week selected!\n        if (!fireEvents && this.weekRangeSelect) {\n          this.fireRangeSelect();\n        }\n      } else if (this.rangeSelectMode === 'startDate') {\n        // SET START DATE\n        this.selected = dateFns.startOfDay(day.date);\n        this.selectedLabel = this.labels.formatDateWithFormat(this.selected, {\n          month: 'short',\n          day: '2-digit',\n          year: 'numeric',\n        });\n        if (this.selected2 && dateFns.isAfter(day.date, this.selected2)) {\n          // CLEAR END DATE\n          this.selected2 = null;\n          this.selected2Label = this.labels.endDate;\n        }\n        if (event) {\n          this.rangeSelectMode = 'endDate';\n        }\n      } else if (this.rangeSelectMode === 'endDate') {\n        // SET END DATE\n        this.selected2 = dateFns.endOfDay(day.date);\n        this.selected2Label = this.labels.formatDateWithFormat(this.selected2, {\n          month: 'short',\n          day: '2-digit',\n          year: 'numeric',\n        });\n        if (this.selected && dateFns.isBefore(day.date, this.selected)) {\n          // CLEAR START DATE\n          this.selected = null;\n          this.selectedLabel = this.labels.startDate;\n        }\n        if (event) {\n          this.rangeSelectMode = 'startDate';\n        }\n      }\n    } else {\n      this.selected = day.date;\n      this.selectedLabel = this.labels.formatDateWithFormat(this.selected, {\n        month: 'short',\n        day: '2-digit',\n        year: 'numeric',\n      });\n      this.updateHeading();\n    }\n    if (fireEvents && this.selected) {\n      // Emit our output\n      if (this.range && this.selected && this.selected2) {\n        this.fireRangeSelect();\n        // Also, update the ngModel\n        this._onChange({\n          startDate: this.selected,\n          endDate: this.selected2 ? this.selected2 : null,\n        });\n        this.model = {\n          startDate: this.selected,\n          endDate: this.selected2 ? this.selected2 : null,\n        };\n      }\n\n      if (!this.range) {\n        this.onSelect.next({\n          month: this.labels.formatDateWithFormat(this.selected, { month: 'long' }),\n          year: this.selected.getFullYear(),\n          day: this.labels.formatDateWithFormat(this.selected, { weekday: 'long' }),\n          date: this.selected,\n        });\n        // Also, update the ngModel\n        this._onChange(this.selected);\n        this.model = this.selected;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nfireRangeSelect() {\n    // Make sure the start date is before the end date\n    if (dateFns.isBefore(this.selected, this.selected2)) {\n      this.onSelect.next({\n        startDate: {\n          month: this.labels.formatDateWithFormat(this.selected, { month: 'long' }),\n          year: this.selected.getFullYear(),\n          day: this.labels.formatDateWithFormat(this.selected, { weekday: 'long' }),\n          date: this.selected,\n        },\n        endDate: {\n          month: this.labels.formatDateWithFormat(this.selected2, { month: 'long' }),\n          year: this.selected2.getFullYear(),\n          day: this.labels.formatDateWithFormat(this.selected2, { weekday: 'long' }),\n          date: this.selected2,\n        },\n      });\n    }\n  }\n/**\n * @param {?} event\n * @param {?} type\n * @return {?}\n */\nopen(event: Event, type: string) {\n    Helpers.swallowEvent(event);\n\n    // If they click the toggle two time in a row, close it (go back to days)\n    if (type === this.view) {\n      this.view = 'days';\n    } else {\n      this.view = type;\n    }\n\n    // Make sure to scroll the selected one into view\n    if (this.view === 'years' || this.view === 'months') {\n      setTimeout(() => {\n        let /** @type {?} */ container = this.element.nativeElement.querySelector(`.calendar-content.${this.view}`);\n        let /** @type {?} */ selectedItem = this.element.nativeElement.querySelector(\n          `.calendar-content.${this.view} .${this.view === 'years' ? 'year' : 'month'}.selected`,\n        );\n        if (container && selectedItem) {\n          container.scrollTop = selectedItem.offsetTop - 100;\n        }\n      });\n    }\n\n    this.updateHeading();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprevMonth(event: Event): void {\n    Helpers.swallowEvent(event);\n    let /** @type {?} */ tmp = dateFns.subMonths(this.month, 1);\n    this.updateView(tmp, false, false);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nnextMonth(event: Event): void {\n    Helpers.swallowEvent(event);\n    let /** @type {?} */ tmp = dateFns.addMonths(this.month, 1);\n    this.updateView(tmp, false, false);\n  }\n/**\n * @return {?}\n */\nupdateHeading() {\n    if (!this.selected) {\n      return;\n    }\n    this.heading = {\n      month: this.labels.formatDateWithFormat(this.selected, { month: 'long' }),\n      year: this.selected.getFullYear(),\n      day: this.labels.formatDateWithFormat(this.selected, { weekday: 'long' }),\n      date: this.selected.getDate(),\n    };\n  }\n/**\n * Remove the time aspect of the date\n * @param {?} date\n * @return {?} with time stripped out\n */\nremoveTime(date: any): Date {\n    let /** @type {?} */ ret = new Date(date);\n    ret.setHours(12);\n    ret.setSeconds(0);\n    ret.setMilliseconds(0);\n    return ret;\n  }\n/**\n * @param {?} start\n * @param {?} month\n * @return {?}\n */\nbuildMonth(start: Date, month: Date) {\n    // Reset the weeks\n    this.weeks = [];\n\n    // House keeping variables to know when we are done building the month\n    let /** @type {?} */ done = false, /** @type {?} */\n      date = dateFns.startOfWeek(start, { weekStartsOn: this.weekStart }), /** @type {?} */\n      monthIndex = date.getMonth(), /** @type {?} */\n      count = 0;\n\n    while (!done) {\n      // Build the days for the weeks\n      this.weeks.push({ days: this.buildWeek(new Date(date.getTime()), month) });\n\n      // Increment variables for the next iteration\n      date = dateFns.addDays(date, 7);\n      done = count++ > 2 && monthIndex !== date.getMonth();\n      monthIndex = date.getMonth();\n    }\n  }\n/**\n * @param {?} date\n * @param {?} month\n * @return {?}\n */\nbuildWeek(date: Date, month: Date): Array<Object> {\n    // Build out of the days of the week\n    let /** @type {?} */ days = [];\n\n    // Iterate over the days of the week\n    for (let /** @type {?} */ i = 0; i < 7; i++) {\n      // Push a variable on the day array with lots of helpers to make the template easier\n      days.push({\n        name: this.weekdays[i],\n        number: date.getDate(),\n        isToday: dateFns.isToday(date),\n        date: date,\n      });\n\n      // Increment for the next iteration\n      date = dateFns.addDays(date, 1);\n    }\n\n    return days;\n  }\n/**\n * @param {?} range\n * @return {?}\n */\ntoggleRangeSelect(range: rangeSelectModes): void {\n    this.rangeSelectMode = range;\n  }\n/**\n * @param {?} event\n * @param {?} day\n * @return {?}\n */\nrangeHover(event: Event, day: Day): void {\n    this.hoverDay = day.date;\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: modelTypes): void {\n    this.model = model;\n    if (Helpers.isDate(model)) {\n      this.updateView(model, false, true);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this._onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this._onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-date-picker',\n  providers: [DATE_PICKER_VALUE_ACCESSOR],\n  animations: [\n    trigger('startDateTextState', [\n      state(\n        'startDate',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      state(\n        'endDate',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      transition('startDate <=> endDate', animate('200ms ease-in')),\n    ]),\n    trigger('endDateTextState', [\n      state(\n        'startDate',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      state(\n        'endDate',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      transition('startDate <=> endDate', animate('200ms ease-in')),\n    ]),\n    trigger('indicatorState', [\n      state(\n        'startDate',\n        style({\n          transform: 'translateX(0%)',\n        }),\n      ),\n      state(\n        'endDate',\n        style({\n          transform: 'translateX(100%)',\n        }),\n      ),\n      transition('startDate <=> endDate', animate('200ms ease-in')),\n    ]),\n  ],\n  template: `\n        <div class=\"calendar\">\n            <div class=\"calendar-top\" *ngIf=\"!inline && !range\">\n                <h4 class=\"day\" [attr.data-automation-id]=\"heading?.day\">{{heading?.day}}</h4>\n                <h2 class=\"month\" [attr.data-automation-id]=\"heading?.month\">{{heading?.month}}</h2>\n                <h1 class=\"date\" [attr.data-automation-id]=\"heading?.date\">{{heading?.date}}</h1>\n                <h3 class=\"year\" [attr.data-automation-id]=\"heading?.year\">{{heading?.year}}</h3>\n            </div>\n            <div class=\"date-range-tabs\" *ngIf=\"range\" [class.week-select-mode]=\"weekRangeSelect\">\n                <span class=\"range-tab\" (click)=\"toggleRangeSelect('startDate')\" [@startDateTextState]=\"rangeSelectMode\" data-automation-id=\"calendar-start-date\">{{selectedLabel}}</span>\n                <span class=\"range-tab\" (click)=\"toggleRangeSelect('endDate')\" [@endDateTextState]=\"rangeSelectMode\" data-automation-id=\"calendar-end-date\">{{selected2Label}}</span>\n                <i class=\"indicator\" [@indicatorState]=\"rangeSelectMode\"></i>\n            </div>\n            <div class=\"calendar-header\">\n                <span class=\"previous\" (click)=\"prevMonth($event)\" data-automation-id=\"calendar-previous\"></span>\n                <span class=\"heading\">\n                    <span class=\"month\" (click)=\"open($event, 'months')\" data-automation-id=\"header-month\">{{monthLabel}}</span>\n                    <span class=\"year\" (click)=\"open($event, 'years')\" data-automation-id=\"header-year\">{{month?.getFullYear()}}</span>\n                </span>\n                <span class=\"next\" (click)=\"nextMonth($event)\" data-automation-id=\"calendar-next\"></span>\n            </div>\n            <table class=\"calendar-content days\" cellspacing=\"0\" cellpadding=\"0\" [hidden]=\"!(view=='days')\">\n                <thead>\n                    <tr>\n                        <th *ngFor=\"let day of weekdays\" title=\"{{day}}\" class=\"weekday\" [attr.data-automation-id]=\"day.substr(0, 2)\">{{day.substr(0, 2)}}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let week of weeks\">\n                        <td *ngFor=\"let day of week.days\" [ngClass]=\"{\n                            today: day.isToday,\n                            'notinmonth': day.date.getMonth() !== this.month.getMonth(),\n                            selected: isSelected(range, day.date, selected, selected2),\n                            filler: isFiller(range, day.date, selected, selected2),\n                            startfill: isStartFill(range, day.date, selected, selected2),\n                            endfill: isEndFill(range, day.date, selected, selected2),\n                            'selecting-range': isSelectingRange(range, day.date, selected, selected2, hoverDay, rangeSelectMode, weekRangeSelect)\n                           }\" (mouseover)=\"rangeHover($event, day)\" [attr.data-automation-id]=\"day.number\">\n                            <button class=\"day\" [attr.data-automation-id]=\"day.number\" [disabled]=\"isDisabled(day.date, start, end)\" (click)=\"select($event, day, true)\">{{day.number}}</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <section class=\"calendar-content months\" [hidden]=\"view !== 'months'\">\n                <div *ngFor=\"let month of months;let i = index\" (click)=\"setMonth(i)\">\n                    <div class=\"month\" [ngClass]=\"{selected: i === selected?.getMonth()}\" [attr.data-automation-id]=\"month\">{{month}}</div>\n                </div>\n            </section>\n            <section class=\"calendar-content years\" [hidden]=\"view !== 'years'\">\n                <div *ngFor=\"let year of years\" (click)=\"setYear(year)\">\n                    <div class=\"year\" [ngClass]=\"{selected: year == selected?.getFullYear()}\" [attr.data-automation-id]=\"year\">{{year}}</div>\n                </div>\n            </section>\n            <div class=\"calendar-footer\">\n                <span (click)=\"setToday()\" class=\"today\" data-automation-id=\"calendar-today\">{{ labels.today }}</span>\n            </div>\n        </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minYear': [{ type: Input },],\n'maxYear': [{ type: Input },],\n'start': [{ type: Input },],\n'end': [{ type: Input },],\n'inline': [{ type: Input },],\n'range': [{ type: Input },],\n'weekRangeSelect': [{ type: Input },],\n'weekStart': [{ type: Input },],\n'onSelect': [{ type: Output },],\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction NovoDatePickerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDatePickerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDatePickerElement.ctorParameters;\n/** @type {?} */\nNovoDatePickerElement.propDecorators;\n/** @type {?} */\nNovoDatePickerElement.prototype.minYear;\n/** @type {?} */\nNovoDatePickerElement.prototype.maxYear;\n/** @type {?} */\nNovoDatePickerElement.prototype.start;\n/** @type {?} */\nNovoDatePickerElement.prototype.end;\n/** @type {?} */\nNovoDatePickerElement.prototype.inline;\n/** @type {?} */\nNovoDatePickerElement.prototype.range;\n/** @type {?} */\nNovoDatePickerElement.prototype.weekRangeSelect;\n/** @type {?} */\nNovoDatePickerElement.prototype.weekStart;\n/** @type {?} */\nNovoDatePickerElement.prototype.onSelect;\n/** @type {?} */\nNovoDatePickerElement.prototype.template;\n/** @type {?} */\nNovoDatePickerElement.prototype.weekdays;\n/** @type {?} */\nNovoDatePickerElement.prototype.months;\n/** @type {?} */\nNovoDatePickerElement.prototype.years;\n/** @type {?} */\nNovoDatePickerElement.prototype.view;\n/** @type {?} */\nNovoDatePickerElement.prototype.heading;\n/** @type {?} */\nNovoDatePickerElement.prototype.model;\n/** @type {?} */\nNovoDatePickerElement.prototype.month;\n/** @type {?} */\nNovoDatePickerElement.prototype.monthLabel;\n/** @type {?} */\nNovoDatePickerElement.prototype.weeks;\n/** @type {?} */\nNovoDatePickerElement.prototype.selected;\n/** @type {?} */\nNovoDatePickerElement.prototype.selectedLabel;\n/** @type {?} */\nNovoDatePickerElement.prototype.selected2;\n/** @type {?} */\nNovoDatePickerElement.prototype.selected2Label;\n/** @type {?} */\nNovoDatePickerElement.prototype.hoverDay;\n/** @type {?} */\nNovoDatePickerElement.prototype.rangeSelectMode;\n/** @type {?} */\nNovoDatePickerElement.prototype._onChange;\n/** @type {?} */\nNovoDatePickerElement.prototype._onTouched;\n/** @type {?} */\nNovoDatePickerElement.prototype.labels;\n/** @type {?} */\nNovoDatePickerElement.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.createAutoCorrectedDatePipe=t():e.createAutoCorrectedDatePipe=t()}(this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p=\"\",t(0)}([function(e,t,r){e.exports=r(1)},function(e,t){\"use strict\";function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"mm dd yyyy\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.minYear,i=void 0===r?1:r,d=t.maxYear,u=void 0===d?9999:d,s=e.split(/[^dmyHMS]+/).sort(function(e,t){return o.indexOf(e)-o.indexOf(t)});return function(t){var r=[],o={dd:31,mm:12,yy:99,yyyy:u,HH:23,MM:59,SS:59},d={dd:1,mm:1,yy:0,yyyy:i,HH:0,MM:0,SS:0},a=t.split(\"\");s.forEach(function(t){var n=e.indexOf(t),i=parseInt(o[t].toString().substr(0,1),10);parseInt(a[n],10)>i&&(a[n+1]=a[n],a[n]=0,r.push(n))});var y=0,f=s.some(function(r){var s=e.indexOf(r),a=r.length,f=t.substr(s,a).replace(/\\D/g,\"\"),p=parseInt(f,10);\"mm\"===r&&(y=p||0);var c=\"dd\"===r?n[y]:o[r];if(\"yyyy\"===r&&(1!==i||9999!==u)){var l=parseInt(o[r].toString().substring(0,f.length),10),m=parseInt(d[r].toString().substring(0,f.length),10);return p<m||p>l}return p>c||f.length===a&&p<d[r]});return!f&&{value:a.join(\"\"),indexesOfPipedChars:r}}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=r;var n=[31,31,29,31,30,31,30,31,31,30,31,30,31],o=[\"yyyy\",\"yy\",\"mm\",\"dd\",\"HH\",\"MM\",\"SS\"]}])});","// NG2\n\nimport { Injectable } from '@angular/core';\n// APP\n\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class DateFormatService {\n/**\n * @param {?} labels\n */\nconstructor (private labels: NovoLabelService) {}\n/**\n * @param {?} militaryTime\n * @return {?}\n */\ngetTimeMask(militaryTime: boolean): Array<RegExp> {\n        let /** @type {?} */ mask: Array<RegExp> = [/\\d/, /\\d/, /:/, /\\d/, /\\d/], /** @type {?} */ timeFormatArray: Array<string> = [], /** @type {?} */ timeFormatPartsArray: Array<string> = [];\n        let /** @type {?} */ timeFormat: string = this.labels.timeFormatPlaceholderAM.toLowerCase();\n        if (militaryTime) {\n            return mask;\n        } else {\n            timeFormatArray = timeFormat.split('hh:mm');\n            if (timeFormatArray && timeFormatArray.length) {\n                mask = [];\n                for (let /** @type {?} */ timeFormatPart of timeFormatArray) {\n                    if (timeFormatPart === '') {\n                        mask = mask.concat([/\\d/, /\\d|:/, /:|\\d/, /\\d|\\w|\\s/, /\\d|\\s|\\w/]);\n                    } else if (timeFormatPart.length) {\n                        for (let /** @type {?} */ i = 0; i < timeFormatPart.length; i++) {\n                            mask.push(/\\s|\\w|\\d|\\./);\n                        }\n                    }\n                }\n            }\n        }\n        return mask;\n    }\n/**\n * @return {?}\n */\ngetDateMask(): Array<RegExp> {\n        return [ /\\d/, /\\d|\\/|\\.|\\-/, /\\/|\\.|\\-|\\d/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d|\\/|\\.|\\-/, /\\d/, /\\d/];\n    }\n/**\n * @param {?=} militaryTime\n * @return {?}\n */\ngetDateTimeMask(militaryTime: boolean = false): Array<RegExp> {\n        return [...this.getDateMask(), /\\,?/, /\\s/, ...this.getTimeMask(militaryTime)];\n    }\n/**\n * @param {?} militaryTime\n * @return {?}\n */\ngetTimePlaceHolder(militaryTime: boolean): string {\n        if (militaryTime) {\n            return this.labels.timeFormatPlaceholder24Hour;\n        }\n        return this.labels.timeFormatPlaceholderAM;\n    }\n/**\n * @param {?} dateString\n * @return {?}\n */\nparseDateString(dateString: string): [Date, string] {\n        let /** @type {?} */ dateFormat: string = this.labels.dateFormat, /** @type {?} */\n            dateFormatRegex = /(\\w+)[\\/|\\.|\\-](\\w+)[\\/|\\.|\\-](\\w+)/gi, /** @type {?} */\n            dateValueRegex = /(\\d+)[\\/|\\.|\\-](\\d+)[\\/|\\.|\\-](\\d+)/gi, /** @type {?} */\n            dateFormatTokens: Array<string>, /** @type {?} */ dateValueTokens: Array<string>, /** @type {?} */ year: number, /** @type {?} */ month: number, /** @type {?} */ day: number, /** @type {?} */ date: Date = new Date();\n        if (Helpers.isEmpty(dateFormat)) {\n            // Default to MM/dd/yyyy\n            dateFormat = 'mm/dd/yyyy';\n        } else {\n            dateFormat = dateFormat.toLowerCase();\n        }\n        dateFormatTokens = dateFormatRegex.exec(dateFormat);\n        dateValueTokens = dateValueRegex.exec(dateString);\n        if (dateFormatTokens && dateFormatTokens.length === 4 && dateValueTokens && dateValueTokens.length === 4) {\n            for (let /** @type {?} */ i = 1; i < 4; i++) {\n                if (dateFormatTokens[i].includes('m')) {\n                    month = parseInt(dateValueTokens[i]) - 1;\n                } else if (dateFormatTokens[i].includes('d')) {\n                    day = parseInt(dateValueTokens[i]);\n                } else {\n                    year = parseInt(dateValueTokens[i]);\n                }\n            }\n            if (month >= 0 && month <= 11 && year > 1900 && day > 0 && day <= 31) {\n                date = new Date(year, month, day);\n            }\n        } else if (dateFormatTokens && dateFormatTokens.length === 4 && dateString.length >= 1) {\n            let /** @type {?} */ twoTokens = /\\d{1,4}(\\/|\\.|\\-)(\\d{1,2})/.exec(dateString);\n            let /** @type {?} */ oneToken = /^(\\d{1,4})$/.exec(dateString);\n            let /** @type {?} */ delimiter = /\\w+(\\/|\\.|\\-)\\w+[\\/|\\.|\\-]\\w+/gi.exec(dateFormat);\n            let /** @type {?} */ dateStringWithDelimiter = dateString[dateString.length - 1].match(/\\/|\\.|\\-/);\n            if (twoTokens && twoTokens.length === 3 && this.isValidDatePart(twoTokens[2], dateFormatTokens[2]) && !dateStringWithDelimiter) {\n                dateString = `${dateString}${delimiter[1]}`;\n            } else if (oneToken && oneToken.length === 2 && this.isValidDatePart(oneToken[1], dateFormatTokens[1]) && !dateStringWithDelimiter) {\n                dateString = `${dateString}${delimiter[1]}`;\n            }\n        }\n        return [date, dateString];\n    }\n/**\n * @param {?} timeString\n * @param {?} militaryTime\n * @return {?}\n */\nparseTimeString (timeString: string, militaryTime: boolean): [Date, string] {\n        let /** @type {?} */ value: Date = new Date(), /** @type {?} */ timeStringParts: Array<string>, /** @type {?} */ timeFormat: string;\n        let /** @type {?} */ amFormat = this.labels.timeFormatAM;\n        let /** @type {?} */ pmFormat = this.labels.timeFormatPM;\n        if (!(timeString && timeString.includes(':'))) {\n            return [value, timeString];\n        }\n        if (!militaryTime && amFormat && pmFormat) {\n            let /** @type {?} */ splits: Array<string> = [], /** @type {?} */ pm: boolean = false;\n            amFormat = this.labels.timeFormatAM.toLowerCase();\n            pmFormat = this.labels.timeFormatPM.toLowerCase();\n            timeString = timeString.toLowerCase();\n            if (timeString.includes(amFormat)) {\n                splits = timeString.split(amFormat);\n            } else if (timeString.includes(pmFormat)) {\n                splits = timeString.split(pmFormat);\n                pm = true;\n            }\n            if (splits && splits.length) {\n                for (let /** @type {?} */ item of splits) {\n                    if (item && item.trim().includes(':')) {\n                        timeStringParts = item.trim().split(':');\n                    }\n                }\n            }\n            if (timeStringParts && timeStringParts.length && timeStringParts.length === 2) {\n                let /** @type {?} */ hours: number = parseInt(timeStringParts[0]);\n                if (hours === 12 && pm) {\n                    hours = 12;\n                } else if (pm) {\n                    hours = hours + 12;\n                } else if (hours === 12) {\n                    hours = 0;\n                }\n                value.setHours(hours);\n                value.setMinutes(parseInt(timeStringParts[1]));\n                value.setSeconds(0);\n            }\n        } else {\n            timeStringParts = /(\\d{1,2}):(\\d{2})/.exec(timeString);\n            if (timeStringParts && timeStringParts.length && timeStringParts.length === 3) {\n                value.setHours(parseInt(timeStringParts[1]));\n                value.setMinutes(parseInt(timeStringParts[2]));\n                value.setSeconds(0);\n            }\n        }\n        return [value, timeString];\n    }\n/**\n * @param {?} dateTimeString\n * @param {?} militaryTime\n * @param {?} type\n * @return {?}\n */\nparseString(dateTimeString: string, militaryTime: boolean, type: string): [Date, string] {\n        switch (type) {\n            case 'datetime':\n                let /** @type {?} */ str = dateTimeString.replace(/-/g,'/');\n                let /** @type {?} */ parts = str.split(' ');\n                let [dt, dts] = this.parseDateString(parts[0]);\n                if( parts.length > 1) {\n                    let [tm, tms] = this.parseTimeString(parts[1], militaryTime);\n                    return [new Date(dt.setHours(tm.getHours(), tm.getMinutes())), `${dts} ${tms}`];\n                }\n                return [dt, dts];\n            case 'date':\n                return this.parseDateString(dateTimeString);\n            case 'time':\n                return this.parseTimeString(dateTimeString, militaryTime);\n            default:\n                return;\n        }\n    }\n/**\n * @param {?} value\n * @param {?} format\n * @return {?}\n */\nisValidDatePart(value: string, format: string): boolean {\n        let /** @type {?} */ datePart = parseInt(value);\n        if (format.includes('m') && (datePart >= 2 || value.length === 2)) {\n            return true;\n        } else if (format.includes('d') && (datePart >= 4 || value.length === 2)) {\n            return true;\n        } else if (format.includes('y') && datePart >= 1000) {\n            return true;\n        }\n        return false;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\n}\n\nfunction DateFormatService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateFormatService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateFormatService.ctorParameters;\n/** @type {?} */\nDateFormatService.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  forwardRef,\n  Host,\n  Input,\n  Output,\n  Inject,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TAB, ENTER, ESCAPE } from '@angular/cdk/keycodes';\n// Vendor\n\nimport { TextMaskModule } from 'angular2-text-mask';\nimport * as dateFns from 'date-fns';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\n// App\n\nimport { NovoDatePickerElement } from './DatePicker';\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDatePickerInputElement),\n  multi: true,\n};\nexport class NovoDatePickerInputElement implements OnInit, ControlValueAccessor {\npublic value: any;\npublic formattedValue: string = '';\nprivate userDefinedFormat: boolean;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n\n  \n  name: string;\n  \n  start: Date;\n  \n  end: Date;\n  \n  placeholder: string;\n  \n  maskOptions: any;\n  \n  format: string;\n  \n  textMaskEnabled: boolean = true;\n  \n  allowInvalidDate: boolean = false;\n  \n  \n  disabled: boolean = false;\n  \n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  \n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n/**\n * Element for the panel containing the autocomplete options.\n */\noverlay: NovoOverlayTemplateComponent;\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} _changeDetectorRef\n * @param {?} dateFormatService\n */\nconstructor(\npublic element: ElementRef,\npublic labels: NovoLabelService,\nprivate _changeDetectorRef: ChangeDetectorRef,\npublic dateFormatService: DateFormatService,\n  ) {\n    this.placeholder = this.labels.dateFormatPlaceholder;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.userDefinedFormat = this.format ? !this.format.match(/^(DD\\/MM\\/YYYY|MM\\/DD\\/YYYY)$/g) : false;\n    if (!this.userDefinedFormat && this.textMaskEnabled && !this.allowInvalidDate) {\n      this.maskOptions = this.maskOptions || {\n        mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n        pipe: createAutoCorrectedDatePipe(this.format || this.labels.dateFormat.toLowerCase()),\n        keepCharPositions: false,\n        guide: true,\n      };\n    } else {\n      this.maskOptions = { mask: false };\n    }\n  }\n/**\n * BEGIN: Convenient Panel Methods.\n * @return {?}\n */\nopenPanel(): void {\n    if (!this.disabled) {\n      this.overlay.openPanel();\n    }\n  }\n/**\n * @return {?}\n */\nclosePanel(): void {\n    this.overlay.closePanel();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n/**\n * END: Convenient Panel Methods.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ESCAPE || event.keyCode === ENTER || event.keyCode === TAB) && this.panelOpen) {\n      this._handleEvent(event, true);\n      this.closePanel();\n      event.stopPropagation();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      this._handleEvent(event, false);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleFocus(event: FocusEvent): void {\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n/**\n * @param {?} event\n * @param {?} blur\n * @return {?}\n */\n_handleEvent(event: Event, blur: boolean): void {\n    let /** @type {?} */ value = ( /** @type {?} */((event.target as HTMLInputElement))).value;\n    this.formatDate(value, blur);\n    this.openPanel();\n  }\n/**\n * @param {?} value\n * @param {?} blur\n * @return {?}\n */\nprotected formatDate(value: string, blur: boolean) {\n    try {\n      let [dateTimeValue, formatted] = this.dateFormatService.parseString(value, false, 'date');\n      if (!isNaN(dateTimeValue.getUTCDate())) {\n        let /** @type {?} */ dt = new Date(dateTimeValue);\n        this.dispatchOnChange(dt, blur);\n      } else {\n        this.dispatchOnChange(null, blur);\n      }\n    } catch ( /** @type {?} */err) {}\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n/**\n * @param {?=} newValue\n * @param {?=} blur\n * @param {?=} skip\n * @return {?}\n */\npublic dispatchOnChange(newValue?: any, blur: boolean = false, skip: boolean = false) {\n    if (newValue !== this.value) {\n      this._onChange(newValue);\n      if (blur) {\n        !skip && this.writeValue(newValue);\n      } else {\n        !skip && this._setCalendarValue(newValue);\n      }\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setTriggerValue(value: any): void {\n    this._setCalendarValue(value);\n    this._setFormValue(value);\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setCalendarValue(value: any): void {\n    if (value instanceof Date && this.value instanceof Date) {\n      value = new Date(value.setHours(this.value.getHours(), this.value.getMinutes()));\n    }\n    this.value = value;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setFormValue(value: any): void {\n    if (this.value) {\n      let /** @type {?} */ test = this.formatDateValue(this.value);\n      this.formattedValue = test;\n    }\n  }\n/**\n * This method closes the panel, and if a value is specified, also sets the associated\n * control to that value. It will also mark the control as dirty if this interaction\n * stemmed from the user.\n * @param {?} event\n * @return {?}\n */\npublic setValueAndClose(event: any | null): void {\n    if (event && event.date) {\n      this.dispatchOnChange(event.date, true);\n    }\n    this.closePanel();\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @return {?}\n */\npublic clearValue() {\n    this.formattedValue = '';\n    this.dispatchOnChange(null);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic formatDateValue(value) {\n    let /** @type {?} */ originalValue = value;\n    try {\n      if (!value) {\n        return '';\n      }\n      if (this.userDefinedFormat && dateFns.isValid(value)) {\n        return dateFns.format(value, this.format);\n      }\n      if (!(value instanceof Date)) {\n        value = new Date(value);\n      }\n      if (!(isNaN(value.valueOf()) && this.allowInvalidDate)) {\n        return this.labels.formatDateWithFormat(value, {\n          month: '2-digit',\n          day: '2-digit',\n          year: 'numeric',\n        });\n      } else {\n        return originalValue;\n      }\n    } catch ( /** @type {?} */err) {\n      return '';\n    }\n  }\n/**\n * @return {?}\n */\npublic get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-date-picker-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n        <input type=\"text\" [name]=\"name\" [(ngModel)]=\"formattedValue\" [textMask]=\"maskOptions\" [placeholder]=\"placeholder\" (focus)=\"_handleFocus($event)\" (keydown)=\"_handleKeydown($event)\" (input)=\"_handleInput($event)\" (blur)=\"_handleBlur($event)\" #input data-automation-id=\"date-input\" [disabled]=\"disabled\"/>\n        <i *ngIf=\"!hasValue\" (click)=\"openPanel()\" class=\"bhi-calendar\"></i>\n        <i *ngIf=\"hasValue\" (click)=\"clearValue()\" class=\"bhi-times\"></i>\n        <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n            <novo-date-picker [start]=\"start\" [end]=\"end\" inline=\"true\" (onSelect)=\"setValueAndClose($event)\" [ngModel]=\"value\"></novo-date-picker>\n        </novo-overlay-template>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n{type: DateFormatService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'start': [{ type: Input },],\n'end': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'maskOptions': [{ type: Input },],\n'format': [{ type: Input },],\n'textMaskEnabled': [{ type: Input },],\n'allowInvalidDate': [{ type: Input },],\n'disabled': [{ type: HostBinding, args: ['class.disabled', ] },{ type: Input },],\n'blurEvent': [{ type: Output },],\n'focusEvent': [{ type: Output },],\n'overlay': [{ type: ViewChild, args: [NovoOverlayTemplateComponent, ] },],\n};\n}\n\nfunction NovoDatePickerInputElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDatePickerInputElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDatePickerInputElement.ctorParameters;\n/** @type {?} */\nNovoDatePickerInputElement.propDecorators;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.value;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.formattedValue;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.userDefinedFormat;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nNovoDatePickerInputElement.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nNovoDatePickerInputElement.prototype._onTouched;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.name;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.start;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.end;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.placeholder;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.maskOptions;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.format;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.textMaskEnabled;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.allowInvalidDate;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.disabled;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.blurEvent;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.focusEvent;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nNovoDatePickerInputElement.prototype.overlay;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.element;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.labels;\n/** @type {?} */\nNovoDatePickerInputElement.prototype._changeDetectorRef;\n/** @type {?} */\nNovoDatePickerInputElement.prototype.dateFormatService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// Vendor\n\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\n\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nimport { NovoDatePickerElement } from './DatePicker';\nimport { NovoDatePickerInputElement } from './DatePickerInput';\nexport class NovoDatePickerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, NovoOverlayModule, TextMaskModule],\n    declarations: [NovoDatePickerElement, NovoDatePickerInputElement],\n    exports: [NovoDatePickerElement, NovoDatePickerInputElement],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoDatePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDatePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDatePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, EventEmitter, forwardRef, Input, Output, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { Helpers } from './../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ TIME_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NovoTimePickerElement),\n    multi: true\n};\nexport class NovoTimePickerElement implements ControlValueAccessor, OnInit, OnChanges {\n     military: boolean = false;\n     analog: boolean = false;\n     inline: boolean = false;\n     onSelect: EventEmitter<any> = new EventEmitter();\n\n    hours: number = 12;\n    minutes: number = 0;\n    value: any = null;\n    meridian: string;\n    inBetween: boolean;\n    hoursClass: string;\n    activeHour;\n    minutesClass: string;\n    activeMinute;\n    increments: string[] = [];\n    selected:string;\n    MERIDIANS: Array<string> = ['am', 'pm'];\n    MINUTES: Array<string> = ['05', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '00'];\n    HOURS: Array<string> = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n    model: any;\n    _onChange: Function = () => { };\n    _onTouched: Function = () => { };\n/**\n * @param {?} arr\n * @return {?}\n */\nflatten(arr) {\n        return Array.prototype.concat(...arr);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.military) {\n            this.HOURS = ['0', ...this.HOURS, '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\n            this.increments = this.flatten([...this.HOURS.map((hour) => [`${hour}:00`, `${hour}:15`, `${hour}:30`, `${hour}:45`])]);\n        } else {\n            let /** @type {?} */ hours: Array<string> = ['12', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11'];\n            this.increments = this.flatten([...hours.map((hour) => [`${hour}:00 AM`, `${hour}:15 AM`, `${hour}:30 AM`, `${hour}:45 AM`]), ...hours.map((hour) => [`${hour}:00 PM`, `${hour}:15 PM`, `${hour}:30 PM`, `${hour}:45 PM`])]);\n        }\n        this.ngOnChanges();\n    }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n        if (this.model) {\n            this.init(this.model, false);\n        } else {\n            this.selected = null;\n            this.init(new Date(), false);\n        }\n    }\n/**\n * @param {?} value\n * @param {?} dispatch\n * @return {?}\n */\ninit(value, dispatch) {\n        let /** @type {?} */ _value = new Date(value);\n        let /** @type {?} */ hours: string | number = _value.getHours();\n        let /** @type {?} */ minutes: string | number = _value.getMinutes();\n\n        if (!this.military) {\n            this.meridian = hours >= 12 ? 'pm' : 'am';\n            hours = hours % 12;\n            hours = hours || 12;\n        }\n        minutes = minutes < 10 ? `0${minutes}` : minutes;\n\n        this.setHours(null, hours, dispatch);\n        this.setMinutes(null, minutes, dispatch);\n        this.checkBetween(minutes);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ncheckBetween(value) {\n        this.inBetween = this.MINUTES.indexOf(String(value)) < 0;\n    }\n/**\n * @param {?} event\n * @param {?} value\n * @return {?}\n */\nsetValue(event, value) {\n        Helpers.swallowEvent(event);\n        this.selected = value;\n        let [time, meridian] = value.split(' ');\n        let [hours, minutes] = time.split(':');\n        this.hours = hours;\n        this.minutes = minutes;\n        this.meridian = meridian;\n    \n        this.dispatchChange();\n    }\n/**\n * @param {?} event\n * @param {?} hours\n * @param {?} dispatch\n * @return {?}\n */\nsetHours(event, hours, dispatch) {\n        Helpers.swallowEvent(event);\n        this.hours = hours;\n        this.hoursClass = `hour-${hours}`;\n        this.activeHour = hours;\n\n        if (dispatch) {\n            this.dispatchChange();\n        }\n    }\n/**\n * @param {?} event\n * @param {?} minutes\n * @param {?} dispatch\n * @return {?}\n */\nsetMinutes(event, minutes, dispatch) {\n        Helpers.swallowEvent(event);\n        this.minutes = minutes;\n        this.minutesClass = `min-${minutes}`;\n        this.activeMinute = minutes;\n        this.checkBetween(minutes);\n\n        if (dispatch) {\n            this.dispatchChange();\n        }\n    }\n/**\n * @param {?} event\n * @param {?} period\n * @param {?} dispatch\n * @return {?}\n */\nsetPeriod(event, period, dispatch) {\n        Helpers.swallowEvent(event);\n        this.meridian = period;\n\n        if (dispatch) {\n            this.dispatchChange();\n        }\n    }\n/**\n * @return {?}\n */\ndispatchChange() {\n        let /** @type {?} */ hours = Number(this.hours);\n\n        if (!this.military) {\n            hours = this.meridian.toLowerCase() === 'pm' ? hours + 12 : hours;\n\n            // Special case for 12\n            if (this.meridian.toLowerCase() === 'pm' && hours === 24) {\n                hours = 12;\n            } else if (this.meridian.toLowerCase() === 'am' && hours === 12) {\n                hours = 0;\n            }\n        }\n        \n        let /** @type {?} */ value = new Date();\n        value.setHours(hours);\n        value.setMinutes(this.minutes);\n        value.setSeconds(0);\n        this.value = `${this.hours}:${this.minutes} ${this.meridian}`;\n        this.onSelect.next({\n            hours: hours,\n            minutes: this.minutes,\n            meridian: this.meridian,\n            date: value,\n            text: this.value,\n        });\n        this._onChange(value);\n    }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n        this.model = model;\n        if (Helpers.isDate(model)) {\n            this.init(model, false);\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n        this._onChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n        this._onTouched = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-time-picker',\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\n    template: `\n        <div class=\"digital\" [class.inline]=\"inline\" [class.military]=\"military\">\n            <div class=\"digital--inner\">\n                <span class=\"digital--clock\" *ngIf=\"!inline\">\n                    <span class=\"hours\" data-automation-id=\"novo-time-picker-hours\">{{hours}}</span>:<span class=\"minutes\" data-automation-id=\"novo-time-picker-minutes\">{{minutes}}</span>\n                </span>\n                <div class=\"control-block\" *ngIf=\"!military\">\n                    <span *ngFor=\"let period of MERIDIANS\" class=\"digital--period\" [class.active]=\"meridian==period\" (click)=\"setPeriod($event, period, true)\" [attr.data-automation-id]=\"period\">{{period}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"increments\" *ngIf=\"!analog\">\n            <novo-list direction=\"vertical\" data-automation-id=\"novo-time-picker-increments\">\n                <novo-list-item *ngFor=\"let increment of increments\" (click)=\"setValue($event, increment)\" [class.active]=\"increment==selected\" [attr.data-automation-id]=\"increment\">\n                    <item-content>{{increment}}</item-content>\n                    <i *ngIf=\"increment==selected\" class=\"bhi-check\"></i>\n                </novo-list-item>\n            </novo-list>\n        </div>\n        <div class=\"analog\" *ngIf=\"analog\">\n            <div class=\"analog--inner\">\n                <div class=\"analog--face\">\n                    <span class=\"analog--center\"></span>\n                    <span class=\"analog--hand--hours\" [ngClass]=\"hoursClass\">\n                        <span class=\"analog--ball\"></span>\n                    </span>\n                    <span class=\"analog--hand--minutes\" [ngClass]=\"minutesClass\">\n                        <span class=\"analog--ball\" [ngClass]=\"{between: inBetween}\"></span>\n                    </span>\n                </div>\n                <div class=\"analog--hours\">\n                    <span *ngFor=\"let hour of HOURS\" class=\"analog--hour\" [ngClass]=\"{active: activeHour == hour}\" (click)=\"setHours($event, hour, true)\" [attr.data-automation-id]=\"hour\">{{hour}}</span>\n                </div>\n                <div class=\"analog--minutes\">\n                    <span *ngFor=\"let minute of MINUTES\" class=\"analog--minute\" [ngClass]=\"{active: activeMinute == minute}\" (click)=\"setMinutes($event, minute, true)\" [attr.data-automation-id]=\"minute\">{{minute}}</span>\n                </div>\n            </div>\n        </div>\n    `,\n    host: {\n        '[class.military]': 'military'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'military': [{ type: Input },],\n'analog': [{ type: Input },],\n'inline': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction NovoTimePickerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTimePickerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTimePickerElement.ctorParameters;\n/** @type {?} */\nNovoTimePickerElement.propDecorators;\n/** @type {?} */\nNovoTimePickerElement.prototype.military;\n/** @type {?} */\nNovoTimePickerElement.prototype.analog;\n/** @type {?} */\nNovoTimePickerElement.prototype.inline;\n/** @type {?} */\nNovoTimePickerElement.prototype.onSelect;\n/** @type {?} */\nNovoTimePickerElement.prototype.hours;\n/** @type {?} */\nNovoTimePickerElement.prototype.minutes;\n/** @type {?} */\nNovoTimePickerElement.prototype.value;\n/** @type {?} */\nNovoTimePickerElement.prototype.meridian;\n/** @type {?} */\nNovoTimePickerElement.prototype.inBetween;\n/** @type {?} */\nNovoTimePickerElement.prototype.hoursClass;\n/** @type {?} */\nNovoTimePickerElement.prototype.activeHour;\n/** @type {?} */\nNovoTimePickerElement.prototype.minutesClass;\n/** @type {?} */\nNovoTimePickerElement.prototype.activeMinute;\n/** @type {?} */\nNovoTimePickerElement.prototype.increments;\n/** @type {?} */\nNovoTimePickerElement.prototype.selected;\n/** @type {?} */\nNovoTimePickerElement.prototype.MERIDIANS;\n/** @type {?} */\nNovoTimePickerElement.prototype.MINUTES;\n/** @type {?} */\nNovoTimePickerElement.prototype.HOURS;\n/** @type {?} */\nNovoTimePickerElement.prototype.model;\n/** @type {?} */\nNovoTimePickerElement.prototype._onChange;\n/** @type {?} */\nNovoTimePickerElement.prototype._onTouched;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  Output,\n  OnInit,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ENTER, ESCAPE, TAB } from '@angular/cdk/keycodes';\n// Vendor\n\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\n// App\n\nimport { NovoOverlayTemplateComponent } from '../overlay/Overlay';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoTimePickerInputElement),\n  multi: true,\n};\nexport class NovoTimePickerInputElement implements OnInit, ControlValueAccessor {\npublic value: any;\npublic formattedValue: string = '';\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n\n  \n  name: string;\n  \n  placeholder: string;\n  \n  military: boolean = false;\n  \n  maskOptions: any;\n  \n  \n  disabled: boolean = false;\n  \n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  \n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n/**\n * Element for the panel containing the autocomplete options.\n */\noverlay: NovoOverlayTemplateComponent;\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} dateFormatService\n * @param {?} _changeDetectorRef\n */\nconstructor(\npublic element: ElementRef,\npublic labels: NovoLabelService,\npublic dateFormatService: DateFormatService,\n    protected _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.placeholder = this.military ? this.labels.timeFormatPlaceholder24Hour : this.labels.timeFormatPlaceholderAM;\n    this.maskOptions = {\n      mask: this.military ? [/\\d/, /\\d/, ':', /\\d/, /\\d/] : [/\\d/, /\\d/, ':', /\\d/, /\\d/, ' ', /[aApP]/, /[mM]/],\n      pipe: this.military ? createAutoCorrectedDatePipe('HH:MM') : createAutoCorrectedDatePipe('mm:MM'),\n      keepCharPositions: false,\n      guide: true,\n    };\n  }\n/**\n * BEGIN: Convenient Panel Methods.\n * @return {?}\n */\nopenPanel(): void {\n    if (!this.overlay.panelOpen) {\n      this.overlay.openPanel();\n      let /** @type {?} */ hour = new Date().getHours();\n      Promise.resolve(null).then(() => this.scrollToIndex(hour * 4));\n    }\n  }\n/**\n * @return {?}\n */\nclosePanel(): void {\n    this.overlay.closePanel();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this.overlay && this.overlay.panelOpen;\n  }\n/**\n * END: Convenient Panel Methods.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ESCAPE || event.keyCode === ENTER || event.keyCode === TAB) && this.panelOpen) {\n      this.closePanel();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleInput(event: KeyboardEvent): void {\n    if (document.activeElement === event.target) {\n      // this._onChange((event.target as HTMLInputElement).value);\n      let /** @type {?} */ text = ( /** @type {?} */((event.target as HTMLInputElement))).value;\n      if (this.military ? text.replace(/_/g, '').length === 5 : text.replace(/_/g, '').length === 8) {\n        let [dateTimeValue, formatted] = this.dateFormatService.parseString(text, this.military, 'time');\n        this.dispatchOnChange(dateTimeValue);\n      } else {\n        this.dispatchOnChange(null);\n      }\n      this.openPanel();\n      let /** @type {?} */ num = Number(text.split(':')[0]);\n      this.scrollToIndex(num * 4);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleFocus(event: FocusEvent): void {\n    this.openPanel();\n    this.focusEvent.emit(event);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n/**\n * @param {?=} newValue\n * @param {?=} skip\n * @return {?}\n */\npublic dispatchOnChange(newValue?: any, skip: boolean = false) {\n    if (newValue !== this.value) {\n      this._onChange(newValue);\n      !skip && this.writeValue(newValue);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setTriggerValue(value: any): void {\n    if (value instanceof Date && this.value instanceof Date) {\n      value = new Date(value.setFullYear(this.value.getFullYear(), this.value.getMonth(), this.value.getDate()));\n    }\n    this.value = value;\n    if (this.value) {\n      this.formattedValue = this.formatDateValue(this.value);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic setValue(event: any | null): void {\n    if (event && event.date) {\n      this.dispatchOnChange(event.date);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic setValueAndClose(event: any | null): void {\n    this.setValue(event);\n    this.closePanel();\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @return {?}\n */\npublic clearValue() {\n    this.formattedValue = '';\n    this.dispatchOnChange(null);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic formatDateValue(value) {\n    if (!value) {\n      return '';\n    }\n    let /** @type {?} */ format = this.labels.formatDateWithFormat(value, {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: !this.military,\n    });\n    if (format.split(':')[0].length === 1) {\n      return `0${format}`;\n    }\n    return format;\n  }\n/**\n * @return {?}\n */\npublic get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\npublic scrollToIndex(index: number) {\n    let /** @type {?} */ element = this.overlay.overlayRef.overlayElement;\n    let /** @type {?} */ list = element.querySelector('.increments');\n    let /** @type {?} */ items = list.querySelectorAll('novo-list-item');\n    let /** @type {?} */ item = items[index];\n    if (item) {\n      list.scrollTop = ( /** @type {?} */((item as HTMLElement))).offsetTop;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-time-picker-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n    <input type=\"text\" [name]=\"name\" [(ngModel)]=\"formattedValue\" [textMask]=\"maskOptions\" [placeholder]=\"placeholder\" (focus)=\"_handleFocus($event)\"\n           (keydown)=\"_handleKeydown($event)\" (input)=\"_handleInput($event)\" (blur)=\"_handleBlur($event)\" #input data-automation-id=\"time-input\" [disabled]=\"disabled\"/>\n    <i *ngIf=\"!hasValue\" (click)=\"openPanel()\" class=\"bhi-clock\"></i>\n    <i *ngIf=\"hasValue\" (click)=\"clearValue()\" class=\"bhi-times\"></i>\n\n    <novo-overlay-template [parent]=\"element\" position=\"above-below\">\n      <novo-time-picker inline=\"true\" (onSelect)=\"setValue($event)\" [ngModel]=\"value\" [military]=\"military\"></novo-time-picker>\n    </novo-overlay-template>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: DateFormatService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'military': [{ type: Input },],\n'maskOptions': [{ type: Input },],\n'disabled': [{ type: HostBinding, args: ['class.disabled', ] },{ type: Input },],\n'blurEvent': [{ type: Output },],\n'focusEvent': [{ type: Output },],\n'overlay': [{ type: ViewChild, args: [NovoOverlayTemplateComponent, ] },],\n};\n}\n\nfunction NovoTimePickerInputElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTimePickerInputElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTimePickerInputElement.ctorParameters;\n/** @type {?} */\nNovoTimePickerInputElement.propDecorators;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.value;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.formattedValue;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nNovoTimePickerInputElement.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nNovoTimePickerInputElement.prototype._onTouched;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.name;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.placeholder;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.military;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.maskOptions;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.disabled;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.blurEvent;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.focusEvent;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nNovoTimePickerInputElement.prototype.overlay;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.element;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.labels;\n/** @type {?} */\nNovoTimePickerInputElement.prototype.dateFormatService;\n/** @type {?} */\nNovoTimePickerInputElement.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// Vendor\n\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\n\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nimport { NovoListModule } from '../list/List.module';\nimport { NovoTimePickerElement } from './TimePicker';\nimport { NovoTimePickerInputElement } from './TimePickerInput';\nexport class NovoTimePickerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, TextMaskModule, NovoOverlayModule, NovoListModule],\n    declarations: [NovoTimePickerElement, NovoTimePickerInputElement],\n    exports: [NovoTimePickerElement, NovoTimePickerInputElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { ElementRef, Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// Vendor\n\nimport * as dateFns from 'date-fns';\n// APP\n\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ DATE_TIME_PICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDateTimePickerElement),\n  multi: true,\n};\nexport class NovoDateTimePickerElement implements ControlValueAccessor {\n   minYear: any;\n   maxYear: any;\n   start: any;\n   end: any;\n   military: any;\n\n  // Select callback for output\n   onSelect: EventEmitter<any> = new EventEmitter(false);\n\n  componentTabState: string = 'date';\n  selectedLabel: string;\n  hours: string;\n  minutes: string;\n  meridian: string;\n  datePickerValue: Date = new Date();\n  timePickerValue: Date = new Date();\n\n  model: any;\n  _onChange: Function = () => {};\n  _onTouched: Function = () => {};\n/**\n * @param {?} labels\n * @param {?} element\n */\nconstructor(public labels: NovoLabelService,\nprivate element: ElementRef) {}\n/**\n * @param {?} tab\n * @return {?}\n */\ntoggleView(tab: string): void {\n    this.componentTabState = tab;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nsetDateLabels(value: Date) {\n    this.selectedLabel = this.labels.formatDateWithFormat(value, {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric',\n    });\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nsetTimeLabels(value: Date) {\n    let /** @type {?} */ hours = value.getHours();\n    let /** @type {?} */ minutes = value.getMinutes();\n\n    this.meridian = value.toLocaleTimeString().slice(-2);\n\n    if (!this.military) {\n      hours = this.meridian === 'PM' && hours > 12 ? hours - 12 : hours;\n\n      // Special case for 12\n      if (this.meridian === 'PM' && hours === 24) {\n        hours = 12;\n      } else if (this.meridian === 'AM' && hours === 0) {\n        hours = 12;\n      }\n    }\n\n    this.hours = hours.toString().length === 1 ? `0${hours.toString()}` : hours.toString();\n    this.minutes = minutes.toString().length === 1 ? `0${minutes.toString()}` : minutes.toString();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDateSelected(event: { month?: any; year?: any; day?: any; date?: Date }) {\n    this.datePickerValue = event.date;\n    this.model = this.createFullDateValue(this.datePickerValue, this.timePickerValue);\n    this.setDateLabels(this.model);\n    this.onSelect.emit({ date: this.model });\n    this._onChange(this.model);\n    this.toggleView('time');\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonTimeSelected(event: { hours?: number; minutes?: number; meridian?: string; date?: Date; text?: string }) {\n    this.timePickerValue = event.date;\n    this.model = this.createFullDateValue(this.model, this.timePickerValue);\n    this.setTimeLabels(this.model);\n    this.onSelect.emit({ date: this.model });\n    this._onChange(this.model);\n  }\n/**\n * @param {?} datePickerValue\n * @param {?} timePickerValue\n * @return {?}\n */\ncreateFullDateValue(datePickerValue: Date, timePickerValue: Date) {\n    return dateFns.setMilliseconds(\n      dateFns.setSeconds(\n        dateFns.setMinutes(dateFns.setHours(datePickerValue, dateFns.getHours(timePickerValue)), dateFns.getMinutes(timePickerValue)),\n        dateFns.getSeconds(timePickerValue),\n      ),\n      dateFns.getMilliseconds(timePickerValue),\n    );\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n    if (Helpers.isEmpty(model)) {\n      this.model = new Date();\n    } else if (!isNaN(model)) {\n      this.model = new Date(model);\n    }\n    this.datePickerValue = this.model;\n    this.timePickerValue = this.model;\n    if (Helpers.isDate(this.model)) {\n      this.setDateLabels(this.model);\n      this.setTimeLabels(this.model);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this._onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this._onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-date-time-picker',\n  providers: [DATE_TIME_PICKER_VALUE_ACCESSOR],\n  animations: [\n    trigger('dateTextState', [\n      state(\n        'date',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n    trigger('timeTextState', [\n      state(\n        'date',\n        style({\n          opacity: '0.6',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          opacity: '1.0',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n    trigger('indicatorState', [\n      state(\n        'date',\n        style({\n          transform: 'translateX(0%)',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          transform: 'translateX(100%)',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n    trigger('containerState', [\n      state(\n        'date',\n        style({\n          transform: 'translateX(0%)',\n        }),\n      ),\n      state(\n        'time',\n        style({\n          transform: 'translateX(-100%)',\n        }),\n      ),\n      transition('date <=> time', animate('200ms ease-in')),\n    ]),\n  ],\n  template: `\n        <div class=\"date-time-container\">\n            <div class=\"date-time-tabs\">\n                <span class=\"date-tab\" (click)=\"toggleView('date')\" [@dateTextState]=\"componentTabState\" data-automation-id=\"novo-date-time-date-tab\">{{selectedLabel}}</span>\n                <span class=\"time-tab\" (click)=\"toggleView('time')\" [@timeTextState]=\"componentTabState\" data-automation-id=\"novo-date-time-time-tab\">\n                    <span class=\"hours\" data-automation-id=\"novo-time-picker-hours\">{{hours}}</span>:<span\n                    class=\"minutes\" data-automation-id=\"novo-time-picker-minutes\">{{minutes}}</span>\n                    <span *ngIf=\"!military\" class=\"meridian\">{{meridian}}</span>\n                </span>\n                <i class=\"date-time-indicator\" [@indicatorState]=\"componentTabState\"></i>\n            </div>\n            <div class=\"view-container\" [@containerState]=\"componentTabState\">\n                <div class=\"calendar\">\n                    <novo-date-picker (onSelect)=\"onDateSelected($event)\" [(ngModel)]=\"model\" inline=\"true\" [minYear]=\"minYear\" [maxYear]=\"maxYear\" [start]=\"start\" [end]=\"end\"></novo-date-picker>\n                </div>\n                <div class=\"time-picker\">\n                    <novo-time-picker (onSelect)=\"onTimeSelected($event)\" [(ngModel)]=\"model\" [military]=\"military\" inline=\"true\"></novo-time-picker>\n                </div>\n            </div>\n        </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minYear': [{ type: Input },],\n'maxYear': [{ type: Input },],\n'start': [{ type: Input },],\n'end': [{ type: Input },],\n'military': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction NovoDateTimePickerElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDateTimePickerElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDateTimePickerElement.ctorParameters;\n/** @type {?} */\nNovoDateTimePickerElement.propDecorators;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.minYear;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.maxYear;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.start;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.end;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.military;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.onSelect;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.componentTabState;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.selectedLabel;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.hours;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.minutes;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.meridian;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.datePickerValue;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.timePickerValue;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.model;\n/** @type {?} */\nNovoDateTimePickerElement.prototype._onChange;\n/** @type {?} */\nNovoDateTimePickerElement.prototype._onTouched;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.labels;\n/** @type {?} */\nNovoDateTimePickerElement.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG\n\nimport { ChangeDetectorRef, Component, ElementRef, forwardRef, Host, Input, Output, Inject, ViewChild, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TAB, ENTER, ESCAPE } from '@angular/cdk/keycodes';\n// Vendor\n\nimport { parse, isDate } from 'date-fns';\n// App\n\nimport { NovoDateTimePickerElement } from './DateTimePicker';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ DATE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoDateTimePickerInputElement),\n  multi: true,\n};\nexport class NovoDateTimePickerInputElement implements ControlValueAccessor {\npublic value: any;\npublic datePart: any;\npublic timePart: any;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n\n  \n  name: string;\n  \n  start: Date;\n  \n  end: Date;\n  \n  placeholder: string;\n  \n  maskOptions: any;\n  \n  military: boolean = false;\n  \n  disabled: boolean = false;\n  \n  format: string;\n  \n  blurEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  \n  focusEvent: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} _changeDetectorRef\n */\nconstructor(public element: ElementRef,\npublic labels: NovoLabelService,\nprivate _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.datePart = isDate(value) ? parse(value) : value;\n    this.timePart = isDate(value) ? parse(value) : value;\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nupdateDate(event) {\n    this.datePart = event;\n    this.checkParts();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nupdateTime(event) {\n    this.timePart = event;\n    this.checkParts();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleBlur(event) {\n    this.blurEvent.emit(event);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleFocus(event) {\n    this.focusEvent.emit(event);\n  }\n/**\n * @return {?}\n */\ncheckParts() {\n    try {\n      if (this.datePart instanceof Date && this.timePart instanceof Date) {\n        let /** @type {?} */ newDt = new Date(\n          this.datePart.getFullYear(),\n          this.datePart.getMonth(),\n          this.datePart.getDate(),\n          this.timePart.getHours(),\n          this.timePart.getMinutes(),\n        );\n        this.dispatchOnChange(newDt);\n      } else {\n        this.dispatchOnChange(null);\n      }\n    } catch ( /** @type {?} */err) {\n      // Date not valid\n      this.dispatchOnChange(null);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n/**\n * @param {?=} newValue\n * @return {?}\n */\npublic dispatchOnChange(newValue?: any) {\n    if (newValue !== this.value) {\n      this._onChange(newValue);\n      this._setTriggerValue(newValue);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setTriggerValue(value: any): void {\n    this.value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic setValue(event: any | null): void {\n    if (event && event.date) {\n      this.dispatchOnChange(event.date);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic setValueAndClose(event: any | null): void {\n    this.setValue(event);\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @return {?}\n */\npublic clearValue() {\n    this.dispatchOnChange(null);\n  }\n/**\n * @return {?}\n */\npublic get hasValue() {\n    return !Helpers.isEmpty(this.value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-date-time-picker-input',\n  providers: [DATE_VALUE_ACCESSOR],\n  template: `\n        <novo-date-picker-input [ngModel]=\"datePart\" (ngModelChange)=\"updateDate($event)\" [start]=\"start\" [end]=\"end\" [maskOptions]=\"maskOptions\" (blurEvent)=\"handleBlur($event)\" (focusEvent)=\"handleFocus($event)\" [disabled]=\"disabled\"></novo-date-picker-input>\n        <novo-time-picker-input [ngModel]=\"timePart\" (ngModelChange)=\"updateTime($event)\" [military]=\"military\" (blurEvent)=\"handleBlur($event)\" (focusEvent)=\"handleFocus($event)\" [disabled]=\"disabled\"></novo-time-picker-input>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'start': [{ type: Input },],\n'end': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'maskOptions': [{ type: Input },],\n'military': [{ type: Input },],\n'disabled': [{ type: Input },],\n'format': [{ type: Input },],\n'blurEvent': [{ type: Output },],\n'focusEvent': [{ type: Output },],\n};\n}\n\nfunction NovoDateTimePickerInputElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDateTimePickerInputElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDateTimePickerInputElement.ctorParameters;\n/** @type {?} */\nNovoDateTimePickerInputElement.propDecorators;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.value;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.datePart;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.timePart;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nNovoDateTimePickerInputElement.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nNovoDateTimePickerInputElement.prototype._onTouched;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.name;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.start;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.end;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.placeholder;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.maskOptions;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.military;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.disabled;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.format;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.blurEvent;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.focusEvent;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.element;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype.labels;\n/** @type {?} */\nNovoDateTimePickerInputElement.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// Vendor\n\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\n\nimport { NovoOverlayModule } from '../overlay/Overlay.module';\nimport { NovoDateTimePickerElement } from './DateTimePicker';\nimport { NovoDateTimePickerInputElement } from './DateTimePickerInput';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoTimePickerModule } from '../time-picker/TimePicker.module';\nexport class NovoDateTimePickerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule, NovoDatePickerModule, NovoTimePickerModule, TextMaskModule, NovoOverlayModule],\n    declarations: [NovoDateTimePickerElement, NovoDateTimePickerInputElement],\n    exports: [NovoDateTimePickerElement, NovoDateTimePickerInputElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoDateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, Output, ViewChild, EventEmitter, NgZone, forwardRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ CKEDITOR_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoCKEditorElement),\n  multi: true,\n};\n\ndeclare var CKEDITOR: any;\n/**\n * CKEditor component\n * Usage :\n *  <novo-editor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></novo-editor>\n */\nexport class NovoCKEditorElement implements OnDestroy, AfterViewInit, ControlValueAccessor {\n  \n  config;\n  \n  debounce;\n  \n  name;\n  \n  minimal;\n  \n  startupFocus: boolean = false;\n  \n  fileBrowserImageUploadUrl: string = '';\n  \n  disabled: boolean = false;\n\n  \n  change = new EventEmitter();\n  \n  ready = new EventEmitter();\n  \n  blur = new EventEmitter();\n  \n  focus = new EventEmitter();\n  \n  paste = new EventEmitter();\n  \n  loaded = new EventEmitter();\n  \n  host;\n\n  _value: string = '';\n  instance;\n  debounceTimeout;\n/**\n * @param {?} zone\n */\nconstructor(private zone: NgZone) {}\n/**\n * @return {?}\n */\nget value() {\n    return this._value;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this.instance) {\n      this.instance.focusManager.blur(true); // Remove focus from editor\n      setTimeout(() => {\n        this.instance.removeAllListeners();\n        CKEDITOR.instances[this.instance.name].destroy();\n        this.instance.destroy();\n        this.instance = null;\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    let /** @type {?} */ config = this.config || this.getBaseConfig();\n    if (this.startupFocus) {\n      config.startupFocus = true;\n    }\n    if (this.disabled) {\n      config.readOnly = true;\n    }\n    this.ckeditorInit(config);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nupdateValue(value) {\n    this.zone.run(() => {\n      this.value = value;\n      this.onChange(value);\n      this.onTouched();\n      this.change.emit(value);\n    });\n  }\n/**\n * @param {?} config\n * @return {?}\n */\nckeditorInit(config) {\n    if (!CKEDITOR) {\n      console.error('Make sure to include CKEditor sources in your dependencies!');\n      return;\n    }\n\n    // CKEditor replace textarea\n    this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n\n    // Set initial value\n    this.instance.setData(this.value);\n\n    // listen for instanceReady event\n    this.instance.on('instanceReady', (evt) => {\n      // send the evt to the EventEmitter\n      this.ready.emit(evt);\n    });\n\n    // CKEditor change event\n    this.instance.on('change', () => {\n      this.onTouched();\n      let /** @type {?} */ value = this.instance.getData();\n\n      // Debounce update\n      if (this.debounce) {\n        if (this.debounceTimeout) {\n          clearTimeout(this.debounceTimeout);\n        }\n        this.debounceTimeout = setTimeout(() => {\n          this.updateValue(value);\n          this.debounceTimeout = null;\n        }, parseInt(this.debounce));\n      } else {\n        this.updateValue(value);\n      }\n    });\n    this.instance.on('blur', (event) => {\n      this.blur.emit(event);\n    });\n    this.instance.on('focus', (event) => {\n      this.focus.emit(event);\n    });\n    this.instance.on('paste', (event) => {\n      this.paste.emit(event);\n    });\n    this.instance.on('loaded', (event) => {\n      this.loaded.emit(event);\n    });\n  }\n/**\n * @return {?}\n */\ngetBaseConfig() {\n    const /** @type {?} */ baseConfig = {\n      enterMode: CKEDITOR.ENTER_BR,\n      shiftEnterMode: CKEDITOR.ENTER_P,\n      disableNativeSpellChecker: false,\n      removePlugins: 'liststyle,tabletools,contextmenu', // allows browser based spell checking\n      extraAllowedContent: '*(*){*};table tbody tr td th[*];', // allows class names (*) and inline styles {*} for all and attributes [*] on tables\n      font_names:\n        'Arial/Arial, Helvetica, sans-serif;' +\n        'Calibri/Calibri, Verdana, Geneva, sans-serif;' +\n        'Comic Sans MS/Comic Sans MS, cursive;' +\n        'Courier New/Courier New, Courier, monospace;' +\n        'Georgia/Georgia, serif;' +\n        'Lucida Sans Unicode/Lucida Sans Unicode, Lucida Grande, sans-serif;' +\n        'Tahoma/Tahoma, Geneva, sans-serif;' +\n        'Times New Roman/Times New Roman, Times, serif;' +\n        'Trebuchet MS/Trebuchet MS, Helvetica, sans-serif;' +\n        'Verdana/Verdana, Geneva, sans-serif',\n    };\n\n    const /** @type {?} */ minimalConfig = {\n      toolbar: [\n        {\n          name: 'basicstyles',\n          items: [\n            'Styles',\n            'FontSize',\n            'Bold',\n            'Italic',\n            'Underline',\n            'TextColor',\n            '-',\n            'NumberedList',\n            'BulletedList',\n            'Outdent',\n            'Indent',\n            'Link',\n          ],\n        },\n      ],\n    };\n\n    const /** @type {?} */ extendedConfig = {\n      toolbar: [\n        { name: 'clipboard', items: ['Paste', 'PasteText', 'PasteFromWord', 'Undo', 'Redo'] },\n        {\n          name: 'paragraph',\n          items: [\n            'NumberedList',\n            'BulletedList',\n            'Outdent',\n            'Indent',\n            'Blockquote',\n            'JustifyLeft',\n            'JustifyCenter',\n            'JustifyRight',\n            'JustifyBlock',\n            'BidiLtr',\n            'BidiRtl',\n          ],\n        },\n        { name: 'links', items: ['Link'] },\n        { name: 'insert', items: ['Image', 'Table', 'HorizontalRule'] },\n        { name: 'tools', items: ['Maximize', 'Source'] },\n        '/', // line break\n        { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'] },\n        { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n        { name: 'colors', items: ['TextColor', 'BGColor'] },\n      ],\n      filebrowserImageUploadUrl: this.fileBrowserImageUploadUrl,\n    };\n\n    return Object.assign(baseConfig, this.minimal ? minimalConfig : extendedConfig);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) {\n    this._value = value;\n    if (this.instance) {\n      this.instance.setData(value);\n    }\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nonChange(value?: any) {}\n/**\n * @param {?=} event\n * @return {?}\n */\nonTouched(event?) {}\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn) {\n    this.onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn) {\n    this.onTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n    if (this.instance) {\n      CKEDITOR.instances[this.instance.name].setReadOnly(disabled);\n    }\n  }\n/**\n * @param {?} text\n * @return {?}\n */\ninsertText(text) {\n    let /** @type {?} */ trimmedText = text.trim();\n    this.instance.insertText(trimmedText);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-editor',\n  providers: [CKEDITOR_CONTROL_VALUE_ACCESSOR],\n  template: '<textarea [name]=\"name\" [id]=\"name\" #host></textarea>',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'debounce': [{ type: Input },],\n'name': [{ type: Input },],\n'minimal': [{ type: Input },],\n'startupFocus': [{ type: Input },],\n'fileBrowserImageUploadUrl': [{ type: Input },],\n'disabled': [{ type: Input },],\n'change': [{ type: Output },],\n'ready': [{ type: Output },],\n'blur': [{ type: Output },],\n'focus': [{ type: Output },],\n'paste': [{ type: Output },],\n'loaded': [{ type: Output },],\n'host': [{ type: ViewChild, args: ['host', ] },],\n'value': [{ type: Input },],\n};\n}\n\nfunction NovoCKEditorElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCKEditorElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCKEditorElement.ctorParameters;\n/** @type {?} */\nNovoCKEditorElement.propDecorators;\n/** @type {?} */\nNovoCKEditorElement.prototype.config;\n/** @type {?} */\nNovoCKEditorElement.prototype.debounce;\n/** @type {?} */\nNovoCKEditorElement.prototype.name;\n/** @type {?} */\nNovoCKEditorElement.prototype.minimal;\n/** @type {?} */\nNovoCKEditorElement.prototype.startupFocus;\n/** @type {?} */\nNovoCKEditorElement.prototype.fileBrowserImageUploadUrl;\n/** @type {?} */\nNovoCKEditorElement.prototype.disabled;\n/** @type {?} */\nNovoCKEditorElement.prototype.change;\n/** @type {?} */\nNovoCKEditorElement.prototype.ready;\n/** @type {?} */\nNovoCKEditorElement.prototype.blur;\n/** @type {?} */\nNovoCKEditorElement.prototype.focus;\n/** @type {?} */\nNovoCKEditorElement.prototype.paste;\n/** @type {?} */\nNovoCKEditorElement.prototype.loaded;\n/** @type {?} */\nNovoCKEditorElement.prototype.host;\n/** @type {?} */\nNovoCKEditorElement.prototype._value;\n/** @type {?} */\nNovoCKEditorElement.prototype.instance;\n/** @type {?} */\nNovoCKEditorElement.prototype.debounceTimeout;\n/** @type {?} */\nNovoCKEditorElement.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoCKEditorElement } from './CKEditor';\nexport class NovoNovoCKEditorModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, FormsModule],\n    declarations: [NovoCKEditorElement],\n    exports: [NovoCKEditorElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoNovoCKEditorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoNovoCKEditorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoNovoCKEditorModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n// APP\n\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class NovoTipWellElement implements OnInit {\n  \n  name: string | number;\n  \n  tip: string;\n  \n  buttonText: string;\n  \n  button: boolean = true;\n  \n  icon: string;\n  \n  sanitize: boolean = true;\n  \n  confirmed = new EventEmitter();\n\n  isActive: boolean = true;\n  isLocalStorageEnabled: any;\n  localStorageKey: string;\n/**\n * @param {?} labels\n */\nconstructor(private labels: NovoLabelService) {\n    this.isActive = true;\n    // Check if localStorage is enabled\n    this.isLocalStorageEnabled = (() => {\n      let isEnabled = false;\n      if (typeof localStorage === 'object') {\n        try {\n          localStorage.setItem('lsTest', '1');\n          localStorage.removeItem('lsTest');\n          isEnabled = true;\n        } catch (e) {\n          console.warn(\n            'This web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.',\n          );\n        }\n      }\n      return isEnabled;\n    })();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.tip = this.tip || '';\n    this.buttonText = this.buttonText || this.labels.okGotIt;\n    this.button = typeof this.button === 'string' ? this.button === 'true' : this.button;\n    this.icon = this.icon || null;\n    // Set a (semi) unique name for the tip-well\n    this.name = this.name || Math.round(Math.random() * 100);\n    this.localStorageKey = `novo-tw_${this.name}`;\n    // Check localStorage for state\n    if (this.isLocalStorageEnabled) {\n      let /** @type {?} */ storedValue = JSON.parse(localStorage.getItem(this.localStorageKey));\n      this.isActive = storedValue !== false;\n    }\n  }\n/**\n * \\@name hideTip\n * @return {?}\n */\nhideTip() {\n    if (this.isLocalStorageEnabled) {\n      localStorage.setItem(this.localStorageKey, JSON.stringify(false));\n    }\n    this.isActive = false;\n    this.confirmed.emit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-tip-well',\n  template: `\n        <div *ngIf=\"isActive\">\n            <div>\n                <i class=\"bhi-{{ icon }}\" *ngIf=\"icon\" [attr.data-automation-id]=\"'novo-tip-well-icon-' + name\"></i>\n                <p *ngIf=\"sanitize\" [attr.data-automation-id]=\"'novo-tip-well-tip-' + name\">{{ tip }}</p>\n                <p *ngIf=\"!sanitize\" [attr.data-automation-id]=\"'novo-tip-well-tip-' + name\" [innerHTML]=\"tip\"></p>\n            </div>\n            <button theme=\"dialogue\" (click)=\"hideTip()\" *ngIf=\"button\" [attr.data-automation-id]=\"'novo-tip-well-button-' + name\">{{ buttonText }}</button>\n        </div>\n    `,\n  host: {\n    '[class.active]': 'isActive',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'tip': [{ type: Input },],\n'buttonText': [{ type: Input },],\n'button': [{ type: Input },],\n'icon': [{ type: Input },],\n'sanitize': [{ type: Input },],\n'confirmed': [{ type: Output },],\n};\n}\n\nfunction NovoTipWellElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTipWellElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTipWellElement.ctorParameters;\n/** @type {?} */\nNovoTipWellElement.propDecorators;\n/** @type {?} */\nNovoTipWellElement.prototype.name;\n/** @type {?} */\nNovoTipWellElement.prototype.tip;\n/** @type {?} */\nNovoTipWellElement.prototype.buttonText;\n/** @type {?} */\nNovoTipWellElement.prototype.button;\n/** @type {?} */\nNovoTipWellElement.prototype.icon;\n/** @type {?} */\nNovoTipWellElement.prototype.sanitize;\n/** @type {?} */\nNovoTipWellElement.prototype.confirmed;\n/** @type {?} */\nNovoTipWellElement.prototype.isActive;\n/** @type {?} */\nNovoTipWellElement.prototype.isLocalStorageEnabled;\n/** @type {?} */\nNovoTipWellElement.prototype.localStorageKey;\n/** @type {?} */\nNovoTipWellElement.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoTipWellElement } from './TipWell';\nexport class NovoTipWellModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, NovoButtonModule],\n    declarations: [NovoTipWellElement],\n    exports: [NovoTipWellElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTipWellModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTipWellModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTipWellModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, QueryList } from '@angular/core';\n// App\n\nimport { NovoTemplate } from '../../elements/common/novo-template/novo-template.directive';\nimport { Helpers } from '../../utils/Helpers';\nexport class NovoTemplateService {\n  templates: any = {\n    default: {},\n    custom: {},\n  };\nconstructor() { }\n/**\n * @return {?}\n */\ngetAll(): any {\n    let /** @type {?} */ templates: any = {};\n    const /** @type {?} */ customTemplateTypes: string[] = Object.keys(this.templates.custom);\n    const /** @type {?} */ defaultTemplateTypes: string[] = Object.keys(this.templates.default);\n    defaultTemplateTypes.forEach((type: string) => {\n      templates[type] = this.templates.default[type];\n    });\n    customTemplateTypes.forEach((type: string) => {\n      templates[type] = this.templates.custom[type];\n    });\n    return templates;\n  }\n/**\n * @param {?} key\n * @param {?} template\n * @return {?}\n */\naddDefault(key: string, template: any): void {\n    this.templates.default[key] = template;\n  }\n/**\n * @param {?} key\n * @param {?} template\n * @return {?}\n */\naddCustom(key: string, template: any): void {\n    this.templates.custom[key] = template;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTemplateService_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTemplateService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTemplateService.ctorParameters;\n/** @type {?} */\nNovoTemplateService.prototype.templates;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\nexport class NovoTemplate {\n   type: string;\n   name: string;\n/**\n * @param {?} template\n */\nconstructor(public template: TemplateRef<any>) {}\n/**\n * @return {?}\n */\ngetType(): string {\n    return this.name;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[novoTemplate]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'name': [{ type: Input, args: ['novoTemplate', ] },],\n};\n}\n\nfunction NovoTemplate_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTemplate.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTemplate.ctorParameters;\n/** @type {?} */\nNovoTemplate.propDecorators;\n/** @type {?} */\nNovoTemplate.prototype.type;\n/** @type {?} */\nNovoTemplate.prototype.name;\n/** @type {?} */\nNovoTemplate.prototype.template;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ViewContainerRef, AfterViewInit, ElementRef, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n// APP\n\nimport { Helpers } from './../../utils/Helpers';\nimport { NovoFieldset, NovoFormGroup } from './FormInterfaces';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nexport class NovoFieldsetHeaderElement {\n   title: string;\n   icon: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-fieldset-header',\n  template: `\n        <h6><i [class]=\"icon || 'bhi-section'\"></i>{{title}}</h6>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: Input },],\n'icon': [{ type: Input },],\n};\n}\n\nfunction NovoFieldsetHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFieldsetHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoFieldsetHeaderElement.ctorParameters;\n/** @type {?} */\nNovoFieldsetHeaderElement.propDecorators;\n/** @type {?} */\nNovoFieldsetHeaderElement.prototype.title;\n/** @type {?} */\nNovoFieldsetHeaderElement.prototype.icon;\n}\n\nexport class NovoFieldsetElement {\n   controls: Array<any> = [];\n   form: any;\n   title: string;\n   icon: string;\n   index: number;\n   autoFocus: boolean;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-fieldset',\n  template: `\n        <div class=\"novo-fieldset-container\">\n            <novo-fieldset-header [icon]=\"icon\" [title]=\"title\" *ngIf=\"title\"></novo-fieldset-header>\n            <ng-container *ngFor=\"let control of controls;let controlIndex = index;\">\n                <div class=\"novo-form-row\" [class.disabled]=\"control.disabled\" *ngIf=\"control.__type !== 'GroupedControl'\">\n                    <novo-control [autoFocus]=\"autoFocus && index === 0 && controlIndex === 0\" [control]=\"control\" [form]=\"form\"></novo-control>\n                </div>\n                <div *ngIf=\"control.__type === 'GroupedControl'\">TODO - GroupedControl</div>\n            </ng-container>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'controls': [{ type: Input },],\n'form': [{ type: Input },],\n'title': [{ type: Input },],\n'icon': [{ type: Input },],\n'index': [{ type: Input },],\n'autoFocus': [{ type: Input },],\n};\n}\n\nfunction NovoFieldsetElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFieldsetElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoFieldsetElement.ctorParameters;\n/** @type {?} */\nNovoFieldsetElement.propDecorators;\n/** @type {?} */\nNovoFieldsetElement.prototype.controls;\n/** @type {?} */\nNovoFieldsetElement.prototype.form;\n/** @type {?} */\nNovoFieldsetElement.prototype.title;\n/** @type {?} */\nNovoFieldsetElement.prototype.icon;\n/** @type {?} */\nNovoFieldsetElement.prototype.index;\n/** @type {?} */\nNovoFieldsetElement.prototype.autoFocus;\n}\n\nexport class NovoDynamicFormElement implements OnChanges, OnInit, AfterContentInit {\n  \n  controls: Array<any> = [];\n  \n  fieldsets: Array<NovoFieldset> = [];\n  \n  form: NovoFormGroup;\n  \n  layout: string;\n  \n  hideNonRequiredFields: boolean = true;\n  \n  autoFocusFirstField: boolean = false;\n  \n  customTemplates: QueryList<NovoTemplate>;\n\n  allFieldsRequired = false;\n  allFieldsNotRequired = false;\n  showingAllFields = false;\n  showingRequiredFields = true;\n  numControls = 0;\n/**\n * @param {?} element\n * @param {?} templates\n */\nconstructor(private element: ElementRef,\nprivate templates: NovoTemplateService) {}\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this.ngOnChanges();\n  }\n/**\n * @param {?=} changes\n * @return {?}\n */\npublic ngOnChanges(changes?: SimpleChanges): void {\n    this.form.layout = this.layout;\n\n    if (!(this.fieldsets && this.fieldsets.length) && this.controls && this.controls.length) {\n      this.fieldsets = [\n        {\n          controls: this.controls,\n        },\n      ];\n      this.numControls = this.controls.length;\n    } else if (this.fieldsets) {\n      this.fieldsets.forEach((fieldset) => {\n        this.numControls = this.numControls + fieldset.controls.length;\n      });\n    }\n\n    let /** @type {?} */ requiredFields: Array<any> = [];\n    let /** @type {?} */ nonRequiredFields: Array<any> = [];\n    this.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        if (control.required) {\n          requiredFields.push(control);\n        } else {\n          nonRequiredFields.push(control);\n        }\n      });\n    });\n    this.allFieldsRequired = requiredFields.length === this.numControls;\n    this.allFieldsNotRequired = nonRequiredFields.length === this.numControls;\n    if (this.allFieldsNotRequired && this.hideNonRequiredFields) {\n      this.fieldsets.forEach((fieldset) => {\n        fieldset.controls.forEach((control) => {\n          this.form.controls[control.key].hidden = false;\n        });\n      });\n    }\n    this.form.fieldsets = [...this.fieldsets];\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this.customTemplates && this.customTemplates.length) {\n      this.customTemplates.forEach((template: any) => {\n        this.templates.addCustom(template.name, template.template);\n      });\n    }\n  }\n/**\n * @return {?}\n */\npublic showAllFields(): void {\n    this.form.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        this.form.controls[control.key].hidden = false;\n      });\n    });\n    this.showingAllFields = true;\n    this.showingRequiredFields = false;\n  }\n/**\n * @param {?} hideRequiredWithValue\n * @return {?}\n */\npublic showOnlyRequired(hideRequiredWithValue): void {\n    this.form.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        // Hide any non-required fields\n        if (!control.required) {\n          this.form.controls[control.key].hidden = true;\n        }\n\n        // Hide required fields that have been successfully filled out\n        if (\n          hideRequiredWithValue &&\n          !Helpers.isBlank(this.form.value[control.key]) &&\n          (!control.isEmpty || (control.isEmpty && control.isEmpty(this.form.controls[control.key])))\n        ) {\n          this.form.controls[control.key].hidden = true;\n        }\n\n        // Don't hide fields with errors\n        if (this.form.controls[control.key].errors) {\n          this.form.controls[control.key].hidden = false;\n        }\n      });\n    });\n    this.showingAllFields = false;\n    this.showingRequiredFields = true;\n    this.forceValidation();\n  }\n/**\n * @return {?}\n */\nget values() {\n    return this.form ? this.form.value : null;\n  }\n/**\n * @return {?}\n */\nget isValid() {\n    return this.form ? this.form.valid : false;\n  }\n/**\n * @return {?}\n */\npublic updatedValues(): any {\n    let /** @type {?} */ ret = null;\n    this.form.fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        if (this.form.controls[control.key].dirty || control.dirty) {\n          if (!ret) {\n            ret = {};\n          }\n          ret[control.key] = this.form.value[control.key];\n        }\n      });\n    });\n    return ret;\n  }\n/**\n * @return {?}\n */\npublic forceValidation(): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      let /** @type {?} */ control: any = this.form.controls[key];\n      if (control.required && Helpers.isBlank(this.form.value[control.key])) {\n        control.markAsDirty();\n        control.markAsTouched();\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-dynamic-form',\n  template: `\n        <novo-control-templates></novo-control-templates>\n        <div class=\"novo-form-container\">\n            <header>\n                <ng-content select=\"form-title\"></ng-content>\n                <ng-content select=\"form-subtitle\"></ng-content>\n            </header>\n            <form class=\"novo-form\" [formGroup]=\"form\">\n                <ng-container *ngFor=\"let fieldset of form.fieldsets;let i = index\">\n                    <novo-fieldset *ngIf=\"fieldset.controls.length\" [index]=\"i\" [autoFocus]=\"autoFocusFirstField\" [icon]=\"fieldset.icon\" [controls]=\"fieldset.controls\" [title]=\"fieldset.title\" [form]=\"form\"></novo-fieldset>\n                </ng-container>\n            </form>\n        </div>\n    `,\n  providers: [NovoTemplateService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoTemplateService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'controls': [{ type: Input },],\n'fieldsets': [{ type: Input },],\n'form': [{ type: Input },],\n'layout': [{ type: Input },],\n'hideNonRequiredFields': [{ type: Input },],\n'autoFocusFirstField': [{ type: Input },],\n'customTemplates': [{ type: ContentChildren, args: [NovoTemplate, ] },],\n};\n}\n\nfunction NovoDynamicFormElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDynamicFormElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDynamicFormElement.ctorParameters;\n/** @type {?} */\nNovoDynamicFormElement.propDecorators;\n/** @type {?} */\nNovoDynamicFormElement.prototype.controls;\n/** @type {?} */\nNovoDynamicFormElement.prototype.fieldsets;\n/** @type {?} */\nNovoDynamicFormElement.prototype.form;\n/** @type {?} */\nNovoDynamicFormElement.prototype.layout;\n/** @type {?} */\nNovoDynamicFormElement.prototype.hideNonRequiredFields;\n/** @type {?} */\nNovoDynamicFormElement.prototype.autoFocusFirstField;\n/** @type {?} */\nNovoDynamicFormElement.prototype.customTemplates;\n/** @type {?} */\nNovoDynamicFormElement.prototype.allFieldsRequired;\n/** @type {?} */\nNovoDynamicFormElement.prototype.allFieldsNotRequired;\n/** @type {?} */\nNovoDynamicFormElement.prototype.showingAllFields;\n/** @type {?} */\nNovoDynamicFormElement.prototype.showingRequiredFields;\n/** @type {?} */\nNovoDynamicFormElement.prototype.numControls;\n/** @type {?} */\nNovoDynamicFormElement.prototype.element;\n/** @type {?} */\nNovoDynamicFormElement.prototype.templates;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { AfterContentInit, Component, Input, OnInit, ContentChildren, QueryList } from '@angular/core';\n// APP\n\nimport { NovoFormGroup } from './FormInterfaces';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nexport class NovoFormElement implements AfterContentInit, OnInit {\n  \n  form: NovoFormGroup;\n  \n  layout: string;\n  \n  hideHeader: boolean = false;\n\n  \n  customTemplates: QueryList<NovoTemplate>;\npublic showingAllFields: boolean = false;\npublic showingRequiredFields: boolean = true;\n/**\n * @param {?} templates\n */\nconstructor(private templates: NovoTemplateService) {}\n/**\n * @return {?}\n */\nget value() {\n    return this.form.getRawValue();\n  }\n/**\n * @return {?}\n */\nget isValid() {\n    return this.form.valid;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.form.layout = this.layout;\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this.customTemplates && this.customTemplates.length) {\n      this.customTemplates.forEach((template: any) => {\n        this.templates.addCustom(template.name, template.template);\n      });\n    }\n  }\n/**\n * @return {?}\n */\npublic showAllFields(): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      this.form.controls[key].hidden = false;\n    });\n    this.showingAllFields = true;\n    this.showingRequiredFields = false;\n  }\n/**\n * @param {?} hideRequiredWithValue\n * @return {?}\n */\npublic showOnlyRequired(hideRequiredWithValue): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      // Hide any non-required fields\n      if (!this.form.controls[key].required) {\n        this.form.controls[key].hidden = true;\n      }\n\n      // Hide required fields that have been successfully filled out\n      if (hideRequiredWithValue && !Helpers.isBlank(this.form.value[key])) {\n        this.form.controls[key].hidden = true;\n      }\n\n      // Don't hide fields with errors\n      if (this.form.controls[key].errors) {\n        this.form.controls[key].hidden = false;\n      }\n    });\n    this.showingAllFields = false;\n    this.showingRequiredFields = true;\n    this.forceValidation();\n  }\n/**\n * @return {?}\n */\npublic forceValidation(): void {\n    Object.keys(this.form.controls).forEach((key: string) => {\n      let /** @type {?} */ control: any = this.form.controls[key];\n      if (control.required && Helpers.isBlank(this.form.value[control.key])) {\n        control.markAsDirty();\n        control.markAsTouched();\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-form',\n  template: `\n        <novo-control-templates></novo-control-templates>\n        <div class=\"novo-form-container\">\n            <header *ngIf=\"!hideHeader\">\n                <ng-content select=\"form-title\"></ng-content>\n                <ng-content select=\"form-subtitle\"></ng-content>\n            </header>\n            <form class=\"novo-form\" [formGroup]=\"form\">\n                <ng-content></ng-content>\n            </form>\n        </div>\n    `,\n  providers: [NovoTemplateService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoTemplateService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: Input },],\n'layout': [{ type: Input },],\n'hideHeader': [{ type: Input },],\n'customTemplates': [{ type: ContentChildren, args: [NovoTemplate, ] },],\n};\n}\n\nfunction NovoFormElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFormElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoFormElement.ctorParameters;\n/** @type {?} */\nNovoFormElement.propDecorators;\n/** @type {?} */\nNovoFormElement.prototype.form;\n/** @type {?} */\nNovoFormElement.prototype.layout;\n/** @type {?} */\nNovoFormElement.prototype.hideHeader;\n/** @type {?} */\nNovoFormElement.prototype.customTemplates;\n/** @type {?} */\nNovoFormElement.prototype.showingAllFields;\n/** @type {?} */\nNovoFormElement.prototype.showingRequiredFields;\n/** @type {?} */\nNovoFormElement.prototype.templates;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n// APP\n\nimport { NovoControlConfig } from './FormControls';\nimport { IFieldInteractionEvent } from './FormInterfaces';\nimport { notify } from '../../utils/notifier/notifier.util';\nimport { IMaskOptions } from './Control';\nexport class NovoFormControl extends FormControl {\n  displayValueChanges: EventEmitter<any> = new EventEmitter<any>();\n  hidden: boolean;\n  encrypted: boolean;\n  key: string;\n  required: boolean;\n  readOnly: boolean;\n  hasRequiredValidator: boolean;\n  label: string;\n  tooltip: string;\n  tooltipPosition: string;\n  tooltipSize?: string;\n  tooltipPreline?: boolean;\n  removeTooltipArrow?: boolean;\n  tooltipAutoPosition?: boolean;\n  initialValue: any;\n  valueHistory: any[] = [];\n  validators: any;\n  config: any;\n  sortOrder: number;\n  controlType: string;\n  placeholder: string;\n  multiple: boolean;\n  headerConfig: any;\n  optionsType: string;\n  maxlength: number;\n  minlength: number;\n  options: Array<any>;\n  type: string;\n  subType: string;\n  name: string;\n  closeOnSelect: boolean;\n  interactions: Array<Object>;\n  appendToBody: boolean; // Deprecated\n  parentScrollSelector: string;\n  description?: string;\n  layoutOptions?: { order?: string; download?: boolean; labelStyle?: string; draggable?: boolean; iconStyle?: string };\n  military?: boolean;\n  dateFormat?: string;\n  currencyFormat?: string;\n  startDate?: Date | Number;\n  endDate?: Date | Number;\n  textMaskEnabled?: boolean;\n  maskOptions: IMaskOptions;\n  allowInvalidDate?: boolean;\n  tipWell?: {\n    tip: string;\n    icon?: string;\n    button?: boolean;\n  };\n  rawValue?: any;\n  customControlConfig?: any;\n  checkboxLabel?: string;\n  restrictFieldInteractions?: boolean;\nprivate historyTimeout: any;\n/**\n * @param {?} value\n * @param {?} control\n */\nconstructor(value: any, control: NovoControlConfig) {\n    super(value, control.validators, control.asyncValidators);\n    this.validators = control.validators;\n    this.initialValue = value;\n    this.valueHistory.push(value);\n    this.key = control.key;\n    this.label = control.label;\n    this.readOnly = control.readOnly;\n    this.hidden = control.hidden;\n    this.encrypted = control.encrypted;\n    this.config = control.config;\n    this.type = control.type;\n    this.subType = control.subType;\n    this.required = control.required;\n    this.hasRequiredValidator = this.required;\n    this.tooltip = control.tooltip;\n    this.tooltipPosition = control.tooltipPosition;\n    this.tooltipSize = control.tooltipSize;\n    this.tooltipPreline = control.tooltipPreline;\n    this.removeTooltipArrow = control.removeTooltipArrow;\n    this.tooltipAutoPosition = control.tooltipAutoPosition;\n    this.label = control.label;\n    this.name = control.name;\n    this.required = control.required;\n    this.sortOrder = control.sortOrder;\n    this.controlType = control.controlType;\n    this.placeholder = control.placeholder;\n    this.multiple = control.multiple;\n    this.headerConfig = control.headerConfig;\n    this.optionsType = control.optionsType;\n    this.readOnly = control.readOnly;\n    this.layoutOptions = control.layoutOptions;\n    this.military = control.military;\n    this.dateFormat = control.dateFormat;\n    this.currencyFormat = control.currencyFormat;\n    this.startDate = control.startDate;\n    this.endDate = control.endDate;\n    this.textMaskEnabled = control.textMaskEnabled;\n    this.textMaskEnabled = control.textMaskEnabled;\n    this.maskOptions = control.maskOptions;\n    this.allowInvalidDate = control.allowInvalidDate;\n    this.maxlength = control.maxlength;\n    this.minlength = control.minlength;\n    this.closeOnSelect = control.closeOnSelect;\n    this.interactions = control.interactions;\n    this.checkboxLabel = control.checkboxLabel;\n    this.restrictFieldInteractions = control.restrictFieldInteractions;\n    this.appendToBody = control.appendToBody;\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    this.parentScrollSelector = control.parentScrollSelector;\n    this.description = control.description;\n    this.options = control.options;\n    this.tipWell = control.tipWell;\n    this.customControlConfig = control.customControlConfig;\n\n    // Reactive Form, need to enable/disable, can't bind to [disabled]\n    if (this.readOnly) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n/**\n * \\@name hide\n * @param {?=} clearValue - flag to reset the control's value\n * @return {?}\n */\npublic hide(clearValue: boolean = true): void {\n    this.hidden = true;\n    if (clearValue) {\n      this.setValue(null);\n    }\n  }\n/**\n * \\@name show\n * @return {?}\n */\npublic show(): void {\n    this.hidden = false;\n  }\n/**\n * \\@name setRequired\n * @param {?} isRequired\n * @return {?}\n */\npublic setRequired(isRequired: boolean): void {\n    this.required = isRequired;\n    // Update validators to have the required\n    if (this.required && !this.hasRequiredValidator) {\n      let /** @type {?} */ validators: any = [...this.validators];\n      validators.push(Validators.required);\n      // TODO: duplicated below\n      this.setValidators(validators);\n      this.updateValueAndValidity({ emitEvent: false });\n      this.hasRequiredValidator = this.required;\n    } else if (!this.required && this.hasRequiredValidator) {\n      let /** @type {?} */ validators: any = [...this.validators];\n      validators = validators.filter((val) => val !== Validators.required);\n      // TODO: duplicated above\n      this.setValidators(validators);\n      this.updateValueAndValidity({ emitEvent: false });\n      this.hasRequiredValidator = this.required;\n    }\n  }\n/**\n * \\@name setValue\n * \n * @param {?} value\n * @param {?=} __1\n * @return {?}\n */\npublic setValue(\n    value: any,\n    {\n      onlySelf,\n      emitEvent,\n      emitModelToViewChange,\n      emitViewToModelChange,\n    }: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    } = {},\n  ) {\n    this.markAsDirty();\n    this.markAsTouched();\n    this.displayValueChanges.emit(value);\n    super.setValue(value, { onlySelf, emitEvent, emitModelToViewChange, emitViewToModelChange });\n\n    // History\n    clearTimeout(this.historyTimeout);\n    this.historyTimeout = setTimeout(() => {\n      this.valueHistory.push(value);\n    }, 300);\n  }\n/**\n * \\@name setReadOnly\n * @param {?} isReadOnly\n * @return {?}\n */\npublic setReadOnly(isReadOnly: boolean): void {\n    this.readOnly = isReadOnly;\n    if (this.readOnly) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n/**\n * Disables the control. This means the control will be exempt from validation checks and\n * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n * \n * If the control has children, all children will be disabled to maintain the model.\n * @param {?=} opts\n * @return {?}\n */\npublic disable(opts: { onlySelf?: boolean; emitEvent?: boolean } = { emitEvent: false }): void {\n    if (typeof opts.emitEvent === 'undefined') {\n      opts.emitEvent = false;\n    }\n    super.disable(opts);\n  }\n/**\n * @param {?=} opts\n * @return {?}\n */\npublic enable(opts: { onlySelf?: boolean; emitEvent?: boolean } = { emitEvent: false }): void {\n    if (typeof opts.emitEvent === 'undefined') {\n      opts.emitEvent = false;\n    }\n    super.enable(opts);\n  }\n/**\n * \\@name markAsInvalid\n * @param {?} message\n * @return {?}\n */\nmarkAsInvalid(message: string): void {\n    this.markAsDirty();\n    this.markAsTouched();\n    this.setErrors(Object.assign({}, this.errors, { custom: message }));\n  }\n}\n\nfunction NovoFormControl_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFormControl.prototype.displayValueChanges;\n/** @type {?} */\nNovoFormControl.prototype.hidden;\n/** @type {?} */\nNovoFormControl.prototype.encrypted;\n/** @type {?} */\nNovoFormControl.prototype.key;\n/** @type {?} */\nNovoFormControl.prototype.required;\n/** @type {?} */\nNovoFormControl.prototype.readOnly;\n/** @type {?} */\nNovoFormControl.prototype.hasRequiredValidator;\n/** @type {?} */\nNovoFormControl.prototype.label;\n/** @type {?} */\nNovoFormControl.prototype.tooltip;\n/** @type {?} */\nNovoFormControl.prototype.tooltipPosition;\n/** @type {?} */\nNovoFormControl.prototype.tooltipSize;\n/** @type {?} */\nNovoFormControl.prototype.tooltipPreline;\n/** @type {?} */\nNovoFormControl.prototype.removeTooltipArrow;\n/** @type {?} */\nNovoFormControl.prototype.tooltipAutoPosition;\n/** @type {?} */\nNovoFormControl.prototype.initialValue;\n/** @type {?} */\nNovoFormControl.prototype.valueHistory;\n/** @type {?} */\nNovoFormControl.prototype.validators;\n/** @type {?} */\nNovoFormControl.prototype.config;\n/** @type {?} */\nNovoFormControl.prototype.sortOrder;\n/** @type {?} */\nNovoFormControl.prototype.controlType;\n/** @type {?} */\nNovoFormControl.prototype.placeholder;\n/** @type {?} */\nNovoFormControl.prototype.multiple;\n/** @type {?} */\nNovoFormControl.prototype.headerConfig;\n/** @type {?} */\nNovoFormControl.prototype.optionsType;\n/** @type {?} */\nNovoFormControl.prototype.maxlength;\n/** @type {?} */\nNovoFormControl.prototype.minlength;\n/** @type {?} */\nNovoFormControl.prototype.options;\n/** @type {?} */\nNovoFormControl.prototype.type;\n/** @type {?} */\nNovoFormControl.prototype.subType;\n/** @type {?} */\nNovoFormControl.prototype.name;\n/** @type {?} */\nNovoFormControl.prototype.closeOnSelect;\n/** @type {?} */\nNovoFormControl.prototype.interactions;\n/** @type {?} */\nNovoFormControl.prototype.appendToBody;\n/** @type {?} */\nNovoFormControl.prototype.parentScrollSelector;\n/** @type {?} */\nNovoFormControl.prototype.description;\n/** @type {?} */\nNovoFormControl.prototype.layoutOptions;\n/** @type {?} */\nNovoFormControl.prototype.military;\n/** @type {?} */\nNovoFormControl.prototype.dateFormat;\n/** @type {?} */\nNovoFormControl.prototype.currencyFormat;\n/** @type {?} */\nNovoFormControl.prototype.startDate;\n/** @type {?} */\nNovoFormControl.prototype.endDate;\n/** @type {?} */\nNovoFormControl.prototype.textMaskEnabled;\n/** @type {?} */\nNovoFormControl.prototype.maskOptions;\n/** @type {?} */\nNovoFormControl.prototype.allowInvalidDate;\n/** @type {?} */\nNovoFormControl.prototype.tipWell;\n/** @type {?} */\nNovoFormControl.prototype.rawValue;\n/** @type {?} */\nNovoFormControl.prototype.customControlConfig;\n/** @type {?} */\nNovoFormControl.prototype.checkboxLabel;\n/** @type {?} */\nNovoFormControl.prototype.restrictFieldInteractions;\n/** @type {?} */\nNovoFormControl.prototype.historyTimeout;\n}\n\nexport class NovoFormGroup extends FormGroup {\npublic fieldInteractionEvents: EventEmitter<IFieldInteractionEvent> = new EventEmitter();\npublic layout: string;\npublic edit: boolean;\npublic currentEntity: string;\npublic currentEntityId: string;\npublic associations: object;\npublic _value: any;\n/**\n * @return {?}\n */\nget value() {\n    return this.getRawValue();\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: any) {\n    this._value = v;\n  }\n}\n\nfunction NovoFormGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFormGroup.prototype.fieldInteractionEvents;\n/** @type {?} */\nNovoFormGroup.prototype.layout;\n/** @type {?} */\nNovoFormGroup.prototype.edit;\n/** @type {?} */\nNovoFormGroup.prototype.currentEntity;\n/** @type {?} */\nNovoFormGroup.prototype.currentEntityId;\n/** @type {?} */\nNovoFormGroup.prototype.associations;\n/** @type {?} */\nNovoFormGroup.prototype._value;\n}\n\n","// NG2\n\nimport { Validators } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n// APP\n\nimport { Helpers } from '../../../utils/Helpers';\nimport { NovoControlGroupAddConfig } from '../ControlGroup';\nimport { notify } from '../../../utils/notifier/notifier.util';\nimport { IMaskOptions } from '../Control';\n\nexport interface NovoGroupedControlConfig {\n  label?: string;\n  icon?: string;\n  add?: NovoControlGroupAddConfig;\n  remove?: boolean;\n  key: string;\n  initialValue?: {}[];\n}\n\nexport interface NovoControlConfig {\n  validators?: Array<any>;\n  asyncValidators?: Array<any>;\n  value?: any;\n  key?: string;\n  label?: string;\n  checkboxLabel?: string;\n  required?: boolean;\n  hidden?: boolean;\n  encrypted?: boolean;\n  sortOrder?: number;\n  controlType?: string;\n  placeholder?: string;\n  config?: any;\n  dirty?: boolean;\n  multiple?: boolean;\n  headerConfig?: any;\n  currencyFormat?: string;\n  associatedEntity?: string;\n  optionsType?: string;\n  forceClear?: EventEmitter<any>;\n  disabled?: boolean;\n  maxlength?: number;\n  minlength?: number;\n  options?: Array<any>;\n  type?: string;\n  subType?: string;\n  name?: string;\n  readOnly?: boolean;\n  closeOnSelect?: boolean;\n  interactions?: Array<Object>;\n  dataSpecialization?: string;\n  dataType?: string;\n  appendToBody?: boolean; // Deprecated\n  parentScrollSelector?: string;\n  description?: string;\n  tooltip?: string;\n  tooltipPosition?: string;\n  tooltipSize?: string;\n  tooltipPreline?: boolean;\n  removeTooltipArrow?: boolean;\n  tooltipAutoPosition?: boolean;\n  layoutOptions?: {\n    order?: string;\n    download?: boolean;\n    edit?: boolean;\n    customActions?: boolean;\n    labelStyle?: string;\n    draggable?: boolean;\n    iconStyle?: string;\n  };\n  template?: any;\n  customControlConfig?: any;\n  military?: boolean;\n  dateFormat?: string;\n  textMaskEnabled?: boolean;\n  maskOptions?: IMaskOptions;\n  allowInvalidDate?: boolean;\n  tipWell?: {\n    tip: string;\n    icon?: string;\n    button?: boolean;\n  };\n  width?: number;\n  startupFocus?: boolean;\n  fileBrowserImageUploadUrl?: string;\n  isEmpty?: Function;\n  startDate?: Date | Number;\n  endDate?: Date | Number;\n  restrictFieldInteractions?: boolean;\n}\nexport class BaseControl {\n  __type: string = 'BaseControl';\n  __config: NovoControlConfig;\n\n  validators: Array<any>;\n  asyncValidators?: Array<any>;\n  value: any;\n  key: string;\n  label: string;\n  checkboxLabel: string;\n  required: boolean;\n  hidden: boolean;\n  encrypted: boolean;\n  sortOrder: number;\n  controlType: string;\n  placeholder: string;\n  config: any;\n  dirty: boolean;\n  multiple: boolean;\n  headerConfig: any;\n  currencyFormat: string;\n  associatedEntity: string;\n  optionsType: string;\n  forceClear: EventEmitter<any>;\n  maxlength: number;\n  minlength: number;\n  options: Array<any>;\n  type: string;\n  subType?: string;\n  name: string;\n  disabled: boolean;\n  readOnly: boolean; // \"disabled\", so it appears in the model still\n  closeOnSelect: boolean;\n  interactions: Array<Object>;\n  dataSpecialization: string;\n  dataType: string;\n  appendToBody: boolean; // Deprecated\n  parentScrollSelector: string;\n  description?: string;\n  tooltip?: string;\n  tooltipPosition?: string;\n  tooltipSize?: string;\n  tooltipPreline?: boolean;\n  removeTooltipArrow?: boolean;\n  tooltipAutoPosition?: boolean;\n  layoutOptions?: { order?: string; download?: boolean; labelStyle?: string; draggable?: boolean; iconStyle?: string };\n  template?: any;\n  customControlConfig?: any;\n  military?: boolean;\n  dateFormat?: string;\n  textMaskEnabled?: boolean;\n  maskOptions?: IMaskOptions;\n  allowInvalidDate?: boolean;\n  tipWell?: {\n    tip: string;\n    icon?: string;\n    button?: boolean;\n  };\n  width: number;\n  startupFocus?: boolean;\n  fileBrowserImageUploadUrl?: string;\n  isEmpty?: Function;\n  startDate?: Date | Number;\n  endDate?: Date | Number;\n  restrictFieldInteractions?: boolean;\n/**\n * @param {?=} type\n * @param {?=} config\n */\nconstructor(type: string = 'BaseControl', config: NovoControlConfig = {}) {\n    this.__type = type;\n    this.__config = config;\n    this.validators = config.validators || [];\n    this.asyncValidators = config.asyncValidators || [];\n    this.value = config.value;\n    this.key = config.key || '';\n    this.label = config.label || '';\n    this.checkboxLabel = config.checkboxLabel;\n    this.name = config.name || '';\n    this.required = !!config.required;\n    this.hidden = !!config.hidden;\n    this.encrypted = !!config.encrypted;\n    this.sortOrder = config.sortOrder === undefined ? 1 : config.sortOrder;\n    this.controlType = config.controlType || '';\n    this.placeholder = config.placeholder || '';\n    this.config = config.config || null;\n    this.dirty = !!config.value;\n    this.multiple = !!config.multiple;\n    this.headerConfig = config.headerConfig || null;\n    this.currencyFormat = config.currencyFormat || null;\n    this.associatedEntity = config.associatedEntity || null;\n    this.optionsType = config.optionsType || null;\n    this.options = config.options || [];\n    this.forceClear = new EventEmitter();\n    this.readOnly = !!config.readOnly || !!config.disabled;\n    this.disabled = !!config.disabled;\n    this.layoutOptions = config.layoutOptions || {};\n    this.military = !!config.military;\n    this.dateFormat = config.dateFormat;\n    this.textMaskEnabled = config.textMaskEnabled;\n    this.maskOptions = config.maskOptions;\n    this.allowInvalidDate = config.allowInvalidDate;\n    this.startDate = config.startDate;\n    this.endDate = config.endDate;\n    this.restrictFieldInteractions = !!config.restrictFieldInteractions;\n\n    if (this.required) {\n      this.validators.push(Validators.required);\n    }\n    if (!Helpers.isBlank(config.maxlength)) {\n      this.maxlength = config.maxlength;\n      this.validators.push(Validators.maxLength(this.maxlength));\n    }\n    if (!Helpers.isBlank(config.minlength)) {\n      this.minlength = config.minlength;\n      this.validators.push(Validators.minLength(this.minlength));\n    }\n    this.closeOnSelect = !!config.closeOnSelect;\n    this.interactions = config.interactions;\n    this.dataSpecialization = config.dataSpecialization;\n    this.dataType = config.dataType;\n    this.appendToBody = !!config.appendToBody;\n    if (this.appendToBody) {\n      notify(`'appendToBody' has been deprecated. Please remove this attribute.`);\n    }\n    this.parentScrollSelector = config.parentScrollSelector;\n    this.description = config.description;\n    if (config.tooltip) {\n      this.tooltip = config.tooltip;\n      this.tooltipPosition = config.tooltipPosition;\n      this.tooltipSize = config.tooltipSize;\n      this.tooltipPreline = config.tooltipPreline;\n      this.removeTooltipArrow = config.removeTooltipArrow;\n      this.tooltipAutoPosition = config.tooltipAutoPosition;\n    }\n    this.template = config.template;\n    this.customControlConfig = config.customControlConfig;\n    this.tipWell = config.tipWell;\n    this.width = config.width;\n    this.startupFocus = !!config.startupFocus;\n    if (config.fileBrowserImageUploadUrl) {\n      this.fileBrowserImageUploadUrl = config.fileBrowserImageUploadUrl;\n    }\n    if (config.isEmpty) {\n      this.isEmpty = config.isEmpty;\n    }\n  }\n}\n\nfunction BaseControl_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseControl.prototype.__type;\n/** @type {?} */\nBaseControl.prototype.__config;\n/** @type {?} */\nBaseControl.prototype.validators;\n/** @type {?} */\nBaseControl.prototype.asyncValidators;\n/** @type {?} */\nBaseControl.prototype.value;\n/** @type {?} */\nBaseControl.prototype.key;\n/** @type {?} */\nBaseControl.prototype.label;\n/** @type {?} */\nBaseControl.prototype.checkboxLabel;\n/** @type {?} */\nBaseControl.prototype.required;\n/** @type {?} */\nBaseControl.prototype.hidden;\n/** @type {?} */\nBaseControl.prototype.encrypted;\n/** @type {?} */\nBaseControl.prototype.sortOrder;\n/** @type {?} */\nBaseControl.prototype.controlType;\n/** @type {?} */\nBaseControl.prototype.placeholder;\n/** @type {?} */\nBaseControl.prototype.config;\n/** @type {?} */\nBaseControl.prototype.dirty;\n/** @type {?} */\nBaseControl.prototype.multiple;\n/** @type {?} */\nBaseControl.prototype.headerConfig;\n/** @type {?} */\nBaseControl.prototype.currencyFormat;\n/** @type {?} */\nBaseControl.prototype.associatedEntity;\n/** @type {?} */\nBaseControl.prototype.optionsType;\n/** @type {?} */\nBaseControl.prototype.forceClear;\n/** @type {?} */\nBaseControl.prototype.maxlength;\n/** @type {?} */\nBaseControl.prototype.minlength;\n/** @type {?} */\nBaseControl.prototype.options;\n/** @type {?} */\nBaseControl.prototype.type;\n/** @type {?} */\nBaseControl.prototype.subType;\n/** @type {?} */\nBaseControl.prototype.name;\n/** @type {?} */\nBaseControl.prototype.disabled;\n/** @type {?} */\nBaseControl.prototype.readOnly;\n/** @type {?} */\nBaseControl.prototype.closeOnSelect;\n/** @type {?} */\nBaseControl.prototype.interactions;\n/** @type {?} */\nBaseControl.prototype.dataSpecialization;\n/** @type {?} */\nBaseControl.prototype.dataType;\n/** @type {?} */\nBaseControl.prototype.appendToBody;\n/** @type {?} */\nBaseControl.prototype.parentScrollSelector;\n/** @type {?} */\nBaseControl.prototype.description;\n/** @type {?} */\nBaseControl.prototype.tooltip;\n/** @type {?} */\nBaseControl.prototype.tooltipPosition;\n/** @type {?} */\nBaseControl.prototype.tooltipSize;\n/** @type {?} */\nBaseControl.prototype.tooltipPreline;\n/** @type {?} */\nBaseControl.prototype.removeTooltipArrow;\n/** @type {?} */\nBaseControl.prototype.tooltipAutoPosition;\n/** @type {?} */\nBaseControl.prototype.layoutOptions;\n/** @type {?} */\nBaseControl.prototype.template;\n/** @type {?} */\nBaseControl.prototype.customControlConfig;\n/** @type {?} */\nBaseControl.prototype.military;\n/** @type {?} */\nBaseControl.prototype.dateFormat;\n/** @type {?} */\nBaseControl.prototype.textMaskEnabled;\n/** @type {?} */\nBaseControl.prototype.maskOptions;\n/** @type {?} */\nBaseControl.prototype.allowInvalidDate;\n/** @type {?} */\nBaseControl.prototype.tipWell;\n/** @type {?} */\nBaseControl.prototype.width;\n/** @type {?} */\nBaseControl.prototype.startupFocus;\n/** @type {?} */\nBaseControl.prototype.fileBrowserImageUploadUrl;\n/** @type {?} */\nBaseControl.prototype.isEmpty;\n/** @type {?} */\nBaseControl.prototype.startDate;\n/** @type {?} */\nBaseControl.prototype.endDate;\n/** @type {?} */\nBaseControl.prototype.restrictFieldInteractions;\n}\n\n","import { Helpers } from './../../utils/Helpers';\n\nconst /** @type {?} */ MAX_INTEGER = 2147483647;\nconst /** @type {?} */ MIN_YEAR = 1753;\nexport class FormValidators {\n/**\n * @param {?} subfield\n * @param {?} control\n * @return {?}\n */\nprivate showStateRequiredFlag(subfield, control): boolean {\n    return subfield === 'state' &&\n      !Helpers.isEmpty(control.config.state) &&\n      control.config.state.required &&\n      Helpers.isBlank(control.value.state) &&\n      control.config.state.updated &&\n      !Helpers.isBlank(control.value.countryName) &&\n      control.config.state.pickerConfig &&\n      control.config.state.pickerConfig.defaultOptions &&\n      control.config.state.pickerConfig.defaultOptions.length > 0;\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nstatic maxInteger(control) {\n    return control.value < MAX_INTEGER ? null : { 'integerTooLarge': true };\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nstatic minYear(control) {\n    if (!control.value) {\n      return null;\n    }\n    return control.value >= MIN_YEAR ? null : { 'minYear': true };\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nstatic maxDouble(control) {\n    return control.value < Number.MAX_SAFE_INTEGER ? null : { 'doubleTooLarge': true };\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nstatic isEmail(control) {\n    let /** @type {?} */ EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    return !control.value || EMAIL_REGEXP.test(control.value) ? null : { 'invalidEmail': true };\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nstatic isValidAddress(control) {\n    let /** @type {?} */ fieldList: string[] = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n    let /** @type {?} */ invalidAddressFields: string[] = [];\n    let /** @type {?} */ maxlengthFields: string[] = [];\n    let /** @type {?} */ returnVal: {\n      invalidAddress?: boolean;\n      invalidAddressFields?: string[];\n      invalidAddressForForm?: boolean;\n      maxlength?: boolean;\n      maxlengthFields?: string[];\n    } = null;\n    let /** @type {?} */ maxlengthError: boolean = false;\n    let /** @type {?} */ showCountryRequiredFlag = (subfield, ctrl) => {\n      return subfield === 'countryID' &&\n        !Helpers.isEmpty(ctrl.config.countryID) &&\n        ctrl.config.countryID.required &&\n        Helpers.isBlank(ctrl.value.countryName) &&\n        ctrl.config.countryID.updated;\n    };\n\n    let /** @type {?} */ showStateRequiredFlag = (subfield, ctrl): boolean => {\n      return subfield === 'state' &&\n        !Helpers.isEmpty(ctrl.config.state) &&\n        ctrl.config.state.required &&\n        Helpers.isBlank(ctrl.value.state) &&\n        ctrl.config.state.updated &&\n        !Helpers.isBlank(ctrl.value.countryName) &&\n        ctrl.config.state.pickerConfig &&\n        ctrl.config.state.pickerConfig.defaultOptions &&\n        ctrl.config.state.pickerConfig.defaultOptions.length > 0;\n    };\n\n    if (control.value && control.config) {\n      let /** @type {?} */ valid = true;\n      let /** @type {?} */ formValidity = true;\n      fieldList.forEach((subfield: string) => {\n        if (!Helpers.isEmpty(control.config[subfield])) {\n          if (((['countryID', 'state'].indexOf(subfield) === -1) &&\n            control.config[subfield].required &&\n            !Helpers.isBlank(control.value[subfield]) &&\n            Helpers.isEmpty(control.value[subfield])) ||\n            showCountryRequiredFlag(subfield, control) ||\n            showStateRequiredFlag(subfield, control)) {\n            valid = false;\n            invalidAddressFields.push(control.config[subfield].label);\n          }\n          if (((subfield !== 'countryID' && control.config[subfield].required &&\n            Helpers.isEmpty(control.value[subfield])) ||\n            (subfield === 'countryID' &&\n              !Helpers.isEmpty(control.config.countryID) &&\n              control.config.countryID.required &&\n              Helpers.isEmpty(control.value.countryName))) &&\n            !(subfield === 'state' &&\n              !Helpers.isBlank(control.value.countryName) &&\n              control.config.state.pickerConfig &&\n              control.config.state.pickerConfig.defaultOptions &&\n              control.config.state.pickerConfig.defaultOptions.length === 0)) {\n            formValidity = false;\n          }\n          if (!Helpers.isEmpty(control.config[subfield].maxlength) && !Helpers.isEmpty(control.value[subfield]) &&\n            control.value[subfield].length > control.config[subfield].maxlength) {\n            maxlengthError = true;\n            maxlengthFields.push(subfield);\n            formValidity = false;\n          }\n        }\n      });\n      if (!valid || !formValidity || maxlengthError) {\n        returnVal = {};\n      }\n      if (!valid) {\n        returnVal.invalidAddress = true;\n        returnVal.invalidAddressFields = invalidAddressFields;\n      }\n      if (!formValidity) {\n        returnVal.invalidAddressForForm = true;\n      }\n      if (maxlengthError) {\n        returnVal.maxlength = true;\n        returnVal.maxlengthFields = maxlengthFields;\n      }\n      return returnVal;\n    }\n    return null;\n  }\n\n}\n","// APP\n\nimport { BaseControl, NovoControlConfig } from '../BaseControl';\nimport { FormValidators } from '../../FormValidators';\nexport class AddressControl extends BaseControl {\n    controlType = 'address';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('AddressControl', config);\n        this.validators.push(FormValidators.isValidAddress);\n    }\n}\n\nfunction AddressControl_tsickle_Closure_declarations() {\n/** @type {?} */\nAddressControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class CheckListControl extends BaseControl {\n    controlType = 'checklist';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('CheckListControl', config);\n        this.options = config.options || [];\n    }\n}\n\nfunction CheckListControl_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckListControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class CheckboxControl extends BaseControl {\n    controlType = 'checkbox';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('CheckboxControl', config);\n    }\n}\n\nfunction CheckboxControl_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class DateControl extends BaseControl {\n    controlType = 'date';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('DateControl', config);\n    }\n}\n\nfunction DateControl_tsickle_Closure_declarations() {\n/** @type {?} */\nDateControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class DateTimeControl extends BaseControl {\n    controlType = 'date-time';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('DateTimeControl', config);\n    }\n}\n\nfunction DateTimeControl_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimeControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class EditorControl extends BaseControl {\n    controlType = 'editor';\n    minimal: boolean = false;\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('EditorControl', config);\n    }\n}\n\nfunction EditorControl_tsickle_Closure_declarations() {\n/** @type {?} */\nEditorControl.prototype.controlType;\n/** @type {?} */\nEditorControl.prototype.minimal;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class AceEditorControl extends BaseControl {\n    controlType = 'ace-editor';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('AceEditorControl', config);\n    }\n}\n\nfunction AceEditorControl_tsickle_Closure_declarations() {\n/** @type {?} */\nAceEditorControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class FileControl extends BaseControl {\n    controlType = 'file';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('FileControl', config);\n        // TODO - translate\n        this.placeholder = config.placeholder;\n        this.multiple = config.multiple;\n    }\n}\n\nfunction FileControl_tsickle_Closure_declarations() {\n/** @type {?} */\nFileControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class NativeSelectControl extends BaseControl {\n    controlType = 'native-select';\n    options = [];\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('NativeSelectControl', config);\n        this.options = config.options || [];\n    }\n}\n\nfunction NativeSelectControl_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeSelectControl.prototype.controlType;\n/** @type {?} */\nNativeSelectControl.prototype.options;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class PickerControl extends BaseControl {\n  controlType = 'picker';\n  options = [];\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n    super('PickerControl', config);\n    this.options = config.options || [];\n  }\n}\n\nfunction PickerControl_tsickle_Closure_declarations() {\n/** @type {?} */\nPickerControl.prototype.controlType;\n/** @type {?} */\nPickerControl.prototype.options;\n}\n\nexport class TablePickerControl extends PickerControl {\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n    super(Object.assign(config, { parentScrollSelector: '.table-container' }));\n    this.__type = 'TablePickerControl';\n  }\n}\n","// APP\n\nimport { BaseControl, NovoControlConfig } from '../BaseControl';\nexport class QuickNoteControl extends BaseControl {\n    controlType = 'quick-note';\n    options = [];\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('QuickNoteControl', config);\n        this.options = config.options || [];\n    }\n}\n\nfunction QuickNoteControl_tsickle_Closure_declarations() {\n/** @type {?} */\nQuickNoteControl.prototype.controlType;\n/** @type {?} */\nQuickNoteControl.prototype.options;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class RadioControl extends BaseControl {\n    controlType = 'radio';\n    options = [];\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('RadioControl', config);\n        this.options = config.options || [];\n    }\n}\n\nfunction RadioControl_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioControl.prototype.controlType;\n/** @type {?} */\nRadioControl.prototype.options;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class ReadOnlyControl extends BaseControl {\n    controlType = 'read-only';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('ReadOnlyControl', config);\n        config.readOnly = true;\n    }\n}\n\nfunction ReadOnlyControl_tsickle_Closure_declarations() {\n/** @type {?} */\nReadOnlyControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class SelectControl extends BaseControl {\n    controlType = 'select';\n    options = [];\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('SelectControl', config);\n        this.options = config.options || [];\n        this.placeholder = config.placeholder || '';\n    }\n}\n\nfunction SelectControl_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectControl.prototype.controlType;\n/** @type {?} */\nSelectControl.prototype.options;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class TextAreaControl extends BaseControl {\n    controlType = 'text-area';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('TextAreaControl', config);\n    }\n}\n\nfunction TextAreaControl_tsickle_Closure_declarations() {\n/** @type {?} */\nTextAreaControl.prototype.controlType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nimport { FormValidators } from './../../FormValidators';\nexport class TextBoxControl extends BaseControl {\n    controlType: string = 'textbox';\n    type: string;\n    subType: string;\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('TextBoxControl', config);\n        this.type = this.getTextboxType(config.type) || '';\n        this.subType = config.type || '';\n        this.setValidators(this.subType);\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nsetValidators(type) {\n        switch (type) {\n            case 'email':\n                this.validators.push(FormValidators.isEmail);\n                break;\n            case 'number':\n            case 'currency':\n                this.validators.push(FormValidators.maxInteger);\n                break;\n            case 'float':\n            case 'percentage':\n                this.validators.push(FormValidators.maxDouble);\n                break;\n            case 'year':\n                this.validators.push(FormValidators.minYear);\n                break;\n            default:\n                break;\n        }\n    }\n/**\n * @param {?} type\n * @return {?}\n */\ngetTextboxType(type) {\n        switch (type) {\n            case 'percentage':\n            case 'currency':\n            case 'float':\n            case 'year':\n                return 'number';\n            default:\n                return type;\n        }\n    }\n}\n\nfunction TextBoxControl_tsickle_Closure_declarations() {\n/** @type {?} */\nTextBoxControl.prototype.controlType;\n/** @type {?} */\nTextBoxControl.prototype.type;\n/** @type {?} */\nTextBoxControl.prototype.subType;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class TilesControl extends BaseControl {\n    controlType = 'tiles';\n    options = [];\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('TilesControl', config);\n        this.options = config.options || [];\n    }\n}\n\nfunction TilesControl_tsickle_Closure_declarations() {\n/** @type {?} */\nTilesControl.prototype.controlType;\n/** @type {?} */\nTilesControl.prototype.options;\n}\n\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class TimeControl extends BaseControl {\n    controlType = 'time';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n        super('TimeControl', config);\n    }\n}\n\nfunction TimeControl_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeControl.prototype.controlType;\n}\n\n","// APP\n\nimport { NovoGroupedControlConfig } from './../BaseControl';\nexport class GroupedControl implements NovoGroupedControlConfig {\npublic __type: string;\n    key: string;\n/**\n * @param {?} config\n */\nconstructor(config: NovoGroupedControlConfig) {\n        this.__type = 'GroupedControl';\n        Object.keys(config).forEach(key => this[key] = config[key]);\n    }\n}\n\nfunction GroupedControl_tsickle_Closure_declarations() {\n/** @type {?} */\nGroupedControl.prototype.__type;\n/** @type {?} */\nGroupedControl.prototype.key;\n}\n\n","import {\n  AddressControl, CheckboxControl, CheckListControl, DateTimeControl, EditorControl, FileControl, NativeSelectControl, PickerControl,\n  QuickNoteControl, RadioControl, ReadOnlyControl, SelectControl, TablePickerControl, TextAreaControl, TextBoxControl, TilesControl, TimeControl\n} from './index';\nimport { BaseControl } from './BaseControl';\nexport class ControlFactory {\n/**\n * @param {?} type\n * @param {?} config\n * @return {?}\n */\nstatic create(type: string, config: BaseControl): BaseControl {\n    switch (type) {\n      case 'AddressControl':\n        return new AddressControl(config);\n      case 'CheckboxControl':\n        return new CheckboxControl(config);\n      case 'CheckListControl':\n        return new CheckListControl(config);\n      case 'CheckListControl':\n        return new CheckListControl(config);\n      case 'DateTimeControl':\n        return new DateTimeControl(config);\n      case 'EditorControl':\n        return new EditorControl(config);\n      case 'FileControl':\n        return new FileControl(config);\n      case 'NativeSelectControl':\n        return new NativeSelectControl(config);\n      case 'PickerControl':\n        return new PickerControl(config);\n      case 'TablePickerControl':\n        return new TablePickerControl(config);\n      case 'QuickNoteControl':\n        return new QuickNoteControl(config);\n      case 'RadioControl':\n        return new RadioControl(config);\n      case 'ReadOnlyControl':\n        return new ReadOnlyControl(config);\n      case 'TextAreaControl':\n        return new TextAreaControl(config);\n      case 'TextBoxControl':\n        return new TextBoxControl(config);\n      case 'SelectControl':\n        return new SelectControl(config);\n      case 'TilesControl':\n        return new TilesControl(config);\n      case 'TimeControl':\n        return new TimeControl(config);\n      default:\n        console.warn('[ControlFactory] - unable to find control for type. Make sure to set \"editorType\" and \"editorConfig\" on your column', type);\n        return null;\n    }\n  }\n}\n","// APP\n\nimport { BaseControl, NovoControlConfig } from './../BaseControl';\nexport class CustomControl extends BaseControl {\n  controlType = 'custom';\n/**\n * @param {?} config\n */\nconstructor(config: NovoControlConfig) {\n    super(config.template, config);\n    this.controlType = config.template;\n  }\n}\n\nfunction CustomControl_tsickle_Closure_declarations() {\n/** @type {?} */\nCustomControl.prototype.controlType;\n}\n\n","// NG2\n\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nexport class OptionsService {\n/**\n * @param {?} http\n * @param {?} field\n * @param {?} config\n * @return {?}\n */\ngetOptionsConfig(http: HttpClient, field: any, config: { token?: string; restUrl?: string; military?: boolean }): any {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query) => {\n        return new Promise((resolve, reject) => {\n          if (query && query.length) {\n            http.get(`${field.optionsUrl}?filter=${query || ''}`).subscribe(resolve, reject);\n          } else {\n            resolve([]);\n          }\n        });\n      },\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OptionsService_tsickle_Closure_declarations() {\n/** @type {?} */\nOptionsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOptionsService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable } from '@angular/core';\n// Vendor\n// APP\n\nimport {\n  AddressControl,\n  BaseControl,\n  CheckboxControl,\n  CheckListControl,\n  CustomControl,\n  DateControl,\n  DateTimeControl,\n  EditorControl,\n  FileControl,\n  NovoControlConfig,\n  PickerControl,\n  RadioControl,\n  SelectControl,\n  TextAreaControl,\n  TextBoxControl,\n  TilesControl,\n  TimeControl,\n} from '../../elements/form/FormControls';\nimport { EntityPickerResult, EntityPickerResults } from '../../elements/picker/extras/entity-picker-results/EntityPickerResults';\nimport { Helpers } from '../Helpers';\nimport { NovoFieldset } from '../../elements/form/FormInterfaces';\nimport { NovoFormControl, NovoFormGroup } from '../../elements/form/NovoFormControl';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { OptionsService } from './../../services/options/OptionsService';\nexport class FormUtils {\n  ASSOCIATED_ENTITY_LIST: string[] = [\n    'Candidate',\n    'ClientContact',\n    'ClientCorporation',\n    'Lead',\n    'Opportunity',\n    'JobOrder',\n    'CorporateUser',\n    'Person',\n    'Placement',\n  ];\n  PICKER_TEST_LIST: string[] = [\n    'CandidateText',\n    'ClientText',\n    'ClientContactText',\n    'ClientCorporationText',\n    'LeadText',\n    'OpportunityText',\n    'JobOrderText',\n    'CorporateUserText',\n    'PersonText',\n  ];\n/**\n * @param {?} labels\n * @param {?} optionsService\n */\nconstructor(public labels: NovoLabelService,\npublic optionsService: OptionsService) {}\n/**\n * @param {?} controls\n * @return {?}\n */\ntoFormGroup(controls: Array<any>): NovoFormGroup {\n    let /** @type {?} */ group: any = {};\n    controls.forEach((control) => {\n      let /** @type {?} */ value = Helpers.isBlank(control.value) ? '' : control.value;\n      group[control.key] = new NovoFormControl(value, control);\n    });\n    return new NovoFormGroup(group);\n  }\n/**\n * @return {?}\n */\nemptyFormGroup(): NovoFormGroup {\n    return new NovoFormGroup({});\n  }\n/**\n * @param {?} formGroup\n * @param {?} controls\n * @return {?}\n */\naddControls(formGroup: NovoFormGroup, controls: Array<NovoControlConfig>): void {\n    controls.forEach((control) => {\n      let /** @type {?} */ value = Helpers.isBlank(control.value) ? '' : control.value;\n      let /** @type {?} */ formControl = new NovoFormControl(value, control);\n      formGroup.addControl(control.key, formControl);\n    });\n  }\n/**\n * \\@name toFormGroupFromFieldset\n * @param {?} fieldsets\n * @return {?}\n */\ntoFormGroupFromFieldset(fieldsets: Array<NovoFieldset>) {\n    let /** @type {?} */ controls: Array<NovoFormControl> = [];\n    fieldsets.forEach((fieldset) => {\n      controls.push(...fieldset.controls);\n    });\n    return this.toFormGroup(controls);\n  }\n/**\n * \\@name determineInputType\n * @param {?} field\n * @return {?}\n */\ndetermineInputType(field: {\n    dataSpecialization: string;\n    inputType: string;\n    options: string;\n    multiValue: boolean;\n    dataType: string;\n    type: string;\n    associatedEntity?: any;\n    optionsUrl?: string;\n    optionsType?: string;\n  }): string {\n    let /** @type {?} */ type: string;\n    let /** @type {?} */ dataSpecializationTypeMap = {\n      DATETIME: 'datetime',\n      TIME: 'time',\n      MONEY: 'currency',\n      PERCENTAGE: 'percentage',\n      HTML: 'editor',\n      'HTML-MINIMAL': 'editor-minimal',\n      YEAR: 'year',\n    };\n    let /** @type {?} */ dataTypeToTypeMap = {\n      Timestamp: 'date',\n      Date: 'date',\n      Boolean: 'tiles',\n    };\n    let /** @type {?} */ inputTypeToTypeMap = {\n      CHECKBOX: 'radio',\n      RADIO: 'radio',\n      SELECT: 'select',\n      TILES: 'tiles',\n    };\n    let /** @type {?} */ inputTypeMultiToTypeMap = {\n      CHECKBOX: 'checklist',\n      RADIO: 'checklist',\n      SELECT: 'chips',\n    };\n    let /** @type {?} */ typeToTypeMap = {\n      file: 'file',\n      COMPOSITE: 'address',\n    };\n    let /** @type {?} */ numberDataTypeToTypeMap = {\n      Double: 'float',\n      BigDecimal: 'float',\n      Integer: 'number',\n    };\n    if (field.type === 'TO_MANY') {\n      if (field.associatedEntity && ~this.ASSOCIATED_ENTITY_LIST.indexOf(field.associatedEntity.entity)) {\n        type = 'entitychips'; // TODO!\n      } else {\n        type = 'chips';\n      }\n    } else if (field.type === 'TO_ONE') {\n      if (field.associatedEntity && ~this.ASSOCIATED_ENTITY_LIST.indexOf(field.associatedEntity.entity)) {\n        type = 'entitypicker'; // TODO!\n      } else {\n        type = 'picker';\n      }\n    } else if (field.optionsUrl && field.inputType === 'SELECT') {\n      if (field.optionsType && ~this.PICKER_TEST_LIST.indexOf(field.optionsType)) {\n        type = 'entitypicker'; // TODO!\n      } else {\n        type = 'picker';\n      }\n    } else if (Object.keys(dataSpecializationTypeMap).indexOf(field.dataSpecialization) > -1) {\n      type = dataSpecializationTypeMap[field.dataSpecialization];\n    } else if (Object.keys(dataTypeToTypeMap).indexOf(field.dataType) > -1) {\n      type = dataTypeToTypeMap[field.dataType];\n    } else if (field.inputType === 'TEXTAREA') {\n      type = 'textarea';\n    } else if (field.options && Object.keys(inputTypeToTypeMap).indexOf(field.inputType) > -1 && !field.multiValue) {\n      type = inputTypeToTypeMap[field.inputType];\n    } else if (field.options && Object.keys(inputTypeMultiToTypeMap).indexOf(field.inputType) > -1 && field.multiValue) {\n      type = inputTypeMultiToTypeMap[field.inputType];\n    } else if (Object.keys(typeToTypeMap).indexOf(field.type) > -1) {\n      type = typeToTypeMap[field.type];\n    } else if (Object.keys(numberDataTypeToTypeMap).indexOf(field.dataType) > -1) {\n      type = numberDataTypeToTypeMap[field.dataType];\n    } /* else {\n            throw new Error('FormUtils: This field type is unsupported.');\n        }*/\n    return type;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nisFieldEncrypted(key: string): boolean {\n    return key.indexOf('customEncrypted') > -1;\n  }\n/**\n * @param {?} field\n * @param {?} http\n * @param {?} config\n * @param {?=} overrides\n * @param {?=} forTable\n * @return {?}\n */\ngetControlForField(\n    field: any,\n    http,\n    config: { token?: string; restUrl?: string; military?: boolean },\n    overrides?: any,\n    forTable: boolean = false,\n  ) {\n    // TODO: if field.type overrides `determineInputType` we should use it in that method or use this method\n    // TODO: (cont.) as the setter of the field argument\n    let /** @type {?} */ type: string = this.determineInputType(field) || field.type;\n    let /** @type {?} */ control: any;\n    let /** @type {?} */ controlConfig: NovoControlConfig = {\n      type: type,\n      key: field.name,\n      label: field.label,\n      placeholder: field.hint || '',\n      required: field.required,\n      hidden: !field.required,\n      encrypted: this.isFieldEncrypted(field.name ? field.name.toString() : ''),\n      value: field.value || field.defaultValue,\n      sortOrder: field.sortOrder,\n      associatedEntity: field.associatedEntity,\n      optionsType: field.optionsType,\n      multiple: field.multiValue,\n      readOnly: !!field.disabled || !!field.readOnly,\n      maxlength: field.maxLength,\n      interactions: field.interactions,\n      dataSpecialization: field.dataSpecialization,\n      dataType: field.dataType,\n      description: field.description || '',\n      tooltip: field.tooltip,\n      tooltipPosition: field.tooltipPosition,\n      template: field.template,\n      customControlConfig: field.customControlConfig,\n      restrictFieldInteractions: field.restrictFieldInteractions,\n    };\n    // TODO: getControlOptions should always return the correct format\n    let /** @type {?} */ optionsConfig = this.getControlOptions(field, http, config);\n    if (Array.isArray(optionsConfig) && !(type === 'chips' || type === 'picker')) {\n      controlConfig.options = optionsConfig;\n    } else if (Array.isArray(optionsConfig) && (type === 'chips' || type === 'picker')) {\n      controlConfig.config = {\n        options: optionsConfig,\n      };\n    } else if (optionsConfig) {\n      controlConfig.config = optionsConfig;\n    }\n\n    if (type === 'year') {\n      controlConfig.maxlength = 4;\n    }\n    // TODO: Overrides should be an iterable of all properties (potentially a private method)\n    let /** @type {?} */ overrideResultsTemplate;\n    let /** @type {?} */ overridePreviewTemplate;\n    if (overrides && overrides[field.name]) {\n      if (overrides[field.name].resultsTemplate) {\n        overrideResultsTemplate = overrides[field.name].resultsTemplate;\n        controlConfig.config.resultsTemplate = overrideResultsTemplate;\n        delete overrides[field.name].resultsTemplate;\n      }\n      if (overrides[field.name].overridePreviewTemplate) {\n        overrideResultsTemplate = overrides[field.name].overridePreviewTemplate;\n        controlConfig.config.overridePreviewTemplate = overrideResultsTemplate;\n        delete overrides[field.name].overridePreviewTemplate;\n      }\n      if (overrides[field.name].pickerCallback) {\n        controlConfig.config.callback = overrides[field.name].pickerCallback;\n      }\n      if (overrides[field.name].type) {\n        type = overrides[field.name].type;\n      }\n      if (overrides[field.name].columns) {\n        controlConfig.config.columns = overrides[field.name].columns;\n        controlConfig.closeOnSelect = true;\n        delete controlConfig.label;\n      }\n      Object.assign(controlConfig, overrides[field.name]);\n    }\n\n    switch (type) {\n      case 'entitychips':\n        // TODO: This doesn't belong in this codebase\n        controlConfig.multiple = true;\n        controlConfig.config.resultsTemplate = overrideResultsTemplate || EntityPickerResults;\n        controlConfig.config.previewTemplate = overridePreviewTemplate || EntityPickerResult;\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'chips':\n        controlConfig.multiple = true;\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'entitypicker':\n        // TODO: This doesn't belong in this codebase\n        controlConfig.config.resultsTemplate = overrideResultsTemplate || EntityPickerResults;\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'picker':\n        // TODO: When appendToBody picker works better in table/form\n        control = new PickerControl(controlConfig);\n        break;\n      case 'datetime':\n        controlConfig.military = config ? !!config.military : false;\n        control = new DateTimeControl(controlConfig);\n        break;\n      case 'date':\n        controlConfig.dateFormat = field.dateFormat;\n        controlConfig.textMaskEnabled = field.textMaskEnabled;\n        controlConfig.allowInvalidDate = field.allowInvalidDate;\n        controlConfig.military = config ? !!config.military : false;\n        control = new DateControl(controlConfig);\n        break;\n      case 'time':\n        controlConfig.military = config ? !!config.military : false;\n        control = new TimeControl(controlConfig);\n        break;\n      case 'currency':\n      case 'money':\n      case 'email':\n      case 'percentage':\n      case 'float':\n      case 'number':\n      case 'year':\n        // TODO: Only types from `determineInputType` should be used in this class\n        if (type === 'money') {\n          type = 'currency';\n        }\n        controlConfig.type = type;\n        control = new TextBoxControl(controlConfig);\n        break;\n      case 'text':\n        control = new TextBoxControl(controlConfig);\n        break;\n      case 'textarea':\n        control = new TextAreaControl(controlConfig);\n        break;\n      case 'editor':\n        control = new EditorControl(controlConfig);\n        break;\n      case 'editor-minimal':\n        control = new EditorControl(controlConfig);\n        control.minimal = true;\n        break;\n      case 'tiles':\n        control = new TilesControl(controlConfig);\n        break;\n      case 'checkbox':\n        controlConfig.checkboxLabel = field.checkboxLabel;\n        control = new CheckboxControl(controlConfig);\n        break;\n      case 'checklist':\n        control = new CheckListControl(controlConfig);\n        break;\n      case 'radio':\n        control = new RadioControl(controlConfig);\n        break;\n      case 'select':\n        control = new SelectControl(controlConfig);\n        break;\n      case 'address':\n        controlConfig.required = field.required || false;\n        if (Helpers.isBlank(controlConfig.config)) {\n          controlConfig.config = {};\n        }\n        controlConfig.config.required = field.required;\n        controlConfig.config.readOnly = controlConfig.readOnly;\n        if (field.fields && field.fields.length) {\n          for (let /** @type {?} */ subfield of field.fields) {\n            controlConfig.config[subfield.name] = {\n              required: !!subfield.required,\n              hidden: !!subfield.readOnly,\n            };\n            if (!Helpers.isEmpty(subfield.label)) {\n              controlConfig.config[subfield.name].label = subfield.label;\n            }\n            if (!Helpers.isEmpty(subfield.maxLength)) {\n              controlConfig.config[subfield.name].maxlength = subfield.maxLength;\n            }\n            controlConfig.required = controlConfig.required || subfield.required;\n            if (subfield.defaultValue) {\n              if (Helpers.isBlank(controlConfig.value)) {\n                controlConfig.value = {};\n              }\n              controlConfig.value[subfield.name] = subfield.defaultValue;\n            } else if (subfield.name === 'countryID') {\n              if (Helpers.isBlank(controlConfig.value)) {\n                controlConfig.value = {};\n              }\n              controlConfig.value[subfield.name] = 1;\n            }\n            if (subfield.name === 'state' || subfield.name === 'countryID') {\n              if (subfield.name === 'state') {\n                subfield.optionsType = 'State';\n              } else if (subfield.name === 'countryID') {\n                subfield.optionsType = 'Country';\n              }\n              if (!subfield.optionsUrl) {\n                subfield.optionsUrl = `options/${subfield.optionsType}`;\n              }\n              controlConfig.config[subfield.name].pickerConfig = this.getControlOptions(subfield, http, config);\n            }\n          }\n        }\n        controlConfig.isEmpty = this.isAddressEmpty;\n        control = new AddressControl(controlConfig);\n        break;\n      case 'file':\n        control = new FileControl(controlConfig);\n        break;\n      case 'custom':\n        control = new CustomControl(controlConfig);\n        break;\n      default:\n        control = new TextBoxControl(controlConfig);\n        break;\n    }\n    return control;\n  }\n/**\n * @param {?} meta\n * @param {?} currencyFormat\n * @param {?} http\n * @param {?} config\n * @param {?=} overrides\n * @param {?=} forTable\n * @return {?}\n */\ntoControls(\n    meta,\n    currencyFormat,\n    http,\n    config: { token?: string; restUrl?: string; military?: boolean },\n    overrides?: any,\n    forTable: boolean = false,\n  ) {\n    let /** @type {?} */ controls = [];\n    if (meta && meta.fields) {\n      let /** @type {?} */ fields = meta.fields;\n      fields.forEach((field) => {\n        if (\n          field.name !== 'id' &&\n          (field.dataSpecialization !== 'SYSTEM' || ['address', 'billingAddress', 'secondaryAddress'].indexOf(field.name) !== -1) &&\n          !field.readOnly\n        ) {\n          let /** @type {?} */ control = this.getControlForField(field, http, config, overrides, forTable);\n          // Set currency format\n          if (control.subType === 'currency') {\n            control.currencyFormat = currencyFormat;\n          }\n          // Add to controls\n          controls.push(control);\n        }\n      });\n    }\n    return controls;\n  }\n/**\n * @param {?} meta\n * @param {?} currencyFormat\n * @param {?} http\n * @param {?} config\n * @param {?=} overrides\n * @return {?}\n */\ntoTableControls(meta, currencyFormat, http, config: { token?: string; restUrl?: string; military?: boolean }, overrides?: any) {\n    let /** @type {?} */ controls = this.toControls(meta, currencyFormat, http, config, overrides, true);\n    let /** @type {?} */ ret = {};\n    controls.forEach((control: BaseControl) => {\n      ret[control.key] = {\n        editorType: control.__type,\n        editorConfig: control.__config,\n      };\n    });\n    return ret;\n  }\n/**\n * @param {?} meta\n * @param {?} currencyFormat\n * @param {?} http\n * @param {?} config\n * @param {?=} overrides\n * @return {?}\n */\ntoFieldSets(meta, currencyFormat, http, config: { token?: string; restUrl?: string; military?: boolean }, overrides?) {\n    let /** @type {?} */ fieldsets: Array<NovoFieldset> = [];\n    let /** @type {?} */ ranges = [];\n    if (meta && meta.fields) {\n      let /** @type {?} */ fields = meta.fields\n        .map((field) => {\n          if (!field.hasOwnProperty('sortOrder')) {\n            field.sortOrder = Number.MAX_SAFE_INTEGER - 1;\n          }\n          return field;\n        })\n        .sort(Helpers.sortByField(['sortOrder', 'name']));\n      if (meta.sectionHeaders && meta.sectionHeaders.length) {\n        meta.sectionHeaders.sort(Helpers.sortByField(['sortOrder', 'name']));\n        meta.sectionHeaders.forEach((item, i) => {\n          if (item.enabled) {\n            if (item.sortOrder > 0 && fieldsets.length === 0) {\n              fieldsets.push({\n                controls: [],\n              });\n              ranges.push({\n                min: 0,\n                max: item.sortOrder - 1,\n                fieldsetIdx: 0,\n              });\n            }\n            fieldsets.push({\n              title: item.label,\n              icon: item.icon || 'bhi-section',\n              controls: [],\n            });\n            ranges.push({\n              min: item.sortOrder,\n              max: Number.MAX_SAFE_INTEGER,\n              fieldsetIdx: fieldsets.length - 1,\n            });\n            if (i > 0 && fieldsets.length > 1) {\n              ranges[fieldsets.length - 2].max = item.sortOrder - 1;\n            }\n          }\n        });\n        if (!ranges.length) {\n          fieldsets.push({\n            controls: [],\n          });\n          ranges.push({\n            min: 0,\n            max: Number.MAX_SAFE_INTEGER,\n            fieldsetIdx: 0,\n          });\n        }\n      } else {\n        fieldsets.push({\n          controls: [],\n        });\n        ranges.push({\n          min: 0,\n          max: Number.MAX_SAFE_INTEGER,\n          fieldsetIdx: 0,\n        });\n      }\n      fields.forEach((field) => {\n        if (\n          field.name !== 'id' &&\n          (field.dataSpecialization !== 'SYSTEM' || ['address', 'billingAddress', 'secondaryAddress'].indexOf(field.name) !== -1) &&\n          !field.readOnly\n        ) {\n          let /** @type {?} */ control = this.getControlForField(field, http, config, overrides);\n          // Set currency format\n          if (control.subType === 'currency') {\n            control.currencyFormat = currencyFormat;\n          }\n          let /** @type {?} */ location = ranges.find((item) => {\n            return (item.min <= field.sortOrder && field.sortOrder <= item.max) || (item.min <= field.sortOrder && item.min === item.max);\n          });\n          if (location) {\n            // Add to controls\n            fieldsets[location.fieldsetIdx].controls.push(control);\n          }\n        }\n      });\n    }\n    if (fieldsets.length > 0) {\n      return fieldsets;\n    } else {\n      return [\n        {\n          controls: this.toControls(meta, currencyFormat, http, config),\n        },\n      ];\n    }\n  }\n/**\n * @param {?} field\n * @param {?} http\n * @param {?} config\n * @return {?}\n */\ngetControlOptions(field: any, http: any, config: { token?: string; restUrl?: string; military?: boolean }): any {\n    // TODO: The token property of config is the only property used; just pass in `token: string`\n    if (field.dataType === 'Boolean' && !field.options) {\n      // TODO: dataType should only be determined by `determineInputType` which doesn't ever return 'Boolean' it\n      // TODO: (cont.) returns `tiles`\n      return [{ value: false, label: this.labels.no }, { value: true, label: this.labels.yes }];\n    } else if (field.optionsUrl) {\n      return this.optionsService.getOptionsConfig(http, field, config);\n    } else if (Array.isArray(field.options) && field.type === 'chips') {\n      let /** @type {?} */ options = field.options;\n      return {\n        field: 'value',\n        format: '$label',\n        options,\n      };\n    } else if (field.options) {\n      return field.options;\n    }\n    return null;\n  }\n/**\n * @param {?} controls\n * @param {?} values\n * @param {?=} keepClean\n * @param {?=} keyOverride\n * @return {?}\n */\nsetInitialValues(controls: Array<NovoControlConfig>, values: any, keepClean?: boolean, keyOverride?: string) {\n    for (let /** @type {?} */ i = 0; i < controls.length; i++) {\n      let /** @type {?} */ control = controls[i];\n      let /** @type {?} */ key = keyOverride ? control.key.replace(keyOverride, '') : control.key;\n      let /** @type {?} */ value = values[key];\n\n      if (Helpers.isBlank(value)) {\n        continue;\n      }\n\n      if (Array.isArray(value) && value.length === 0) {\n        continue;\n      }\n\n      if (Array.isArray(value) && value.length > 0) {\n        value = value.filter((val) => !(Object.keys(val).length === 0 && val.constructor === Object));\n        if (value.length === 0) {\n          continue;\n        }\n      }\n\n      if (value.data && value.data.length === 0) {\n        continue;\n      }\n\n      if (Object.keys(value).length === 0 && value.constructor === Object) {\n        continue;\n      }\n\n      control.value = value;\n      // TODO: keepClean is not required, but is always used. It should default (to true?)\n      control.dirty = !keepClean;\n    }\n  }\n/**\n * @param {?} fieldsets\n * @param {?} values\n * @param {?=} keepClean\n * @return {?}\n */\nsetInitialValuesFieldsets(fieldsets: Array<NovoFieldset>, values, keepClean?: boolean) {\n    fieldsets.forEach((fieldset) => {\n      this.setInitialValues(fieldset.controls, values, keepClean);\n    });\n  }\n/**\n * @param {?} controls\n * @return {?}\n */\nforceShowAllControls(controls: Array<NovoControlConfig>) {\n    controls.forEach((control) => {\n      control.hidden = false;\n    });\n  }\n/**\n * @param {?} fieldsets\n * @return {?}\n */\nforceShowAllControlsInFieldsets(fieldsets: Array<NovoFieldset>) {\n    fieldsets.forEach((fieldset) => {\n      fieldset.controls.forEach((control) => {\n        control.hidden = false;\n      });\n    });\n  }\n/**\n * @param {?} form\n * @return {?}\n */\nforceValidation(form: NovoFormGroup): void {\n    Object.keys(form.controls).forEach((key: string) => {\n      let /** @type {?} */ control: any = form.controls[key];\n      if (control.required && Helpers.isBlank(form.value[control.key])) {\n        control.markAsDirty();\n        control.markAsTouched();\n      }\n    });\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nisAddressEmpty(control: any): boolean {\n    let /** @type {?} */ fieldList: string[] = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n    let /** @type {?} */ valid: boolean = true;\n    if (control.value && control.config) {\n      fieldList.forEach((subfield: string) => {\n        if (\n          ((subfield !== 'countryID' &&\n            !Helpers.isEmpty(control.config[subfield]) &&\n            control.config[subfield].required &&\n            (Helpers.isBlank(control.value[subfield]) || Helpers.isEmpty(control.value[subfield]))) ||\n            (subfield === 'countryID' &&\n              !Helpers.isEmpty(control.config.countryID) &&\n              control.config.countryID.required &&\n              Helpers.isEmpty(control.value.countryName))) &&\n          !(\n            subfield === 'state' &&\n            !Helpers.isBlank(control.value.countryName) &&\n            control.config.state.pickerConfig &&\n            control.config.state.pickerConfig.defaultOptions &&\n            control.config.state.pickerConfig.defaultOptions.length === 0\n          )\n        ) {\n          valid = false;\n        }\n      });\n    }\n    return valid;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n{type: OptionsService, },\n];\n}\n\nfunction FormUtils_tsickle_Closure_declarations() {\n/** @type {?} */\nFormUtils.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormUtils.ctorParameters;\n/** @type {?} */\nFormUtils.prototype.ASSOCIATED_ENTITY_LIST;\n/** @type {?} */\nFormUtils.prototype.PICKER_TEST_LIST;\n/** @type {?} */\nFormUtils.prototype.labels;\n/** @type {?} */\nFormUtils.prototype.optionsService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable } from '@angular/core';\n// APP\n\nimport { NovoToastElement } from './Toast';\nimport { ComponentUtils } from '../../utils/component-utils/ComponentUtils';\nexport class NovoToastService {\n    _parentViewContainer: any;\n    references: Array<any> = [];\n    themes: Array<string> = [\n        'default',\n        'success',\n        'info',\n        'warning',\n        'danger'\n    ];\n    icons: any = {\n        default: 'bell',\n        success: 'check',\n        info: 'info',\n        warning: 'warning',\n        danger: 'remove'\n    };\n    defaults: any = {\n        hideDelay: 3500,\n        position: 'growlTopRight',\n        theme: 'default'\n    };\n/**\n * @param {?} componentUtils\n */\nconstructor(private componentUtils: ComponentUtils) {\n    }\n/**\n * @param {?} view\n * @return {?}\n */\nset parentViewContainer(view) {\n        this._parentViewContainer = view;\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nalert(options) {\n        return new Promise((resolve) => {\n            if (!this._parentViewContainer) {\n                console.error('No parent view container specified for the ToastService. Set it inside your main application. \\nthis.toastService.parentViewContainer = view (ViewContainerRef)');\n                return;\n            }\n            let /** @type {?} */ toast = this.componentUtils.appendNextToLocation(NovoToastElement, this._parentViewContainer);\n            this.references.push(toast);\n            this.handleAlert(toast.instance, options);\n            resolve(toast);\n        });\n    }\n/**\n * @param {?} toast\n * @return {?}\n */\nisVisible(toast) {\n        return toast.show;\n    }\n/**\n * @param {?} toast\n * @return {?}\n */\nhide(toast) {\n        toast.animate = false;\n        setTimeout(() => {\n            toast.show = false;\n            const /** @type {?} */ REF = this.references.filter(x => x.instance === toast)[0];\n            if (REF) {\n                this.references.splice(this.references.indexOf(REF), 1);\n                REF.destroy();\n            }\n        }, 300);\n    }\n/**\n * @param {?} toast\n * @param {?} options\n * @return {?}\n */\nhandleAlert(toast, options) {\n        this.setToastOnSession(toast, options);\n        setTimeout(() => {\n            this.show(toast);\n        }, 20);\n        if (!toast.isCloseable) {\n            this.toastTimer(toast);\n        }\n\n    }\n/**\n * @param {?} toast\n * @param {?} opts\n * @return {?}\n */\nsetToastOnSession(toast, opts) {\n        const /** @type {?} */ OPTIONS = (typeof opts === 'object') ? opts : {};\n\n        toast.parent = this;\n        toast.title = OPTIONS.title || '';\n        toast.message = OPTIONS.message || '';\n        toast.hideDelay = OPTIONS.hideDelay || this.defaults.hideDelay;\n        toast.link = OPTIONS.link || '';\n        toast.isCloseable = OPTIONS.isCloseable || false;\n\n        const /** @type {?} */ CUSTOM_CLASS = OPTIONS.customClass || '';\n        const /** @type {?} */ ALERT_STYLE = OPTIONS.theme || this.defaults.theme;\n        const /** @type {?} */ ALERT_POSITION = OPTIONS.position || this.defaults.position;\n        const /** @type {?} */ ALERT_ICON = OPTIONS.icon || this.icons.default;\n\n        toast.iconClass = `bhi-${ALERT_ICON}`;\n        toast.launched = true;\n        toast.alertTheme = `${ALERT_STYLE} ${ALERT_POSITION} ${CUSTOM_CLASS} toast-container launched`;\n    }\n/**\n * @param {?} toast\n * @return {?}\n */\nshow(toast) {\n        toast.show = true;\n        setTimeout(addClass, 25);\n/**\n * Adds animate class to be called after a timeout\n * \n * @return {?}\n */\nfunction addClass() {\n            toast.animate = true;\n        }\n    }\n/**\n * @param {?} toast\n * @return {?}\n */\ntoastTimer(toast) {\n        if (toast.hideDelay < 0) {\n            return;\n        }\n        setTimeout(() => {\n            this.hide(toast);\n        }, toast.hideDelay);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentUtils, },\n];\n}\n\nfunction NovoToastService_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoToastService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoToastService.ctorParameters;\n/** @type {?} */\nNovoToastService.prototype._parentViewContainer;\n/** @type {?} */\nNovoToastService.prototype.references;\n/** @type {?} */\nNovoToastService.prototype.themes;\n/** @type {?} */\nNovoToastService.prototype.icons;\n/** @type {?} */\nNovoToastService.prototype.defaults;\n/** @type {?} */\nNovoToastService.prototype.componentUtils;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, ReflectiveInjector } from '@angular/core';\n// APP\n\nimport { NovoModalRef, NovoModalParams, NovoModalContainerElement } from './Modal';\nimport { ComponentUtils } from './../../utils/component-utils/ComponentUtils';\nexport class NovoModalService {\n    _parentViewContainer: any = null;\n/**\n * @param {?} componentUtils\n */\nconstructor(private componentUtils: ComponentUtils) {\n    }\n/**\n * @param {?} view\n * @return {?}\n */\nset parentViewContainer(view) {\n        this._parentViewContainer = view;\n    }\n/**\n * @param {?} component\n * @param {?=} scope\n * @return {?}\n */\nopen(component, scope = {}) {\n        if (!this._parentViewContainer) {\n            console.error('No parent view container specified for the ModalService. Set it inside your main application. \\nthis.modalService.parentViewContainer = view (ViewContainerRef)');\n            return null;\n        }\n\n        const /** @type {?} */ modal = new NovoModalRef();\n        modal.component = component;\n        modal.open();\n\n        let /** @type {?} */ bindings = ReflectiveInjector.resolve([\n            { provide: NovoModalRef, useValue: modal },\n            { provide: NovoModalParams, useValue: scope }\n        ]);\n        modal.containerRef = this.componentUtils.appendNextToLocation(NovoModalContainerElement, this._parentViewContainer, bindings);\n        return modal;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentUtils, },\n];\n}\n\nfunction NovoModalService_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoModalService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoModalService.ctorParameters;\n/** @type {?} */\nNovoModalService.prototype._parentViewContainer;\n/** @type {?} */\nNovoModalService.prototype.componentUtils;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component } from '@angular/core';\n// APP\n\nimport { NovoModalRef, NovoModalParams } from '../modal/Modal';\nimport { NovoLabelService } from '../../services/novo-label-service';\nexport class ControlConfirmModal {\n/**\n * @param {?} modalRef\n * @param {?} params\n * @param {?} labels\n */\nconstructor(private modalRef: NovoModalRef,\npublic params: NovoModalParams,\npublic labels: NovoLabelService) {\n    }\n/**\n * @param {?} result\n * @return {?}\n */\npublic close(result: boolean): void {\n        this.modalRef.close(result);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'control-confirm-modal',\n    template: `\n        <novo-notification type=\"warning\" [attr.data-automation-id]=\"'field-interaction-modal-' + params['key']\">\n            <h1>{{ labels.confirmChangesModalMessage }}</h1>\n            <h2 *ngIf=\"!params['message']\"><label>{{ params['label'] }}:</label> {{ params['oldValue'] }} <i class=\"bhi-arrow-right\"></i> {{ params['newValue'] }}</h2>\n            <h2 *ngIf=\"params['message']\">{{ params['message'] }}</h2>\n            <button theme=\"standard\" (click)=\"close(false)\" [attr.data-automation-id]=\"'field-interaction-modal-cancel' + params['key']\">{{ labels.cancel }}</button>\n            <button theme=\"primary\" icon=\"check\" (click)=\"close(true)\" autofocus [attr.data-automation-id]=\"'field-interaction-modal-save-' + params['key']\">{{ labels.save }}</button>\n        </novo-notification>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoModalRef, },\n{type: NovoModalParams, },\n{type: NovoLabelService, },\n];\n}\n\nfunction ControlConfirmModal_tsickle_Closure_declarations() {\n/** @type {?} */\nControlConfirmModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nControlConfirmModal.ctorParameters;\n/** @type {?} */\nControlConfirmModal.prototype.modalRef;\n/** @type {?} */\nControlConfirmModal.prototype.params;\n/** @type {?} */\nControlConfirmModal.prototype.labels;\n}\n\nexport class ControlPromptModal {\n/**\n * @param {?} modalRef\n * @param {?} params\n * @param {?} labels\n */\nconstructor(private modalRef: NovoModalRef,\npublic params: NovoModalParams,\npublic labels: NovoLabelService) {\n    }\n/**\n * @param {?} result\n * @return {?}\n */\npublic close(result: boolean): void {\n        this.modalRef.close(result);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'control-prompt-modal',\n    template: `\n        <novo-notification type=\"warning\" [attr.data-automation-id]=\"'field-interaction-modal-' + params['key']\">\n            <h1>{{ labels.promptModalMessage }}</h1>\n            <p *ngFor=\"let change of params['changes']\">{{ change }}</p>\n            <button theme=\"standard\" (click)=\"close(false)\" [attr.data-automation-id]=\"'field-interaction-modal-cancel' + params['key']\">{{ labels.cancel }}</button>\n            <button theme=\"primary\" icon=\"check\" (click)=\"close(true)\" autofocus [attr.data-automation-id]=\"'field-interaction-modal-yes-' + params['key']\">{{ labels.yes }}</button>\n        </novo-notification>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoModalRef, },\n{type: NovoModalParams, },\n{type: NovoLabelService, },\n];\n}\n\nfunction ControlPromptModal_tsickle_Closure_declarations() {\n/** @type {?} */\nControlPromptModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nControlPromptModal.ctorParameters;\n/** @type {?} */\nControlPromptModal.prototype.modalRef;\n/** @type {?} */\nControlPromptModal.prototype.params;\n/** @type {?} */\nControlPromptModal.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// Vendor\n\nimport'rxjs/add/operator/map';\n// APP\n\nimport { NovoFormControl } from './NovoFormControl';\nimport { NovoControlConfig } from './FormControls';\nimport { FormUtils } from '../../utils/form-utils/FormUtils';\nimport { NovoToastService } from '../toast/ToastService';\nimport { NovoModalService } from '../modal/ModalService';\nimport { ControlConfirmModal, ControlPromptModal } from './FieldInteractionModals';\nimport { Helpers } from '../../utils/Helpers';\nimport { AppBridge } from '../../utils/app-bridge/AppBridge';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { IFieldInteractionEvent } from './FormInterfaces';\nexport class FieldInteractionApi {\nprivate _globals: any;\nprivate _form: any;\nprivate _currentKey: string;\nprivate _appBridge: AppBridge;\nprivate asyncBlockTimeout: any;\npublic static FIELD_POSITIONS = {\n    ABOVE_FIELD: 'ABOVE_FIELD',\n    BELOW_FIELD: 'BELOW_FIELD',\n    TOP_OF_FORM: 'TOP_OF_FORM',\n    BOTTOM_OF_FORM: 'BOTTOM_OF_FORM',\n  };\n/**\n * @param {?} toaster\n * @param {?} modalService\n * @param {?} formUtils\n * @param {?} http\n * @param {?} labels\n */\nconstructor(\nprivate toaster: NovoToastService,\nprivate modalService: NovoModalService,\nprivate formUtils: FormUtils,\nprivate http: HttpClient,\nprivate labels: NovoLabelService,\n  ) {}\n/**\n * @param {?} form\n * @return {?}\n */\nset form(form: any) {\n    this._form = form;\n  }\n/**\n * @return {?}\n */\nget form(): any {\n    return this._form;\n  }\n/**\n * @return {?}\n */\nget associations(): object {\n    return this.form.hasOwnProperty('associations') ? this.form.associations : {};\n  }\n/**\n * @return {?}\n */\nget currentEntity(): string {\n    return this.form.hasOwnProperty('currentEntity') ? this.form.currentEntity : undefined;\n  }\n/**\n * @return {?}\n */\nget currentEntityId(): string {\n    return this.form.hasOwnProperty('currentEntityId') ? this.form.currentEntityId : undefined;\n  }\n/**\n * @return {?}\n */\nget isEdit(): boolean {\n    return this.form.hasOwnProperty('edit') ? this.form.edit : false;\n  }\n/**\n * @return {?}\n */\nget isAdd(): boolean {\n    return this.form.hasOwnProperty('edit') ? !this.form.edit : false;\n  }\n/**\n * @param {?} globals\n * @return {?}\n */\nset globals(globals: any) {\n    this._globals = globals;\n  }\n/**\n * @return {?}\n */\nget globals(): any {\n    return this._globals;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nset currentKey(key: string) {\n    this._currentKey = key;\n  }\n/**\n * @return {?}\n */\nget currentKey(): string {\n    return this._currentKey;\n  }\n/**\n * @param {?} appBridge\n * @return {?}\n */\nset appBridge(appBridge: AppBridge) {\n    this._appBridge = appBridge;\n  }\n/**\n * @return {?}\n */\nget appBridge(): AppBridge {\n    return this._appBridge;\n  }\n/**\n * @return {?}\n */\npublic isActiveControlValid(): boolean {\n    return !!this.getValue(this.currentKey);\n  }\n/**\n * @return {?}\n */\npublic getActiveControl(): NovoFormControl {\n    return this.getControl(this.currentKey);\n  }\n/**\n * @return {?}\n */\npublic getActiveKey(): string {\n    return this.currentKey;\n  }\n/**\n * @return {?}\n */\npublic getActiveValue(): any {\n    return this.getValue(this.currentKey);\n  }\n/**\n * @return {?}\n */\npublic getActiveInitialValue(): any {\n    return this.getInitialValue(this.currentKey);\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic getControl(key: string): NovoFormControl {\n    if (!key) {\n      console.error('[FieldInteractionAPI] - invalid or missing \"key\"'); // tslint:disable-line\n      return null;\n    }\n\n    let /** @type {?} */ control = this.form.controls[key];\n    if (!control) {\n      console.error('[FieldInteractionAPI] - could not find a control in the form by the key --', key); // tslint:disable-line\n      return null;\n    }\n\n    return /** @type {?} */(( control as NovoFormControl));\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic getValue(key: string): any {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control) {\n      return control.value;\n    }\n    return null;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic getRawValue(key: string): any {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control) {\n      return control.rawValue;\n    }\n    return null;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic getInitialValue(key: string): any {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control) {\n      return control.initialValue;\n    }\n    return null;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npublic setValue(\n    key: string,\n    value: any,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.setValue(value, options);\n      this.triggerEvent({ controlKey: key, prop: 'value', value: value });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npublic patchValue(\n    key: string,\n    value: any,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n      emitModelToViewChange?: boolean;\n      emitViewToModelChange?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.setValue(value, options);\n      this.triggerEvent({ controlKey: key, prop: 'value', value: value });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} isReadOnly\n * @return {?}\n */\npublic setReadOnly(key: string, isReadOnly: boolean): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.setReadOnly(isReadOnly);\n      this.triggerEvent({ controlKey: key, prop: 'readOnly', value: isReadOnly });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} required\n * @return {?}\n */\npublic setRequired(key: string, required: boolean): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.setRequired(required);\n      this.triggerEvent({ controlKey: key, prop: 'required', value: required });\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} clearValue\n * @return {?}\n */\npublic hide(key: string, clearValue: boolean = true): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.hide(clearValue);\n      this.disable(key, { emitEvent: false });\n      this.triggerEvent({ controlKey: key, prop: 'hidden', value: true });\n    }\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic show(key: string): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.show();\n      this.enable(key, { emitEvent: false });\n      this.triggerEvent({ controlKey: key, prop: 'hidden', value: false });\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic disable(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.disable(options);\n      this.triggerEvent({ controlKey: key, prop: 'readOnly', value: true });\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic enable(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.enable(options);\n      this.triggerEvent({ controlKey: key, prop: 'readOnly', value: false });\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} validationMessage\n * @return {?}\n */\npublic markAsInvalid(key: string, validationMessage?: string): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control) {\n      if (control && !control.restrictFieldInteractions) {\n        control.markAsInvalid(validationMessage);\n      }\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic markAsDirty(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsDirty(options);\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic markAsPending(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsPending(options);\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic markAsPristine(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsPristine(options);\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic markAsTouched(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsTouched(options);\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic markAsUntouched(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.markAsUntouched(options);\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} options\n * @return {?}\n */\npublic updateValueAndValidity(\n    key: string,\n    options?: {\n      onlySelf?: boolean;\n      emitEvent?: boolean;\n    },\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.updateValueAndValidity(options);\n    }\n  }\n/**\n * @param {?} toastConfig\n * @return {?}\n */\npublic displayToast(toastConfig: {\n    message: string;\n    title?: string;\n    hideDelay?: number;\n    icon?: string;\n    theme?: string;\n    position?: string;\n    isCloseable?: boolean;\n    customClass?: string;\n  }): void {\n    if (this.toaster) {\n      this.toaster.alert(toastConfig);\n    }\n  }\n/**\n * @param {?} key\n * @param {?} tip\n * @param {?=} icon\n * @param {?=} allowDismiss\n * @return {?}\n */\npublic displayTip(key: string, tip: string, icon?: string, allowDismiss?: boolean): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.tipWell = {\n        tip: tip,\n        icon: icon,\n        button: allowDismiss,\n      };\n      this.triggerEvent({ controlKey: key, prop: 'tipWell', value: tip });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} tooltip\n * @return {?}\n */\npublic setTooltip(key: string, tooltip: string): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control.tooltip = tooltip;\n      if (tooltip.length >= 40 && tooltip.length <= 400) {\n        control.tooltipSize = 'large';\n        control.tooltipPreline = true;\n      } else if (tooltip.length > 400) {\n        control.tooltipSize = 'extra-large';\n      }\n      this.triggerEvent({ controlKey: key, prop: 'tooltip', value: tooltip });\n    }\n  }\n/**\n * @param {?} key\n * @param {?=} message\n * @return {?}\n */\npublic confirmChanges(key: string, message?: string): Promise<boolean> {\n    let /** @type {?} */ history = this.getProperty(key, 'valueHistory');\n    let /** @type {?} */ oldValue = history[history.length - 2];\n    let /** @type {?} */ newValue = this.getValue(key);\n    let /** @type {?} */ label = this.getProperty(key, 'label');\n    ( /** @type {?} */((document.activeElement as any))).blur();\n    return this.modalService.open(ControlConfirmModal, { oldValue, newValue, label, message, key }).onClosed.then((result) => {\n      if (!result) {\n        this.setValue(key, oldValue, { emitEvent: false });\n      }\n    });\n  }\n/**\n * @param {?} key\n * @param {?} changes\n * @return {?}\n */\npublic promptUser(key: string, changes: string[]): Promise<boolean> {\n    let /** @type {?} */ showYes: boolean = true;\n    ( /** @type {?} */((document.activeElement as any))).blur();\n    return this.modalService.open(ControlPromptModal, { changes }).onClosed;\n  }\n/**\n * @param {?} key\n * @param {?} prop\n * @param {?} value\n * @return {?}\n */\npublic setProperty(key: string, prop: string, value: any): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      control[prop] = value;\n      this.triggerEvent({ controlKey: key, prop: prop, value: value });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} prop\n * @return {?}\n */\npublic getProperty(key: string, prop: string): any {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      return control[prop];\n    }\n    return null;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic isValueEmpty(key: string): boolean {\n    let /** @type {?} */ value = this.getValue(key);\n    return Helpers.isEmpty(value);\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic isValueBlank(key: string): boolean {\n    let /** @type {?} */ value = this.getValue(key);\n    return Helpers.isBlank(value);\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic hasField(key: string): boolean {\n    return !!this.form.controls[key];\n  }\n/**\n * @param {?} key\n * @param {?} newOption\n * @return {?}\n */\npublic addStaticOption(key: string, newOption: any): void {\n    let /** @type {?} */ control = this.getControl(key);\n    let /** @type {?} */ optionToAdd = newOption;\n    let /** @type {?} */ isUnique: boolean = true;\n    if (control && !control.restrictFieldInteractions) {\n      let /** @type {?} */ currentOptions = this.getProperty(key, 'options');\n      if (!currentOptions || !currentOptions.length) {\n        let /** @type {?} */ config = this.getProperty(key, 'config');\n        if (config) {\n          currentOptions = config.options;\n          if (currentOptions && Array.isArray(currentOptions)) {\n            if (currentOptions[0].value && !optionToAdd.value) {\n              optionToAdd = { value: newOption, label: newOption };\n            }\n            config.options = [...currentOptions, optionToAdd];\n            this.setProperty(key, 'config', config);\n          }\n        }\n      } else {\n        if (currentOptions[0].value && !optionToAdd.value) {\n          optionToAdd = { value: newOption, label: newOption };\n        }\n        // Ensure duplicate values are not added\n        currentOptions.forEach((option) => {\n          if ((option.value && option.value === optionToAdd.value) || option === optionToAdd) {\n            isUnique = false;\n          }\n        });\n        if (isUnique) {\n          this.setProperty(key, 'options', [...currentOptions, optionToAdd]);\n        }\n      }\n      if (isUnique) {\n        this.triggerEvent({ controlKey: key, prop: 'options', value: [...currentOptions, optionToAdd] });\n      }\n    }\n  }\n/**\n * @param {?} key\n * @param {?} optionToRemove\n * @return {?}\n */\npublic removeStaticOption(key: string, optionToRemove: string): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      let /** @type {?} */ currentOptions = this.getProperty(key, 'options');\n      if (!currentOptions || !currentOptions.length) {\n        let /** @type {?} */ config = this.getProperty(key, 'config');\n        if (config) {\n          currentOptions = config.options;\n          if (currentOptions && Array.isArray(currentOptions)) {\n            let /** @type {?} */ index = -1;\n            currentOptions.forEach((opt, i) => {\n              if (opt.value || opt.label) {\n                if (opt.value === optionToRemove || opt.label === optionToRemove) {\n                  index = i;\n                }\n              } else {\n                if (opt === optionToRemove) {\n                  index = i;\n                }\n              }\n            });\n            if (index !== -1) {\n              currentOptions.splice(index, 1);\n            }\n            config.options = [...currentOptions];\n            this.setProperty(key, 'config', config);\n          }\n        }\n      } else {\n        let /** @type {?} */ index = -1;\n        currentOptions.forEach((opt, i) => {\n          if (opt.value || opt.label) {\n            if (opt.value === optionToRemove || opt.label === optionToRemove) {\n              index = i;\n            }\n          } else {\n            if (opt === optionToRemove) {\n              index = i;\n            }\n          }\n        });\n        if (index !== -1) {\n          currentOptions.splice(index, 1);\n        }\n        this.setProperty(key, 'options', [...currentOptions]);\n      }\n      this.triggerEvent({ controlKey: key, prop: 'options', value: control.options });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} config\n * @param {?=} mapper\n * @return {?}\n */\npublic modifyPickerConfig(\n    key: string,\n    config: { format?: string; optionsUrl?: string; optionsUrlBuilder?: Function; optionsPromise?: any; options?: any[] },\n    mapper?: any,\n  ): void {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      let /** @type {?} */ newConfig: any = {\n        resultsTemplate: control.config.resultsTemplate,\n      };\n      if (config.optionsUrl || config.optionsUrlBuilder || config.optionsPromise) {\n        newConfig = Object.assign(newConfig, {\n          format: config.format,\n          options: (query) => {\n            if (config.optionsPromise) {\n              return config.optionsPromise(query, this.http);\n            }\n            return new Promise((resolve, reject) => {\n              let /** @type {?} */ url = config.optionsUrlBuilder ? config.optionsUrlBuilder(query) : `${config.optionsUrl}?filter=${query || ''}`;\n              if (query && query.length) {\n                this.http\n                  .get(url)\n                  .map((results: any[]) => {\n                    if (mapper) {\n                      return results.map(mapper);\n                    }\n                    return results;\n                  })\n                  .subscribe(resolve, reject);\n              } else {\n                resolve([]);\n              }\n            });\n          },\n        });\n      } else if (config.options) {\n        newConfig.options = [...config.options];\n      }\n      this.setProperty(key, 'config', newConfig);\n      this.triggerEvent({ controlKey: key, prop: 'pickerConfig', value: config });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} loading\n * @return {?}\n */\npublic setLoading(key: string, loading: boolean) {\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      if (loading) {\n        this.form.controls[key].fieldInteractionloading = true;\n        control.setErrors({ loading: true });\n        // History\n        clearTimeout(this.asyncBlockTimeout);\n        this.asyncBlockTimeout = setTimeout(() => {\n          this.setLoading(key, false);\n          this.displayTip(key, this.labels.asyncFailure, 'info', false);\n          this.setProperty(key, '_displayedAsyncFailure', true);\n        }, 10000);\n      } else {\n        this.form.controls[key].fieldInteractionloading = false;\n        clearTimeout(this.asyncBlockTimeout);\n        control.setErrors({ loading: null });\n        control.updateValueAndValidity({ emitEvent: false });\n        if (this.getProperty(key, '_displayedAsyncFailure')) {\n          this.setProperty(key, 'tipWell', null);\n        }\n      }\n      this.triggerEvent({ controlKey: key, prop: 'loading', value: loading });\n    }\n  }\n/**\n * @param {?} key\n * @param {?} metaForNewField\n * @param {?=} position\n * @param {?=} initialValue\n * @return {?}\n */\npublic addControl(\n    key: string,\n    metaForNewField: any,\n    position: string = FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD,\n    initialValue?: any,\n  ): void {\n    if (!metaForNewField.key && !metaForNewField.name) {\n      console.error('[FieldInteractionAPI] - missing \"key\" in meta for new field'); // tslint:disable-line\n      return null;\n    }\n\n    if (!metaForNewField.key) {\n      // If key is not explicitly declared, use name as key\n      metaForNewField.key = metaForNewField.name;\n    }\n\n    if (this.form.controls[metaForNewField.key]) {\n      // Field is already on the form\n      return null;\n    }\n\n    let /** @type {?} */ control = this.form.controls[key];\n    let /** @type {?} */ fieldsetIndex, /** @type {?} */ controlIndex;\n    if (control) {\n      fieldsetIndex = -1;\n      controlIndex = -1;\n\n      this.form.fieldsets.forEach((fieldset, fi) => {\n        fieldset.controls.forEach((fieldsetControl, ci) => {\n          if (fieldsetControl.key === key) {\n            fieldsetIndex = fi;\n            controlIndex = ci;\n          }\n        });\n      });\n\n      // Change the position of the newly added field\n      switch (position) {\n        case FieldInteractionApi.FIELD_POSITIONS.ABOVE_FIELD:\n          // Adding field above active field\n          // index can stay the same\n          break;\n        case FieldInteractionApi.FIELD_POSITIONS.BELOW_FIELD:\n          // Adding field below active field\n          controlIndex += 1;\n          break;\n        case FieldInteractionApi.FIELD_POSITIONS.TOP_OF_FORM:\n          // Adding field to the top of the form\n          controlIndex = 0;\n          fieldsetIndex = 0;\n          break;\n        case FieldInteractionApi.FIELD_POSITIONS.BOTTOM_OF_FORM:\n          // Adding field to the bottom of the form\n          fieldsetIndex = this.form.fieldsets.length - 1;\n          controlIndex = this.form.fieldsets[fieldsetIndex].controls.length;\n          break;\n        default:\n          break;\n      }\n\n      if (fieldsetIndex !== -1 && controlIndex !== -1) {\n        let /** @type {?} */ novoControl = this.formUtils.getControlForField(metaForNewField, this.http, {});\n        novoControl.hidden = false;\n        let /** @type {?} */ formControl = new NovoFormControl(initialValue, novoControl);\n        this.form.addControl(novoControl.key, formControl);\n        this.form.fieldsets[fieldsetIndex].controls.splice(controlIndex, 0, novoControl);\n        this.triggerEvent({ controlKey: key, prop: 'addControl', value: formControl });\n      }\n    }\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic removeControl(key: string): void {\n    if (!this.form.controls[key]) {\n      // Field is not on the form\n      return null;\n    }\n    let /** @type {?} */ control = this.getControl(key);\n    if (control && !control.restrictFieldInteractions) {\n      let /** @type {?} */ fieldsetIndex = -1;\n      let /** @type {?} */ controlIndex = -1;\n\n      this.form.fieldsets.forEach((fieldset, fi) => {\n        fieldset.controls.forEach((fieldsetControl, ci) => {\n          if (fieldsetControl.key === key) {\n            fieldsetIndex = fi;\n            controlIndex = ci;\n          }\n        });\n      });\n\n      if (fieldsetIndex !== -1 && controlIndex !== -1) {\n        this.form.removeControl(key);\n        this.form.fieldsets[fieldsetIndex].controls.splice(controlIndex, 1);\n        this.triggerEvent({ controlKey: key, prop: 'removeControl', value: key });\n      }\n    }\n  }\n/**\n * @param {?} func\n * @param {?=} wait\n * @return {?}\n */\npublic debounce(func: () => void, wait = 50) {\n    let /** @type {?} */ h: any;\n    clearTimeout(h);\n    h = setTimeout(() => func(), wait);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: IFieldInteractionEvent): void {\n    if (this.form && this.form.fieldInteractionEvents) {\n      this.form.fieldInteractionEvents.emit(event);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoToastService, },\n{type: NovoModalService, },\n{type: FormUtils, },\n{type: HttpClient, },\n{type: NovoLabelService, },\n];\n}\n\nfunction FieldInteractionApi_tsickle_Closure_declarations() {\n/** @type {?} */\nFieldInteractionApi.FIELD_POSITIONS;\n/** @type {?} */\nFieldInteractionApi.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFieldInteractionApi.ctorParameters;\n/** @type {?} */\nFieldInteractionApi.prototype._globals;\n/** @type {?} */\nFieldInteractionApi.prototype._form;\n/** @type {?} */\nFieldInteractionApi.prototype._currentKey;\n/** @type {?} */\nFieldInteractionApi.prototype._appBridge;\n/** @type {?} */\nFieldInteractionApi.prototype.asyncBlockTimeout;\n/** @type {?} */\nFieldInteractionApi.prototype.toaster;\n/** @type {?} */\nFieldInteractionApi.prototype.modalService;\n/** @type {?} */\nFieldInteractionApi.prototype.formUtils;\n/** @type {?} */\nFieldInteractionApi.prototype.http;\n/** @type {?} */\nFieldInteractionApi.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  Directive,\n  HostListener,\n  AfterContentInit,\n  AfterViewInit,\n  LOCALE_ID,\n  Inject,\n} from '@angular/core';\n// Vendor\n\nimport { Observable } from 'rxjs/Observable';\n// APP\n\nimport { NovoFormGroup } from './FormInterfaces';\nimport { OutsideClick } from '../../utils/outside-click/OutsideClick';\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { KeyCodes } from '../../utils/key-codes/KeyCodes';\nimport { DateFormatService } from '../../services/date-format/DateFormat';\nimport { FieldInteractionApi } from './FieldInteractionApi';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\n\nexport interface IMaskOptions {\n  mask: any;\n  keepCharPositions: boolean;\n  guide: boolean;\n}\nexport class NovoAutoSize implements AfterContentInit {\n/**\n * @param {?} textArea\n * @return {?}\n */\nonInput(textArea: HTMLTextAreaElement): void {\n    this.adjust();\n  }\n/**\n * @param {?} element\n */\nconstructor(public element: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    setTimeout(() => {\n      this.adjust();\n    });\n  }\n/**\n * @return {?}\n */\nadjust(): void {\n    const /** @type {?} */ nativeElement = this.element.nativeElement;\n    nativeElement.style.height = nativeElement.style.minHeight;\n    nativeElement.style.height = `${nativeElement.scrollHeight}px`;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'textarea[autosize]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onInput': [{ type: HostListener, args: ['input', ['$event.target'], ] },],\n};\n}\n\nfunction NovoAutoSize_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoAutoSize.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoAutoSize.ctorParameters;\n/** @type {?} */\nNovoAutoSize.propDecorators;\n/** @type {?} */\nNovoAutoSize.prototype.element;\n}\n\nexport class NovoControlElement extends OutsideClick implements OnInit, OnDestroy, AfterViewInit, AfterContentInit {\n  \n  control: any;\n  \n  form: any;\n  \n  condensed: boolean = false;\n  \n  autoFocus: boolean = false;\n  \n  change: EventEmitter<any> = new EventEmitter();\n  \n  edit: EventEmitter<any> = new EventEmitter();\n  \n  save: EventEmitter<any> = new EventEmitter();\n  \n  delete: EventEmitter<any> = new EventEmitter();\n  \n  upload: EventEmitter<any> = new EventEmitter();\n/**\n * @return {?}\n */\nget onBlur(): Observable<FocusEvent> {\n    return this._blurEmitter.asObservable();\n  }\n/**\n * @return {?}\n */\nget onFocus(): Observable<FocusEvent> {\n    return this._focusEmitter.asObservable();\n  }\nprivate _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\nprivate _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\nprivate _focused: boolean = false;\nprivate _enteredText: string = '';\n  formattedValue: string = '';\n  percentValue: number;\n  maxLengthMet: boolean = false;\n  characterCount: number = 0;\nprivate forceClearSubscription: any;\nprivate percentChangeSubscription: any;\nprivate valueChangeSubscription: any;\nprivate dateChangeSubscription: any;\nprivate _showCount: boolean = false;\nprivate maxLength: number;\nprivate focusedField: string;\nprivate characterCountField: string;\nprivate maxLengthMetErrorfields: string[] = [];\nprivate statusChangeSubscription: any;\n\n  maskOptions: IMaskOptions;\n  templates: any = {};\n  templateContext: any;\n  loading: boolean = false;\n  decimalSeparator: string = '.';\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} dateFormatService\n * @param {?} fieldInteractionApi\n * @param {?} templateService\n * @param {?} changeDetectorRef\n * @param {?=} locale\n */\nconstructor(\n    element: ElementRef,\npublic labels: NovoLabelService,\nprivate dateFormatService: DateFormatService,\nprivate fieldInteractionApi: FieldInteractionApi,\nprivate templateService: NovoTemplateService,\nprivate changeDetectorRef: ChangeDetectorRef,\nprivate locale: string = 'en-US',\n  ) {\n    super(element);\n  }\n/**\n * @return {?}\n */\nget maxlengthMetField(): string {\n    if (this.maxLengthMetErrorfields && this.maxLengthMetErrorfields.length) {\n      return this.maxLengthMetErrorfields.find((field: string) => field === this.focusedField) || '';\n    } else {\n      return '';\n    }\n  }\n/**\n * @return {?}\n */\nget maxlengthErrorField(): string {\n    if (this.errors && this.errors.maxlengthFields && this.errors.maxlengthFields.length) {\n      return this.errors.maxlengthFields.find((field: string) => field === this.focusedField) || '';\n    } else {\n      return '';\n    }\n  }\n/**\n * @return {?}\n */\nget showFieldMessage() {\n    return !this.errors && !this.maxLengthMet && Helpers.isBlank(this.control.description);\n  }\n/**\n * @return {?}\n */\nget showMaxLengthMetMessage() {\n    return (\n      (this.isDirty && this.maxLengthMet && this.focused && (!this.errors || (this.errors && !this.errors.maxlength))) ||\n      (this.isDirty &&\n        this.maxlengthMetField &&\n        this.focused &&\n        (!this.errors || (this.errors && !this.errors.maxlengthFields.includes(this.maxlengthMetField))))\n    );\n  }\n/**\n * @return {?}\n */\nget showErrorState() {\n    return (\n      (this.isDirty && this.errors) ||\n      (this.focused && this.errors && this.errors.maxlength && this.errors.maxlengthFields) ||\n      (this.focused && this.errors && this.errors.maxlength && this.errors.maxlengthFields && this.maxlengthErrorField)\n    );\n  }\n/**\n * @return {?}\n */\nget showCount() {\n    let /** @type {?} */ charCount: boolean =\n      this.form.controls[this.control.key].maxlength &&\n      this.focused &&\n      (this.form.controls[this.control.key].controlType === 'text-area' || this.form.controls[this.control.key].controlType === 'textbox');\n    return this._showCount || charCount;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showCount(value) {\n    this._showCount = value;\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    const /** @type {?} */ DO_NOT_FOCUS_ME: string[] = ['picker', 'time', 'date', 'date-time'];\n    if (this.autoFocus && !DO_NOT_FOCUS_ME.includes(this.control.controlType)) {\n      setTimeout(() => {\n        let /** @type {?} */ input: HTMLElement = this.element.nativeElement.querySelector('input');\n        if (input) {\n          input.focus();\n        }\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    // Subscribe to control interactions\n    if (this.control.interactions && !this.form.controls[this.control.key].restrictFieldInteractions) {\n      for (let /** @type {?} */ interaction of this.control.interactions) {\n        switch (interaction.event) {\n          case 'blur':\n            this.valueChangeSubscription = this.onBlur.debounceTime(300).subscribe(() => {\n              if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                this.executeInteraction(interaction);\n              }\n            });\n            break;\n          case 'focus':\n            this.valueChangeSubscription = this.onFocus.debounceTime(300).subscribe(() => {\n              if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                this.executeInteraction(interaction);\n              }\n            });\n            break;\n          case 'change':\n            this.valueChangeSubscription = this.form.controls[this.control.key].valueChanges.debounceTime(300).subscribe(() => {\n              if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n                this.executeInteraction(interaction);\n              }\n            });\n            break;\n          case 'init':\n            interaction.invokeOnInit = true;\n            break;\n          default:\n            break;\n        }\n        if (interaction.invokeOnInit) {\n          if (!this.form.controls[this.control.key].restrictFieldInteractions) {\n            this.executeInteraction(interaction);\n          }\n        }\n      }\n    }\n    setTimeout(() => {\n      this.templates = this.templateService.getAll();\n      this.loading = false;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.loading = true;\n    // Make sure to initially format the time controls\n    if (this.control && this.form.controls[this.control.key].value) {\n      if (\n        this.form.controls[this.control.key].controlType === 'textbox' ||\n        this.form.controls[this.control.key].controlType === 'text-area'\n      ) {\n        this.characterCount = this.form.controls[this.control.key].value.length;\n      }\n    }\n    if (this.control) {\n      // Listen to clear events\n      this.forceClearSubscription = this.control.forceClear.subscribe(() => {\n        this.clearValue();\n      });\n      // For Asynchronous validations\n      this.statusChangeSubscription = this.form.controls[this.control.key].statusChanges.subscribe((validity) => {\n        this.form.controls[this.control.key] = this.templateContext.$implicit;\n        if (validity !== 'PENDING' && this.form.updateValueAndValidity) {\n          this.form.updateValueAndValidity();\n        }\n      });\n    }\n    this.templateContext = {\n      $implicit: this.form.controls[this.control.key],\n      methods: {\n        restrictKeys: this.restrictKeys.bind(this),\n        emitChange: this.emitChange.bind(this),\n        handleFocus: this.handleFocus.bind(this),\n        handlePercentChange: this.handlePercentChange.bind(this),\n        handleBlur: this.handleBlur.bind(this),\n        handleTextAreaInput: this.handleTextAreaInput.bind(this),\n        handleEdit: this.handleEdit.bind(this),\n        handleSave: this.handleSave.bind(this),\n        handleDelete: this.handleDelete.bind(this),\n        handleUpload: this.handleUpload.bind(this),\n        modelChange: this.modelChange.bind(this),\n        modelChangeWithRaw: this.modelChangeWithRaw.bind(this),\n        handleAddressChange: this.handleAddressChange.bind(this),\n        handleTyping: this.handleTyping.bind(this),\n        updateValidity: this.updateValidity.bind(this),\n        toggleActive: this.toggleActive.bind(this),\n        validateIntegerInput: this.validateIntegerInput.bind(this),\n        validateNumberOnBlur: this.validateNumberOnBlur.bind(this),\n      },\n      form: this.form,\n    };\n    this.templateContext.$implicit.tooltipPosition = this.tooltipPosition;\n    this.templateContext.$implicit.tooltip = this.tooltip;\n    this.templateContext.$implicit.tooltipSize = this.tooltipSize;\n    this.templateContext.$implicit.tooltipPreline = this.tooltipPreline;\n    this.templateContext.$implicit.removeTooltipArrow = this.removeTooltipArrow;\n    this.templateContext.$implicit.startupFocus = this.form.controls[this.control.key].startupFocus;\n    this.templateContext.$implicit.fileBrowserImageUploadUrl = this.form.controls[this.control.key].fileBrowserImageUploadUrl;\n    this.templateContext.$implicit.minimal = this.form.controls[this.control.key].minimal;\n    this.templateContext.$implicit.currencyFormat = this.form.controls[this.control.key].currencyFormat;\n    this.templateContext.$implicit.percentValue = this.form.controls[this.control.key].percentValue;\n    this.templateContext.$implicit.config = this.form.controls[this.control.key].config;\n\n    if (this.form.controls[this.control.key] && this.form.controls[this.control.key].subType === 'percentage') {\n      if (!Helpers.isEmpty(this.form.controls[this.control.key].value)) {\n        this.templateContext.$implicit.percentValue = Number(\n          (this.form.controls[this.control.key].value * 100).toFixed(6).replace(/\\.?0*$/, ''),\n        );\n      }\n      this.percentChangeSubscription = this.form.controls[this.control.key].displayValueChanges.subscribe((value) => {\n        if (!Helpers.isEmpty(value)) {\n          this.templateContext.$implicit.percentValue = Number((value * 100).toFixed(6).replace(/\\.?0*$/, ''));\n        }\n      });\n    }\n\n    this.decimalSeparator = this.getDecimalSeparator();\n  }\n/**\n * @return {?}\n */\ngetDecimalSeparator(): string {\n    let /** @type {?} */ result = new Intl.NumberFormat(this.locale).format(1.2)[1];\n    return result;\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Unsubscribe from control interactions\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n    // if (this.dateChangeSubscription) {\n    //     this.dateChangeSubscription.unsubscribe();\n    // }\n    if (this.forceClearSubscription) {\n      // Un-listen for clear events\n      this.forceClearSubscription.unsubscribe();\n    }\n    if (this.percentChangeSubscription) {\n      // Un-listen for clear events\n      this.percentChangeSubscription.unsubscribe();\n    }\n    if (this.dateChangeSubscription) {\n      this.dateChangeSubscription.unsubscribe();\n    }\n    if (this.statusChangeSubscription) {\n      this.statusChangeSubscription.unsubscribe();\n    }\n    super.ngOnDestroy();\n  }\n/**\n * @return {?}\n */\nget errors() {\n    return this.form.controls[this.control.key].errors;\n  }\n/**\n * @return {?}\n */\nget isValid() {\n    return this.form.controls[this.control.key].valid;\n  }\n/**\n * @return {?}\n */\nget isDirty() {\n    return this.form.controls[this.control.key].dirty || this.control.dirty;\n  }\n/**\n * @return {?}\n */\nget hasValue() {\n    return !Helpers.isEmpty(this.form.value[this.control.key]);\n  }\n/**\n * @return {?}\n */\nget focused() {\n    return this._focused;\n  }\n/**\n * @return {?}\n */\nget tooltip() {\n    return this.form.controls[this.control.key].tooltip;\n  }\n/**\n * @return {?}\n */\nget tooltipPosition() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].tooltipPosition)) {\n      return 'right';\n    }\n    return this.form.controls[this.control.key].tooltipPosition;\n  }\n/**\n * @return {?}\n */\nget tooltipSize() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].tooltipSize)) {\n      return '';\n    }\n    return this.form.controls[this.control.key].tooltipSize;\n  }\n/**\n * @return {?}\n */\nget tooltipPreline() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].tooltipPreline)) {\n      return false;\n    }\n    return this.form.controls[this.control.key].tooltipPreline;\n  }\n/**\n * @return {?}\n */\nget removeTooltipArrow() {\n    if (Helpers.isBlank(this.form.controls[this.control.key].removeTooltipArrow)) {\n      return false;\n    }\n    return this.form.controls[this.control.key].removeTooltipArrow;\n  }\n/**\n * @return {?}\n */\nget alwaysActive() {\n    // Controls that have the label active if there is any user entered text in the field\n    if (this.form.controls[this.control.key].controlType === 'picker' && this._enteredText.length) {\n      return true;\n    }\n\n    // Controls that always have the label active\n    return (\n      [\n        'tiles',\n        'checklist',\n        'checkbox',\n        'date',\n        'time',\n        'date-time',\n        'address',\n        'file',\n        'editor',\n        'ace-editor',\n        'radio',\n        'text-area',\n        'quick-note',\n      ].indexOf(this.form.controls[this.control.key].controlType) !== -1\n    );\n  }\n/**\n * @return {?}\n */\nget requiresExtraSpacing() {\n    // Chips\n    if (this.form.controls[this.control.key].controlType === 'picker' && this.form.controls[this.control.key].multiple && this.hasValue) {\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} interaction\n * @return {?}\n */\nexecuteInteraction(interaction) {\n    if (interaction.script && Helpers.isFunction(interaction.script)) {\n      setTimeout(() => {\n        this.fieldInteractionApi.form = this.form;\n        this.fieldInteractionApi.currentKey = this.control.key;\n        try {\n          interaction.script(this.fieldInteractionApi, this.control.key);\n        } catch ( /** @type {?} */err) {\n          console.info('Field Interaction Error!', this.control.key); // tslint:disable-line\n          console.error(err); // tslint:disable-line\n        }\n      });\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleTyping(event: any) {\n    this._focused = event && event.length;\n    this._enteredText = event;\n  }\n/**\n * @param {?} event\n * @param {?} field\n * @return {?}\n */\nhandleFocus(event: FocusEvent, field) {\n    this._focused = true;\n    this.focusedField = field;\n    if (!Helpers.isBlank(this.characterCountField) && this.characterCountField === field) {\n      this.showCount = true;\n    } else if (\n      this.form.controls[this.control.key].controlType === 'address' &&\n      field &&\n      !Helpers.isEmpty(this.form.value[this.control.key]) &&\n      !Helpers.isBlank(this.form.value[this.control.key][field])\n    ) {\n      this.handleAddressChange({ value: this.form.value[this.control.key][field], field });\n    }\n    this._focusEmitter.emit(event);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleBlur(event: FocusEvent) {\n    this._focused = false;\n    this.focusedField = '';\n    this.showCount = false;\n    this._blurEmitter.emit(event);\n  }\n/**\n * @return {?}\n */\nclearValue() {\n    this.form.controls[this.control.key].setValue(null);\n    this.formattedValue = null;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleTextAreaInput(event) {\n    this.emitChange(event);\n    this.restrictKeys(event);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ncheckMaxLength(event) {\n    if (this.control && this.form.controls[this.control.key].maxlength) {\n      this.characterCount = event.target.value.length;\n      this.maxLengthMet = event.target.value.length >= this.form.controls[this.control.key].maxlength;\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nmodelChangeWithRaw(event) {\n    if (Helpers.isEmpty(event.value)) {\n      this._focused = false;\n      this._enteredText = '';\n    }\n    this.form.controls[this.control.key].rawValue = event.rawValue;\n    this.change.emit(event.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nmodelChange(value) {\n    if (Helpers.isEmpty(value)) {\n      this._focused = false;\n      this._enteredText = '';\n    }\n    this.change.emit(value);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nvalidateNumberOnBlur(event: FocusEvent) {\n    this._focused = false;\n    this.focusedField = '';\n    this.showCount = false;\n    if (this.form.controls[this.control.key].subType === 'number') {\n      this.validateIntegerInput();\n    }\n    this._blurEmitter.emit(event);\n  }\n/**\n * @return {?}\n */\nvalidateIntegerInput() {\n    const /** @type {?} */ NUMBERS_ONLY = /^[\\d\\-]\\d*$/;\n    if (this.form.controls[this.control.key].value && !NUMBERS_ONLY.test(this.form.controls[this.control.key].value)) {\n      this.form.controls[this.control.key].markAsInvalid(\n        `${this.labels.invalidIntegerInput} ${this.form.controls[this.control.key].label.toUpperCase()}`,\n      );\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nrestrictKeys(event) {\n    const /** @type {?} */ NUMBERS_ONLY = /[0-9\\-]/;\n    const /** @type {?} */ NUMBERS_WITH_DECIMAL_DOT = /[0-9\\.\\-]/;\n    const /** @type {?} */ NUMBERS_WITH_DECIMAL_COMMA = /[0-9\\,\\-]/;\n    const /** @type {?} */ UTILITY_KEYS = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'];\n    let /** @type {?} */ key = event.key;\n\n    // Types\n    if (this.form.controls[this.control.key].subType === 'number' && !(NUMBERS_ONLY.test(key) || UTILITY_KEYS.includes(key))) {\n      event.preventDefault();\n    } else if (\n      ~['currency', 'float', 'percentage'].indexOf(this.form.controls[this.control.key].subType) &&\n      !(\n        (this.decimalSeparator === '.' && NUMBERS_WITH_DECIMAL_DOT.test(key)) ||\n        (this.decimalSeparator === ',' && NUMBERS_WITH_DECIMAL_COMMA.test(key)) ||\n        UTILITY_KEYS.includes(key)\n      )\n    ) {\n      event.preventDefault();\n    }\n    // Max Length\n    if (this.form.controls[this.control.key].maxlength && event.target.value.length >= this.form.controls[this.control.key].maxlength) {\n      event.preventDefault();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandlePercentChange(event: KeyboardEvent) {\n    let /** @type {?} */ value = event.target['value'];\n    let /** @type {?} */ percent = Helpers.isEmpty(value) ? null : Number((value / 100).toFixed(6).replace(/\\.?0*$/, ''));\n    if (!Helpers.isEmpty(percent)) {\n      this.change.emit(percent);\n      this.form.controls[this.control.key].setValue(percent);\n    } else {\n      this.change.emit(null);\n      this.form.controls[this.control.key].setValue(null);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleTabForPickers(event: any): void {\n    if (this.active && event && event.keyCode) {\n      if (event.keyCode === KeyCodes.ESC || event.keyCode === KeyCodes.TAB) {\n        this.toggleActive(event, false);\n      }\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nemitChange(value) {\n    this.change.emit(value);\n    this.checkMaxLength(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nhandleEdit(value) {\n    this.edit.emit(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nhandleSave(value) {\n    this.save.emit(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nhandleDelete(value) {\n    this.delete.emit(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nhandleUpload(value) {\n    this.upload.emit(value);\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nhandleAddressChange(data) {\n    if (\n      data &&\n      !Helpers.isBlank(data.value) &&\n      data.field &&\n      this.control.config[data.field] &&\n      !Helpers.isEmpty(this.control.config[data.field].maxlength)\n    ) {\n      this.characterCount = data.value.length;\n      this.characterCountField = data.field;\n      this.maxLength = this.control.config[data.field].maxlength;\n      this.showCount = true;\n      if (this.maxLength === this.characterCount) {\n        this.maxLengthMetErrorfields.push(data.field);\n      } else {\n        this.maxLengthMetErrorfields = this.maxLengthMetErrorfields.filter((field: string) => field !== data.field);\n      }\n    }\n  }\n/**\n * @param {?} shouldEventBeEmitted\n * @return {?}\n */\nupdateValidity(shouldEventBeEmitted): void {\n    let /** @type {?} */ emitEvent: boolean = shouldEventBeEmitted ? true : false;\n    this.form.controls[this.control.key].updateValueAndValidity({ emitEvent });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-control',\n  template: `\n        <div class=\"novo-control-container\" [hidden]=\"form.controls[control.key].hidden || form.controls[control.key].type === 'hidden' || form.controls[control.key].controlType === 'hidden'\">\n            <!--Encrypted Field-->\n            <span [tooltip]=\"labels.encryptedFieldTooltip\" [tooltipPosition]=\"'right'\"><i [hidden]=\"!form.controls[control.key].encrypted\"\n            class=\"bhi-lock\"></i></span>\n            <!--Label (for horizontal)-->\n            <label [attr.for]=\"control.key\" *ngIf=\"form.layout !== 'vertical' && form.controls[control.key].label && !condensed\" [ngClass]=\"{'encrypted': form.controls[control.key].encrypted }\">\n                {{ form.controls[control.key].label }}\n            </label>\n            <div class=\"novo-control-outer-container\">\n                <!--Label (for vertical)-->\n                <label\n                    *ngIf=\"form.layout === 'vertical' && form.controls[control.key].label && !condensed\"\n                    class=\"novo-control-label\"\n                    [attr.for]=\"control.key\"\n                    [class.novo-control-empty]=\"!hasValue\"\n                    [class.novo-control-focused]=\"focused\"\n                    [class.novo-control-filled]=\"hasValue\"\n                    [class.novo-control-always-active]=\"alwaysActive || form.controls[control.key].placeholder\"\n                    [class.novo-control-extra-spacing]=\"requiresExtraSpacing\">\n                    {{ form.controls[control.key].label }}\n                </label>\n                <div class=\"novo-control-inner-container\" [class.required]=\"form.controls[control.key].required && !form.controls[control.key].readOnly\">\n                    <div class=\"novo-control-inner-input-container\" [class.novo-control-filled]=\"hasValue\" [class.novo-control-empty]=\"!hasValue\">\n                      <!--Required Indicator-->\n                        <i [hidden]=\"!form.controls[control.key].required || form.controls[control.key].readOnly\"\n                            class=\"required-indicator {{ form.controls[control.key].controlType }}\"\n                            [ngClass]=\"{'bhi-circle': !isValid, 'bhi-check': isValid}\" *ngIf=\"!condensed || form.controls[control.key].required\">\n                        </i>\n                        <!--Form Controls-->\n                        <div class=\"novo-control-input {{ form.controls[control.key].controlType }}\" [attr.data-automation-id]=\"control.key\" [class.control-disabled]=\"form.controls[control.key].disabled\">\n                            <!--TODO prefix/suffix on the control-->\n                            <ng-container *ngIf=\"templates\">\n                              <ng-container *ngTemplateOutlet=\"templates[form.controls[control.key].controlType]; context: templateContext\"></ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"!templates || loading\">\n                                <div class=\"novo-control-input-container novo-control-input-with-label\">\n                                  <input type=\"text\"/>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <!--Error Message-->\n                    <div class=\"field-message {{ form.controls[control.key].controlType }}\" *ngIf=\"!condensed\" [class.has-tip]=\"form.controls[control.key].tipWell\" [ngClass]=\"showErrorState || showMaxLengthMetMessage ? 'error-shown' : 'error-hidden'\">\n                        <div class=\"messages\" [ngClass]=\"showCount ? 'count-shown' : 'count-hidden'\">\n                            <span class=\"error-text\" *ngIf=\"showFieldMessage\"></span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && errors?.required && form.controls[control.key].controlType !== 'address'\">{{ form.controls[control.key].label | uppercase }} {{ labels.isRequired }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && errors?.minlength\">{{ form.controls[control.key].label | uppercase }} {{ labels.minLength }} {{ form.controls[control.key].minlength }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && maxLengthMet && focused && !errors?.maxlength\">{{ labels.maxlengthMet(form.controls[control.key].maxlength) }}</span>\n                            <span class=\"error-text\" *ngIf=\"errors?.maxlength && focused && !errors?.maxlengthFields\">{{ labels.invalidMaxlength(form.controls[control.key].maxlength) }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && errors?.invalidEmail\">{{ form.controls[control.key].label | uppercase }} {{ labels.invalidEmail }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && (errors?.integerTooLarge || errors?.doubleTooLarge)\">{{ form.controls[control.key].label | uppercase }} {{ labels.isTooLarge }}</span>\n                            <span *ngIf=\"isDirty && errors?.minYear\">{{ form.controls[control.key].label | uppercase }} {{ labels.notValidYear }}</span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && (errors?.custom)\">{{ errors.custom }}</span>\n                            <span class=\"error-text\" *ngIf=\"errors?.maxlength && errors?.maxlengthFields && maxlengthErrorField && focused\">\n                                {{ labels.invalidMaxlengthWithField(control.config[maxlengthErrorField]?.label, control.config[maxlengthErrorField]?.maxlength) }}\n                            </span>\n                            <span class=\"error-text\" *ngIf=\"isDirty && maxlengthMetField && focused && !errors?.maxlengthFields?.includes(maxlengthMetField)\">\n                              {{ labels.maxlengthMetWithField(control.config[maxlengthMetField]?.label, control.config[maxlengthMetField]?.maxlength) }}\n                            </span>\n                            <span *ngIf=\"isDirty && errors?.invalidAddress\">\n                                <span class=\"error-text\" *ngFor=\"let invalidAddressField of errors?.invalidAddressFields\">{{ invalidAddressField | uppercase }} {{ labels.isRequired }} </span>\n                            </span>\n                            <!--Field Hint-->\n                            <span class=\"description\" *ngIf=\"form.controls[control.key].description\">\n                                {{ form.controls[control.key].description }}\n                            </span>\n                        </div>\n                        <span class=\"character-count\" [class.error]=\"((errors?.maxlength && !errors?.maxlengthFields) || (errors?.maxlength && errors?.maxlengthFields && errors.maxlengthFields.includes(focusedField)))\" *ngIf=\"showCount\">{{ characterCount }}/{{ maxLength || form.controls[control.key].maxlength }}</span>\n                    </div>\n                    <!--Tip Wel-->\n                    <novo-tip-well *ngIf=\"form.controls[control.key].tipWell\" [name]=\"control.key\" [tip]=\"form.controls[control.key]?.tipWell?.tip\" [icon]=\"form.controls[control.key]?.tipWell?.icon\" [button]=\"form.controls[control.key]?.tipWell?.button\"></novo-tip-well>\n                </div>\n                <i *ngIf=\"form.controls[control.key].fieldInteractionloading\" class=\"loading\">\n                    <svg version=\"1.1\"\n                     xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                     x=\"0px\" y=\"0px\" width=\"18.2px\" height=\"18.5px\" viewBox=\"0 0 18.2 18.5\" style=\"enable-background:new 0 0 18.2 18.5;\"\n                     xml:space=\"preserve\">\n                    <style type=\"text/css\">\n                        .spinner { fill:#FFFFFF; }\n                    </style>\n                        <path class=\"spinner\" d=\"M9.2,18.5C4.1,18.5,0,14.4,0,9.2S4.1,0,9.2,0c0.9,0,1.9,0.1,2.7,0.4c0.8,0.2,1.2,1.1,1,1.9\n                            c-0.2,0.8-1.1,1.2-1.9,1C10.5,3.1,9.9,3,9.2,3C5.8,3,3,5.8,3,9.2s2.8,6.2,6.2,6.2c2.8,0,5.3-1.9,6-4.7c0.2-0.8,1-1.3,1.8-1.1\n                            c0.8,0.2,1.3,1,1.1,1.8C17.1,15.7,13.4,18.5,9.2,18.5z\"/>\n                    </svg>\n                </i>\n            </div>\n        </div>\n    `,\n  host: {\n    '[class]': 'form.controls[control.key].controlType',\n    '[attr.data-control-type]': 'form.controls[control.key].controlType',\n    '[class.disabled]': 'form.controls[control.key].readOnly',\n    '[class.hidden]': 'form.controls[control.key].hidden',\n    '[attr.data-control-key]': 'control.key',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: DateFormatService, },\n{type: FieldInteractionApi, },\n{type: NovoTemplateService, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'control': [{ type: Input },],\n'form': [{ type: Input },],\n'condensed': [{ type: Input },],\n'autoFocus': [{ type: Input },],\n'change': [{ type: Output },],\n'edit': [{ type: Output },],\n'save': [{ type: Output },],\n'delete': [{ type: Output },],\n'upload': [{ type: Output },],\n'onBlur': [{ type: Output, args: ['blur', ] },],\n'onFocus': [{ type: Output, args: ['focus', ] },],\n};\n}\n\nfunction NovoControlElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoControlElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoControlElement.ctorParameters;\n/** @type {?} */\nNovoControlElement.propDecorators;\n/** @type {?} */\nNovoControlElement.prototype.control;\n/** @type {?} */\nNovoControlElement.prototype.form;\n/** @type {?} */\nNovoControlElement.prototype.condensed;\n/** @type {?} */\nNovoControlElement.prototype.autoFocus;\n/** @type {?} */\nNovoControlElement.prototype.change;\n/** @type {?} */\nNovoControlElement.prototype.edit;\n/** @type {?} */\nNovoControlElement.prototype.save;\n/** @type {?} */\nNovoControlElement.prototype.delete;\n/** @type {?} */\nNovoControlElement.prototype.upload;\n/** @type {?} */\nNovoControlElement.prototype._blurEmitter;\n/** @type {?} */\nNovoControlElement.prototype._focusEmitter;\n/** @type {?} */\nNovoControlElement.prototype._focused;\n/** @type {?} */\nNovoControlElement.prototype._enteredText;\n/** @type {?} */\nNovoControlElement.prototype.formattedValue;\n/** @type {?} */\nNovoControlElement.prototype.percentValue;\n/** @type {?} */\nNovoControlElement.prototype.maxLengthMet;\n/** @type {?} */\nNovoControlElement.prototype.characterCount;\n/** @type {?} */\nNovoControlElement.prototype.forceClearSubscription;\n/** @type {?} */\nNovoControlElement.prototype.percentChangeSubscription;\n/** @type {?} */\nNovoControlElement.prototype.valueChangeSubscription;\n/** @type {?} */\nNovoControlElement.prototype.dateChangeSubscription;\n/** @type {?} */\nNovoControlElement.prototype._showCount;\n/** @type {?} */\nNovoControlElement.prototype.maxLength;\n/** @type {?} */\nNovoControlElement.prototype.focusedField;\n/** @type {?} */\nNovoControlElement.prototype.characterCountField;\n/** @type {?} */\nNovoControlElement.prototype.maxLengthMetErrorfields;\n/** @type {?} */\nNovoControlElement.prototype.statusChangeSubscription;\n/** @type {?} */\nNovoControlElement.prototype.maskOptions;\n/** @type {?} */\nNovoControlElement.prototype.templates;\n/** @type {?} */\nNovoControlElement.prototype.templateContext;\n/** @type {?} */\nNovoControlElement.prototype.loading;\n/** @type {?} */\nNovoControlElement.prototype.decimalSeparator;\n/** @type {?} */\nNovoControlElement.prototype.labels;\n/** @type {?} */\nNovoControlElement.prototype.dateFormatService;\n/** @type {?} */\nNovoControlElement.prototype.fieldInteractionApi;\n/** @type {?} */\nNovoControlElement.prototype.templateService;\n/** @type {?} */\nNovoControlElement.prototype.changeDetectorRef;\n/** @type {?} */\nNovoControlElement.prototype.locale;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * AUTOGENERATED FILE - DO NOT EDIT\n * Generated by: https://bhsource.bullhorn.com/DEV_WORKSPACE/country-state-parser\n * Last generated on: Wed Sep 12 2018 10:22:49 GMT-0500 (CDT)\n */\nexport const COUNTRIES = [\n  {\n    code: 'US',\n    id: 1,\n    name: 'United States',\n    states: [\n      {\n        code: 'AL',\n        name: 'Alabama',\n      },\n      {\n        code: 'AK',\n        name: 'Alaska',\n      },\n      {\n        code: 'AZ',\n        name: 'Arizona',\n      },\n      {\n        code: 'AR',\n        name: 'Arkansas',\n      },\n      {\n        code: 'CA',\n        name: 'California',\n      },\n      {\n        code: 'CO',\n        name: 'Colorado',\n      },\n      {\n        code: 'CT',\n        name: 'Connecticut',\n      },\n      {\n        code: 'DE',\n        name: 'Delaware',\n      },\n      {\n        code: 'DC',\n        name: 'District Of Columbia',\n      },\n      {\n        code: 'FL',\n        name: 'Florida',\n      },\n      {\n        code: 'GA',\n        name: 'Georgia',\n      },\n      {\n        code: 'GU',\n        name: 'Guam',\n      },\n      {\n        code: 'HI',\n        name: 'Hawaii',\n      },\n      {\n        code: 'ID',\n        name: 'Idaho',\n      },\n      {\n        code: 'IL',\n        name: 'Illinois',\n      },\n      {\n        code: 'IN',\n        name: 'Indiana',\n      },\n      {\n        code: 'IA',\n        name: 'Iowa',\n      },\n      {\n        code: 'KS',\n        name: 'Kansas',\n      },\n      {\n        code: 'KY',\n        name: 'Kentucky',\n      },\n      {\n        code: 'LA',\n        name: 'Louisiana',\n      },\n      {\n        code: 'ME',\n        name: 'Maine',\n      },\n      {\n        code: 'MH',\n        name: 'Marshall Islands',\n      },\n      {\n        code: 'MD',\n        name: 'Maryland',\n      },\n      {\n        code: 'MA',\n        name: 'Massachusetts',\n      },\n      {\n        code: 'MI',\n        name: 'Michigan',\n      },\n      {\n        code: 'MN',\n        name: 'Minnesota',\n      },\n      {\n        code: 'MS',\n        name: 'Mississippi',\n      },\n      {\n        code: 'MO',\n        name: 'Missouri',\n      },\n      {\n        code: 'MT',\n        name: 'Montana',\n      },\n      {\n        code: 'NE',\n        name: 'Nebraska',\n      },\n      {\n        code: 'NV',\n        name: 'Nevada',\n      },\n      {\n        code: 'NH',\n        name: 'New Hampshire',\n      },\n      {\n        code: 'NJ',\n        name: 'New Jersey',\n      },\n      {\n        code: 'NM',\n        name: 'New Mexico',\n      },\n      {\n        code: 'NY',\n        name: 'New York',\n      },\n      {\n        code: 'NC',\n        name: 'North Carolina',\n      },\n      {\n        code: 'ND',\n        name: 'North Dakota',\n      },\n      {\n        code: 'MP',\n        name: 'Northern Mariana Islands',\n      },\n      {\n        code: 'OH',\n        name: 'Ohio',\n      },\n      {\n        code: 'OK',\n        name: 'Oklahoma',\n      },\n      {\n        code: 'OR',\n        name: 'Oregon',\n      },\n      {\n        code: 'PW',\n        name: 'Palau',\n      },\n      {\n        code: 'PA',\n        name: 'Pennsylvania',\n      },\n      {\n        code: 'PR',\n        name: 'Puerto Rico',\n      },\n      {\n        code: 'RI',\n        name: 'Rhode Island',\n      },\n      {\n        code: 'SC',\n        name: 'South Carolina',\n      },\n      {\n        code: 'SD',\n        name: 'South Dakota',\n      },\n      {\n        code: 'TN',\n        name: 'Tennessee',\n      },\n      {\n        code: 'TX',\n        name: 'Texas',\n      },\n      {\n        code: 'UT',\n        name: 'Utah',\n      },\n      {\n        code: 'VT',\n        name: 'Vermont',\n      },\n      {\n        code: 'VI',\n        name: 'Virgin Islands',\n      },\n      {\n        code: 'VA',\n        name: 'Virginia',\n      },\n      {\n        code: 'WA',\n        name: 'Washington',\n      },\n      {\n        code: 'WV',\n        name: 'West Virginia',\n      },\n      {\n        code: 'WI',\n        name: 'Wisconsin',\n      },\n      {\n        code: 'WY',\n        name: 'Wyoming',\n      },\n    ],\n  },\n  {\n    code: 'UK',\n    id: 2359,\n    name: 'United Kingdom',\n    states: [\n      {\n        code: 'ABD',\n        name: 'Aberdeenshire',\n      },\n      {\n        code: 'ALD',\n        name: 'Alderney',\n      },\n      {\n        code: 'ANS',\n        name: 'Angus',\n      },\n      {\n        code: 'ANN',\n        name: 'Antrim and Newtownabbey',\n      },\n      {\n        code: 'AGB',\n        name: 'Argyllshire',\n      },\n      {\n        code: 'ABC',\n        name: 'Armagh',\n      },\n      {\n        code: 'EAY',\n        name: 'Ayrshire',\n      },\n      {\n        code: 'BLA',\n        name: 'Ballymena',\n      },\n      {\n        code: 'BAY',\n        name: 'Ballymoney',\n      },\n      {\n        code: 'BNB',\n        name: 'Banbridge',\n      },\n      {\n        code: 'BAN',\n        name: 'Banffshire',\n      },\n      {\n        code: 'BDF',\n        name: 'Bedfordshire',\n      },\n      {\n        code: 'BFS',\n        name: 'Belfast',\n      },\n      {\n        code: 'BRK',\n        name: 'Berkshire',\n      },\n      {\n        code: 'BGW',\n        name: 'Blaenau Gwent',\n      },\n      {\n        code: 'SCB',\n        name: 'Borders',\n      },\n      {\n        code: 'BGE',\n        name: 'Bridgend',\n      },\n      {\n        code: 'BST',\n        name: 'Bristol',\n      },\n      {\n        code: 'BKM',\n        name: 'Buckinghamshire',\n      },\n      {\n        code: 'CAY',\n        name: 'Caerphilly',\n      },\n      {\n        code: 'CAI',\n        name: 'Caithness',\n      },\n      {\n        code: 'CAM',\n        name: 'Cambridgeshire',\n      },\n      {\n        code: 'CRF',\n        name: 'Cardiff',\n      },\n      {\n        code: 'CMN',\n        name: 'Carmarthenshire',\n      },\n      {\n        code: 'CKF',\n        name: 'Carrickfergus',\n      },\n      {\n        code: 'CAS',\n        name: 'Castlereagh',\n      },\n      {\n        code: 'CGN',\n        name: 'Ceredigion',\n      },\n      {\n        code: 'CHE',\n        name: 'Cheshire',\n      },\n      {\n        code: 'CLK',\n        name: 'Clackmannanshire',\n      },\n      {\n        code: 'CLR',\n        name: 'Coleraine',\n      },\n      {\n        code: 'CWY',\n        name: 'Conwy',\n      },\n      {\n        code: 'CKT',\n        name: 'Cookstown',\n      },\n      {\n        code: 'CON',\n        name: 'Cornwall',\n      },\n      {\n        code: 'DUR',\n        name: 'County Durham',\n      },\n      {\n        code: 'DRS',\n        name: 'County Londonderry',\n      },\n      {\n        code: 'CRA',\n        name: 'Craigavon',\n      },\n      {\n        code: 'CMA',\n        name: 'Cumbria',\n      },\n      {\n        code: 'DEN',\n        name: 'Denbighshire',\n      },\n      {\n        code: 'DBY',\n        name: 'Derbyshire',\n      },\n      {\n        code: 'DEV',\n        name: 'Devon',\n      },\n      {\n        code: 'DOR',\n        name: 'Dorset',\n      },\n      {\n        code: 'EDU',\n        name: 'Dumbartonshire',\n      },\n      {\n        code: 'DGY',\n        name: 'Dumfries and Galloway',\n      },\n      {\n        code: 'DGN',\n        name: 'Dungannon and South Tyrone',\n      },\n      {\n        code: 'ELN',\n        name: 'East Lothian',\n      },\n      {\n        code: 'ESX',\n        name: 'East Sussex',\n      },\n      {\n        code: 'ERY',\n        name: 'East Yorkshire',\n      },\n      {\n        code: 'ESS',\n        name: 'Essex',\n      },\n      {\n        code: 'FMO',\n        name: 'Fermanagh and Omagh',\n      },\n      {\n        code: 'FIF',\n        name: 'Fife',\n      },\n      {\n        code: 'FLN',\n        name: 'Flintshire',\n      },\n      {\n        code: 'GLG',\n        name: 'Glasgow',\n      },\n      {\n        code: 'GLS',\n        name: 'Gloucestershire',\n      },\n      {\n        code: 'LND',\n        name: 'Greater London',\n      },\n      {\n        code: 'MAN',\n        name: 'Greater Manchester',\n      },\n      {\n        code: 'GSY',\n        name: 'Guernsey',\n      },\n      {\n        code: 'GWN',\n        name: 'Gwynedd',\n      },\n      {\n        code: 'HAM',\n        name: 'Hampshire',\n      },\n      {\n        code: 'HEF',\n        name: 'Herefordshire',\n      },\n      {\n        code: 'HRM',\n        name: 'Herm',\n      },\n      {\n        code: 'HRT',\n        name: 'Hertfordshire',\n      },\n      {\n        code: 'HLD',\n        name: 'Highland',\n      },\n      {\n        code: 'INV',\n        name: 'Inverness-shire',\n      },\n      {\n        code: 'AGY',\n        name: 'Isle of Anglesey',\n      },\n      {\n        code: 'IOM',\n        name: 'Isle of Man',\n      },\n      {\n        code: 'IOW',\n        name: 'Isle of Wight',\n      },\n      {\n        code: 'JSY',\n        name: 'Jersey',\n      },\n      {\n        code: 'KEN',\n        name: 'Kent',\n      },\n      {\n        code: 'KCD',\n        name: 'Kincardineshire',\n      },\n      {\n        code: 'KKD',\n        name: 'Kirkcudbrightshire',\n      },\n      {\n        code: 'LAN',\n        name: 'Lancashire',\n      },\n      {\n        code: 'LRN',\n        name: 'Larne',\n      },\n      {\n        code: 'LEC',\n        name: 'Leicestershire',\n      },\n      {\n        code: 'LMV',\n        name: 'Limavady',\n      },\n      {\n        code: 'LIN',\n        name: 'Lincolnshire',\n      },\n      {\n        code: 'LBC',\n        name: 'Lisburn and Castlereagh',\n      },\n      {\n        code: 'MFT',\n        name: 'Magherafelt',\n      },\n      {\n        code: 'MER',\n        name: 'Merseyside',\n      },\n      {\n        code: 'MTY',\n        name: 'Merthyr Tydfil',\n      },\n      {\n        code: 'MLN',\n        name: 'Midlothian',\n      },\n      {\n        code: 'MON',\n        name: 'Monmouthshire',\n      },\n      {\n        code: 'MRY',\n        name: 'Morayshire',\n      },\n      {\n        code: 'MYL',\n        name: 'Moyle',\n      },\n      {\n        code: 'NAI',\n        name: 'Nairn',\n      },\n      {\n        code: 'NTL',\n        name: 'Neath Port Talbot',\n      },\n      {\n        code: 'NWP',\n        name: 'Newport',\n      },\n      {\n        code: 'NMD',\n        name: 'Newry, Mourne and Down',\n      },\n      {\n        code: 'NFK',\n        name: 'Norfolk',\n      },\n      {\n        code: 'AND',\n        name: 'North Down and Ards',\n      },\n      {\n        code: 'NLK',\n        name: 'North Lanarkshire',\n      },\n      {\n        code: 'NYK',\n        name: 'North Yorkshire',\n      },\n      {\n        code: 'NTH',\n        name: 'Northamptonshire',\n      },\n      {\n        code: 'NBL',\n        name: 'Northumberland',\n      },\n      {\n        code: 'NTT',\n        name: 'Nottinghamshire',\n      },\n      {\n        code: 'OMA',\n        name: 'Omagh',\n      },\n      {\n        code: 'ORK',\n        name: 'Orkney Islands',\n      },\n      {\n        code: 'OXF',\n        name: 'Oxfordshire',\n      },\n      {\n        code: 'PEM',\n        name: 'Pembrokeshire',\n      },\n      {\n        code: 'PKN',\n        name: 'Perth and Kinross',\n      },\n      {\n        code: 'PER',\n        name: 'Perthshire and Kinross',\n      },\n      {\n        code: 'POW',\n        name: 'Powys',\n      },\n      {\n        code: 'RCC',\n        name: 'Redcar and Cleveland',\n      },\n      {\n        code: 'RFW',\n        name: 'Renfrewshire',\n      },\n      {\n        code: 'RCT',\n        name: 'Rhondda Cynon Taff',\n      },\n      {\n        code: 'RUT',\n        name: 'Rutland',\n      },\n      {\n        code: 'SRK',\n        name: 'Sark',\n      },\n      {\n        code: 'ZET',\n        name: 'Shetland Islands',\n      },\n      {\n        code: 'SHR',\n        name: 'Shropshire',\n      },\n      {\n        code: 'SOM',\n        name: 'Somerset',\n      },\n      {\n        code: 'SLK',\n        name: 'South Lanarkshire',\n      },\n      {\n        code: 'SYK',\n        name: 'South Yorkshire',\n      },\n      {\n        code: 'STS',\n        name: 'Staffordshire',\n      },\n      {\n        code: 'STG',\n        name: 'Stirlingshire',\n      },\n      {\n        code: 'STR',\n        name: 'Strabane',\n      },\n      {\n        code: 'SFK',\n        name: 'Suffolk',\n      },\n      {\n        code: 'SRY',\n        name: 'Surrey',\n      },\n      {\n        code: 'SSX',\n        name: 'Sussex',\n      },\n      {\n        code: 'SUT',\n        name: 'Sutherland',\n      },\n      {\n        code: 'SWA',\n        name: 'Swansea',\n      },\n      {\n        code: 'TOF',\n        name: 'Torfaen',\n      },\n      {\n        code: 'TWR',\n        name: 'Tyne and Wear',\n      },\n      {\n        code: 'VGL',\n        name: 'Vale of Glamorgan',\n      },\n      {\n        code: 'WAR',\n        name: 'Warwickshire',\n      },\n      {\n        code: 'WLN',\n        name: 'West Lothian',\n      },\n      {\n        code: 'WMD',\n        name: 'West Midlands',\n      },\n      {\n        code: 'WSX',\n        name: 'West Sussex',\n      },\n      {\n        code: 'WRY',\n        name: 'West Yorkshire',\n      },\n      {\n        code: 'ELS',\n        name: 'Western Isles',\n      },\n      {\n        code: 'WIL',\n        name: 'Wiltshire',\n      },\n      {\n        code: 'WOR',\n        name: 'Worcestershire',\n      },\n      {\n        code: 'WRX',\n        name: 'Wrexham',\n      },\n    ],\n  },\n  {\n    code: 'AF',\n    id: 2185,\n    name: 'Afghanistan',\n    states: [\n      {\n        code: 'AF01',\n        name: 'Badakhshan',\n      },\n      {\n        code: 'AF02',\n        name: 'Badghis',\n      },\n      {\n        code: 'AF03',\n        name: 'Baghlan',\n      },\n      {\n        code: 'AF30',\n        name: 'Balkh',\n      },\n      {\n        code: 'AF05',\n        name: 'Bamian',\n      },\n      {\n        code: 'AF41',\n        name: 'Daikondi',\n      },\n      {\n        code: 'AF06',\n        name: 'Farah',\n      },\n      {\n        code: 'AF07',\n        name: 'Faryab',\n      },\n      {\n        code: 'AF08',\n        name: 'Ghazni',\n      },\n      {\n        code: 'AF09',\n        name: 'Ghowr',\n      },\n      {\n        code: 'AF10',\n        name: 'Helmand',\n      },\n      {\n        code: 'AF11',\n        name: 'Herat',\n      },\n      {\n        code: 'AF31',\n        name: 'Jowzjan',\n      },\n      {\n        code: 'AF13',\n        name: 'Kabul',\n      },\n      {\n        code: 'AF23',\n        name: 'Kandahar',\n      },\n      {\n        code: 'AF14',\n        name: 'Kapisa',\n      },\n      {\n        code: 'AF37',\n        name: 'Khowst',\n      },\n      {\n        code: 'AF34',\n        name: 'Konar',\n      },\n      {\n        code: 'AF24',\n        name: 'Kondoz',\n      },\n      {\n        code: 'AF35',\n        name: 'Laghman',\n      },\n      {\n        code: 'AF17',\n        name: 'Lowgar',\n      },\n      {\n        code: 'AF18',\n        name: 'Nangarhar',\n      },\n      {\n        code: 'AF19',\n        name: 'Nimruz',\n      },\n      {\n        code: 'AF38',\n        name: 'Nurestan',\n      },\n      {\n        code: 'AF39',\n        name: 'Oruzgan',\n      },\n      {\n        code: 'AF36',\n        name: 'Paktia',\n      },\n      {\n        code: 'AF29',\n        name: 'Paktika',\n      },\n      {\n        code: 'AF42',\n        name: 'Panjshir',\n      },\n      {\n        code: 'AF40',\n        name: 'Parvan',\n      },\n      {\n        code: 'AF32',\n        name: 'Samangan',\n      },\n      {\n        code: 'AF33',\n        name: 'Sar-e Pol',\n      },\n      {\n        code: 'AF26',\n        name: 'Takhar',\n      },\n      {\n        code: 'AF27',\n        name: 'Vardak',\n      },\n      {\n        code: 'AF28',\n        name: 'Zabol',\n      },\n    ],\n  },\n  {\n    code: 'AX',\n    id: 2407,\n    name: 'Åland Islands',\n    states: [],\n  },\n  {\n    code: 'AL',\n    id: 2186,\n    name: 'Albania',\n    states: [],\n  },\n  {\n    code: 'DZ',\n    id: 2187,\n    name: 'Algeria',\n    states: [\n      {\n        code: 'DZ.AR',\n        name: 'Adrar',\n      },\n      {\n        code: 'DZ.AD',\n        name: 'Aïn Defla',\n      },\n      {\n        code: 'DZ.AT',\n        name: 'Aïn Témouchent',\n      },\n      {\n        code: 'DZ.AL',\n        name: 'Algiers',\n      },\n      {\n        code: 'DZ.AN',\n        name: 'Annaba',\n      },\n      {\n        code: 'DZ.BT',\n        name: 'Batna',\n      },\n      {\n        code: 'DZ.BC',\n        name: 'Béchar',\n      },\n      {\n        code: 'DZ.BJ',\n        name: 'Béjaïa',\n      },\n      {\n        code: 'DZ.BS',\n        name: 'Biskra',\n      },\n      {\n        code: 'DZ.BL',\n        name: 'Blida',\n      },\n      {\n        code: 'DZ.BB',\n        name: 'Bordj Bou Arréridj',\n      },\n      {\n        code: 'DZ.BU',\n        name: 'Bouira',\n      },\n      {\n        code: 'DZ.BM',\n        name: 'Boumerdès',\n      },\n      {\n        code: 'DZ.CH',\n        name: 'Chlef',\n      },\n      {\n        code: 'DZ.CO',\n        name: 'Constantine',\n      },\n      {\n        code: 'DZ.DJ',\n        name: 'Djelfa',\n      },\n      {\n        code: 'DZ.EB',\n        name: 'El Bayadh',\n      },\n      {\n        code: 'DZ.EO',\n        name: 'El Oued',\n      },\n      {\n        code: 'DZ.ET',\n        name: 'El Tarf',\n      },\n      {\n        code: 'DZ.GR',\n        name: 'Ghardaïa',\n      },\n      {\n        code: 'DZ.GL',\n        name: 'Guelma',\n      },\n      {\n        code: 'DZ.IL',\n        name: 'Illizi',\n      },\n      {\n        code: 'DZ.JJ',\n        name: 'Jijel',\n      },\n      {\n        code: 'DZ.KH',\n        name: 'Khenchela',\n      },\n      {\n        code: 'DZ.LG',\n        name: 'Laghouat',\n      },\n      {\n        code: 'DZ.MC',\n        name: 'Mascara',\n      },\n      {\n        code: 'DZ.MD',\n        name: 'Médéa',\n      },\n      {\n        code: 'DZ.ML',\n        name: 'Mila',\n      },\n      {\n        code: 'DZ.MG',\n        name: 'Mostaganem',\n      },\n      {\n        code: 'DZ.MS',\n        name: 'Msila',\n      },\n      {\n        code: 'DZ.NA',\n        name: 'Naama',\n      },\n      {\n        code: 'DZ.OR',\n        name: 'Oran',\n      },\n      {\n        code: 'DZ.OG',\n        name: 'Ouargla',\n      },\n      {\n        code: 'DZ.OB',\n        name: 'Oum el Bouaghi',\n      },\n      {\n        code: 'DZ.RE',\n        name: 'Relizane',\n      },\n      {\n        code: 'DZ.SD',\n        name: 'Saïda',\n      },\n      {\n        code: 'DZ.SF',\n        name: 'Sétif',\n      },\n      {\n        code: 'DZ.SB',\n        name: 'Sidi Bel Abbès',\n      },\n      {\n        code: 'DZ.SK',\n        name: 'Skikda',\n      },\n      {\n        code: 'DZ.SA',\n        name: 'Souk Ahras',\n      },\n      {\n        code: 'DZ.TM',\n        name: 'Tamanrasset',\n      },\n      {\n        code: 'DZ.TB',\n        name: 'Tébessa',\n      },\n      {\n        code: 'DZ.TR',\n        name: 'Tiaret',\n      },\n      {\n        code: 'DZ.TN',\n        name: 'Tindouf',\n      },\n      {\n        code: 'DZ.TP',\n        name: 'Tipaza',\n      },\n      {\n        code: 'DZ.TS',\n        name: 'Tissemsilt',\n      },\n      {\n        code: 'DZ.TO',\n        name: 'Tizi Ouzou',\n      },\n      {\n        code: 'DZ.TL',\n        name: 'Tlemcen',\n      },\n    ],\n  },\n  {\n    code: 'AS',\n    id: 2408,\n    name: 'American Samoa',\n    states: [],\n  },\n  {\n    code: 'AD',\n    id: 2188,\n    name: 'Andorra',\n    states: [],\n  },\n  {\n    code: 'AO',\n    id: 2189,\n    name: 'Angola',\n    states: [\n      {\n        code: 'AO19',\n        name: 'Bengo',\n      },\n      {\n        code: 'AO01',\n        name: 'Benguela',\n      },\n      {\n        code: 'AO02',\n        name: 'Bié',\n      },\n      {\n        code: 'AO03',\n        name: 'Cabinda',\n      },\n      {\n        code: 'AO04',\n        name: 'Cuando Cubango',\n      },\n      {\n        code: 'AO05',\n        name: 'Cuanza Norte',\n      },\n      {\n        code: 'AO06',\n        name: 'Cuanza Sul',\n      },\n      {\n        code: 'AO07',\n        name: 'Cunene',\n      },\n      {\n        code: 'AO08',\n        name: 'Huambo',\n      },\n      {\n        code: 'AO09',\n        name: 'Huíla',\n      },\n      {\n        code: 'AO20',\n        name: 'Luanda',\n      },\n      {\n        code: 'AO17',\n        name: 'Lunda Norte',\n      },\n      {\n        code: 'AO18',\n        name: 'Lunda Sul',\n      },\n      {\n        code: 'AO12',\n        name: 'Malanje',\n      },\n      {\n        code: 'AO14',\n        name: 'Moxico',\n      },\n      {\n        code: 'AO13',\n        name: 'Namibe',\n      },\n      {\n        code: 'AO15',\n        name: 'Uíge',\n      },\n      {\n        code: 'AO16',\n        name: 'Zaire',\n      },\n    ],\n  },\n  {\n    code: 'AI',\n    id: 2409,\n    name: 'Anguilla',\n    states: [],\n  },\n  {\n    code: 'AQ',\n    id: 2190,\n    name: 'Antarctica',\n    states: [],\n  },\n  {\n    code: 'AG',\n    id: 2191,\n    name: 'Antigua and Barbuda',\n    states: [],\n  },\n  {\n    code: 'AR',\n    id: 2192,\n    name: 'Argentina',\n    states: [\n      {\n        code: 'AR01',\n        name: 'Buenos Aires',\n      },\n      {\n        code: 'AR02',\n        name: 'Catamarca',\n      },\n      {\n        code: 'AR03',\n        name: 'Chaco',\n      },\n      {\n        code: 'AR04',\n        name: 'Chubut',\n      },\n      {\n        code: 'AR07',\n        name: 'Ciudad de Buenos Aires',\n      },\n      {\n        code: 'AR05',\n        name: 'Córdoba',\n      },\n      {\n        code: 'AR06',\n        name: 'Corrientes',\n      },\n      {\n        code: 'AR08',\n        name: 'Entre Ríos',\n      },\n      {\n        code: 'AR09',\n        name: 'Formosa',\n      },\n      {\n        code: 'AR10',\n        name: 'Jujuy',\n      },\n      {\n        code: 'AR11',\n        name: 'La Pampa',\n      },\n      {\n        code: 'AR12',\n        name: 'La Rioja',\n      },\n      {\n        code: 'AR13',\n        name: 'Mendoza',\n      },\n      {\n        code: 'AR14',\n        name: 'Misiones',\n      },\n      {\n        code: 'AR15',\n        name: 'Neuquén',\n      },\n      {\n        code: 'AR16',\n        name: 'Río Negro',\n      },\n      {\n        code: 'AR17',\n        name: 'Salta',\n      },\n      {\n        code: 'AR18',\n        name: 'San Juan',\n      },\n      {\n        code: 'AR19',\n        name: 'San Luis',\n      },\n      {\n        code: 'AR20',\n        name: 'Santa Cruz',\n      },\n      {\n        code: 'AR21',\n        name: 'Santa Fe',\n      },\n      {\n        code: 'AR22',\n        name: 'Santiago del Estero',\n      },\n      {\n        code: 'AR23',\n        name: 'Tierra del Fuego',\n      },\n      {\n        code: 'AR24',\n        name: 'Tucumán',\n      },\n    ],\n  },\n  {\n    code: 'AM',\n    id: 2193,\n    name: 'Armenia',\n    states: [],\n  },\n  {\n    code: 'AB',\n    id: 2373,\n    name: 'Aruba',\n    states: [\n      {\n        code: 'AW.AA',\n        name: 'Aruba',\n      },\n    ],\n  },\n  {\n    code: 'AU',\n    id: 2194,\n    name: 'Australia',\n    states: [\n      {\n        code: 'ACT',\n        name: 'Australian Capital Territory',\n      },\n      {\n        code: 'NSW',\n        name: 'New South Wales',\n      },\n      {\n        code: 'NT',\n        name: 'Northern Territory',\n      },\n      {\n        code: 'QLD',\n        name: 'Queensland',\n      },\n      {\n        code: 'SA',\n        name: 'South Australia',\n      },\n      {\n        code: 'TAS',\n        name: 'Tasmania',\n      },\n      {\n        code: 'VIC',\n        name: 'Victoria',\n      },\n      {\n        code: 'WA',\n        name: 'Western Australia',\n      },\n    ],\n  },\n  {\n    code: 'AT',\n    id: 2195,\n    name: 'Austria',\n    states: [\n      {\n        code: 'AU01',\n        name: 'Burgenland',\n      },\n      {\n        code: 'AU02',\n        name: 'Carinthia',\n      },\n      {\n        code: 'AU03',\n        name: 'Lower Austria',\n      },\n      {\n        code: 'AU05',\n        name: 'Salzburg',\n      },\n      {\n        code: 'AU06',\n        name: 'Styria',\n      },\n      {\n        code: 'AU07',\n        name: 'Tyrol',\n      },\n      {\n        code: 'AU04',\n        name: 'Upper Austria',\n      },\n      {\n        code: 'AU09',\n        name: 'Vienna',\n      },\n      {\n        code: 'AU08',\n        name: 'Vorarlberg',\n      },\n    ],\n  },\n  {\n    code: 'AZ',\n    id: 2196,\n    name: 'Azerbaijan',\n    states: [\n      {\n        code: 'AZ-ABS',\n        name: 'Absheron',\n      },\n      {\n        code: 'AZ-AGM',\n        name: 'Aghdam',\n      },\n      {\n        code: 'AZ-AGS',\n        name: 'Aghdash',\n      },\n      {\n        code: 'AZ-AGC',\n        name: 'Aghjabedi',\n      },\n      {\n        code: 'AZ-AGA',\n        name: 'Aghstafa',\n      },\n      {\n        code: 'AZ-AGU',\n        name: 'Aghsu',\n      },\n      {\n        code: 'AZ-AB',\n        name: 'Ali-Bairamly',\n      },\n      {\n        code: 'AZ-AST',\n        name: 'Astara',\n      },\n      {\n        code: 'AZ-BAB',\n        name: 'Babek',\n      },\n      {\n        code: 'AZ-BA',\n        name: 'Baku',\n      },\n      {\n        code: 'AZ-BAL',\n        name: 'Balaken',\n      },\n      {\n        code: 'AZ-BAR',\n        name: 'Barda',\n      },\n      {\n        code: 'AZ-BEY',\n        name: 'Beilagan',\n      },\n      {\n        code: 'AZ-BIL',\n        name: 'Bilasuvar',\n      },\n      {\n        code: 'AZ-DAS',\n        name: 'Dashkesan',\n      },\n      {\n        code: 'AZ-DAV',\n        name: 'Devechi',\n      },\n      {\n        code: 'AZ-FUZ',\n        name: 'Fizuli',\n      },\n      {\n        code: 'AZ-QAB',\n        name: 'Gabala',\n      },\n      {\n        code: 'AZ-GAD',\n        name: 'Gadabey',\n      },\n      {\n        code: 'AZ-QAX',\n        name: 'Gakh',\n      },\n      {\n        code: 'AZ-GA',\n        name: 'Ganja',\n      },\n      {\n        code: 'AZ-QAZ',\n        name: 'Gazakh',\n      },\n      {\n        code: 'AZ-GOR',\n        name: 'Geranboy',\n      },\n      {\n        code: 'AZ-QOB',\n        name: 'Gobustan',\n      },\n      {\n        code: 'AZ-GOY',\n        name: 'Goychay',\n      },\n      {\n        code: 'AZ-QBA',\n        name: 'Guba',\n      },\n      {\n        code: 'AZ-QBI',\n        name: 'Gubadly',\n      },\n      {\n        code: 'AZ-QUS',\n        name: 'Gusar',\n      },\n      {\n        code: 'AZ-HAC',\n        name: 'Hacuqabul',\n      },\n      {\n        code: 'AZ-IMI',\n        name: 'Imishli',\n      },\n      {\n        code: 'AZ-ISM',\n        name: 'Ismailly',\n      },\n      {\n        code: 'AZ-CAL',\n        name: 'Jalilabad',\n      },\n      {\n        code: 'AZ-CAB',\n        name: 'Jebrail',\n      },\n      {\n        code: 'AZ-CUL',\n        name: 'Julfa',\n      },\n      {\n        code: 'AZ-KAL',\n        name: 'Kelbajar',\n      },\n      {\n        code: 'AZ-XAC',\n        name: 'Khachmaz',\n      },\n      {\n        code: 'AZ-XA',\n        name: 'Khankendy',\n      },\n      {\n        code: 'AZ-XAN',\n        name: 'Khanlar',\n      },\n      {\n        code: 'AZ-XCI',\n        name: 'Khojaly',\n      },\n      {\n        code: 'AZ-XVD',\n        name: 'Khojavend',\n      },\n      {\n        code: 'AZ-XIZ',\n        name: 'Khyzy',\n      },\n      {\n        code: 'AZ-KUR',\n        name: 'Kyurdamir',\n      },\n      {\n        code: 'AZ-LAC',\n        name: 'Lachin',\n      },\n      {\n        code: 'AZ-LAN',\n        name: 'Lenkaran',\n      },\n      {\n        code: 'AZ-LA',\n        name: 'Lenkaran',\n      },\n      {\n        code: 'AZ-LER',\n        name: 'Lerik',\n      },\n      {\n        code: 'AZ-MAS',\n        name: 'Masally',\n      },\n      {\n        code: 'AZ-MI',\n        name: 'Mingechevir',\n      },\n      {\n        code: 'AZ-NA',\n        name: 'Naftalan',\n      },\n      {\n        code: 'AZ-NX',\n        name: 'Nakhchivan',\n      },\n      {\n        code: 'AZ-NEF',\n        name: 'Neftchala',\n      },\n      {\n        code: 'AZ-OGU',\n        name: 'Oghuz',\n      },\n      {\n        code: 'AZ-ORD',\n        name: 'Ordubad',\n      },\n      {\n        code: 'AZ-SAT',\n        name: 'Saatly',\n      },\n      {\n        code: 'AZ-SAB',\n        name: 'Sabirabad',\n      },\n      {\n        code: 'AZ-SAL',\n        name: 'Salyan',\n      },\n      {\n        code: 'AZ-SMX',\n        name: 'Samuh',\n      },\n      {\n        code: 'AZ-SAD',\n        name: 'Sedarak',\n      },\n      {\n        code: 'AZ-SAH',\n        name: 'Shahbuz',\n      },\n      {\n        code: 'AZ-SMI',\n        name: 'Shamakhy',\n      },\n      {\n        code: 'AZ-SKR',\n        name: 'Shamkir',\n      },\n      {\n        code: 'AZ-SAK',\n        name: 'Sheki',\n      },\n      {\n        code: 'AZ-SA',\n        name: 'Sheki',\n      },\n      {\n        code: 'AZ-SAR',\n        name: 'Sherur',\n      },\n      {\n        code: 'AZ-SS',\n        name: 'Shusha',\n      },\n      {\n        code: 'AZ-SUS',\n        name: 'Shusha',\n      },\n      {\n        code: 'AZ-SIY',\n        name: 'Siazan',\n      },\n      {\n        code: 'AZ-SM',\n        name: 'Sumgayit',\n      },\n      {\n        code: 'AZ-TAR',\n        name: 'Terter',\n      },\n      {\n        code: 'AZ-TOV',\n        name: 'Tovuz',\n      },\n      {\n        code: 'AZ-UCA',\n        name: 'Ujar',\n      },\n      {\n        code: 'AZ-YAR',\n        name: 'Yardymly',\n      },\n      {\n        code: 'AZ-YE',\n        name: 'Yevlakh',\n      },\n      {\n        code: 'AZ-YEV',\n        name: 'Yevlakh',\n      },\n      {\n        code: 'AZ-ZAQ',\n        name: 'Zagatala',\n      },\n      {\n        code: 'AZ-ZAN',\n        name: 'Zangilan',\n      },\n      {\n        code: 'AZ-ZAR',\n        name: 'Zerdab',\n      },\n    ],\n  },\n  {\n    code: 'BS',\n    id: 2197,\n    name: 'Bahamas',\n    states: [\n      {\n        code: 'BF24',\n        name: 'Acklins',\n      },\n      {\n        code: 'BF32',\n        name: 'Berry Islands',\n      },\n      {\n        code: 'BF05',\n        name: 'Bimini',\n      },\n      {\n        code: 'BF36',\n        name: 'Black Point',\n      },\n      {\n        code: 'BF06',\n        name: 'Cat Island',\n      },\n      {\n        code: 'BF37',\n        name: 'Central Abaco',\n      },\n      {\n        code: 'BF38',\n        name: 'Central Andros',\n      },\n      {\n        code: 'BF39',\n        name: 'Central Eleuthera',\n      },\n      {\n        code: 'BF25',\n        name: 'City of Freeport',\n      },\n      {\n        code: 'BF40',\n        name: 'Crooked Island',\n      },\n      {\n        code: 'BF41',\n        name: 'East Grand Bahama',\n      },\n      {\n        code: 'BF10',\n        name: 'Exuma',\n      },\n      {\n        code: 'BF42',\n        name: 'Grand Cay',\n      },\n      {\n        code: 'BS.GT\\t',\n        name: 'Green Turtle Cay',\n      },\n      {\n        code: 'BF22',\n        name: 'Harbour Island',\n      },\n      {\n        code: 'BF43',\n        name: 'Hope Town',\n      },\n      {\n        code: 'BF13',\n        name: 'Inagua',\n      },\n      {\n        code: 'BF15',\n        name: 'Long Island',\n      },\n      {\n        code: 'BF44',\n        name: 'Mangrove Cay',\n      },\n      {\n        code: 'BF16',\n        name: 'Mayaguana',\n      },\n      {\n        code: 'BF45',\n        name: \"Moore's Island\",\n      },\n      {\n        code: 'BS.NW',\n        name: 'New Providence',\n      },\n      {\n        code: 'BF46',\n        name: 'North Abaco',\n      },\n      {\n        code: 'BF47',\n        name: 'North Andros',\n      },\n      {\n        code: 'BF48',\n        name: 'North Eleuthera',\n      },\n      {\n        code: 'BF18',\n        name: 'Ragged Island',\n      },\n      {\n        code: 'BF49',\n        name: 'Rum Cay',\n      },\n      {\n        code: 'BF35',\n        name: 'San Salvador',\n      },\n      {\n        code: 'BF50',\n        name: 'South Abaco',\n      },\n      {\n        code: 'BF51',\n        name: 'South Andros',\n      },\n      {\n        code: 'BF52',\n        name: 'South Eleuthera',\n      },\n      {\n        code: 'BF53',\n        name: 'Spanish Wells',\n      },\n      {\n        code: 'BF54',\n        name: 'West Grand Bahama',\n      },\n    ],\n  },\n  {\n    code: 'BH',\n    id: 2198,\n    name: 'Bahrain',\n    states: [\n      {\n        code: 'BA16',\n        name: 'Capital',\n      },\n      {\n        code: 'BA19',\n        name: 'Central',\n      },\n      {\n        code: 'BA15',\n        name: 'Muharraq',\n      },\n      {\n        code: 'BA18',\n        name: 'Northern',\n      },\n      {\n        code: 'BA17',\n        name: 'Southern',\n      },\n    ],\n  },\n  {\n    code: 'BD',\n    id: 2199,\n    name: 'Bangladesh',\n    states: [\n      {\n        code: 'BG85',\n        name: 'Barisal',\n      },\n      {\n        code: 'BG84',\n        name: 'Chittagong',\n      },\n      {\n        code: 'BG81',\n        name: 'Dhaka',\n      },\n      {\n        code: 'BG82',\n        name: 'Khulna',\n      },\n      {\n        code: 'BG81',\n        name: 'Mymensingh',\n      },\n      {\n        code: 'BG83',\n        name: 'Rajshahi',\n      },\n      {\n        code: 'BG87',\n        name: 'Rangpur',\n      },\n      {\n        code: 'BG86',\n        name: 'Sylhet',\n      },\n    ],\n  },\n  {\n    code: 'BB',\n    id: 2200,\n    name: 'Barbados',\n    states: [\n      {\n        code: 'BB01',\n        name: 'Christ Church',\n      },\n      {\n        code: 'BB02',\n        name: 'Saint Andrew',\n      },\n      {\n        code: 'BB03',\n        name: 'Saint George',\n      },\n      {\n        code: 'BB04',\n        name: 'Saint James',\n      },\n      {\n        code: 'BB05',\n        name: 'Saint John',\n      },\n      {\n        code: 'BB06',\n        name: 'Saint Joseph',\n      },\n      {\n        code: 'BB07',\n        name: 'Saint Lucy',\n      },\n      {\n        code: 'BB08',\n        name: 'Saint Michael',\n      },\n      {\n        code: 'BB09',\n        name: 'Saint Peter',\n      },\n      {\n        code: 'BB10',\n        name: 'Saint Philip',\n      },\n      {\n        code: 'BB11',\n        name: 'Saint Thomas',\n      },\n    ],\n  },\n  {\n    code: 'BY',\n    id: 2201,\n    name: 'Belarus',\n    states: [\n      {\n        code: 'BO01',\n        name: 'Brest',\n      },\n      {\n        code: 'BO02',\n        name: 'Gomel',\n      },\n      {\n        code: 'BO03',\n        name: 'Grodno',\n      },\n      {\n        code: 'BO05',\n        name: 'Minsk',\n      },\n      {\n        code: 'BO04',\n        name: 'Minsk City',\n      },\n      {\n        code: 'BO06',\n        name: 'Mogilev',\n      },\n      {\n        code: 'BO07',\n        name: 'Vitebsk',\n      },\n    ],\n  },\n  {\n    code: 'BE',\n    id: 2202,\n    name: 'Belgium',\n    states: [\n      {\n        code: 'BE01',\n        name: 'Antwerpen Province',\n      },\n      {\n        code: 'BE11',\n        name: 'Brussels-Capital Region',\n      },\n      {\n        code: 'BE12',\n        name: 'Flemish Brabant Province',\n      },\n      {\n        code: 'BE03',\n        name: 'Hainaut Province',\n      },\n      {\n        code: 'BE04',\n        name: 'Liege Province',\n      },\n      {\n        code: 'BE05',\n        name: 'Limburg Province',\n      },\n      {\n        code: 'BE06',\n        name: 'Luxembourg Province',\n      },\n      {\n        code: 'BE07',\n        name: 'Namur Province',\n      },\n      {\n        code: 'BE08',\n        name: 'Oost-Vlaanderen Province',\n      },\n      {\n        code: 'BE10',\n        name: 'Walloon Brabant Province',\n      },\n      {\n        code: 'BE09',\n        name: 'West-Vlaanderen Province',\n      },\n    ],\n  },\n  {\n    code: 'BZ',\n    id: 2203,\n    name: 'Belize',\n    states: [],\n  },\n  {\n    code: 'BJ',\n    id: 2204,\n    name: 'Benin',\n    states: [\n      {\n        code: 'BN07',\n        name: 'Alibori',\n      },\n      {\n        code: 'BN08',\n        name: 'Atacora',\n      },\n      {\n        code: 'BN09',\n        name: 'Atlantique',\n      },\n      {\n        code: 'BN10',\n        name: 'Borgou',\n      },\n      {\n        code: 'BN11',\n        name: 'Collines',\n      },\n      {\n        code: 'BN12',\n        name: 'Couffo',\n      },\n      {\n        code: 'BN13',\n        name: 'Donga',\n      },\n      {\n        code: 'BN14',\n        name: 'Littoral',\n      },\n      {\n        code: 'BN15',\n        name: 'Mono',\n      },\n      {\n        code: 'BN16',\n        name: 'Ouémé',\n      },\n      {\n        code: 'BN17',\n        name: 'Plateau',\n      },\n      {\n        code: 'BN18',\n        name: 'Zou',\n      },\n    ],\n  },\n  {\n    code: 'BU',\n    id: 2372,\n    name: 'Bermuda',\n    states: [\n      {\n        code: 'BD01',\n        name: 'Devonshire',\n      },\n      {\n        code: 'BD02',\n        name: 'Hamilton',\n      },\n      {\n        code: 'BD03',\n        name: 'Hamilton municipality',\n      },\n      {\n        code: 'BD04',\n        name: 'Paget',\n      },\n      {\n        code: 'BD05',\n        name: 'Pembroke',\n      },\n      {\n        code: 'BD06',\n        name: 'Saint George municipality',\n      },\n      {\n        code: 'BD07',\n        name: \"Saint George's\",\n      },\n      {\n        code: 'BD08',\n        name: 'Sandys',\n      },\n      {\n        code: 'BD09',\n        name: 'Smiths',\n      },\n      {\n        code: 'BD10',\n        name: 'Southampton',\n      },\n      {\n        code: 'BD11',\n        name: 'Warwick',\n      },\n    ],\n  },\n  {\n    code: 'BT',\n    id: 2205,\n    name: 'Bhutan',\n    states: [],\n  },\n  {\n    code: 'BO',\n    id: 2206,\n    name: 'Bolivia; Plurinational State',\n    states: [\n      {\n        code: 'BL01',\n        name: 'Chuquisaca',\n      },\n      {\n        code: 'BL02',\n        name: 'Cochabamba',\n      },\n      {\n        code: 'BL03',\n        name: 'El Beni',\n      },\n      {\n        code: 'BL04',\n        name: 'La Paz',\n      },\n      {\n        code: 'BL05',\n        name: 'Oruro',\n      },\n      {\n        code: 'BL06',\n        name: 'Pando',\n      },\n      {\n        code: 'BL07',\n        name: 'Potosí',\n      },\n      {\n        code: 'BL08',\n        name: 'Santa Cruz',\n      },\n      {\n        code: 'BL09',\n        name: 'Tarija',\n      },\n    ],\n  },\n  {\n    code: 'BQ',\n    id: 2449,\n    name: 'Bonaire',\n    states: [],\n  },\n  {\n    code: 'BA',\n    id: 2207,\n    name: 'Bosnia and Herzegovina',\n    states: [\n      {\n        code: 'BA-05',\n        name: 'Bosansko-podrinjski kanton',\n      },\n      {\n        code: 'BA-BRC',\n        name: 'Brcko distrikt',\n      },\n      {\n        code: 'BA-BIH',\n        name: 'Federacija Bosna i Hercegovina',\n      },\n      {\n        code: 'BA-07',\n        name: 'Hercegovacko-neretvanski kanton',\n      },\n      {\n        code: 'BA-09',\n        name: 'Kanton Sarajevo',\n      },\n      {\n        code: 'BA-10',\n        name: 'Livanjski kanton',\n      },\n      {\n        code: 'BA-02',\n        name: 'Posavski kanton',\n      },\n      {\n        code: 'BA-SRP',\n        name: 'Republika Srpska',\n      },\n      {\n        code: 'BA-06',\n        name: 'Srednjobosanski kanton',\n      },\n      {\n        code: 'BA-03',\n        name: 'Tuzlanski kanton',\n      },\n      {\n        code: 'BA-01',\n        name: 'Unsko-sanski kanton',\n      },\n      {\n        code: 'BA-08',\n        name: 'Zapadnohercegovacki kanton',\n      },\n      {\n        code: 'BA-04',\n        name: 'Zenicko-dobojski kanton',\n      },\n    ],\n  },\n  {\n    code: 'BW',\n    id: 2208,\n    name: 'Botswana',\n    states: [\n      {\n        code: 'BC01',\n        name: 'Central',\n      },\n      {\n        code: 'BC12',\n        name: 'Chobe',\n      },\n      {\n        code: 'BC13',\n        name: 'Francistown',\n      },\n      {\n        code: 'BC14',\n        name: 'Gaborone',\n      },\n      {\n        code: 'BC03',\n        name: 'Ghanzi',\n      },\n      {\n        code: 'BC15',\n        name: 'Jwaneng',\n      },\n      {\n        code: 'BC04',\n        name: 'Kgalagadi',\n      },\n      {\n        code: 'BC05',\n        name: 'Kgatleng',\n      },\n      {\n        code: 'BC06',\n        name: 'Kweneng',\n      },\n      {\n        code: 'BC16',\n        name: 'Lobatse',\n      },\n      {\n        code: 'BC08',\n        name: 'North-East',\n      },\n      {\n        code: 'BC11',\n        name: 'North-West',\n      },\n      {\n        code: 'BC17',\n        name: 'Selibe Phikwe',\n      },\n      {\n        code: 'BC09',\n        name: 'South East',\n      },\n      {\n        code: 'BC10',\n        name: 'Southern',\n      },\n      {\n        code: 'BC18',\n        name: 'Sowa Town',\n      },\n    ],\n  },\n  {\n    code: 'BV',\n    id: 2410,\n    name: 'Bouvet Island',\n    states: [],\n  },\n  {\n    code: 'BR',\n    id: 2209,\n    name: 'Brazil',\n    states: [\n      {\n        code: 'AC',\n        name: 'Acre',\n      },\n      {\n        code: 'AL',\n        name: 'Alagoas',\n      },\n      {\n        code: 'AP',\n        name: 'Amapá',\n      },\n      {\n        code: 'AM',\n        name: 'Amazonas',\n      },\n      {\n        code: 'BA',\n        name: 'Bahia',\n      },\n      {\n        code: 'CE',\n        name: 'Ceará',\n      },\n      {\n        code: 'DF',\n        name: 'Distrito Federal',\n      },\n      {\n        code: 'ES',\n        name: 'Espírito Santo',\n      },\n      {\n        code: 'GO',\n        name: 'Goiás',\n      },\n      {\n        code: 'MA',\n        name: 'Maranhão',\n      },\n      {\n        code: 'MT',\n        name: 'Mato Grosso',\n      },\n      {\n        code: 'MS',\n        name: 'Mato Grosso do Sul',\n      },\n      {\n        code: 'MG',\n        name: 'Minas Gerais',\n      },\n      {\n        code: 'PA',\n        name: 'Pará',\n      },\n      {\n        code: 'PR',\n        name: 'Paraná',\n      },\n      {\n        code: 'PB',\n        name: 'Paraíba',\n      },\n      {\n        code: 'PE',\n        name: 'Pernambuco',\n      },\n      {\n        code: 'PI',\n        name: 'Piauí',\n      },\n      {\n        code: 'RN',\n        name: 'Rio Grande do Norte',\n      },\n      {\n        code: 'RS',\n        name: 'Rio Grande do Sul',\n      },\n      {\n        code: 'RJ',\n        name: 'Rio de Janeiro',\n      },\n      {\n        code: 'RO',\n        name: 'Rondônia',\n      },\n      {\n        code: 'RR',\n        name: 'Roraima',\n      },\n      {\n        code: 'SC',\n        name: 'Santa Catarina',\n      },\n      {\n        code: 'SP',\n        name: 'São Paulo',\n      },\n      {\n        code: 'SE',\n        name: 'Sergipe',\n      },\n      {\n        code: 'TO',\n        name: 'Tocantins',\n      },\n    ],\n  },\n  {\n    code: 'IO',\n    id: 2411,\n    name: 'British Indian Ocean Territory',\n    states: [],\n  },\n  {\n    code: 'BN',\n    id: 2210,\n    name: 'Brunei Darussalam',\n    states: [\n      {\n        code: 'BX01',\n        name: 'Amo',\n      },\n      {\n        code: 'BX02',\n        name: 'Bandar Seri Begawan',\n      },\n      {\n        code: 'BX03',\n        name: 'Bangar',\n      },\n      {\n        code: 'BX04',\n        name: 'Batu Apoi',\n      },\n      {\n        code: 'BX05',\n        name: 'Berakas',\n      },\n      {\n        code: 'BX06',\n        name: 'Bokok',\n      },\n      {\n        code: 'BX07',\n        name: 'Bukit Sawat',\n      },\n      {\n        code: 'BX08',\n        name: 'Burong Pinggai Ayer',\n      },\n      {\n        code: 'BX09',\n        name: 'Gadong',\n      },\n      {\n        code: 'BX10',\n        name: 'Keriam',\n      },\n      {\n        code: 'BX11',\n        name: 'Kianggeh',\n      },\n      {\n        code: 'BX12',\n        name: 'Kilanas',\n      },\n      {\n        code: 'BX13',\n        name: 'Kiudang',\n      },\n      {\n        code: 'BX14',\n        name: 'Kota Batu',\n      },\n      {\n        code: 'BX15',\n        name: 'Kuala Balai',\n      },\n      {\n        code: 'BX16',\n        name: 'Kuala Belait',\n      },\n      {\n        code: 'BX17',\n        name: 'Labi',\n      },\n      {\n        code: 'BX18',\n        name: 'Labu',\n      },\n      {\n        code: 'BX19',\n        name: 'Lamunin',\n      },\n      {\n        code: 'BX20',\n        name: 'Liang',\n      },\n      {\n        code: 'BX21',\n        name: 'Lumapas',\n      },\n      {\n        code: 'BX22',\n        name: 'Melilas',\n      },\n      {\n        code: 'BX23',\n        name: 'Mentiri',\n      },\n      {\n        code: 'BX24',\n        name: 'Pekan Tutong',\n      },\n      {\n        code: 'BX25',\n        name: 'Pengkalan Batu',\n      },\n      {\n        code: 'BX26',\n        name: 'Peramu',\n      },\n      {\n        code: 'BX27',\n        name: 'Rambai',\n      },\n      {\n        code: 'BX28',\n        name: 'Saba',\n      },\n      {\n        code: 'BX29',\n        name: 'Sengkurong',\n      },\n      {\n        code: 'BX30',\n        name: 'Serasa',\n      },\n      {\n        code: 'BX31',\n        name: 'Seria',\n      },\n      {\n        code: 'BX32',\n        name: 'Sukang',\n      },\n      {\n        code: 'BX33',\n        name: 'Sungai Kebun',\n      },\n      {\n        code: 'BX34',\n        name: 'Sungai Kedayan',\n      },\n      {\n        code: 'BX35',\n        name: 'Tamoi',\n      },\n      {\n        code: 'BX36',\n        name: 'Tanjong Maya',\n      },\n      {\n        code: 'BX37',\n        name: 'Telisai',\n      },\n      {\n        code: 'BX38',\n        name: 'Ukong',\n      },\n    ],\n  },\n  {\n    code: 'BG',\n    id: 2211,\n    name: 'Bulgaria',\n    states: [\n      {\n        code: 'BU38',\n        name: 'Blagoevgrad',\n      },\n      {\n        code: 'BU39',\n        name: 'Burgas',\n      },\n      {\n        code: 'BU40',\n        name: 'Dobrich',\n      },\n      {\n        code: 'BU41',\n        name: 'Gabrovo',\n      },\n      {\n        code: 'BU42',\n        name: 'Grad Sofiya',\n      },\n      {\n        code: 'BU43',\n        name: 'Khaskovo',\n      },\n      {\n        code: 'BU44',\n        name: 'Kurdzhali',\n      },\n      {\n        code: 'BU45',\n        name: 'Kyustendil',\n      },\n      {\n        code: 'BU46',\n        name: 'Lovech',\n      },\n      {\n        code: 'BU47',\n        name: 'Montana',\n      },\n      {\n        code: 'BU48',\n        name: 'Pazardzhik',\n      },\n      {\n        code: 'BU49',\n        name: 'Pernik',\n      },\n      {\n        code: 'BU50',\n        name: 'Pleven',\n      },\n      {\n        code: 'BU51',\n        name: 'Plovdiv',\n      },\n      {\n        code: 'BU52',\n        name: 'Razgrad',\n      },\n      {\n        code: 'BU53',\n        name: 'Ruse',\n      },\n      {\n        code: 'BU54',\n        name: 'Shumen',\n      },\n      {\n        code: 'BU55',\n        name: 'Silistra',\n      },\n      {\n        code: 'BU56',\n        name: 'Sliven',\n      },\n      {\n        code: 'BU57',\n        name: 'Smolyan',\n      },\n      {\n        code: 'BU58',\n        name: 'Sofiya',\n      },\n      {\n        code: 'BU59',\n        name: 'Stara Zagora',\n      },\n      {\n        code: 'BU60',\n        name: 'Turgovishte',\n      },\n      {\n        code: 'BU61',\n        name: 'Varna',\n      },\n      {\n        code: 'BU62',\n        name: 'Veliko Turnovo',\n      },\n      {\n        code: 'BU63',\n        name: 'Vidin',\n      },\n      {\n        code: 'BU64',\n        name: 'Vratsa',\n      },\n      {\n        code: 'BU65',\n        name: 'Yambol',\n      },\n    ],\n  },\n  {\n    code: 'BF',\n    id: 2212,\n    name: 'Burkina Faso',\n    states: [\n      {\n        code: 'UV79',\n        name: 'Boucle du Mouhoun',\n      },\n      {\n        code: 'UV80',\n        name: 'Cascades',\n      },\n      {\n        code: 'UV82',\n        name: 'Centre Est',\n      },\n      {\n        code: 'UV83',\n        name: 'Centre Nord',\n      },\n      {\n        code: 'UV84',\n        name: 'Centre Ouest',\n      },\n      {\n        code: 'UV81',\n        name: 'Centre',\n      },\n      {\n        code: 'UV85',\n        name: 'Centre Sud',\n      },\n      {\n        code: 'UV86',\n        name: 'Est',\n      },\n      {\n        code: 'UV87',\n        name: 'Hauts Bassins',\n      },\n      {\n        code: 'UV88',\n        name: 'Nord',\n      },\n      {\n        code: 'UV89',\n        name: 'Plateau Central',\n      },\n      {\n        code: 'UV90',\n        name: 'Sahel',\n      },\n      {\n        code: 'UV91',\n        name: 'Sud-Ouest',\n      },\n    ],\n  },\n  {\n    code: 'BM',\n    id: 2385,\n    name: 'Burma',\n    states: [\n      {\n        code: 'BM03',\n        name: 'Ayeyarwady',\n      },\n      {\n        code: 'BM16',\n        name: 'Bago',\n      },\n      {\n        code: 'BM02',\n        name: 'Chin',\n      },\n      {\n        code: 'BM04',\n        name: 'Kachin',\n      },\n      {\n        code: 'BM06',\n        name: 'Kayah',\n      },\n      {\n        code: 'BM05',\n        name: 'Kayin',\n      },\n      {\n        code: 'BM15',\n        name: 'Magway',\n      },\n      {\n        code: 'BM08',\n        name: 'Mandalay',\n      },\n      {\n        code: 'BM13',\n        name: 'Mon',\n      },\n      {\n        code: 'BM18',\n        name: 'Naypyidaw',\n      },\n      {\n        code: 'BM01',\n        name: 'Rakhine',\n      },\n      {\n        code: 'BM10',\n        name: 'Sagaing',\n      },\n      {\n        code: 'BM11',\n        name: 'Shan',\n      },\n      {\n        code: 'BM12',\n        name: 'Tanintharyi',\n      },\n      {\n        code: 'BM17',\n        name: 'Yangon',\n      },\n    ],\n  },\n  {\n    code: 'BI',\n    id: 2213,\n    name: 'Burundi',\n    states: [],\n  },\n  {\n    code: 'KH',\n    id: 2214,\n    name: 'Cambodia',\n    states: [\n      {\n        code: 'CB25',\n        name: 'Bântéay Méanchey',\n      },\n      {\n        code: 'CB29',\n        name: 'Batdâmbâng',\n      },\n      {\n        code: 'CB02',\n        name: 'Kâmpóng Cham',\n      },\n      {\n        code: 'CB03',\n        name: 'Kâmpóng Chhnang',\n      },\n      {\n        code: 'CB04',\n        name: 'Kâmpóng Spœ',\n      },\n      {\n        code: 'CB05',\n        name: 'Kâmpóng Thum',\n      },\n      {\n        code: 'CB21',\n        name: 'Kâmpôt',\n      },\n      {\n        code: 'CB07',\n        name: 'Kândal',\n      },\n      {\n        code: 'CB08',\n        name: 'Kaôh Kong',\n      },\n      {\n        code: 'CB09',\n        name: 'Krâchéh',\n      },\n      {\n        code: 'CB26',\n        name: 'Krong Keb',\n      },\n      {\n        code: 'CB30',\n        name: 'Krong Pailin',\n      },\n      {\n        code: 'CB28',\n        name: 'Krong Preah Sihanouk',\n      },\n      {\n        code: 'CB10',\n        name: 'Môndól Kiri',\n      },\n      {\n        code: 'CB27',\n        name: 'Otdâr Méanchey',\n      },\n      {\n        code: 'CB22',\n        name: 'Phnom Penh',\n      },\n      {\n        code: 'CB12',\n        name: 'Pouthisat',\n      },\n      {\n        code: 'CB13',\n        name: 'Preah Vihéar',\n      },\n      {\n        code: 'CB14',\n        name: 'Prey Vêng',\n      },\n      {\n        code: 'CB23',\n        name: 'Rôtânôkiri',\n      },\n      {\n        code: 'CB24',\n        name: 'Siemréab',\n      },\n      {\n        code: 'CB17',\n        name: 'Stœ?ng Trêng',\n      },\n      {\n        code: 'CB18',\n        name: 'Svay Rieng',\n      },\n      {\n        code: 'CB19',\n        name: 'Takêv',\n      },\n      {\n        code: 'CB31',\n        name: 'Tbong Khmum',\n      },\n    ],\n  },\n  {\n    code: 'CM',\n    id: 2215,\n    name: 'Cameroon',\n    states: [\n      {\n        code: 'CM10',\n        name: 'Adamaoua',\n      },\n      {\n        code: 'CM11',\n        name: 'Centre',\n      },\n      {\n        code: 'CM04',\n        name: 'Est',\n      },\n      {\n        code: 'CM12',\n        name: 'Extrême-Nord',\n      },\n      {\n        code: 'CM05',\n        name: 'Littoral',\n      },\n      {\n        code: 'CM07',\n        name: 'Nord-Ouest',\n      },\n      {\n        code: 'CM13',\n        name: 'Nord',\n      },\n      {\n        code: 'CM08',\n        name: 'Ouest',\n      },\n      {\n        code: 'CM09',\n        name: 'Sud-Ouest',\n      },\n      {\n        code: 'CM14',\n        name: 'Sud',\n      },\n    ],\n  },\n  {\n    code: 'CA',\n    id: 2216,\n    name: 'Canada',\n    states: [\n      {\n        code: 'AB',\n        name: 'Alberta',\n      },\n      {\n        code: 'BC',\n        name: 'British Columbia',\n      },\n      {\n        code: 'MB',\n        name: 'Manitoba',\n      },\n      {\n        code: 'NB',\n        name: 'New Brunswick',\n      },\n      {\n        code: 'NL',\n        name: 'Newfoundland and Labrador',\n      },\n      {\n        code: 'NT',\n        name: 'Northwest Territories',\n      },\n      {\n        code: 'NS',\n        name: 'Nova Scotia',\n      },\n      {\n        code: 'NU',\n        name: 'Nunavut',\n      },\n      {\n        code: 'ON',\n        name: 'Ontario',\n      },\n      {\n        code: 'PE',\n        name: 'Prince Edward Island',\n      },\n      {\n        code: 'QC',\n        name: 'Quebec',\n      },\n      {\n        code: 'SK',\n        name: 'Saskatchewan',\n      },\n      {\n        code: 'YT',\n        name: 'Yukon',\n      },\n    ],\n  },\n  {\n    code: 'CV',\n    id: 2217,\n    name: 'Cape Verde',\n    states: [],\n  },\n  {\n    code: 'KY',\n    id: 2379,\n    name: 'Cayman Islands',\n    states: [\n      {\n        code: 'KY.BT',\n        name: 'Bodden Town',\n      },\n      {\n        code: 'KY.EE',\n        name: 'East End',\n      },\n      {\n        code: 'KY.GT',\n        name: 'George Town',\n      },\n      {\n        code: 'KY.NS',\n        name: 'North Side',\n      },\n      {\n        code: 'KY.SI',\n        name: 'Sister Islands',\n      },\n      {\n        code: 'KY.WB',\n        name: 'West Bay',\n      },\n    ],\n  },\n  {\n    code: 'CF',\n    id: 2218,\n    name: 'Central African Republic',\n    states: [\n      {\n        code: 'CT01',\n        name: 'Bamingui-Bangoran',\n      },\n      {\n        code: 'CT18',\n        name: 'Bangui',\n      },\n      {\n        code: 'CT02',\n        name: 'Basse-Kotto',\n      },\n      {\n        code: 'CT05',\n        name: 'Haut-Mbomou',\n      },\n      {\n        code: 'CT03',\n        name: 'Haute-Kotto',\n      },\n      {\n        code: 'CT06',\n        name: 'Kémo',\n      },\n      {\n        code: 'CT07',\n        name: 'Lobaye',\n      },\n      {\n        code: 'CT04',\n        name: 'Mambéré-Kadéï',\n      },\n      {\n        code: 'CT08',\n        name: 'Mbomou',\n      },\n      {\n        code: 'CT15',\n        name: 'Nana-Grébizi',\n      },\n      {\n        code: 'CT09',\n        name: 'Nana-Mambéré',\n      },\n      {\n        code: 'CT17',\n        name: \"Ombella-M'Poko\",\n      },\n      {\n        code: 'CT11',\n        name: 'Ouaka',\n      },\n      {\n        code: 'CT12',\n        name: 'Ouham',\n      },\n      {\n        code: 'CT13',\n        name: 'Ouham-Pendé',\n      },\n      {\n        code: 'CT16',\n        name: 'Sangha-Mbaéré',\n      },\n      {\n        code: 'CT14',\n        name: 'Vakaga',\n      },\n    ],\n  },\n  {\n    code: 'TD',\n    id: 2219,\n    name: 'Chad',\n    states: [\n      {\n        code: 'CD22',\n        name: 'Barh el Ghazel',\n      },\n      {\n        code: 'CD01',\n        name: 'Batha',\n      },\n      {\n        code: 'CD23',\n        name: 'Borkou',\n      },\n      {\n        code: 'CD15',\n        name: 'Chari-Baguirmi',\n      },\n      {\n        code: 'CD27',\n        name: 'Ennedi Est',\n      },\n      {\n        code: 'CD28',\n        name: 'Ennedi Ouest',\n      },\n      {\n        code: 'CD05',\n        name: 'Guéra',\n      },\n      {\n        code: 'CD18',\n        name: 'Hadjer-Lamis',\n      },\n      {\n        code: 'CD06',\n        name: 'Kanem',\n      },\n      {\n        code: 'CD07',\n        name: 'Lac',\n      },\n      {\n        code: 'CD08',\n        name: 'Logone Occidental',\n      },\n      {\n        code: 'CD09',\n        name: 'Logone Oriental',\n      },\n      {\n        code: 'CD19',\n        name: 'Mandoul',\n      },\n      {\n        code: 'CD16',\n        name: 'Mayo-Kebbi Est',\n      },\n      {\n        code: 'CD20',\n        name: 'Mayo-Kebbi Ouest',\n      },\n      {\n        code: 'CD17',\n        name: 'Moyen-Chari',\n      },\n      {\n        code: 'CD12',\n        name: 'Ouaddaï',\n      },\n      {\n        code: 'CD13',\n        name: 'Salamat',\n      },\n      {\n        code: 'CD25',\n        name: 'Sila',\n      },\n      {\n        code: 'CD14',\n        name: 'Tandjilé',\n      },\n      {\n        code: 'CD26',\n        name: 'Tibesti',\n      },\n      {\n        code: 'CD21',\n        name: \"Ville de N'Djamena\",\n      },\n      {\n        code: 'CD02',\n        name: 'Wadi Fira',\n      },\n    ],\n  },\n  {\n    code: 'CH99',\n    id: 2386,\n    name: 'Channel Islands',\n    states: [],\n  },\n  {\n    code: 'CL',\n    id: 2220,\n    name: 'Chile',\n    states: [\n      {\n        code: 'CL.AI',\n        name: 'Aisén del General Carlos Ibáñez del Campo',\n      },\n      {\n        code: 'CL.AN',\n        name: 'Antofagasta',\n      },\n      {\n        code: 'CL.AR',\n        name: 'Araucanía',\n      },\n      {\n        code: 'CL.AP',\n        name: 'Arica and Parinacota',\n      },\n      {\n        code: 'CL.AT',\n        name: 'Atacama',\n      },\n      {\n        code: 'CL.BI',\n        name: 'Bío-Bío',\n      },\n      {\n        code: 'CL.CO',\n        name: 'Coquimbo',\n      },\n      {\n        code: 'CL.LI',\n        name: \"Libertador General Bernardo O'Higgins\",\n      },\n      {\n        code: 'CL.LG',\n        name: 'Los Lagos',\n      },\n      {\n        code: 'CL.LR',\n        name: 'Los Ríos',\n      },\n      {\n        code: 'CL.MA',\n        name: 'Magallanes y Antártica Chilena',\n      },\n      {\n        code: 'CL.ML',\n        name: 'Maule',\n      },\n      {\n        code: 'CL.RM',\n        name: 'Región Metropolitana de Santiago',\n      },\n      {\n        code: 'CL.TP',\n        name: 'Tarapacá',\n      },\n      {\n        code: 'CL.VS',\n        name: 'Valparaíso',\n      },\n    ],\n  },\n  {\n    code: 'CN',\n    id: 2221,\n    name: 'China',\n    states: [\n      {\n        code: 'CH01',\n        name: 'Anhui',\n      },\n      {\n        code: 'CH22',\n        name: 'Beijing',\n      },\n      {\n        code: 'CH33',\n        name: 'Chongqing',\n      },\n      {\n        code: 'CH07',\n        name: 'Fujian',\n      },\n      {\n        code: 'CH15',\n        name: 'Gansu',\n      },\n      {\n        code: 'CH17',\n        name: 'Guangdon',\n      },\n      {\n        code: 'CH30',\n        name: 'Guangdong',\n      },\n      {\n        code: 'CH16',\n        name: 'Guangxi',\n      },\n      {\n        code: 'CH18',\n        name: 'Guizhou',\n      },\n      {\n        code: 'CH31',\n        name: 'Hainan',\n      },\n      {\n        code: 'CH10',\n        name: 'Hebei',\n      },\n      {\n        code: 'CH08',\n        name: 'Heilongjiang',\n      },\n      {\n        code: 'CH09',\n        name: 'Henan',\n      },\n      {\n        code: 'CH34',\n        name: 'Hong Kong',\n      },\n      {\n        code: 'CH12',\n        name: 'Hubei',\n      },\n      {\n        code: 'CH11',\n        name: 'Hunan',\n      },\n      {\n        code: 'CH04',\n        name: 'Jiangsu',\n      },\n      {\n        code: 'CH03',\n        name: 'Jiangxi',\n      },\n      {\n        code: 'CH05',\n        name: 'Jilin',\n      },\n      {\n        code: 'CH19',\n        name: 'Liaoning',\n      },\n      {\n        code: 'CH20',\n        name: 'Nei Mongol',\n      },\n      {\n        code: 'CH21',\n        name: 'Ningxia',\n      },\n      {\n        code: 'CH06',\n        name: 'Qinghai',\n      },\n      {\n        code: 'CH26',\n        name: 'Shaanxi',\n      },\n      {\n        code: 'CH25',\n        name: 'Shandong',\n      },\n      {\n        code: 'CH23',\n        name: 'Shanghai',\n      },\n      {\n        code: 'CH24',\n        name: 'Shanxi',\n      },\n      {\n        code: 'CH32',\n        name: 'Sichuan',\n      },\n      {\n        code: 'CH27',\n        name: 'Sichuan',\n      },\n      {\n        code: 'CH28',\n        name: 'Tianjin',\n      },\n      {\n        code: 'CH13',\n        name: 'Xinjiang',\n      },\n      {\n        code: 'CH14',\n        name: 'Xizang',\n      },\n      {\n        code: 'CH29',\n        name: 'Yunnan',\n      },\n      {\n        code: 'CH02',\n        name: 'Zhejiang',\n      },\n    ],\n  },\n  {\n    code: 'CX',\n    id: 2412,\n    name: 'Christmas Island',\n    states: [],\n  },\n  {\n    code: 'CC',\n    id: 2413,\n    name: 'Cocos (Keeling) Islands',\n    states: [],\n  },\n  {\n    code: 'CO',\n    id: 2222,\n    name: 'Colombia',\n    states: [\n      {\n        code: 'CO01',\n        name: 'Amazonas',\n      },\n      {\n        code: 'CO02',\n        name: 'Antioquia',\n      },\n      {\n        code: 'CO03',\n        name: 'Arauca',\n      },\n      {\n        code: 'CO04',\n        name: 'Atlántico',\n      },\n      {\n        code: 'CO35',\n        name: 'Bolívar',\n      },\n      {\n        code: 'CO36',\n        name: 'Boyacá',\n      },\n      {\n        code: 'CO37',\n        name: 'Caldas',\n      },\n      {\n        code: 'CO08',\n        name: 'Caquetá',\n      },\n      {\n        code: 'CO32',\n        name: 'Casanare',\n      },\n      {\n        code: 'CO09',\n        name: 'Cauca',\n      },\n      {\n        code: 'CO10',\n        name: 'Cesar',\n      },\n      {\n        code: 'CO11',\n        name: 'Chocó',\n      },\n      {\n        code: 'CO12',\n        name: 'Córdoba',\n      },\n      {\n        code: 'CO33',\n        name: 'Cundinamarca',\n      },\n      {\n        code: 'CO34',\n        name: 'Distrito Capital',\n      },\n      {\n        code: 'CO15',\n        name: 'Guainía',\n      },\n      {\n        code: 'CO14',\n        name: 'Guaviare',\n      },\n      {\n        code: 'CO16',\n        name: 'Huila',\n      },\n      {\n        code: 'CO17',\n        name: 'La Guajira',\n      },\n      {\n        code: 'CO38',\n        name: 'Magdalena',\n      },\n      {\n        code: 'CO19',\n        name: 'Meta',\n      },\n      {\n        code: 'CO20',\n        name: 'Nariño',\n      },\n      {\n        code: 'CO21',\n        name: 'Norte de Santander',\n      },\n      {\n        code: 'CO22',\n        name: 'Putumayo',\n      },\n      {\n        code: 'CO23',\n        name: 'Quindío',\n      },\n      {\n        code: 'CO24',\n        name: 'Risaralda',\n      },\n      {\n        code: 'CO25',\n        name: 'San Andrés y Providencia',\n      },\n      {\n        code: 'CO26',\n        name: 'Santander',\n      },\n      {\n        code: 'CO27',\n        name: 'Sucre',\n      },\n      {\n        code: 'CO28',\n        name: 'Tolima',\n      },\n      {\n        code: 'CO29',\n        name: 'Valle del Cauca',\n      },\n      {\n        code: 'CO30',\n        name: 'Vaupés',\n      },\n      {\n        code: 'CO31',\n        name: 'Vichada',\n      },\n    ],\n  },\n  {\n    code: 'KM',\n    id: 2223,\n    name: 'Comoros',\n    states: [],\n  },\n  {\n    code: 'ZR',\n    id: 2368,\n    name: 'Congo; Democratic Republic of',\n    states: [\n      {\n        code: 'CD.BU',\n        name: 'Bas-Uélé',\n      },\n      {\n        code: 'CD.HK',\n        name: 'Haut-Katanga',\n      },\n      {\n        code: 'CD.HL',\n        name: 'Haut-Lomami',\n      },\n      {\n        code: 'CD.HU',\n        name: 'Haut-Uélé',\n      },\n      {\n        code: 'CD.IT',\n        name: 'Ituri',\n      },\n      {\n        code: 'CD.KS',\n        name: 'Kasaï',\n      },\n      {\n        code: 'CD.LL',\n        name: 'Kasaï-Central',\n      },\n      {\n        code: 'CD.KO',\n        name: 'Kasaï Oriental',\n      },\n      {\n        code: 'CD.KN',\n        name: 'Kinshasa',\n      },\n      {\n        code: 'CD.BC',\n        name: 'Kongo Central',\n      },\n      {\n        code: 'CD.KG',\n        name: 'Kwango',\n      },\n      {\n        code: 'CD.KU',\n        name: 'Kwilu',\n      },\n      {\n        code: 'CD.LM',\n        name: 'Lomami',\n      },\n      {\n        code: 'CD.LB',\n        name: 'Lualaba',\n      },\n      {\n        code: 'CD.MA',\n        name: 'Mai-Ndombe',\n      },\n      {\n        code: 'CD.MN',\n        name: 'Maniema',\n      },\n      {\n        code: 'CD.MO',\n        name: 'Mongala',\n      },\n      {\n        code: 'CD.NK',\n        name: 'Nord-Kivu',\n      },\n      {\n        code: 'CD.NU',\n        name: 'Nord-Ubangi',\n      },\n      {\n        code: 'CD.SN',\n        name: 'Sankuru',\n      },\n      {\n        code: 'CD.SK',\n        name: 'Sud-Kivu',\n      },\n      {\n        code: 'CD.SU',\n        name: 'Sud-Ubangi',\n      },\n      {\n        code: 'CD.TG',\n        name: 'Tanganyika',\n      },\n      {\n        code: 'CD.TO',\n        name: 'Tshopo',\n      },\n      {\n        code: 'CD.TP',\n        name: 'Tshuapa',\n      },\n      {\n        code: 'CD.ET',\n        name: 'Équateur',\n      },\n    ],\n  },\n  {\n    code: 'CG',\n    id: 2383,\n    name: 'Congo; Republic of',\n    states: [],\n  },\n  {\n    code: 'CK',\n    id: 2414,\n    name: 'Cook Islands',\n    states: [],\n  },\n  {\n    code: 'CR',\n    id: 2226,\n    name: 'Costa Rica',\n    states: [\n      {\n        code: 'CS01',\n        name: 'Alajuela',\n      },\n      {\n        code: 'CS02',\n        name: 'Cartago',\n      },\n      {\n        code: 'CS03',\n        name: 'Guanacaste',\n      },\n      {\n        code: 'CS04',\n        name: 'Heredia',\n      },\n      {\n        code: 'CS06',\n        name: 'Limón',\n      },\n      {\n        code: 'CS07',\n        name: 'Puntarenas',\n      },\n      {\n        code: 'CS08',\n        name: 'San José',\n      },\n    ],\n  },\n  {\n    code: 'CI',\n    id: 2227,\n    name: \"Cote D'Ivoire\",\n    states: [\n      {\n        code: 'IV93',\n        name: 'Abidjan',\n      },\n      {\n        code: 'IV76',\n        name: 'Bas-Sassandra',\n      },\n      {\n        code: 'IV94',\n        name: 'Comoé',\n      },\n      {\n        code: 'IV77',\n        name: 'Denguélé',\n      },\n      {\n        code: 'IV95',\n        name: 'Gôh-Djiboua',\n      },\n      {\n        code: 'IV81',\n        name: 'Lacs',\n      },\n      {\n        code: 'IV82',\n        name: 'Lagunes',\n      },\n      {\n        code: 'IV78',\n        name: 'Montagnes',\n      },\n      {\n        code: 'IV96',\n        name: 'Sassandra-Marahoué',\n      },\n      {\n        code: 'IV87',\n        name: 'Savanes',\n      },\n      {\n        code: 'IV90',\n        name: 'Vallée du Bandama',\n      },\n      {\n        code: 'IV97',\n        name: 'Woroba',\n      },\n      {\n        code: 'IV98',\n        name: 'Yamoussoukro',\n      },\n      {\n        code: 'IV92',\n        name: 'Zanzan',\n      },\n    ],\n  },\n  {\n    code: 'HR',\n    id: 2228,\n    name: 'Croatia',\n    states: [\n      {\n        code: 'HR07',\n        name: 'Bjelovarsko-bilogorska',\n      },\n      {\n        code: 'HR12',\n        name: 'Brodsko-posavska',\n      },\n      {\n        code: 'HR19',\n        name: 'Dubrovacko-neretvanska',\n      },\n      {\n        code: 'HR21',\n        name: 'Grad Zagreb',\n      },\n      {\n        code: 'HR-18',\n        name: 'Istarska',\n      },\n      {\n        code: 'HR04',\n        name: 'Karlovacka',\n      },\n      {\n        code: 'HR06',\n        name: 'Koprivnicko-križevacka',\n      },\n      {\n        code: 'HR02',\n        name: 'Krapinsko-zagorska',\n      },\n      {\n        code: 'HR09',\n        name: 'Licko-senjska',\n      },\n      {\n        code: 'HR20',\n        name: 'Medimurska',\n      },\n      {\n        code: 'HR14',\n        name: 'Osjecko-baranjska',\n      },\n      {\n        code: 'HR11',\n        name: 'Požeško-slavonska',\n      },\n      {\n        code: 'HR08',\n        name: 'Primorsko-goranska',\n      },\n      {\n        code: 'HR15',\n        name: 'Šibensko-kninska',\n      },\n      {\n        code: 'HR03',\n        name: 'Sisacko-moslavacka',\n      },\n      {\n        code: 'HR17',\n        name: 'Splitsko-dalmatinska',\n      },\n      {\n        code: 'HR05',\n        name: 'Varaždinska',\n      },\n      {\n        code: 'HR10',\n        name: 'Viroviticko-podravska',\n      },\n      {\n        code: 'HR16',\n        name: 'Vukovarsko-srijemska',\n      },\n      {\n        code: 'HR13',\n        name: 'Zadarska',\n      },\n      {\n        code: 'HR01',\n        name: 'Zagrebacka',\n      },\n    ],\n  },\n  {\n    code: 'CU',\n    id: 2229,\n    name: 'Cuba',\n    states: [\n      {\n        code: 'CU17',\n        name: 'Artemisa',\n      },\n      {\n        code: 'CU05',\n        name: 'Camagüey',\n      },\n      {\n        code: 'CU07',\n        name: 'Ciego de Ávila',\n      },\n      {\n        code: 'CU08',\n        name: 'Cienfuegos',\n      },\n      {\n        code: 'CU09',\n        name: 'Granma',\n      },\n      {\n        code: 'CU10',\n        name: 'Guantánamo',\n      },\n      {\n        code: 'CU12',\n        name: 'Holguín',\n      },\n      {\n        code: 'CU04',\n        name: 'Isla de la Juventud',\n      },\n      {\n        code: 'CU02',\n        name: 'La Habana',\n      },\n      {\n        code: 'CU13',\n        name: 'Las Tunas',\n      },\n      {\n        code: 'CU03',\n        name: 'Matanzas',\n      },\n      {\n        code: 'CU18',\n        name: 'Mayabeque',\n      },\n      {\n        code: 'CU01',\n        name: 'Pinar del Río',\n      },\n      {\n        code: 'CU14',\n        name: 'Sancti Spíritus',\n      },\n      {\n        code: 'CU15',\n        name: 'Santiago de Cuba',\n      },\n      {\n        code: 'CU16',\n        name: 'Villa Clara',\n      },\n    ],\n  },\n  {\n    code: 'C999',\n    id: 2387,\n    name: 'Curacao',\n    states: [\n      {\n        code: 'CW.CU',\n        name: 'Curacao',\n      },\n    ],\n  },\n  {\n    code: 'CY',\n    id: 2230,\n    name: 'Cyprus',\n    states: [\n      {\n        code: 'CY01',\n        name: 'Famagusta',\n      },\n      {\n        code: 'CY02',\n        name: 'Kyrenia',\n      },\n      {\n        code: 'CY03',\n        name: 'Larnaca',\n      },\n      {\n        code: 'CY05',\n        name: 'Limassol',\n      },\n      {\n        code: 'CY04',\n        name: 'Nicosia',\n      },\n      {\n        code: 'CY06',\n        name: 'Paphos',\n      },\n    ],\n  },\n  {\n    code: 'CZ',\n    id: 2231,\n    name: 'Czech Republic',\n    states: [\n      {\n        code: 'JC',\n        name: 'Jihoceský kraj',\n      },\n      {\n        code: 'JM',\n        name: 'Jihomoravský kraj',\n      },\n      {\n        code: 'KA',\n        name: 'Karlovarský kraj',\n      },\n      {\n        code: 'KR',\n        name: 'Královéhradecký kraj',\n      },\n      {\n        code: 'LI',\n        name: 'Liberecký kraj',\n      },\n      {\n        code: 'MO',\n        name: 'Moravskoslezský kraj',\n      },\n      {\n        code: 'OL',\n        name: 'Olomoucký kraj',\n      },\n      {\n        code: 'PA',\n        name: 'Pardubický kraj',\n      },\n      {\n        code: 'PL',\n        name: 'Plzenský kraj',\n      },\n      {\n        code: 'PR',\n        name: 'Praha, hlavní mesto',\n      },\n      {\n        code: 'ST',\n        name: 'Stredoceský kraj',\n      },\n      {\n        code: 'VY',\n        name: 'Vysocina',\n      },\n      {\n        code: 'ZL',\n        name: 'Zlínský kraj',\n      },\n      {\n        code: 'US',\n        name: 'Ústecký kraj',\n      },\n    ],\n  },\n  {\n    code: 'DK',\n    id: 2232,\n    name: 'Denmark',\n    states: [\n      {\n        code: 'DA01',\n        name: 'Arhus County',\n      },\n      {\n        code: 'DA02',\n        name: 'Bornholm Regional Municipality',\n      },\n      {\n        code: 'DA17',\n        name: 'Capital Region',\n      },\n      {\n        code: 'DA18',\n        name: 'Central Jutland Region',\n      },\n      {\n        code: 'DA16',\n        name: 'Frederiksberg municipal',\n      },\n      {\n        code: 'DA03',\n        name: 'Frederiksborg County',\n      },\n      {\n        code: 'DA04',\n        name: 'Fyn County',\n      },\n      {\n        code: 'DA06',\n        name: 'Kobenhavn County',\n      },\n      {\n        code: 'DA05',\n        name: 'Kobenhavn municipal',\n      },\n      {\n        code: 'DA07',\n        name: 'Nordjylland County',\n      },\n      {\n        code: 'DA19',\n        name: 'North Jutland Region',\n      },\n      {\n        code: 'DA08',\n        name: 'Ribe County',\n      },\n      {\n        code: 'DA09',\n        name: 'Ringkobing County',\n      },\n      {\n        code: 'DA10',\n        name: 'Roskilde County',\n      },\n      {\n        code: 'DA11',\n        name: 'Sonderjylland County',\n      },\n      {\n        code: 'DA21',\n        name: 'South Denmark Region',\n      },\n      {\n        code: 'DA12',\n        name: 'Storstrom County',\n      },\n      {\n        code: 'DA13',\n        name: 'Vejle County',\n      },\n      {\n        code: 'DA14',\n        name: 'Vestsjaelland County',\n      },\n      {\n        code: 'DA15',\n        name: 'Viborg County',\n      },\n      {\n        code: 'DA20',\n        name: 'Zealand Region',\n      },\n    ],\n  },\n  {\n    code: 'DJ',\n    id: 2233,\n    name: 'Djibouti',\n    states: [],\n  },\n  {\n    code: 'DM',\n    id: 2234,\n    name: 'Dominica',\n    states: [],\n  },\n  {\n    code: 'DO',\n    id: 2235,\n    name: 'Dominican Republic',\n    states: [\n      {\n        code: 'DR01',\n        name: 'Azua',\n      },\n      {\n        code: 'DR02',\n        name: 'Bahoruco',\n      },\n      {\n        code: 'DR03',\n        name: 'Barahona',\n      },\n      {\n        code: 'DR04',\n        name: 'Dajabón',\n      },\n      {\n        code: 'DR34',\n        name: 'Distrito Nacional',\n      },\n      {\n        code: 'DR06',\n        name: 'Duarte',\n      },\n      {\n        code: 'DR28',\n        name: 'El Seibo',\n      },\n      {\n        code: 'DR11',\n        name: 'Elías Piña',\n      },\n      {\n        code: 'DR08',\n        name: 'Espaillat',\n      },\n      {\n        code: 'DR29',\n        name: 'Hato Mayor',\n      },\n      {\n        code: 'DR19',\n        name: 'Hermanas Mirabal',\n      },\n      {\n        code: 'DR09',\n        name: 'Independencia',\n      },\n      {\n        code: 'DR10',\n        name: 'La Altagracia',\n      },\n      {\n        code: 'DR12',\n        name: 'La Romana',\n      },\n      {\n        code: 'DR30',\n        name: 'La Vega',\n      },\n      {\n        code: 'DR14',\n        name: 'María Trinidad Sánchez',\n      },\n      {\n        code: 'DR31',\n        name: 'Monseñor Nouel',\n      },\n      {\n        code: 'DR15',\n        name: 'Monte Cristi',\n      },\n      {\n        code: 'DR32',\n        name: 'Monte Plata',\n      },\n      {\n        code: 'DR16',\n        name: 'Pedernales',\n      },\n      {\n        code: 'DR35',\n        name: 'Peravia',\n      },\n      {\n        code: 'DR18',\n        name: 'Puerto Plata',\n      },\n      {\n        code: 'DR20',\n        name: 'Samaná',\n      },\n      {\n        code: 'DR33',\n        name: 'San Cristóbal',\n      },\n      {\n        code: 'DR36',\n        name: 'San José de Ocoa',\n      },\n      {\n        code: 'DR23',\n        name: 'San Juan',\n      },\n      {\n        code: 'DR24',\n        name: 'San Pedro de Macorís',\n      },\n      {\n        code: 'DR21',\n        name: 'Sánchez Ramírez',\n      },\n      {\n        code: 'DR25',\n        name: 'Santiago',\n      },\n      {\n        code: 'DR26',\n        name: 'Santiago Rodríguez',\n      },\n      {\n        code: 'DR37',\n        name: 'Santo Domingo',\n      },\n      {\n        code: 'DR27',\n        name: 'Valverde',\n      },\n    ],\n  },\n  {\n    code: 'EC',\n    id: 2236,\n    name: 'Ecuador',\n    states: [\n      {\n        code: 'EC02',\n        name: 'Azuay',\n      },\n      {\n        code: 'EC02',\n        name: 'Azuay',\n      },\n      {\n        code: 'EC03',\n        name: 'Bolívar',\n      },\n      {\n        code: 'EC04',\n        name: 'Cañar',\n      },\n      {\n        code: 'EC05',\n        name: 'Carchi',\n      },\n      {\n        code: 'EC06',\n        name: 'Chimborazo',\n      },\n      {\n        code: 'EC07',\n        name: 'Cotopaxi',\n      },\n      {\n        code: 'EC08',\n        name: 'El Oro',\n      },\n      {\n        code: 'EC09',\n        name: 'Esmeraldas',\n      },\n      {\n        code: 'EC01',\n        name: 'Galápagos',\n      },\n      {\n        code: 'EC10',\n        name: 'Guayas',\n      },\n      {\n        code: 'EC11',\n        name: 'Imbabura',\n      },\n      {\n        code: 'EC12',\n        name: 'Loja',\n      },\n      {\n        code: 'EC13',\n        name: 'Los Ríos',\n      },\n      {\n        code: 'EC14',\n        name: 'Manabí',\n      },\n      {\n        code: 'EC15',\n        name: 'Morona-Santiago',\n      },\n      {\n        code: 'EC23',\n        name: 'Napo',\n      },\n      {\n        code: 'EC24',\n        name: 'Orellana',\n      },\n      {\n        code: 'EC17',\n        name: 'Pastaza',\n      },\n      {\n        code: 'EC18',\n        name: 'Pichincha',\n      },\n      {\n        code: 'EC25',\n        name: 'Santa Elena',\n      },\n      {\n        code: 'EC26',\n        name: 'Santo Domingo de los Tsáchilas',\n      },\n      {\n        code: 'EC22',\n        name: 'Sucumbíos',\n      },\n      {\n        code: 'EC19',\n        name: 'Tungurahua',\n      },\n      {\n        code: 'EC20',\n        name: 'Zamora-Chinchipe',\n      },\n    ],\n  },\n  {\n    code: 'EG',\n    id: 2237,\n    name: 'Egypt',\n    states: [\n      {\n        code: 'EG01',\n        name: 'Ad Daqahliyah',\n      },\n      {\n        code: 'EG02',\n        name: 'Al Bahr al Ahmar',\n      },\n      {\n        code: 'EG03',\n        name: 'Al Buhayrah',\n      },\n      {\n        code: 'EG04',\n        name: 'Al Fayyum',\n      },\n      {\n        code: 'EG05',\n        name: 'Al Gharbiyah',\n      },\n      {\n        code: 'EG06',\n        name: 'Al Iskandariyah',\n      },\n      {\n        code: 'EG07',\n        name: 'Al Isma`iliyah',\n      },\n      {\n        code: 'EG08',\n        name: 'Al Jizah',\n      },\n      {\n        code: 'EG09',\n        name: 'Al Minufiyah',\n      },\n      {\n        code: 'EG10',\n        name: 'Al Minya',\n      },\n      {\n        code: 'EG11',\n        name: 'Al Qahirah',\n      },\n      {\n        code: 'EG12',\n        name: 'Al Qalyubiyah',\n      },\n      {\n        code: 'EG28',\n        name: 'Al Uqsur',\n      },\n      {\n        code: 'EG13',\n        name: 'Al Wadi al Jadid',\n      },\n      {\n        code: 'EG15',\n        name: 'As Suways',\n      },\n      {\n        code: 'EG14',\n        name: 'Ash Sharqiyah',\n      },\n      {\n        code: 'EG16',\n        name: 'Aswan',\n      },\n      {\n        code: 'EG17',\n        name: 'Asyut',\n      },\n      {\n        code: 'EG18',\n        name: 'Bani Suwayf',\n      },\n      {\n        code: 'EG19',\n        name: 'Bur Sa`id',\n      },\n      {\n        code: 'EG20',\n        name: 'Dumyat',\n      },\n      {\n        code: 'EG26',\n        name: 'Janub Sina',\n      },\n      {\n        code: 'EG21',\n        name: 'Kafr ash Shaykh',\n      },\n      {\n        code: 'EG22',\n        name: 'Matruh',\n      },\n      {\n        code: 'EG23',\n        name: 'Qina',\n      },\n      {\n        code: 'EG27',\n        name: 'Shamal Sina',\n      },\n      {\n        code: 'EG24',\n        name: 'Suhaj',\n      },\n    ],\n  },\n  {\n    code: 'SV',\n    id: 2238,\n    name: 'El Salvador',\n    states: [\n      {\n        code: 'ES01',\n        name: 'Ahuachapán',\n      },\n      {\n        code: 'ES02',\n        name: 'Cabañas',\n      },\n      {\n        code: 'ES03',\n        name: 'Chalatenango',\n      },\n      {\n        code: 'ES04',\n        name: 'Cuscatlán',\n      },\n      {\n        code: 'ES05',\n        name: 'La Libertad',\n      },\n      {\n        code: 'ES06',\n        name: 'La Paz',\n      },\n      {\n        code: 'ES07',\n        name: 'La Unión',\n      },\n      {\n        code: 'ES08',\n        name: 'Morazán',\n      },\n      {\n        code: 'ES09',\n        name: 'San Miguel',\n      },\n      {\n        code: 'ES10',\n        name: 'San Salvador',\n      },\n      {\n        code: 'ES12',\n        name: 'San Vicente',\n      },\n      {\n        code: 'ES11',\n        name: 'Santa Ana',\n      },\n      {\n        code: 'ES13',\n        name: 'Sonsonate',\n      },\n      {\n        code: 'ES14',\n        name: 'Usulután',\n      },\n    ],\n  },\n  {\n    code: 'GQ',\n    id: 2239,\n    name: 'Equatorial Guinea',\n    states: [],\n  },\n  {\n    code: 'ER',\n    id: 2240,\n    name: 'Eritrea',\n    states: [],\n  },\n  {\n    code: 'EE',\n    id: 2241,\n    name: 'Estonia',\n    states: [\n      {\n        code: 'EN01',\n        name: 'Harju',\n      },\n      {\n        code: 'EN02',\n        name: 'Hiiu',\n      },\n      {\n        code: 'EN03',\n        name: 'Ida-Viru',\n      },\n      {\n        code: 'EN04',\n        name: 'Järva',\n      },\n      {\n        code: 'EN05',\n        name: 'Jõgeva',\n      },\n      {\n        code: 'EN07',\n        name: 'Lääne',\n      },\n      {\n        code: 'EN08',\n        name: 'Lääne-Viru',\n      },\n      {\n        code: 'EN11',\n        name: 'Pärnu',\n      },\n      {\n        code: 'EN12',\n        name: 'Põlva',\n      },\n      {\n        code: 'EN13',\n        name: 'Rapla',\n      },\n      {\n        code: 'EN14',\n        name: 'Saare',\n      },\n      {\n        code: 'EN18',\n        name: 'Tartu',\n      },\n      {\n        code: 'EN19',\n        name: 'Valga',\n      },\n      {\n        code: 'EN20',\n        name: 'Viljandi',\n      },\n      {\n        code: 'EN21',\n        name: 'Võru',\n      },\n    ],\n  },\n  {\n    code: 'ET',\n    id: 2242,\n    name: 'Ethiopia',\n    states: [\n      {\n        code: 'ET44',\n        name: 'Addis Ababa',\n      },\n      {\n        code: 'ET45',\n        name: 'Afar',\n      },\n      {\n        code: 'ET46',\n        name: 'Amhara',\n      },\n      {\n        code: 'ET47',\n        name: 'Benshangul-Gumaz',\n      },\n      {\n        code: 'ET48',\n        name: 'Dire Dawa',\n      },\n      {\n        code: 'ET49',\n        name: 'Gambela Peoples',\n      },\n      {\n        code: 'ET50',\n        name: 'Harari People',\n      },\n      {\n        code: 'ET51',\n        name: 'Oromia',\n      },\n      {\n        code: 'ET52',\n        name: 'Somali',\n      },\n      {\n        code: 'ET54',\n        name: 'Southern Nations, Nationalities and Peoples',\n      },\n      {\n        code: 'ET53',\n        name: 'Tigray',\n      },\n    ],\n  },\n  {\n    code: 'FK',\n    id: 2415,\n    name: 'Falkland Islands (Malvinas)',\n    states: [],\n  },\n  {\n    code: 'FI99',\n    id: 2388,\n    name: 'Faroe Islands',\n    states: [],\n  },\n  {\n    code: 'FJ',\n    id: 2243,\n    name: 'Fiji',\n    states: [],\n  },\n  {\n    code: 'FI',\n    id: 2244,\n    name: 'Finland',\n    states: [\n      {\n        code: 'FI-AL',\n        name: 'Ahvenanmaan lääni',\n      },\n      {\n        code: 'AX',\n        name: 'Ahvenanmaa',\n      },\n      {\n        code: 'FI.SK',\n        name: 'Etelä-Karjala',\n      },\n      {\n        code: 'FI.SO',\n        name: 'Etelä-Pohjanmaa',\n      },\n      {\n        code: 'FI.SS',\n        name: 'Etelä-Savo',\n      },\n      {\n        code: 'FI-ES',\n        name: 'Etelä-Suomen lääni',\n      },\n      {\n        code: 'FI-IS',\n        name: 'Itä-Suomen lääni',\n      },\n      {\n        code: 'FI.KA',\n        name: 'Kainuu',\n      },\n      {\n        code: 'FI.KH',\n        name: 'Kanta-Häme',\n      },\n      {\n        code: 'FI.CO',\n        name: 'Keski-Pohjanmaa',\n      },\n      {\n        code: 'FI.CF',\n        name: 'Keski-Suomi',\n      },\n      {\n        code: 'FI.KY',\n        name: 'Kymenlaakso',\n      },\n      {\n        code: 'FI-LS',\n        name: 'Länsi-Suomen lääni',\n      },\n      {\n        code: 'FI-LL',\n        name: 'Lapin lääni',\n      },\n      {\n        code: 'FI.LA',\n        name: 'Lappi',\n      },\n      {\n        code: 'FI-OL',\n        name: 'Oulun lääni',\n      },\n      {\n        code: 'FI.PH',\n        name: 'Päijät-Häme',\n      },\n      {\n        code: 'FI.TR',\n        name: 'Pirkanmaa',\n      },\n      {\n        code: 'FI.OS',\n        name: 'Pohjanmaa',\n      },\n      {\n        code: 'FI.NK',\n        name: 'Pohjois-Karjala',\n      },\n      {\n        code: 'FI.NO',\n        name: 'Pohjois-Pohjanmaa',\n      },\n      {\n        code: 'FI.NS',\n        name: 'Pohjois-Savo',\n      },\n      {\n        code: 'FI.SA',\n        name: 'Satakunta',\n      },\n      {\n        code: 'FI.US',\n        name: 'Uusimaa',\n      },\n      {\n        code: 'FI.SF',\n        name: 'Varsinais-Suomi',\n      },\n    ],\n  },\n  {\n    code: 'FR',\n    id: 2245,\n    name: 'France',\n    states: [\n      {\n        code: 'FRC2',\n        name: 'Ain',\n      },\n      {\n        code: 'FRC3',\n        name: 'Aisne',\n      },\n      {\n        code: 'FRC4',\n        name: 'Allier',\n      },\n      {\n        code: 'FRC6',\n        name: 'Alpes-Maritimes',\n      },\n      {\n        code: 'FRC5',\n        name: 'Alpes-de-Haute-Provence',\n      },\n      {\n        code: 'FRC1',\n        name: 'Alsace',\n      },\n      {\n        code: 'FR97',\n        name: 'Aquitaine',\n      },\n      {\n        code: 'FRC7',\n        name: 'Ardèche',\n      },\n      {\n        code: 'FRC8',\n        name: 'Ardennes',\n      },\n      {\n        code: 'FRC9',\n        name: 'Ariège',\n      },\n      {\n        code: 'FRD1',\n        name: 'Aube',\n      },\n      {\n        code: 'FRD2',\n        name: 'Aude',\n      },\n      {\n        code: 'FR.AR',\n        name: 'Auvergne-Rhône-Alpes',\n      },\n      {\n        code: 'FR98',\n        name: 'Auvergne',\n      },\n      {\n        code: 'FRD3',\n        name: 'Aveyron',\n      },\n      {\n        code: 'FRD4',\n        name: 'Bas-Rhin',\n      },\n      {\n        code: 'FR99',\n        name: 'Basse-Normandie',\n      },\n      {\n        code: 'FRD5',\n        name: 'Bouches-du-Rhône',\n      },\n      {\n        code: 'FR.BF',\n        name: 'Bourgogne-Franche-Comté',\n      },\n      {\n        code: 'FRA1',\n        name: 'Bourgogne',\n      },\n      {\n        code: 'FRA2',\n        name: 'Bretagne',\n      },\n      {\n        code: 'FRD8',\n        name: 'Calvados',\n      },\n      {\n        code: 'FRD9',\n        name: 'Cantal',\n      },\n      {\n        code: 'FRA3',\n        name: 'Centre',\n      },\n      {\n        code: 'FR.CN',\n        name: 'Centre-Val de Loire',\n      },\n      {\n        code: 'FRA4',\n        name: 'Champagne-Ardenne',\n      },\n      {\n        code: 'FRE1',\n        name: 'Charente-Maritime',\n      },\n      {\n        code: 'FRE2',\n        name: 'Charente',\n      },\n      {\n        code: 'FRE3',\n        name: 'Cher',\n      },\n      {\n        code: 'FRE4',\n        name: 'Corrèze',\n      },\n      {\n        code: 'FRE5',\n        name: 'Corse-du-Sud',\n      },\n      {\n        code: 'FR.CE',\n        name: 'Corse',\n      },\n      {\n        code: 'FRD6',\n        name: \"Côte-d'Or\",\n      },\n      {\n        code: 'FRD7',\n        name: \"Côtes-d'Armor\",\n      },\n      {\n        code: 'FRE6',\n        name: 'Creuse',\n      },\n      {\n        code: 'FRE7',\n        name: 'Deux-Sèvres',\n      },\n      {\n        code: 'FRE8',\n        name: 'Dordogne',\n      },\n      {\n        code: 'FRE9',\n        name: 'Doubs',\n      },\n      {\n        code: 'FRF1',\n        name: 'Drôme',\n      },\n      {\n        code: 'FRF2',\n        name: 'Essonne',\n      },\n      {\n        code: 'FRF3',\n        name: 'Eure-et-Loir',\n      },\n      {\n        code: 'FRF4',\n        name: 'Eure',\n      },\n      {\n        code: 'FRF5',\n        name: 'Finistère',\n      },\n      {\n        code: 'FRA6',\n        name: 'Franche-Comte',\n      },\n      {\n        code: 'FRF6',\n        name: 'Gard',\n      },\n      {\n        code: 'FRF7',\n        name: 'Gers',\n      },\n      {\n        code: 'FRF8',\n        name: 'Gironde',\n      },\n      {\n        code: 'FR.AO',\n        name: 'Grand Est',\n      },\n      {\n        code: 'FRG1',\n        name: 'Haut-Rhin',\n      },\n      {\n        code: 'FRG2',\n        name: 'Haute-Corse',\n      },\n      {\n        code: 'FRG3',\n        name: 'Haute-Garonne',\n      },\n      {\n        code: 'FRG4',\n        name: 'Haute-Loire',\n      },\n      {\n        code: 'FRG5',\n        name: 'Haute-Marne',\n      },\n      {\n        code: 'FRA7',\n        name: 'Haute-Normandie',\n      },\n      {\n        code: 'FRG6',\n        name: 'Haute-Saône',\n      },\n      {\n        code: 'FRG7',\n        name: 'Haute-Savoie',\n      },\n      {\n        code: 'FRG8',\n        name: 'Haute-Vienne',\n      },\n      {\n        code: 'FRG9',\n        name: 'Hautes-Alpes',\n      },\n      {\n        code: 'FRH1',\n        name: 'Hautes-Pyrénées',\n      },\n      {\n        code: 'FR.NC',\n        name: 'Hauts-de-France',\n      },\n      {\n        code: 'FRH2',\n        name: 'Hauts-de-Seine',\n      },\n      {\n        code: 'FRF9',\n        name: 'Hérault',\n      },\n      {\n        code: 'FRA8',\n        name: 'Ile-de-France',\n      },\n      {\n        code: 'FRH3',\n        name: 'Ille-et-Vilaine',\n      },\n      {\n        code: 'FRH5',\n        name: 'Indre',\n      },\n      {\n        code: 'FRH4',\n        name: 'Indre-et-Loire',\n      },\n      {\n        code: 'FRH6',\n        name: 'Isère',\n      },\n      {\n        code: 'FRH7',\n        name: 'Jura',\n      },\n      {\n        code: 'FRH8',\n        name: 'Landes',\n      },\n      {\n        code: 'FRA9',\n        name: 'Languedoc-Roussillon',\n      },\n      {\n        code: 'FRB1',\n        name: 'Limousin',\n      },\n      {\n        code: 'FRI3',\n        name: 'Loir-et-Cher',\n      },\n      {\n        code: 'FRI2',\n        name: 'Loiret',\n      },\n      {\n        code: 'FRI1',\n        name: 'Loire',\n      },\n      {\n        code: 'FRH9',\n        name: 'Loire-Atlantique',\n      },\n      {\n        code: 'FRB2',\n        name: 'Lorraine',\n      },\n      {\n        code: 'FRI4',\n        name: 'Lot-et-Garonne',\n      },\n      {\n        code: 'FRI5',\n        name: 'Lot',\n      },\n      {\n        code: 'FRI6',\n        name: 'Lozère',\n      },\n      {\n        code: 'FRI7',\n        name: 'Maine-et-Loire',\n      },\n      {\n        code: 'FRI8',\n        name: 'Manche',\n      },\n      {\n        code: 'FRI9',\n        name: 'Marne',\n      },\n      {\n        code: 'FRJ1',\n        name: 'Mayenne',\n      },\n      {\n        code: 'FRJ2',\n        name: 'Meurthe-et-Moselle',\n      },\n      {\n        code: 'FRJ3',\n        name: 'Meuse',\n      },\n      {\n        code: 'FRB3',\n        name: 'Midi-Pyrenees',\n      },\n      {\n        code: 'FRJ4',\n        name: 'Morbihan',\n      },\n      {\n        code: 'FRJ5',\n        name: 'Moselle',\n      },\n      {\n        code: 'FRJ6',\n        name: 'Nièvre',\n      },\n      {\n        code: 'FRJ7',\n        name: 'Nord France',\n      },\n      {\n        code: 'FR67',\n        name: 'Nord',\n      },\n      {\n        code: 'FR.ND',\n        name: 'Normandie',\n      },\n      {\n        code: 'FR.AC',\n        name: 'Nouvelle-Aquitaine',\n      },\n      {\n        code: 'FR.LP',\n        name: 'Occitanie',\n      },\n      {\n        code: 'FRJ8',\n        name: 'Oise',\n      },\n      {\n        code: 'FRJ9',\n        name: 'Orne',\n      },\n      {\n        code: 'FRK1',\n        name: 'Paris',\n      },\n      {\n        code: 'FRB4',\n        name: 'Pas-de-Calais',\n      },\n      {\n        code: 'FRB5',\n        name: 'Pays de la Loire',\n      },\n      {\n        code: 'FRB6',\n        name: 'Picardie',\n      },\n      {\n        code: 'FRB7',\n        name: 'Poitou-Charentes',\n      },\n      {\n        code: 'FRB8',\n        name: \"Provence-Alpes-Cote d'Azur\",\n      },\n      {\n        code: 'FRK2',\n        name: 'Puy-de-Dôme',\n      },\n      {\n        code: 'FRK3',\n        name: 'Pyrénées-Atlantiques',\n      },\n      {\n        code: 'FRK4',\n        name: 'Pyrénées-Orientales',\n      },\n      {\n        code: 'FRB9',\n        name: 'Rhône',\n      },\n      {\n        code: 'FRK5',\n        name: 'Saône-et-Loire',\n      },\n      {\n        code: 'FRK6',\n        name: 'Sarthe',\n      },\n      {\n        code: 'FRK7',\n        name: 'Savoie',\n      },\n      {\n        code: 'FRK9',\n        name: 'Seine-Maritime',\n      },\n      {\n        code: 'FRL1',\n        name: 'Seine-Saint-Denis',\n      },\n      {\n        code: 'FRK8',\n        name: 'Seine-et-Marne',\n      },\n      {\n        code: 'FRL2',\n        name: 'Somme',\n      },\n      {\n        code: 'FRL3',\n        name: 'Tarn-et-Garonne',\n      },\n      {\n        code: 'FRL4',\n        name: 'Tarn',\n      },\n      {\n        code: 'FRL5',\n        name: 'Territoire de Belfor',\n      },\n      {\n        code: 'FR14',\n        name: 'Territoire de Belfort',\n      },\n      {\n        code: 'FRL6',\n        name: \"Val-d'Oise\",\n      },\n      {\n        code: 'FRL7',\n        name: 'Val-de-Marne',\n      },\n      {\n        code: 'FRL8',\n        name: 'Var',\n      },\n      {\n        code: 'FRL9',\n        name: 'Vaucluse',\n      },\n      {\n        code: 'FRM1',\n        name: 'Vendée',\n      },\n      {\n        code: 'FRM2',\n        name: 'Vienne',\n      },\n      {\n        code: 'FR94',\n        name: 'Ville de Paris',\n      },\n      {\n        code: 'FRM3',\n        name: 'Vosges',\n      },\n      {\n        code: 'FRM4',\n        name: 'Yonne',\n      },\n      {\n        code: 'FRM5',\n        name: 'Yvelines',\n      },\n      {\n        code: 'FR.IF',\n        name: 'Île-de-France',\n      },\n    ],\n  },\n  {\n    code: 'GF',\n    id: 2416,\n    name: 'French Guiana',\n    states: [],\n  },\n  {\n    code: 'PF',\n    id: 2417,\n    name: 'French Polynesia',\n    states: [],\n  },\n  {\n    code: 'TF',\n    id: 2418,\n    name: 'French Southern Territories',\n    states: [],\n  },\n  {\n    code: 'GA',\n    id: 2246,\n    name: 'Gabon',\n    states: [\n      {\n        code: 'GB01',\n        name: 'Estuaire',\n      },\n      {\n        code: 'GB02',\n        name: 'Haut-Ogooué',\n      },\n      {\n        code: 'GB03',\n        name: 'Moyen-Ogooué',\n      },\n      {\n        code: 'GB04',\n        name: 'Ngounié',\n      },\n      {\n        code: 'GB05',\n        name: 'Nyanga',\n      },\n      {\n        code: 'GB06',\n        name: 'Ogooué-Ivindo',\n      },\n      {\n        code: 'GB07',\n        name: 'Ogooué-Lolo',\n      },\n      {\n        code: 'GB08',\n        name: 'Ogooué-Maritime',\n      },\n      {\n        code: 'GB09',\n        name: 'Woleu-Ntem',\n      },\n    ],\n  },\n  {\n    code: 'GM',\n    id: 2389,\n    name: 'Gambia',\n    states: [\n      {\n        code: 'GA01',\n        name: 'Banjul',\n      },\n      {\n        code: 'GA03',\n        name: 'Central River',\n      },\n      {\n        code: 'GA02',\n        name: 'Lower River',\n      },\n      {\n        code: 'GA07',\n        name: 'North Bank',\n      },\n      {\n        code: 'GA04',\n        name: 'Upper River',\n      },\n      {\n        code: 'GA05',\n        name: 'West Coast',\n      },\n    ],\n  },\n  {\n    code: 'GE',\n    id: 2248,\n    name: 'Georgia',\n    states: [\n      {\n        code: 'GG02',\n        name: 'Abkhazia',\n      },\n      {\n        code: 'GG04',\n        name: 'Ajaria',\n      },\n      {\n        code: 'GG65',\n        name: 'Guria',\n      },\n      {\n        code: 'GG66',\n        name: 'Imereti',\n      },\n      {\n        code: 'GG67',\n        name: 'Kakheti',\n      },\n      {\n        code: 'GG68',\n        name: 'Kvemo Kartli',\n      },\n      {\n        code: 'GG69',\n        name: 'Mtskheta-Mtianeti',\n      },\n      {\n        code: 'GG70',\n        name: 'Racha-Lochkhumi-Kvemo Svaneti',\n      },\n      {\n        code: 'GG71',\n        name: 'Samegrelo-Zemo Svaneti',\n      },\n      {\n        code: 'GG72',\n        name: 'Samtskhe-Javakheti',\n      },\n      {\n        code: 'GG73',\n        name: 'Shida Kartli',\n      },\n      {\n        code: 'GG51',\n        name: 'Tbilisi',\n      },\n    ],\n  },\n  {\n    code: 'DE',\n    id: 2249,\n    name: 'Germany',\n    states: [\n      {\n        code: 'BW',\n        name: 'Baden-Württemberg',\n      },\n      {\n        code: 'BY',\n        name: 'Bayern',\n      },\n      {\n        code: 'BE',\n        name: 'Berlin',\n      },\n      {\n        code: 'BB',\n        name: 'Brandenburg',\n      },\n      {\n        code: 'HB',\n        name: 'Bremen',\n      },\n      {\n        code: 'HH',\n        name: 'Hamburg',\n      },\n      {\n        code: 'HE',\n        name: 'Hessen',\n      },\n      {\n        code: 'MV',\n        name: 'Mecklenburg-Vorpommern',\n      },\n      {\n        code: 'NI',\n        name: 'Niedersachsen',\n      },\n      {\n        code: 'NW',\n        name: 'Nordrhein-Westfalen',\n      },\n      {\n        code: 'RP',\n        name: 'Rheinland-Pfalz',\n      },\n      {\n        code: 'SL',\n        name: 'Saarland',\n      },\n      {\n        code: 'SN',\n        name: 'Sachsen',\n      },\n      {\n        code: 'ST',\n        name: 'Sachsen-Anhalt',\n      },\n      {\n        code: 'SH',\n        name: 'Schleswig-Holstein',\n      },\n      {\n        code: 'TH',\n        name: 'Thüringen',\n      },\n    ],\n  },\n  {\n    code: 'GH',\n    id: 2250,\n    name: 'Ghana',\n    states: [\n      {\n        code: 'GH02',\n        name: 'Ashanti',\n      },\n      {\n        code: 'GH03',\n        name: 'Brong-Ahafo',\n      },\n      {\n        code: 'GH04',\n        name: 'Central',\n      },\n      {\n        code: 'GH05',\n        name: 'Eastern',\n      },\n      {\n        code: 'GH01',\n        name: 'Greater Accra',\n      },\n      {\n        code: 'GH06',\n        name: 'Northern',\n      },\n      {\n        code: 'GH10',\n        name: 'Upper East',\n      },\n      {\n        code: 'GH11',\n        name: 'Upper West',\n      },\n      {\n        code: 'GH08',\n        name: 'Volta',\n      },\n      {\n        code: 'GH09',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'G999',\n    id: 2390,\n    name: 'Gibraltar',\n    states: [\n      {\n        code: 'GI.GI',\n        name: 'Gibraltar',\n      },\n    ],\n  },\n  {\n    code: 'GR',\n    id: 2251,\n    name: 'Greece',\n    states: [\n      {\n        code: '13',\n        name: 'Achaïa',\n      },\n      {\n        code: '69',\n        name: 'Agio Oros',\n      },\n      {\n        code: '01',\n        name: 'Aitolia kai Akarnania',\n      },\n      {\n        code: '11',\n        name: 'Argolida',\n      },\n      {\n        code: '12',\n        name: 'Arkadia',\n      },\n      {\n        code: '31',\n        name: 'Arta',\n      },\n      {\n        code: 'A1',\n        name: 'Attiki',\n      },\n      {\n        code: '64',\n        name: 'Chalkidiki',\n      },\n      {\n        code: '94',\n        name: 'Chania',\n      },\n      {\n        code: '85',\n        name: 'Chios',\n      },\n      {\n        code: '81',\n        name: 'Dodekanisos',\n      },\n      {\n        code: '52',\n        name: 'Drama',\n      },\n      {\n        code: '71',\n        name: 'Evros',\n      },\n      {\n        code: '05',\n        name: 'Evrytania',\n      },\n      {\n        code: '04',\n        name: 'Evvoia',\n      },\n      {\n        code: '63',\n        name: 'Florina',\n      },\n      {\n        code: '07',\n        name: 'Fokida',\n      },\n      {\n        code: '06',\n        name: 'Fthiotida',\n      },\n      {\n        code: '51',\n        name: 'Grevena',\n      },\n      {\n        code: '14',\n        name: 'Ileia',\n      },\n      {\n        code: '53',\n        name: 'Imathia',\n      },\n      {\n        code: '33',\n        name: 'Ioannina',\n      },\n      {\n        code: '91',\n        name: 'Irakleio',\n      },\n      {\n        code: '41',\n        name: 'Karditsa',\n      },\n      {\n        code: '56',\n        name: 'Kastoria',\n      },\n      {\n        code: '55',\n        name: 'Kavala',\n      },\n      {\n        code: '23',\n        name: 'Kefallonia',\n      },\n      {\n        code: '22',\n        name: 'Kerkyra',\n      },\n      {\n        code: '57',\n        name: 'Kilkis',\n      },\n      {\n        code: '15',\n        name: 'Korinthia',\n      },\n      {\n        code: '58',\n        name: 'Kozani',\n      },\n      {\n        code: '82',\n        name: 'Kyklades',\n      },\n      {\n        code: '16',\n        name: 'Lakonia',\n      },\n      {\n        code: '42',\n        name: 'Larisa',\n      },\n      {\n        code: '92',\n        name: 'Lasithi',\n      },\n      {\n        code: '24',\n        name: 'Lefkada',\n      },\n      {\n        code: '83',\n        name: 'Lesvos',\n      },\n      {\n        code: '43',\n        name: 'Magnisia',\n      },\n      {\n        code: '17',\n        name: 'Messinia',\n      },\n      {\n        code: '59',\n        name: 'Pella',\n      },\n      {\n        code: '61',\n        name: 'Pieria',\n      },\n      {\n        code: '34',\n        name: 'Preveza',\n      },\n      {\n        code: '93',\n        name: 'Rethymno',\n      },\n      {\n        code: '73',\n        name: 'Rodopi',\n      },\n      {\n        code: '84',\n        name: 'Samos',\n      },\n      {\n        code: '62',\n        name: 'Serres',\n      },\n      {\n        code: '32',\n        name: 'Thesprotia',\n      },\n      {\n        code: '54',\n        name: 'Thessaloniki',\n      },\n      {\n        code: '44',\n        name: 'Trikala',\n      },\n      {\n        code: '03',\n        name: 'Voiotia',\n      },\n      {\n        code: '72',\n        name: 'Xanthi',\n      },\n      {\n        code: '21',\n        name: 'Zakynthos',\n      },\n    ],\n  },\n  {\n    code: 'GL',\n    id: 2252,\n    name: 'Greenland',\n    states: [],\n  },\n  {\n    code: 'GD',\n    id: 2253,\n    name: 'Grenada',\n    states: [],\n  },\n  {\n    code: 'GP',\n    id: 2419,\n    name: 'Guadeloupe',\n    states: [],\n  },\n  {\n    code: 'GU',\n    id: 2376,\n    name: 'Guam',\n    states: [],\n  },\n  {\n    code: 'GT',\n    id: 2371,\n    name: 'Guatemala',\n    states: [\n      {\n        code: 'GT01',\n        name: 'Alta Verapaz',\n      },\n      {\n        code: 'GT02',\n        name: 'Baja Verapaz',\n      },\n      {\n        code: 'GT03',\n        name: 'Chimaltenango',\n      },\n      {\n        code: 'GT04',\n        name: 'Chiquimula',\n      },\n      {\n        code: 'GT05',\n        name: 'El Progreso',\n      },\n      {\n        code: 'GT06',\n        name: 'Escuintla',\n      },\n      {\n        code: 'GT07',\n        name: 'Guatemala',\n      },\n      {\n        code: 'GT08',\n        name: 'Huehuetenango',\n      },\n      {\n        code: 'GT09',\n        name: 'Izabal',\n      },\n      {\n        code: 'GT10',\n        name: 'Jalapa',\n      },\n      {\n        code: 'GT11',\n        name: 'Jutiapa',\n      },\n      {\n        code: 'GT12',\n        name: 'Petén',\n      },\n      {\n        code: 'GT13',\n        name: 'Quetzaltenango',\n      },\n      {\n        code: 'GT14',\n        name: 'Quiché',\n      },\n      {\n        code: 'GT15',\n        name: 'Retalhuleu',\n      },\n      {\n        code: 'GT16',\n        name: 'Sacatepéquez',\n      },\n      {\n        code: 'GT17',\n        name: 'San Marcos',\n      },\n      {\n        code: 'GT18',\n        name: 'Santa Rosa',\n      },\n      {\n        code: 'GT19',\n        name: 'Sololá',\n      },\n      {\n        code: 'GT20',\n        name: 'Suchitepéquez',\n      },\n      {\n        code: 'GT21',\n        name: 'Totonicapán',\n      },\n      {\n        code: 'GT22',\n        name: 'Zacapa',\n      },\n    ],\n  },\n  {\n    code: 'GG',\n    id: 2420,\n    name: 'Guernsey',\n    states: [],\n  },\n  {\n    code: 'GN',\n    id: 2255,\n    name: 'Guinea',\n    states: [\n      {\n        code: 'GV01',\n        name: 'Beyla',\n      },\n      {\n        code: 'GV02',\n        name: 'Boffa',\n      },\n      {\n        code: 'GV03',\n        name: 'Boké',\n      },\n      {\n        code: 'GV04',\n        name: 'Conakry',\n      },\n      {\n        code: 'GV30',\n        name: 'Coyah',\n      },\n      {\n        code: 'GV05',\n        name: 'Dabola',\n      },\n      {\n        code: 'GV06',\n        name: 'Dalaba',\n      },\n      {\n        code: 'GV07',\n        name: 'Dinguiraye',\n      },\n      {\n        code: 'GV31',\n        name: 'Dubréka',\n      },\n      {\n        code: 'GV09',\n        name: 'Faranah',\n      },\n      {\n        code: 'GV10',\n        name: 'Forécariah',\n      },\n      {\n        code: 'GV11',\n        name: 'Fria',\n      },\n      {\n        code: 'GV12',\n        name: 'Gaoual',\n      },\n      {\n        code: 'GV13',\n        name: 'Guéckédou',\n      },\n      {\n        code: 'GV32',\n        name: 'Kankan',\n      },\n      {\n        code: 'GV15',\n        name: 'Kérouané',\n      },\n      {\n        code: 'GV16',\n        name: 'Kindia',\n      },\n      {\n        code: 'GV17',\n        name: 'Kissidougou',\n      },\n      {\n        code: 'GV33',\n        name: 'Koubia',\n      },\n      {\n        code: 'GV18',\n        name: 'Koundara',\n      },\n      {\n        code: 'GV19',\n        name: 'Kouroussa',\n      },\n      {\n        code: 'GV34',\n        name: 'Labé',\n      },\n      {\n        code: 'GV35',\n        name: 'Lélouma',\n      },\n      {\n        code: 'GV36',\n        name: 'Lola',\n      },\n      {\n        code: 'GV21',\n        name: 'Macenta',\n      },\n      {\n        code: 'GV22',\n        name: 'Mali',\n      },\n      {\n        code: 'GV23',\n        name: 'Mamou',\n      },\n      {\n        code: 'GV37',\n        name: 'Mandiana',\n      },\n      {\n        code: 'GV38',\n        name: 'Nzérékoré',\n      },\n      {\n        code: 'GV25',\n        name: 'Pita',\n      },\n      {\n        code: 'GV39',\n        name: 'Siguiri',\n      },\n      {\n        code: 'GV27',\n        name: 'Télimélé',\n      },\n      {\n        code: 'GV28',\n        name: 'Tougué',\n      },\n      {\n        code: 'GV29',\n        name: 'Yomou',\n      },\n    ],\n  },\n  {\n    code: 'GW',\n    id: 2256,\n    name: 'Guinea-Bissau',\n    states: [\n      {\n        code: 'PU01',\n        name: 'Bafatá',\n      },\n      {\n        code: 'PU12',\n        name: 'Biombo',\n      },\n      {\n        code: 'PU11',\n        name: 'Bissau',\n      },\n      {\n        code: 'PU05',\n        name: 'Bolama',\n      },\n      {\n        code: 'PU06',\n        name: 'Cacheu',\n      },\n      {\n        code: 'PU10',\n        name: 'Gabú',\n      },\n      {\n        code: 'PU04',\n        name: 'Oio',\n      },\n      {\n        code: 'PU02',\n        name: 'Quinara',\n      },\n      {\n        code: 'PU07',\n        name: 'Tombali',\n      },\n    ],\n  },\n  {\n    code: 'GY',\n    id: 2257,\n    name: 'Guyana',\n    states: [\n      {\n        code: 'GY10',\n        name: 'Barima-Waini',\n      },\n      {\n        code: 'GY11',\n        name: 'Cuyuni-Mazaruni',\n      },\n      {\n        code: 'GY12',\n        name: 'Demerara-Mahaica',\n      },\n      {\n        code: 'GY13',\n        name: 'East Berbice-Corentyne',\n      },\n      {\n        code: 'GY14',\n        name: 'Essequibo Islands-West Demerara',\n      },\n      {\n        code: 'GY15',\n        name: 'Mahaica-Berbice',\n      },\n      {\n        code: 'GY16',\n        name: 'Pomeroon-Supenaam',\n      },\n      {\n        code: 'GY17',\n        name: 'Potaro-Siparuni',\n      },\n      {\n        code: 'GY18',\n        name: 'Upper Demerara-Berbice',\n      },\n      {\n        code: 'GY19',\n        name: 'Upper Takutu-Upper Essequibo',\n      },\n    ],\n  },\n  {\n    code: 'HT',\n    id: 2258,\n    name: 'Haiti',\n    states: [\n      {\n        code: 'HA07',\n        name: 'Centre',\n      },\n      {\n        code: 'HA14',\n        name: \"Grand' Anse\",\n      },\n      {\n        code: 'HA06',\n        name: \"L'Artibonite\",\n      },\n      {\n        code: 'HA15',\n        name: 'Nippes',\n      },\n      {\n        code: 'HA10',\n        name: 'Nord-Est',\n      },\n      {\n        code: 'HA03',\n        name: 'Nord-Ouest',\n      },\n      {\n        code: 'HA09',\n        name: 'Nord',\n      },\n      {\n        code: 'HA11',\n        name: 'Ouest',\n      },\n      {\n        code: 'HA13',\n        name: 'Sud-Est',\n      },\n      {\n        code: 'HA12',\n        name: 'Sud',\n      },\n    ],\n  },\n  {\n    code: 'HM',\n    id: 2421,\n    name: 'Heard and McDonald Islands',\n    states: [],\n  },\n  {\n    code: 'VA',\n    id: 2362,\n    name: 'Holy See (Vatican City State)',\n    states: [],\n  },\n  {\n    code: 'HN',\n    id: 2259,\n    name: 'Honduras',\n    states: [\n      {\n        code: 'HO01',\n        name: 'Atlántida',\n      },\n      {\n        code: 'HO02',\n        name: 'Choluteca',\n      },\n      {\n        code: 'HO03',\n        name: 'Colón',\n      },\n      {\n        code: 'HO04',\n        name: 'Comayagua',\n      },\n      {\n        code: 'HO05',\n        name: 'Copán',\n      },\n      {\n        code: 'HO06',\n        name: 'Cortés',\n      },\n      {\n        code: 'HO07',\n        name: 'El Paraíso',\n      },\n      {\n        code: 'HO08',\n        name: 'Francisco Morazán',\n      },\n      {\n        code: 'HO09',\n        name: 'Gracias a Dios',\n      },\n      {\n        code: 'HO10',\n        name: 'Intibucá',\n      },\n      {\n        code: 'HO11',\n        name: 'Islas de la Bahía',\n      },\n      {\n        code: 'HO12',\n        name: 'La Paz',\n      },\n      {\n        code: 'HO13',\n        name: 'Lempira',\n      },\n      {\n        code: 'HO14',\n        name: 'Ocotepeque',\n      },\n      {\n        code: 'HO15',\n        name: 'Olancho',\n      },\n      {\n        code: 'HO16',\n        name: 'Santa Bárbara',\n      },\n      {\n        code: 'HO17',\n        name: 'Valle',\n      },\n      {\n        code: 'HO18',\n        name: 'Yoro',\n      },\n    ],\n  },\n  {\n    code: 'HK',\n    id: 2377,\n    name: 'Hong Kong',\n    states: [\n      {\n        code: 'HK001',\n        name: 'Hong Kong Island',\n      },\n      {\n        code: 'HK002',\n        name: 'Kowloon',\n      },\n      {\n        code: 'HK003',\n        name: 'New Territories',\n      },\n    ],\n  },\n  {\n    code: 'HU',\n    id: 2260,\n    name: 'Hungary',\n    states: [\n      {\n        code: 'BK',\n        name: 'Bács-Kiskun',\n      },\n      {\n        code: 'BA',\n        name: 'Baranya',\n      },\n      {\n        code: 'BE',\n        name: 'Békés',\n      },\n      {\n        code: 'BC',\n        name: 'Békéscsaba',\n      },\n      {\n        code: 'BZ',\n        name: 'Borsod-Abaúj-Zemplén',\n      },\n      {\n        code: 'BU',\n        name: 'Budapest',\n      },\n      {\n        code: 'CS',\n        name: 'Csongrád',\n      },\n      {\n        code: 'DE',\n        name: 'Debrecen',\n      },\n      {\n        code: 'DU',\n        name: 'Dunaújváros',\n      },\n      {\n        code: 'EG',\n        name: 'Eger',\n      },\n      {\n        code: 'ER',\n        name: 'Erd',\n      },\n      {\n        code: 'FE',\n        name: 'Fejér',\n      },\n      {\n        code: 'GY',\n        name: 'Gyor',\n      },\n      {\n        code: 'GS',\n        name: 'Gyor-Moson-Sopron',\n      },\n      {\n        code: 'HB',\n        name: 'Hajdú-Bihar',\n      },\n      {\n        code: 'HE',\n        name: 'Heves',\n      },\n      {\n        code: 'HV',\n        name: 'Hódmezovásárhely',\n      },\n      {\n        code: 'JN',\n        name: 'Jász-Nagykun-Szolnok',\n      },\n      {\n        code: 'KV',\n        name: 'Kaposvár',\n      },\n      {\n        code: 'KM',\n        name: 'Kecskemét',\n      },\n      {\n        code: 'KE',\n        name: 'Komárom-Esztergom',\n      },\n      {\n        code: 'MI',\n        name: 'Miskolc',\n      },\n      {\n        code: 'NK',\n        name: 'Nagykanizsa',\n      },\n      {\n        code: 'NO',\n        name: 'Nógrád',\n      },\n      {\n        code: 'NY',\n        name: 'Nyíregyháza',\n      },\n      {\n        code: 'PS',\n        name: 'Pécs',\n      },\n      {\n        code: 'PE',\n        name: 'Pest',\n      },\n      {\n        code: 'ST',\n        name: 'Salgótarján',\n      },\n      {\n        code: 'SO',\n        name: 'Somogy',\n      },\n      {\n        code: 'SN',\n        name: 'Sopron',\n      },\n      {\n        code: 'SZ',\n        name: 'Szabolcs-Szatmár-Bereg',\n      },\n      {\n        code: 'SD',\n        name: 'Szeged',\n      },\n      {\n        code: 'SF',\n        name: 'Székesfehérvár',\n      },\n      {\n        code: 'SS',\n        name: 'Szekszárd',\n      },\n      {\n        code: 'SK',\n        name: 'Szolnok',\n      },\n      {\n        code: 'SH',\n        name: 'Szombathely',\n      },\n      {\n        code: 'TB',\n        name: 'Tatabánya',\n      },\n      {\n        code: 'TO',\n        name: 'Tolna',\n      },\n      {\n        code: 'VA',\n        name: 'Vas',\n      },\n      {\n        code: 'VE',\n        name: 'Veszprém',\n      },\n      {\n        code: 'VM',\n        name: 'Veszprém City',\n      },\n      {\n        code: 'ZA',\n        name: 'Zala',\n      },\n      {\n        code: 'ZE',\n        name: 'Zalaegerszeg',\n      },\n    ],\n  },\n  {\n    code: 'IS',\n    id: 2261,\n    name: 'Iceland',\n    states: [\n      {\n        code: '7',\n        name: 'Austurland',\n      },\n      {\n        code: '1',\n        name: 'Höfuðborgarsvæði utan Reykjavíkur',\n      },\n      {\n        code: '6',\n        name: 'Norðurland eystra',\n      },\n      {\n        code: '5',\n        name: 'Norðurland vestra',\n      },\n      {\n        code: '0',\n        name: 'Reykjavík',\n      },\n      {\n        code: '8',\n        name: 'Suðurland',\n      },\n      {\n        code: '2',\n        name: 'Suðurnes',\n      },\n      {\n        code: '4',\n        name: 'Vestfirðir',\n      },\n      {\n        code: '3',\n        name: 'Vesturland',\n      },\n    ],\n  },\n  {\n    code: 'IN',\n    id: 2262,\n    name: 'India',\n    states: [\n      {\n        code: 'AN',\n        name: 'Andaman and Nicobar Islands',\n      },\n      {\n        code: 'AP',\n        name: 'Andhra Pradesh',\n      },\n      {\n        code: 'AR',\n        name: 'Arunachal Pradesh',\n      },\n      {\n        code: 'AS',\n        name: 'Assam',\n      },\n      {\n        code: 'BR',\n        name: 'Bihar',\n      },\n      {\n        code: 'CH',\n        name: 'Chandigarh',\n      },\n      {\n        code: 'CT',\n        name: 'Chhattisgarh',\n      },\n      {\n        code: 'DN',\n        name: 'Dadra and Nagar Haveli',\n      },\n      {\n        code: 'DD',\n        name: 'Daman and Diu',\n      },\n      {\n        code: 'DL',\n        name: 'Delhi',\n      },\n      {\n        code: 'GA',\n        name: 'Goa',\n      },\n      {\n        code: 'GJ',\n        name: 'Gujarat',\n      },\n      {\n        code: 'HR',\n        name: 'Haryana',\n      },\n      {\n        code: 'HP',\n        name: 'Himachal Pradesh',\n      },\n      {\n        code: 'JK',\n        name: 'Jammu and Kashmir',\n      },\n      {\n        code: 'JH',\n        name: 'Jharkhand',\n      },\n      {\n        code: 'KA',\n        name: 'Karnataka',\n      },\n      {\n        code: 'KL',\n        name: 'Kerala',\n      },\n      {\n        code: 'LD',\n        name: 'Lakshadweep',\n      },\n      {\n        code: 'MP',\n        name: 'Madhya Pradesh',\n      },\n      {\n        code: 'MH',\n        name: 'Maharashtra',\n      },\n      {\n        code: 'MN',\n        name: 'Manipur',\n      },\n      {\n        code: 'ML',\n        name: 'Meghalaya',\n      },\n      {\n        code: 'MZ',\n        name: 'Mizoram',\n      },\n      {\n        code: 'NL',\n        name: 'Nagaland',\n      },\n      {\n        code: 'OR',\n        name: 'Orissa',\n      },\n      {\n        code: 'PY',\n        name: 'Pondicherry',\n      },\n      {\n        code: 'PB',\n        name: 'Punjab',\n      },\n      {\n        code: 'RJ',\n        name: 'Rajasthan',\n      },\n      {\n        code: 'SK',\n        name: 'Sikkim',\n      },\n      {\n        code: 'TN',\n        name: 'Tamil Nadu',\n      },\n      {\n        code: 'TG',\n        name: 'Telangana',\n      },\n      {\n        code: 'TR',\n        name: 'Tripura',\n      },\n      {\n        code: 'UP',\n        name: 'Uttar Pradesh',\n      },\n      {\n        code: 'UL',\n        name: 'Uttaranchal',\n      },\n      {\n        code: 'WB',\n        name: 'West Bengal',\n      },\n    ],\n  },\n  {\n    code: 'ID',\n    id: 2263,\n    name: 'Indonesia',\n    states: [\n      {\n        code: 'AC',\n        name: 'Aceh',\n      },\n      {\n        code: 'BA',\n        name: 'Bali',\n      },\n      {\n        code: 'BB',\n        name: 'Bangka Belitung',\n      },\n      {\n        code: 'BT',\n        name: 'Banten',\n      },\n      {\n        code: 'BE',\n        name: 'Bengkulu',\n      },\n      {\n        code: 'GO',\n        name: 'Gorontalo',\n      },\n      {\n        code: 'JK',\n        name: 'Jakarta Raya',\n      },\n      {\n        code: 'JA',\n        name: 'Jambi',\n      },\n      {\n        code: 'JB',\n        name: 'Jawa Barat',\n      },\n      {\n        code: 'JT',\n        name: 'Jawa Tengah',\n      },\n      {\n        code: 'JI',\n        name: 'Jawa Timur',\n      },\n      {\n        code: 'KB',\n        name: 'Kalimantan Barat',\n      },\n      {\n        code: 'KS',\n        name: 'Kalimantan Selatan',\n      },\n      {\n        code: 'KT',\n        name: 'Kalimantan Tengah',\n      },\n      {\n        code: 'KI',\n        name: 'Kalimantan Timur',\n      },\n      {\n        code: 'KR',\n        name: 'Kepulauan Riau',\n      },\n      {\n        code: 'LA',\n        name: 'Lampung',\n      },\n      {\n        code: 'MA',\n        name: 'Maluku',\n      },\n      {\n        code: 'MU',\n        name: 'Maluku Utara',\n      },\n      {\n        code: 'NB',\n        name: 'Nusa Tenggara Barat',\n      },\n      {\n        code: 'NT',\n        name: 'Nusa Tenggara Timur',\n      },\n      {\n        code: 'PA',\n        name: 'Papua',\n      },\n      {\n        code: 'PB',\n        name: 'Papua Barat',\n      },\n      {\n        code: 'RI',\n        name: 'Riau',\n      },\n      {\n        code: 'SR',\n        name: 'Sulawesi Barat',\n      },\n      {\n        code: 'SN',\n        name: 'Sulawesi Selatan',\n      },\n      {\n        code: 'ST',\n        name: 'Sulawesi Tengah',\n      },\n      {\n        code: 'SG',\n        name: 'Sulawesi Tenggara',\n      },\n      {\n        code: 'SA',\n        name: 'Sulawesi Utara',\n      },\n      {\n        code: 'SB',\n        name: 'Sumatera Barat',\n      },\n      {\n        code: 'SS',\n        name: 'Sumatera Selatan',\n      },\n      {\n        code: 'SU',\n        name: 'Sumatera Utara',\n      },\n      {\n        code: 'YO',\n        name: 'Yogyakarta',\n      },\n    ],\n  },\n  {\n    code: 'IR',\n    id: 2264,\n    name: 'Iran; Islamic Republic of',\n    states: [\n      {\n        code: 'IR44',\n        name: 'Alborz',\n      },\n      {\n        code: 'IR32',\n        name: 'Ardebil',\n      },\n      {\n        code: 'IR22',\n        name: 'Bushehr',\n      },\n      {\n        code: 'IR03',\n        name: 'Chahar Mahall and Bakhtiari',\n      },\n      {\n        code: 'IR33',\n        name: 'East Azarbaijan',\n      },\n      {\n        code: 'IR28',\n        name: 'Esfahan',\n      },\n      {\n        code: 'IR07',\n        name: 'Fars',\n      },\n      {\n        code: 'IR08',\n        name: 'Gilan',\n      },\n      {\n        code: 'IR37',\n        name: 'Golestan',\n      },\n      {\n        code: 'IR09',\n        name: 'Hamadan',\n      },\n      {\n        code: 'IR11',\n        name: 'Hormozgan',\n      },\n      {\n        code: 'IR42',\n        name: 'IRazavi Khorasan',\n      },\n      {\n        code: 'IR10',\n        name: 'Ilam',\n      },\n      {\n        code: 'IR29',\n        name: 'Kerman',\n      },\n      {\n        code: 'IR13',\n        name: 'Kermanshah',\n      },\n      {\n        code: 'IR15',\n        name: 'Khuzestan',\n      },\n      {\n        code: 'IR05',\n        name: 'Kohgiluyeh and Buyer Ahmad',\n      },\n      {\n        code: 'IR16',\n        name: 'Kordestan',\n      },\n      {\n        code: 'IR23',\n        name: 'Lorestan',\n      },\n      {\n        code: 'IR34',\n        name: 'Markazi',\n      },\n      {\n        code: 'IR35',\n        name: 'Mazandaran',\n      },\n      {\n        code: 'IR43',\n        name: 'North Khorasan',\n      },\n      {\n        code: 'IR38',\n        name: 'Qazvin',\n      },\n      {\n        code: 'IR39',\n        name: 'Qom',\n      },\n      {\n        code: 'IR25',\n        name: 'Semnan',\n      },\n      {\n        code: 'IR04',\n        name: 'Sistan and Baluchestan',\n      },\n      {\n        code: 'IR41',\n        name: 'South Khorasan',\n      },\n      {\n        code: 'IR26',\n        name: 'Tehran',\n      },\n      {\n        code: 'IR01',\n        name: 'West Azarbaijan',\n      },\n      {\n        code: 'IR40',\n        name: 'Yazd',\n      },\n      {\n        code: 'IR36',\n        name: 'Zanjan',\n      },\n    ],\n  },\n  {\n    code: 'IQ',\n    id: 2265,\n    name: 'Iraq',\n    states: [\n      {\n        code: 'IZ01',\n        name: 'Al-Anbar',\n      },\n      {\n        code: 'IZ02',\n        name: 'Al-Basrah',\n      },\n      {\n        code: 'IZ03',\n        name: 'Al-Muthanna',\n      },\n      {\n        code: 'IZ04',\n        name: 'Al-Qadisiyah',\n      },\n      {\n        code: 'IZ17',\n        name: 'An-Najaf',\n      },\n      {\n        code: 'IZ11',\n        name: 'Arbil',\n      },\n      {\n        code: 'IZ05',\n        name: 'As-Sulaymaniyah',\n      },\n      {\n        code: 'IZ13',\n        name: \"At-Ta'mim\",\n      },\n      {\n        code: 'IZ06',\n        name: 'Babil',\n      },\n      {\n        code: 'IZ07',\n        name: 'Baghdad',\n      },\n      {\n        code: 'IZ08',\n        name: 'Dahuk',\n      },\n      {\n        code: 'IZ09',\n        name: 'Dhi Qar',\n      },\n      {\n        code: 'IZ10',\n        name: 'Diyala',\n      },\n      {\n        code: 'IZ12',\n        name: 'Karbala',\n      },\n      {\n        code: 'IZ14',\n        name: 'Maysan',\n      },\n      {\n        code: 'IZ15',\n        name: 'Ninawa',\n      },\n      {\n        code: 'IZ18',\n        name: 'Salah ad-Din',\n      },\n      {\n        code: 'IZ16',\n        name: 'Wasit',\n      },\n    ],\n  },\n  {\n    code: 'IE',\n    id: 2266,\n    name: 'Ireland',\n    states: [\n      {\n        code: 'CW',\n        name: 'Carlow',\n      },\n      {\n        code: 'CN',\n        name: 'Cavan',\n      },\n      {\n        code: 'CE',\n        name: 'Clare',\n      },\n      {\n        code: 'C',\n        name: 'Connacht',\n      },\n      {\n        code: 'CO',\n        name: 'Cork',\n      },\n      {\n        code: 'DL',\n        name: 'Donegal',\n      },\n      {\n        code: 'D',\n        name: 'Dublin',\n      },\n      {\n        code: 'G',\n        name: 'Galway',\n      },\n      {\n        code: 'KY',\n        name: 'Kerry',\n      },\n      {\n        code: 'KE',\n        name: 'Kildare',\n      },\n      {\n        code: 'KK',\n        name: 'Kilkenny',\n      },\n      {\n        code: 'LS',\n        name: 'Laois',\n      },\n      {\n        code: 'L',\n        name: 'Leinster',\n      },\n      {\n        code: 'LM',\n        name: 'Leitrim',\n      },\n      {\n        code: 'LK',\n        name: 'Limerick',\n      },\n      {\n        code: 'LD',\n        name: 'Longford',\n      },\n      {\n        code: 'LH',\n        name: 'Louth',\n      },\n      {\n        code: 'MO',\n        name: 'Mayo',\n      },\n      {\n        code: 'MH',\n        name: 'Meath',\n      },\n      {\n        code: 'MN',\n        name: 'Monaghan',\n      },\n      {\n        code: 'M',\n        name: 'Munster',\n      },\n      {\n        code: 'OY',\n        name: 'Offaly',\n      },\n      {\n        code: 'RN',\n        name: 'Roscommon',\n      },\n      {\n        code: 'SO',\n        name: 'Sligo',\n      },\n      {\n        code: 'TA',\n        name: 'Tipperary',\n      },\n      {\n        code: 'U',\n        name: 'Ulster',\n      },\n      {\n        code: 'WD',\n        name: 'Waterford',\n      },\n      {\n        code: 'WH',\n        name: 'Westmeath',\n      },\n      {\n        code: 'WX',\n        name: 'Wexford',\n      },\n      {\n        code: 'WW',\n        name: 'Wicklow',\n      },\n    ],\n  },\n  {\n    code: 'IM',\n    id: 2445,\n    name: 'Isle of Man',\n    states: [],\n  },\n  {\n    code: 'IL',\n    id: 2267,\n    name: 'Israel',\n    states: [\n      {\n        code: 'IS01',\n        name: 'HaDarom',\n      },\n      {\n        code: 'IS02',\n        name: 'HaMerkaz',\n      },\n      {\n        code: 'IS03',\n        name: 'HaZafon',\n      },\n      {\n        code: 'IS04',\n        name: 'Haifa',\n      },\n      {\n        code: 'IS06',\n        name: 'Jerusalem',\n      },\n      {\n        code: 'IS05',\n        name: 'Tel Aviv',\n      },\n    ],\n  },\n  {\n    code: 'IT',\n    id: 2268,\n    name: 'Italy',\n    states: [\n      {\n        code: '65',\n        name: 'Abruzzo',\n      },\n      {\n        code: 'AG',\n        name: 'Agrigento',\n      },\n      {\n        code: 'AL',\n        name: 'Alessandria',\n      },\n      {\n        code: 'AN',\n        name: 'Ancona',\n      },\n      {\n        code: 'AO',\n        name: 'Aosta',\n      },\n      {\n        code: 'AR',\n        name: 'Arezzo',\n      },\n      {\n        code: 'AP',\n        name: 'Ascoli Piceno',\n      },\n      {\n        code: 'AT',\n        name: 'Asti',\n      },\n      {\n        code: 'AV',\n        name: 'Avellino',\n      },\n      {\n        code: 'BA',\n        name: 'Bari',\n      },\n      {\n        code: 'BT',\n        name: 'Barletta-Andria-Trani',\n      },\n      {\n        code: '77',\n        name: 'Basilicata',\n      },\n      {\n        code: 'BL',\n        name: 'Belluno',\n      },\n      {\n        code: 'BN',\n        name: 'Benevento',\n      },\n      {\n        code: 'BG',\n        name: 'Bergamo',\n      },\n      {\n        code: 'BI',\n        name: 'Biella',\n      },\n      {\n        code: 'BO',\n        name: 'Bologna',\n      },\n      {\n        code: 'BZ',\n        name: 'Bolzano',\n      },\n      {\n        code: 'BS',\n        name: 'Brescia',\n      },\n      {\n        code: 'BR',\n        name: 'Brindisi',\n      },\n      {\n        code: 'CA',\n        name: 'Cagliari',\n      },\n      {\n        code: '78',\n        name: 'Calabria',\n      },\n      {\n        code: 'CL',\n        name: 'Caltanissetta',\n      },\n      {\n        code: '72',\n        name: 'Campania',\n      },\n      {\n        code: 'CB',\n        name: 'Campobasso',\n      },\n      {\n        code: 'CI',\n        name: 'Carbonia-Iglesias',\n      },\n      {\n        code: 'CE',\n        name: 'Caserta',\n      },\n      {\n        code: 'CT',\n        name: 'Catania',\n      },\n      {\n        code: 'CZ',\n        name: 'Catanzaro',\n      },\n      {\n        code: 'CH',\n        name: 'Chieti',\n      },\n      {\n        code: 'CO',\n        name: 'Como',\n      },\n      {\n        code: 'CS',\n        name: 'Cosenza',\n      },\n      {\n        code: 'CR',\n        name: 'Cremona',\n      },\n      {\n        code: 'KR',\n        name: 'Crotone',\n      },\n      {\n        code: 'CN',\n        name: 'Cuneo',\n      },\n      {\n        code: '45',\n        name: 'Emilia-Romagna',\n      },\n      {\n        code: 'EN',\n        name: 'Enna',\n      },\n      {\n        code: 'FM',\n        name: 'Fermo',\n      },\n      {\n        code: 'FE',\n        name: 'Ferrara',\n      },\n      {\n        code: 'FI',\n        name: 'Firenze',\n      },\n      {\n        code: 'FG',\n        name: 'Foggia',\n      },\n      {\n        code: 'FC',\n        name: 'Forli-Cesena',\n      },\n      {\n        code: '36',\n        name: 'Friuli-Venezia Giulia',\n      },\n      {\n        code: 'FR',\n        name: 'Frosinone',\n      },\n      {\n        code: 'GE',\n        name: 'Genova',\n      },\n      {\n        code: 'GO',\n        name: 'Gorizia',\n      },\n      {\n        code: 'GR',\n        name: 'Grosseto',\n      },\n      {\n        code: 'IM',\n        name: 'Imperia',\n      },\n      {\n        code: 'IS',\n        name: 'Isernia',\n      },\n      {\n        code: 'AQ',\n        name: \"L'Aquila\",\n      },\n      {\n        code: 'SP',\n        name: 'La Spezia',\n      },\n      {\n        code: 'LT',\n        name: 'Latina',\n      },\n      {\n        code: '62',\n        name: 'Lazio',\n      },\n      {\n        code: 'LE',\n        name: 'Lecce',\n      },\n      {\n        code: 'LC',\n        name: 'Lecco',\n      },\n      {\n        code: '42',\n        name: 'Liguria',\n      },\n      {\n        code: 'LI',\n        name: 'Livorno',\n      },\n      {\n        code: 'LO',\n        name: 'Lodi',\n      },\n      {\n        code: '25',\n        name: 'Lombardia',\n      },\n      {\n        code: 'LU',\n        name: 'Lucca',\n      },\n      {\n        code: 'MC',\n        name: 'Macerata',\n      },\n      {\n        code: 'MN',\n        name: 'Mantova',\n      },\n      {\n        code: '57',\n        name: 'Marche',\n      },\n      {\n        code: 'MS',\n        name: 'Massa-Carrara',\n      },\n      {\n        code: 'MT',\n        name: 'Matera',\n      },\n      {\n        code: 'VS',\n        name: 'Medio Campidano',\n      },\n      {\n        code: 'ME',\n        name: 'Messina',\n      },\n      {\n        code: 'MI',\n        name: 'Milano',\n      },\n      {\n        code: 'MO',\n        name: 'Modena',\n      },\n      {\n        code: '67',\n        name: 'Molise',\n      },\n      {\n        code: 'MB',\n        name: 'Monza e Brianza',\n      },\n      {\n        code: 'NA',\n        name: 'Napoli',\n      },\n      {\n        code: 'NO',\n        name: 'Novara',\n      },\n      {\n        code: 'NU',\n        name: 'Nuoro',\n      },\n      {\n        code: 'OG',\n        name: 'Ogliastra',\n      },\n      {\n        code: 'OT',\n        name: 'Olbia-Tempio',\n      },\n      {\n        code: 'OR',\n        name: 'Oristano',\n      },\n      {\n        code: 'PD',\n        name: 'Padova',\n      },\n      {\n        code: 'PA',\n        name: 'Palermo',\n      },\n      {\n        code: 'PR',\n        name: 'Parma',\n      },\n      {\n        code: 'PV',\n        name: 'Pavia',\n      },\n      {\n        code: 'PG',\n        name: 'Perugia',\n      },\n      {\n        code: 'PU',\n        name: 'Pesaro e Urbino',\n      },\n      {\n        code: 'PE',\n        name: 'Pescara',\n      },\n      {\n        code: 'PC',\n        name: 'Piacenza',\n      },\n      {\n        code: '21',\n        name: 'Piemonte',\n      },\n      {\n        code: 'PI',\n        name: 'Pisa',\n      },\n      {\n        code: 'PT',\n        name: 'Pistoia',\n      },\n      {\n        code: 'PN',\n        name: 'Pordenone',\n      },\n      {\n        code: 'PZ',\n        name: 'Potenza',\n      },\n      {\n        code: 'PO',\n        name: 'Prato',\n      },\n      {\n        code: '75',\n        name: 'Puglia',\n      },\n      {\n        code: 'RG',\n        name: 'Ragusa',\n      },\n      {\n        code: 'RA',\n        name: 'Ravenna',\n      },\n      {\n        code: 'RC',\n        name: 'Reggio Calabria',\n      },\n      {\n        code: 'RE',\n        name: 'Reggio Emilia',\n      },\n      {\n        code: 'RI',\n        name: 'Rieti',\n      },\n      {\n        code: 'RN',\n        name: 'Rimini',\n      },\n      {\n        code: 'RM',\n        name: 'Roma',\n      },\n      {\n        code: 'RO',\n        name: 'Rovigo',\n      },\n      {\n        code: 'SA',\n        name: 'Salerno',\n      },\n      {\n        code: '88',\n        name: 'Sardegna',\n      },\n      {\n        code: 'SS',\n        name: 'Sassari',\n      },\n      {\n        code: 'SV',\n        name: 'Savona',\n      },\n      {\n        code: '82',\n        name: 'Sicilia',\n      },\n      {\n        code: 'SI',\n        name: 'Siena',\n      },\n      {\n        code: 'SR',\n        name: 'Siracusa',\n      },\n      {\n        code: 'SO',\n        name: 'Sondrio',\n      },\n      {\n        code: 'TA',\n        name: 'Taranto',\n      },\n      {\n        code: 'TE',\n        name: 'Teramo',\n      },\n      {\n        code: 'TR',\n        name: 'Terni',\n      },\n      {\n        code: 'TO',\n        name: 'Torino',\n      },\n      {\n        code: '52',\n        name: 'Toscana',\n      },\n      {\n        code: 'TP',\n        name: 'Trapani',\n      },\n      {\n        code: '32',\n        name: 'Trentino-Alto Adige',\n      },\n      {\n        code: 'TN',\n        name: 'Trento',\n      },\n      {\n        code: 'TV',\n        name: 'Treviso',\n      },\n      {\n        code: 'TS',\n        name: 'Trieste',\n      },\n      {\n        code: 'UD',\n        name: 'Udine',\n      },\n      {\n        code: '55',\n        name: 'Umbria',\n      },\n      {\n        code: '23',\n        name: \"Valle d'Aosta\",\n      },\n      {\n        code: 'VA',\n        name: 'Varese',\n      },\n      {\n        code: '34',\n        name: 'Veneto',\n      },\n      {\n        code: 'VE',\n        name: 'Venezia',\n      },\n      {\n        code: 'VB',\n        name: 'Verbano-Cusio-Ossola',\n      },\n      {\n        code: 'VC',\n        name: 'Vercelli',\n      },\n      {\n        code: 'VR',\n        name: 'Verona',\n      },\n      {\n        code: 'VV',\n        name: 'Vibo Valentia',\n      },\n      {\n        code: 'VI',\n        name: 'Vicenza',\n      },\n      {\n        code: 'VT',\n        name: 'Viterbo',\n      },\n    ],\n  },\n  {\n    code: 'JM',\n    id: 2269,\n    name: 'Jamaica',\n    states: [\n      {\n        code: 'JM01',\n        name: 'Clarendon',\n      },\n      {\n        code: 'JM02',\n        name: 'Hanover',\n      },\n      {\n        code: 'JM17',\n        name: 'Kingston',\n      },\n      {\n        code: 'JM04',\n        name: 'Manchester',\n      },\n      {\n        code: 'JM07',\n        name: 'Portland',\n      },\n      {\n        code: 'JM08',\n        name: 'Saint Andrew',\n      },\n      {\n        code: 'JM09',\n        name: 'Saint Ann',\n      },\n      {\n        code: 'JM10',\n        name: 'Saint Catherine',\n      },\n      {\n        code: 'JM11',\n        name: 'Saint Elizabeth',\n      },\n      {\n        code: 'JM12',\n        name: 'Saint James',\n      },\n      {\n        code: 'JM13',\n        name: 'Saint Mary',\n      },\n      {\n        code: 'JM14',\n        name: 'Saint Thomas',\n      },\n      {\n        code: 'JM15',\n        name: 'Trelawny',\n      },\n      {\n        code: 'JM16',\n        name: 'Westmoreland',\n      },\n    ],\n  },\n  {\n    code: 'JP',\n    id: 2270,\n    name: 'Japan',\n    states: [\n      {\n        code: 'JP23',\n        name: 'Aichi',\n      },\n      {\n        code: 'JP05',\n        name: 'Akita',\n      },\n      {\n        code: 'JP02',\n        name: 'Aomori',\n      },\n      {\n        code: 'JP12',\n        name: 'Chiba',\n      },\n      {\n        code: 'JP38',\n        name: 'Ehime',\n      },\n      {\n        code: 'JP18',\n        name: 'Fukui',\n      },\n      {\n        code: 'JP40',\n        name: 'Fukuoka',\n      },\n      {\n        code: 'JP07',\n        name: 'Fukushima',\n      },\n      {\n        code: 'JP21',\n        name: 'Gifu',\n      },\n      {\n        code: 'JP10',\n        name: 'Gunma',\n      },\n      {\n        code: 'JP34',\n        name: 'Hiroshima',\n      },\n      {\n        code: 'JP01',\n        name: 'Hokkaido',\n      },\n      {\n        code: 'JP28',\n        name: 'Hyogo',\n      },\n      {\n        code: 'JP08',\n        name: 'Ibaraki',\n      },\n      {\n        code: 'JP17',\n        name: 'Ishikawa',\n      },\n      {\n        code: 'JP03',\n        name: 'Iwate',\n      },\n      {\n        code: 'JP37',\n        name: 'Kagawa',\n      },\n      {\n        code: 'JP46',\n        name: 'Kagoshima',\n      },\n      {\n        code: 'JP14',\n        name: 'Kanagawa',\n      },\n      {\n        code: 'JP39',\n        name: 'Kochi',\n      },\n      {\n        code: 'JP43',\n        name: 'Kumamoto',\n      },\n      {\n        code: 'JP26',\n        name: 'Kyoto',\n      },\n      {\n        code: 'JP24',\n        name: 'Mie',\n      },\n      {\n        code: 'JP04',\n        name: 'Miyagi',\n      },\n      {\n        code: 'JP45',\n        name: 'Miyazaki',\n      },\n      {\n        code: 'JP20',\n        name: 'Nagano',\n      },\n      {\n        code: 'JP42',\n        name: 'Nagasaki',\n      },\n      {\n        code: 'JP29',\n        name: 'Nara',\n      },\n      {\n        code: 'JP15',\n        name: 'Niigata',\n      },\n      {\n        code: 'JP44',\n        name: 'Oita',\n      },\n      {\n        code: 'JP33',\n        name: 'Okayama',\n      },\n      {\n        code: 'JP47',\n        name: 'Okinawa',\n      },\n      {\n        code: 'JP27',\n        name: 'Osaka',\n      },\n      {\n        code: 'JP41',\n        name: 'Saga',\n      },\n      {\n        code: 'JP11',\n        name: 'Saitama',\n      },\n      {\n        code: 'JP25',\n        name: 'Shiga',\n      },\n      {\n        code: 'JP32',\n        name: 'Shimane',\n      },\n      {\n        code: 'JP22',\n        name: 'Shizuoka',\n      },\n      {\n        code: 'JP09',\n        name: 'Tochigi',\n      },\n      {\n        code: 'JP36',\n        name: 'Tokushima',\n      },\n      {\n        code: 'JP13',\n        name: 'Tokyo',\n      },\n      {\n        code: 'JP31',\n        name: 'Tottori',\n      },\n      {\n        code: 'JP16',\n        name: 'Toyama',\n      },\n      {\n        code: 'JP30',\n        name: 'Wakayama',\n      },\n      {\n        code: 'JP06',\n        name: 'Yamagata',\n      },\n      {\n        code: 'JP35',\n        name: 'Yamaguchi',\n      },\n      {\n        code: 'JP19',\n        name: 'Yamanashi',\n      },\n    ],\n  },\n  {\n    code: 'JE',\n    id: 2422,\n    name: 'Jersey',\n    states: [],\n  },\n  {\n    code: 'JO',\n    id: 2271,\n    name: 'Jordan',\n    states: [\n      {\n        code: 'JO01',\n        name: 'Ajlun',\n      },\n      {\n        code: 'JO02',\n        name: 'Amman',\n      },\n      {\n        code: 'JO03',\n        name: 'Aqaba',\n      },\n      {\n        code: 'JO04',\n        name: 'Balqa',\n      },\n      {\n        code: 'JO05',\n        name: 'Irbid',\n      },\n      {\n        code: 'JO06',\n        name: 'JarasJ',\n      },\n      {\n        code: 'JO07',\n        name: 'Karak',\n      },\n      {\n        code: 'JO08',\n        name: \"Ma'an\",\n      },\n      {\n        code: 'JO09',\n        name: 'Madaba',\n      },\n      {\n        code: 'JO10',\n        name: 'Mafraq',\n      },\n      {\n        code: 'JO11',\n        name: 'Tafilah',\n      },\n      {\n        code: 'JO12',\n        name: 'Zarqa',\n      },\n    ],\n  },\n  {\n    code: 'KZ',\n    id: 2272,\n    name: 'Kazakhstan',\n    states: [\n      {\n        code: 'KZ01',\n        name: 'Almaty',\n      },\n      {\n        code: 'KZ02',\n        name: 'Almaty (City)',\n      },\n      {\n        code: 'KZ03',\n        name: 'Aqmola',\n      },\n      {\n        code: 'KZ04',\n        name: 'Aqtöbe',\n      },\n      {\n        code: 'KZ05',\n        name: 'Astana',\n      },\n      {\n        code: 'KZ06',\n        name: 'Atyrau',\n      },\n      {\n        code: 'KZ08',\n        name: 'Bayqonyr',\n      },\n      {\n        code: 'KZ15',\n        name: 'East Kazakhstan',\n      },\n      {\n        code: 'KZ09',\n        name: 'Mangghystau',\n      },\n      {\n        code: 'KZ16',\n        name: 'North Kazakhstan',\n      },\n      {\n        code: 'KZ11',\n        name: 'Pavlodar',\n      },\n      {\n        code: 'KZ12',\n        name: 'Qaraghandy',\n      },\n      {\n        code: 'KZ13',\n        name: 'Qostanay',\n      },\n      {\n        code: 'KZ14',\n        name: 'Qyzylorda',\n      },\n      {\n        code: 'KZ10',\n        name: 'South Kazakhstan',\n      },\n      {\n        code: 'KZ07',\n        name: 'West Kazakhstan',\n      },\n      {\n        code: 'KZ17',\n        name: 'Zhambyl',\n      },\n    ],\n  },\n  {\n    code: 'KE',\n    id: 2273,\n    name: 'Kenya',\n    states: [\n      {\n        code: 'KE10',\n        name: 'Baringo',\n      },\n      {\n        code: 'KE11',\n        name: 'Bomet',\n      },\n      {\n        code: 'KE12',\n        name: 'Bungoma',\n      },\n      {\n        code: 'KE13',\n        name: 'Busia',\n      },\n      {\n        code: 'KE14',\n        name: 'Elgeyo Marakwet',\n      },\n      {\n        code: 'KE15',\n        name: 'Embu',\n      },\n      {\n        code: 'KE16',\n        name: 'Garissa',\n      },\n      {\n        code: 'KE17',\n        name: 'Homa Bay',\n      },\n      {\n        code: 'KE18',\n        name: 'Isiolo',\n      },\n      {\n        code: 'KE19',\n        name: 'Kajiado',\n      },\n      {\n        code: 'KE20',\n        name: 'Kakamega',\n      },\n      {\n        code: 'KE21',\n        name: 'Kericho',\n      },\n      {\n        code: 'KE22',\n        name: 'Kiambu',\n      },\n      {\n        code: 'KE23',\n        name: 'Kilifi',\n      },\n      {\n        code: 'KE24',\n        name: 'Kirinyaga',\n      },\n      {\n        code: 'KE25',\n        name: 'Kisii',\n      },\n      {\n        code: 'KE26',\n        name: 'Kisumu',\n      },\n      {\n        code: 'KE27',\n        name: 'Kitui',\n      },\n      {\n        code: 'KE28',\n        name: 'Kwale',\n      },\n      {\n        code: 'KE29',\n        name: 'Laikipia',\n      },\n      {\n        code: 'KE30',\n        name: 'Lamu',\n      },\n      {\n        code: 'KE31',\n        name: 'Machakos',\n      },\n      {\n        code: 'KE32',\n        name: 'Makueni',\n      },\n      {\n        code: 'KE33',\n        name: 'Mandera',\n      },\n      {\n        code: 'KE34',\n        name: 'Marsabit',\n      },\n      {\n        code: 'KE35',\n        name: 'Meru',\n      },\n      {\n        code: 'KE36',\n        name: 'Migori',\n      },\n      {\n        code: 'KE37',\n        name: 'Mombasa',\n      },\n      {\n        code: 'KE38',\n        name: 'Murang',\n      },\n      {\n        code: 'KE05',\n        name: 'Nairobi',\n      },\n      {\n        code: 'KE39',\n        name: 'Nakuru',\n      },\n      {\n        code: 'KE40',\n        name: 'Nandi',\n      },\n      {\n        code: 'KE41',\n        name: 'Narok',\n      },\n      {\n        code: 'KE42',\n        name: 'Nyamira',\n      },\n      {\n        code: 'KE43',\n        name: 'Nyandarua',\n      },\n      {\n        code: 'KE44',\n        name: 'Nyeri',\n      },\n      {\n        code: 'KE45',\n        name: 'Samburu',\n      },\n      {\n        code: 'KE46',\n        name: 'Siaya',\n      },\n      {\n        code: 'KE47',\n        name: 'Taita Taveta',\n      },\n      {\n        code: 'KE48',\n        name: 'Tana River',\n      },\n      {\n        code: 'KE49',\n        name: 'Tharaka Nithi',\n      },\n      {\n        code: 'KE50',\n        name: 'Trans Nzoia',\n      },\n      {\n        code: 'KE51',\n        name: 'Turkana',\n      },\n      {\n        code: 'KE52',\n        name: 'Uasin Gishu',\n      },\n      {\n        code: 'KE53',\n        name: 'Vihiga',\n      },\n      {\n        code: 'KE54',\n        name: 'Wajir',\n      },\n      {\n        code: 'KE55',\n        name: 'West Pokot',\n      },\n    ],\n  },\n  {\n    code: 'KI',\n    id: 2391,\n    name: 'Kiribati',\n    states: [],\n  },\n  {\n    code: 'KP',\n    id: 2274,\n    name: \"Korea; Democratic People's Republic Of (North)\",\n    states: [\n      {\n        code: 'KN01',\n        name: 'Chagang-do',\n      },\n      {\n        code: 'KN17',\n        name: 'Hamgyong-bukto',\n      },\n      {\n        code: 'KN03',\n        name: 'Hamgyong-namdo',\n      },\n      {\n        code: 'KN07',\n        name: 'Hwanghae-bukto',\n      },\n      {\n        code: 'KN06',\n        name: 'Hwanghae-namdo',\n      },\n      {\n        code: 'KN09',\n        name: 'Kangwon-do',\n      },\n      {\n        code: 'KN18',\n        name: 'Najin Sonbong-si',\n      },\n      {\n        code: 'KN11',\n        name: \"P'yongan-bukto\",\n      },\n      {\n        code: 'KN15',\n        name: \"P'yongan-namdo\",\n      },\n      {\n        code: 'KN12',\n        name: \"P'yongyang-si\",\n      },\n      {\n        code: 'KN13',\n        name: 'Yanggang-do',\n      },\n    ],\n  },\n  {\n    code: 'KR',\n    id: 2275,\n    name: 'Korea; Republic Of (South)',\n    states: [\n      {\n        code: 'KS10',\n        name: 'Busan',\n      },\n      {\n        code: 'KS05',\n        name: 'Chungcheongbuk-do',\n      },\n      {\n        code: 'KS17',\n        name: 'Chungcheongnam-do',\n      },\n      {\n        code: 'KS15',\n        name: 'Daegu',\n      },\n      {\n        code: 'KS19',\n        name: 'Daejeon',\n      },\n      {\n        code: 'KS06',\n        name: 'Gangwon-do',\n      },\n      {\n        code: 'KS18',\n        name: 'Gwangju',\n      },\n      {\n        code: 'KS13',\n        name: 'Gyeonggi-do',\n      },\n      {\n        code: 'KS14',\n        name: 'Gyeongsangbuk-do',\n      },\n      {\n        code: 'KS20',\n        name: 'Gyeongsangnam-do',\n      },\n      {\n        code: 'KS12',\n        name: 'Incheon',\n      },\n      {\n        code: 'KS01',\n        name: 'Jeju-do',\n      },\n      {\n        code: 'KS03',\n        name: 'Jeollabuk-do',\n      },\n      {\n        code: 'KS16',\n        name: 'Jeollanam-do',\n      },\n      {\n        code: 'KS22',\n        name: 'Sejong',\n      },\n      {\n        code: 'KS11',\n        name: 'Seoul',\n      },\n      {\n        code: 'KS21',\n        name: 'Ulsan',\n      },\n    ],\n  },\n  {\n    code: 'KV',\n    id: 2392,\n    name: 'Kosovo',\n    states: [],\n  },\n  {\n    code: 'KW',\n    id: 2276,\n    name: 'Kuwait',\n    states: [\n      {\n        code: 'KU04',\n        name: 'Al Ahmadi',\n      },\n      {\n        code: 'KU07',\n        name: 'Al Farwaniyah',\n      },\n      {\n        code: 'KU05',\n        name: 'Al Jahrah',\n      },\n      {\n        code: 'KU02',\n        name: 'Al Kuwayt',\n      },\n      {\n        code: 'KU08',\n        name: 'Hawalli',\n      },\n      {\n        code: 'KU09',\n        name: 'Mubarak Al-Kabir',\n      },\n    ],\n  },\n  {\n    code: 'KG',\n    id: 2277,\n    name: 'Kyrgyzstan',\n    states: [\n      {\n        code: 'KG09',\n        name: 'Batken',\n      },\n      {\n        code: 'KG01',\n        name: 'Bishkek',\n      },\n      {\n        code: 'KG02',\n        name: 'Chüy',\n      },\n      {\n        code: 'KG03',\n        name: 'Jalal-Abad',\n      },\n      {\n        code: 'KG04',\n        name: 'Naryn',\n      },\n      {\n        code: 'KG10',\n        name: 'Osh [City]',\n      },\n      {\n        code: 'KG08',\n        name: 'Osh',\n      },\n      {\n        code: 'KG06',\n        name: 'Talas',\n      },\n      {\n        code: 'KG07',\n        name: 'Ysyk-Köl',\n      },\n    ],\n  },\n  {\n    code: 'LA',\n    id: 2278,\n    name: \"Lao People's Democratic Republic\",\n    states: [\n      {\n        code: 'LA01',\n        name: 'Attapu',\n      },\n      {\n        code: 'LA22',\n        name: 'Bokeo',\n      },\n      {\n        code: 'LA23',\n        name: 'Bolikhamxai',\n      },\n      {\n        code: 'LA02',\n        name: 'Champasak',\n      },\n      {\n        code: 'LA03',\n        name: 'Houaphan',\n      },\n      {\n        code: 'LA15',\n        name: 'Khammouan',\n      },\n      {\n        code: 'LA16',\n        name: 'Louang Namtha',\n      },\n      {\n        code: 'LA17',\n        name: 'Louangphrabang',\n      },\n      {\n        code: 'LA07',\n        name: 'Oudômxai',\n      },\n      {\n        code: 'LA18',\n        name: 'Phôngsali',\n      },\n      {\n        code: 'LA19',\n        name: 'Saravan',\n      },\n      {\n        code: 'LA20',\n        name: 'Savannakhét',\n      },\n      {\n        code: 'LA27',\n        name: 'Vientiane',\n      },\n      {\n        code: 'LA24',\n        name: 'Vientiane [prefecture]',\n      },\n      {\n        code: 'LA13',\n        name: 'Xaignabouri',\n      },\n      {\n        code: 'LA28',\n        name: 'Xaisômboun',\n      },\n      {\n        code: 'LA26',\n        name: 'Xékong',\n      },\n      {\n        code: 'LA14',\n        name: 'Xiangkhoang',\n      },\n    ],\n  },\n  {\n    code: 'LV',\n    id: 2279,\n    name: 'Latvia',\n    states: [\n      {\n        code: 'LG34',\n        name: 'Adaži',\n      },\n      {\n        code: 'LG35',\n        name: 'Aglona',\n      },\n      {\n        code: 'LG36',\n        name: 'Aizkraukle',\n      },\n      {\n        code: 'LG37',\n        name: 'Aizpute',\n      },\n      {\n        code: 'LG38',\n        name: 'Akniste',\n      },\n      {\n        code: 'LG39',\n        name: 'Aloja',\n      },\n      {\n        code: 'LG40',\n        name: 'Alsunga',\n      },\n      {\n        code: 'LG41',\n        name: 'Aluksne',\n      },\n      {\n        code: 'LG42',\n        name: 'Amata',\n      },\n      {\n        code: 'LG43',\n        name: 'Ape',\n      },\n      {\n        code: 'LG44',\n        name: 'Auce',\n      },\n      {\n        code: 'LG45',\n        name: 'Babite',\n      },\n      {\n        code: 'LG46',\n        name: 'Baldone',\n      },\n      {\n        code: 'LG47',\n        name: 'Baltinava',\n      },\n      {\n        code: 'LG48',\n        name: 'Balvi',\n      },\n      {\n        code: 'LG49',\n        name: 'Bauska',\n      },\n      {\n        code: 'LG50',\n        name: 'Beverina',\n      },\n      {\n        code: 'LG51',\n        name: 'Broceni',\n      },\n      {\n        code: 'LG52',\n        name: 'Burtnieki',\n      },\n      {\n        code: 'LG53',\n        name: 'Carnikava',\n      },\n      {\n        code: 'LG54',\n        name: 'Cesis',\n      },\n      {\n        code: 'LG55',\n        name: 'Cesvaine',\n      },\n      {\n        code: 'LG56',\n        name: 'Cibla',\n      },\n      {\n        code: 'LG57',\n        name: 'Dagda',\n      },\n      {\n        code: 'LG06',\n        name: 'Daugavpils',\n      },\n      {\n        code: 'LG58',\n        name: 'Daugavpils',\n      },\n      {\n        code: 'LG59',\n        name: 'Dobele',\n      },\n      {\n        code: 'LG60',\n        name: 'Dundaga',\n      },\n      {\n        code: 'LG61',\n        name: 'Durbe',\n      },\n      {\n        code: 'LG62',\n        name: 'Engure',\n      },\n      {\n        code: 'LG63',\n        name: 'Ergli',\n      },\n      {\n        code: 'LG64',\n        name: 'Garkalne',\n      },\n      {\n        code: 'LG65',\n        name: 'Grobina',\n      },\n      {\n        code: 'LG66',\n        name: 'Gulbene',\n      },\n      {\n        code: 'LG67',\n        name: 'Iecava',\n      },\n      {\n        code: 'LG68',\n        name: 'Ikškile',\n      },\n      {\n        code: 'LG69',\n        name: 'Ilukste',\n      },\n      {\n        code: 'LG70',\n        name: 'Incukalns',\n      },\n      {\n        code: 'LG71',\n        name: 'Jaunjelgava',\n      },\n      {\n        code: 'LG72',\n        name: 'Jaunpiebalga',\n      },\n      {\n        code: 'LG73',\n        name: 'Jaunpils',\n      },\n      {\n        code: 'LG75',\n        name: 'Jekabpils',\n      },\n      {\n        code: 'LG74',\n        name: 'Jekabpils',\n      },\n      {\n        code: 'LG76',\n        name: 'Jelgava',\n      },\n      {\n        code: 'LG11',\n        name: 'Jelgava',\n      },\n      {\n        code: 'LG13',\n        name: 'Jurmala',\n      },\n      {\n        code: 'LG77',\n        name: 'Kandava',\n      },\n      {\n        code: 'LG78',\n        name: 'Karsava',\n      },\n      {\n        code: 'LG79',\n        name: 'Kegums',\n      },\n      {\n        code: 'LG80',\n        name: 'Kekava',\n      },\n      {\n        code: 'LG81',\n        name: 'Kocenu',\n      },\n      {\n        code: 'LG82',\n        name: 'Koknese',\n      },\n      {\n        code: 'LG83',\n        name: 'Kraslava',\n      },\n      {\n        code: 'LG84',\n        name: 'Krimulda',\n      },\n      {\n        code: 'LG85',\n        name: 'Krustpils',\n      },\n      {\n        code: 'LG86',\n        name: 'Kuldiga',\n      },\n      {\n        code: 'LG87',\n        name: 'Lielvarde',\n      },\n      {\n        code: 'LG16',\n        name: 'Liepaja',\n      },\n      {\n        code: 'LG88',\n        name: 'Ligatne',\n      },\n      {\n        code: 'LG89',\n        name: 'Limbaži',\n      },\n      {\n        code: 'LG90',\n        name: 'Livani',\n      },\n      {\n        code: 'LG91',\n        name: 'Lubana',\n      },\n      {\n        code: 'LG92',\n        name: 'Ludza',\n      },\n      {\n        code: 'LG93',\n        name: 'Madona',\n      },\n      {\n        code: 'LG94',\n        name: 'Malpils',\n      },\n      {\n        code: 'LG95',\n        name: 'Marupe',\n      },\n      {\n        code: 'LG96',\n        name: 'Mazsalaca',\n      },\n      {\n        code: 'LGF1',\n        name: 'Mersraga',\n      },\n      {\n        code: 'LG97',\n        name: 'Naukšeni',\n      },\n      {\n        code: 'LG98',\n        name: 'Nereta',\n      },\n      {\n        code: 'LG99',\n        name: 'Nica',\n      },\n      {\n        code: 'LGA1',\n        name: 'Ogre',\n      },\n      {\n        code: 'LGA2',\n        name: 'Olaine',\n      },\n      {\n        code: 'LGA3',\n        name: 'Ozolnieki',\n      },\n      {\n        code: 'LGA4',\n        name: 'Pargauja',\n      },\n      {\n        code: 'LGA5',\n        name: 'Pavilosta',\n      },\n      {\n        code: 'LGA6',\n        name: 'Plavinas',\n      },\n      {\n        code: 'LGA7',\n        name: 'Preili',\n      },\n      {\n        code: 'LGA8',\n        name: 'Priekule',\n      },\n      {\n        code: 'LGA9',\n        name: 'Priekuli',\n      },\n      {\n        code: 'LGB1',\n        name: 'Rauna',\n      },\n      {\n        code: 'LGB2',\n        name: 'Rezekne',\n      },\n      {\n        code: 'LG23',\n        name: 'Rezekne',\n      },\n      {\n        code: 'LGB3',\n        name: 'Riebini',\n      },\n      {\n        code: 'LG25',\n        name: 'Riga',\n      },\n      {\n        code: 'LGB4',\n        name: 'Roja',\n      },\n      {\n        code: 'LGB5',\n        name: 'Ropaži',\n      },\n      {\n        code: 'LGB6',\n        name: 'Rucava',\n      },\n      {\n        code: 'LGB7',\n        name: 'Rugaji',\n      },\n      {\n        code: 'LGB8',\n        name: 'Rujiena',\n      },\n      {\n        code: 'LGB9',\n        name: 'Rundale',\n      },\n      {\n        code: 'LGC1',\n        name: 'Salacgriva',\n      },\n      {\n        code: 'LGC2',\n        name: 'Sala',\n      },\n      {\n        code: 'LGC3',\n        name: 'Salaspils',\n      },\n      {\n        code: 'LGC4',\n        name: 'Saldus',\n      },\n      {\n        code: 'LGC5',\n        name: 'Saulkrasti',\n      },\n      {\n        code: 'LGC6',\n        name: 'Seja',\n      },\n      {\n        code: 'LGC7',\n        name: 'Sigulda',\n      },\n      {\n        code: 'LGC8',\n        name: 'Skriveri',\n      },\n      {\n        code: 'LGC9',\n        name: 'Skrunda',\n      },\n      {\n        code: 'LGD1',\n        name: 'Smiltene',\n      },\n      {\n        code: 'LGD2',\n        name: 'Stopini',\n      },\n      {\n        code: 'LGD3',\n        name: 'Strenci',\n      },\n      {\n        code: 'LGD4',\n        name: 'Talsi',\n      },\n      {\n        code: 'LGD5',\n        name: 'Tervete',\n      },\n      {\n        code: 'LGD6',\n        name: 'Tukums',\n      },\n      {\n        code: 'LGD7',\n        name: 'Vainode',\n      },\n      {\n        code: 'LGD8',\n        name: 'Valka',\n      },\n      {\n        code: 'LGD9',\n        name: 'Valmiera',\n      },\n      {\n        code: 'LGE1',\n        name: 'Varaklani',\n      },\n      {\n        code: 'LGE2',\n        name: 'Varkava',\n      },\n      {\n        code: 'LGE3',\n        name: 'Vecpiebalga',\n      },\n      {\n        code: 'LGE4',\n        name: 'Vecumnieki',\n      },\n      {\n        code: 'LGE5',\n        name: 'Ventspils',\n      },\n      {\n        code: 'LG32',\n        name: 'Ventspils',\n      },\n      {\n        code: 'LGE6',\n        name: 'Viesite',\n      },\n      {\n        code: 'LGE7',\n        name: 'Vilaka',\n      },\n      {\n        code: 'LGE8',\n        name: 'Vilani',\n      },\n      {\n        code: 'LGE9',\n        name: 'Zilupe',\n      },\n    ],\n  },\n  {\n    code: 'LB',\n    id: 2280,\n    name: 'Lebanon',\n    states: [\n      {\n        code: 'LE10',\n        name: 'Aakkar',\n      },\n      {\n        code: 'LE07',\n        name: 'An Nabatiyah',\n      },\n      {\n        code: 'LE11',\n        name: 'Baalbek-Hermel',\n      },\n      {\n        code: 'LE04',\n        name: 'Beirut',\n      },\n      {\n        code: 'LE08',\n        name: 'Beqaa',\n      },\n      {\n        code: 'LE05',\n        name: 'Mount Lebanon',\n      },\n      {\n        code: 'LE09',\n        name: 'North Lebanon',\n      },\n      {\n        code: 'LE06',\n        name: 'South Lebanon',\n      },\n    ],\n  },\n  {\n    code: 'LS',\n    id: 2281,\n    name: 'Lesotho',\n    states: [\n      {\n        code: 'LT10',\n        name: 'Berea',\n      },\n      {\n        code: 'LT11',\n        name: 'Butha-Buthe',\n      },\n      {\n        code: 'LT12',\n        name: 'Leribe',\n      },\n      {\n        code: 'LT14',\n        name: 'Mafeteng',\n      },\n      {\n        code: 'LT13',\n        name: 'Mafeteng',\n      },\n      {\n        code: 'LT15',\n        name: \"Mohale's Hoek\",\n      },\n      {\n        code: 'LT16',\n        name: 'Mokhotlong',\n      },\n      {\n        code: 'LT17',\n        name: \"Qacha's Nek\",\n      },\n      {\n        code: 'LT18',\n        name: 'Quthing',\n      },\n      {\n        code: 'LT19',\n        name: 'Thaba-Tseka',\n      },\n    ],\n  },\n  {\n    code: 'LR',\n    id: 2282,\n    name: 'Liberia',\n    states: [\n      {\n        code: 'LI15',\n        name: 'Bomi',\n      },\n      {\n        code: 'LI01',\n        name: 'Bong',\n      },\n      {\n        code: 'LI21\\t',\n        name: 'Gbarpolu',\n      },\n      {\n        code: 'LI11',\n        name: 'Grand Bassa',\n      },\n      {\n        code: 'LI12',\n        name: 'Grand Cape Mount',\n      },\n      {\n        code: 'LI19',\n        name: 'Grand Gedeh',\n      },\n      {\n        code: 'LI16',\n        name: 'Grand Kru',\n      },\n      {\n        code: 'LI20',\n        name: 'Lofa',\n      },\n      {\n        code: 'LI17',\n        name: 'Margibi',\n      },\n      {\n        code: 'LI13',\n        name: 'Maryland',\n      },\n      {\n        code: 'LI14',\n        name: 'Montserrado',\n      },\n      {\n        code: 'LI09',\n        name: 'Nimba',\n      },\n      {\n        code: 'LI22',\n        name: 'River Gee',\n      },\n      {\n        code: 'LI18',\n        name: 'Rivercess',\n      },\n      {\n        code: 'LI10',\n        name: 'Sinoe',\n      },\n    ],\n  },\n  {\n    code: 'LY',\n    id: 2380,\n    name: 'Libyan Arab Jamahiriya',\n    states: [],\n  },\n  {\n    code: 'LI',\n    id: 2284,\n    name: 'Liechtenstein',\n    states: [],\n  },\n  {\n    code: 'LT',\n    id: 2285,\n    name: 'Lithuania',\n    states: [\n      {\n        code: 'LH56',\n        name: 'Alytus',\n      },\n      {\n        code: 'LH57',\n        name: 'Kaunas',\n      },\n      {\n        code: 'LH58',\n        name: 'Klaipeda',\n      },\n      {\n        code: 'LH59',\n        name: 'Marijampole',\n      },\n      {\n        code: 'LH60',\n        name: 'Panevežys',\n      },\n      {\n        code: 'LH61',\n        name: 'Siauliai',\n      },\n      {\n        code: 'LH62',\n        name: 'Taurage',\n      },\n      {\n        code: 'LH63',\n        name: 'Telšiai',\n      },\n      {\n        code: 'LH64',\n        name: 'Utena',\n      },\n      {\n        code: 'LH65',\n        name: 'Vilnius',\n      },\n    ],\n  },\n  {\n    code: 'LU',\n    id: 2286,\n    name: 'Luxembourg',\n    states: [\n      {\n        code: 'LU01',\n        name: 'Diekirch',\n      },\n      {\n        code: 'LU02',\n        name: 'Grevenmacher',\n      },\n      {\n        code: 'LU03',\n        name: 'Luxembourg',\n      },\n    ],\n  },\n  {\n    code: 'MO',\n    id: 2287,\n    name: 'Macau',\n    states: [],\n  },\n  {\n    code: 'MK',\n    id: 2288,\n    name: 'Macedonia',\n    states: [],\n  },\n  {\n    code: 'YU',\n    id: 2367,\n    name: 'Macedonia; the Former Yugoslav Republic',\n    states: [],\n  },\n  {\n    code: 'MG',\n    id: 2289,\n    name: 'Madagascar',\n    states: [\n      {\n        code: 'MA05',\n        name: 'Antananarivo',\n      },\n      {\n        code: 'MA01',\n        name: 'Antsiranana',\n      },\n      {\n        code: 'MA02',\n        name: 'Fianarantsoa',\n      },\n      {\n        code: 'MA03',\n        name: 'Mahajanga',\n      },\n      {\n        code: 'MA04',\n        name: 'Toamasina',\n      },\n      {\n        code: 'MA06',\n        name: 'Toliara',\n      },\n    ],\n  },\n  {\n    code: 'MW',\n    id: 2290,\n    name: 'Malawi',\n    states: [\n      {\n        code: 'MI26',\n        name: 'Balaka',\n      },\n      {\n        code: 'MI24',\n        name: 'Blantyre',\n      },\n      {\n        code: 'MI02',\n        name: 'Chikwawa',\n      },\n      {\n        code: 'MI03',\n        name: 'Chiradzulu',\n      },\n      {\n        code: 'MI04',\n        name: 'Chitipa',\n      },\n      {\n        code: 'MI06',\n        name: 'Dedza',\n      },\n      {\n        code: 'MI07',\n        name: 'Dowa',\n      },\n      {\n        code: 'MI08',\n        name: 'Karonga',\n      },\n      {\n        code: 'MI09',\n        name: 'Kasungu',\n      },\n      {\n        code: 'MI27',\n        name: 'Likoma',\n      },\n      {\n        code: 'MI11',\n        name: 'Lilongwe',\n      },\n      {\n        code: 'MI28',\n        name: 'Machinga',\n      },\n      {\n        code: 'MI12',\n        name: 'Mangochi',\n      },\n      {\n        code: 'MI13',\n        name: 'Mchinji',\n      },\n      {\n        code: 'MI29',\n        name: 'Mulanje',\n      },\n      {\n        code: 'MI25',\n        name: 'Mwanza',\n      },\n      {\n        code: 'MI15',\n        name: 'Mzimba',\n      },\n      {\n        code: 'MI31',\n        name: 'Neno',\n      },\n      {\n        code: 'MI17',\n        name: 'Nkhata Bay',\n      },\n      {\n        code: 'MI18',\n        name: 'Nkhotakota',\n      },\n      {\n        code: 'MI19',\n        name: 'Nsanje',\n      },\n      {\n        code: 'MI16',\n        name: 'Ntcheu',\n      },\n      {\n        code: 'MI20',\n        name: 'Ntchisi',\n      },\n      {\n        code: 'MI30',\n        name: 'Phalombe',\n      },\n      {\n        code: 'MI21',\n        name: 'Rumphi',\n      },\n      {\n        code: 'MI22',\n        name: 'Salima',\n      },\n      {\n        code: 'MI05',\n        name: 'Thyolo',\n      },\n      {\n        code: 'MI23',\n        name: 'Zomba',\n      },\n    ],\n  },\n  {\n    code: 'MY',\n    id: 2291,\n    name: 'Malaysia',\n    states: [\n      {\n        code: 'MY01',\n        name: 'Johor',\n      },\n      {\n        code: 'MY02',\n        name: 'Kedah',\n      },\n      {\n        code: 'MY03',\n        name: 'Kelantan',\n      },\n      {\n        code: 'MY04',\n        name: 'Melaka',\n      },\n      {\n        code: 'MY05',\n        name: 'Negeri Sembilan',\n      },\n      {\n        code: 'MY06',\n        name: 'Pahang',\n      },\n      {\n        code: 'MY08',\n        name: 'Perak',\n      },\n      {\n        code: 'MY09',\n        name: 'Perlis',\n      },\n      {\n        code: 'MY07',\n        name: 'Pulau Pinang',\n      },\n      {\n        code: 'MY12',\n        name: 'Sabah',\n      },\n      {\n        code: 'MY13',\n        name: 'Sarawak',\n      },\n      {\n        code: 'MY10',\n        name: 'Selangor',\n      },\n      {\n        code: 'MY11',\n        name: 'Terengganu',\n      },\n      {\n        code: 'MY14',\n        name: 'W.P. Kuala Lumpur',\n      },\n      {\n        code: 'MY15',\n        name: 'W.P. Labuan',\n      },\n      {\n        code: 'MY16',\n        name: 'W.P. Putrajaya',\n      },\n    ],\n  },\n  {\n    code: 'MV',\n    id: 2384,\n    name: 'Maldives; Republic of',\n    states: [],\n  },\n  {\n    code: 'ML',\n    id: 2292,\n    name: 'Mali',\n    states: [\n      {\n        code: 'ML01',\n        name: 'Bamako',\n      },\n      {\n        code: 'ML09',\n        name: 'Gao',\n      },\n      {\n        code: 'ML03',\n        name: 'Kayes',\n      },\n      {\n        code: 'ML10',\n        name: 'Kidal',\n      },\n      {\n        code: 'ML07',\n        name: 'Koulikoro',\n      },\n      {\n        code: 'ML.ME',\n        name: 'Ménaka',\n      },\n      {\n        code: 'ML04',\n        name: 'Mopti',\n      },\n      {\n        code: 'ML05',\n        name: 'Ségou',\n      },\n      {\n        code: 'ML06',\n        name: 'Sikasso',\n      },\n      {\n        code: 'ML.TD',\n        name: 'Taoudénit',\n      },\n      {\n        code: 'ML08',\n        name: 'Timbuktu',\n      },\n    ],\n  },\n  {\n    code: 'MT',\n    id: 2293,\n    name: 'Malta',\n    states: [\n      {\n        code: 'MT.CE',\n        name: 'Central',\n      },\n      {\n        code: 'MT.GO',\n        name: 'Gozo',\n      },\n      {\n        code: 'MT.NO',\n        name: 'Northern',\n      },\n      {\n        code: 'MT.SE',\n        name: 'South Eastern',\n      },\n      {\n        code: 'MT.SO',\n        name: 'Southern',\n      },\n    ],\n  },\n  {\n    code: 'RM',\n    id: 2394,\n    name: 'Marshall Islands',\n    states: [],\n  },\n  {\n    code: 'MQ',\n    id: 2423,\n    name: 'Martinique',\n    states: [],\n  },\n  {\n    code: 'MR',\n    id: 2294,\n    name: 'Mauritania',\n    states: [\n      {\n        code: 'MR07',\n        name: 'Adrar',\n      },\n      {\n        code: 'MR03',\n        name: 'Assaba',\n      },\n      {\n        code: 'MR05',\n        name: 'Brakna',\n      },\n      {\n        code: 'MR08',\n        name: 'Dakhlet Nouadhibou',\n      },\n      {\n        code: 'MR04',\n        name: 'Gorgol',\n      },\n      {\n        code: 'MR10',\n        name: 'Guidimaka',\n      },\n      {\n        code: 'MR01',\n        name: 'Hodh ech Chargui',\n      },\n      {\n        code: 'MR02',\n        name: 'Hodh el Gharbi',\n      },\n      {\n        code: 'MR12',\n        name: 'Inchiri',\n      },\n      {\n        code: 'MR.NN',\n        name: 'Nouakchott Nord',\n      },\n      {\n        code: 'MR13',\n        name: 'Nouakchott Ouest',\n      },\n      {\n        code: 'MR.NS',\n        name: 'Nouakchott Sud',\n      },\n      {\n        code: 'MR09',\n        name: 'Tagant',\n      },\n      {\n        code: 'MR11',\n        name: 'Tiris Zemmour',\n      },\n      {\n        code: 'MR06',\n        name: 'Trarza',\n      },\n    ],\n  },\n  {\n    code: 'MU',\n    id: 2295,\n    name: 'Mauritius',\n    states: [\n      {\n        code: 'MP21',\n        name: 'Agalega Islands',\n      },\n      {\n        code: 'MP12',\n        name: 'Black River',\n      },\n      {\n        code: 'MP22',\n        name: 'Cargados Carajos',\n      },\n      {\n        code: 'MP13',\n        name: 'Flacq',\n      },\n      {\n        code: 'MP14',\n        name: 'Grand Port',\n      },\n      {\n        code: 'MP15',\n        name: 'Moka',\n      },\n      {\n        code: 'MP16',\n        name: 'Pamplemousses',\n      },\n      {\n        code: 'MP17',\n        name: 'Plaines Wilhems',\n      },\n      {\n        code: 'MP18',\n        name: 'Port Louis',\n      },\n      {\n        code: 'MP19',\n        name: 'Rivière du Rempart',\n      },\n      {\n        code: 'MP23',\n        name: 'Rodrigues',\n      },\n      {\n        code: 'MP20',\n        name: 'Savanne',\n      },\n    ],\n  },\n  {\n    code: 'M999',\n    id: 2393,\n    name: 'Mayotte',\n    states: [],\n  },\n  {\n    code: 'MX',\n    id: 2296,\n    name: 'Mexico',\n    states: [\n      {\n        code: 'AGU',\n        name: 'Aguascalientes',\n      },\n      {\n        code: 'BCS',\n        name: 'Baja California Sur',\n      },\n      {\n        code: 'BCN',\n        name: 'Baja California',\n      },\n      {\n        code: 'CAM',\n        name: 'Campeche',\n      },\n      {\n        code: 'CHP',\n        name: 'Chiapas',\n      },\n      {\n        code: 'CHH',\n        name: 'Chihuahua',\n      },\n      {\n        code: 'COA',\n        name: 'Coahuila',\n      },\n      {\n        code: 'COL',\n        name: 'Colima',\n      },\n      {\n        code: 'DIF',\n        name: 'Distrito Federal',\n      },\n      {\n        code: 'DUR',\n        name: 'Durango',\n      },\n      {\n        code: 'GUA',\n        name: 'Guanajuato',\n      },\n      {\n        code: 'GRO',\n        name: 'Guerrero',\n      },\n      {\n        code: 'HID',\n        name: 'Hidalgo',\n      },\n      {\n        code: 'JAL',\n        name: 'Jalisco',\n      },\n      {\n        code: 'MEX',\n        name: 'México',\n      },\n      {\n        code: 'MIC',\n        name: 'Michoacán',\n      },\n      {\n        code: 'MOR',\n        name: 'Morelos',\n      },\n      {\n        code: 'NAY',\n        name: 'Nayarit',\n      },\n      {\n        code: 'NLE',\n        name: 'Nuevo León',\n      },\n      {\n        code: 'OAX',\n        name: 'Oaxaca',\n      },\n      {\n        code: 'PUE',\n        name: 'Puebla',\n      },\n      {\n        code: 'QUE',\n        name: 'Querétaro',\n      },\n      {\n        code: 'ROO',\n        name: 'Quintana Roo',\n      },\n      {\n        code: 'SLP',\n        name: 'San Luis Potosí',\n      },\n      {\n        code: 'SIN',\n        name: 'Sinaloa',\n      },\n      {\n        code: 'SON',\n        name: 'Sonora',\n      },\n      {\n        code: 'TAB',\n        name: 'Tabasco',\n      },\n      {\n        code: 'TAM',\n        name: 'Tamaulipas',\n      },\n      {\n        code: 'TLA',\n        name: 'Tlaxcala',\n      },\n      {\n        code: 'VER',\n        name: 'Veracruz',\n      },\n      {\n        code: 'YUC',\n        name: 'Yucatán',\n      },\n      {\n        code: 'ZAC',\n        name: 'Zacatecas',\n      },\n    ],\n  },\n  {\n    code: 'FM',\n    id: 2297,\n    name: 'Micronesia; Federated States of',\n    states: [\n      {\n        code: 'FM03',\n        name: 'Chuuk',\n      },\n      {\n        code: 'FM01',\n        name: 'Kosrae',\n      },\n      {\n        code: 'FM02',\n        name: 'Pohnpei',\n      },\n      {\n        code: 'FM04',\n        name: 'Yap',\n      },\n    ],\n  },\n  {\n    code: 'MD',\n    id: 2395,\n    name: 'Moldova; Republic of',\n    states: [],\n  },\n  {\n    code: 'MC',\n    id: 2299,\n    name: 'Monaco',\n    states: [],\n  },\n  {\n    code: 'MN',\n    id: 2300,\n    name: 'Mongolia',\n    states: [],\n  },\n  {\n    code: 'MJ',\n    id: 2396,\n    name: 'Montenegro',\n    states: [\n      {\n        code: 'ME-1',\n        name: 'Andrijevica',\n      },\n      {\n        code: 'ME-2',\n        name: 'Bar',\n      },\n      {\n        code: 'ME-3',\n        name: 'Berane',\n      },\n      {\n        code: 'ME-4',\n        name: 'Bijelo Polje',\n      },\n      {\n        code: 'ME-5',\n        name: 'Budva',\n      },\n      {\n        code: 'ME-6',\n        name: 'Cetinje',\n      },\n      {\n        code: 'ME-7',\n        name: 'Danilovgrad',\n      },\n      {\n        code: 'ME-8',\n        name: 'Herceg Novi',\n      },\n      {\n        code: 'ME-9',\n        name: 'Kolašin',\n      },\n      {\n        code: 'ME-10',\n        name: 'Kotor',\n      },\n      {\n        code: 'ME-11',\n        name: 'Mojkovac',\n      },\n      {\n        code: 'ME-12',\n        name: 'Nikšic',\n      },\n      {\n        code: 'ME-13',\n        name: 'Plav',\n      },\n      {\n        code: 'ME-14',\n        name: 'Pljevlja',\n      },\n      {\n        code: 'ME-15',\n        name: 'Plužine',\n      },\n      {\n        code: 'ME-16',\n        name: 'Podgorica',\n      },\n      {\n        code: 'ME-17',\n        name: 'Rožaje',\n      },\n      {\n        code: 'ME-18',\n        name: 'Šavnik',\n      },\n      {\n        code: 'ME-19',\n        name: 'Tivat',\n      },\n      {\n        code: 'ME-20',\n        name: 'Ulcinj',\n      },\n      {\n        code: 'ME-21',\n        name: 'Žabljak',\n      },\n    ],\n  },\n  {\n    code: 'MS',\n    id: 2424,\n    name: 'Montserrat',\n    states: [],\n  },\n  {\n    code: 'MA',\n    id: 2301,\n    name: 'Morocco',\n    states: [\n      {\n        code: 'MA.BK',\n        name: 'Béni Mellal-Khénifra',\n      },\n      {\n        code: 'MA.CS',\n        name: 'Casablanca-Settat',\n      },\n      {\n        code: 'MA.OL',\n        name: 'Dakhla-Oued Ed-Dahab',\n      },\n      {\n        code: 'MA.DT',\n        name: 'Drâa-Tafilalet',\n      },\n      {\n        code: 'MA.FK',\n        name: 'Fès-Meknès',\n      },\n      {\n        code: 'MA.GN',\n        name: 'Guelmim-Oued Noun',\n      },\n      {\n        code: 'MA.OF',\n        name: \"L'oriental\",\n      },\n      {\n        code: 'MA.LS',\n        name: 'Laâyoune-Sakia al Hamra',\n      },\n      {\n        code: 'MA.MS',\n        name: 'Marrakech-Safi',\n      },\n      {\n        code: 'MA.RK',\n        name: 'Rabat-Salé-Kénitra',\n      },\n      {\n        code: 'MA.SS',\n        name: 'Souss-Massa',\n      },\n      {\n        code: 'MA.TC',\n        name: 'Tanger-Tétouan-Al Hoceima',\n      },\n    ],\n  },\n  {\n    code: 'MZ',\n    id: 2302,\n    name: 'Mozambique',\n    states: [\n      {\n        code: 'MZ01',\n        name: 'Cabo Delgado',\n      },\n      {\n        code: 'MZ02',\n        name: 'Gaza',\n      },\n      {\n        code: 'MZ03',\n        name: 'Inhambane',\n      },\n      {\n        code: 'MZ10',\n        name: 'Manica',\n      },\n      {\n        code: 'MZ11',\n        name: 'Maputo [city]',\n      },\n      {\n        code: 'MZ04',\n        name: 'Maputo',\n      },\n      {\n        code: 'MZ06',\n        name: 'Nampula',\n      },\n      {\n        code: 'MZ07',\n        name: 'Niassa',\n      },\n      {\n        code: 'MZ05',\n        name: 'Sofala',\n      },\n      {\n        code: 'MZ08',\n        name: 'Tete',\n      },\n      {\n        code: 'MZ09',\n        name: 'Zambézia',\n      },\n    ],\n  },\n  {\n    code: 'MM',\n    id: 2303,\n    name: 'Myanmar',\n    states: [\n      {\n        code: 'MM.AY',\n        name: 'Ayeyarwady',\n      },\n      {\n        code: 'MM.BA',\n        name: 'Bago',\n      },\n      {\n        code: 'MM.CH',\n        name: 'Chin',\n      },\n      {\n        code: 'MM.KC',\n        name: 'Kachin',\n      },\n      {\n        code: 'MM.KH',\n        name: 'Kayah',\n      },\n      {\n        code: 'MM.KN',\n        name: 'Kayin',\n      },\n      {\n        code: 'MM.MG',\n        name: 'Magway',\n      },\n      {\n        code: 'MM.ML',\n        name: 'Mandalay',\n      },\n      {\n        code: 'MM.MO',\n        name: 'Mon',\n      },\n      {\n        code: 'MM.NY',\n        name: 'Naypyidaw',\n      },\n      {\n        code: 'MM.RA',\n        name: 'Rakhine',\n      },\n      {\n        code: 'MM.SA',\n        name: 'Sagaing',\n      },\n      {\n        code: 'MM.SH',\n        name: 'Shan',\n      },\n      {\n        code: 'MM.TN',\n        name: 'Tanintharyi',\n      },\n      {\n        code: 'MM.YA',\n        name: 'Yangon',\n      },\n    ],\n  },\n  {\n    code: 'NA',\n    id: 2304,\n    name: 'Namibia',\n    states: [\n      {\n        code: 'WA29',\n        name: 'Erongo',\n      },\n      {\n        code: 'WA30',\n        name: 'Hardap',\n      },\n      {\n        code: 'WA31',\n        name: 'Karas',\n      },\n      {\n        code: 'WA40',\n        name: 'Kavango East',\n      },\n      {\n        code: 'WA41',\n        name: 'Kavango West',\n      },\n      {\n        code: 'WA21',\n        name: 'Khomas',\n      },\n      {\n        code: 'WA32',\n        name: 'Kunene',\n      },\n      {\n        code: 'WA33',\n        name: 'Ohangwena',\n      },\n      {\n        code: 'WA35',\n        name: 'Omaheke',\n      },\n      {\n        code: 'WA36',\n        name: 'Omusati',\n      },\n      {\n        code: 'WA37',\n        name: 'Oshana',\n      },\n      {\n        code: 'WA38',\n        name: 'Oshikoto',\n      },\n      {\n        code: 'WA39',\n        name: 'Otjozondjupa',\n      },\n      {\n        code: 'WA28',\n        name: 'Zambezi',\n      },\n    ],\n  },\n  {\n    code: 'NR',\n    id: 2397,\n    name: 'Nauru',\n    states: [],\n  },\n  {\n    code: 'NP',\n    id: 2305,\n    name: 'Nepal',\n    states: [\n      {\n        code: 'NP.FI',\n        name: 'Five',\n      },\n      {\n        code: 'NP.FO',\n        name: 'Four',\n      },\n      {\n        code: 'NP.ON',\n        name: 'One',\n      },\n      {\n        code: 'NP.SE',\n        name: 'Seven',\n      },\n      {\n        code: 'NP.SI',\n        name: 'Six',\n      },\n      {\n        code: 'NP.TH',\n        name: 'Three',\n      },\n      {\n        code: 'NP.TW',\n        name: 'Two',\n      },\n    ],\n  },\n  {\n    code: 'NL',\n    id: 2306,\n    name: 'Netherlands',\n    states: [\n      {\n        code: 'DR',\n        name: 'Drenthe',\n      },\n      {\n        code: 'FL',\n        name: 'Flevoland',\n      },\n      {\n        code: 'FR',\n        name: 'Friesland',\n      },\n      {\n        code: 'GE',\n        name: 'Gelderland',\n      },\n      {\n        code: 'GR',\n        name: 'Groningen',\n      },\n      {\n        code: 'LI',\n        name: 'Limburg',\n      },\n      {\n        code: 'NB',\n        name: 'Noord-Brabant',\n      },\n      {\n        code: 'NH',\n        name: 'Noord-Holland',\n      },\n      {\n        code: 'OV',\n        name: 'Overijssel',\n      },\n      {\n        code: 'UT',\n        name: 'Utrecht',\n      },\n      {\n        code: 'ZE',\n        name: 'Zeeland',\n      },\n      {\n        code: 'ZH',\n        name: 'Zuid-Holland',\n      },\n    ],\n  },\n  {\n    code: 'AN',\n    id: 2425,\n    name: 'Netherlands Antilles',\n    states: [],\n  },\n  {\n    code: 'NC',\n    id: 2426,\n    name: 'New Caledonia',\n    states: [],\n  },\n  {\n    code: 'NZ',\n    id: 2307,\n    name: 'New Zealand',\n    states: [\n      {\n        code: 'AUK',\n        name: 'Auckland',\n      },\n      {\n        code: 'BOP',\n        name: 'Bay of Plenty',\n      },\n      {\n        code: 'CAN',\n        name: 'Canterbury',\n      },\n      {\n        code: 'CIT',\n        name: 'Chatham Islands Territory',\n      },\n      {\n        code: 'GIS',\n        name: 'Gisborne',\n      },\n      {\n        code: 'HKB',\n        name: \"Hawke's Bay\",\n      },\n      {\n        code: 'MWT',\n        name: 'Manawatu-Wanganui',\n      },\n      {\n        code: 'MBH',\n        name: 'Marlborough',\n      },\n      {\n        code: 'NSN',\n        name: 'Nelson',\n      },\n      {\n        code: 'N',\n        name: 'North Island',\n      },\n      {\n        code: 'NTL',\n        name: 'Northland',\n      },\n      {\n        code: 'OTA',\n        name: 'Otago',\n      },\n      {\n        code: 'S',\n        name: 'South Island',\n      },\n      {\n        code: 'STL',\n        name: 'Southland',\n      },\n      {\n        code: 'TKI',\n        name: 'Taranaki',\n      },\n      {\n        code: 'TAS',\n        name: 'Tasman District',\n      },\n      {\n        code: 'WKO',\n        name: 'Waikato',\n      },\n      {\n        code: 'WGN',\n        name: 'Wellington',\n      },\n      {\n        code: 'WTC',\n        name: 'West Coast',\n      },\n    ],\n  },\n  {\n    code: 'NI',\n    id: 2308,\n    name: 'Nicaragua',\n    states: [\n      {\n        code: 'NU01',\n        name: 'Boaco',\n      },\n      {\n        code: 'NU02',\n        name: 'Carazo',\n      },\n      {\n        code: 'NU03',\n        name: 'Chinandega',\n      },\n      {\n        code: 'NU04',\n        name: 'Chontales',\n      },\n      {\n        code: 'NU05',\n        name: 'Estelí',\n      },\n      {\n        code: 'NU06',\n        name: 'Granada',\n      },\n      {\n        code: 'NU07',\n        name: 'Jinotega',\n      },\n      {\n        code: 'NU08',\n        name: 'León',\n      },\n      {\n        code: 'NU09',\n        name: 'Madriz',\n      },\n      {\n        code: 'NU10',\n        name: 'Managua',\n      },\n      {\n        code: 'NU11',\n        name: 'Masaya',\n      },\n      {\n        code: 'NU12',\n        name: 'Matagalpa',\n      },\n      {\n        code: 'NU13',\n        name: 'Nueva Segovia',\n      },\n      {\n        code: 'NU17',\n        name: 'Región Autónoma del Caribe Norte',\n      },\n      {\n        code: 'NU18',\n        name: 'Región Autónoma del Caribe Sur',\n      },\n      {\n        code: 'NU14',\n        name: 'Río San Juan',\n      },\n      {\n        code: 'NU15',\n        name: 'Rivas',\n      },\n    ],\n  },\n  {\n    code: 'NE',\n    id: 2309,\n    name: 'Niger',\n    states: [\n      {\n        code: 'NG01',\n        name: 'Agadez',\n      },\n      {\n        code: 'NG02',\n        name: 'Diffa',\n      },\n      {\n        code: 'NG03',\n        name: 'Dosso',\n      },\n      {\n        code: 'NG04',\n        name: 'Maradi',\n      },\n      {\n        code: 'NG08',\n        name: 'Niamey',\n      },\n      {\n        code: 'NG06',\n        name: 'Tahoua',\n      },\n      {\n        code: 'NG09',\n        name: 'Tillabéri',\n      },\n      {\n        code: 'NG07',\n        name: 'Zinder',\n      },\n    ],\n  },\n  {\n    code: 'NG',\n    id: 2310,\n    name: 'Nigeria',\n    states: [\n      {\n        code: 'NI45',\n        name: 'Abia',\n      },\n      {\n        code: 'NI35',\n        name: 'Adamawa',\n      },\n      {\n        code: 'NI21',\n        name: 'Akwa Ibom',\n      },\n      {\n        code: 'NI25',\n        name: 'Anambra',\n      },\n      {\n        code: 'NI46',\n        name: 'Bauchi',\n      },\n      {\n        code: 'NI52',\n        name: 'Bayelsa',\n      },\n      {\n        code: 'NI26',\n        name: 'Benue',\n      },\n      {\n        code: 'NI27',\n        name: 'Borno',\n      },\n      {\n        code: 'NI22',\n        name: 'Cross River',\n      },\n      {\n        code: 'NI36',\n        name: 'Delta',\n      },\n      {\n        code: 'NI53',\n        name: 'Ebonyi',\n      },\n      {\n        code: 'NI37',\n        name: 'Edo',\n      },\n      {\n        code: 'NI54',\n        name: 'Ekiti',\n      },\n      {\n        code: 'NI47',\n        name: 'Enugu',\n      },\n      {\n        code: 'NI11',\n        name: 'Federal Capital Territory',\n      },\n      {\n        code: 'NI55',\n        name: 'Gombe',\n      },\n      {\n        code: 'NI28',\n        name: 'Imo',\n      },\n      {\n        code: 'NI39',\n        name: 'Jigawa',\n      },\n      {\n        code: 'NI23',\n        name: 'Kaduna',\n      },\n      {\n        code: 'NI29',\n        name: 'Kano',\n      },\n      {\n        code: 'NI24',\n        name: 'Katsina',\n      },\n      {\n        code: 'NI40',\n        name: 'Kebbi',\n      },\n      {\n        code: 'NI41',\n        name: 'Kogi',\n      },\n      {\n        code: 'NI30',\n        name: 'Kwara',\n      },\n      {\n        code: 'NI05',\n        name: 'Lagos',\n      },\n      {\n        code: 'NI56',\n        name: 'Nassarawa',\n      },\n      {\n        code: 'NI31',\n        name: 'Niger',\n      },\n      {\n        code: 'NI16',\n        name: 'Ogun',\n      },\n      {\n        code: 'NI48',\n        name: 'Ondo',\n      },\n      {\n        code: 'NI42',\n        name: 'Osun',\n      },\n      {\n        code: 'NI32',\n        name: 'Oyo',\n      },\n      {\n        code: 'NI49',\n        name: 'Plateau',\n      },\n      {\n        code: 'NI50',\n        name: 'Rivers',\n      },\n      {\n        code: 'NI51',\n        name: 'Sokoto',\n      },\n      {\n        code: 'NI43',\n        name: 'Taraba',\n      },\n      {\n        code: 'NI44',\n        name: 'Yobe',\n      },\n      {\n        code: 'NI57',\n        name: 'Zamfara',\n      },\n    ],\n  },\n  {\n    code: 'NU',\n    id: 2427,\n    name: 'Niue',\n    states: [],\n  },\n  {\n    code: 'NF',\n    id: 2428,\n    name: 'Norfolk Island',\n    states: [],\n  },\n  {\n    code: 'MP',\n    id: 2429,\n    name: 'Northern Mariana Islands',\n    states: [],\n  },\n  {\n    code: 'NO',\n    id: 2311,\n    name: 'Norway',\n    states: [\n      {\n        code: 'NO02',\n        name: 'Akershus',\n      },\n      {\n        code: 'NO09',\n        name: 'Aust-Agder',\n      },\n      {\n        code: 'NO06',\n        name: 'Buskerud',\n      },\n      {\n        code: 'NO20',\n        name: 'Finnmark',\n      },\n      {\n        code: 'NO04',\n        name: 'Hedmark',\n      },\n      {\n        code: 'NO12',\n        name: 'Hordaland',\n      },\n      {\n        code: 'NO22',\n        name: 'Jan Mayen (Arctic Region)',\n      },\n      {\n        code: 'NO15',\n        name: 'Møre og Romsdal',\n      },\n      {\n        code: 'NO17',\n        name: 'Nord-Trøndelag',\n      },\n      {\n        code: 'NO18',\n        name: 'Nordland',\n      },\n      {\n        code: 'NO05',\n        name: 'Oppland',\n      },\n      {\n        code: 'NO03',\n        name: 'Oslo',\n      },\n      {\n        code: 'NO01',\n        name: 'Østfold',\n      },\n      {\n        code: 'NO11',\n        name: 'Rogaland',\n      },\n      {\n        code: 'NO14',\n        name: 'Sogn og Fjordane',\n      },\n      {\n        code: 'NO16',\n        name: 'Sør-Trøndelag',\n      },\n      {\n        code: 'NO21',\n        name: 'Svalbard (Arctic Region)',\n      },\n      {\n        code: 'NO08',\n        name: 'Telemark',\n      },\n      {\n        code: 'NO19',\n        name: 'Troms',\n      },\n      {\n        code: 'NO10',\n        name: 'Vest-Agder',\n      },\n      {\n        code: 'NO07',\n        name: 'Vestfold',\n      },\n    ],\n  },\n  {\n    code: 'OM',\n    id: 2312,\n    name: 'Oman',\n    states: [\n      {\n        code: 'MU01',\n        name: 'Ad Dakhliyah',\n      },\n      {\n        code: 'MU09',\n        name: 'Adh Dhahirah',\n      },\n      {\n        code: 'MU11',\n        name: 'Al Batinah North',\n      },\n      {\n        code: 'MU02',\n        name: 'Al Batinah South',\n      },\n      {\n        code: 'MU10',\n        name: 'Al Buraymi',\n      },\n      {\n        code: 'MU03',\n        name: 'Al Wusta',\n      },\n      {\n        code: 'MU12',\n        name: 'Ash Sharqiyah North',\n      },\n      {\n        code: 'MU04',\n        name: 'Ash Sharqiyah South',\n      },\n      {\n        code: 'MU08',\n        name: 'Dhofar',\n      },\n      {\n        code: 'MU07',\n        name: 'Musandam',\n      },\n      {\n        code: 'MU06',\n        name: 'Muscat',\n      },\n    ],\n  },\n  {\n    code: 'PK',\n    id: 2313,\n    name: 'Pakistan',\n    states: [\n      {\n        code: 'PK06',\n        name: 'Azad Kashmir',\n      },\n      {\n        code: 'PK02',\n        name: 'Balochistan',\n      },\n      {\n        code: 'PK01',\n        name: 'Federally Administered Tribal Areas',\n      },\n      {\n        code: 'PK07',\n        name: 'Gilgit-Baltistan',\n      },\n      {\n        code: 'PK08',\n        name: 'Islamabad',\n      },\n      {\n        code: 'PK03',\n        name: 'Khyber-Pakhtunkhwa',\n      },\n      {\n        code: 'PK04',\n        name: 'Punjab',\n      },\n      {\n        code: 'PK05',\n        name: 'Sindh',\n      },\n    ],\n  },\n  {\n    code: 'PW',\n    id: 2314,\n    name: 'Palau',\n    states: [],\n  },\n  {\n    code: 'PS',\n    id: 2430,\n    name: 'Palestinian Territory; Occupied',\n    states: [],\n  },\n  {\n    code: 'PA',\n    id: 2315,\n    name: 'Panama',\n    states: [\n      {\n        code: 'PM01',\n        name: 'Bocas del Toro',\n      },\n      {\n        code: 'PM02\\t',\n        name: 'Chiriquí',\n      },\n      {\n        code: 'PM03',\n        name: 'Coclé',\n      },\n      {\n        code: 'PM04',\n        name: 'Coclé',\n      },\n      {\n        code: 'PM05',\n        name: 'Darién',\n      },\n      {\n        code: 'PM11',\n        name: 'Emberá',\n      },\n      {\n        code: 'PM06',\n        name: 'Herrera',\n      },\n      {\n        code: 'PM09',\n        name: 'Kuna Yala',\n      },\n      {\n        code: 'PM07',\n        name: 'Los Santos',\n      },\n      {\n        code: 'PM12',\n        name: 'Ngäbe Buglé',\n      },\n      {\n        code: 'PM13',\n        name: 'Panamá Oeste',\n      },\n      {\n        code: 'PM08',\n        name: 'Panamá',\n      },\n      {\n        code: 'PM10',\n        name: 'Veraguas',\n      },\n    ],\n  },\n  {\n    code: 'PG',\n    id: 2316,\n    name: 'Papua New Guinea',\n    states: [\n      {\n        code: 'PP07',\n        name: 'Bougainville',\n      },\n      {\n        code: 'PP01',\n        name: 'Central',\n      },\n      {\n        code: 'PP08',\n        name: 'Chimbu',\n      },\n      {\n        code: 'PP10',\n        name: 'East New Britain',\n      },\n      {\n        code: 'PP11',\n        name: 'East Sepik',\n      },\n      {\n        code: 'PP09',\n        name: 'Eastern Highlands',\n      },\n      {\n        code: 'PP19',\n        name: 'Enga',\n      },\n      {\n        code: 'PP02',\n        name: 'Gulf',\n      },\n      {\n        code: 'PP21',\n        name: 'Hela',\n      },\n      {\n        code: 'PP22',\n        name: 'Jiwaka',\n      },\n      {\n        code: 'PP12',\n        name: 'Madang',\n      },\n      {\n        code: 'PP13',\n        name: 'Manus',\n      },\n      {\n        code: 'PP03',\n        name: 'Milne Bay',\n      },\n      {\n        code: 'PP14',\n        name: 'Morobe',\n      },\n      {\n        code: 'PP20',\n        name: 'National Capital District',\n      },\n      {\n        code: 'PP15',\n        name: 'New Ireland',\n      },\n      {\n        code: 'PP04',\n        name: 'Northern',\n      },\n      {\n        code: 'PP18',\n        name: 'Sandaun',\n      },\n      {\n        code: 'PP05',\n        name: 'Southern Highlands',\n      },\n      {\n        code: 'PP17',\n        name: 'West New Britain',\n      },\n      {\n        code: 'PP06',\n        name: 'Western',\n      },\n      {\n        code: 'PP16',\n        name: 'Western Highlands',\n      },\n    ],\n  },\n  {\n    code: 'PY',\n    id: 2317,\n    name: 'Paraguay',\n    states: [\n      {\n        code: 'PA23',\n        name: 'Alto Paraguay',\n      },\n      {\n        code: 'PA01',\n        name: 'Alto Paraná',\n      },\n      {\n        code: 'PA02',\n        name: 'Amambay',\n      },\n      {\n        code: 'PA22',\n        name: 'Asunción',\n      },\n      {\n        code: 'PA24',\n        name: 'Boquerón',\n      },\n      {\n        code: 'PA04',\n        name: 'Caaguazú',\n      },\n      {\n        code: 'PA05',\n        name: 'Caazapá',\n      },\n      {\n        code: 'PA19',\n        name: 'Canindeyú',\n      },\n      {\n        code: 'PA06',\n        name: 'Central',\n      },\n      {\n        code: 'PA07',\n        name: 'Concepción',\n      },\n      {\n        code: 'PA08',\n        name: 'Cordillera',\n      },\n      {\n        code: 'PA10',\n        name: 'Guairá',\n      },\n      {\n        code: 'PA11',\n        name: 'Itapúa',\n      },\n      {\n        code: 'PA12',\n        name: 'Misiones',\n      },\n      {\n        code: 'PA15',\n        name: 'Paraguarí',\n      },\n      {\n        code: 'PA16',\n        name: 'Presidente Hayes',\n      },\n      {\n        code: 'PA17',\n        name: 'San Pedro',\n      },\n      {\n        code: 'PA13',\n        name: 'Ñeembucú',\n      },\n    ],\n  },\n  {\n    code: 'PE',\n    id: 2318,\n    name: 'Peru',\n    states: [\n      {\n        code: 'PE01',\n        name: 'Amazonas',\n      },\n      {\n        code: 'PE02',\n        name: 'Ancash',\n      },\n      {\n        code: 'PE03',\n        name: 'Apurímac',\n      },\n      {\n        code: 'PE04',\n        name: 'Arequipa',\n      },\n      {\n        code: 'PE05',\n        name: 'Ayacucho',\n      },\n      {\n        code: 'PE06',\n        name: 'Cajamarca',\n      },\n      {\n        code: 'PE07',\n        name: 'Callao',\n      },\n      {\n        code: 'PE08',\n        name: 'Cusco',\n      },\n      {\n        code: 'PE09',\n        name: 'Huancavelica',\n      },\n      {\n        code: 'PE10',\n        name: 'Huánuco',\n      },\n      {\n        code: 'PE11',\n        name: 'Ica',\n      },\n      {\n        code: 'PE12',\n        name: 'Junín',\n      },\n      {\n        code: 'PE13',\n        name: 'La Libertad',\n      },\n      {\n        code: 'PE14',\n        name: 'Lambayeque',\n      },\n      {\n        code: 'PE15',\n        name: 'Lima',\n      },\n      {\n        code: 'PE26',\n        name: 'Lima [Province]',\n      },\n      {\n        code: 'PE16',\n        name: 'Loreto',\n      },\n      {\n        code: 'PE17',\n        name: 'Madre de Dios',\n      },\n      {\n        code: 'PE18',\n        name: 'Moquegua',\n      },\n      {\n        code: 'PE19',\n        name: 'Pasco',\n      },\n      {\n        code: 'PE20',\n        name: 'Piura',\n      },\n      {\n        code: 'PE21',\n        name: 'Puno',\n      },\n      {\n        code: 'PE22',\n        name: 'San Martín',\n      },\n      {\n        code: 'PE23',\n        name: 'Tacna',\n      },\n      {\n        code: 'PE24',\n        name: 'Tumbes',\n      },\n      {\n        code: 'PE25',\n        name: 'Ucayali',\n      },\n    ],\n  },\n  {\n    code: 'PH',\n    id: 2319,\n    name: 'Philippines',\n    states: [\n      {\n        code: 'RP01',\n        name: 'Abra',\n      },\n      {\n        code: 'RP02',\n        name: 'Agusan del Norte',\n      },\n      {\n        code: 'RP03',\n        name: 'Agusan del Sur',\n      },\n      {\n        code: 'RP04',\n        name: 'Aklan',\n      },\n      {\n        code: 'RP05',\n        name: 'Albay',\n      },\n      {\n        code: 'RP06',\n        name: 'Antique',\n      },\n      {\n        code: 'RPH6',\n        name: 'Apayao',\n      },\n      {\n        code: 'RPG8',\n        name: 'Aurora',\n      },\n      {\n        code: 'RP22',\n        name: 'Basilan',\n      },\n      {\n        code: 'RP07',\n        name: 'Bataan',\n      },\n      {\n        code: 'RP08',\n        name: 'Batanes',\n      },\n      {\n        code: 'RP09',\n        name: 'Batangas',\n      },\n      {\n        code: 'RP10',\n        name: 'Benguet',\n      },\n      {\n        code: 'RPH9',\n        name: 'Biliran',\n      },\n      {\n        code: 'RP11',\n        name: 'Bohol',\n      },\n      {\n        code: 'RP12',\n        name: 'Bukidnon',\n      },\n      {\n        code: 'RP13',\n        name: 'Bulacan',\n      },\n      {\n        code: 'RP14',\n        name: 'Cagayan',\n      },\n      {\n        code: 'RP15',\n        name: 'Camarines Norte',\n      },\n      {\n        code: 'RP16',\n        name: 'Camarines Sur',\n      },\n      {\n        code: 'RP17',\n        name: 'Camiguin',\n      },\n      {\n        code: 'RP18',\n        name: 'Capiz',\n      },\n      {\n        code: 'RP19',\n        name: 'Catanduanes',\n      },\n      {\n        code: 'RP20',\n        name: 'Cavite',\n      },\n      {\n        code: 'RP21',\n        name: 'Cebu',\n      },\n      {\n        code: 'RPI6',\n        name: 'Compostela Valley',\n      },\n      {\n        code: 'RP57',\n        name: 'Cotabato',\n      },\n      {\n        code: 'RP26',\n        name: 'Davao Oriental',\n      },\n      {\n        code: 'RPI7',\n        name: 'Davao del Norte',\n      },\n      {\n        code: 'RP25',\n        name: 'Davao del Sur',\n      },\n      {\n        code: 'RPI9',\n        name: 'Dinagat Islands',\n      },\n      {\n        code: 'RP23',\n        name: 'Eastern Samar',\n      },\n      {\n        code: 'RPJ3',\n        name: 'Guimaras',\n      },\n      {\n        code: 'RP27',\n        name: 'Ifugao',\n      },\n      {\n        code: 'RP28',\n        name: 'Ilocos Norte',\n      },\n      {\n        code: 'RP29',\n        name: 'Ilocos Sur',\n      },\n      {\n        code: 'RP30',\n        name: 'Iloilo',\n      },\n      {\n        code: 'RP31',\n        name: 'Isabela',\n      },\n      {\n        code: 'RPJ7',\n        name: 'Kalinga',\n      },\n      {\n        code: 'RP36',\n        name: 'La Union',\n      },\n      {\n        code: 'RP33',\n        name: 'Laguna',\n      },\n      {\n        code: 'RP34',\n        name: 'Lanao del Norte',\n      },\n      {\n        code: 'RP35',\n        name: 'Lanao del Sur',\n      },\n      {\n        code: 'RP37',\n        name: 'Leyte',\n      },\n      {\n        code: 'RP56',\n        name: 'Maguindanao',\n      },\n      {\n        code: 'RP38',\n        name: 'Marinduque',\n      },\n      {\n        code: 'RP39',\n        name: 'Masbate',\n      },\n      {\n        code: 'RPD9',\n        name: 'Metropolitan Manila',\n      },\n      {\n        code: 'RP42',\n        name: 'Misamis Occidental',\n      },\n      {\n        code: 'RP43',\n        name: 'Misamis Oriental',\n      },\n      {\n        code: 'RP44',\n        name: 'Mountain',\n      },\n      {\n        code: 'RPH3',\n        name: 'Negros Occidental',\n      },\n      {\n        code: 'RP46',\n        name: 'Negros Oriental',\n      },\n      {\n        code: 'RP67',\n        name: 'Northern Samar',\n      },\n      {\n        code: 'RP47',\n        name: 'Nueva Ecija',\n      },\n      {\n        code: 'RP48',\n        name: 'Nueva Vizcaya',\n      },\n      {\n        code: 'RP40',\n        name: 'Occidental Mindoro',\n      },\n      {\n        code: 'RP41',\n        name: 'Oriental Mindoro',\n      },\n      {\n        code: 'RP49',\n        name: 'Palawan',\n      },\n      {\n        code: 'RP50',\n        name: 'Pampanga',\n      },\n      {\n        code: 'RP51',\n        name: 'Pangasinan',\n      },\n      {\n        code: 'RPH2',\n        name: 'Quezon',\n      },\n      {\n        code: 'RP68',\n        name: 'Quirino',\n      },\n      {\n        code: 'RP53',\n        name: 'Rizal',\n      },\n      {\n        code: 'RP54',\n        name: 'Romblon',\n      },\n      {\n        code: 'RP55',\n        name: 'Samar',\n      },\n      {\n        code: 'PH72',\n        name: 'Sarangani',\n      },\n      {\n        code: 'RP69',\n        name: 'Siquijor',\n      },\n      {\n        code: 'RP58',\n        name: 'Sorsogon',\n      },\n      {\n        code: 'RP70',\n        name: 'South Cotabato',\n      },\n      {\n        code: 'RP59',\n        name: 'Southern Leyte',\n      },\n      {\n        code: 'RP71',\n        name: 'Sultan Kudarat',\n      },\n      {\n        code: 'RP60',\n        name: 'Sulu',\n      },\n      {\n        code: 'RP61',\n        name: 'Surigao del Norte',\n      },\n      {\n        code: 'RP62',\n        name: 'Surigao del Sur',\n      },\n      {\n        code: 'RPO3',\n        name: 'Tarlac',\n      },\n      {\n        code: 'RPO4',\n        name: 'Tawi-Tawi',\n      },\n      {\n        code: 'RPP1',\n        name: 'Zambales',\n      },\n      {\n        code: 'RPG7',\n        name: 'Zamboanga del Norte',\n      },\n      {\n        code: 'RP65',\n        name: 'Zamboanga del Sur',\n      },\n      {\n        code: 'RP66',\n        name: 'Zamboanga-Sibugay',\n      },\n    ],\n  },\n  {\n    code: 'PN',\n    id: 2431,\n    name: 'Pitcairn',\n    states: [],\n  },\n  {\n    code: 'PL',\n    id: 2320,\n    name: 'Poland',\n    states: [\n      {\n        code: 'PL-DS',\n        name: 'Dolnoslaskie',\n      },\n      {\n        code: 'PL-KP',\n        name: 'Kujawsko-pomorskie',\n      },\n      {\n        code: 'PL-LD',\n        name: 'Lódzkie',\n      },\n      {\n        code: 'PL-LU',\n        name: 'Lubelskie',\n      },\n      {\n        code: 'PL-LB',\n        name: 'Lubuskie',\n      },\n      {\n        code: 'PL-MA',\n        name: 'Malopolskie',\n      },\n      {\n        code: 'PL-MZ',\n        name: 'Mazowieckie',\n      },\n      {\n        code: 'PL-OP',\n        name: 'Opolskie',\n      },\n      {\n        code: 'PL-PK',\n        name: 'Podkarpackie',\n      },\n      {\n        code: 'PL-PD',\n        name: 'Podlaskie',\n      },\n      {\n        code: 'PL-PM',\n        name: 'Pomorskie',\n      },\n      {\n        code: 'PL-SL',\n        name: 'Slaskie',\n      },\n      {\n        code: 'PL-SK',\n        name: 'Swietokrzyskie',\n      },\n      {\n        code: 'PL-WN',\n        name: 'Warminsko-mazurskie',\n      },\n      {\n        code: 'PL-WP',\n        name: 'Wielkopolskie',\n      },\n    ],\n  },\n  {\n    code: 'PT',\n    id: 2321,\n    name: 'Portugal',\n    states: [\n      {\n        code: 'PO23',\n        name: 'Acores Autonomous',\n      },\n      {\n        code: 'PO02',\n        name: 'Aveiro',\n      },\n      {\n        code: 'PO03',\n        name: 'Beja',\n      },\n      {\n        code: 'PO04',\n        name: 'Braga',\n      },\n      {\n        code: 'PO05',\n        name: 'Braganca',\n      },\n      {\n        code: 'PO06',\n        name: 'Castelo Branco',\n      },\n      {\n        code: 'PO07',\n        name: 'Coimbra',\n      },\n      {\n        code: 'PO08',\n        name: 'Evora',\n      },\n      {\n        code: 'PO09',\n        name: 'Faro',\n      },\n      {\n        code: 'PO11',\n        name: 'Guarda',\n      },\n      {\n        code: 'PO13',\n        name: 'Leiria',\n      },\n      {\n        code: 'PO14',\n        name: 'Lisboa',\n      },\n      {\n        code: 'PO10',\n        name: 'Madeira Autonomous',\n      },\n      {\n        code: 'PO16',\n        name: 'Portalegre',\n      },\n      {\n        code: 'PO17',\n        name: 'Porto',\n      },\n      {\n        code: 'PO18',\n        name: 'Santarem',\n      },\n      {\n        code: 'PO19',\n        name: 'Setubal',\n      },\n      {\n        code: 'PO20',\n        name: 'Viana do Castelo',\n      },\n      {\n        code: 'PO21',\n        name: 'Vila Real',\n      },\n      {\n        code: 'PO22',\n        name: 'Viseu',\n      },\n    ],\n  },\n  {\n    code: 'PR',\n    id: 2374,\n    name: 'Puerto Rico',\n    states: [\n      {\n        code: 'PR.AJ',\n        name: 'Adjuntas',\n      },\n      {\n        code: 'PR.AD',\n        name: 'Aguada',\n      },\n      {\n        code: 'PR.AL',\n        name: 'Aguadilla',\n      },\n      {\n        code: 'PR.AB',\n        name: 'Aguas Buenas',\n      },\n      {\n        code: 'PR.AI',\n        name: 'Aibonito',\n      },\n      {\n        code: 'PR.AN',\n        name: 'Añasco',\n      },\n      {\n        code: 'PR.AC',\n        name: 'Arecibo',\n      },\n      {\n        code: 'PR.AR',\n        name: 'Arroyo',\n      },\n      {\n        code: 'PR.BC',\n        name: 'Barceloneta',\n      },\n      {\n        code: 'PR.BQ',\n        name: 'Barranquitas',\n      },\n      {\n        code: 'PR.BY',\n        name: 'Bayamón',\n      },\n      {\n        code: 'PR.CR',\n        name: 'Cabo Rojo',\n      },\n      {\n        code: 'PR.CG',\n        name: 'Caguas',\n      },\n      {\n        code: 'PR.CA',\n        name: 'Camuy',\n      },\n      {\n        code: 'PR.CV',\n        name: 'Canóvanas',\n      },\n      {\n        code: 'PR.CN',\n        name: 'Carolina',\n      },\n      {\n        code: 'PR.CT',\n        name: 'Cataño',\n      },\n      {\n        code: 'PR.CY',\n        name: 'Cayey',\n      },\n      {\n        code: 'PR.CB',\n        name: 'Ceiba',\n      },\n      {\n        code: 'PR.CL',\n        name: 'Ciales',\n      },\n      {\n        code: 'PR.CD',\n        name: 'Cidra',\n      },\n      {\n        code: 'PR.CO',\n        name: 'Coamo',\n      },\n      {\n        code: 'PR.CM',\n        name: 'Comerío',\n      },\n      {\n        code: 'PR.CZ',\n        name: 'Corozal',\n      },\n      {\n        code: 'PR.CU',\n        name: 'Culebra',\n      },\n      {\n        code: 'PR.DO',\n        name: 'Dorado',\n      },\n      {\n        code: 'PR.FJ',\n        name: 'Fajardo',\n      },\n      {\n        code: 'PR.FL',\n        name: 'Florida',\n      },\n      {\n        code: 'PR.GC',\n        name: 'Guánica',\n      },\n      {\n        code: 'PR.GM',\n        name: 'Guayama',\n      },\n      {\n        code: 'PR.GL',\n        name: 'Guayanilla',\n      },\n      {\n        code: 'PR.GB',\n        name: 'Guaynabo',\n      },\n      {\n        code: 'PR.GR',\n        name: 'Gurabo',\n      },\n      {\n        code: 'PR.HA',\n        name: 'Hatillo',\n      },\n      {\n        code: 'PR.HO',\n        name: 'Hormigueros',\n      },\n      {\n        code: 'PR.HU',\n        name: 'Humacao',\n      },\n      {\n        code: 'PR.IS',\n        name: 'Isabela',\n      },\n      {\n        code: 'PR.JY',\n        name: 'Jayuya',\n      },\n      {\n        code: 'PR.JD',\n        name: 'Juana Díaz',\n      },\n      {\n        code: 'PR.JC',\n        name: 'Juncos',\n      },\n      {\n        code: 'PR.LJ',\n        name: 'Lajas',\n      },\n      {\n        code: 'PR.LR',\n        name: 'Lares',\n      },\n      {\n        code: 'PR.LM',\n        name: 'Las Marías',\n      },\n      {\n        code: 'PR.LP',\n        name: 'Las Piedras',\n      },\n      {\n        code: 'PR.LZ',\n        name: 'Loíza',\n      },\n      {\n        code: 'PR.LQ',\n        name: 'Luquillo',\n      },\n      {\n        code: 'PR.MT',\n        name: 'Manatí',\n      },\n      {\n        code: 'PR.MR',\n        name: 'Maricao',\n      },\n      {\n        code: 'PR.MB',\n        name: 'Maunabo',\n      },\n      {\n        code: 'PR.MG',\n        name: 'Mayagüez',\n      },\n      {\n        code: 'PR.MC',\n        name: 'Moca',\n      },\n      {\n        code: 'PR.MV',\n        name: 'Morovis',\n      },\n      {\n        code: 'PR.NG',\n        name: 'Naguabo',\n      },\n      {\n        code: 'PR.NR',\n        name: 'Naranjito',\n      },\n      {\n        code: 'PR.OR',\n        name: 'Orocovis',\n      },\n      {\n        code: 'PR.PT',\n        name: 'Patillas',\n      },\n      {\n        code: 'PR.PN\\t',\n        name: 'Peñuelas',\n      },\n      {\n        code: 'PR.PO',\n        name: 'Ponce',\n      },\n      {\n        code: 'PR.QB',\n        name: 'Quebradillas',\n      },\n      {\n        code: 'PR.RC',\n        name: 'Rincón',\n      },\n      {\n        code: 'PR.RG',\n        name: 'Río Grande',\n      },\n      {\n        code: 'PR.SB',\n        name: 'Sabana Grande',\n      },\n      {\n        code: 'PR.SA',\n        name: 'Salinas',\n      },\n      {\n        code: 'PR.SG',\n        name: 'San Germán',\n      },\n      {\n        code: 'PR.SJ',\n        name: 'San Juan',\n      },\n      {\n        code: 'PR.SL',\n        name: 'San Lorenzo',\n      },\n      {\n        code: 'PR.SS',\n        name: 'San Sebastián',\n      },\n      {\n        code: 'PR.SI',\n        name: 'Santa Isabel',\n      },\n      {\n        code: 'PR.TA',\n        name: 'Toa Alta',\n      },\n      {\n        code: 'PR.TB',\n        name: 'Toa Baja',\n      },\n      {\n        code: 'PR.TJ',\n        name: 'Trujillo Alto',\n      },\n      {\n        code: 'PR.UT',\n        name: 'Utuado',\n      },\n      {\n        code: 'PR.VA',\n        name: 'Vega Alta',\n      },\n      {\n        code: 'PR.VB',\n        name: 'Vega Baja',\n      },\n      {\n        code: 'PR.VQ',\n        name: 'Vieques',\n      },\n      {\n        code: 'PR.VL',\n        name: 'Villalba',\n      },\n      {\n        code: 'PR.YB',\n        name: 'Yabucoa',\n      },\n      {\n        code: 'PR.YU',\n        name: 'Yauco',\n      },\n    ],\n  },\n  {\n    code: 'QA',\n    id: 2322,\n    name: 'Qatar',\n    states: [\n      {\n        code: 'QA01',\n        name: 'Ad Dawhah',\n      },\n      {\n        code: 'QA13',\n        name: 'Al Daayen',\n      },\n      {\n        code: 'QA04',\n        name: 'Al Khawr',\n      },\n      {\n        code: 'QA10',\n        name: 'Al Wakrah',\n      },\n      {\n        code: 'QA14',\n        name: 'Al-Shahaniya',\n      },\n      {\n        code: 'QA06',\n        name: 'Ar Rayyan',\n      },\n      {\n        code: 'QA08',\n        name: 'Madinat ach Shamal',\n      },\n      {\n        code: 'QA09',\n        name: 'Umm Salal',\n      },\n    ],\n  },\n  {\n    code: 'R999',\n    id: 2398,\n    name: 'Reunion',\n    states: [],\n  },\n  {\n    code: 'RO',\n    id: 2323,\n    name: 'Romania',\n    states: [\n      {\n        code: 'RO-AB',\n        name: 'Alba',\n      },\n      {\n        code: 'RO-AR',\n        name: 'Arad',\n      },\n      {\n        code: 'RO-AG',\n        name: 'Arges',\n      },\n      {\n        code: 'RO-BC',\n        name: 'Bacau',\n      },\n      {\n        code: 'RO-BH',\n        name: 'Bihor',\n      },\n      {\n        code: 'RO-BN',\n        name: 'Bistrita-Nasaud',\n      },\n      {\n        code: 'RO-BT',\n        name: 'Botosani',\n      },\n      {\n        code: 'RO-BR',\n        name: 'Braila',\n      },\n      {\n        code: 'RO-BV',\n        name: 'Brasov',\n      },\n      {\n        code: 'RO-B',\n        name: 'Bucuresti',\n      },\n      {\n        code: 'RO-BZ',\n        name: 'Buzau',\n      },\n      {\n        code: 'RO-CL',\n        name: 'Calarasi',\n      },\n      {\n        code: 'RO-CS',\n        name: 'Caras-Severin',\n      },\n      {\n        code: 'RO-CJ',\n        name: 'Cluj',\n      },\n      {\n        code: 'RO-CT',\n        name: 'Constanta',\n      },\n      {\n        code: 'RO-CV',\n        name: 'Covasna',\n      },\n      {\n        code: 'RO-DB',\n        name: 'Dâmbovita',\n      },\n      {\n        code: 'RO-DJ',\n        name: 'Dolj',\n      },\n      {\n        code: 'RO-GL',\n        name: 'Galati',\n      },\n      {\n        code: 'RO-GR',\n        name: 'Giurgiu',\n      },\n      {\n        code: 'RO-GJ',\n        name: 'Gorj',\n      },\n      {\n        code: 'RO-HR',\n        name: 'Harghita',\n      },\n      {\n        code: 'RO-HD',\n        name: 'Hunedoara',\n      },\n      {\n        code: 'RO-IL',\n        name: 'Ialomita',\n      },\n      {\n        code: 'RO-IS',\n        name: 'Iasi',\n      },\n      {\n        code: 'RO-IF',\n        name: 'Ilfov',\n      },\n      {\n        code: 'RO-MM',\n        name: 'Maramures',\n      },\n      {\n        code: 'RO-MH',\n        name: 'Mehedinti',\n      },\n      {\n        code: 'RO-MS',\n        name: 'Mures',\n      },\n      {\n        code: 'RO-NT',\n        name: 'Neamt',\n      },\n      {\n        code: 'RO-OT',\n        name: 'Olt',\n      },\n      {\n        code: 'RO-PH',\n        name: 'Prahova',\n      },\n      {\n        code: 'RO-SJ',\n        name: 'Salaj',\n      },\n      {\n        code: 'RO-SM',\n        name: 'Satu Mare',\n      },\n      {\n        code: 'RO-SB',\n        name: 'Sibiu',\n      },\n      {\n        code: 'RO-SV',\n        name: 'Suceava',\n      },\n      {\n        code: 'RO-TR',\n        name: 'Teleorman',\n      },\n      {\n        code: 'RO-TM',\n        name: 'Timis',\n      },\n      {\n        code: 'RO-TL',\n        name: 'Tulcea',\n      },\n      {\n        code: 'RO-VL',\n        name: 'Vâlcea',\n      },\n      {\n        code: 'RO-VS',\n        name: 'Vaslui',\n      },\n      {\n        code: 'RO-VN',\n        name: 'Vrancea',\n      },\n    ],\n  },\n  {\n    code: 'RU',\n    id: 2324,\n    name: 'Russian Federation',\n    states: [\n      {\n        code: 'RS01',\n        name: 'Adygeya Republic',\n      },\n      {\n        code: 'RS02',\n        name: 'Aginskiy Buryatskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS03',\n        name: 'Altay Republic',\n      },\n      {\n        code: 'RS04',\n        name: 'Altayskiy Kray',\n      },\n      {\n        code: 'RS05',\n        name: \"Amurskaya Oblast'\",\n      },\n      {\n        code: 'RS06',\n        name: \"Arkhangel'skaya Oblast'\",\n      },\n      {\n        code: 'RS07',\n        name: \"Astrakhanskaya Oblast'\",\n      },\n      {\n        code: 'RS08',\n        name: 'Bashkortostan Republic',\n      },\n      {\n        code: 'RS09',\n        name: \"Belgorodskaya Oblast'\",\n      },\n      {\n        code: 'RS10',\n        name: \"Bryanskaya Oblast'\",\n      },\n      {\n        code: 'RS11',\n        name: 'Buryatiya Republic',\n      },\n      {\n        code: 'RSCI',\n        name: 'Chechnya Republic',\n      },\n      {\n        code: 'RS13',\n        name: \"Chelyabinskaya Oblast'\",\n      },\n      {\n        code: 'RS14',\n        name: \"Chitinskaya Oblast'\",\n      },\n      {\n        code: 'RS15',\n        name: 'Chukotskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS16',\n        name: 'Chuvashiya Republic',\n      },\n      {\n        code: 'RS17',\n        name: 'Dagestan Republic',\n      },\n      {\n        code: 'RS18',\n        name: 'Evenkiyskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS20',\n        name: \"Irkutskaya Oblast'\",\n      },\n      {\n        code: 'RS21',\n        name: \"Ivanovskaya Oblast'\",\n      },\n      {\n        code: 'RS22',\n        name: 'Kabardino-Balkariya Republic',\n      },\n      {\n        code: 'RS23',\n        name: \"Kaliningradskaya Oblast'\",\n      },\n      {\n        code: 'RS24',\n        name: 'Kalmykiya Republic',\n      },\n      {\n        code: 'RS25',\n        name: \"Kaluzhskaya Oblast'\",\n      },\n      {\n        code: 'RS26',\n        name: \"Kamchatskaya Oblast'\",\n      },\n      {\n        code: 'RS27',\n        name: 'Karachayevo-Cherkesiya Republic',\n      },\n      {\n        code: 'RS28',\n        name: 'Kareliya Republic',\n      },\n      {\n        code: 'RS29',\n        name: \"Kemerovskaya Oblast'\",\n      },\n      {\n        code: 'RS30',\n        name: 'Khabarovskiy Kray',\n      },\n      {\n        code: 'RS31',\n        name: 'Khakasiya Republic',\n      },\n      {\n        code: 'RS32',\n        name: 'Khanty-Mansiyskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS33',\n        name: \"Kirovskaya Oblast'\",\n      },\n      {\n        code: 'RS34',\n        name: 'Komi Republic',\n      },\n      {\n        code: 'RS36',\n        name: 'Koryakskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS37',\n        name: \"Kostromskaya Oblast'\",\n      },\n      {\n        code: 'RS38',\n        name: 'Krasnodarskiy Kray',\n      },\n      {\n        code: 'RS39',\n        name: 'Krasnoyarskiy Kray',\n      },\n      {\n        code: 'RS40',\n        name: \"Kurganskaya Oblast'\",\n      },\n      {\n        code: 'RS41',\n        name: \"Kurskaya Oblast'\",\n      },\n      {\n        code: 'RS42',\n        name: \"Leningradskaya Oblast'\",\n      },\n      {\n        code: 'RS43',\n        name: \"Lipetskaya Oblast'\",\n      },\n      {\n        code: 'RS44',\n        name: \"Magadanskaya Oblast'\",\n      },\n      {\n        code: 'RS45',\n        name: 'Mariy-El Republic',\n      },\n      {\n        code: 'RS46',\n        name: 'Mordoviya Republic',\n      },\n      {\n        code: 'RS47',\n        name: \"Moskovskaya Oblast'\",\n      },\n      {\n        code: 'RS48',\n        name: 'Moskva Federal City',\n      },\n      {\n        code: 'RS49',\n        name: \"Murmanskaya Oblast'\",\n      },\n      {\n        code: 'RS50',\n        name: 'Nenetskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS51',\n        name: \"Nizhegorodskaya Oblast'\",\n      },\n      {\n        code: 'RS52',\n        name: \"Novgorodskaya Oblast'\",\n      },\n      {\n        code: 'RS53',\n        name: \"Novosibirskaya Oblast'\",\n      },\n      {\n        code: 'RS54',\n        name: \"Omskaya Oblast'\",\n      },\n      {\n        code: 'RS55',\n        name: \"Orenburgskaya Oblast'\",\n      },\n      {\n        code: 'RS56',\n        name: \"Orlovskaya Oblast'\",\n      },\n      {\n        code: 'RS57',\n        name: \"Penzenskaya Oblast'\",\n      },\n      {\n        code: 'RS90',\n        name: 'Permskiy Kray',\n      },\n      {\n        code: 'RS59',\n        name: 'Primorskiy Kray',\n      },\n      {\n        code: 'RS60',\n        name: \"Pskovskaya Oblast'\",\n      },\n      {\n        code: 'RS61',\n        name: \"Rostovskaya Oblast'\",\n      },\n      {\n        code: 'RS62',\n        name: \"Ryazanskaya Oblast'\",\n      },\n      {\n        code: 'RS63',\n        name: 'Sakha (Yakutiya) Republic',\n      },\n      {\n        code: 'RS64',\n        name: \"Sakhalinskaya Oblast'\",\n      },\n      {\n        code: 'RS65',\n        name: \"Samarskaya Oblast'\",\n      },\n      {\n        code: 'RS66',\n        name: 'Sankt-Peterburg Federal City',\n      },\n      {\n        code: 'RS67',\n        name: \"Saratovskaya Oblast'\",\n      },\n      {\n        code: 'RS68',\n        name: 'Severnaya Osetiya-Alaniya Respublika',\n      },\n      {\n        code: 'RS69',\n        name: \"Smolenskaya Oblast'\",\n      },\n      {\n        code: 'RS70',\n        name: \"Stavropol'skiy Kray\",\n      },\n      {\n        code: 'RS71',\n        name: \"Sverdlovskaya Oblast'\",\n      },\n      {\n        code: 'RS72',\n        name: \"Tambovskaya Oblast'\",\n      },\n      {\n        code: 'RS73',\n        name: 'Tatarstan Republic',\n      },\n      {\n        code: 'RS74',\n        name: 'Taymyrskiy (Dolgano-Nenetskiy) Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS75',\n        name: \"Tomskaya Oblast'\",\n      },\n      {\n        code: 'RS76',\n        name: \"Tul'skaya Oblast'\",\n      },\n      {\n        code: 'RS77',\n        name: \"Tverskaya Oblast'\",\n      },\n      {\n        code: 'RS78',\n        name: \"Tyumenskaya Oblast'\",\n      },\n      {\n        code: 'RS79',\n        name: 'Tyva Republic',\n      },\n      {\n        code: 'RS80',\n        name: 'Udmurtiya Republic',\n      },\n      {\n        code: 'RS81',\n        name: \"Ul'yanovskaya Oblast'\",\n      },\n      {\n        code: 'RS82',\n        name: \"Ust'-Ordynskiy Buryatskiy Avtonomnyy Okrug\",\n      },\n      {\n        code: 'RS83',\n        name: \"Vladimirskaya Oblast'\",\n      },\n      {\n        code: 'RS84',\n        name: \"Volgogradskaya Oblast'\",\n      },\n      {\n        code: 'RS85',\n        name: \"Vologodskaya Oblast'\",\n      },\n      {\n        code: 'RS86',\n        name: \"Voronezhskaya Oblast'\",\n      },\n      {\n        code: 'RS87',\n        name: 'Yamalo-Nenetskiy Avtonomnyy Okrug',\n      },\n      {\n        code: 'RS88',\n        name: \"Yaroslavskaya Oblast'\",\n      },\n      {\n        code: 'RS89',\n        name: \"Yevreyskaya Avtonomnaya Oblast'\",\n      },\n    ],\n  },\n  {\n    code: 'RW',\n    id: 2325,\n    name: 'Rwanda',\n    states: [\n      {\n        code: 'RW11',\n        name: 'Eastern',\n      },\n      {\n        code: 'RW12',\n        name: 'Kigali City',\n      },\n      {\n        code: 'RW13',\n        name: 'Northern',\n      },\n      {\n        code: 'RW15',\n        name: 'Southern',\n      },\n      {\n        code: 'RW14',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'BL',\n    id: 2432,\n    name: 'Saint Barthélemy',\n    states: [],\n  },\n  {\n    code: 'SH',\n    id: 2433,\n    name: 'Saint Helena; Ascension and Tristan Da Cunha',\n    states: [],\n  },\n  {\n    code: 'KN',\n    id: 2399,\n    name: 'Saint Kitts and Nevis',\n    states: [],\n  },\n  {\n    code: 'LC',\n    id: 2326,\n    name: 'Saint Lucia',\n    states: [],\n  },\n  {\n    code: 'MF',\n    id: 2434,\n    name: 'Saint Martin',\n    states: [\n      {\n        code: 'MF.SM',\n        name: 'Saint Martin',\n      },\n    ],\n  },\n  {\n    code: 'PM',\n    id: 2435,\n    name: 'Saint Pierre And Miquelon',\n    states: [],\n  },\n  {\n    code: 'VC',\n    id: 2400,\n    name: 'Saint Vincent and Grenadines',\n    states: [],\n  },\n  {\n    code: 'WS',\n    id: 2401,\n    name: 'Samoa',\n    states: [\n      {\n        code: 'WS01',\n        name: \"A'ana\",\n      },\n      {\n        code: 'WS02',\n        name: 'Aiga-i-le-Tai',\n      },\n      {\n        code: 'WS03',\n        name: 'Atua',\n      },\n      {\n        code: 'WS04',\n        name: \"Fa'asaleleaga\",\n      },\n      {\n        code: 'WS05',\n        name: \"Gaga'emauga\",\n      },\n      {\n        code: 'WS07',\n        name: 'Gagaifomauga',\n      },\n      {\n        code: 'WS08',\n        name: 'Palauli',\n      },\n      {\n        code: 'WS09',\n        name: \"Satupa'itea\",\n      },\n      {\n        code: 'WS10',\n        name: 'Tuamasaga',\n      },\n      {\n        code: 'WS06',\n        name: \"Va'a-o-Fonoti\",\n      },\n      {\n        code: 'WS11',\n        name: 'Vaisigano',\n      },\n    ],\n  },\n  {\n    code: 'SM',\n    id: 2327,\n    name: 'San Marino',\n    states: [],\n  },\n  {\n    code: 'TP',\n    id: 2403,\n    name: 'Sao Tome and Principe',\n    states: [],\n  },\n  {\n    code: 'SA',\n    id: 2328,\n    name: 'Saudi Arabia',\n    states: [\n      {\n        code: 'SA02',\n        name: 'Al Bahah',\n      },\n      {\n        code: 'SA15',\n        name: 'Al Hudud ash Shamaliyah',\n      },\n      {\n        code: 'SA20',\n        name: 'Al Jawf',\n      },\n      {\n        code: 'SA05',\n        name: 'Al Madinah',\n      },\n      {\n        code: 'SA08',\n        name: 'Al Qasim',\n      },\n      {\n        code: 'SA10',\n        name: 'Ar Riyad',\n      },\n      {\n        code: 'SA06',\n        name: 'Ash Sharqiyah',\n      },\n      {\n        code: 'SA11',\n        name: 'Asir',\n      },\n      {\n        code: 'SA13',\n        name: \"Ha'il\",\n      },\n      {\n        code: 'SA17',\n        name: 'Jizan',\n      },\n      {\n        code: 'SA14',\n        name: 'Makkah',\n      },\n      {\n        code: 'SA16',\n        name: 'Najran',\n      },\n      {\n        code: 'SA19',\n        name: 'Tabuk',\n      },\n    ],\n  },\n  {\n    code: 'SN',\n    id: 2329,\n    name: 'Senegal',\n    states: [\n      {\n        code: 'SG01',\n        name: 'Dakar',\n      },\n      {\n        code: 'SG03',\n        name: 'Diourbel',\n      },\n      {\n        code: 'SG09',\n        name: 'Fatick',\n      },\n      {\n        code: 'SG16',\n        name: 'Kaffrine',\n      },\n      {\n        code: 'SG10',\n        name: 'Kaolack',\n      },\n      {\n        code: 'SG17',\n        name: 'Kédougou',\n      },\n      {\n        code: 'SG11',\n        name: 'Kolda',\n      },\n      {\n        code: 'SG13',\n        name: 'Louga',\n      },\n      {\n        code: 'SG15',\n        name: 'Matam',\n      },\n      {\n        code: 'SG14',\n        name: 'Saint-Louis',\n      },\n      {\n        code: 'SG18',\n        name: 'Sédhiou',\n      },\n      {\n        code: 'SG05',\n        name: 'Tambacounda',\n      },\n      {\n        code: 'SG07',\n        name: 'Thiès',\n      },\n      {\n        code: 'SG12',\n        name: 'Ziguinchor',\n      },\n    ],\n  },\n  {\n    code: 'RI',\n    id: 2402,\n    name: 'Serbia',\n    states: [\n      {\n        code: 'RS-00',\n        name: 'Belgrade',\n      },\n      {\n        code: 'RS-14',\n        name: 'Borski okrug',\n      },\n      {\n        code: 'RS-11',\n        name: 'Branicevski okrug',\n      },\n      {\n        code: 'RS-23',\n        name: 'Jablanicki okrug',\n      },\n      {\n        code: 'RS-06',\n        name: 'Južnobanatski okrug',\n      },\n      {\n        code: 'RS-04',\n        name: 'Južnobanatski okrug',\n      },\n      {\n        code: 'RS-09',\n        name: 'Kolubarski okrug',\n      },\n      {\n        code: 'RS-25',\n        name: 'Kosovski okrug',\n      },\n      {\n        code: 'RS-28',\n        name: 'Kosovsko-Mitrovacki okrug',\n      },\n      {\n        code: 'RS-29',\n        name: 'Kosovsko-Pomoravski okrug',\n      },\n      {\n        code: 'RS-08',\n        name: 'Macvanski okrug',\n      },\n      {\n        code: 'RS-17',\n        name: 'Moravicki okrug',\n      },\n      {\n        code: 'RS-20',\n        name: 'Nišavski okrug',\n      },\n      {\n        code: 'RS-24',\n        name: 'Pcinjski okrug',\n      },\n      {\n        code: 'RS-26',\n        name: 'Pecki okrug',\n      },\n      {\n        code: 'RS-22',\n        name: 'Pirotski okrug',\n      },\n      {\n        code: 'RS-10',\n        name: 'Podunavski okrug',\n      },\n      {\n        code: 'RS-13',\n        name: 'Pomoravski okrug',\n      },\n      {\n        code: 'RS-27',\n        name: 'Prizrenski okrug',\n      },\n      {\n        code: 'RS-19',\n        name: 'Rasinski okrug',\n      },\n      {\n        code: 'RS-18',\n        name: 'Raška okrug',\n      },\n      {\n        code: 'RS-01',\n        name: 'Severnobacki okrug',\n      },\n      {\n        code: 'RS-03',\n        name: 'Severnobanatski okrug',\n      },\n      {\n        code: 'RS-02',\n        name: 'Srednjebanatski okrug',\n      },\n      {\n        code: 'RS-07',\n        name: 'Sremski okrug',\n      },\n      {\n        code: 'RS-12',\n        name: 'Šumadijski okrug',\n      },\n      {\n        code: 'RS-21',\n        name: 'Toplièki okrug',\n      },\n      {\n        code: 'RS-15',\n        name: 'Zajeèarski okrug',\n      },\n      {\n        code: 'RS-05',\n        name: 'Zapadnobaèki okrug',\n      },\n      {\n        code: 'RS-16',\n        name: 'Zlatiborski okrug',\n      },\n    ],\n  },\n  {\n    code: 'SC',\n    id: 2331,\n    name: 'Seychelles',\n    states: [],\n  },\n  {\n    code: 'SL',\n    id: 2332,\n    name: 'Sierra Leone',\n    states: [\n      {\n        code: 'SL01',\n        name: 'Eastern',\n      },\n      {\n        code: 'SL02',\n        name: 'Northern',\n      },\n      {\n        code: 'SL03',\n        name: 'Southern',\n      },\n      {\n        code: 'SL04',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'SG',\n    id: 2333,\n    name: 'Singapore',\n    states: [\n      {\n        code: 'SG01',\n        name: 'Central Singapore',\n      },\n      {\n        code: 'SG02',\n        name: 'North East',\n      },\n      {\n        code: 'SG03',\n        name: 'North West',\n      },\n      {\n        code: 'SG04',\n        name: 'South East',\n      },\n      {\n        code: 'SG05',\n        name: 'South West',\n      },\n    ],\n  },\n  {\n    code: 'SX',\n    id: 2448,\n    name: 'Sint Maarten',\n    states: [],\n  },\n  {\n    code: 'SK',\n    id: 2334,\n    name: 'Slovakia',\n    states: [\n      {\n        code: 'SK-BC',\n        name: 'Banskobystrický kraj',\n      },\n      {\n        code: 'SK-BL',\n        name: 'Bratislavský kraj',\n      },\n      {\n        code: 'SK-KI',\n        name: 'Košický kraj',\n      },\n      {\n        code: 'SK-NI',\n        name: 'Nitriansky kraj',\n      },\n      {\n        code: 'SK-PV',\n        name: 'Prešovský kraj',\n      },\n      {\n        code: 'SK-TC',\n        name: 'Trenciansky kraj',\n      },\n      {\n        code: 'SK-TA',\n        name: 'Trnavský kraj',\n      },\n      {\n        code: 'SK-ZI',\n        name: 'Žilinský kraj',\n      },\n    ],\n  },\n  {\n    code: 'SI',\n    id: 2335,\n    name: 'Slovenia',\n    states: [\n      {\n        code: 'SI-001',\n        name: 'Ajdovšcina',\n      },\n      {\n        code: 'SI-195',\n        name: 'Apace',\n      },\n      {\n        code: 'SI-002',\n        name: 'Beltinci',\n      },\n      {\n        code: 'SI-148',\n        name: 'Benedikt',\n      },\n      {\n        code: 'SI-149',\n        name: 'Bistrica ob Sotli',\n      },\n      {\n        code: 'SI-003',\n        name: 'Bled',\n      },\n      {\n        code: 'SI-150',\n        name: 'Bloke',\n      },\n      {\n        code: 'SI-004',\n        name: 'Bohinj',\n      },\n      {\n        code: 'SI-005',\n        name: 'Borovnica',\n      },\n      {\n        code: 'SI-006',\n        name: 'Bovec',\n      },\n      {\n        code: 'SI-151',\n        name: 'Braslovce',\n      },\n      {\n        code: 'SI-007',\n        name: 'Brda',\n      },\n      {\n        code: 'SI-009',\n        name: 'Brežice',\n      },\n      {\n        code: 'SI-008',\n        name: 'Brezovica',\n      },\n      {\n        code: 'SI-152',\n        name: 'Cankova',\n      },\n      {\n        code: 'SI-011',\n        name: 'Celje',\n      },\n      {\n        code: 'SI-012',\n        name: 'Cerklje na Gorenjskem',\n      },\n      {\n        code: 'SI-013',\n        name: 'Cerknica',\n      },\n      {\n        code: 'SI-014',\n        name: 'Cerkno',\n      },\n      {\n        code: 'SI-153',\n        name: 'Cerkvenjak',\n      },\n      {\n        code: 'SI-197',\n        name: 'Cirkulane',\n      },\n      {\n        code: 'SI-015',\n        name: 'Crenšovci',\n      },\n      {\n        code: 'SI-016',\n        name: 'Crna na Koroškem',\n      },\n      {\n        code: 'SI-017',\n        name: 'Crnomelj',\n      },\n      {\n        code: 'SI-018',\n        name: 'Destrnik',\n      },\n      {\n        code: 'SI-019',\n        name: 'Divaca',\n      },\n      {\n        code: 'SI-154',\n        name: 'Dobje',\n      },\n      {\n        code: 'SI-020',\n        name: 'Dobrepolje',\n      },\n      {\n        code: 'SI-155',\n        name: 'Dobrna',\n      },\n      {\n        code: 'SI-021',\n        name: 'Dobrova-Polhov Gradec',\n      },\n      {\n        code: 'SI-156',\n        name: 'Dobrovnik/Dobronak',\n      },\n      {\n        code: 'SI-022',\n        name: 'Dol pri Ljubljani',\n      },\n      {\n        code: 'SI-157',\n        name: 'Dolenjske Toplice',\n      },\n      {\n        code: 'SI-023',\n        name: 'Domžale',\n      },\n      {\n        code: 'SI-024',\n        name: 'Dornava',\n      },\n      {\n        code: 'SI-025',\n        name: 'Dravograd',\n      },\n      {\n        code: 'SI-026',\n        name: 'Duplek',\n      },\n      {\n        code: 'SI-027',\n        name: 'Gorenja vas-Poljane',\n      },\n      {\n        code: 'SI-028',\n        name: 'Gorišnica',\n      },\n      {\n        code: 'SI-207',\n        name: 'Gorje',\n      },\n      {\n        code: 'SI-029',\n        name: 'Gornja Radgona',\n      },\n      {\n        code: 'SI-030',\n        name: 'Gornji Grad',\n      },\n      {\n        code: 'SI-031',\n        name: 'Gornji Petrovci',\n      },\n      {\n        code: 'SI-158',\n        name: 'Grad',\n      },\n      {\n        code: 'SI-032',\n        name: 'Grosuplje',\n      },\n      {\n        code: 'SI-159',\n        name: 'Hajdina',\n      },\n      {\n        code: 'SI-160',\n        name: 'Hoce-Slivnica',\n      },\n      {\n        code: 'SI-161',\n        name: 'Hodoš/Hodos',\n      },\n      {\n        code: 'SI-162',\n        name: 'Horjul',\n      },\n      {\n        code: 'SI-034',\n        name: 'Hrastnik',\n      },\n      {\n        code: 'SI-035',\n        name: 'Hrpelje-Kozina',\n      },\n      {\n        code: 'SI-036',\n        name: 'Idrija',\n      },\n      {\n        code: 'SI-037',\n        name: 'Ig',\n      },\n      {\n        code: 'SI-038',\n        name: 'Ilirska Bistrica',\n      },\n      {\n        code: 'SI-039',\n        name: 'Ivancna Gorica',\n      },\n      {\n        code: 'SI-040',\n        name: 'Izola/Isola',\n      },\n      {\n        code: 'SI-041',\n        name: 'Jesenice',\n      },\n      {\n        code: 'SI-163',\n        name: 'Jezersko',\n      },\n      {\n        code: 'SI-042',\n        name: 'Juršinci',\n      },\n      {\n        code: 'SI-043',\n        name: 'Kamnik',\n      },\n      {\n        code: 'SI-044',\n        name: 'Kanal',\n      },\n      {\n        code: 'SI-045',\n        name: 'Kidricevo',\n      },\n      {\n        code: 'SI-046',\n        name: 'Kobarid',\n      },\n      {\n        code: 'SI-047',\n        name: 'Kobilje',\n      },\n      {\n        code: 'SI-048',\n        name: 'Kocevje',\n      },\n      {\n        code: 'SI-049',\n        name: 'Komen',\n      },\n      {\n        code: 'SI-164',\n        name: 'Komenda',\n      },\n      {\n        code: 'SI-050',\n        name: 'Koper/Capodistria',\n      },\n      {\n        code: 'SI-196',\n        name: 'Kosanjevica na Krki',\n      },\n      {\n        code: 'SI-165',\n        name: 'Kostel',\n      },\n      {\n        code: 'SI-051',\n        name: 'Kozje',\n      },\n      {\n        code: 'SI-052',\n        name: 'Kranj',\n      },\n      {\n        code: 'SI-053',\n        name: 'Kranjska Gora',\n      },\n      {\n        code: 'SI-166',\n        name: 'Križevci',\n      },\n      {\n        code: 'SI-054',\n        name: 'Krško',\n      },\n      {\n        code: 'SI-055',\n        name: 'Kungota',\n      },\n      {\n        code: 'SI-056',\n        name: 'Kuzma',\n      },\n      {\n        code: 'SI-057',\n        name: 'Laško',\n      },\n      {\n        code: 'SI-058',\n        name: 'Lenart',\n      },\n      {\n        code: 'SI-059',\n        name: 'Lendava/Lendva',\n      },\n      {\n        code: 'SI-060',\n        name: 'Litija',\n      },\n      {\n        code: 'SI-061',\n        name: 'Ljubljana',\n      },\n      {\n        code: 'SI-062',\n        name: 'Ljubno',\n      },\n      {\n        code: 'SI-063',\n        name: 'Ljutomer',\n      },\n      {\n        code: 'SI-208',\n        name: 'Log-Dragomer',\n      },\n      {\n        code: 'SI-064',\n        name: 'Logatec',\n      },\n      {\n        code: 'SI-065',\n        name: 'Loška dolina',\n      },\n      {\n        code: 'SI-066',\n        name: 'Loški Potok',\n      },\n      {\n        code: 'SI-167',\n        name: 'Lovrenc na Pohorju',\n      },\n      {\n        code: 'SI-067',\n        name: 'Luce',\n      },\n      {\n        code: 'SI-068',\n        name: 'Lukovica',\n      },\n      {\n        code: 'SI-069',\n        name: 'Majšperk',\n      },\n      {\n        code: 'SI-198',\n        name: 'Makole',\n      },\n      {\n        code: 'SI-070',\n        name: 'Maribor',\n      },\n      {\n        code: 'SI-168',\n        name: 'Markovci',\n      },\n      {\n        code: 'SI-071',\n        name: 'Medvode',\n      },\n      {\n        code: 'SI-072',\n        name: 'Mengeš',\n      },\n      {\n        code: 'SI-073',\n        name: 'Metlika',\n      },\n      {\n        code: 'SI-074',\n        name: 'Mežica',\n      },\n      {\n        code: 'SI-169',\n        name: 'Miklavž na Dravskem polju',\n      },\n      {\n        code: 'SI-075',\n        name: 'Miren-Kostanjevica',\n      },\n      {\n        code: 'SI-170',\n        name: 'Mirna Pec',\n      },\n      {\n        code: 'SI-076',\n        name: 'Mislinja',\n      },\n      {\n        code: 'SI-199',\n        name: 'Mokronog-Trebelno',\n      },\n      {\n        code: 'SI-077',\n        name: 'Moravce',\n      },\n      {\n        code: 'SI-078',\n        name: 'Moravske Toplice',\n      },\n      {\n        code: 'SI-079',\n        name: 'Mozirje',\n      },\n      {\n        code: 'SI-080',\n        name: 'Murska Sobota',\n      },\n      {\n        code: 'SI-081',\n        name: 'Muta',\n      },\n      {\n        code: 'SI-082',\n        name: 'Naklo',\n      },\n      {\n        code: 'SI-083',\n        name: 'Nazarje',\n      },\n      {\n        code: 'SI-084',\n        name: 'Nova Gorica',\n      },\n      {\n        code: 'SI-085',\n        name: 'Novo mesto',\n      },\n      {\n        code: 'SI-086',\n        name: 'Odranci',\n      },\n      {\n        code: 'SI-171',\n        name: 'Oplotnica',\n      },\n      {\n        code: 'SI-087',\n        name: 'Ormož',\n      },\n      {\n        code: 'SI-088',\n        name: 'Osilnica',\n      },\n      {\n        code: 'SI-089',\n        name: 'Pesnica',\n      },\n      {\n        code: 'SI-090',\n        name: 'Piran/Pirano',\n      },\n      {\n        code: 'SI-091',\n        name: 'Pivka',\n      },\n      {\n        code: 'SI-092',\n        name: 'Podcetrtek',\n      },\n      {\n        code: 'SI-172',\n        name: 'Podlehnik',\n      },\n      {\n        code: 'SI-093',\n        name: 'Podvelka',\n      },\n      {\n        code: 'SI-200',\n        name: 'Poljcane',\n      },\n      {\n        code: 'SI-173',\n        name: 'Polzela',\n      },\n      {\n        code: 'SI-094',\n        name: 'Postojna',\n      },\n      {\n        code: 'SI-174',\n        name: 'Prebold',\n      },\n      {\n        code: 'SI-095',\n        name: 'Preddvor',\n      },\n      {\n        code: 'SI-175',\n        name: 'Prevalje',\n      },\n      {\n        code: 'SI-096',\n        name: 'Ptuj',\n      },\n      {\n        code: 'SI-097',\n        name: 'Puconci',\n      },\n      {\n        code: 'SI-098',\n        name: 'Race-Fram',\n      },\n      {\n        code: 'SI-099',\n        name: 'Radece',\n      },\n      {\n        code: 'SI-100',\n        name: 'Radenci',\n      },\n      {\n        code: 'SI-101',\n        name: 'Radlje ob Dravi',\n      },\n      {\n        code: 'SI-102',\n        name: 'Radovljica',\n      },\n      {\n        code: 'SI-103',\n        name: 'Ravne na Koroškem',\n      },\n      {\n        code: 'SI-176',\n        name: 'Razkrižje',\n      },\n      {\n        code: 'SI-209',\n        name: 'Recica ob Savinji',\n      },\n      {\n        code: 'SI-201',\n        name: 'Rence-Vogrsko',\n      },\n      {\n        code: 'SI-177',\n        name: 'Ribnica na Pohorju',\n      },\n      {\n        code: 'SI-104',\n        name: 'Ribnica',\n      },\n      {\n        code: 'SI-106',\n        name: 'Rogaška Slatina',\n      },\n      {\n        code: 'SI-105',\n        name: 'Rogašovci',\n      },\n      {\n        code: 'SI-107',\n        name: 'Rogatec',\n      },\n      {\n        code: 'SI-108',\n        name: 'Ruše',\n      },\n      {\n        code: 'SI-033',\n        name: 'Šalovci',\n      },\n      {\n        code: 'SI-178',\n        name: 'Selnica ob Dravi',\n      },\n      {\n        code: 'SI-109',\n        name: 'Semic',\n      },\n      {\n        code: 'SI-183',\n        name: 'Šempeter-Vrtojba',\n      },\n      {\n        code: 'SI-117',\n        name: 'Šencur',\n      },\n      {\n        code: 'SI-118',\n        name: 'Šentilj',\n      },\n      {\n        code: 'SI-119',\n        name: 'Šentjernej',\n      },\n      {\n        code: 'SI-120',\n        name: 'Šentjur pri Celju',\n      },\n      {\n        code: 'SI-211',\n        name: 'Šentrupert',\n      },\n      {\n        code: 'SI-110',\n        name: 'Sevnica',\n      },\n      {\n        code: 'SI-111',\n        name: 'Sežana',\n      },\n      {\n        code: 'SI-121',\n        name: 'Škocjan',\n      },\n      {\n        code: 'SI-122',\n        name: 'Škofja Loka',\n      },\n      {\n        code: 'SI-123',\n        name: 'Škofljica',\n      },\n      {\n        code: 'SI-112',\n        name: 'Slovenj Gradec',\n      },\n      {\n        code: 'SI-113',\n        name: 'Slovenska Bistrica',\n      },\n      {\n        code: 'SI-114',\n        name: 'Slovenske Konjice',\n      },\n      {\n        code: 'SI-124',\n        name: 'Šmarje pri Jelšah',\n      },\n      {\n        code: 'SI-206',\n        name: 'Šmarješke Toplice',\n      },\n      {\n        code: 'SI-125',\n        name: 'Šmartno ob Paki',\n      },\n      {\n        code: 'SI-194',\n        name: 'Šmartno pri Litiji',\n      },\n      {\n        code: 'SI-194',\n        name: 'Šmartno pri Litiji',\n      },\n      {\n        code: 'SI-179',\n        name: 'Sodražica',\n      },\n      {\n        code: 'SI-180',\n        name: 'Solcava',\n      },\n      {\n        code: 'SI-126',\n        name: 'Šoštanj',\n      },\n      {\n        code: 'SI-202',\n        name: 'Središce ob Dravi',\n      },\n      {\n        code: 'SI-115',\n        name: 'Starše',\n      },\n      {\n        code: 'SI-127',\n        name: 'Štore',\n      },\n      {\n        code: 'SI-203',\n        name: 'Straža',\n      },\n      {\n        code: 'SI-181',\n        name: 'Sveta Ana',\n      },\n      {\n        code: 'SI-204',\n        name: 'Sveta Trojica v Slovenskih Goricah',\n      },\n      {\n        code: 'SI-182',\n        name: 'Sveti Andraž v Slovenskih goricah',\n      },\n      {\n        code: 'SI-116',\n        name: 'Sveti Jurij',\n      },\n      {\n        code: 'SI-210',\n        name: 'Sveti Jurij v Slovenskih Goricah',\n      },\n      {\n        code: 'SI-205',\n        name: 'Sveti Tomaž',\n      },\n      {\n        code: 'SI-184',\n        name: 'Tabor',\n      },\n      {\n        code: 'SI-010',\n        name: 'Tišina',\n      },\n      {\n        code: 'SI-128',\n        name: 'Tolmin',\n      },\n      {\n        code: 'SI-129',\n        name: 'Trbovlje',\n      },\n      {\n        code: 'SI-130',\n        name: 'Trebnje',\n      },\n      {\n        code: 'SI-185',\n        name: 'Trnovska vas',\n      },\n      {\n        code: 'SI-131',\n        name: 'Tržic',\n      },\n      {\n        code: 'SI-186',\n        name: 'Trzin',\n      },\n      {\n        code: 'SI-132',\n        name: 'Turnišce',\n      },\n      {\n        code: 'SI-133',\n        name: 'Velenje',\n      },\n      {\n        code: 'SI-187',\n        name: 'Velika Polana',\n      },\n      {\n        code: 'SI-134',\n        name: 'Velike Lašce',\n      },\n      {\n        code: 'SI-188',\n        name: 'Veržej',\n      },\n      {\n        code: 'SI-135',\n        name: 'Videm',\n      },\n      {\n        code: 'SI-136',\n        name: 'Vipava',\n      },\n      {\n        code: 'SI-137',\n        name: 'Vitanje',\n      },\n      {\n        code: 'SI-138',\n        name: 'Vodice',\n      },\n      {\n        code: 'SI-139',\n        name: 'Vojnik',\n      },\n      {\n        code: 'SI-189',\n        name: 'Vransko',\n      },\n      {\n        code: 'SI-140',\n        name: 'Vrhnika',\n      },\n      {\n        code: 'SI-141',\n        name: 'Vuzenica',\n      },\n      {\n        code: 'SI-142',\n        name: 'Zagorje ob Savi',\n      },\n      {\n        code: 'SI-190',\n        name: 'Žalec',\n      },\n      {\n        code: 'SI-143',\n        name: 'Zavrc',\n      },\n      {\n        code: 'SI-146',\n        name: 'Železniki',\n      },\n      {\n        code: 'SI-191',\n        name: 'Žetale',\n      },\n      {\n        code: 'SI-147',\n        name: 'Žiri',\n      },\n      {\n        code: 'SI-192',\n        name: 'Žirovnica',\n      },\n      {\n        code: 'SI-144',\n        name: 'Zrece',\n      },\n      {\n        code: 'SI-193',\n        name: 'Žužemberk',\n      },\n    ],\n  },\n  {\n    code: 'SB',\n    id: 2336,\n    name: 'Solomon Islands',\n    states: [],\n  },\n  {\n    code: 'SO',\n    id: 2337,\n    name: 'Somalia',\n    states: [\n      {\n        code: 'SO21',\n        name: 'Awdal',\n      },\n      {\n        code: 'SO01',\n        name: 'Bakool',\n      },\n      {\n        code: 'SO02',\n        name: 'Banaadir',\n      },\n      {\n        code: 'SO03',\n        name: 'Bari',\n      },\n      {\n        code: 'SO04',\n        name: 'Bay',\n      },\n      {\n        code: 'SO05',\n        name: 'Galguduud',\n      },\n      {\n        code: 'SO06',\n        name: 'Gedo',\n      },\n      {\n        code: 'SO07',\n        name: 'Hiiraan',\n      },\n      {\n        code: 'SO08',\n        name: 'Jubbada Dhexe',\n      },\n      {\n        code: 'SO09',\n        name: 'Jubbada Hoose',\n      },\n      {\n        code: 'SO10',\n        name: 'Mudug',\n      },\n      {\n        code: 'SO18',\n        name: 'Nugaal',\n      },\n      {\n        code: 'SO12',\n        name: 'Sanaag',\n      },\n      {\n        code: 'SO13',\n        name: 'Shabeellaha Dhexe',\n      },\n      {\n        code: 'SO14',\n        name: 'Shabeellaha Hoose',\n      },\n      {\n        code: 'SO22',\n        name: 'Sool',\n      },\n      {\n        code: 'SO19',\n        name: 'Togdheer',\n      },\n      {\n        code: 'SO20',\n        name: 'Woqooyi Galbeed',\n      },\n    ],\n  },\n  {\n    code: 'ZA',\n    id: 2338,\n    name: 'South Africa',\n    states: [\n      {\n        code: 'SF01',\n        name: 'Cape Province',\n      },\n      {\n        code: 'SF05',\n        name: 'Eastern Cape',\n      },\n      {\n        code: 'SF03',\n        name: 'Free State',\n      },\n      {\n        code: 'SF06',\n        name: 'Gauteng',\n      },\n      {\n        code: 'SF02',\n        name: 'KwaZulu-Natal',\n      },\n      {\n        code: 'SF09',\n        name: 'Limpopo',\n      },\n      {\n        code: 'SF07',\n        name: 'Mpumalanga',\n      },\n      {\n        code: 'SF10',\n        name: 'North-West',\n      },\n      {\n        code: 'SF08',\n        name: 'Northern Cape',\n      },\n      {\n        code: 'SF04',\n        name: 'Transvaal',\n      },\n      {\n        code: 'SF11',\n        name: 'Western Cape',\n      },\n    ],\n  },\n  {\n    code: 'GS',\n    id: 2436,\n    name: 'South Georgia and the South Sandwich Islands',\n    states: [],\n  },\n  {\n    code: 'SS',\n    id: 2447,\n    name: 'South Sudan',\n    states: [\n      {\n        code: 'OD01',\n        name: 'Central Equatoria',\n      },\n      {\n        code: 'OD02',\n        name: 'East Equatoria',\n      },\n      {\n        code: 'OD03',\n        name: 'Jungoli',\n      },\n      {\n        code: 'OD04',\n        name: 'Lakes',\n      },\n      {\n        code: 'OD05',\n        name: 'North Bahr-al-Ghazal',\n      },\n      {\n        code: 'OD06',\n        name: 'Unity',\n      },\n      {\n        code: 'OD07',\n        name: 'Upper Nile',\n      },\n      {\n        code: 'OD08',\n        name: 'Warap',\n      },\n      {\n        code: 'OD09',\n        name: 'West Bahr-al-Ghazal',\n      },\n      {\n        code: 'OD10',\n        name: 'West Equatoria',\n      },\n    ],\n  },\n  {\n    code: 'ES',\n    id: 2339,\n    name: 'Spain',\n    states: [\n      {\n        code: 'SP23',\n        name: 'A Coruña',\n      },\n      {\n        code: 'SP01',\n        name: 'Alava',\n      },\n      {\n        code: 'SP02',\n        name: 'Albacete',\n      },\n      {\n        code: 'SP03',\n        name: 'Alicante',\n      },\n      {\n        code: 'SP04',\n        name: 'Almeria',\n      },\n      {\n        code: 'SP51',\n        name: 'Andalucia',\n      },\n      {\n        code: 'SP52',\n        name: 'Aragon',\n      },\n      {\n        code: 'SP34',\n        name: 'Asturias',\n      },\n      {\n        code: 'SP05',\n        name: 'Avila',\n      },\n      {\n        code: 'SP06',\n        name: 'Badajoz',\n      },\n      {\n        code: 'SP08',\n        name: 'Barcelona',\n      },\n      {\n        code: 'SP09',\n        name: 'Burgos',\n      },\n      {\n        code: 'SP10',\n        name: 'Caceres',\n      },\n      {\n        code: 'SP11',\n        name: 'Cadiz',\n      },\n      {\n        code: 'SP53',\n        name: 'Canarias',\n      },\n      {\n        code: 'SP39',\n        name: 'Cantabria',\n      },\n      {\n        code: 'SP12',\n        name: 'Castellon',\n      },\n      {\n        code: 'SP55',\n        name: 'Castilla y Leon',\n      },\n      {\n        code: 'SP54',\n        name: 'Castilla-La Mancha',\n      },\n      {\n        code: 'SP56',\n        name: 'Cataluna',\n      },\n      {\n        code: 'SP13',\n        name: 'Ciudad Real',\n      },\n      {\n        code: 'SP14',\n        name: 'Cordoba',\n      },\n      {\n        code: 'SP15',\n        name: 'Cuenca',\n      },\n      {\n        code: 'SP57',\n        name: 'Extremadura',\n      },\n      {\n        code: 'SP58',\n        name: 'Galicia',\n      },\n      {\n        code: 'SP16',\n        name: 'Gerona',\n      },\n      {\n        code: 'SP17',\n        name: 'Granada',\n      },\n      {\n        code: 'SP18',\n        name: 'Guadalajara',\n      },\n      {\n        code: 'SP19',\n        name: 'Guipuzcoa',\n      },\n      {\n        code: 'SP20',\n        name: 'Huelva',\n      },\n      {\n        code: 'SP21',\n        name: 'Huesca',\n      },\n      {\n        code: 'SP07',\n        name: 'Islas Baleares',\n      },\n      {\n        code: 'SP22',\n        name: 'Jaen',\n      },\n      {\n        code: 'SP23',\n        name: 'La Coruna',\n      },\n      {\n        code: 'SP27',\n        name: 'La Rioja',\n      },\n      {\n        code: 'SP24',\n        name: 'Las Palmas',\n      },\n      {\n        code: 'SP25',\n        name: 'Leon',\n      },\n      {\n        code: 'SP26',\n        name: 'Lerida',\n      },\n      {\n        code: 'SP28',\n        name: 'Lugo',\n      },\n      {\n        code: 'SP29',\n        name: 'Madrid',\n      },\n      {\n        code: 'SP30',\n        name: 'Malaga',\n      },\n      {\n        code: 'SP31',\n        name: 'Murcia',\n      },\n      {\n        code: 'SP32',\n        name: 'Navarra',\n      },\n      {\n        code: 'SP33',\n        name: 'Orense',\n      },\n      {\n        code: 'SP59',\n        name: 'Pais Vasco',\n      },\n      {\n        code: 'SP35',\n        name: 'Palencia',\n      },\n      {\n        code: 'SP36',\n        name: 'Pontevedra',\n      },\n      {\n        code: 'SP37',\n        name: 'Salamanca',\n      },\n      {\n        code: 'SP38',\n        name: 'Santa Cruz de Tenerife',\n      },\n      {\n        code: 'SP40',\n        name: 'Segovia',\n      },\n      {\n        code: 'SP41',\n        name: 'Sevilla',\n      },\n      {\n        code: 'SP42',\n        name: 'Soria',\n      },\n      {\n        code: 'SP43',\n        name: 'Tarragona',\n      },\n      {\n        code: 'SP44',\n        name: 'Teruel',\n      },\n      {\n        code: 'SP45',\n        name: 'Toledo',\n      },\n      {\n        code: 'SP46',\n        name: 'Valencia',\n      },\n      {\n        code: 'SP60',\n        name: 'Valenciana',\n      },\n      {\n        code: 'SP47',\n        name: 'Valladolid',\n      },\n      {\n        code: 'SP48',\n        name: 'Vizcaya',\n      },\n      {\n        code: 'SP49',\n        name: 'Zamora',\n      },\n      {\n        code: 'SP50',\n        name: 'Zaragoza',\n      },\n    ],\n  },\n  {\n    code: 'LK',\n    id: 2340,\n    name: 'Sri Lanka',\n    states: [],\n  },\n  {\n    code: 'SD',\n    id: 2341,\n    name: 'Sudan',\n    states: [\n      {\n        code: 'SU42',\n        name: 'Blue Nile',\n      },\n      {\n        code: 'SU61',\n        name: 'Central Darfur',\n      },\n      {\n        code: 'SU60',\n        name: 'East Darfur',\n      },\n      {\n        code: 'SU39',\n        name: 'Gedarif',\n      },\n      {\n        code: 'SU38',\n        name: 'Gezira',\n      },\n      {\n        code: 'SU52',\n        name: 'Kassala',\n      },\n      {\n        code: 'SU29',\n        name: 'Khartoum',\n      },\n      {\n        code: 'SU55',\n        name: 'North Darfur',\n      },\n      {\n        code: 'SU56',\n        name: 'North Kordofan',\n      },\n      {\n        code: 'SU43',\n        name: 'Northern',\n      },\n      {\n        code: 'SU36',\n        name: 'Red Sea',\n      },\n      {\n        code: 'SU53',\n        name: 'River Nile',\n      },\n      {\n        code: 'SU58',\n        name: 'Sennar',\n      },\n      {\n        code: 'SU49',\n        name: 'South Darfur',\n      },\n      {\n        code: 'SU50',\n        name: 'South Kordofan',\n      },\n      {\n        code: 'SU47',\n        name: 'West Darfur',\n      },\n      {\n        code: 'SU62',\n        name: 'West Kordofan',\n      },\n      {\n        code: 'SU41',\n        name: 'White Nile',\n      },\n    ],\n  },\n  {\n    code: 'SR',\n    id: 2342,\n    name: 'Suriname',\n    states: [\n      {\n        code: 'NS10',\n        name: 'Brokopondo',\n      },\n      {\n        code: 'NS11',\n        name: 'Commewijne',\n      },\n      {\n        code: 'NS12',\n        name: 'Coronie',\n      },\n      {\n        code: 'NS13',\n        name: 'Marowijne',\n      },\n      {\n        code: 'NS14',\n        name: 'Nickerie',\n      },\n      {\n        code: 'NS16',\n        name: 'Paramaribo',\n      },\n      {\n        code: 'NS15',\n        name: 'Para',\n      },\n      {\n        code: 'NS17',\n        name: 'Saramacca',\n      },\n      {\n        code: 'NS18',\n        name: 'Sipaliwini',\n      },\n      {\n        code: 'NS19',\n        name: 'Wanica',\n      },\n    ],\n  },\n  {\n    code: 'SJ',\n    id: 2437,\n    name: 'Svalbard And Jan Mayen',\n    states: [],\n  },\n  {\n    code: 'SZ',\n    id: 2343,\n    name: 'Swaziland',\n    states: [\n      {\n        code: 'WZ01',\n        name: 'Hhohho',\n      },\n      {\n        code: 'WZ02',\n        name: 'Lubombo',\n      },\n      {\n        code: 'WZ03',\n        name: 'Manzini',\n      },\n      {\n        code: 'WZ04',\n        name: 'Shiselweni',\n      },\n    ],\n  },\n  {\n    code: 'SE',\n    id: 2344,\n    name: 'Sweden',\n    states: [\n      {\n        code: 'SE-K',\n        name: 'Blekinge län',\n      },\n      {\n        code: 'SE-W',\n        name: 'Dalarnas län',\n      },\n      {\n        code: 'SE-X',\n        name: 'Gävleborgs län',\n      },\n      {\n        code: 'SE-I',\n        name: 'Gotlands län',\n      },\n      {\n        code: 'SE-N',\n        name: 'Hallands län',\n      },\n      {\n        code: 'SE-Z',\n        name: 'Jämtlands län',\n      },\n      {\n        code: 'SE-F',\n        name: 'Jönköpings län',\n      },\n      {\n        code: 'SE-H',\n        name: 'Kalmar län',\n      },\n      {\n        code: 'SE-G',\n        name: 'Kronobergs län',\n      },\n      {\n        code: 'SE-BD',\n        name: 'Norrbottens län',\n      },\n      {\n        code: 'SE-M',\n        name: 'Skåne län',\n      },\n      {\n        code: 'SE-D',\n        name: 'Södermanlands län',\n      },\n      {\n        code: 'SE-AB',\n        name: 'Stockholms län',\n      },\n      {\n        code: 'SE-C',\n        name: 'Uppsala län',\n      },\n      {\n        code: 'SE-S',\n        name: 'Värmlands län',\n      },\n      {\n        code: 'SE-AC',\n        name: 'Västerbottens län',\n      },\n      {\n        code: 'SE-Y',\n        name: 'Västernorrlands län',\n      },\n      {\n        code: 'SE-U',\n        name: 'Västmanlands län',\n      },\n      {\n        code: 'SE-O',\n        name: 'Västra Götalands län',\n      },\n      {\n        code: 'SE-T',\n        name: 'Örebro län',\n      },\n      {\n        code: 'SE-E',\n        name: 'Östergötlands län',\n      },\n    ],\n  },\n  {\n    code: 'CH',\n    id: 2345,\n    name: 'Switzerland',\n    states: [\n      {\n        code: 'AG',\n        name: 'Aargau',\n      },\n      {\n        code: 'AR',\n        name: 'Appenzell Ausserrhoden',\n      },\n      {\n        code: 'AI',\n        name: 'Appenzell Innerrhoden',\n      },\n      {\n        code: 'BL',\n        name: 'Basel-Landschaft',\n      },\n      {\n        code: 'BS',\n        name: 'Basel-Stadt',\n      },\n      {\n        code: 'BE',\n        name: 'Bern',\n      },\n      {\n        code: 'FR',\n        name: 'Fribourg',\n      },\n      {\n        code: 'GE',\n        name: 'Genève',\n      },\n      {\n        code: 'GL',\n        name: 'Glarus',\n      },\n      {\n        code: 'GR',\n        name: 'Graubünden',\n      },\n      {\n        code: 'JU',\n        name: 'Jura',\n      },\n      {\n        code: 'LU',\n        name: 'Luzern',\n      },\n      {\n        code: 'NE',\n        name: 'Neuchâtel',\n      },\n      {\n        code: 'NW',\n        name: 'Nidwalden',\n      },\n      {\n        code: 'OW',\n        name: 'Obwalden',\n      },\n      {\n        code: 'SG',\n        name: 'Sankt Gallen',\n      },\n      {\n        code: 'SH',\n        name: 'Schaffhausen',\n      },\n      {\n        code: 'SZ',\n        name: 'Schwyz',\n      },\n      {\n        code: 'SO',\n        name: 'Solothurn',\n      },\n      {\n        code: 'TG',\n        name: 'Thurgau',\n      },\n      {\n        code: 'TI',\n        name: 'Ticino',\n      },\n      {\n        code: 'UR',\n        name: 'Uri',\n      },\n      {\n        code: 'VS',\n        name: 'Valais',\n      },\n      {\n        code: 'VD',\n        name: 'Vaud',\n      },\n      {\n        code: 'ZG',\n        name: 'Zug',\n      },\n      {\n        code: 'ZH',\n        name: 'Zürich',\n      },\n    ],\n  },\n  {\n    code: 'SY',\n    id: 2381,\n    name: 'Syrian Arab Republic',\n    states: [\n      {\n        code: 'SY01',\n        name: 'Al Hasakah',\n      },\n      {\n        code: 'SY09',\n        name: 'Aleppo',\n      },\n      {\n        code: 'SY04',\n        name: 'Ar Raqqah',\n      },\n      {\n        code: 'SY05',\n        name: \"As Suwayda'\",\n      },\n      {\n        code: 'SY13',\n        name: 'Damascus',\n      },\n      {\n        code: 'SY06',\n        name: 'Dar`a',\n      },\n      {\n        code: 'SY07',\n        name: 'Dayr az Zawr',\n      },\n      {\n        code: 'SY10',\n        name: 'Hama',\n      },\n      {\n        code: 'SY11',\n        name: 'Hims',\n      },\n      {\n        code: 'SY12',\n        name: 'Idlib',\n      },\n      {\n        code: 'SY02',\n        name: 'Latakia',\n      },\n      {\n        code: 'SY03',\n        name: 'Quneitra',\n      },\n      {\n        code: 'SY08',\n        name: 'Rif Dimashq',\n      },\n      {\n        code: 'SY14',\n        name: 'Tartus',\n      },\n    ],\n  },\n  {\n    code: 'TW',\n    id: 2375,\n    name: 'Taiwan',\n    states: [\n      {\n        code: 'TW02',\n        name: 'Kaohsiung',\n      },\n      {\n        code: 'TW03',\n        name: 'Taipei',\n      },\n    ],\n  },\n  {\n    code: 'TJ',\n    id: 2348,\n    name: 'Tajikistan',\n    states: [\n      {\n        code: 'TI01',\n        name: 'Badakhshoni Kuni',\n      },\n      {\n        code: 'TI04',\n        name: 'Dushanbe',\n      },\n      {\n        code: 'TI02',\n        name: 'Khatlon',\n      },\n      {\n        code: 'TI05',\n        name: 'Regions of Republican Subordination',\n      },\n      {\n        code: 'TI03',\n        name: 'Sogd',\n      },\n    ],\n  },\n  {\n    code: 'TZ',\n    id: 2349,\n    name: 'Tanzania',\n    states: [\n      {\n        code: 'TZ26',\n        name: 'Arusha',\n      },\n      {\n        code: 'TZ23',\n        name: 'Dar es Salaam',\n      },\n      {\n        code: 'TZ03',\n        name: 'Dodoma',\n      },\n      {\n        code: 'TZ28',\n        name: 'Geita',\n      },\n      {\n        code: 'TZ04',\n        name: 'Iringa',\n      },\n      {\n        code: 'TZ19',\n        name: 'Kagera',\n      },\n      {\n        code: 'TZ29',\n        name: 'Katavi',\n      },\n      {\n        code: 'TZ05',\n        name: 'Kigoma',\n      },\n      {\n        code: 'TZ06',\n        name: 'Kilimanjaro',\n      },\n      {\n        code: 'TZ07',\n        name: 'Lindi',\n      },\n      {\n        code: 'TZ27',\n        name: 'Manyara',\n      },\n      {\n        code: 'TZ08',\n        name: 'Mara',\n      },\n      {\n        code: 'TZ09',\n        name: 'Mbeya',\n      },\n      {\n        code: 'TZ10',\n        name: 'Morogoro',\n      },\n      {\n        code: 'TZ11',\n        name: 'Mtwara',\n      },\n      {\n        code: 'TZ12',\n        name: 'Mwanza',\n      },\n      {\n        code: 'TZ30',\n        name: 'Njombe',\n      },\n      {\n        code: 'TZ13',\n        name: 'Pemba North',\n      },\n      {\n        code: 'TZ20',\n        name: 'Pemba South',\n      },\n      {\n        code: 'TZ02',\n        name: 'Pwani',\n      },\n      {\n        code: 'TZ24',\n        name: 'Rukwa',\n      },\n      {\n        code: 'TZ14',\n        name: 'Ruvuma',\n      },\n      {\n        code: 'TZ15',\n        name: 'Shinyanga',\n      },\n      {\n        code: 'TZ31',\n        name: 'Simiyu',\n      },\n      {\n        code: 'TZ16',\n        name: 'Singida',\n      },\n      {\n        code: 'TZ17',\n        name: 'Tabora',\n      },\n      {\n        code: 'TZ18',\n        name: 'Tanga',\n      },\n      {\n        code: 'TZ22',\n        name: 'Zanzibar North',\n      },\n      {\n        code: 'TZ21',\n        name: 'Zanzibar South and Central',\n      },\n      {\n        code: 'TZ25',\n        name: 'Zanzibar West',\n      },\n    ],\n  },\n  {\n    code: 'TH',\n    id: 2350,\n    name: 'Thailand',\n    states: [\n      {\n        code: 'TH77',\n        name: 'Amnat Charoen',\n      },\n      {\n        code: 'TH35',\n        name: 'Ang Thong',\n      },\n      {\n        code: 'TH40',\n        name: 'Bangkok Metropolis',\n      },\n      {\n        code: 'TH81',\n        name: 'Bueng Kan',\n      },\n      {\n        code: 'TH28',\n        name: 'Buri Ram',\n      },\n      {\n        code: 'TH44',\n        name: 'Chachoengsao',\n      },\n      {\n        code: 'TH32',\n        name: 'Chai Nat',\n      },\n      {\n        code: 'TH26',\n        name: 'Chaiyaphum',\n      },\n      {\n        code: 'TH48',\n        name: 'Chanthaburi',\n      },\n      {\n        code: 'TH02',\n        name: 'Chiang Mai',\n      },\n      {\n        code: 'TH03',\n        name: 'Chiang Rai',\n      },\n      {\n        code: 'TH46',\n        name: 'Chon Buri',\n      },\n      {\n        code: 'TH58',\n        name: 'Chumphon',\n      },\n      {\n        code: 'TH23',\n        name: 'Kalasin',\n      },\n      {\n        code: 'TH11',\n        name: 'Kamphaeng Phet',\n      },\n      {\n        code: 'TH50',\n        name: 'Kanchanaburi',\n      },\n      {\n        code: 'TH22',\n        name: 'Khon Kaen',\n      },\n      {\n        code: 'TH63',\n        name: 'Krabi',\n      },\n      {\n        code: 'TH06',\n        name: 'Lampang',\n      },\n      {\n        code: 'TH05',\n        name: 'Lamphun',\n      },\n      {\n        code: 'TH18',\n        name: 'Loei',\n      },\n      {\n        code: 'TH34',\n        name: 'Lop Buri',\n      },\n      {\n        code: 'TH01',\n        name: 'Mae Hong Son',\n      },\n      {\n        code: 'TH24',\n        name: 'Maha Sarakham',\n      },\n      {\n        code: 'TH78',\n        name: 'Mukdahan',\n      },\n      {\n        code: 'TH43',\n        name: 'Nakhon Nayok',\n      },\n      {\n        code: 'TH53',\n        name: 'Nakhon Pathom',\n      },\n      {\n        code: 'TH73',\n        name: 'Nakhon Phanom',\n      },\n      {\n        code: 'TH27',\n        name: 'Nakhon Ratchasima',\n      },\n      {\n        code: 'TH16',\n        name: 'Nakhon Sawan',\n      },\n      {\n        code: 'TH64',\n        name: 'Nakhon Si Thammarat',\n      },\n      {\n        code: 'TH04',\n        name: 'Nan',\n      },\n      {\n        code: 'TH31',\n        name: 'Narathiwat',\n      },\n      {\n        code: 'TH79',\n        name: 'Nong Bua Lam Phu',\n      },\n      {\n        code: 'TH17',\n        name: 'Nong Khai',\n      },\n      {\n        code: 'TH38',\n        name: 'Nonthaburi',\n      },\n      {\n        code: 'TH39',\n        name: 'Pathum Thani',\n      },\n      {\n        code: 'TH69',\n        name: 'Pattani',\n      },\n      {\n        code: 'TH61',\n        name: 'Phangnga',\n      },\n      {\n        code: 'TH66',\n        name: 'Phatthalung',\n      },\n      {\n        code: 'TH41',\n        name: 'Phayao',\n      },\n      {\n        code: 'TH14',\n        name: 'Phetchabun',\n      },\n      {\n        code: 'TH56',\n        name: 'Phetchaburi',\n      },\n      {\n        code: 'TH13',\n        name: 'Phichit',\n      },\n      {\n        code: 'TH12',\n        name: 'Phitsanulok',\n      },\n      {\n        code: 'TH36',\n        name: 'Phra Nakhon Si Ayutthaya',\n      },\n      {\n        code: 'TH07',\n        name: 'Phrae',\n      },\n      {\n        code: 'TH62',\n        name: 'Phuket',\n      },\n      {\n        code: 'TH74',\n        name: 'Prachin Buri',\n      },\n      {\n        code: 'TH57',\n        name: 'Prachuap Khiri Khan',\n      },\n      {\n        code: 'TH59',\n        name: 'Ranong',\n      },\n      {\n        code: 'TH52',\n        name: 'Ratchaburi',\n      },\n      {\n        code: 'TH47',\n        name: 'Rayong',\n      },\n      {\n        code: 'TH25',\n        name: 'Roi Et',\n      },\n      {\n        code: 'TH80',\n        name: 'Sa Kaeo',\n      },\n      {\n        code: 'TH20',\n        name: 'Sakon Nakhon',\n      },\n      {\n        code: 'TH42',\n        name: 'Samut Prakan',\n      },\n      {\n        code: 'TH55',\n        name: 'Samut Sakhon',\n      },\n      {\n        code: 'TH54',\n        name: 'Samut Songkhram',\n      },\n      {\n        code: 'TH37',\n        name: 'Saraburi',\n      },\n      {\n        code: 'TH67',\n        name: 'Satun',\n      },\n      {\n        code: 'TH30',\n        name: 'Si Sa Ket',\n      },\n      {\n        code: 'TH33',\n        name: 'Sing Buri',\n      },\n      {\n        code: 'TH68',\n        name: 'Songkhla',\n      },\n      {\n        code: 'TH09',\n        name: 'Sukhothai',\n      },\n      {\n        code: 'TH51',\n        name: 'Suphan Buri',\n      },\n      {\n        code: 'TH60',\n        name: 'Surat Thani',\n      },\n      {\n        code: 'TH29',\n        name: 'Surin',\n      },\n      {\n        code: 'TH08',\n        name: 'Tak',\n      },\n      {\n        code: 'TH65',\n        name: 'Trang',\n      },\n      {\n        code: 'TH49',\n        name: 'Trat',\n      },\n      {\n        code: 'TH75',\n        name: 'Ubon Ratchathani',\n      },\n      {\n        code: 'TH76',\n        name: 'Udon Thani',\n      },\n      {\n        code: 'TH15',\n        name: 'Uthai Thani',\n      },\n      {\n        code: 'TH10',\n        name: 'Uttaradit',\n      },\n      {\n        code: 'TH70',\n        name: 'Yala',\n      },\n      {\n        code: 'TH72',\n        name: 'Yasothon',\n      },\n    ],\n  },\n  {\n    code: 'TL',\n    id: 2404,\n    name: 'Timor-Leste',\n    states: [],\n  },\n  {\n    code: 'TG',\n    id: 2351,\n    name: 'Togo',\n    states: [\n      {\n        code: 'TO22',\n        name: 'Centrale',\n      },\n      {\n        code: 'TO23',\n        name: 'Kara',\n      },\n      {\n        code: 'TO24',\n        name: 'Maritime',\n      },\n      {\n        code: 'TO25',\n        name: 'Plateaux',\n      },\n      {\n        code: 'TO26',\n        name: 'Savanes',\n      },\n    ],\n  },\n  {\n    code: 'TK',\n    id: 2438,\n    name: 'Tokelau',\n    states: [],\n  },\n  {\n    code: 'TO',\n    id: 2405,\n    name: 'Tonga',\n    states: [],\n  },\n  {\n    code: 'TT',\n    id: 2352,\n    name: 'Trinidad and Tobago',\n    states: [\n      {\n        code: 'TD01',\n        name: 'Arima',\n      },\n      {\n        code: 'TD13',\n        name: 'Chaguanas',\n      },\n      {\n        code: 'TD14',\n        name: 'Couva/Tabaquite/Talparo',\n      },\n      {\n        code: 'TD15',\n        name: 'Diego Martin',\n      },\n      {\n        code: 'TD11',\n        name: 'Eastern Tobago',\n      },\n      {\n        code: 'TD16',\n        name: 'Mayaro/Rio Claro',\n      },\n      {\n        code: 'TD17',\n        name: 'Penal/Debe',\n      },\n      {\n        code: 'TD18',\n        name: 'Point Fortin',\n      },\n      {\n        code: 'TD05',\n        name: 'Port of Spain',\n      },\n      {\n        code: 'TD19',\n        name: 'Princes Town',\n      },\n      {\n        code: 'TD10',\n        name: 'San Fernando',\n      },\n      {\n        code: 'TD20',\n        name: 'San Juan/Laventille',\n      },\n      {\n        code: 'TD21',\n        name: 'Sangre Grande',\n      },\n      {\n        code: 'TD22',\n        name: 'Siparia',\n      },\n      {\n        code: 'TD23',\n        name: 'Tunapuna/Piarco',\n      },\n      {\n        code: 'TD11',\n        name: 'Western Tobago',\n      },\n    ],\n  },\n  {\n    code: 'TN',\n    id: 2353,\n    name: 'Tunisia',\n    states: [\n      {\n        code: 'TS38',\n        name: 'Ariana',\n      },\n      {\n        code: 'TS17',\n        name: 'Béja',\n      },\n      {\n        code: 'TS27',\n        name: 'Ben Arous',\n      },\n      {\n        code: 'TS18',\n        name: 'Bizerte',\n      },\n      {\n        code: 'TS29',\n        name: 'Gabès',\n      },\n      {\n        code: 'TS30',\n        name: 'Gafsa',\n      },\n      {\n        code: 'TS06',\n        name: 'Jendouba',\n      },\n      {\n        code: 'TS03',\n        name: 'Kairouan',\n      },\n      {\n        code: 'TS02',\n        name: 'Kassérine',\n      },\n      {\n        code: 'TS31',\n        name: 'Kebili',\n      },\n      {\n        code: 'TS14',\n        name: 'Le Kef',\n      },\n      {\n        code: 'TS15',\n        name: 'Mahdia',\n      },\n      {\n        code: 'TS39',\n        name: 'Manouba',\n      },\n      {\n        code: 'TS28',\n        name: 'Médenine',\n      },\n      {\n        code: 'TS16',\n        name: 'Monastir',\n      },\n      {\n        code: 'TS19',\n        name: 'Nabeul',\n      },\n      {\n        code: 'TS32',\n        name: 'Sfax',\n      },\n      {\n        code: 'TS33',\n        name: 'Sidi Bou Zid',\n      },\n      {\n        code: 'TS22',\n        name: 'Siliana',\n      },\n      {\n        code: 'TS23',\n        name: 'Sousse',\n      },\n      {\n        code: 'TS34',\n        name: 'Tataouine',\n      },\n      {\n        code: 'TS35',\n        name: 'Tozeur',\n      },\n      {\n        code: 'TS36',\n        name: 'Tunis',\n      },\n      {\n        code: 'TS37',\n        name: 'Zaghouan',\n      },\n    ],\n  },\n  {\n    code: 'TR',\n    id: 2354,\n    name: 'Turkey',\n    states: [\n      {\n        code: 'TU81',\n        name: 'Adana',\n      },\n      {\n        code: 'TU02',\n        name: 'Adiyaman',\n      },\n      {\n        code: 'TU03',\n        name: 'Afyonkarahisar',\n      },\n      {\n        code: 'TU04',\n        name: 'Agri',\n      },\n      {\n        code: 'TU75',\n        name: 'Aksaray',\n      },\n      {\n        code: 'TU05',\n        name: 'Amasya',\n      },\n      {\n        code: 'TU68',\n        name: 'Ankara',\n      },\n      {\n        code: 'TU07',\n        name: 'Antalya',\n      },\n      {\n        code: 'TU86',\n        name: 'Ardahan',\n      },\n      {\n        code: 'TU08',\n        name: 'Artvin',\n      },\n      {\n        code: 'TU09',\n        name: 'Aydin',\n      },\n      {\n        code: 'TU10',\n        name: 'Balikesir',\n      },\n      {\n        code: 'TU87',\n        name: 'Bartin',\n      },\n      {\n        code: 'TU76',\n        name: 'Batman',\n      },\n      {\n        code: 'TU77',\n        name: 'Bayburt',\n      },\n      {\n        code: 'TU11',\n        name: 'Bilecik',\n      },\n      {\n        code: 'TU12',\n        name: 'Bingöl',\n      },\n      {\n        code: 'TU13',\n        name: 'Bitlis',\n      },\n      {\n        code: 'TU14',\n        name: 'Bolu',\n      },\n      {\n        code: 'TU15',\n        name: 'Burdur',\n      },\n      {\n        code: 'TU16',\n        name: 'Bursa',\n      },\n      {\n        code: 'TU17',\n        name: 'Çanakkale',\n      },\n      {\n        code: 'TU82',\n        name: 'Çankiri',\n      },\n      {\n        code: 'TU19',\n        name: 'Çorum',\n      },\n      {\n        code: 'TU20',\n        name: 'Denizli',\n      },\n      {\n        code: 'TU21',\n        name: 'Diyarbakir',\n      },\n      {\n        code: 'TU93',\n        name: 'Düzce',\n      },\n      {\n        code: 'TU22',\n        name: 'Edirne',\n      },\n      {\n        code: 'TU23',\n        name: 'Elazig',\n      },\n      {\n        code: 'TU24',\n        name: 'Erzincan',\n      },\n      {\n        code: 'TU25',\n        name: 'Erzurum',\n      },\n      {\n        code: 'TU26',\n        name: 'Eskisehir',\n      },\n      {\n        code: 'TU83',\n        name: 'Gaziantep',\n      },\n      {\n        code: 'TU28',\n        name: 'Giresun',\n      },\n      {\n        code: 'TU69',\n        name: 'Gümüshane',\n      },\n      {\n        code: 'TU70',\n        name: 'Hakkari',\n      },\n      {\n        code: 'TU31',\n        name: 'Hatay',\n      },\n      {\n        code: 'TU88',\n        name: 'Igdir',\n      },\n      {\n        code: 'TU33',\n        name: 'Isparta',\n      },\n      {\n        code: 'TU34',\n        name: 'Istanbul',\n      },\n      {\n        code: 'TU35',\n        name: 'Izmir',\n      },\n      {\n        code: 'TU46',\n        name: 'Kahramanmaras',\n      },\n      {\n        code: 'TU89',\n        name: 'Karabük',\n      },\n      {\n        code: 'TU78',\n        name: 'Karaman',\n      },\n      {\n        code: 'TU84',\n        name: 'Kars',\n      },\n      {\n        code: 'TU37',\n        name: 'Kastamonu',\n      },\n      {\n        code: 'TU38',\n        name: 'Kayseri',\n      },\n      {\n        code: 'TU90',\n        name: 'Kilis',\n      },\n      {\n        code: 'TU79',\n        name: 'Kirikkale',\n      },\n      {\n        code: 'TU39',\n        name: 'Kirklareli',\n      },\n      {\n        code: 'TU40',\n        name: 'Kirsehir',\n      },\n      {\n        code: 'TU41',\n        name: 'Kocaeli',\n      },\n      {\n        code: 'TU71',\n        name: 'Konya',\n      },\n      {\n        code: 'TU43',\n        name: 'Kütahya',\n      },\n      {\n        code: 'TU44',\n        name: 'Malatya',\n      },\n      {\n        code: 'TU45',\n        name: 'Manisa',\n      },\n      {\n        code: 'TU72',\n        name: 'Mardin',\n      },\n      {\n        code: 'TU32',\n        name: 'Mersin',\n      },\n      {\n        code: 'TU48',\n        name: 'Mugla',\n      },\n      {\n        code: 'TU49',\n        name: 'Mus',\n      },\n      {\n        code: 'TU50',\n        name: 'Nevsehir',\n      },\n      {\n        code: 'TU73',\n        name: 'Nigde',\n      },\n      {\n        code: 'TU52',\n        name: 'Ordu',\n      },\n      {\n        code: 'TU91',\n        name: 'Osmaniye',\n      },\n      {\n        code: 'TU53',\n        name: 'Rize',\n      },\n      {\n        code: 'TU54',\n        name: 'Sakarya',\n      },\n      {\n        code: 'TU55',\n        name: 'Samsun',\n      },\n      {\n        code: 'TU63',\n        name: 'Sanliurfa',\n      },\n      {\n        code: 'TU74',\n        name: 'Siirt',\n      },\n      {\n        code: 'TU57',\n        name: 'Sinop',\n      },\n      {\n        code: 'TU80',\n        name: 'Sirnak',\n      },\n      {\n        code: 'TU58',\n        name: 'Sivas',\n      },\n      {\n        code: 'TU59',\n        name: 'Tekirdag',\n      },\n      {\n        code: 'TU60',\n        name: 'Tokat',\n      },\n      {\n        code: 'TU61',\n        name: 'Trabzon',\n      },\n      {\n        code: 'TU62',\n        name: 'Tunceli',\n      },\n      {\n        code: 'TU64',\n        name: 'Usak',\n      },\n      {\n        code: 'TU65',\n        name: 'Van',\n      },\n      {\n        code: 'TU92',\n        name: 'Yalova',\n      },\n      {\n        code: 'TU66',\n        name: 'Yozgat',\n      },\n      {\n        code: 'TU85',\n        name: 'Zonguldak',\n      },\n    ],\n  },\n  {\n    code: 'TM',\n    id: 2355,\n    name: 'Turkmenistan',\n    states: [\n      {\n        code: 'TX01',\n        name: 'Ahal',\n      },\n      {\n        code: 'TM.AB',\n        name: 'Ashgabat',\n      },\n      {\n        code: 'TX02',\n        name: 'Balkan',\n      },\n      {\n        code: 'TX03',\n        name: 'Dashoguz',\n      },\n      {\n        code: 'TX04',\n        name: 'Lebap',\n      },\n      {\n        code: 'TX05',\n        name: 'Mary',\n      },\n    ],\n  },\n  {\n    code: 'TC',\n    id: 2439,\n    name: 'Turks and Caicos Islands',\n    states: [],\n  },\n  {\n    code: 'TV',\n    id: 2440,\n    name: 'Tuvalu',\n    states: [],\n  },\n  {\n    code: 'UG',\n    id: 2356,\n    name: 'Uganda',\n    states: [\n      {\n        code: 'UG.AI',\n        name: 'Abim',\n      },\n      {\n        code: 'UG.AD',\n        name: 'Adjumani',\n      },\n      {\n        code: 'UG.AG',\n        name: 'Agago',\n      },\n      {\n        code: 'UG.AL',\n        name: 'Alebtong',\n      },\n      {\n        code: 'UG.AT',\n        name: 'Amolatar',\n      },\n      {\n        code: 'UG.AZ',\n        name: 'Amudat',\n      },\n      {\n        code: 'UG.AM',\n        name: 'Amuria',\n      },\n      {\n        code: 'UG.AY',\n        name: 'Amuru',\n      },\n      {\n        code: 'UG.AQ',\n        name: 'Apac',\n      },\n      {\n        code: 'UG.AX',\n        name: 'Arua',\n      },\n      {\n        code: 'UG.BD',\n        name: 'Budaka',\n      },\n      {\n        code: 'UG.BA',\n        name: 'Bududa',\n      },\n      {\n        code: 'UG.BI',\n        name: 'Bugiri',\n      },\n      {\n        code: 'UG.BH',\n        name: 'Buhweju',\n      },\n      {\n        code: 'UG.BZ',\n        name: 'Buikwe',\n      },\n      {\n        code: 'UG.BE',\n        name: 'Bukedea',\n      },\n      {\n        code: 'UG.BM',\n        name: 'Bukomansimbi',\n      },\n      {\n        code: 'UG.BW',\n        name: 'Bukwo',\n      },\n      {\n        code: 'UG.BB',\n        name: 'Bulambuli',\n      },\n      {\n        code: 'UG.BL',\n        name: 'Buliisa',\n      },\n      {\n        code: 'UG.BX',\n        name: 'Bundibugyo',\n      },\n      {\n        code: 'UG.BC',\n        name: 'Bushenyi',\n      },\n      {\n        code: 'UG.BU',\n        name: 'Busia',\n      },\n      {\n        code: 'UG.BJ',\n        name: 'Butaleja',\n      },\n      {\n        code: 'UG.BT',\n        name: 'Butambala',\n      },\n      {\n        code: 'UG.BV',\n        name: 'Buvuma',\n      },\n      {\n        code: 'UG.BY',\n        name: 'Buyende',\n      },\n      {\n        code: 'UG.DO',\n        name: 'Dokolo',\n      },\n      {\n        code: 'UG.GM',\n        name: 'Gomba',\n      },\n      {\n        code: 'UG.GL',\n        name: 'Gulu',\n      },\n      {\n        code: 'UG.HO',\n        name: 'Hoima',\n      },\n      {\n        code: 'UG.IB',\n        name: 'Ibanda',\n      },\n      {\n        code: 'UG.IC',\n        name: 'Iganga',\n      },\n      {\n        code: 'UG.NG',\n        name: 'Isingiro',\n      },\n      {\n        code: 'UG.JI',\n        name: 'Jinja',\n      },\n      {\n        code: 'UG.AB',\n        name: 'Kaabong',\n      },\n      {\n        code: 'UG.KA',\n        name: 'Kabale',\n      },\n      {\n        code: 'UG.BR',\n        name: 'Kabarole',\n      },\n      {\n        code: 'UG.KD',\n        name: 'Kaberamaido',\n      },\n      {\n        code: 'UG.KN',\n        name: 'Kalangala',\n      },\n      {\n        code: 'UG.RO',\n        name: 'Kaliro',\n      },\n      {\n        code: 'UG.QA',\n        name: 'Kalungu',\n      },\n      {\n        code: 'UG.KM',\n        name: 'Kampala',\n      },\n      {\n        code: 'UG.QU',\n        name: 'Kamuli',\n      },\n      {\n        code: 'UG.KE',\n        name: 'Kamwenge',\n      },\n      {\n        code: 'UG.UU',\n        name: 'Kanungu',\n      },\n      {\n        code: 'UG.QP',\n        name: 'Kapchorwa',\n      },\n      {\n        code: 'UG.KS',\n        name: 'Kasese',\n      },\n      {\n        code: 'UG.KK',\n        name: 'Katakwi',\n      },\n      {\n        code: 'UG.KY',\n        name: 'Kayunga',\n      },\n      {\n        code: 'UG.KI',\n        name: 'Kibaale',\n      },\n      {\n        code: 'UG.QO',\n        name: 'Kiboga',\n      },\n      {\n        code: 'UG.QB',\n        name: 'Kibuku',\n      },\n      {\n        code: 'UG.KH',\n        name: 'Kiruhuura',\n      },\n      {\n        code: 'UG.QD',\n        name: 'Kiryandongo',\n      },\n      {\n        code: 'UG.KR',\n        name: 'Kisoro',\n      },\n      {\n        code: 'UG.QT',\n        name: 'Kitgum',\n      },\n      {\n        code: 'UG.OK',\n        name: 'Koboko',\n      },\n      {\n        code: 'UG.QL',\n        name: 'Kole',\n      },\n      {\n        code: 'UG.KF',\n        name: 'Kotido',\n      },\n      {\n        code: 'UG.QM',\n        name: 'Kumi',\n      },\n      {\n        code: 'UG.QW',\n        name: 'Kween',\n      },\n      {\n        code: 'UG.QZ',\n        name: 'Kyankwanzi',\n      },\n      {\n        code: 'UG.QG',\n        name: 'Kyegegwa',\n      },\n      {\n        code: 'UG.QJ',\n        name: 'Kyenjojo',\n      },\n      {\n        code: 'UG.LM',\n        name: 'Lamwo',\n      },\n      {\n        code: 'UG.LL',\n        name: 'Lira',\n      },\n      {\n        code: 'UG.LK',\n        name: 'Luuka',\n      },\n      {\n        code: 'UG.LW',\n        name: 'Luwero',\n      },\n      {\n        code: 'UG.LE',\n        name: 'Lwengo',\n      },\n      {\n        code: 'UG.LY',\n        name: 'Lyantonde',\n      },\n      {\n        code: 'UG.MW',\n        name: 'Manafwa',\n      },\n      {\n        code: 'UG.MQ',\n        name: 'Masaka',\n      },\n      {\n        code: 'UG.MZ',\n        name: 'Masindi',\n      },\n      {\n        code: 'UG.MG',\n        name: 'Mayuge',\n      },\n      {\n        code: 'UG.ME',\n        name: 'Mbale',\n      },\n      {\n        code: 'UG.RR',\n        name: 'Mbarara',\n      },\n      {\n        code: 'UG.MM',\n        name: 'Mitoma',\n      },\n      {\n        code: 'UG.TY',\n        name: 'Mityana',\n      },\n      {\n        code: 'UG.MX',\n        name: 'Moroto',\n      },\n      {\n        code: 'UG.MY',\n        name: 'Moyo',\n      },\n      {\n        code: 'UG.MJ',\n        name: 'Mpigi',\n      },\n      {\n        code: 'UG.MD',\n        name: 'Mubende',\n      },\n      {\n        code: 'UG.MV',\n        name: 'Mukono',\n      },\n      {\n        code: 'UG.NI',\n        name: 'Nakapiripirit',\n      },\n      {\n        code: 'UG.NK',\n        name: 'Nakaseke',\n      },\n      {\n        code: 'UG.NA',\n        name: 'Nakasongola',\n      },\n      {\n        code: 'UG.NY',\n        name: 'Namayingo',\n      },\n      {\n        code: 'UG.BK',\n        name: 'Namutumba',\n      },\n      {\n        code: 'UG.NQ',\n        name: 'Napak',\n      },\n      {\n        code: 'UG.NB',\n        name: 'Nebbi',\n      },\n      {\n        code: 'UG.NR',\n        name: 'Ngora',\n      },\n      {\n        code: 'UG.NO',\n        name: 'Ntoroko',\n      },\n      {\n        code: 'UG.NT',\n        name: 'Ntungamo',\n      },\n      {\n        code: 'UG.NW',\n        name: 'Nwoya',\n      },\n      {\n        code: 'UG.MH',\n        name: 'Nyadri',\n      },\n      {\n        code: 'UG.OT',\n        name: 'Otuke',\n      },\n      {\n        code: 'UG.OY',\n        name: 'Oyam',\n      },\n      {\n        code: 'UG.PR',\n        name: 'Pader',\n      },\n      {\n        code: 'UG.PS',\n        name: 'Pallisa',\n      },\n      {\n        code: 'UG.RI',\n        name: 'Rakai',\n      },\n      {\n        code: 'UG.RZ',\n        name: 'Rubirizi',\n      },\n      {\n        code: 'UG.RK',\n        name: 'Rukungiri',\n      },\n      {\n        code: 'UG.SE',\n        name: 'Sembabule',\n      },\n      {\n        code: 'UG.SX',\n        name: 'Serere',\n      },\n      {\n        code: 'UG.SH',\n        name: 'Sheema',\n      },\n      {\n        code: 'UG.SK',\n        name: 'Sironko',\n      },\n      {\n        code: 'UG.ST',\n        name: 'Soroti',\n      },\n      {\n        code: 'UG.TR',\n        name: 'Tororo',\n      },\n      {\n        code: 'UG.WA',\n        name: 'Wakiso',\n      },\n      {\n        code: 'UG.YU',\n        name: 'Yumbe',\n      },\n      {\n        code: 'UG.ZO',\n        name: 'Zombo',\n      },\n    ],\n  },\n  {\n    code: 'UA',\n    id: 2357,\n    name: 'Ukraine',\n    states: [\n      {\n        code: 'UP01',\n        name: 'Cherkasy',\n      },\n      {\n        code: 'UP02',\n        name: 'Chernihiv',\n      },\n      {\n        code: 'UP03',\n        name: 'Chernivtsi',\n      },\n      {\n        code: 'UP11',\n        name: 'Crimea',\n      },\n      {\n        code: 'UP04',\n        name: \"Dnipropetrovs'k\",\n      },\n      {\n        code: 'UP05',\n        name: \"Donets'k\",\n      },\n      {\n        code: 'UP06',\n        name: \"Ivano-Frankivs'k\",\n      },\n      {\n        code: 'UP07',\n        name: 'Kharkiv',\n      },\n      {\n        code: 'UP08',\n        name: 'Kherson',\n      },\n      {\n        code: 'UP09',\n        name: \"Khmel'nyts'kyy\",\n      },\n      {\n        code: 'UP13',\n        name: 'Kiev',\n      },\n      {\n        code: 'UP12',\n        name: 'Kiev City',\n      },\n      {\n        code: 'UP10',\n        name: 'Kirovohrad',\n      },\n      {\n        code: 'UP15',\n        name: \"L'viv\",\n      },\n      {\n        code: 'UP14',\n        name: \"Luhans'k\",\n      },\n      {\n        code: 'UP16',\n        name: 'Mykolayiv',\n      },\n      {\n        code: 'UP17',\n        name: 'Odessa',\n      },\n      {\n        code: 'UP18',\n        name: 'Poltava',\n      },\n      {\n        code: 'UP19',\n        name: 'Rivne',\n      },\n      {\n        code: 'UP20',\n        name: \"Sevastopol' City\",\n      },\n      {\n        code: 'UP21',\n        name: 'Sumy',\n      },\n      {\n        code: 'UP22',\n        name: \"Ternopil'\",\n      },\n      {\n        code: 'UP25',\n        name: 'Transcarpathia',\n      },\n      {\n        code: 'UP23',\n        name: 'Vinnytsya',\n      },\n      {\n        code: 'UP24',\n        name: 'Volyn',\n      },\n      {\n        code: 'UP26',\n        name: 'Zaporizhzhya',\n      },\n      {\n        code: 'UP27',\n        name: 'Zhytomyr',\n      },\n    ],\n  },\n  {\n    code: 'AE',\n    id: 2358,\n    name: 'United Arab Emirates',\n    states: [\n      {\n        code: 'AE02',\n        name: \"'Ajman\",\n      },\n      {\n        code: 'AE01',\n        name: 'Abu Dhabi',\n      },\n      {\n        code: 'AE04',\n        name: 'Al Fujayrah',\n      },\n      {\n        code: 'AE03',\n        name: 'Dubai',\n      },\n      {\n        code: 'AE05',\n        name: \"Ra's al Khaymah\",\n      },\n      {\n        code: 'AE06',\n        name: 'Sharjah',\n      },\n      {\n        code: 'AE07',\n        name: 'Umm al Qaywayn',\n      },\n    ],\n  },\n  {\n    code: 'UM',\n    id: 2441,\n    name: 'United States Minor Outlying Islands',\n    states: [],\n  },\n  {\n    code: 'UY',\n    id: 2360,\n    name: 'Uruguay',\n    states: [],\n  },\n  {\n    code: 'UZ',\n    id: 2361,\n    name: 'Uzbekistan',\n    states: [\n      {\n        code: 'UZ01',\n        name: 'Andijon',\n      },\n      {\n        code: 'UZ02',\n        name: 'Buxoro',\n      },\n      {\n        code: 'UZ03',\n        name: 'Farg`ona',\n      },\n      {\n        code: 'UZ15',\n        name: 'Jizzax',\n      },\n      {\n        code: 'UZ09',\n        name: 'Karakalpakstan',\n      },\n      {\n        code: 'UZ08',\n        name: 'Kashkadarya',\n      },\n      {\n        code: 'UZ06',\n        name: 'Namangan',\n      },\n      {\n        code: 'UZ07',\n        name: 'Navoi',\n      },\n      {\n        code: 'UZ10',\n        name: 'Samarkand',\n      },\n      {\n        code: 'UZ16',\n        name: 'Sirdaryo',\n      },\n      {\n        code: 'UZ12',\n        name: 'Surxondaryo',\n      },\n      {\n        code: 'UZ13',\n        name: 'Tashkent City',\n      },\n      {\n        code: 'UZ14',\n        name: 'Tashkent',\n      },\n      {\n        code: 'UZ05',\n        name: 'Xorazm',\n      },\n    ],\n  },\n  {\n    code: 'NH',\n    id: 2406,\n    name: 'Vanuatu',\n    states: [],\n  },\n  {\n    code: 'VE',\n    id: 2363,\n    name: 'Venezuela; Bolivarian Republic of',\n    states: [\n      {\n        code: 'VE01',\n        name: 'Amazonas',\n      },\n      {\n        code: 'VE02',\n        name: 'Anzoátegui',\n      },\n      {\n        code: 'VE03',\n        name: 'Apure',\n      },\n      {\n        code: 'VE04',\n        name: 'Aragua',\n      },\n      {\n        code: 'VE05',\n        name: 'Barinas',\n      },\n      {\n        code: 'VE06',\n        name: 'Bolívar',\n      },\n      {\n        code: 'VE07',\n        name: 'Carabobo',\n      },\n      {\n        code: 'VE08',\n        name: 'Cojedes',\n      },\n      {\n        code: 'VE09',\n        name: 'Delta Amacuro',\n      },\n      {\n        code: 'VE24',\n        name: 'Dependencias Federales',\n      },\n      {\n        code: 'VE25',\n        name: 'Distrito Capital',\n      },\n      {\n        code: 'VE11',\n        name: 'Falcón',\n      },\n      {\n        code: 'VE12',\n        name: 'Guárico',\n      },\n      {\n        code: 'VE13',\n        name: 'Lara',\n      },\n      {\n        code: 'VE14',\n        name: 'Mérida',\n      },\n      {\n        code: 'VE15',\n        name: 'Miranda',\n      },\n      {\n        code: 'VE16',\n        name: 'Monagas',\n      },\n      {\n        code: 'VE17',\n        name: 'Nueva Esparta',\n      },\n      {\n        code: 'VE18',\n        name: 'Portuguesa',\n      },\n      {\n        code: 'VE19',\n        name: 'Sucre',\n      },\n      {\n        code: 'VE20',\n        name: 'Táchira',\n      },\n      {\n        code: 'VE21',\n        name: 'Trujillo',\n      },\n      {\n        code: 'VE26',\n        name: 'Vargas',\n      },\n      {\n        code: 'VE22',\n        name: 'Yaracuy',\n      },\n      {\n        code: 'VE23',\n        name: 'Zulia',\n      },\n    ],\n  },\n  {\n    code: 'VN',\n    id: 2364,\n    name: 'Vietnam',\n    states: [\n      {\n        code: 'VM01',\n        name: 'An Giang',\n      },\n      {\n        code: 'VM45',\n        name: 'Ba Ria-Vung Tau',\n      },\n      {\n        code: 'VM72',\n        name: 'Bac Can',\n      },\n      {\n        code: 'VM71',\n        name: 'Bac Giang',\n      },\n      {\n        code: 'VM73',\n        name: 'Bac Lieu',\n      },\n      {\n        code: 'VM74',\n        name: 'Bac Ninh',\n      },\n      {\n        code: 'VM03',\n        name: 'Ben Tre',\n      },\n      {\n        code: 'VM46',\n        name: 'Binh Dinh',\n      },\n      {\n        code: 'VM75',\n        name: 'Binh Duong',\n      },\n      {\n        code: 'VM76',\n        name: 'Binh Phuoc',\n      },\n      {\n        code: 'VM47',\n        name: 'Binh Thuan',\n      },\n      {\n        code: 'VM77',\n        name: 'Ca Mau',\n      },\n      {\n        code: 'VM87',\n        name: 'Can Tho',\n      },\n      {\n        code: 'VM05',\n        name: 'Cao Bang',\n      },\n      {\n        code: 'VM78',\n        name: 'Da Nang',\n      },\n      {\n        code: 'VM88',\n        name: 'Dac Lac',\n      },\n      {\n        code: 'VM91',\n        name: 'Dac Nong',\n      },\n      {\n        code: 'VM92',\n        name: 'Dien Bien',\n      },\n      {\n        code: 'VM43',\n        name: 'Dong Nai',\n      },\n      {\n        code: 'VM09',\n        name: 'Dong Thap',\n      },\n      {\n        code: 'VM49',\n        name: 'Gia Lai',\n      },\n      {\n        code: 'VM50',\n        name: 'Ha Giang',\n      },\n      {\n        code: 'VM80',\n        name: 'Ha Nam',\n      },\n      {\n        code: 'VM52',\n        name: 'Ha Tinh',\n      },\n      {\n        code: 'VM79',\n        name: 'Hai Duong',\n      },\n      {\n        code: 'VM13',\n        name: 'Haiphong',\n      },\n      {\n        code: 'VM44',\n        name: 'Hanoi',\n      },\n      {\n        code: 'VM93',\n        name: 'Hau Giang',\n      },\n      {\n        code: 'VM20',\n        name: 'Ho Chi Minh',\n      },\n      {\n        code: 'VM53',\n        name: 'Hoa Binh',\n      },\n      {\n        code: 'VM81',\n        name: 'Hung Yen',\n      },\n      {\n        code: 'VM54',\n        name: 'Khanh Hoa',\n      },\n      {\n        code: 'VM21',\n        name: 'Kien Giang',\n      },\n      {\n        code: 'VM55',\n        name: 'Kon Tum',\n      },\n      {\n        code: 'VM89',\n        name: 'Lai Chau',\n      },\n      {\n        code: 'VM23',\n        name: 'Lam Dong',\n      },\n      {\n        code: 'VM39',\n        name: 'Lang Son',\n      },\n      {\n        code: 'VM90',\n        name: 'Lao Cai',\n      },\n      {\n        code: 'VM24',\n        name: 'Long An',\n      },\n      {\n        code: 'VM82',\n        name: 'Nam Dinh',\n      },\n      {\n        code: 'VM58',\n        name: 'Nghe An',\n      },\n      {\n        code: 'VM59',\n        name: 'Ninh Binh',\n      },\n      {\n        code: 'VM60',\n        name: 'Ninh Thuan',\n      },\n      {\n        code: 'VM83',\n        name: 'Phu Tho',\n      },\n      {\n        code: 'VM61',\n        name: 'Phu Yen',\n      },\n      {\n        code: 'VM62',\n        name: 'Quang Binh',\n      },\n      {\n        code: 'VM84',\n        name: 'Quang Nam',\n      },\n      {\n        code: 'VM63',\n        name: 'Quang Ngai',\n      },\n      {\n        code: 'VM30',\n        name: 'Quang Ninh',\n      },\n      {\n        code: 'VM64',\n        name: 'Quang Tri',\n      },\n      {\n        code: 'VM65',\n        name: 'Soc Trang',\n      },\n      {\n        code: 'VM32',\n        name: 'Son La',\n      },\n      {\n        code: 'VM33',\n        name: 'Tay Ninh',\n      },\n      {\n        code: 'VM35',\n        name: 'Thai Binh',\n      },\n      {\n        code: 'VM85',\n        name: 'Thai Nguyen',\n      },\n      {\n        code: 'VM34',\n        name: 'Thanh Hoa',\n      },\n      {\n        code: 'VM66',\n        name: 'Thua Thien-Hue',\n      },\n      {\n        code: 'VM37',\n        name: 'Tien Giang',\n      },\n      {\n        code: 'VM67',\n        name: 'Tra Vinh',\n      },\n      {\n        code: 'VM68',\n        name: 'Tuyen Quang',\n      },\n      {\n        code: 'VM69',\n        name: 'Vinh Long',\n      },\n      {\n        code: 'VM86',\n        name: 'Vinh Phuc',\n      },\n      {\n        code: 'VM70',\n        name: 'Yen Bai',\n      },\n    ],\n  },\n  {\n    code: 'VG',\n    id: 2446,\n    name: 'Virgin Islands; British',\n    states: [\n      {\n        code: 'VG.VI',\n        name: 'British Virgin Islands',\n      },\n    ],\n  },\n  {\n    code: 'VI',\n    id: 2442,\n    name: 'Virgin Islands; U.S.',\n    states: [\n      {\n        code: '010',\n        name: 'Saint Croix',\n      },\n      {\n        code: '020',\n        name: 'Saint John',\n      },\n      {\n        code: '030',\n        name: 'Saint Thomas',\n      },\n    ],\n  },\n  {\n    code: 'WF',\n    id: 2443,\n    name: 'Wallis and Futuna',\n    states: [],\n  },\n  {\n    code: 'EH',\n    id: 2444,\n    name: 'Western Sahara',\n    states: [],\n  },\n  {\n    code: 'YE',\n    id: 2382,\n    name: 'Yemen',\n    states: [\n      {\n        code: 'YM01',\n        name: 'Abyan',\n      },\n      {\n        code: 'YM20',\n        name: \"Al Bayda'\",\n      },\n      {\n        code: 'YM18',\n        name: \"Al Dali'\",\n      },\n      {\n        code: 'YM08',\n        name: 'Al Hudaydah',\n      },\n      {\n        code: 'YM21',\n        name: 'Al Jawf',\n      },\n      {\n        code: 'YM03',\n        name: 'Al Mahrah',\n      },\n      {\n        code: 'YM10',\n        name: 'Al Mahwit',\n      },\n      {\n        code: 'YM19',\n        name: 'Amran',\n      },\n      {\n        code: 'YM11',\n        name: 'Dhamar',\n      },\n      {\n        code: 'YM04',\n        name: 'Hadramawt',\n      },\n      {\n        code: 'YM22',\n        name: 'Hajjah',\n      },\n      {\n        code: 'YM23',\n        name: 'Ibb',\n      },\n      {\n        code: 'YM24',\n        name: 'Lahij',\n      },\n      {\n        code: 'YM14',\n        name: \"Ma'rib\",\n      },\n      {\n        code: 'YM27',\n        name: 'Raymah',\n      },\n      {\n        code: 'YM15',\n        name: 'Sa`dah',\n      },\n      {\n        code: 'YM16',\n        name: \"San`a'\",\n      },\n      {\n        code: 'YM26',\n        name: \"San`a' [City]\",\n      },\n      {\n        code: 'YM05',\n        name: 'Shabwah',\n      },\n      {\n        code: 'YM28',\n        name: 'Socotra',\n      },\n      {\n        code: 'YM25',\n        name: 'Ta`izz',\n      },\n      {\n        code: 'YM02',\n        name: '`Adan',\n      },\n    ],\n  },\n  {\n    code: 'ZM',\n    id: 2369,\n    name: 'Zambia',\n    states: [\n      {\n        code: 'ZA02',\n        name: 'Central',\n      },\n      {\n        code: 'ZA08',\n        name: 'Copperbelt',\n      },\n      {\n        code: 'ZA03',\n        name: 'Eastern',\n      },\n      {\n        code: 'ZA04',\n        name: 'Luapula',\n      },\n      {\n        code: 'ZA09',\n        name: 'Lusaka',\n      },\n      {\n        code: 'ZA10',\n        name: 'Muchinga',\n      },\n      {\n        code: 'ZA06',\n        name: 'North-Western',\n      },\n      {\n        code: 'ZA05',\n        name: 'Northern',\n      },\n      {\n        code: 'ZA07',\n        name: 'Southern',\n      },\n      {\n        code: 'ZA01',\n        name: 'Western',\n      },\n    ],\n  },\n  {\n    code: 'ZW',\n    id: 2370,\n    name: 'Zimbabwe',\n    states: [\n      {\n        code: 'ZI09',\n        name: 'Bulawayo',\n      },\n      {\n        code: 'ZI10',\n        name: 'Harare',\n      },\n      {\n        code: 'ZI01',\n        name: 'Manicaland',\n      },\n      {\n        code: 'ZI03',\n        name: 'Mashonaland Central',\n      },\n      {\n        code: 'ZI04',\n        name: 'Mashonaland East',\n      },\n      {\n        code: 'ZI05',\n        name: 'Mashonaland West',\n      },\n      {\n        code: 'ZI08',\n        name: 'Masvingo',\n      },\n      {\n        code: 'ZI06',\n        name: 'Matabeleland North',\n      },\n      {\n        code: 'ZI07',\n        name: 'Matabeleland South',\n      },\n      {\n        code: 'ZI02',\n        name: 'Midlands',\n      },\n    ],\n  },\n  {\n    code: 'NONE',\n    id: 2378,\n    name: '- None Specified -',\n    states: [],\n  },\n];\n/**\n * Gets all countries\n * @return {?}\n */\nexport function getCountries() {\n  return COUNTRIES.map((country) => country.name);\n}\n/**\n * Gets a country by country ID\n * @param {?} id\n * @return {?}\n */\nexport function findByCountryId(id) {\n  return COUNTRIES.find((country) => country.id === id);\n}\n/**\n * Gets a country by country name\n * @param {?} name\n * @return {?}\n */\nexport function findByCountryName(name) {\n  return COUNTRIES.find((country) => country.name === name.trim());\n}\n/**\n * Gets a country by country code\n * @param {?} code\n * @return {?}\n */\nexport function findByCountryCode(code) {\n  return COUNTRIES.find((country) => country.code === code.trim());\n}\n/**\n * Gets states by country name\n * @param {?} name\n * @return {?}\n */\nexport function getStateObjects(name) {\n  const /** @type {?} */ foundCountry = COUNTRIES.find((country) => country.name === name.trim());\n  return (foundCountry && foundCountry.states) || [];\n}\n/**\n * Gets state names by country name\n * @param {?} name\n * @return {?}\n */\nexport function getStates(name) {\n  return getStateObjects(name).map((state) => state.name);\n}\n","// NG2\n\nimport { Component, forwardRef, Input, OnInit, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { getCountries, getStates, findByCountryId } from '../../../../utils/countries/Countries';\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { Helpers } from '../../../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ ADDRESS_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoAddressElement),\n  multi: true,\n};\n\nexport interface NovoAddressSubfieldConfig {\n  label: string;\n  required: boolean;\n  maxlength: number;\n  pickerConfig?: any;\n  hidden: boolean;\n  updated?: boolean;\n  readOnly?: boolean;\n}\n\nexport interface NovoAddressConfig {\n  required?: boolean;\n  readOnly?: boolean;\n  address1?: NovoAddressSubfieldConfig;\n  address2?: NovoAddressSubfieldConfig;\n  city?: NovoAddressSubfieldConfig;\n  state?: NovoAddressSubfieldConfig;\n  zip?: NovoAddressSubfieldConfig;\n  countryID?: NovoAddressSubfieldConfig;\n}\nexport class NovoAddressElement implements ControlValueAccessor, OnInit {\n  \n  config: NovoAddressConfig;\n  states: Array<any> = [];\n  countries: Array<any> = getCountries();\n  fieldList: Array<string> = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n  focused: any = {};\n  invalid: any = {};\n  disabled: any = {};\n  invalidMaxlength: any = {};\n  valid: any = {};\n  stateOptions: any;\n  tooltip: any = {};\n  initComplete: boolean = false;\n  \n  change: EventEmitter<any> = new EventEmitter();\n  \n  focus: EventEmitter<any> = new EventEmitter();\n  \n  blur: EventEmitter<any> = new EventEmitter();\n  \n  validityChange: EventEmitter<any> = new EventEmitter();\n/**\n * @param {?} labels\n */\nconstructor(public labels: NovoLabelService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.config) {\n      this.config = {};\n    }\n    if (this.model) {\n      this.writeValue(this.model);\n      this.updateControl();\n    } else if (!this.model) {\n      this.model = {};\n    }\n    this.initConfig();\n    if (Helpers.isBlank(this.model.countryID)) {\n      this.updateStates();\n    }\n  }\n/**\n * @return {?}\n */\ninitConfig(): void {\n    this.fieldList.forEach((field: string) => {\n      if (!this.config.hasOwnProperty(field)) {\n        this.config[field] = {\n          hidden: true,\n        };\n      }\n      if (!this.config[field].hasOwnProperty('label')) {\n        this.config[field].label = this.labels[field];\n      }\n      if (this.config.required) {\n        this.config[field].required = true;\n      }\n      if (this.config[field].readOnly || this.config.readOnly) {\n        this.config[field].readOnly = true;\n        this.disabled[field] = true;\n      }\n      if (field === 'countryID') {\n        if (!this.config[field].pickerConfig) {\n          this.config.countryID.pickerConfig = this.getDefaultCountryConfig();\n        }\n        this.config[field].pickerConfig.defaultOptions = this.config.countryID.pickerConfig.options;\n      }\n      if (field === 'state') {\n        if (!this.config[field].pickerConfig) {\n          this.config.state.pickerConfig = this.getDefaultStateConfig();\n          this.config[field].pickerConfig.defaultOptions = this.config[field].pickerConfig.options;\n        }\n        this.stateOptions = this.config[field].pickerConfig.options;\n        this.config[field].pickerConfig.options = (query = '') => {\n          return this.stateOptions(query, this.model.countryID);\n        };\n        this.config[field].pickerConfig.defaultOptions = this.stateOptions;\n      }\n    });\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nisValid(field: string): void {\n    let /** @type {?} */ valid: boolean = true;\n    if (\n      ((this.config[field].required && (Helpers.isBlank(this.model[field]) || Helpers.isEmpty(this.model[field]))) ||\n        !this.config[field].required) &&\n      !(field === 'countryID' && this.config[field].required && !Helpers.isBlank(this.model.countryID)) &&\n      !(\n        field === 'state' &&\n        this.config[field].required &&\n        (!Helpers.isEmpty(this.model.state) ||\n          ((Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n            !Helpers.isBlank(this.model.countryName) &&\n            this.config.state.pickerConfig &&\n            this.config.state.pickerConfig.defaultOptions &&\n            this.config.state.pickerConfig.defaultOptions.length === 0))\n      )\n    ) {\n      valid = false;\n    } else if (\n      !Helpers.isEmpty(this.model[field]) &&\n      !Helpers.isBlank(this.config[field].maxlength) &&\n      this.config[field].maxlength < this.model[field].length\n    ) {\n      valid = false;\n    }\n    this.valid[field] = valid;\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nisInvalid(field: string): void {\n    let /** @type {?} */ invalid: boolean = false;\n    let /** @type {?} */ invalidMaxlength: boolean = false;\n    if (\n      (field !== 'countryID' &&\n        field !== 'state' &&\n        this.config[field].required &&\n        Helpers.isEmpty(this.model[field]) &&\n        !Helpers.isBlank(this.model[field])) ||\n      (field === 'countryID' && this.config[field].required && Helpers.isBlank(this.model.countryName) && this.config[field].updated) ||\n      (field === 'state' &&\n        this.config[field].required &&\n        (Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&\n        !Helpers.isBlank(this.model.countryID) &&\n        this.config[field].updated &&\n        this.config.state.pickerConfig &&\n        this.config.state.pickerConfig.defaultOptions &&\n        this.config.state.pickerConfig.defaultOptions.length > 0)\n    ) {\n      invalid = true;\n    } else if (\n      !Helpers.isEmpty(this.model[field]) &&\n      !Helpers.isBlank(this.config[field].maxlength) &&\n      this.config[field].maxlength < this.model[field].length\n    ) {\n      invalid = true;\n      invalidMaxlength = true;\n    }\n    this.invalid[field] = invalid;\n    this.invalidMaxlength[field] = invalidMaxlength;\n  }\n/**\n * @param {?} event\n * @param {?} field\n * @return {?}\n */\nonInput(event: Event, field: string): void {\n    this.isInvalid(field);\n    this.isValid(field);\n    if (event) {\n      this.change.emit({ value: this.model[field], field: field });\n    }\n  }\n/**\n * @param {?} event\n * @param {?} field\n * @return {?}\n */\nisFocused(event: Event, field: string): void {\n    this.focused[field] = true;\n    this.focus.emit({ event, field });\n  }\n/**\n * @param {?} event\n * @param {?} field\n * @return {?}\n */\nisBlurred(event: Event, field: string): void {\n    this.focused[field] = false;\n    this.blur.emit({ event, field });\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nonCountryChange(evt) {\n    let /** @type {?} */ country: any = evt && evt.rawValue ? evt.rawValue : null;\n    let /** @type {?} */ field: any;\n    let /** @type {?} */ statesUpdatable: boolean = false;\n    this.config.countryID.updated = true;\n    if (this.config.countryID.pickerConfig) {\n      field = this.config.countryID.pickerConfig.field;\n    }\n    if (country && field && !Helpers.isBlank(country[field]) && this.model.countryID !== country[field]) {\n      this.model.countryID = country[field];\n      this.model.countryName = Helpers.interpolate(this.config.countryID.pickerConfig.format, country);\n      this.disabled.state = false;\n      this.tooltip.state = undefined;\n      statesUpdatable = true;\n    } else if (Helpers.isBlank(country) || Helpers.isBlank(country[field])) {\n      this.model.countryID = undefined;\n      this.model.countryName = undefined;\n      this.disabled.state = true;\n      this.tooltip.state = this.labels.selectCountryFirst;\n      this.invalid.state = false;\n      statesUpdatable = true;\n    }\n\n    // Update state\n    if (statesUpdatable) {\n      this.model.state = undefined;\n      this.updateStates();\n    }\n    this.updateControl();\n    this.onInput(null, 'countryID');\n    this.onInput(null, 'state');\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nonStateChange(evt) {\n    let /** @type {?} */ state: any = evt && evt.value ? evt.value : null;\n    this.config.state.updated = true;\n    this.model.state = state;\n    this.updateControl();\n    this.onInput(null, 'state');\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nsetStateLabel(model: any) {\n    let /** @type {?} */ state: string = model.state;\n    if (!Helpers.isBlank(state)) {\n      if (this.config.state.required) {\n        this.valid.state = true;\n      }\n      this.model.state = state;\n    } else {\n      this.model.state = undefined;\n      if (this.config.state.required) {\n        this.valid.state = false;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nupdateStates() {\n    if (this.config.state.pickerConfig.options && !Helpers.isBlank(this.model.countryID)) {\n      this.config.state.pickerConfig.options = (query = '') => {\n        return this.stateOptions(query, this.model.countryID);\n      };\n      this.stateOptions('', this.model.countryID).then((results) => {\n        this.config.state.pickerConfig.defaultOptions = results;\n        if (results.length) {\n          this.tooltip.state = undefined;\n          this.disabled.state = false;\n          this.setStateLabel(this.model);\n        } else {\n          this.disabled.state = true;\n          this.tooltip.state = this.labels.noStatesForCountry;\n          if (this.config.state.required) {\n            this.valid.state = true;\n          }\n        }\n        this.validityChange.emit();\n        this.onInput(null, 'state');\n      });\n    } else {\n      this.config.state.pickerConfig.defaultOptions = [];\n      this.disabled.state = true;\n      this.tooltip.state = this.labels.selectCountryFirst;\n      if (this.config.state.required) {\n        this.valid.state = false;\n      }\n    }\n  }\n/**\n * @param {?=} filter\n * @param {?=} countryID\n * @return {?}\n */\ngetStateOptions(filter: string = '', countryID: number): any[] {\n    if (countryID) {\n      const /** @type {?} */ country: any = findByCountryId(countryID);\n      const /** @type {?} */ states: any[] = getStates(countryID);\n      if (filter) {\n        return states.filter((name) => new RegExp(`${filter}`, 'gi').test(name));\n      }\n      return states;\n    } else {\n      return [];\n    }\n  }\n/**\n * @return {?}\n */\nupdateControl() {\n    this.onModelChange(this.model);\n    this.onInput(null, 'countryID');\n    this.onInput(null, 'state');\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    let /** @type {?} */ loadingCountries: boolean = false;\n    if (model) {\n      let /** @type {?} */ countryName;\n      if (model.countryName && model.countryID) {\n        countryName = model.countryName;\n      } else if (model.countryID) {\n        if (this.config.countryID.pickerConfig && this.config.countryID.pickerConfig.getLabels) {\n          if (Helpers.isFunction(this.config.countryID.pickerConfig.getLabels)) {\n            let /** @type {?} */ promise: any = this.config.countryID.pickerConfig.getLabels(model.countryID);\n            loadingCountries = true;\n            if (promise.then) {\n              promise.then((result: any) => {\n                loadingCountries = false;\n                countryName = Helpers.interpolateWithFallback(this.config.countryID.pickerConfig.format, result);\n                this.model = Object.assign(model, { countryName });\n                this.updateStates();\n              });\n            }\n          }\n        }\n      }\n      if (countryName) {\n        countryName = countryName.trim();\n        model.state = model.state || '';\n        this.model = Object.assign(model, { countryName: countryName });\n      } else {\n        this.model = model;\n      }\n      if (!loadingCountries && !Helpers.isBlank(this.model.countryID)) {\n        this.updateStates();\n      }\n    }\n    this.fieldList.forEach((field: string) => {\n      this.onInput(null, field);\n    });\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @return {?}\n */\nprivate getDefaultStateConfig(): any {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query = '', countryID) => {\n        return Promise.resolve(this.getStateOptions(query, countryID));\n      },\n      getLabels: (state: string) => {\n        return Promise.resolve(state);\n      },\n    };\n  }\n/**\n * @return {?}\n */\nprivate getDefaultCountryConfig(): any {\n    return {\n      field: 'value',\n      format: '$label',\n      options: (query: string = '') => {\n        return new Promise((resolve: any) => {\n          let /** @type {?} */ countries: any = getCountries();\n          if (query) {\n            countries = countries.filter((country) => new RegExp(`${query}`, 'gi').test(country.name));\n          }\n          return resolve(countries);\n        });\n      },\n      getLabels: (countryID) => {\n        return new Promise((resolve: any) => {\n          let /** @type {?} */ country: any = findByCountryId(countryID);\n          if (country) {\n            resolve(country.name);\n          } else {\n            resolve('');\n          }\n        });\n      },\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-address',\n  providers: [ADDRESS_VALUE_ACCESSOR],\n  template: `\n        <span *ngIf=\"!config?.address1?.hidden\" class=\"street-address\" [class.invalid]=\"invalid.address1\" [class.focus]=\"focused.address1\" [class.disabled]=\"disabled.address1\">\n            <i *ngIf=\"config.address1.required\"\n                class=\"required-indicator address1\"\n                [ngClass]=\"{'bhi-circle': !valid.address1, 'bhi-check': valid.address1}\">\n            </i>\n            <input [class.maxlength-error]=\"invalidMaxlength.address1\" type=\"text\" id=\"address1\" name=\"address1\" [placeholder]=\"config.address1.label\" [maxlength]=\"config?.address1?.maxlength\" autocomplete=\"shipping street-address address-line-1\" [(ngModel)]=\"model.address1\" (ngModelChange)=\"updateControl()\" (focus)=\"isFocused($event, 'address1')\" (blur)=\"isBlurred($event, 'address1')\" (input)=\"onInput($event, 'address1')\"/>\n        </span>\n        <span *ngIf=\"!config?.address2?.hidden\" class=\"apt suite\" [class.invalid]=\"invalid.address2\" [class.focus]=\"focused.address2\" [class.disabled]=\"disabled.address2\">\n            <i *ngIf=\"config.address2.required\"\n                class=\"required-indicator address2\"\n                [ngClass]=\"{'bhi-circle': !valid.address2, 'bhi-check': valid.address2}\">\n            </i>\n            <input [class.maxlength-error]=\"invalidMaxlength.address2\" type=\"text\" id=\"address2\" name=\"address2\" [placeholder]=\"config.address2.label\" [maxlength]=\"config?.address2?.maxlength\" autocomplete=\"shipping address-line-2\" [(ngModel)]=\"model.address2\" (ngModelChange)=\"updateControl()\" (focus)=\"isFocused($event, 'address2')\" (blur)=\"isBlurred($event, 'address2')\" (input)=\"onInput($event, 'address2')\"/>\n        </span>\n        <span *ngIf=\"!config?.city?.hidden\" class=\"city locality\" [class.invalid]=\"invalid.city\" [class.focus]=\"focused.city\" [class.disabled]=\"disabled.city\">\n            <i *ngIf=\"config.city.required\"\n                class=\"required-indicator\"\n                [ngClass]=\"{'bhi-circle': !valid.city, 'bhi-check': valid.city}\">\n            </i>\n            <input [class.maxlength-error]=\"invalidMaxlength.city\" type=\"text\" id=\"city\" name=\"city\" [placeholder]=\"config.city.label\" autocomplete=\"shipping city locality\" [maxlength]=\"config?.city?.maxlength\" [(ngModel)]=\"model.city\" (ngModelChange)=\"updateControl()\" (focus)=\"isFocused($event, 'city')\" (blur)=\"isBlurred($event, 'city')\" (input)=\"onInput($event, 'city')\"/>\n        </span>\n        <span *ngIf=\"!config?.state?.hidden\" class=\"state region\" [class.invalid]=\"invalid.state\" [class.focus]=\"focused.state\" [class.disabled]=\"disabled.state\"  [tooltip]=\"tooltip.state\">\n            <i *ngIf=\"config.state.required\"\n                class=\"required-indicator\"\n                [ngClass]=\"{'bhi-circle': !valid.state, 'bhi-check': valid.state}\">\n            </i>\n            <novo-picker [config]=\"config?.state?.pickerConfig\" [placeholder]=\"config?.state?.label\" (changed)=\"onStateChange($event)\" autocomplete=\"shipping region\" [(ngModel)]=\"model.state\" [disablePickerInput]=\"disabled.state || config.readOnly\"></novo-picker>\n        </span>\n        <span *ngIf=\"!config?.zip?.hidden\" class=\"zip postal-code\" [class.invalid]=\"invalid.zip\" [class.focus]=\"focused.zip\" [class.disabled]=\"disabled.zip\">\n            <i *ngIf=\"config.zip.required\"\n                class=\"required-indicator\"\n                [ngClass]=\"{'bhi-circle': !valid.zip, 'bhi-check': valid.zip}\">\n            </i>\n            <input [class.maxlength-error]=\"invalidMaxlength.zip\" type=\"text\" id=\"zip\" name=\"zip\" [placeholder]=\"config.zip.label\" autocomplete=\"shipping postal-code\" [maxlength]=\"config?.zip?.maxlength\" [(ngModel)]=\"model.zip\" (ngModelChange)=\"updateControl()\" (focus)=\"isFocused($event, 'zip')\" (blur)=\"isBlurred($event, 'zip')\" (input)=\"onInput($event, 'zip')\" />\n        </span>\n        <span *ngIf=\"!config?.countryID?.hidden\" class=\"country-name\" [class.invalid]=\"invalid.countryID\" [class.focus]=\"focused.countryID\" [class.disabled]=\"disabled.countryID\">\n            <i *ngIf=\"config.countryID.required\"\n                class=\"required-indicator\"\n                [ngClass]=\"{'bhi-circle': !valid.countryID, 'bhi-check': valid.countryID}\">\n            </i>\n            <novo-picker [config]=\"config?.countryID?.pickerConfig\" [placeholder]=\"config.countryID.label\" (changed)=\"onCountryChange($event)\" autocomplete=\"shipping country\" [(ngModel)]=\"model.countryName\" [disablePickerInput]=\"disabled.countryID\"></novo-picker>\n        </span>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'change': [{ type: Output },],\n'focus': [{ type: Output },],\n'blur': [{ type: Output },],\n'validityChange': [{ type: Output },],\n};\n}\n\nfunction NovoAddressElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoAddressElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoAddressElement.ctorParameters;\n/** @type {?} */\nNovoAddressElement.propDecorators;\n/** @type {?} */\nNovoAddressElement.prototype.config;\n/** @type {?} */\nNovoAddressElement.prototype.states;\n/** @type {?} */\nNovoAddressElement.prototype.countries;\n/** @type {?} */\nNovoAddressElement.prototype.fieldList;\n/** @type {?} */\nNovoAddressElement.prototype.model;\n/** @type {?} */\nNovoAddressElement.prototype.onModelChange;\n/** @type {?} */\nNovoAddressElement.prototype.onModelTouched;\n/** @type {?} */\nNovoAddressElement.prototype.focused;\n/** @type {?} */\nNovoAddressElement.prototype.invalid;\n/** @type {?} */\nNovoAddressElement.prototype.disabled;\n/** @type {?} */\nNovoAddressElement.prototype.invalidMaxlength;\n/** @type {?} */\nNovoAddressElement.prototype.valid;\n/** @type {?} */\nNovoAddressElement.prototype.stateOptions;\n/** @type {?} */\nNovoAddressElement.prototype.tooltip;\n/** @type {?} */\nNovoAddressElement.prototype.initComplete;\n/** @type {?} */\nNovoAddressElement.prototype.change;\n/** @type {?} */\nNovoAddressElement.prototype.focus;\n/** @type {?} */\nNovoAddressElement.prototype.blur;\n/** @type {?} */\nNovoAddressElement.prototype.validityChange;\n/** @type {?} */\nNovoAddressElement.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, forwardRef, Input, Output, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { Helpers } from '../../../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoCheckboxElement),\n  multi: true,\n};\n\nconst /** @type {?} */ LAYOUT_DEFAULTS = { iconStyle: 'box' };\nexport class NovoCheckboxElement implements ControlValueAccessor, OnInit {\n  \n  name: string;\n  \n  label: string;\n  \n  indeterminate: boolean = false;\n  \n  disabled: boolean = false;\n  \n  layoutOptions: { iconStyle?: string }; // TODO - avoid configs like this\n\n  \n  onSelect: EventEmitter<any> = new EventEmitter();\n\n  boxIcon: boolean = true;\n  model;\n\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @param {?} ref\n */\nconstructor(private ref: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS, this.layoutOptions);\n    this.boxIcon = this.layoutOptions.iconStyle === 'box';\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nselect(event: Event) {\n    Helpers.swallowEvent(event);\n    if (!this.disabled) {\n      this.model = !this.model;\n      this.onModelChange(this.model);\n      this.onSelect.emit({ originalEvent: event, value: this.model });\n    }\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n    this.ref.markForCheck();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-checkbox',\n  providers: [CHECKBOX_VALUE_ACCESSOR],\n  template: `\n    <div class=\"check-box-group\" [class.checked]=\"model\" [class.disabled]=\"disabled\">\n        <input [name]=\"name\" type=\"checkbox\" [(ngModel)]=\"model\" [attr.id]=\"name\" [disabled]=\"disabled\">\n        <label [attr.for]=\"name\" (click)=\"select($event)\" [class.disabled]=\"disabled\">\n          <i [class.bhi-checkbox-empty]=\"!model && !indeterminate && boxIcon\"\n              [class.bhi-checkbox-filled]=\"model && !indeterminate && boxIcon\"\n              [class.bhi-checkbox-indeterminate]=\"indeterminate && boxIcon\"\n              [class.bhi-circle-o]=\"!model && !indeterminate && !boxIcon\"\n              [class.bhi-check]=\"model && !indeterminate && !boxIcon\"\n              [class.bhi-circle]=\"indeterminate && !boxIcon\"></i>\n          <span *ngIf=\"label\">{{ label }}</span>\n        </label>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'label': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'disabled': [{ type: Input },],\n'layoutOptions': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction NovoCheckboxElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCheckboxElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCheckboxElement.ctorParameters;\n/** @type {?} */\nNovoCheckboxElement.propDecorators;\n/** @type {?} */\nNovoCheckboxElement.prototype.name;\n/** @type {?} */\nNovoCheckboxElement.prototype.label;\n/** @type {?} */\nNovoCheckboxElement.prototype.indeterminate;\n/** @type {?} */\nNovoCheckboxElement.prototype.disabled;\n/** @type {?} */\nNovoCheckboxElement.prototype.layoutOptions;\n/** @type {?} */\nNovoCheckboxElement.prototype.onSelect;\n/** @type {?} */\nNovoCheckboxElement.prototype.boxIcon;\n/** @type {?} */\nNovoCheckboxElement.prototype.model;\n/** @type {?} */\nNovoCheckboxElement.prototype.onModelChange;\n/** @type {?} */\nNovoCheckboxElement.prototype.onModelTouched;\n/** @type {?} */\nNovoCheckboxElement.prototype.ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { Helpers } from '../../../../utils/Helpers';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ CHECKLIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NovoCheckListElement),\n  multi: true,\n};\nexport class NovoCheckListElement implements ControlValueAccessor, OnInit {\n  \n  name: string;\n  \n  options: Array<any>;\n  \n  disabled: boolean;\n  \n  onSelect: EventEmitter<any> = new EventEmitter();\n\n  _options: Array<any>;\n  model: any;\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @return {?}\n */\nngOnInit() {\n    this.setModel();\n    this.setupOptions();\n  }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nselect(event, item) {\n    Helpers.swallowEvent(event);\n    if (!this.disabled) {\n      item.checked = !item.checked;\n      this.model = this._options.filter((checkBox) => checkBox.checked).map((x) => x.value);\n      this.onModelChange(this.model.length > 0 ? this.model : '');\n      this.onSelect.emit({ selected: this.model });\n    }\n  }\n/**\n * @return {?}\n */\nsetupOptions() {\n    this.options = this.options || [];\n    this._options = [];\n    if (this.options.length && !this.options[0].value) {\n      this.options.forEach((option) => {\n        let /** @type {?} */ formattedOption = {\n          value: option,\n          label: option,\n          checked: this.model && this.model.length && this.model.indexOf(option.value) !== -1,\n        };\n        this._options.push(formattedOption);\n      });\n    } else {\n      this.options.forEach((option) => {\n        let /** @type {?} */ formattedOption = option;\n        formattedOption.checked = this.model && this.model.length && this.model.indexOf(option.value) !== -1;\n        this._options.push(formattedOption);\n      });\n    }\n  }\n/**\n * @return {?}\n */\nsetModel(): void {\n    let /** @type {?} */ checkedOptions = this.options.filter((checkBox) => checkBox.checked).map((x) => x.value);\n    this.writeValue(checkedOptions);\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model || [];\n    if (model) {\n      this.setupOptions();\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-check-list',\n  providers: [CHECKLIST_VALUE_ACCESSOR],\n  template: `\n        <div class=\"check-box-group\" *ngFor=\"let option of _options; let i = index\" [ngClass]=\"{checked: option.checked}\" [class.disabled]=\"disabled\">\n            <input [name]=\"name\" type=\"checkbox\" [ngModel]=\"option.checked\" [attr.id]=\"name+i\" [value]=\"option.checked\" (change)=\"select($event, option)\" [disabled]=\"disabled\">\n            <label [attr.for]=\"name+i\" (click)=\"select($event, option)\">\n              <i [ngClass]=\"{'bhi-checkbox-empty': !option.checked, 'bhi-checkbox-filled': option.checked }\"></i>\n              <span>{{option.label}}</span>\n            </label>\n        </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'options': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction NovoCheckListElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCheckListElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCheckListElement.ctorParameters;\n/** @type {?} */\nNovoCheckListElement.propDecorators;\n/** @type {?} */\nNovoCheckListElement.prototype.name;\n/** @type {?} */\nNovoCheckListElement.prototype.options;\n/** @type {?} */\nNovoCheckListElement.prototype.disabled;\n/** @type {?} */\nNovoCheckListElement.prototype.onSelect;\n/** @type {?} */\nNovoCheckListElement.prototype._options;\n/** @type {?} */\nNovoCheckListElement.prototype.model;\n/** @type {?} */\nNovoCheckListElement.prototype.onModelChange;\n/** @type {?} */\nNovoCheckListElement.prototype.onModelTouched;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class NovoFile {\n    name: string = '';\n    file: any;\n    type: any;\n    contentType: string = '';\n    lastModified: number = 0;\n    size: number = 0;\n    loaded: boolean = false;\n    fileContents: string;\n    dataURL: string;\n    reader: FileReader = new FileReader();\n/**\n * @param {?} file\n */\nconstructor(file) {\n        this.name = `${ encodeURIComponent(file.name || '') }`;\n        this.contentType = file.type;\n        this.lastModified = file.lastModified;\n        this.size = file.size;\n        this.file = file;\n        this.reader.onload = (event: any) => {\n            this.fileContents = event.target.result.split(',')[1];\n            this.dataURL = event.target.result;\n            this.loaded = true;\n        };\n    }\n/**\n * @return {?}\n */\nread() {\n        return new Promise((resolve) => {\n            resolve(this);\n            // when the file is read it triggers the onload event above.\n            this.reader.readAsDataURL(this.file);\n        });\n    }\n/**\n * @return {?}\n */\ntoJSON() {\n        return {\n            name: this.name,\n            contentType: this.type,\n            lastModified: this.lastModified,\n            size: this.size,\n            fileContents: this.fileContents\n        };\n    }\n}\n\nfunction NovoFile_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFile.prototype.name;\n/** @type {?} */\nNovoFile.prototype.file;\n/** @type {?} */\nNovoFile.prototype.type;\n/** @type {?} */\nNovoFile.prototype.contentType;\n/** @type {?} */\nNovoFile.prototype.lastModified;\n/** @type {?} */\nNovoFile.prototype.size;\n/** @type {?} */\nNovoFile.prototype.loaded;\n/** @type {?} */\nNovoFile.prototype.fileContents;\n/** @type {?} */\nNovoFile.prototype.dataURL;\n/** @type {?} */\nNovoFile.prototype.reader;\n}\n\n","// NG2\n\nimport { Component, Input, ElementRef, forwardRef, OnInit, OnDestroy, OnChanges, ViewChild, ViewContainerRef, TemplateRef, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n// APP\n\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nimport { NovoDragulaService } from '../../../../elements/dragula/DragulaService';\nimport { NovoFile } from './extras/file/File';\n\n// Value accessor for the component (supports ngModel)\nconst /** @type {?} */ FILE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NovoFileInputElement),\n    multi: true\n};\n\nconst /** @type {?} */ LAYOUT_DEFAULTS = { order: 'default', download: true, labelStyle: 'default', draggable: false };\nexport class NovoFileInputElement implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n   fileInput: TemplateRef<any>;\n   fileOutput: TemplateRef<any>;\n  \n  container: ViewContainerRef;\n\n   name: string;\n   multiple: boolean = false;\n   disabled: boolean = false;\n   placeholder: string;\n   layoutOptions: { order?: string; download?: boolean; edit?: boolean; labelStyle?: string; draggable?: boolean };\n   value: Array<any> = [];\n\n   edit: EventEmitter<any> = new EventEmitter();\n   save: EventEmitter<any> = new EventEmitter();\n   delete: EventEmitter<any> = new EventEmitter();\n   upload: EventEmitter<any> = new EventEmitter();\n\n  elements: Array<any> = [];\n  files: Array<any> = [];\n  model: any;\n  active: boolean = false;\n  commands: any;\n  visible: boolean;\n  target: any;\n  fileOutputBag: string;\n\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n/**\n * @param {?} element\n * @param {?} labels\n * @param {?} dragula\n */\nconstructor(private element: ElementRef,\npublic labels: NovoLabelService,\nprivate dragula: NovoDragulaService) {\n    this.commands = {\n      dragenter: this.dragEnterHandler.bind(this),\n      dragleave: this.dragLeaveHandler.bind(this),\n      dragover: this.dragOverHandler.bind(this),\n      drop: this.dropHandler.bind(this),\n    };\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((type) => {\n      this.element.nativeElement.addEventListener(type, this.commands[type]);\n    });\n    this.updateLayout();\n    this.initializeDragula();\n    this.setInitialFileList();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    ['dragenter', 'dragleave', 'dragover', 'drop'].forEach((type) => {\n      this.element.nativeElement.removeEventListener(type, this.commands[type]);\n    });\n    let /** @type {?} */ dragulaHasFileOutputBag = this.dragula.bags.length > 0 && this.dragula.bags.filter((x) => x.name === this.fileOutputBag).length > 0;\n    if (dragulaHasFileOutputBag) {\n      this.dragula.destroy(this.fileOutputBag);\n    }\n  }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n    this.onModelChange(this.model);\n  }\n/**\n * @return {?}\n */\nupdateLayout() {\n    this.layoutOptions = Object.assign({}, LAYOUT_DEFAULTS, this.layoutOptions);\n    this.insertTemplatesBasedOnLayout();\n  }\n/**\n * @return {?}\n */\ninsertTemplatesBasedOnLayout() {\n    let /** @type {?} */ order;\n    switch (this.layoutOptions['order']) {\n      case 'displayFilesBelow':\n        order = ['fileInput', 'fileOutput'];\n        break;\n      default:\n        order = ['fileOutput', 'fileInput'];\n    }\n    order.forEach((template) => {\n      this.container.createEmbeddedView(this[template], 0);\n    });\n    return order;\n  }\n/**\n * @return {?}\n */\ninitializeDragula() {\n    this.fileOutputBag = `file-output-${this.dragula.bags.length}`;\n    this.dragula.setOptions(this.fileOutputBag, {\n      moves: (el, container, handle) => {\n        return this.layoutOptions.draggable;\n      },\n    });\n  }\n/**\n * @return {?}\n */\nsetInitialFileList() {\n    if (this.value) {\n      this.files = this.value;\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ndragEnterHandler(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n    this.target = event.target;\n    this.active = true;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ndragLeaveHandler(event) {\n    event.preventDefault();\n    if (this.target === event.target) {\n      this.active = false;\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ndragOverHandler(event) {\n    event.preventDefault();\n    // no-op\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ndropHandler(event) {\n    event.preventDefault();\n    this.visible = false;\n    if (event.dataTransfer.types[0] !== 'Files') {\n      return;\n    }\n    let /** @type {?} */ options: any = this.layoutOptions;\n    let /** @type {?} */ filelist = Array.from(event.dataTransfer.files);\n    if (options.customActions) {\n      this.upload.emit(this.multiple ? filelist : [filelist[0]]);\n    } else {\n      this.process(this.multiple ? filelist : [filelist[0]]);\n    }\n    this.active = false;\n  }\n/**\n * @param {?} model\n * @return {?}\n */\nwriteValue(model: any): void {\n    this.model = model;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ncheck(event) {\n    this.process(Array.from(event.target.files));\n  }\n/**\n * @param {?} filelist\n * @return {?}\n */\nprocess(filelist) {\n    Promise.all(filelist.map((file) => this.readFile(file))).then((files) => {\n      if (this.multiple) {\n        this.files.push(...files);\n      } else {\n        this.files = files;\n      }\n      this.model = this.files;\n      this.onModelChange(this.model);\n    });\n  }\n/**\n * @param {?} file\n * @return {?}\n */\ndownload(file) {\n    window.open(file.dataURL, '_blank');\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nremove(file) {\n    this.files.splice(this.files.findIndex((f) => f.name === file.name && f.size === file.size), 1);\n    this.model = this.files;\n    this.onModelChange(this.model);\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nreadFile(file) {\n    return new NovoFile(file).read();\n  }\n/**\n * @param {?} file\n * @return {?}\n */\ncustomEdit(file) {\n    this.edit.emit(file);\n  }\n/**\n * @param {?} file\n * @return {?}\n */\ncustomSave(file) {\n    this.save.emit(file);\n  }\n/**\n * @param {?} file\n * @return {?}\n */\ncustomDelete(file) {\n    this.delete.emit(file);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\ncustomCheck(event) {\n    this.upload.emit(event);\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-file-input',\n  providers: [FILE_VALUE_ACCESSOR],\n  template: `\n        <div #container></div>\n        <ng-template #fileInput>\n            <div class=\"file-input-group\" [class.disabled]=\"disabled\" [class.active]=\"active\">\n                <input *ngIf=\"!layoutOptions.customActions\" type=\"file\" [name]=\"name\" [attr.id]=\"name\" (change)=\"check($event)\" [attr.multiple]=\"multiple\" tabindex=\"-1\"/>\n                <input *ngIf=\"layoutOptions.customActions\" type=\"file\" [name]=\"name\" [attr.id]=\"name\" (change)=\"customCheck($event)\" [attr.multiple]=\"multiple\" tabindex=\"-1\"/>\n                <section [ngSwitch]=\"layoutOptions.labelStyle\">\n                    <label *ngSwitchCase=\"'no-box'\" [attr.for]=\"name\" class=\"no-box\">\n                        <div><i class=\"bhi-dropzone\"></i>{{ placeholder || labels.chooseAFile }} {{ labels.or }} <strong class=\"link\">{{ labels.clickToBrowse }}</strong></div>\n                    </label>\n                    <label *ngSwitchDefault [attr.for]=\"name\" class=\"boxed\">\n                        <span>{{ placeholder || labels.chooseAFile }}</span>\n                        <small>{{ labels.or }} <strong class=\"link\">{{ labels.clickToBrowse }}</strong></small>\n                    </label>\n                </section>\n            </div>\n        </ng-template>\n        <ng-template #fileOutput>\n            <div class=\"file-output-group\" [dragula]=\"fileOutputBag\" [dragulaModel]=\"files\">\n                <div class=\"file-item\" *ngFor=\"let file of files\" [class.disabled]=\"disabled\">\n                  <i *ngIf=\"layoutOptions.draggable\" class=\"bhi-move\"></i>\n                  <label *ngIf=\"file.link\"><span><a href=\"{{ file.link }}\" target=\"_blank\">{{ file.name | decodeURI }}</a></span><span  *ngIf=\"file.description\">||</span><span>{{ file.description }}</span></label> \n                  <label *ngIf=\"!file.link\">{{ file.name | decodeURI }}</label> \n                  <div class=\"actions\" [attr.data-automation-id]=\"'file-actions'\" *ngIf=\"file.loaded\">\n                    <div *ngIf=\"!layoutOptions.customActions\">\n                      <button *ngIf=\"layoutOptions.download\" type=\"button\" theme=\"icon\" icon=\"save\" (click)=\"download(file)\" [attr.data-automation-id]=\"'file-download'\" tabindex=\"-1\"></button>\n                      <button *ngIf=\"!disabled\" type=\"button\" theme=\"icon\" icon=\"close\" (click)=\"remove(file)\" [attr.data-automation-id]=\"'file-remove'\" tabindex=\"-1\"></button>\n                    </div>\n                    <div *ngIf=\"layoutOptions.customActions\">\n                      <button *ngIf=\"layoutOptions.edit && !disabled\" type=\"button\" theme=\"icon\" icon=\"edit\" (click)=\"customEdit(file)\" [attr.data-automation-id]=\"'file-edit'\" tabindex=\"-1\"></button>\n                      <button *ngIf=\"layoutOptions.download\" type=\"button\" theme=\"icon\" icon=\"save\" (click)=\"customSave(file)\" [attr.data-automation-id]=\"'file-download'\" tabindex=\"-1\"></button>\n                      <button *ngIf=\"!disabled\" type=\"button\" theme=\"icon\" icon=\"close\" (click)=\"customDelete(file)\" [attr.data-automation-id]=\"'file-remove'\" tabindex=\"-1\"></button>\n                    </div> \n                  </div>\n                    <novo-loading *ngIf=\"!file.loaded\"></novo-loading>\n                </div>\n            </div>\n        </ng-template>`,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NovoLabelService, },\n{type: NovoDragulaService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fileInput': [{ type: ViewChild, args: ['fileInput', ] },],\n'fileOutput': [{ type: ViewChild, args: ['fileOutput', ] },],\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'name': [{ type: Input },],\n'multiple': [{ type: Input },],\n'disabled': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'layoutOptions': [{ type: Input },],\n'value': [{ type: Input },],\n'edit': [{ type: Output },],\n'save': [{ type: Output },],\n'delete': [{ type: Output },],\n'upload': [{ type: Output },],\n};\n}\n\nfunction NovoFileInputElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFileInputElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoFileInputElement.ctorParameters;\n/** @type {?} */\nNovoFileInputElement.propDecorators;\n/** @type {?} */\nNovoFileInputElement.prototype.fileInput;\n/** @type {?} */\nNovoFileInputElement.prototype.fileOutput;\n/** @type {?} */\nNovoFileInputElement.prototype.container;\n/** @type {?} */\nNovoFileInputElement.prototype.name;\n/** @type {?} */\nNovoFileInputElement.prototype.multiple;\n/** @type {?} */\nNovoFileInputElement.prototype.disabled;\n/** @type {?} */\nNovoFileInputElement.prototype.placeholder;\n/** @type {?} */\nNovoFileInputElement.prototype.layoutOptions;\n/** @type {?} */\nNovoFileInputElement.prototype.value;\n/** @type {?} */\nNovoFileInputElement.prototype.edit;\n/** @type {?} */\nNovoFileInputElement.prototype.save;\n/** @type {?} */\nNovoFileInputElement.prototype.delete;\n/** @type {?} */\nNovoFileInputElement.prototype.upload;\n/** @type {?} */\nNovoFileInputElement.prototype.elements;\n/** @type {?} */\nNovoFileInputElement.prototype.files;\n/** @type {?} */\nNovoFileInputElement.prototype.model;\n/** @type {?} */\nNovoFileInputElement.prototype.active;\n/** @type {?} */\nNovoFileInputElement.prototype.commands;\n/** @type {?} */\nNovoFileInputElement.prototype.visible;\n/** @type {?} */\nNovoFileInputElement.prototype.target;\n/** @type {?} */\nNovoFileInputElement.prototype.fileOutputBag;\n/** @type {?} */\nNovoFileInputElement.prototype.onModelChange;\n/** @type {?} */\nNovoFileInputElement.prototype.onModelTouched;\n/** @type {?} */\nNovoFileInputElement.prototype.element;\n/** @type {?} */\nNovoFileInputElement.prototype.labels;\n/** @type {?} */\nNovoFileInputElement.prototype.dragula;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n// APP\n\nimport { NovoButtonModule } from './../../button/Button.module';\nimport { NovoSelectModule } from './../../select/Select.module';\nimport { NovoPickerModule } from './../../picker/Picker.module';\nimport { NovoLoadingModule } from './../../loading/Loading.module';\nimport { NovoPipesModule } from './../../../pipes/Pipes.module';\nimport { NovoDragulaModule } from './../../dragula/Dragula.module';\nimport { NovoAddressElement } from './address/Address';\nimport { NovoCheckboxElement } from './checkbox/Checkbox';\nimport { NovoCheckListElement } from './checkbox/CheckList';\nimport { NovoFileInputElement } from './file/FileInput';\nimport { NovoTooltipModule } from './../../tooltip/Tooltip.module';\nexport class NovoFormExtrasModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule, NovoPipesModule, NovoButtonModule, NovoSelectModule, NovoPickerModule, NovoLoadingModule, NovoDragulaModule, NovoTooltipModule],\n  declarations: [NovoAddressElement, NovoCheckboxElement, NovoCheckListElement, NovoFileInputElement],\n  exports: [NovoAddressElement, NovoCheckboxElement, NovoCheckListElement, NovoFileInputElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoFormExtrasModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFormExtrasModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoFormExtrasModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component, Directive, TemplateRef, Input, Output, AfterContentInit, ViewContainerRef,\n    ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, OnChanges, SimpleChanges, SimpleChange\n} from '@angular/core';\nimport { FormBuilder, FormArray } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { NovoFormGroup, NovoFormControl } from './NovoFormControl';\nimport { BaseControl } from './controls/BaseControl';\nimport { FormUtils } from './../../utils/form-utils/FormUtils';\nimport { Helpers } from '../../utils/Helpers';\nimport { NovoLabelService } from '../../services/novo-label-service';\n\nexport interface NovoControlGroupAddConfig {\n    label: string;\n}\nexport class NovoControlGroup implements AfterContentInit, OnChanges {\n/**\n * @param {?} v\n * @return {?}\n */\nset vertical(v: boolean) {\n        this._vertical = coerceBooleanProperty(v);\n    }\n/**\n * @return {?}\n */\nget vertical() {\n        return this._vertical;\n    }\nprivate _vertical: boolean = false;\n    // Hides/shows the add button for adding a new control\n     add: NovoControlGroupAddConfig;\n/**\n * @param {?} v\n * @return {?}\n */\nset remove(v: boolean) {\n        this._remove = coerceBooleanProperty(v);\n    }\n/**\n * @return {?}\n */\nget remove() {\n        return this._remove;\n    }\nprivate _remove: boolean = false;\n/**\n * @param {?} v\n * @return {?}\n */\nset edit(v: boolean) {\n        this._edit = coerceBooleanProperty(v);\n    }\n/**\n * @return {?}\n */\nget edit() {\n        return this._edit;\n    }\nprivate _edit: boolean = false;\n/**\n * @param {?} v\n * @return {?}\n */\nset collapsible(v: boolean) {\n        this._collapsible = coerceBooleanProperty(v);\n    }\n/**\n * @return {?}\n */\nget collapsible() {\n        return this._collapsible;\n    }\nprivate _collapsible: boolean = false;\n    // Main form group\n     form: NovoFormGroup;\n    // Controls for each item in the control group\n     controls: BaseControl[];\n    // Key of the control group (on the main form)\n     key: string;\n    // Label of the control group\n     label: string;\n    // Description of the control group (only use with position:bottom Add button!)\n     description: string;\n    // Message to display if there are no controls\n     emptyMessage: string;\n/**\n * @param {?} v\n * @return {?}\n */\nset icon(v: string) {\n        this._icon = v && v.indexOf('bhi') !== -1 ? v : `bhi-${v}`;\n    }\n/**\n * @return {?}\n */\nget icon() {\n        return this._icon;\n    }\nprivate _icon: string;\n    // The initial value object, will create the form rows off of\n     initialValue: {}[];\n    // Callback to determine if the user can edit\n     canEdit: Function;\n    // Callback to determine if the user can delete\n     canRemove: Function;\n    // Template for custom row rendering\n     rowTemplate: TemplateRef<any>;\npublic onRemove: EventEmitter<any> = new EventEmitter<any>();\npublic onEdit: EventEmitter<any> = new EventEmitter<any>();\npublic onAdd: EventEmitter<any> = new EventEmitter<any>();\npublic controlLabels: { value: string, width: number }[] = [];\npublic toggled: boolean = false;\npublic disabledArray: { edit: boolean, remove: boolean }[] = [];\nprivate currentIndex: number = 0;\n/**\n * @param {?} formUtils\n * @param {?} fb\n * @param {?} ref\n * @param {?} labels\n */\nconstructor(private formUtils: FormUtils,\nprivate fb: FormBuilder,\nprivate ref: ChangeDetectorRef,\nprivate labels: NovoLabelService) { }\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n        if (!this.key) {\n            throw new Error('novo-control-group must have the [key] attribute provided!');\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\npublic ngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ initialValueChange: SimpleChange = changes['initialValue'];\n\n        // If initial value changes, clear the controls\n        if (initialValueChange && initialValueChange.currentValue !== initialValueChange.previousValue && !initialValueChange.firstChange) {\n            this.clearControls();\n        }\n\n        // Check for array, add a control for each value\n        if (this.initialValue && Array.isArray(this.initialValue)) {\n            if (this.initialValue.length !== 0) {\n                this.currentIndex = 0;\n                this.initialValue.forEach(value => this.addNewControl(value));\n            }\n        } else if (this.initialValue) {\n            // If value is an object, just add one control\n            this.addNewControl(this.initialValue);\n        }\n        // If we are horizontal, grab the labels to help with layout\n        if (!this.vertical) {\n            this.controlLabels = (this.controls || []).map((control: BaseControl) => {\n                return {\n                    value: control.label,\n                    width: control.width\n                };\n            });\n            this.ref.markForCheck();\n        }\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\npublic addNewControl(value?: {}): void {\n        const /** @type {?} */ control: FormArray = /** @type {?} */(( <FormArray>this.form.controls[this.key]));\n        const /** @type {?} */ newCtrl: NovoFormGroup = this.buildControl(value);\n        if (control) {\n            control.push(newCtrl);\n        } else {\n            this.form.addControl(this.key, this.fb.array([newCtrl]));\n        }\n        this.disabledArray.push({\n            edit: this.checkCanEdit(this.currentIndex),\n            remove: this.checkCanRemove(this.currentIndex),\n        });\n        if (!value) {\n            this.onAdd.emit();\n        }\n        this.currentIndex++;\n        this.ref.markForCheck();\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\npublic buildControl(value?: {}): NovoFormGroup {\n        const /** @type {?} */ newControls = this.getNewControls(this.controls);\n        if (value) {\n            this.formUtils.setInitialValues(newControls, value);\n        }\n        const /** @type {?} */ ctrl: NovoFormGroup = this.formUtils.toFormGroup(newControls);\n        return ctrl;\n    }\n/**\n * @param {?} index\n * @param {?=} emitEvent\n * @return {?}\n */\npublic removeControl(index: number, emitEvent: boolean = true): void {\n        const /** @type {?} */ control: FormArray = /** @type {?} */(( <FormArray>this.form.controls[this.key]));\n        if (emitEvent) {\n            this.onRemove.emit({ value: control.at(index).value, index: index });\n        }\n        control.removeAt(index);\n        this.ref.markForCheck();\n    }\n/**\n * @param {?} index\n * @return {?}\n */\npublic editControl(index: number): void {\n        const /** @type {?} */ control: FormArray = /** @type {?} */(( <FormArray>this.form.controls[this.key]));\n        this.onEdit.emit({ value: control.at(index).value, index: index });\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic toggle(event: MouseEvent) {\n        Helpers.swallowEvent(event);\n        if (this.collapsible) {\n            this.toggled = !this.toggled;\n            this.ref.markForCheck();\n        }\n    }\n/**\n * @return {?}\n */\nprivate clearControls() {\n        const /** @type {?} */ control: FormArray = /** @type {?} */(( <FormArray>this.form.controls[this.key]));\n        if (control) {\n            for (let /** @type {?} */ i: number = control.controls.length; i >= 0; i--) {\n                this.removeControl(i, false);\n            }\n            this.currentIndex = 0;\n        }\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate checkCanEdit(index: number): boolean {\n        if (this.canEdit) {\n            const /** @type {?} */ control: FormArray = /** @type {?} */(( <FormArray>this.form.controls[this.key]));\n            return this.canEdit(control.at(index).value, index);\n        }\n        return true;\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate checkCanRemove(index: number): boolean {\n        if (this.canRemove) {\n            const /** @type {?} */ control: FormArray = /** @type {?} */(( <FormArray>this.form.controls[this.key]));\n            return this.canRemove(control.at(index).value, index);\n        }\n        return true;\n    }\n/**\n * @param {?} controls\n * @return {?}\n */\nprivate getNewControls(controls: BaseControl[]) {\n        let /** @type {?} */ ret: BaseControl[] = [];\n        (this.controls || []).forEach((control: BaseControl) => {\n            ret.push(new BaseControl(control.__type, control));\n        });\n        return ret;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-control-group',\n    template: `\n        <h6 class=\"novo-section-header\" *ngIf=\"label\">\n            <span (click)=\"toggle($event)\" [class.clickable]=\"collapsible\">\n                <i *ngIf=\"icon && !collapsible\" [ngClass]=\"icon\" [attr.data-automation-id]=\"'novo-control-group-icon-' + key\"></i>\n                <i *ngIf=\"collapsible\" class=\"bhi-next\" [class.toggled]=\"toggled\" [attr.data-automation-id]=\"'novo-control-group-collapse-' + key\"></i>\n                <span [attr.data-automation-id]=\"'novo-control-group-label-' + key\">{{ label }}</span>\n            </span>\n            <label class=\"novo-control-group-description\" *ngIf=\"description\" [attr.data-automation-id]=\"'novo-control-group-description-' + key\">{{ description }}</label>\n        </h6>\n        <div class=\"novo-control-group-controls\" [class.vertical]=\"vertical\" [class.horizontal]=\"!vertical\" [class.hidden]=\"collapsible && !toggled\">\n            <ng-template #defaultTemplate let-index=\"index\" let-form=\"form\" let-key=\"key\">\n                <div class=\"novo-control-group-control\">\n                    <div *ngFor=\"let c of controls\" class=\"novo-control-container\" [class.is-label]=\"c.controlType === 'read-only'\" [style.max-width.px]=\"c.width\">\n                        <novo-control [form]=\"form?.controls[key]['controls'][index]\" [control]=\"c\" [condensed]=\"!vertical || c.controlType === 'read-only'\"></novo-control>\n                    </div>\n                    <div class=\"novo-control-container last\" *ngIf=\"edit && !vertical\">\n                        <button [disabled]=\"!disabledArray[index].edit\" type=\"button\" *ngIf=\"edit && !vertical\" theme=\"icon\" icon=\"edit\" (click)=\"editControl(index)\" [attr.data-automation-id]=\"'novo-control-group-edit-' + key\" index=\"-1\"></button>\n                    </div>\n                    <div class=\"novo-control-container last\" *ngIf=\"remove && !vertical\">\n                        <button [disabled]=\"!disabledArray[index].remove\" type=\"button\" *ngIf=\"remove && !vertical\" theme=\"icon\" icon=\"delete-o\" (click)=\"removeControl(index)\" [attr.data-automation-id]=\"'novo-control-group-delete-' + key\" index=\"-1\"></button>\n                    </div>\n                </div>\n                <button [disabled]=\"!disabledArray[index].edit\" type=\"button\" *ngIf=\"edit && vertical\" theme=\"icon\" icon=\"edit\" (click)=\"editControl(index)\" [attr.data-automation-id]=\"'novo-control-group-edit-' + key\" index=\"-1\"></button>\n                <button [disabled]=\"!disabledArray[index].remove\" type=\"button\" *ngIf=\"remove && vertical\" theme=\"icon\" icon=\"delete-o\" (click)=\"removeControl(index)\" [attr.data-automation-id]=\"'novo-control-group-delete-' + key\" index=\"-1\"></button>\n            </ng-template>\n            <div class=\"novo-control-group-labels\" *ngIf=\"!vertical && form?.controls[key] && form?.controls[key]['controls'].length !== 0\">\n                <div class=\"novo-control-group-control-label\" *ngFor=\"let label of controlLabels\" [style.max-width.px]=\"label.width\">\n                    <span [attr.data-automation-id]=\"'novo-control-group-label-' + label.value\">{{ label.value }}</span>\n                </div>\n                <div class=\"novo-control-group-control-label last\" *ngIf=\"edit\" [attr.data-automation-id]=\"'novo-control-group-edit-' + key\"></div>\n                <div class=\"novo-control-group-control-label last\" *ngIf=\"remove\" [attr.data-automation-id]=\"'novo-control-group-delete-' + key\"></div>\n            </div>\n            <ng-container *ngIf=\"form?.controls[key]\">\n                <div class=\"novo-control-group-row\" *ngFor=\"let control of form?.controls[key]['controls']; let index = index;\">\n                    <ng-template\n                        [ngTemplateOutlet]=\"rowTemplate || defaultTemplate\"\n                        [ngTemplateOutletContext]=\"{form: form, index: index, key: key, controls: controls}\">\n                    </ng-template>\n                </div>\n            </ng-container>\n            <div class=\"novo-control-group-empty\" *ngIf=\"form?.controls[key] && form?.controls[key]['controls'].length === 0\" [attr.data-automation-id]=\"'novo-control-group-empty-' + key\">\n                {{ emptyMessage }}\n            </div>\n            <p *ngIf=\"add\">\n                <button type=\"button\" theme=\"dialogue\" icon=\"add-thin\" (click)=\"addNewControl()\" [attr.data-automation-id]=\"'novo-control-group-bottom-add-' + key\" index=\"-1\">{{ add?.label }}</button>\n            </p>\n        </div>\n   `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormUtils, },\n{type: FormBuilder, },\n{type: ChangeDetectorRef, },\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'vertical': [{ type: Input },],\n'add': [{ type: Input },],\n'remove': [{ type: Input },],\n'edit': [{ type: Input },],\n'collapsible': [{ type: Input },],\n'form': [{ type: Input },],\n'controls': [{ type: Input },],\n'key': [{ type: Input },],\n'label': [{ type: Input },],\n'description': [{ type: Input },],\n'emptyMessage': [{ type: Input },],\n'icon': [{ type: Input },],\n'initialValue': [{ type: Input },],\n'canEdit': [{ type: Input },],\n'canRemove': [{ type: Input },],\n'rowTemplate': [{ type: Input },],\n'onRemove': [{ type: Output },],\n'onEdit': [{ type: Output },],\n'onAdd': [{ type: Output },],\n};\n}\n\nfunction NovoControlGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoControlGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoControlGroup.ctorParameters;\n/** @type {?} */\nNovoControlGroup.propDecorators;\n/** @type {?} */\nNovoControlGroup.prototype._vertical;\n/** @type {?} */\nNovoControlGroup.prototype.add;\n/** @type {?} */\nNovoControlGroup.prototype._remove;\n/** @type {?} */\nNovoControlGroup.prototype._edit;\n/** @type {?} */\nNovoControlGroup.prototype._collapsible;\n/** @type {?} */\nNovoControlGroup.prototype.form;\n/** @type {?} */\nNovoControlGroup.prototype.controls;\n/** @type {?} */\nNovoControlGroup.prototype.key;\n/** @type {?} */\nNovoControlGroup.prototype.label;\n/** @type {?} */\nNovoControlGroup.prototype.description;\n/** @type {?} */\nNovoControlGroup.prototype.emptyMessage;\n/** @type {?} */\nNovoControlGroup.prototype._icon;\n/** @type {?} */\nNovoControlGroup.prototype.initialValue;\n/** @type {?} */\nNovoControlGroup.prototype.canEdit;\n/** @type {?} */\nNovoControlGroup.prototype.canRemove;\n/** @type {?} */\nNovoControlGroup.prototype.rowTemplate;\n/** @type {?} */\nNovoControlGroup.prototype.onRemove;\n/** @type {?} */\nNovoControlGroup.prototype.onEdit;\n/** @type {?} */\nNovoControlGroup.prototype.onAdd;\n/** @type {?} */\nNovoControlGroup.prototype.controlLabels;\n/** @type {?} */\nNovoControlGroup.prototype.toggled;\n/** @type {?} */\nNovoControlGroup.prototype.disabledArray;\n/** @type {?} */\nNovoControlGroup.prototype.currentIndex;\n/** @type {?} */\nNovoControlGroup.prototype.formUtils;\n/** @type {?} */\nNovoControlGroup.prototype.fb;\n/** @type {?} */\nNovoControlGroup.prototype.ref;\n/** @type {?} */\nNovoControlGroup.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, AfterViewInit, ViewChildren, QueryList } from '@angular/core';\n// App\n\nimport { NovoTemplate } from '../common/novo-template/novo-template.directive';\nimport { NovoTemplateService } from '../../services/template/NovoTemplateService';\nimport { TextMaskModule } from 'angular2-text-mask';\nexport class NovoControlTemplates implements AfterViewInit {\n  \n  defaultTemplates: QueryList<NovoTemplate>;\n/**\n * @param {?} templates\n */\nconstructor(private templates: NovoTemplateService) {}\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    if (this.defaultTemplates && this.defaultTemplates.length) {\n      this.defaultTemplates.forEach((template: any) => {\n        this.templates.addDefault(template.name, template.template);\n      });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-control-templates',\n  template: `\n        <!---Readonly--->\n        <ng-template novoTemplate=\"read-only\" let-form=\"form\" let-control>\n          <div>{{ form.value[control.key] }}</div>\n        </ng-template>\n        <!--Textbox--->\n        <ng-template novoTemplate=\"textbox\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container novo-control-input-with-label\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <input *ngIf=\"control?.type !== 'number' && control?.textMaskEnabled\" [textMask]=\"control.maskOptions\" [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (input)=\"methods.emitChange($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" autocomplete>\n            <input *ngIf=\"control?.type !== 'number' && !control?.textMaskEnabled\" [class.maxlength-error]=\"errors?.maxlength\" [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (input)=\"methods.emitChange($event)\" [maxlength]=\"control?.maxlength\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" autocomplete>\n            <input *ngIf=\"control?.type === 'number' && control?.subType !== 'percentage'\" [class.maxlength-error]=\"errors?.maxlength\" [formControlName]=\"control.key\" [id]=\"control.key\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (keydown)=\"methods.restrictKeys($event)\" (input)=\"methods.emitChange($event)\" [maxlength]=\"control?.maxlength\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" step=\"any\" (mousewheel)=\"numberInput.blur()\" #numberInput>\n            <input *ngIf=\"control?.type === 'number' && control?.subType === 'percentage'\" [type]=\"control?.type\" [placeholder]=\"control?.placeholder\" (keydown)=\"methods.restrictKeys($event)\" [value]=\"control?.percentValue\" (input)=\"methods.handlePercentChange($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" step=\"any\" (mousewheel)=\"percentInput.blur()\" #percentInput>\n            <label class=\"input-label\" *ngIf=\"control?.subType === 'currency'\">{{ control.currencyFormat }}</label>\n            <label class=\"input-label\" *ngIf=\"control?.subType === 'percentage'\">%</label>\n          </div>\n        </ng-template>\n\n        <!--Textarea--->\n        <ng-template novoTemplate=\"text-area\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div class=\"textarea-container\" [formGroup]=\"form\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <textarea [class.maxlength-error]=\"errors?.maxlength\" [name]=\"control.key\" [attr.id]=\"control.key\" [placeholder]=\"control.placeholder\" [formControlName]=\"control.key\" autosize (input)=\"methods.handleTextAreaInput($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [maxlength]=\"control?.maxlength\"></textarea>\n          </div>\n        </ng-template>\n\n        <!--Editor-->\n        <ng-template novoTemplate=\"editor\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-editor [name]=\"control.key\" [formControlName]=\"control.key\" [startupFocus]=\"control.startupFocus\" [minimal]=\"control.minimal\" [fileBrowserImageUploadUrl]=\"control.fileBrowserImageUploadUrl\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\"></novo-editor>\n          </div>\n        </ng-template>\n\n        <!--AceEditor-->\n        <ng-template novoTemplate=\"ace-editor\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-ace-editor [name]=\"control.key\" [formControlName]=\"control.key\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\"></novo-ace-editor>\n          </div>\n        </ng-template>\n\n        <!--HTML5 Select-->\n        <ng-template novoTemplate=\"native-select\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <select [id]=\"control.key\" [formControlName]=\"control.key\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n                <option *ngIf=\"control.placeholder\" value=\"\" disabled selected hidden>{{ control.placeholder }}</option>\n                <option *ngFor=\"let opt of control.options\" [value]=\"opt.key\">{{opt.value}}</option>\n            </select>\n          </div>\n        </ng-template>\n\n        <!--File-->\n        <ng-template novoTemplate=\"file\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-file-input [formControlName]=\"control.key\" [id]=\"control.key\" [name]=\"control.key\" [placeholder]=\"control.placeholder\" [value]=\"control.value\" [multiple]=\"control.multiple\" [layoutOptions]=\"control.layoutOptions\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" (edit)=\"methods.handleEdit($event)\" (save)=\"methods.handleSave($event)\" (delete)=\"methods.handleDelete($event)\" (upload)=\"methods.handleUpload($event)\"></novo-file-input>\n          </div>\n        </ng-template>\n\n        <!--Tiles-->\n        <ng-template novoTemplate=\"tiles\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-tiles [options]=\"control.options\" [formControlName]=\"control.key\" (onChange)=\"methods.modelChange($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\"  [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [controlDisabled]=\"control.disabled\"></novo-tiles>\n          </div>\n        </ng-template>\n\n        <!--Picker-->\n        <ng-template novoTemplate=\"picker\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\">\n            <novo-picker [config]=\"control.config\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" [parentScrollSelector]=\"control.parentScrollSelector\" *ngIf=\"!control.multiple\" (select)=\"methods.modelChange($event);\" (changed)=\"methods.modelChangeWithRaw($event)\" (typing)=\"methods.handleTyping($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"></novo-picker>\n            <novo-chips [source]=\"control.config\" [type]=\"control.config.type\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" *ngIf=\"control.multiple && !control.config.columns\" [closeOnSelect]=\"control.closeOnSelect\" (changed)=\"methods.modelChangeWithRaw($event)\" (typing)=\"methods.handleTyping($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"></novo-chips>\n            <novo-row-chips [source]=\"control.config\" [type]=\"control.config.type\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" *ngIf=\"control.multiple && control.config.columns\" [closeOnSelect]=\"control.closeOnSelect\" (changed)=\"methods.modelChangeWithRaw($event)\" (typing)=\"methods.handleTyping($event)\" (focus)=\"methods.handleFocus($event)\" (blur)=\"methods.handleBlur($event)\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\"></novo-row-chips>\n          </div>\n        </ng-template>\n\n        <!--Novo Select-->\n        <ng-template novoTemplate=\"select\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-select [options]=\"control.options\" [headerConfig]=\"control.headerConfig\" [placeholder]=\"control.placeholder\" [formControlName]=\"control.key\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" (onSelect)=\"methods.modelChange($event)\"></novo-select>\n          </div>\n        </ng-template>\n\n        <!--Radio-->\n        <ng-template novoTemplate=\"radio\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\">\n            <novo-radio [vertical]=\"vertical\" [name]=\"control.key\" [formControlName]=\"control.key\" *ngFor=\"let option of control.options\" [value]=\"option.value\" [label]=\"option.label\" [checked]=\"option.value === form.value[control.key]\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [button]=\"!!option.icon\" [icon]=\"option.icon\" [attr.data-automation-id]=\"control.key + '-' + (option?.label || option?.value)\"></novo-radio>\n          </div>\n        </ng-template>\n\n        <!--Time-->\n        <ng-template novoTemplate=\"time\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <novo-time-picker-input [attr.id]=\"control.key\" [name]=\"control.key\" [formControlName]=\"control.key\" [placeholder]=\"control.placeholder\" [military]=\"control.military\"></novo-time-picker-input>\n          </div>\n        </ng-template>\n\n        <!--Date-->\n        <ng-template novoTemplate=\"date\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <novo-date-picker-input [attr.id]=\"control.key\" [name]=\"control.key\" [formControlName]=\"control.key\" [start]=\"control.startDate\" [end]=\"control.endDate\" [format]=\"control.dateFormat\" [allowInvalidDate]=\"control.allowInvalidDate\" [textMaskEnabled]=\"control.textMaskEnabled\" [placeholder]=\"control.placeholder\" (focusEvent)=\"methods.handleFocus($event)\" (blurEvent)=\"methods.handleBlur($event)\"></novo-date-picker-input>\n          </div>\n        </ng-template>\n\n\n        <!--Date and Time-->\n        <ng-template novoTemplate=\"date-time\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\" class=\"novo-control-input-container\" [tooltip]=\"control.tooltip\" [tooltipPosition]=\"control.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\">\n            <novo-date-time-picker-input [attr.id]=\"control.key\" [name]=\"control.key\" [formControlName]=\"control.key\" [start]=\"control.startDate\" [end]=\"control.endDate\" [placeholder]=\"control.placeholder\" [military]=\"control.military\" (focusEvent)=\"methods.handleFocus($event)\" (blurEvent)=\"methods.handleBlur($event)\"></novo-date-time-picker-input>\n          </div>\n        </ng-template>\n\n        <!--Address-->\n        <ng-template novoTemplate=\"address\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-address [formControlName]=\"control.key\" [config]=\"control?.config\" (change)=\"methods.handleAddressChange($event)\" (focus)=\"methods.handleFocus($event.event, $event.field)\" (blur)=\"methods.handleBlur($event.event, $event.field)\"  (validityChange)=\"methods.updateValidity()\" (focusEvent)=\"handleFocus($event)\" (blurEvent)=\"handleBlur($event)\"></novo-address>\n          </div>\n        </ng-template>\n\n        <!--Checkbox-->\n        <ng-template novoTemplate=\"checkbox\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-checkbox [formControlName]=\"control?.key\" [name]=\"control?.key\" [label]=\"control?.checkboxLabel\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [layoutOptions]=\"control?.layoutOptions\"></novo-checkbox>\n          </div>\n        </ng-template>\n\n        <!--Checklist-->\n        <ng-template novoTemplate=\"checklist\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-check-list [formControlName]=\"control.key\" [name]=\"control.key\" [options]=\"control?.options\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [tooltipPreline]=\"control?.tooltipPreline\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" (onSelect)=\"methods.modelChange($event)\"></novo-check-list>\n          </div>\n        </ng-template>\n\n        <!--QuickNote-->\n        <ng-template novoTemplate=\"quick-note\" let-control let-form=\"form\" let-errors=\"errors\" let-methods=\"methods\">\n          <div [formGroup]=\"form\">\n            <novo-quick-note [formControlName]=\"control.key\" [startupFocus]=\"control?.startupFocus\" [placeholder]=\"control?.placeholder\" [config]=\"control?.config\" (change)=\"methods.modelChange($event)\" [tooltip]=\"control?.tooltip\" [tooltipPosition]=\"control?.tooltipPosition\" [tooltipSize]=\"control?.tooltipSize\" [removeTooltipArrow]=\"control?.removeTooltipArrow\" [tooltipAutoPosition]=\"control?.tooltipAutoPosition\" [tooltipPreline]=\"control?.tooltipPreline\"></novo-quick-note>\n          </div>\n        </ng-template>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoTemplateService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'defaultTemplates': [{ type: ViewChildren, args: [NovoTemplate, ] },],\n};\n}\n\nfunction NovoControlTemplates_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoControlTemplates.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoControlTemplates.ctorParameters;\n/** @type {?} */\nNovoControlTemplates.propDecorators;\n/** @type {?} */\nNovoControlTemplates.prototype.defaultTemplates;\n/** @type {?} */\nNovoControlTemplates.prototype.templates;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NovoTemplate } from './novo-template/novo-template.directive';\nexport class NovoCommonModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  exports: [NovoTemplate],\n  declarations: [NovoTemplate],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoCommonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n// Vendor\n\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\n\nimport { NovoRadioModule } from './../radio/Radio.module';\nimport { NovoButtonModule } from './../button/Button.module';\nimport { NovoTilesModule } from './../tiles/Tiles.module';\nimport { NovoSelectModule } from './../select/Select.module';\nimport { NovoPickerModule } from './../picker/Picker.module';\nimport { NovoChipsModule } from './../chips/Chips.module';\nimport { NovoDatePickerModule } from './../date-picker/DatePicker.module';\nimport { NovoTimePickerModule } from './../time-picker/TimePicker.module';\nimport { NovoDateTimePickerModule } from './../date-time-picker/DateTimePicker.module';\nimport { NovoNovoCKEditorModule } from './../ckeditor/CKEditor.module';\nimport { NovoQuickNoteModule } from './../quick-note/QuickNote.module';\nimport { NovoDynamicFormElement, NovoFieldsetElement, NovoFieldsetHeaderElement } from './DynamicForm';\nimport { NovoFormElement } from './Form';\nimport { NovoControlElement, NovoAutoSize } from './Control';\nimport { NovoFormExtrasModule } from './extras/FormExtras.module';\nimport { NovoHeaderModule } from './../header/Header.module';\nimport { NovoTooltipModule } from './../tooltip/Tooltip.module';\nimport { NovoDragulaModule } from './../dragula/Dragula.module';\nimport { NovoTipWellModule } from './../tip-well/TipWell.module';\nimport { NovoAceEditorModule } from './../ace-editor/AceEditor.module';\nimport { NovoModalModule } from './../modal/Modal.module';\nimport { ControlConfirmModal, ControlPromptModal } from './FieldInteractionModals';\nimport { NovoControlGroup } from './ControlGroup';\nimport { NovoControlTemplates } from './ControlTemplates';\nimport { NovoTemplateService } from './../../services/template/NovoTemplateService';\nimport { NovoCommonModule } from '../common/common.module';\nexport class NovoFormModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NovoRadioModule,\n    NovoTilesModule,\n    NovoSelectModule,\n    NovoPickerModule,\n    NovoChipsModule,\n    NovoDatePickerModule,\n    NovoTimePickerModule,\n    NovoNovoCKEditorModule,\n    NovoFormExtrasModule,\n    NovoQuickNoteModule,\n    NovoDateTimePickerModule,\n    NovoHeaderModule,\n    NovoTooltipModule,\n    NovoDragulaModule,\n    TextMaskModule,\n    NovoTipWellModule,\n    NovoModalModule,\n    NovoButtonModule,\n    NovoAceEditorModule,\n    NovoCommonModule,\n  ],\n  declarations: [\n    NovoAutoSize, NovoControlElement, NovoDynamicFormElement, NovoFormElement,\n    NovoFieldsetElement, NovoFieldsetHeaderElement,\n    ControlConfirmModal, ControlPromptModal, NovoControlGroup, NovoControlTemplates\n  ],\n  exports: [\n    NovoAutoSize, NovoDynamicFormElement, NovoControlElement, NovoFormElement,\n    NovoFieldsetHeaderElement,\n    NovoControlGroup,\n    NovoControlTemplates\n  ],\n  entryComponents: [ControlConfirmModal, ControlPromptModal],\n  providers: [NovoTemplateService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoFormModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoFormModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoFormModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, EventEmitter, Input, Output, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n// APP\n\nimport { NovoLabelService } from '../../../../services/novo-label-service';\nexport class Pagination implements OnInit, OnChanges {\n     page: number;\n     totalItems: number;\n     itemsPerPage: number = 10;\n     rowOptions: any;\n     label: string;\n/**\n * @return {?}\n */\nget disablePageSelection(): boolean { return this.pageSelectDisabled; }\n/**\n * @param {?} val\n * @return {?}\n */\nset disablePageSelection(val: boolean) {\n        this.pageSelectDisabled = coerceBooleanProperty(val);\n    }\n     pageChange: EventEmitter<any> = new EventEmitter();\n     itemsPerPageChange: EventEmitter<any> = new EventEmitter();\n     onPageChange: EventEmitter<any> = new EventEmitter();\npublic pageSelectDisabled: boolean;\n    maxPagesDisplayed: number = 5;\n    totalPages: number;\n    pages: Array<any>;\n/**\n * @param {?} labels\n */\nconstructor(public labels: NovoLabelService) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.label = this.label || this.labels.itemsPerPage;\n        this.rowOptions = this.rowOptions || this.getDefaultRowOptions();\n    }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n        this.page = this.page || 1;\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n/**\n * @return {?}\n */\ngetDefaultRowOptions() {\n        return [\n            { value: 10, label: '10' },\n            { value: 25, label: '25' },\n            { value: 50, label: '50' },\n            { value: 100, label: '100' }\n        ];\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonPageSizeChanged(event) {\n        this.page = 1;\n        this.itemsPerPage = event.selected;\n        this.totalPages = this.calculateTotalPages();\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.pageChange.emit(this.page);\n        this.itemsPerPageChange.emit(this.itemsPerPage);\n        this.onPageChange.emit({\n            page: this.page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n/**\n * @param {?} page\n * @param {?=} event\n * @return {?}\n */\nselectPage(page, event?: any) {\n        if (event) {\n            event.preventDefault();\n        }\n\n        this.page = page;\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.pageChange.emit(this.page);\n        this.onPageChange.emit({\n            page: this.page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n/**\n * @return {?}\n */\nnoPrevious() {\n        return this.page === 1;\n    }\n/**\n * @return {?}\n */\nnoNext() {\n        return this.page === this.totalPages;\n    }\n/**\n * @param {?} number\n * @param {?} text\n * @param {?} isActive\n * @return {?}\n */\nmakePage(number, text, isActive) {\n        return {\n            number: number,\n            text: text,\n            active: isActive\n        };\n    }\n/**\n * @param {?} currentPage\n * @param {?} totalPages\n * @return {?}\n */\ngetPages(currentPage, totalPages) {\n        let /** @type {?} */ pages = [];\n        // Default page limits\n        let /** @type {?} */ startPage = 1;\n        let /** @type {?} */ endPage = totalPages;\n        const /** @type {?} */ isMaxSized = this.maxPagesDisplayed < totalPages;\n\n        // recompute if maxPagesDisplayed\n        if (isMaxSized) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(this.maxPagesDisplayed / 2), 1);\n            endPage = startPage + this.maxPagesDisplayed - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n                endPage = totalPages;\n                startPage = endPage - this.maxPagesDisplayed + 1;\n            }\n        }\n\n        // Add page number links\n        for (let /** @type {?} */ number = startPage; number <= endPage; number++) {\n            const /** @type {?} */ page = this.makePage(number, number.toString(), number === currentPage);\n            pages.push(page);\n        }\n        return pages;\n    }\n/**\n * @return {?}\n */\ncalculateTotalPages() {\n        const /** @type {?} */ totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-pagination',\n    template: `\n        <h5 class=\"rows\">{{label}}</h5>\n        <novo-select [options]=\"rowOptions\" [placeholder]=\"labels.select\" [(ngModel)]=\"itemsPerPage\" (onSelect)=\"onPageSizeChanged($event)\" data-automation-id=\"pager-select\"></novo-select>\n        <span class=\"spacer\"></span>\n        <ul class=\"pager\" data-automation-id=\"pager\">\n            <li class=\"page\" (click)=\"selectPage(page-1)\" [ngClass]=\"{'disabled': noPrevious()}\"><i class=\"bhi-previous\" data-automation-id=\"pager-previous\"></i></li>\n            <li class=\"page\" [ngClass]=\"{active: p.number==page}\" [class.disabled]=\"disablePageSelection\" *ngFor=\"let p of pages\" (click)=\"selectPage(p.number)\">{{p.text}}</li>\n            <li class=\"page\" (click)=\"selectPage(page+1)\" [ngClass]=\"{'disabled': noNext()}\"><i class=\"bhi-next\" data-automation-id=\"pager-next\"></i></li>\n        </ul>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'page': [{ type: Input },],\n'totalItems': [{ type: Input },],\n'itemsPerPage': [{ type: Input },],\n'rowOptions': [{ type: Input },],\n'label': [{ type: Input },],\n'disablePageSelection': [{ type: Input },],\n'pageChange': [{ type: Output },],\n'itemsPerPageChange': [{ type: Output },],\n'onPageChange': [{ type: Output },],\n};\n}\n\nfunction Pagination_tsickle_Closure_declarations() {\n/** @type {?} */\nPagination.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPagination.ctorParameters;\n/** @type {?} */\nPagination.propDecorators;\n/** @type {?} */\nPagination.prototype.page;\n/** @type {?} */\nPagination.prototype.totalItems;\n/** @type {?} */\nPagination.prototype.itemsPerPage;\n/** @type {?} */\nPagination.prototype.rowOptions;\n/** @type {?} */\nPagination.prototype.label;\n/** @type {?} */\nPagination.prototype.pageChange;\n/** @type {?} */\nPagination.prototype.itemsPerPageChange;\n/** @type {?} */\nPagination.prototype.onPageChange;\n/** @type {?} */\nPagination.prototype.pageSelectDisabled;\n/** @type {?} */\nPagination.prototype.maxPagesDisplayed;\n/** @type {?} */\nPagination.prototype.totalPages;\n/** @type {?} */\nPagination.prototype.pages;\n/** @type {?} */\nPagination.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class BaseRenderer {\n    data: any = {};\n    value: any = '';\n    meta: any = {};\n}\n\nfunction BaseRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseRenderer.prototype.data;\n/** @type {?} */\nBaseRenderer.prototype.value;\n/** @type {?} */\nBaseRenderer.prototype.meta;\n}\n\n","// NG2\n\nimport { Component, ElementRef, ViewContainerRef, ViewChild, Input, OnInit } from '@angular/core';\n// APP\n\nimport { BaseRenderer } from './../base-renderer/BaseRenderer';\nimport { ComponentUtils } from './../../../../utils/component-utils/ComponentUtils';\nexport class RowDetails implements OnInit {\n     container: ViewContainerRef;\n\n     data: any;\n     renderer: any;\n\n    value: any = '';\n/**\n * @param {?} element\n * @param {?} componentUtils\n */\nconstructor(private element: ElementRef,\nprivate componentUtils: ComponentUtils) {\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.renderer) {\n            if (this.renderer.prototype instanceof BaseRenderer) {\n                let /** @type {?} */ componentRef = this.componentUtils.appendNextToLocation(this.renderer, this.container);\n                componentRef.instance.data = this.data;\n            } else {\n                this.value = this.renderer(this.data);\n            }\n        } else {\n            // this.value = this.row[this.column.name];\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-row-details',\n    template: `\n        <span #container></span>\n        <span>{{value}}</span>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ComponentUtils, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'data': [{ type: Input },],\n'renderer': [{ type: Input },],\n};\n}\n\nfunction RowDetails_tsickle_Closure_declarations() {\n/** @type {?} */\nRowDetails.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowDetails.ctorParameters;\n/** @type {?} */\nRowDetails.propDecorators;\n/** @type {?} */\nRowDetails.prototype.container;\n/** @type {?} */\nRowDetails.prototype.data;\n/** @type {?} */\nRowDetails.prototype.renderer;\n/** @type {?} */\nRowDetails.prototype.value;\n/** @type {?} */\nRowDetails.prototype.element;\n/** @type {?} */\nRowDetails.prototype.componentUtils;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, ElementRef, ViewChild, ViewContainerRef, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n// Vendor\n\nimport'rxjs/add/operator/debounceTime';\nimport'rxjs/add/operator/distinctUntilChanged';\n// APP\n\nimport { BaseRenderer } from './../base-renderer/BaseRenderer';\nimport { ComponentUtils } from './../../../../utils/component-utils/ComponentUtils';\nexport class TableCell implements OnInit, OnDestroy {\n     container: ViewContainerRef;\n\n     column: any;\n     row: any;\n     form: FormGroup;\n     hasEditor: boolean;\npublic value: any = '';\nprivate valueChangeSubscription: any;\n/**\n * @param {?} element\n * @param {?} componentUtils\n */\nconstructor(private element: ElementRef,\nprivate componentUtils: ComponentUtils) {\n        this.element = element;\n        this.componentUtils = componentUtils;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.column._type = this.column.type || 'text';\n        if (this.column.renderer) {\n            if (this.column.renderer.prototype instanceof BaseRenderer) {\n                this.column._type = 'custom';\n                let /** @type {?} */ componentRef = this.componentUtils.appendNextToLocation(this.column.renderer, this.container);\n                componentRef.instance.meta = this.column;\n                componentRef.instance.data = this.row;\n                componentRef.instance.value = this.form && this.hasEditor ? this.form.value[this.column.name] : this.row[this.column.name];\n                // TODO - save ref to this and update in the valueChanges below!!\n            } else {\n                // TODO - wtf to do here?\n                this.value = this.column.renderer(this.row);\n            }\n        } else {\n            this.value = this.form && this.hasEditor ? this.form.value[this.column.name] : this.row[this.column.name];\n        }\n\n        if (this.form && this.hasEditor) {\n            this.valueChangeSubscription = this.form.valueChanges\n                .debounceTime(300)\n                .distinctUntilChanged()\n                .subscribe((value) => {\n                    this.value = value[this.column.name];\n                });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonClick(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (this.column.onClick) {\n            this.column.onClick(this.row);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-table-cell',\n    template: `\n        <div [ngSwitch]=\"column._type\">\n            <span #container></span>\n            <date-cell *ngSwitchCase=\"'date'\" [value]=\"value\"></date-cell>\n            <a *ngSwitchCase=\"'link'\" (click)=\"onClick($event);\">{{ value }}</a>\n            <span *ngSwitchDefault>{{ value }}</span>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ComponentUtils, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'column': [{ type: Input },],\n'row': [{ type: Input },],\n'form': [{ type: Input },],\n'hasEditor': [{ type: Input },],\n};\n}\n\nfunction TableCell_tsickle_Closure_declarations() {\n/** @type {?} */\nTableCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableCell.ctorParameters;\n/** @type {?} */\nTableCell.propDecorators;\n/** @type {?} */\nTableCell.prototype.container;\n/** @type {?} */\nTableCell.prototype.column;\n/** @type {?} */\nTableCell.prototype.row;\n/** @type {?} */\nTableCell.prototype.form;\n/** @type {?} */\nTableCell.prototype.hasEditor;\n/** @type {?} */\nTableCell.prototype.value;\n/** @type {?} */\nTableCell.prototype.valueChangeSubscription;\n/** @type {?} */\nTableCell.prototype.element;\n/** @type {?} */\nTableCell.prototype.componentUtils;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, EventEmitter, ElementRef, Renderer2, OnChanges, OnInit, Input, Output, SimpleChanges, HostListener } from '@angular/core';\n// APP\n\nimport { KeyCodes } from './../../../../utils/key-codes/KeyCodes';\nimport { Helpers } from './../../../../utils/Helpers';\nexport class TableFilter implements OnInit, OnChanges {\n     config: any;\n     onFilterChange: EventEmitter<any> = new EventEmitter();\n\n    filterThrottle: any;\n/**\n * @param {?} element\n * @param {?} renderer\n */\nconstructor(private element: ElementRef,\nprivate renderer: Renderer2) {\n        this.element = element;\n        this.renderer = renderer;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.ngOnChanges();\n    }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges) {\n        let /** @type {?} */ label = '';\n        if (this.config.freetextFilter) {\n            label = this.config.freetextFilter;\n        } else if (this.config.filter) {\n            label = this.config.filter;\n        }\n        this.renderer.setProperty(this.element, 'value', label);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onChangeFilter(event: KeyboardEvent) {\n        clearTimeout(this.filterThrottle);\n        if (KeyCodes.ENTER === event.keyCode) {\n            this.config.filter = ( /** @type {?} */((event.target as any))).value;\n            this.onFilterChange.emit({ filtering: this.config });\n        } else {\n            this.filterThrottle = setTimeout(() => {\n                this.config.filter = ( /** @type {?} */((event.target as any))).value;\n                this.onFilterChange.emit({ filtering: this.config });\n            }, 300);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onClick(event) {\n        Helpers.swallowEvent(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoTableFilter]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input, args: ['novoTableFilter', ] },],\n'onFilterChange': [{ type: Output },],\n'onChangeFilter': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction TableFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nTableFilter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableFilter.ctorParameters;\n/** @type {?} */\nTableFilter.propDecorators;\n/** @type {?} */\nTableFilter.prototype.config;\n/** @type {?} */\nTableFilter.prototype.onFilterChange;\n/** @type {?} */\nTableFilter.prototype.filterThrottle;\n/** @type {?} */\nTableFilter.prototype.element;\n/** @type {?} */\nTableFilter.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, EventEmitter, ElementRef, OnInit, Input, Output } from '@angular/core';\n// App\n\nimport { Helpers } from '../../../../utils/Helpers';\nexport class ThOrderable implements OnInit {\n     column: any;\n     onOrderChange: EventEmitter<any> = new EventEmitter();\n\n    table: any;\n    clone: any;\n    target: any;\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) {\n        this.element = element;\n    }\n/**\n * @return {?}\n */\nget index() {\n        let /** @type {?} */ index: number = null;\n        if (this.element.nativeElement && this.element.nativeElement.parentNode) {\n            let /** @type {?} */ children: Array<any> = Array.prototype.slice.call(this.element.nativeElement.parentNode.children);\n            index = children.indexOf(this.element.nativeElement);\n        }\n        return index;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.column.ordering) {\n            this.element.nativeElement.setAttribute('draggable', true);\n            this.table = this.findTable(this.element.nativeElement);\n        }\n    }\n/**\n * \\@name onDragStart\n * @param {?=} event\n * @return {?}\n */\nonDragStart(event?: any) {\n        if (this.column.ordering) {\n            this.element.nativeElement.classList.add('dragging');\n            event.dataTransfer.effectAllowed = 'move';\n            event.dataTransfer.setData('text/plain', JSON.stringify(this.column));\n\n            this.clone = this.table.cloneNode(true);\n            this.clone.style.position = 'absolute';\n            this.clone.style.left = '100%';\n            this.clone.style.width = '150px';\n            this.deleteColumns(this.clone);\n            document.body.appendChild(this.clone);\n            event.dataTransfer.setDragImage(this.clone, 75, 30);\n        }\n    }\n/**\n * \\@name deleteColumns\n * @param {?} table\n * @return {?}\n */\ndeleteColumns(table: { rows: Array<any>; deleteRow: Function }) {\n        // TODO: `table` should be immutable and this method should return the modified data to its caller\n        if (table.rows.length > 0) {\n            const /** @type {?} */ allRows = table.rows;\n            for (let /** @type {?} */ i = 0; i < allRows.length; i++) {\n                if (i > 10) {\n                    table.deleteRow(-1);\n                } else {\n                    const /** @type {?} */ cellLength = allRows[i].cells.length;\n                    for (let /** @type {?} */ c = 0; c < cellLength; c++) {\n                        if (c < this.index) {\n                            allRows[i].deleteCell(0);\n                        } else if (c > this.index) {\n                            allRows[i].deleteCell(-1);\n                        }\n                    }\n                }\n            }\n        }\n    }\n/**\n * @param {?} start\n * @return {?}\n */\nfindTable(start) {\n        let /** @type {?} */ htmlElementNode = start;\n        while (htmlElementNode) {\n            htmlElementNode = htmlElementNode.parentNode;\n            if (htmlElementNode && htmlElementNode.tagName.toLowerCase() === 'table') {\n                return htmlElementNode;\n            }\n        }\n        return undefined;\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nonDrag(event?: any) {\n        Helpers.swallowEvent(event);\n        return false;\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nonDragEnd(event?: any) {\n        Helpers.swallowEvent(event);\n        this.element.nativeElement.classList.remove('over');\n        this.element.nativeElement.classList.remove('dragging');\n        document.body.removeChild(this.clone);\n        return false;\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nonDrop(event?: any) {\n        Helpers.swallowEvent(event);\n        this.element.nativeElement.classList.remove('over');\n        const /** @type {?} */ data = JSON.parse(event.dataTransfer.getData('text/plain'));\n\n        this.onOrderChange.emit({\n            first: data,\n            second: this.column\n        });\n\n        return false;\n    }\n/**\n * \\@name onDragOver\n * @param {?} event\n * @return {?}\n */\nonDragOver(event: { preventDefault: Function, dataTransfer: { dropEffect: string }, stopPropagation: Function }): false {\n        Helpers.swallowEvent(event);\n        event.dataTransfer.dropEffect = 'move';\n        return false;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragEnter(event: any) {\n        this.element.nativeElement.classList.add('over');\n        this.target = event.target;\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nonDragLeave(event?: any) {\n        this.element.nativeElement.classList.remove('over');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoThOrderable]',\n    host: {\n        '(dragstart)': 'onDragStart($event)',\n        '(dragover)': 'onDragOver($event)',\n        '(dragenter)': 'onDragEnter($event)',\n        '(dragleave)': 'onDragLeave($event)',\n        '(dragend)': 'onDragEnd($event)',\n        '(drop)': 'onDrop($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'column': [{ type: Input, args: ['novoThOrderable', ] },],\n'onOrderChange': [{ type: Output },],\n};\n}\n\nfunction ThOrderable_tsickle_Closure_declarations() {\n/** @type {?} */\nThOrderable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThOrderable.ctorParameters;\n/** @type {?} */\nThOrderable.propDecorators;\n/** @type {?} */\nThOrderable.prototype.column;\n/** @type {?} */\nThOrderable.prototype.onOrderChange;\n/** @type {?} */\nThOrderable.prototype.table;\n/** @type {?} */\nThOrderable.prototype.clone;\n/** @type {?} */\nThOrderable.prototype.target;\n/** @type {?} */\nThOrderable.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\nexport class ThSortable {\n     config: any;\n     column: any;\n     onSortChange: EventEmitter<any> = new EventEmitter();\n/**\n * @param {?} event\n * @return {?}\n */\nonToggleSort(event) {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (this.config && this.column && this.config.sorting !== false && this.column.sorting !== false) {\n            switch (this.column.sort) {\n                case 'asc':\n                    this.column.sort = 'desc';\n                    break;\n                default:\n                    this.column.sort = 'asc';\n                    break;\n            }\n\n            this.onSortChange.emit(this.column);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[novoThSortable]',\n    host: {\n        '(click)': 'onToggleSort($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input, args: ['novoThSortable', ] },],\n'column': [{ type: Input },],\n'onSortChange': [{ type: Output },],\n};\n}\n\nfunction ThSortable_tsickle_Closure_declarations() {\n/** @type {?} */\nThSortable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThSortable.ctorParameters;\n/** @type {?} */\nThSortable.propDecorators;\n/** @type {?} */\nThSortable.prototype.config;\n/** @type {?} */\nThSortable.prototype.column;\n/** @type {?} */\nThSortable.prototype.onSortChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input } from '@angular/core';\n// APP\n\nimport { BaseRenderer } from '../base-renderer/BaseRenderer';\nexport class DateCell extends BaseRenderer {\n     value: any;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'date-cell',\n    template: `\n        <div class=\"date-cell\">\n            <label>{{ value | date }}</label>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n};\n}\n\nfunction DateCell_tsickle_Closure_declarations() {\n/** @type {?} */\nDateCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateCell.ctorParameters;\n/** @type {?} */\nDateCell.propDecorators;\n/** @type {?} */\nDateCell.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component } from '@angular/core';\n// APP\n\nimport { BaseRenderer } from '../base-renderer/BaseRenderer';\nexport class PercentageCell extends BaseRenderer {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'percentage-cell',\n    template: `\n        <div class=\"percentage\" *ngIf=\"value || value === 0\">{{ value | percent:'1.0-2' }}</div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PercentageCell_tsickle_Closure_declarations() {\n/** @type {?} */\nPercentageCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPercentageCell.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, OnInit } from '@angular/core';\n// APP\n\nimport { BaseRenderer } from '../base-renderer/BaseRenderer';\n\nexport interface INovoDropdownCellConfig {\n  category?: string;\n  callback?: Function;\n  options: ({ label?: string; value?: string; callback?: Function } | string)[];\n}\nexport class NovoDropdownCell extends BaseRenderer implements OnInit {\n   meta: any;\n   value: any;\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    // Check for and fix bad config\n    if (!this.meta.dropdownCellConfig) {\n      throw new Error('Missing \"dropdownCellConfig\" on the column setup');\n    }\n  }\n/**\n * @param {?} config\n * @param {?} option\n * @param {?} value\n * @return {?}\n */\npublic onClick(config, option, value): void {\n    let /** @type {?} */ callback = option.callback || config.callback;\n    callback(this.data, value || option);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-dropdown-cell',\n  template: `\n    <novo-dropdown parentScrollSelector=\".table-container\" containerClass=\"novo-table-dropdown-cell\">\n      <button type=\"button\" theme=\"secondary\" icon=\"collapse\" inverse>\n        <span data-automation-id=\"novo-dropdown-cell-value\">{{ value }}</span>\n      </button>\n      <list>\n        <ng-container *ngFor=\"let config of meta.dropdownCellConfig; let i = index\">\n          <dropdown-item-header *ngIf=\"config.category\">{{ config.category }}</dropdown-item-header>\n          <item *ngFor=\"let option of config.options\" (action)=\"onClick(config, option, option.value)\"\n                [class.active]=\"(option || option.value) === value\">\n            <span [attr.data-automation-id]=\"option.label || option\">{{ option.label || option }}</span>\n            <i *ngIf=\"(option || option.value) === value\" class=\"bhi-check\"></i>\n          </item>\n          <hr *ngIf=\"i < meta.dropdownCellConfig.length - 1\"/>\n        </ng-container>\n      </list>\n    </novo-dropdown>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'meta': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction NovoDropdownCell_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoDropdownCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoDropdownCell.ctorParameters;\n/** @type {?} */\nNovoDropdownCell.propDecorators;\n/** @type {?} */\nNovoDropdownCell.prototype.meta;\n/** @type {?} */\nNovoDropdownCell.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Directive, AfterViewInit, ElementRef } from '@angular/core';\nexport class NovoTableKeepFilterFocus implements AfterViewInit {\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.element.nativeElement.focus();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[keepFilterFocused]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction NovoTableKeepFilterFocus_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableKeepFilterFocus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableKeepFilterFocus.ctorParameters;\n/** @type {?} */\nNovoTableKeepFilterFocus.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component } from '@angular/core';\nexport class NovoTableActionsElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-table-actions',\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTableActionsElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableActionsElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableActionsElement.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component } from '@angular/core';\nexport class NovoTableFooterElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-table-footer',\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTableFooterElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableFooterElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableFooterElement.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component } from '@angular/core';\nexport class NovoTableHeaderElement {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-table-header',\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTableHeaderElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableHeaderElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableHeaderElement.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n// APP\n\nimport { NovoSelectModule } from '../../select/Select.module';\nimport { NovoDropdownModule } from '../../dropdown/Dropdown.module';\nimport { NovoButtonModule } from '../../button/Button.module';\nimport { Pagination } from './pagination/Pagination';\nimport { RowDetails } from './row-details/RowDetails';\nimport { TableCell } from './table-cell/TableCell';\nimport { TableFilter } from './table-filter/TableFilter';\nimport { ThOrderable } from './th-orderable/ThOrderable';\nimport { ThSortable } from './th-sortable/ThSortable';\nimport { DateCell } from './date-cell/DateCell';\nimport { PercentageCell } from './percentage-cell/PercentageCell';\nimport { NovoDropdownCell } from './dropdown-cell/DropdownCell';\nimport { NovoTableKeepFilterFocus } from './keep-filter-focus/KeepFilterFocus';\nimport { NovoTableActionsElement } from './table-actions/TableActions';\nimport { NovoTableFooterElement } from './table-footer/TableFooter';\nimport { NovoTableHeaderElement } from './table-header/TableHeader';\nexport class NovoTableExtrasModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        NovoSelectModule,\n        NovoDropdownModule,\n        NovoButtonModule\n    ],\n    declarations: [\n        NovoTableHeaderElement,\n        NovoTableFooterElement,\n        NovoTableActionsElement,\n        NovoTableKeepFilterFocus,\n        Pagination,\n        RowDetails,\n        TableCell,\n        TableFilter,\n        ThOrderable,\n        ThSortable,\n        DateCell,\n        PercentageCell,\n        NovoDropdownCell\n    ],\n    exports: [\n        NovoTableHeaderElement,\n        NovoTableFooterElement,\n        NovoTableActionsElement,\n        NovoTableKeepFilterFocus,\n        Pagination,\n        RowDetails,\n        TableCell,\n        TableFilter,\n        ThOrderable,\n        ThSortable,\n        DateCell,\n        PercentageCell,\n        NovoDropdownCell\n    ],\n    entryComponents: [\n        DateCell,\n        PercentageCell,\n        NovoDropdownCell\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTableExtrasModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableExtrasModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableExtrasModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class CollectionEvent {\n    static REFRESH: string = 'Collection.REFRESH';\n    static ADD: string = 'Collection.ADD';\n    static REMOVE: string = 'Collection.REMOVE';\n    static REMOVE_ALL: string = 'Collection.REMOVE_ALL';\n    static REPLACE: string = 'Collection.REPLACE';\n    static INVALIDATE_ALL: string = 'Collection.INVALIDATE_ALL';\n    static SORT: string = 'Collection.SORT';\n    static FILTER: string = 'Collection.FILTER';\n    static CHANGE: string = 'Collection.CHANGE';\n    static CURRENTPAGE_CHANGE: string = 'Collection.CURRENTPAGE_CHANGE';\n    static PAGESIZE_CHANGE: string = 'Collection.PAGESIZE_CHANGE';\n    static NUMBEROFPAGES_CHANGE: string = 'Collection.NUMBEROFPAGES_CHANGE';\n\n    type: string = '';\n    data: Array<any> = [];\n/**\n * @param {?=} type\n * @param {?=} data\n */\nconstructor(type = 'Collection.REFRESH', data = []) {\n        this.type = type;\n        this.data = data;\n    }\n}\n\nfunction CollectionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionEvent.REFRESH;\n/** @type {?} */\nCollectionEvent.ADD;\n/** @type {?} */\nCollectionEvent.REMOVE;\n/** @type {?} */\nCollectionEvent.REMOVE_ALL;\n/** @type {?} */\nCollectionEvent.REPLACE;\n/** @type {?} */\nCollectionEvent.INVALIDATE_ALL;\n/** @type {?} */\nCollectionEvent.SORT;\n/** @type {?} */\nCollectionEvent.FILTER;\n/** @type {?} */\nCollectionEvent.CHANGE;\n/** @type {?} */\nCollectionEvent.CURRENTPAGE_CHANGE;\n/** @type {?} */\nCollectionEvent.PAGESIZE_CHANGE;\n/** @type {?} */\nCollectionEvent.NUMBEROFPAGES_CHANGE;\n/** @type {?} */\nCollectionEvent.prototype.type;\n/** @type {?} */\nCollectionEvent.prototype.data;\n}\n\n","// Ng\n\nimport { EventEmitter } from '@angular/core';\n// App\n\nimport { Collection } from './Collection';\nimport { CollectionEvent } from './CollectionEvent';\nimport { Helpers } from '../../utils/Helpers';\n/**\n * Base Class for all Collection based data providers\n * \n * @export\n * \\@class DataProvider\n * \\@example \n *  var dp:DataProvider = new DataProvider();\n *  dp.addItem({label:\"Item 1\"});\n *  dp.addItem({label:\"Item 2\"});\n *  dp.addItem({label:\"Item 3\"});\n *  dp.addItem({label:\"Item 4\"});\n *  var myList:List = new List();\n *  myList.dataProvider = dp;\n */\nexport class ArrayCollection<T> implements Collection<T> {\n    dataChange: EventEmitter<CollectionEvent> = new EventEmitter<CollectionEvent>();\n    source: Array<T> = [];\n    editData: Array<T> = [];\n    isEditing: boolean = false;\n    filterData: Array<T> = [];\n    _filter: any = {};\n    _sort: Array<any> = [];\n/**\n * @param {?=} source\n */\nconstructor(source: Array<T> = []) {\n        this.source = source;\n        this.editData = this.copy(this.source);\n        this.filterData = this.source.slice();\n    }\n/**\n * @return {?}\n */\nget length() {\n        return this.filterData.length;\n    }\n/**\n * @return {?}\n */\nget total(): number {\n        return this.filterData.length;\n    }\n/**\n * @return {?}\n */\nget list(): Array<T> {\n        return this.filterData;\n    }\n/**\n * @return {?}\n */\nisEmpty(): boolean {\n        return this.length <= 0 && !this.isLoading() && !this.hasErrors();\n    }\n/**\n * @return {?}\n */\nhasErrors(): boolean {\n        return false;\n    }\n/**\n * @return {?}\n */\nisLoading(): boolean {\n        return false;\n    }\n/**\n * @return {?}\n */\nisFiltered(): boolean {\n        return (Object.keys(this._filter).length > 0);\n    }\n/**\n * Method to switch the isEditingflag for the data source\n * @return {?}\n */\nedit() {\n        this.isEditing = true;\n        this.editData = this.copy(this.source);\n    }\n/**\n * Method to leave edit mode and reset source\n * @return {?}\n */\nundo() {\n        this.isEditing = false;\n        this.source = this.copy(this.editData);\n        this.refresh();\n    }\n/**\n * Method to leave edit mode and save editData\n * @return {?}\n */\ncommit() {\n        this.isEditing = false;\n        this.source = this.filterData.slice();\n        this.refresh();\n    }\n/**\n * Appends an item to the end of the data provider.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} item\n * @return {?}\n */\naddItem(item: T): void {\n        this.isEditing ? this.editData.push(item) : this.source.push(item);\n        this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n        this.refresh();\n    }\n/**\n * Adds a new item to the data provider at the specified index.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} item\n * @param {?} index\n * @return {?}\n */\naddItemAt(item: T, index: number): void {\n        this.isEditing ? this.editData.splice(index, 0, item) : this.source.splice(index, 0, item);\n        this.onDataChange(new CollectionEvent(CollectionEvent.ADD, [item]));\n        this.refresh();\n    }\n/**\n *  Appends multiple items to the end of the DataProvider and dispatches a CollectionEvent.ADD event.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} items\n * @return {?}\n */\naddItems(items: Array<T>): void {\n        this.isEditing ? this.editData.push(...items) : this.source.push(...items);\n        this.onDataChange(new CollectionEvent(CollectionEvent.ADD, items));\n        this.refresh();\n    }\n/**\n * Adds several items to the data provider at the specified index and dispatches a CollectionEvent.ADD event.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} items\n * @param {?} index\n * @return {?}\n */\naddItemsAt(items: Array<T>, index: number): void {\n        this.isEditing ? this.editData.splice(index, 0, ...items) : this.source.splice(index, 0, ...items);\n    }\n/**\n * Creates a copy of the current ArrayCollection any.\n * \n * \n * \\@memberOf ArrayCollection\n * @return {?}\n */\nclone(): ArrayCollection<T> {\n        return new ArrayCollection(this.isEditing ? this.copy(this.editData) : this.copy(this.source));\n    }\n/**\n * Creates a copy of the current ArrayCollection any.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} array\n * @return {?}\n */\ncopy(array: any[]): any[] {\n        return Helpers.deepClone(array);\n    }\n/**\n * Concatenates the specified items to the end of the current data provider.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} items\n * @return {?}\n */\nconcat(items: Array<T>): void {\n        this.addItems(items);\n    }\n/**\n * Returns the item at the specified index.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} index\n * @return {?}\n */\ngetItemAt(index: number): any {\n        return this.isEditing ? this.editData[index] : this.source[index];\n    }\n/**\n *  Returns the index of the specified item.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} item\n * @return {?}\n */\ngetItemIndex(item: T): number {\n        return this.isEditing ? this.editData.indexOf(item) : this.source.indexOf(item);\n    }\n/**\n * Invalidates all the data items that the DataProvider contains and dispatches a CollectionEvent.INVALIDATE_ALL event.\n * \n * \\@memberOf ArrayCollection\n * @return {?}\n */\ninvalidate(): void {\n        this.onDataChange(new CollectionEvent(CollectionEvent.INVALIDATE_ALL));\n    }\n/**\n * Appends the specified data into the data that the data provider contains and removes any duplicate items.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} newData\n * @return {?}\n */\nmerge(newData: Array<T>): void {\n        for (let /** @type {?} */ obj of newData) {\n            let /** @type {?} */ existing = ~this.getItemIndex(obj);\n            if (existing) {\n                this.replaceItem(obj, existing);\n            } else {\n                this.addItem(obj);\n            }\n        }\n    }\n/**\n * Removes all items from the data provider and dispatches a CollectionEvent.REMOVE_ALL event.\n * \n * \\@memberOf ArrayCollection\n * @return {?}\n */\nremoveAll(): void {\n        this.source = [];\n        this.editData = [];\n        this.filterData = [];\n        this.onDataChange(new CollectionEvent(CollectionEvent.REMOVE_ALL, []));\n        this.refresh();\n    }\n/**\n * Removes the specified item from the data provider and dispatches a CollectionEvent.REMOVE event.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} item\n * @return {?}\n */\nremoveItem(item: T): boolean {\n        let /** @type {?} */ index = this.getItemIndex(item);\n        return this.removeItemAt(index);\n    }\n/**\n * Removes the item at the specified index and dispatches a CollectionEvent.REMOVE event.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} index\n * @return {?}\n */\nremoveItemAt(index: number): boolean {\n        let /** @type {?} */ success = !!(this.source.splice(index, 1));\n        this.refresh();\n        return success;\n    }\n/**\n * Replaces an existing item with a new item and dispatches a CollectionEvent.REPLACE event.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} newItem\n * @param {?} oldItem\n * @return {?}\n */\nreplaceItem(newItem: any, oldItem: any): any {\n        let /** @type {?} */ index = this.getItemIndex(oldItem);\n        if (index >= 0) {\n            this.replaceItemAt(newItem, index);\n        }\n    }\n/**\n * Replaces the item at the specified index and dispatches a CollectionEvent.REPLACE event.\n * \n * \n * \\@memberOf ArrayCollection\n * @param {?} newItem\n * @param {?} index\n * @return {?}\n */\nreplaceItemAt(newItem: any, index: number): any {\n        this.filterData.splice(index, 1, newItem);\n    }\n/**\n * Sorts the items that the data provider contains and dispatches a CollectionEvent.SORT event.\n * \n * \\@memberOf ArrayCollection\n * @return {?} null\n * \n */\nget sort(): Array<any> {\n        return this._sort;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset sort(value: Array<any>) {\n        this._sort = value;\n        this.refresh();\n    }\n/**\n * Sorts the items that the data provider contains by the specified field and dispatches a CollectionEvent.SORT event.\n * \n * \\@memberOf ArrayCollection\n * @param {?} fieldName\n * @param {?=} reverse\n * @return {?} null\n * \n */\nsortOn(fieldName: any, reverse = false): Array<T> {\n        this.filterData = this.filterData.sort(Helpers.sortByField(fieldName, reverse));\n        this.onDataChange(new CollectionEvent(CollectionEvent.SORT));\n        return this.filterData;\n    }\n/**\n * @return {?}\n */\nget filter(): any {\n        return this._filter;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset filter(value: any) {\n        this._filter = value;\n        this.refresh();\n    }\n/**\n * @param {?} fieldName\n * @param {?=} value\n * @return {?}\n */\nfilterOn(fieldName: any, value: any = null): Array<T> {\n        this.filterData = this.filterData.filter(Helpers.filterByField(fieldName, value));\n        return this.filterData;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonDataChange(event: CollectionEvent): void {\n        this.dataChange.emit(event);\n    }\n/**\n * @return {?}\n */\nrefresh(): void {\n        this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n        for (let /** @type {?} */ item of this._sort.reverse()) {\n            this.sortOn(item.field, item.reverse);\n        }\n        for (let /** @type {?} */ key in this._filter) {\n            if (key) {\n                this.filterOn(key, this._filter[key]);\n            }\n        }\n        this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n    }\n/**\n * Creates an Array any representation of the data that the data provider contains.\n * \n * \n * \\@memberOf ArrayCollection\n * @return {?}\n */\ntoArray(): Array<T> {\n        return this.isEditing ? this.editData : this.source;\n    }\n/**\n * @return {?}\n */\ntoJSON() {\n        return this.isEditing ? this.editData : this.source;\n    }\n}\n\nfunction ArrayCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayCollection.prototype.dataChange;\n/** @type {?} */\nArrayCollection.prototype.source;\n/** @type {?} */\nArrayCollection.prototype.editData;\n/** @type {?} */\nArrayCollection.prototype.isEditing;\n/** @type {?} */\nArrayCollection.prototype.filterData;\n/** @type {?} */\nArrayCollection.prototype._filter;\n/** @type {?} */\nArrayCollection.prototype._sort;\n}\n\n","import { EventEmitter } from '@angular/core';\n\nimport { ArrayCollection } from './ArrayCollection';\nimport { PagedCollection } from './PagedCollection';\nimport { CollectionEvent } from './CollectionEvent';\nexport class PagedArrayCollection<T> extends ArrayCollection<T> implements PagedCollection<T> {\n    _page: number = 1;\n    _numberOfPages: number = 1;\n    _pageSize: number = 10;\n/**\n * @param {?=} source\n */\nconstructor(source: Array<T> = []) {\n        super(source);\n    }\n/**\n * @return {?}\n */\nget numberOfPages(): number {\n        let /** @type {?} */ result: number = this.source.length / this.pageSize;\n        result = Math.ceil(result);\n        return result;\n    }\n/**\n * @return {?}\n */\nget page(): number {\n        return this._page;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset page(value: number) {\n        this._page = value;\n        this.refresh();\n    }\n/**\n * @return {?}\n */\nget pageSize(): number {\n        return this._pageSize;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset pageSize(value: number) {\n        this._pageSize = value;\n        this.refresh();\n    }\n/**\n * @return {?}\n */\nnext(): number {\n        if (this.page === this.numberOfPages) { return this.page; }\n        this.page++;\n        return this.page;\n    }\n/**\n * @return {?}\n */\nprev(): number {\n        if (this._page === 1) { return this.page; }\n        this.page--;\n        return this.page;\n    }\n/**\n * @return {?}\n */\nfirst(): number {\n        if (this.page === 1) { return this.page; }\n        this.page = 1;\n        return this.page;\n    }\n/**\n * @return {?}\n */\nlast(): number {\n        if (this.page === this.numberOfPages) { return this.page; }\n        this.page = this.numberOfPages;\n        return this.page;\n    }\n/**\n * @return {?}\n */\nrefresh(): void {\n        this.filterData = this.isEditing ? this.editData.slice() : this.source.slice();\n        for (let /** @type {?} */ item of this._sort.reverse()) {\n            this.sortOn(item.field, item.reverse);\n        }\n        for (let /** @type {?} */ key in this._filter) {\n            if (key) {\n                this.filterOn(key, this._filter[key]);\n            }\n        }\n        if (this.page >= 0) {\n            let /** @type {?} */ start = (this.page - 1) * this.pageSize;\n            let /** @type {?} */ end = start + this.pageSize;\n            let /** @type {?} */ result = this.filterData.slice(start, end);\n            this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, result));\n        } else {\n            this.onDataChange(new CollectionEvent(CollectionEvent.CHANGE, this.filterData));\n        }\n    }\n}\n\nfunction PagedArrayCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nPagedArrayCollection.prototype._page;\n/** @type {?} */\nPagedArrayCollection.prototype._numberOfPages;\n/** @type {?} */\nPagedArrayCollection.prototype._pageSize;\n}\n\n","// NG2\n\nimport { Component, EventEmitter, Input, Output, DoCheck, ElementRef, QueryList, ViewChildren } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n// Vendor\n\nimport * as dateFns from 'date-fns';\n// APP\n\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { Helpers } from '../../utils/Helpers';\nimport { FormUtils } from '../../utils/form-utils/FormUtils';\nimport { ReadOnlyControl, ControlFactory } from './../form/FormControls';\nimport { CollectionEvent } from '../../services/data-provider/CollectionEvent';\nimport { PagedArrayCollection } from '../../services/data-provider/PagedArrayCollection';\nimport { notify } from '../../utils/notifier/notifier.util';\n\nexport interface NovoTableConfig {\n  // Paging config\n  paging?: {\n    current: number; // current page\n    itemsPerPage: number; // items per page\n    onPageChange: Function; // function to handle page changing\n    rowOptions?: { value: number; label: string }[]; // page options\n    disablePageSelection?: boolean; // disables the pages from being selected\n  };\n  // Footer config (total footer)\n  footers?: Array<{\n    columns: Array<string>; // string array of columns to total\n    method: string; // method to use for the footer, SUM | AVG, defaults to SUM\n    labelColumn: string; // column to use as the \"total\" label\n    label: string; // label to use in the \"total\" label\n  }>;\n  // TODO: When these types are enforced as `boolean | Function`, there's a lint error. That's a bug.\n  filtering?: boolean | any; // Turn on filtering for the table, boolean or function for filtering callback\n  sorting?: boolean | any; // Turn on sorting for the table, boolean or function for sorting callback\n  ordering?: boolean | Function; // Turn on ordering for the table, boolean or function for ordering callback\n  resizing?: boolean | Function; // Turn on resizing for the table, boolean or function for resizing callback\n  rowSelectionStyle?: string; // Row selection style, checkbox or row\n  rowSelect?: boolean; // Turn on row selection\n  hasDetails?: boolean; // Turn on details row for the table\n  detailsRenderer?: any; // Renderer/component for the details row\n  expandAll?: boolean; // should All Rows be expanded by default\n  selectAllEnabled?: boolean; // Allows the table, while in selection mode to have a select all at the top\n}\nexport type NovoTableMode = number;\nexport let NovoTableMode: any = {};\nNovoTableMode.VIEW = 1;\nNovoTableMode.EDIT = 2;\nNovoTableMode[NovoTableMode.VIEW] = \"VIEW\";\nNovoTableMode[NovoTableMode.EDIT] = \"EDIT\";\n\nexport class NovoTableElement implements DoCheck {\n  \n  filterInputs: QueryList<ElementRef>;\n\n  \n  config: NovoTableConfig = {};\n  \n  columns: Array<any>;\n  \n  theme: string;\n  \n  skipSortAndFilterClear: boolean = false;\n  \n  mode: NovoTableMode = NovoTableMode.VIEW;\n  \n  editable: boolean = false;\n  \n  rowIdentifier: string = 'id';\n  \n  name: string = 'table';\n\n  \n  onRowClick: EventEmitter<any> = new EventEmitter();\n  \n  onRowSelect: EventEmitter<any> = new EventEmitter();\n  \n  onTableChange: EventEmitter<any> = new EventEmitter();\n\n  _dataProvider: PagedArrayCollection<any>;\n  _rows: Array<any> = [];\n  selected: Array<any> = [];\n  activeId: number = 0;\n  master: boolean = false;\n  expandAll: boolean = false;\n  indeterminate: boolean = false;\n  lastPage: number = 0;\n  selectedPageCount: number = 0;\n  showSelectAllMessage: boolean = false;\n  currentSortColumn: any;\n  pagedData: Array<any> = [];\n  pageSelected: any;\n  // Map to keep track of what dropdowns are toggled\n  // Used to properly *ngIf the <list> so that the keepFilterFocused Directive\n  // will properly fire the ngAfterViewInit event\n  toggledDropdownMap: any = {};\npublic NovoTableMode = NovoTableMode;\npublic tableForm: FormGroup = new FormGroup({});\npublic toast: { theme: string; icon: string; message: string };\npublic footers: any[] = [];\npublic grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast: boolean = false;\npublic loading: boolean = false;\n/**\n * @param {?} rows\n * @return {?}\n */\nset rows(rows: Array<any>) {\n    this.dataProvider = rows;\n    if (rows && rows.length > 0) {\n      this.setupColumnDefaults();\n    }\n    // this is a temporary/hacky fix until async dataloading is handled within the table\n    if (!this.skipSortAndFilterClear) {\n      this.clearAllSortAndFilters();\n    }\n  }\n/**\n * @return {?}\n */\nget rows() {\n    return this._rows;\n  }\n/**\n * @param {?} dp\n * @return {?}\n */\nset dataProvider(dp: any) {\n    this._dataProvider = Array.isArray(dp) ? new PagedArrayCollection<any>(dp) : dp;\n    this._dataProvider.dataChange.debounceTime(100).subscribe((event: CollectionEvent) => {\n      switch (event.type) {\n        case CollectionEvent.CHANGE:\n          this._rows = event.data;\n          // Setup form\n          this.tableForm = this.builder.group({\n            rows: this.builder.array([]),\n          });\n          // Remove all selection on sort change if selection is on\n          if (this.config.rowSelectionStyle === 'checkbox') {\n            this.pagedData = event.data;\n            this.pageSelected = this.pagedData.filter((r) => r._selected);\n            this.rowSelectHandler();\n          }\n          // Find that columns we might need to sum up via the footer\n          let /** @type {?} */ columnsToSum = [];\n          let /** @type {?} */ columnSums = {};\n          if (this.config.footers) {\n            this.config.footers.forEach((config) => {\n              columnsToSum.push(...config.columns);\n            });\n            // Only have unique columns, filter out duplicates\n            columnsToSum = columnsToSum.filter((item, index, array) => array.indexOf(item) === index);\n          }\n          // Make a form for each row\n          let /** @type {?} */ tableFormRows = /** @type {?} */(( <FormArray>this.tableForm.controls['rows']));\n          this._rows.forEach((row, index) => {\n            let /** @type {?} */ rowControls = [];\n            row.controls = {};\n            row._editing = {};\n            row._expanded = this.config.expandAll;\n            row.rowId = this._rows.length;\n            this.columns.forEach((column) => {\n              // Use the control passed or use a ReadOnlyControl so that the form has the values\n              let /** @type {?} */ control = column.editorConfig\n                ? ControlFactory.create(column.editorType, column.editorConfig)\n                : new ReadOnlyControl({ key: column.name });\n              row.controls[column.name] = control;\n              rowControls.push(control);\n            });\n            this.formUtils.setInitialValues(rowControls, row, false);\n            tableFormRows.push(this.formUtils.toFormGroup(rowControls));\n            // Setup the total footer if configured\n            // Array of keys to total\n            if (columnsToSum.length !== 0) {\n              columnsToSum.forEach((column) => {\n                if (Helpers.isBlank(columnSums[column])) {\n                  columnSums[column] = 0;\n                }\n                columnSums[column] += row[column];\n              });\n            }\n          });\n          if (this.mode === NovoTableMode.EDIT) {\n            this.setTableEdit();\n          }\n          // Setup the footers (if any)\n          if (this.config.footers) {\n            this.footers = [];\n            this.config.footers.forEach((footerConfig, footerConfigIndex) => {\n              let /** @type {?} */ footer = {};\n              footer[footerConfig.labelColumn] = footerConfig.label;\n              footerConfig.columns.forEach((column) => {\n                if (footerConfig.method === 'AVG' && this._rows.length !== 0) {\n                  footer[column] = columnSums[column] / this._rows.length;\n                } else {\n                  footer[column] = columnSums[column];\n                }\n              });\n              this.footers.push(footer);\n            });\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    if (this.config.paging) {\n      this._dataProvider.page = this.config.paging.current;\n      this._dataProvider.pageSize = this.config.paging.itemsPerPage;\n    } else {\n      // Paging turned off, return basically all of the data\n      this._dataProvider.page = 1;\n      this._dataProvider.pageSize = 500;\n    }\n    if (dp && dp.length > 0) {\n      this.setupColumnDefaults();\n    }\n    this._dataProvider.refresh();\n  }\n/**\n * @return {?}\n */\nget dataProvider() {\n    return this._dataProvider;\n  }\n/**\n * @return {?}\n */\nget editing() {\n    return this.mode === NovoTableMode.EDIT;\n  }\n/**\n * @return {?}\n */\nget formValue() {\n    return this.tableForm.value;\n  }\n/**\n * @param {?} labels\n * @param {?} formUtils\n * @param {?} builder\n */\nconstructor(public labels: NovoLabelService,\nprivate formUtils: FormUtils,\nprivate builder: FormBuilder) {\n    notify('[Deprecated]: The table is deprecated. Please migrate to novo-data-tables!');\n  }\n/**\n * @param {?} event\n * @param {?} column\n * @return {?}\n */\nonDropdownToggled(event, column): void {\n    this.toggledDropdownMap[column] = event;\n  }\n/**\n * @return {?}\n */\nfocusInput(): void {\n    if (this.filterInputs && this.filterInputs.length) {\n      this.filterInputs.forEach((filterInput) => {\n        if (filterInput.nativeElement) {\n          setTimeout(() => filterInput.nativeElement.focus(), 0);\n        }\n      });\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonPageChange(event) {\n    //this.dataProvider.page = event.page;\n    //this.dataProvider.pageSize = event.itemsPerPage;\n  }\n/**\n * @param {?} option\n * @return {?}\n */\ngetOptionDataAutomationId(option) {\n    if (!Helpers.isBlank(option.value)) {\n      return option.value;\n    }\n    return option;\n  }\n/**\n * \\@name setupColumnDefaults\n * @return {?}\n */\nsetupColumnDefaults() {\n    // Check columns for cell option types\n    this.columns.forEach((column) => {\n      if (column && column.type) {\n        switch (column.type) {\n          case 'date':\n            // Set options based on dates if there are none\n            column.options = column.options || this.getDefaultOptions(column);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n  }\n/**\n * \\@name ngDoCheck\n * @return {?}\n */\nngDoCheck() {\n    if (this.config.paging && this.config.paging.current !== this.lastPage) {\n      this.rowSelectHandler();\n      this.showSelectAllMessage = false;\n    }\n    this.lastPage = this.config.paging ? this.config.paging.current : 1;\n  }\n/**\n * \\@name getPageStart\n * @return {?}\n */\ngetPageStart() {\n    return this.config.paging ? (this.dataProvider.page - 1) * this.dataProvider.pageSize : 0;\n  }\n/**\n * \\@name getPageEnd\n * @return {?}\n */\ngetPageEnd() {\n    return this.config.paging && this.dataProvider.pageSize > -1 ? this.getPageStart() + this.dataProvider.pageSize : this.rows.length;\n  }\n/**\n * \\@name onFilterClick\n * @param {?} column\n * @param {?} filter\n * @return {?}\n */\nonFilterClick(column, filter) {\n    if (filter.range && !column.calendarShow) {\n      column.calenderShow = true;\n      return;\n    }\n    if (Array.isArray(column.filter) && column.multiple) {\n      if (~column.filter.indexOf(filter)) {\n        // Remove filter\n        column.filter.splice(column.filter.indexOf(filter), 1);\n        if (filter.range) {\n          column.calenderShow = false;\n        }\n\n        if (column.filter.length === 0) {\n          column.filter = null;\n        }\n      } else {\n        // Add filter\n        column.filter.push(filter);\n      }\n    } else if (column.multiple) {\n      column.filter = new Array();\n      column.filter.push(Helpers.isBlank(filter.value) ? filter : filter.value);\n    } else {\n      column.filter = Helpers.isBlank(filter.value) ? filter : filter.value;\n    }\n    this.onFilterChange();\n  }\n/**\n * \\@name onFilterClear\n * @param {?} column\n * @return {?}\n */\nonFilterClear(column: any): void {\n    setTimeout(() => {\n      column.filter = null;\n      column.freetextFilter = null;\n      this.onFilterChange();\n      if (column.originalOptions) {\n        column.options = column.originalOptions;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nclearAllSortAndFilters() {\n    if (this.config.filtering) {\n      this.columns.forEach((column) => {\n        column.filter = null;\n        column.sort = null;\n      });\n    }\n  }\n/**\n * \\@name onFilterChange\n * \n * \\@description This method updates the row data to reflect the active filters.\n * @return {?}\n */\nonFilterChange() {\n    if (this.config.filtering) {\n      // Array of filters\n      const /** @type {?} */ filters = this.columns.filter((col) => !Helpers.isEmpty(col.filter));\n      if (filters.length) {\n        let /** @type {?} */ query = {};\n        for (const /** @type {?} */ column of filters) {\n          if (Helpers.isFunction(column.match)) {\n            query[column.name] = (value, record) => {\n              return column.match(record, column.filter);\n            };\n          } else if (column.preFilter && Helpers.isFunction(column.preFilter)) {\n            query = Object.assign({}, query, column.preFilter(this.escapeCharacters(column.filter)));\n          } else if (Array.isArray(column.filter)) {\n            // The filters are an array (multi-select), check value\n            let /** @type {?} */ options = column.filter;\n            // We have an array of {value: '', labels: ''}\n            if (options[0].value || options[0].label) {\n              options = column.filter.map((opt) => opt.value);\n            }\n            query[column.name] = { any: options };\n          } else if (column.type && column.type === 'date') {\n            if (column.filter.startDate && column.filter.endDate) {\n              query[column.name] = {\n                min: dateFns.startOfDay(column.filter.startDate),\n                max: dateFns.startOfDay(dateFns.addDays(dateFns.startOfDay(column.filter.endDate), 1)),\n              };\n            } else {\n              query[column.name] = {\n                min: column.filter.min ? dateFns.addDays(dateFns.startOfToday(), column.filter.min) : dateFns.startOfToday(),\n                max: column.filter.max ? dateFns.addDays(dateFns.startOfTomorrow(), column.filter.max) : dateFns.startOfTomorrow(),\n              };\n            }\n          } else {\n            query[column.name] = column.filter;\n          }\n        }\n        if (Helpers.isFunction(this.config.filtering)) {\n          this.config.filtering(query);\n        } else {\n          this._dataProvider.filter = query;\n        }\n      } else {\n        this._dataProvider.filter = {};\n      }\n      // Trickle down to keep sort\n      // this.onSortChange(this.currentSortColumn);\n      this.fireTableChangeEvent();\n\n      // If paging, reset page\n      if (this.config.paging) {\n        this.config.paging.current = 1;\n      }\n      // Remove all selection on sort change if selection is on\n      if (this.config.rowSelectionStyle === 'checkbox') {\n        this.selectAll(false);\n      }\n    }\n  }\n/**\n * @param {?} filter\n * @return {?}\n */\nescapeCharacters(filter) {\n    if (typeof filter === 'string') {\n      return filter.replace(/'/g, \"''\");\n    }\n    return filter;\n  }\n/**\n * \\@name isFilterActive\n * \\@description\n * @param {?} column\n * @param {?} filter \n * \n * @return {?}\n */\nisFilterActive(column, filter) {\n    //TODO: This needs to be refactored\n    let /** @type {?} */ isActive = false;\n    if (column && !Helpers.isBlank(column.filter) && !Helpers.isBlank(filter)) {\n      if (Array.isArray(column.filter)) {\n        if (typeof filter !== 'string') {\n          isActive = column.filter.some((item) => {\n            return item.label === filter.label;\n          });\n        } else {\n          isActive = column.filter.includes(filter);\n        }\n      } else {\n        if (typeof column.filter === typeof filter) {\n          isActive = column.filter === filter;\n        } else {\n          isActive = column.filter === filter.value;\n        }\n      }\n    }\n    return isActive;\n  }\n/**\n * \\@name onSortChange\n * @param {?} column\n * @return {?}\n */\nonSortChange(column) {\n    this.currentSortColumn = column;\n    let /** @type {?} */ sortedColumns: any = this.columns.filter((thisColumn) => {\n      return thisColumn.sort && thisColumn !== this.currentSortColumn;\n    });\n    for (let /** @type {?} */ sortedColumn of sortedColumns) {\n      sortedColumn.sort = null;\n    }\n\n    if (column) {\n      if (Helpers.isFunction(this.config.sorting)) {\n        this.config.sorting();\n      } else if (Helpers.isFunction(column.preSort)) {\n        this._dataProvider.sort = [].concat(column.preSort(column));\n      } else {\n        this._dataProvider.sort = [{ field: column.compare || column.name, reverse: column.sort === 'desc' }];\n      }\n    }\n\n    // Fire table change event\n    // this.fireTableChangeEvent();\n\n    // If paging, reset page\n    if (this.config.paging) {\n      this.config.paging.current = 1;\n    }\n\n    // Remove all selection on sort change if selection is on\n    if (this.config.rowSelectionStyle === 'checkbox') {\n      this.selectAll(false);\n    }\n  }\n/**\n * \\@name fireTableChangeEvent\n * @return {?}\n */\nfireTableChangeEvent() {\n    // Construct a table change object\n    const /** @type {?} */ onTableChange: any = {};\n    const /** @type {?} */ filters = this.columns.filter((col) => col.filter && col.filter.length);\n    onTableChange.filter = filters.length ? filters : false;\n    onTableChange.sort = this.currentSortColumn ? this.currentSortColumn : false;\n    onTableChange.rows = this.rows;\n\n    // Emit event\n    this.onTableChange.emit(onTableChange);\n  }\n/**\n * \\@name findColumnIndex\n * @param {?} value\n * @return {?}\n */\nfindColumnIndex(value) {\n    for (let /** @type {?} */ i = 0; i < this.columns.length; i += 1) {\n      if (this.columns[i].name === value) {\n        return i;\n      }\n    }\n    return null;\n  }\n/**\n * \\@name onOrderChange\n * @param {?} event\n * @return {?}\n */\nonOrderChange(event) {\n    const /** @type {?} */ oldIndex = this.findColumnIndex(event.first.name);\n    const /** @type {?} */ newIndex = this.findColumnIndex(event.second.name);\n    this.columns.splice(newIndex, 0, this.columns.splice(oldIndex, 1)[0]);\n    this.onSortChange(this.currentSortColumn);\n  }\n/**\n * \\@name selectPage\n * @param {?} expanded\n * @return {?}\n */\nexpandAllOnPage(expanded) {\n    this.config.expandAll = !expanded;\n    for (let /** @type {?} */ row of this.dataProvider.list) {\n      row._expanded = this.config.expandAll;\n    }\n  }\n/**\n * \\@name selectPage\n * @return {?}\n */\nselectPage() {\n    if (!this.master) {\n      this.selectAll(false);\n      // Only show the select all message when there is only one new page selected at a time\n      this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n      this.showSelectAllMessage = false;\n    } else {\n      this.indeterminate = false;\n      //this.pagedData = this.rows.slice(this.getPageStart(), this.getPageEnd());\n      for (let /** @type {?} */ row of this.pagedData) {\n        row._selected = this.master;\n      }\n      this.selected = this.dataProvider.list.filter((r) => r._selected);\n      this.pageSelected = this.pagedData.filter((r) => r._selected);\n      this.emitSelected(this.selected);\n      // Only show the select all message when there is only one new page selected at a time\n      this.selectedPageCount++;\n      this.showSelectAllMessage = this.selectedPageCount === 1 && this.selected.length !== this.dataProvider.total;\n    }\n  }\n/**\n * \\@name selectAll\n * @param {?} value\n * @return {?}\n */\nselectAll(value) {\n    this.master = value;\n    this.indeterminate = false;\n    for (let /** @type {?} */ row of this.dataProvider.list) {\n      row._selected = value;\n    }\n    this.selected = value ? this.dataProvider.list : [];\n    this.showSelectAllMessage = false;\n    this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n    this.rowSelectHandler();\n  }\n/**\n * \\@name rowSelectHandler\n * @return {?}\n */\nrowSelectHandler() {\n    // this.pagedData = this.rows.slice(this.getPageStart(), this.getPageEnd());\n    this.pageSelected = this.pagedData.filter((r) => r._selected);\n    this.selected = this.dataProvider.list.filter((r) => r._selected);\n    if (this.pageSelected.length === 0) {\n      this.master = false;\n      this.indeterminate = false;\n    } else if (this.pageSelected.length === this.pagedData.length) {\n      this.master = true;\n      this.indeterminate = false;\n    } else {\n      this.master = false;\n      this.indeterminate = true;\n\n      // Breaking the selected page count\n      this.showSelectAllMessage = false;\n      this.selectedPageCount = this.selectedPageCount > 0 ? this.selectedPageCount - 1 : 0;\n    }\n    this.emitSelected(this.selected);\n  }\n/**\n * \\@name emitSelected\n * @param {?} selected\n * @return {?}\n */\nemitSelected(selected) {\n    this.onRowSelect.emit({ length: selected.length, selected: selected });\n  }\n/**\n * \\@name rowClickHandler\n * @param {?} row\n * @return {?}\n */\nrowClickHandler(row) {\n    if (this.config.rowSelect) {\n      this.activeId = row.id || 0;\n      this.onRowClick.emit(row);\n    }\n  }\n/**\n * \\@name setDateOptions\n * @param {?} column\n * @return {?}\n */\ngetDefaultOptions(column) {\n    // TODO - needs to come from label service - https://github.com/bullhorn/novo-elements/issues/116\n    let /** @type {?} */ opts: any[] = [\n      { label: this.labels.past1Day, min: -1, max: 0 },\n      { label: this.labels.past7Days, min: -7, max: 0 },\n      { label: this.labels.past30Days, min: -30, max: 0 },\n      { label: this.labels.past90Days, min: -90, max: 0 },\n      { label: this.labels.past1Year, min: -366, max: 0 },\n      { label: this.labels.next1Day, min: 0, max: 1 },\n      { label: this.labels.next7Days, min: 0, max: 7 },\n      { label: this.labels.next30Days, min: 0, max: 30 },\n      { label: this.labels.next90Days, min: 0, max: 90 },\n      { label: this.labels.next1Year, min: 0, max: 366 },\n    ];\n\n    if (column && column.range) {\n      opts.push({\n        label: this.labels.customDateRange,\n        range: true,\n      });\n    }\n    return opts;\n  }\n/**\n * @param {?} column\n * @param {?} event\n * @return {?}\n */\nonCalenderSelect(column, event): void {\n    setTimeout(() => {\n      if (event.startDate && event.endDate) {\n        this.onFilterChange();\n      }\n    }, 10);\n  }\n/**\n * @param {?} config\n * @return {?}\n */\nonFilterKeywords(config) {\n    if (config && config.filtering && config.filtering.freetextFilter) {\n      let /** @type {?} */ filterKeywords = config.filtering.freetextFilter.toLowerCase();\n      if (!config.filtering.originalOptions) {\n        config.filtering.originalOptions = config.filtering.options;\n      }\n      let /** @type {?} */ newOptions = config.filtering.originalOptions.filter((option) => {\n        let /** @type {?} */ value = option && option.label ? option.label : option;\n        value = value.toLowerCase() ? value.toLowerCase() : value;\n        if (value === filterKeywords) {\n          return true;\n        } else if (~value.indexOf(filterKeywords) || ~value.indexOf(filterKeywords)) {\n          return true;\n        }\n        return false;\n      });\n      config.filtering.options = newOptions;\n      config.filtering.filter = config.filtering.freetextFilter;\n    } else {\n      config.filtering.options = config.filtering.originalOptions;\n    }\n    this.onFilterChange();\n  }\n/**\n * \\@name setTableEdit\n * \\@description Sets the Table into EDIT mode, based on the row/column passed you can enter in a few states\n * (1) setTableEdit() - don't pass any to put the FULL table into edit mode\n * (2) setTableEdit(1) - pass only row to put that FULL row of the table into edit mode\n * (3) setTableEdit(1, 1) - pass row and column to put that column of the row of the table into edit mode\n * \\@memberOf NovoTableElement\n * @param {?=} rowNumber\n * @param {?=} columnNumber\n * @return {?}\n */\nsetTableEdit(rowNumber?: number, columnNumber?: number): void {\n    this.mode = NovoTableMode.EDIT;\n    this._dataProvider.edit();\n    this._rows.forEach((row, rowIndex) => {\n      row._editing = row._editing || {};\n      this.columns.forEach((column, columnIndex) => {\n        if (column.viewOnly) {\n          row._editing[column.name] = false;\n        } else if (Helpers.isEmpty(rowNumber) && Helpers.isEmpty(columnNumber)) {\n          row._editing[column.name] = true;\n        } else if (!Helpers.isEmpty(rowNumber) && rowIndex === Number(rowNumber) && Helpers.isEmpty(columnNumber)) {\n          row._editing[column.name] = true;\n        } else if (\n          !Helpers.isEmpty(rowNumber) &&\n          !Helpers.isEmpty(columnNumber) &&\n          rowIndex === Number(rowNumber) &&\n          columnIndex === Number(columnNumber)\n        ) {\n          row._editing[column.name] = true;\n        } else {\n          row._editing[column.name] = false;\n        }\n      });\n    });\n  }\n/**\n * \\@name leaveEditMode\n * \\@description Leaves edit mode for the Table and puts everything back to VIEW only\n * \\@memberOf NovoTableElement\n * @param {?} cancel\n * @return {?}\n */\nprivate leaveEditMode(cancel: boolean): void {\n    this.mode = NovoTableMode.VIEW;\n    this._rows.forEach((row) => {\n      row._editing = row._editing || {};\n      this.columns.forEach((column) => {\n        row._editing[column.name] = false;\n      });\n    });\n    if (cancel) {\n      this._dataProvider.undo();\n    } else {\n      this._dataProvider.commit();\n    }\n    this.hideToastMessage();\n  }\n/**\n * \\@name addEditableRow\n * \\@description Adds a new row into the table to be edited, can be called from a local reference of the table in your template\n * \\@memberOf NovoTableElement\n * @param {?=} defaultValue\n * @return {?}\n */\naddEditableRow(defaultValue: any = {}): void {\n    let /** @type {?} */ tableFormRows = /** @type {?} */(( <FormArray>this.tableForm.controls['rows']));\n    let /** @type {?} */ row: any = {};\n    let /** @type {?} */ rowControls = [];\n    row.controls = {};\n    row._editing = {};\n    row.rowId = this._rows.length + 1;\n    this.columns.forEach((column) => {\n      // Use the control passed or use a ReadOnlyControl so that the form has the values\n      let /** @type {?} */ control = column.editorConfig\n        ? ControlFactory.create(column.editorType, column.editorConfig)\n        : new ReadOnlyControl({ key: column.name });\n      control.value = null; // remove copied column value\n      row.controls[column.name] = control;\n      row._editing[column.name] = !column.viewOnly;\n      rowControls.push(control);\n    });\n    this.formUtils.setInitialValues(rowControls, defaultValue, false);\n    tableFormRows.push(this.formUtils.toFormGroup(rowControls));\n    this._rows.push(row);\n  }\n/**\n * \\@name validateAndGetUpdatedData\n * \\@description Validates the Form inside of the Table, if there are errors it will display/return the errors for each row.\n * If there are no errors, then it will return ONLY the changed data for each row, the data returned will be in the form:\n * { id: ID_OF_RECORD, key: value } -- data that was updated\n * { id: undefined, key: value } -- data that was added\n * \\@memberOf NovoTableElement\n * @return {?}\n */\nvalidateAndGetUpdatedData(): { changed?: any[]; errors?: { errors: any; row: any; index: number }[] } {\n    if (this.tableForm && this.tableForm.controls && this.tableForm.controls['rows']) {\n      let /** @type {?} */ changedRows = [];\n      let /** @type {?} */ errors = [];\n      // Go over the FormArray's controls\n      ( /** @type {?} */((this.tableForm.controls['rows'] as FormArray))).controls.forEach((formGroup: FormGroup, index: number) => {\n        let /** @type {?} */ changedRow = null;\n        let /** @type {?} */ error = null;\n        // Go over the form group controls\n        Object.keys(formGroup.controls).forEach((key: string) => {\n          let /** @type {?} */ control = formGroup.controls[key];\n          // Handle value changing\n          if (control && control.dirty && !control.errors) {\n            if (!changedRow) {\n              // Append the ID, so we have some key to save against\n              changedRow = {};\n              if (this._rows[index].id) {\n                changedRow.id = this._rows[index].id;\n              }\n            }\n            // If dirty, grab value off the form\n            changedRow[key] = this.tableForm.value['rows'][index][key];\n            // Set value back to row (should be already done via the server call, but do it anyway)\n            this._rows[index][key] = changedRow[key];\n          } else if (control && control.errors) {\n            // Handle errors\n            if (!error) {\n              error = {};\n            }\n            error[key] = control.errors;\n            control.markAsDirty();\n            control.markAsTouched();\n          }\n        });\n        if (changedRow) {\n          changedRows.push(changedRow);\n        }\n        if (error) {\n          errors.push({ errors: error, row: this._rows[index], index: index });\n        }\n      });\n      let /** @type {?} */ ret = {};\n      // Return errors if any, otherwise return the changed rows\n      if (errors.length === 0) {\n        return { changed: changedRows };\n      }\n      return { errors: errors };\n    }\n  }\n/**\n * \\@name cancelEditing\n * \\@description Refresh the data provider and leave edit mode\n * \\@memberOf NovoTableElement\n * @return {?}\n */\ncancelEditing(): void {\n    this.leaveEditMode(true);\n  }\n/**\n * \\@name saveChanges\n * \\@description Refresh the data provider and leave edit mode\n * \\@memberOf NovoTableElement\n * @return {?}\n */\nsaveChanges(): void {\n    this.leaveEditMode(false);\n  }\n/**\n * \\@name displayToastMessage\n * \\@description Displays a toast message inside of the table\n * \\@memberOf NovoTableElement\n * @param {?} toast\n * @param {?=} hideDelay\n * @return {?}\n */\ndisplayToastMessage(toast: { icon: string; theme: string; message: string }, hideDelay?: number): void {\n    this.loading = false;\n    this.toast = toast;\n    if (hideDelay) {\n      setTimeout(() => this.hideToastMessage(), hideDelay);\n    }\n  }\n/**\n * \\@name hideToastMessage\n * \\@description Force hide the toast message\n * \\@memberOf NovoTableElement\n * @return {?}\n */\nhideToastMessage(): void {\n    this.toast = null;\n    // Hack to make the table display properly after hiding the toast\n    this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = true;\n    setTimeout(() => {\n      this.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast = false;\n    });\n  }\n/**\n * \\@name toggleLoading\n * \\@description display the loading overlay on the table\n * \\@memberOf NovoTableElement\n * @param {?} show\n * @return {?}\n */\ntoggleLoading(show: boolean): void {\n    this.loading = show;\n  }\n/**\n * \\@name isColumnHidden\n * \\@description hide a column in edit or view mode\n * \\@memberOf NovoTableElement\n * @param {?} column\n * @return {?}\n */\nisColumnHidden(column: any): boolean {\n    return this.editing ? !!column.hideColumnOnEdit : !!column.hideColumnOnView;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-table',\n  host: {\n    '[attr.theme]': 'theme',\n    '[class.editing]': 'mode === NovoTableMode.EDIT',\n    '[class.novo-table-loading]': 'loading',\n  },\n  // directives: [],\n  template: `\n        <header *ngIf=\"columns.length\">\n            <ng-content select=\"novo-table-header\"></ng-content>\n            <div class=\"header-actions\">\n                <novo-pagination *ngIf=\"config.paging && !(dataProvider.isEmpty() && !dataProvider.isFiltered())\"\n                                 [rowOptions]=\"config.paging.rowOptions\"\n                                 [disablePageSelection]=\"config.paging.disablePageSelection\"\n                                 [(page)]=\"dataProvider.page\"\n                                 [(itemsPerPage)]=\"dataProvider.pageSize\"\n                                 [totalItems]=\"dataProvider.total\"\n                                 (onPageChange)=\"onPageChange($event)\">\n                </novo-pagination>\n                <ng-content select=\"novo-table-actions\"></ng-content>\n            </div>\n        </header>\n        <div class=\"novo-table-loading-overlay\" *ngIf=\"loading || dataProvider.isLoading()\">\n            <novo-loading></novo-loading>\n        </div>\n        <novo-toast *ngIf=\"toast\" [theme]=\"toast?.theme\" [icon]=\"toast?.icon\" [message]=\"toast?.message\"></novo-toast>\n        <div class=\"table-container\" *ngIf=\"!grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast\">\n            <novo-form hideHeader=\"true\" [form]=\"tableForm\">\n                <table class=\"table table-striped dataTable\" [class.table-details]=\"config.hasDetails\" role=\"grid\">\n                <!-- skipSortAndFilterClear is a hack right now, will be removed once Canvas is refactored -->\n                <thead *ngIf=\"columns.length && (!dataProvider.isEmpty() || dataProvider.isFiltered() || skipSortAndFilterClear || editing)\">\n                    <tr role=\"row\">\n                        <!-- DETAILS -->\n                        <th class=\"row-actions\" *ngIf=\"config.hasDetails\">\n                            <button theme=\"icon\" icon=\"next\" (click)=\"expandAllOnPage(config.expandAll)\" *ngIf=\"!config.expandAll\" data-automation-id=\"expand-all\"></button>\n                            <button theme=\"icon\" icon=\"sort-desc\" (click)=\"expandAllOnPage(config.expandAll)\" *ngIf=\"config.expandAll\" data-automation-id=\"collapse-all\"></button>\n                        </th>\n                        <!-- CHECKBOX -->\n                        <th class=\"row-actions checkbox mass-action\" *ngIf=\"config.rowSelectionStyle === 'checkbox'\">\n                            <novo-checkbox [(ngModel)]=\"master\" [indeterminate]=\"pageSelected.length > 0 && pageSelected.length < pagedData.length\" (ngModelChange)=\"selectPage($event)\" data-automation-id=\"select-all-checkbox\" [tooltip]=\"master ? labels.deselectAll : labels.selectAllOnPage\" tooltipPosition=\"right\"></novo-checkbox>\n                        </th>\n                        <!-- TABLE HEADERS -->\n                        <th *ngFor=\"let column of columns\" [ngClass]=\"{ 'mass-action': config?.rowSelectionStyle === 'checkbox', 'actions': column?.actions?.items?.length > 0, 'preview': column?.name === 'preview' }\" [novoThOrderable]=\"column\" (onOrderChange)=\"onOrderChange($event)\" [hidden]=\"isColumnHidden(column)\">\n                            <div class=\"th-group\" [attr.data-automation-id]=\"column.id || column.name\" *ngIf=\"!column.hideHeader\">\n                                <!-- LABEL & SORT ARROWS -->\n                                <div class=\"th-title\" [ngClass]=\"(config.sorting !== false && column.sorting !== false) ? 'sortable' : ''\" [novoThSortable]=\"config\" [column]=\"column\" (onSortChange)=\"onSortChange($event)\">\n                                    <label>{{ column.title || column.label }}</label>\n                                    <div class=\"table-sort-icons\" tooltipPosition=\"bottom\" [tooltip]=\"labels.sort\" [ngClass]=\"column.sort || ''\" *ngIf=\"config.sorting !== false && column.sorting !== false\">\n                                        <i class=\"bhi-arrow-up\"></i>\n                                        <i class=\"bhi-arrow-down\"></i>\n                                    </div>\n                                </div>\n                                <!-- FILTER DROP-DOWN -->\n                                <novo-dropdown side=\"right\" *ngIf=\"config.filtering !== false && column.filtering !== false\" class=\"column-filters\" (toggled)=\"onDropdownToggled($event, column.name)\" parentScrollSelector=\".table-container\" containerClass=\"table-dropdown\">\n                                    <button type=\"button\" theme=\"icon\" icon=\"filter\" tooltipPosition=\"bottom\" [tooltip]=\"labels.filters\" [class.filtered]=\"column.filter || column.filter===false\" (click)=\"focusInput()\"></button>\n                                    <!-- FILTER OPTIONS LIST -->\n                                    <list *ngIf=\"(column?.options?.length || column?.originalOptions?.length) && column?.type !== 'date' && toggledDropdownMap[column.name]\">\n                                        <item class=\"filter-search\">\n                                            <div class=\"header\">\n                                                <span>{{ labels.filters }}</span>\n                                                <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter || column.filter===false\">{{ labels.clear }}</button>\n                                            </div>\n                                            <input type=\"text\" *ngIf=\"!!column.allowCustomTextOption\" [attr.id]=\"column.name + '-input'\" [novoTableFilter]=\"column\" (onFilterChange)=\"onFilterKeywords($event)\" [(ngModel)]=\"column.freetextFilter\" keepFilterFocused #filterInput/>\n                                        </item>\n                                        <item [ngClass]=\"{ active: isFilterActive(column, option) }\" *ngFor=\"let option of column.options\" (click)=\"onFilterClick(column, option)\" [attr.data-automation-id]=\"getOptionDataAutomationId(option)\">\n                                            <span>{{ option?.label || option }}</span> <i class=\"bhi-check\" *ngIf=\"isFilterActive(column, option)\"></i>\n                                        </item>\n                                    </list>\n                                    <!-- FILTER SEARCH INPUT -->\n                                    <list *ngIf=\"!(column?.options?.length || column?.originalOptions?.length) && toggledDropdownMap[column.name]\">\n                                        <item class=\"filter-search\">\n                                            <div class=\"header\">\n                                                <span>{{ labels.filters }}</span>\n                                                <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter\">{{ labels.clear }}</button>\n                                            </div>\n                                            <input type=\"text\" [attr.id]=\"column.name + '-input'\" [novoTableFilter]=\"column\" (onFilterChange)=\"onFilterChange($event)\" [(ngModel)]=\"column.filter\" keepFilterFocused #filterInput/>\n                                        </item>\n                                    </list>\n                                    <!-- FILTER DATE OPTIONS -->\n                                    <list *ngIf=\"column?.options?.length && column?.type === 'date' && toggledDropdownMap[column.name]\">\n                                        <item class=\"filter-search\" *ngIf=\"!column.calenderShow\">\n                                            <div class=\"header\">\n                                                <span>{{ labels.filters }}</span>\n                                                <button theme=\"dialogue\" color=\"negative\" icon=\"times\" (click)=\"onFilterClear(column)\" *ngIf=\"column.filter\">{{ labels.clear }}</button>\n                                            </div>\n                                        </item>\n                                        <item [ngClass]=\"{ active: isFilterActive(column, option) }\" *ngFor=\"let option of column.options\" (click)=\"onFilterClick(column, option)\" [keepOpen]=\"option.range\" [hidden]=\"column.calenderShow\" [attr.data-automation-id]=\"(option?.label || option)\">\n                                            {{ option?.label || option }} <i class=\"bhi-check\" *ngIf=\"isFilterActive(column, option)\"></i>\n                                        </item>\n                                        <div class=\"calendar-container\" [hidden]=\"!column.calenderShow\">\n                                            <div (click)=\"column.calenderShow=false\"><i class=\"bhi-previous\"></i>{{ labels.backToPresetFilters }}</div>\n                                            <novo-date-picker #rangePicker (onSelect)=\"onCalenderSelect(column, $event)\" [(ngModel)]=\"column.filter\" range=\"true\"></novo-date-picker>\n                                        </div>\n                                    </list>\n                                </novo-dropdown>\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n                <!-- TABLE DATA -->\n                <tbody *ngIf=\"!dataProvider.isEmpty() || editing\">\n                    <tr class=\"table-selection-row\" *ngIf=\"config.rowSelectionStyle === 'checkbox' && showSelectAllMessage && config.selectAllEnabled\" data-automation-id=\"table-selection-row\">\n                        <td colspan=\"100%\">\n                            {{labels.selectedRecords(selected.length)}} <a (click)=\"selectAll(true)\" data-automation-id=\"all-matching-records\">{{labels.totalRecords(dataProvider.total)}}</a>\n                        </td>\n                    </tr>\n                    <ng-template ngFor let-row=\"$implicit\" let-i=\"index\" [ngForOf]=\"rows\">\n                        <tr class=\"table-row\" [ngClass]=\"row.customClass || ''\" [id]=\"name + '-' + row[rowIdentifier]\" [attr.data-automation-id]=\"row.id\" (click)=\"rowClickHandler(row)\" [class.active]=\"row.id === activeId\">\n                            <td class=\"row-actions\" *ngIf=\"config.hasDetails\">\n                                <button theme=\"icon\" icon=\"next\" (click)=\"row._expanded=!row._expanded\" *ngIf=\"!row._expanded\"></button>\n                                <button theme=\"icon\" icon=\"sort-desc\" (click)=\"row._expanded=!row._expanded\" *ngIf=\"row._expanded\"></button>\n                            </td>\n                            <td class=\"row-actions checkbox\" *ngIf=\"config.rowSelectionStyle === 'checkbox'\">\n                                <novo-checkbox [(ngModel)]=\"row._selected\" (ngModelChange)=\"rowSelectHandler(row)\" data-automation-id=\"select-row-checkbox\"></novo-checkbox>\n                            </td>\n                            <td *ngFor=\"let column of columns\" [attr.data-automation-id]=\"column.id || column.name\" [class.novo-form-row]=\"editable\" [hidden]=\"isColumnHidden(column)\">\n                                <novo-table-cell *ngIf=\"row._editing && !row._editing[column.name]\" [hasEditor]=\"editable\" [column]=\"column\" [row]=\"row\" [form]=\"tableForm.controls.rows.controls[i]\"></novo-table-cell>\n                                <novo-control *ngIf=\"row._editing && row._editing[column.name]\" condensed=\"true\" [form]=\"tableForm.controls.rows.controls[i]\" [control]=\"row.controls[column.name]\"></novo-control>\n                            </td>\n                        </tr>\n                        <tr class=\"details-row\" *ngIf=\"config.hasDetails\" [hidden]=\"!row._expanded\" [attr.data-automation-id]=\"'details-row-'+row.id\">\n                            <td class=\"row-actions\"></td>\n                            <td [attr.colspan]=\"config.rowSelectionStyle === 'checkbox' ? (columns.length + 1) : columns.length\">\n                                <novo-row-details [data]=\"row\" [renderer]=\"config.detailsRenderer\"></novo-row-details>\n                            </td>\n                        </tr>\n                    </ng-template>\n                </tbody>\n                <!-- NO TABLE DATA PLACEHOLDER -->\n                <tbody class=\"table-message\" *ngIf=\"dataProvider.isEmpty() && !dataProvider.isFiltered() && !editing\" data-automation-id=\"empty-table\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <div #emptymessage><ng-content select=\"[table-empty-message]\"></ng-content></div>\n                            <div class=\"table-empty-message\" *ngIf=\"emptymessage.childNodes.length == 0\">\n                                <h4><i class=\"bhi-search-question\"></i> {{ labels.emptyTableMessage }}</h4>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n                <!-- NO MATCHING RECORDS -->\n                <tbody class=\"table-message\" *ngIf=\"dataProvider.isEmpty() && dataProvider.isFiltered()\" data-automation-id=\"empty-table\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <div #nomatchmessage><ng-content select=\"[table-no-matching-records-message]\"></ng-content></div>\n                            <div class=\"no-matching-records\" *ngIf=\"nomatchmessage.childNodes.length == 0\">\n                                <h4><i class=\"bhi-search-question\"></i> {{ labels.noMatchingRecordsMessage }}</h4>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n                <!-- TABLE DATA ERROR PLACEHOLDER -->\n                <tbody class=\"table-message\" *ngIf=\"dataProvider.hasErrors()\" data-automation-id=\"table-errors\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <div #errormessage><ng-content select=\"[table-error-message]\"></ng-content></div>\n                            <div class=\"table-error-message\" *ngIf=\"errormessage.childNodes.length == 0\">\n                                <h4><i class=\"bhi-caution\"></i> {{ labels.erroredTableMessage }}</h4>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n                <tfoot *ngIf=\"!config.footers\" [ngClass]=\"dataProvider.length % 2 == 0 ? 'odd' : 'even'\">\n                    <tr>\n                        <td colspan=\"100%\">\n                            <ng-content select=\"novo-table-footer\"></ng-content>\n                        </td>\n                    </tr>\n                </tfoot>\n                <tfoot *ngFor=\"let footer of footers;let i = index;\" class=\"novo-table-total-footer\">\n                    <tr>\n                        <td *ngFor=\"let column of columns\" [attr.data-automation-id]=\"(column.id || column.name) + '-total-' + i\">{{ footer[column.name] }}</td>\n                    </tr>\n                </tfoot>\n            </table>\n        </novo-form>\n    </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NovoLabelService, },\n{type: FormUtils, },\n{type: FormBuilder, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filterInputs': [{ type: ViewChildren, args: ['filterInput', { read: ElementRef }, ] },],\n'config': [{ type: Input },],\n'columns': [{ type: Input },],\n'theme': [{ type: Input },],\n'skipSortAndFilterClear': [{ type: Input },],\n'mode': [{ type: Input },],\n'editable': [{ type: Input },],\n'rowIdentifier': [{ type: Input },],\n'name': [{ type: Input },],\n'onRowClick': [{ type: Output },],\n'onRowSelect': [{ type: Output },],\n'onTableChange': [{ type: Output },],\n'rows': [{ type: Input },],\n'dataProvider': [{ type: Input },],\n};\n}\n\nfunction NovoTableElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableElement.ctorParameters;\n/** @type {?} */\nNovoTableElement.propDecorators;\n/** @type {?} */\nNovoTableElement.prototype.filterInputs;\n/** @type {?} */\nNovoTableElement.prototype.config;\n/** @type {?} */\nNovoTableElement.prototype.columns;\n/** @type {?} */\nNovoTableElement.prototype.theme;\n/** @type {?} */\nNovoTableElement.prototype.skipSortAndFilterClear;\n/** @type {?} */\nNovoTableElement.prototype.mode;\n/** @type {?} */\nNovoTableElement.prototype.editable;\n/** @type {?} */\nNovoTableElement.prototype.rowIdentifier;\n/** @type {?} */\nNovoTableElement.prototype.name;\n/** @type {?} */\nNovoTableElement.prototype.onRowClick;\n/** @type {?} */\nNovoTableElement.prototype.onRowSelect;\n/** @type {?} */\nNovoTableElement.prototype.onTableChange;\n/** @type {?} */\nNovoTableElement.prototype._dataProvider;\n/** @type {?} */\nNovoTableElement.prototype._rows;\n/** @type {?} */\nNovoTableElement.prototype.selected;\n/** @type {?} */\nNovoTableElement.prototype.activeId;\n/** @type {?} */\nNovoTableElement.prototype.master;\n/** @type {?} */\nNovoTableElement.prototype.expandAll;\n/** @type {?} */\nNovoTableElement.prototype.indeterminate;\n/** @type {?} */\nNovoTableElement.prototype.lastPage;\n/** @type {?} */\nNovoTableElement.prototype.selectedPageCount;\n/** @type {?} */\nNovoTableElement.prototype.showSelectAllMessage;\n/** @type {?} */\nNovoTableElement.prototype.currentSortColumn;\n/** @type {?} */\nNovoTableElement.prototype.pagedData;\n/** @type {?} */\nNovoTableElement.prototype.pageSelected;\n/** @type {?} */\nNovoTableElement.prototype.toggledDropdownMap;\n/** @type {?} */\nNovoTableElement.prototype.NovoTableMode;\n/** @type {?} */\nNovoTableElement.prototype.tableForm;\n/** @type {?} */\nNovoTableElement.prototype.toast;\n/** @type {?} */\nNovoTableElement.prototype.footers;\n/** @type {?} */\nNovoTableElement.prototype.grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast;\n/** @type {?} */\nNovoTableElement.prototype.loading;\n/** @type {?} */\nNovoTableElement.prototype.labels;\n/** @type {?} */\nNovoTableElement.prototype.formUtils;\n/** @type {?} */\nNovoTableElement.prototype.builder;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// Vendor\n\nimport { TextMaskModule } from 'angular2-text-mask';\n// APP\n\nimport { NovoButtonModule } from '../button/Button.module';\nimport { NovoToastModule } from '../toast/Toast.module';\nimport { NovoTooltipModule } from '../tooltip/Tooltip.module';\nimport { NovoDropdownModule } from '../dropdown/Dropdown.module';\nimport { NovoFormModule } from '../form/Form.module';\nimport { NovoLoadingModule } from '../loading/Loading.module';\nimport { NovoDatePickerModule } from '../date-picker/DatePicker.module';\nimport { NovoTableExtrasModule } from './extras/TableExtras.module';\nimport { NovoTableElement } from './Table';\nimport { NovoFormExtrasModule } from '../form/extras/FormExtras.module';\nexport class NovoTableModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        NovoFormModule,\n        NovoTableExtrasModule,\n        NovoToastModule,\n        NovoButtonModule,\n        NovoTooltipModule,\n        NovoDropdownModule,\n        NovoLoadingModule,\n        NovoDatePickerModule,\n        NovoFormExtrasModule,\n        TextMaskModule\n        ],\n    declarations: [NovoTableElement],\n    exports: [NovoTableElement]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, OnInit, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\n//APP\n\nimport { Helpers } from '../../utils/Helpers';\nexport type NOVO_VALUE_TYPE = number;\nexport let NOVO_VALUE_TYPE: any = {};\nNOVO_VALUE_TYPE.DEFAULT = 0;\nNOVO_VALUE_TYPE.ENTITY_LIST = 1;\nNOVO_VALUE_TYPE.LINK = 2;\nNOVO_VALUE_TYPE.INTERNAL_LINK = 3;\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.DEFAULT] = \"DEFAULT\";\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.ENTITY_LIST] = \"ENTITY_LIST\";\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.LINK] = \"LINK\";\nNOVO_VALUE_TYPE[NOVO_VALUE_TYPE.INTERNAL_LINK] = \"INTERNAL_LINK\";\n\nexport type NOVO_VALUE_THEME = number;\nexport let NOVO_VALUE_THEME: any = {};\nNOVO_VALUE_THEME.DEFAULT = 0;\nNOVO_VALUE_THEME.MOBILE = 1;\nNOVO_VALUE_THEME[NOVO_VALUE_THEME.DEFAULT] = \"DEFAULT\";\nNOVO_VALUE_THEME[NOVO_VALUE_THEME.MOBILE] = \"MOBILE\";\n\nexport class NovoValueElement implements OnInit, OnChanges {\n   data: any; // TODO use interface\n   meta: any; // TODO use interface\n   theme: NOVO_VALUE_THEME = NOVO_VALUE_THEME.DEFAULT;\n\n  type: NOVO_VALUE_TYPE;\n  NOVO_VALUE_TYPE = NOVO_VALUE_TYPE;\n  NOVO_VALUE_THEME = NOVO_VALUE_THEME;\n  url: string;\n  customClass: string = '';\n/**\n * @return {?}\n */\nngOnInit() {\n    if (Helpers.isEmpty(this.meta)) {\n      this.meta = {\n        label: '',\n      };\n    }\n  }\n/**\n * @return {?}\n */\npublic get isMobile(): boolean {\n    return this.theme === NOVO_VALUE_THEME.MOBILE;\n  }\n/**\n * @param {?} icon\n * @return {?}\n */\niconClass(icon): string {\n    let /** @type {?} */ iconClass = '';\n    if (icon && icon.iconCls) {\n      iconClass = `bhi-${icon.iconCls} actions`;\n      if (icon.onIconClick) {\n        iconClass = `${iconClass} clickable`;\n      }\n      return iconClass;\n    }\n    return iconClass;\n  }\n/**\n * @return {?}\n */\npublic get isDefault(): boolean {\n    return true;\n  }\n/**\n * @return {?}\n */\npublic get showLabel(): boolean {\n    return this.type === NOVO_VALUE_TYPE.INTERNAL_LINK || this.type === NOVO_VALUE_TYPE.LINK || this.type === NOVO_VALUE_TYPE.ENTITY_LIST;\n  }\n/**\n * @return {?}\n */\npublic get showIcon(): boolean {\n    return this.meta && this.meta.icons && this.meta.icons.length && !Helpers.isEmpty(this.data);\n  }\n/**\n * @param {?} icon\n * @return {?}\n */\nonValueClick(icon): void {\n    if (icon.onIconClick && typeof icon.onIconClick === 'function') {\n      icon.onIconClick(this.data, this.meta);\n    }\n  }\n/**\n * @return {?}\n */\nopenLink(): void {\n    if (this.meta && this.meta.openLink && typeof this.meta.openLink === 'function') {\n      this.meta.openLink(this.data, this.meta);\n    }\n  }\n/**\n * @param {?=} changes\n * @return {?}\n */\nngOnChanges(changes?: SimpleChanges): any {\n    if (this.meta && this.isLinkField(this.meta, this.data)) {\n      this.type = NOVO_VALUE_TYPE.LINK;\n      // Make sure the value has a protocol, otherwise the URL will be relative\n      let /** @type {?} */ hasProtocol: any = new RegExp('^(http|https)://', 'i');\n      if (!hasProtocol.test(this.data)) {\n        this.url = `http://${this.data}`;\n      } else {\n        this.url = this.data;\n      }\n    } else if (this.isEntityList(this.meta.type)) {\n      this.type = NOVO_VALUE_TYPE.ENTITY_LIST;\n    } else if (this.isHTMLField(this.meta)) {\n      this.customClass = this.meta.customClass ? this.meta.customClass : '';\n      if (this.meta.stripHTML && this.data && this.data.replace) {\n        this.data = this.data.replace(/<(?!style|\\/style).+?>/gi, '');\n      }\n    } else if (this.meta && this.meta.associatedEntity) {\n      switch (this.meta.associatedEntity.entity) {\n        case 'ClientCorporation':\n        case 'ClientContact':\n        case 'Candidate':\n        case 'Opportunity':\n        case 'JobOrder':\n        case 'Placement':\n          this.type = NOVO_VALUE_TYPE.INTERNAL_LINK;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n/**\n * @param {?} field\n * @param {?} data\n * @return {?}\n */\nisLinkField(field: { name?: string; type?: NOVO_VALUE_TYPE }, data: any): boolean {\n    let /** @type {?} */ linkFields: any = ['companyURL', 'clientCorporationCompanyURL'];\n    let /** @type {?} */ regex: any = new RegExp('^(https?://(?:www.|(?!www))[^s.]+.[^s]{2,}|www.[^s]+.[^s]{2,})$', 'gi');\n    let /** @type {?} */ isURL: any = Helpers.isString(data) && regex.exec(data.trim());\n    return linkFields.indexOf(field.name) > -1 || !!isURL || field.type === NOVO_VALUE_TYPE.LINK;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisEntityList(type: string): boolean {\n    return type === 'TO_MANY';\n  }\n/**\n * @param {?} meta\n * @return {?}\n */\nisHTMLField(meta: any): boolean {\n    return meta.dataSpecialization === 'HTML' || meta.inputType === 'TEXTAREA';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'novo-value',\n  template: `\n        <ng-container [ngSwitch]=\"type\">\n            <div class=\"value-outer\" *ngIf=\"showLabel\">\n                <label>{{ meta.label }}</label>\n                <a *ngSwitchCase=\"NOVO_VALUE_TYPE.INTERNAL_LINK\" class=\"value\" (click)=\"openLink()\" [innerHTML]=\"data | render : meta\"></a>\n                <a *ngSwitchCase=\"NOVO_VALUE_TYPE.LINK\" class=\"value\" [href]=\"url\" target=\"_blank\" [innerHTML]=\"data | render : meta\"></a>\n                <novo-entity-list *ngSwitchCase=\"NOVO_VALUE_TYPE.ENTITY_LIST\" [data]='data' [meta]=\"meta\"></novo-entity-list>\n            </div>\n            <div *ngSwitchDefault class=\"value-outer\" [ngClass]=\"customClass\">\n                <label>{{ meta.label }}</label>\n                <div *ngIf=\"isDefault\" class=\"value\" [innerHTML]=\"data | render : meta\"></div>\n            </div>\n            <div class=\"actions\" *ngIf=\"showIcon\">\n                <i *ngFor=\"let icon of meta.icons\" [class]=\"iconClass(icon)\" (click)=\"onValueClick(icon)\"></i>\n            </div>\n        </ng-container>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'meta': [{ type: Input },],\n'theme': [{ type: Input },],\n'isMobile': [{ type: HostBinding, args: ['class.mobile', ] },],\n};\n}\n\nfunction NovoValueElement_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoValueElement.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoValueElement.ctorParameters;\n/** @type {?} */\nNovoValueElement.propDecorators;\n/** @type {?} */\nNovoValueElement.prototype.data;\n/** @type {?} */\nNovoValueElement.prototype.meta;\n/** @type {?} */\nNovoValueElement.prototype.theme;\n/** @type {?} */\nNovoValueElement.prototype.type;\n/** @type {?} */\nNovoValueElement.prototype.NOVO_VALUE_TYPE;\n/** @type {?} */\nNovoValueElement.prototype.NOVO_VALUE_THEME;\n/** @type {?} */\nNovoValueElement.prototype.url;\n/** @type {?} */\nNovoValueElement.prototype.customClass;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Injectable, Pipe, ChangeDetectorRef, OnDestroy, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n// APP\n\nimport { NovoLabelService } from '../../services/novo-label-service';\nimport { findByCountryId } from '../../utils/countries/Countries';\n/**\n * \\@class RenderPipe\n * \\@classdesc \n * Renders data appropriately based on the data type found in Meta\n * All data types defined by bullhorn should be supported:\n * \n * - **String**: trims value and returns\n * - **Integer**: return value\n * - **Double**: return value fixed to 2 decimals\n * - **BigDecimal**: return value fixed to 2 decimals\n * - **Address**: only city and/or state returned\n * - **Address1**: only city and/or state returned\n * - **AddressWithoutCountry**: only city and/or state returned\n * - **Currency**: put a $ in front\n * - **Percentage**: divide by 100 fix to 2 decimals place and return\n * - **Options**: returns the appropriate 'label' for the 'value' from 'options'\n * - **Array**: returns list comma separated\n * - **DateTime**: formats the date\n * - **TimeStamp**: formats the date\n * - **ToOne**: return the entity specific name (ie. name, firstName lastName, title, ...)\n * - **ToMany**: return an array of the entity specific names (ie. name, firstName lastName, title, ...)\n * \n * \\@example \n * ```\n * {{ expression | render:field }}\n * ```\n */\nexport class RenderPipe implements PipeTransform {\n  value: any;\n  lastValue: any;\n  lastArgs: any;\n/**\n * @param {?} changeDetector\n * @param {?} sanitizationService\n * @param {?} labels\n */\nconstructor(private changeDetector: ChangeDetectorRef,\nprivate sanitizationService: DomSanitizer,\nprivate labels: NovoLabelService) {}\n/**\n * @param {?} objectOne\n * @param {?} objectTwo\n * @return {?}\n */\nequals(objectOne: any, objectTwo: any): any {\n    if (objectOne === objectTwo) {\n      return true;\n    }\n    if (objectOne === null || objectTwo === null) {\n      return false;\n    }\n    if (objectOne !== objectOne && objectTwo !== objectTwo) {\n      return true;\n    }\n    let /** @type {?} */ t1: any = typeof objectOne;\n    let /** @type {?} */ t2: any = typeof objectTwo;\n    let /** @type {?} */ length: number;\n    let /** @type {?} */ key: any;\n    let /** @type {?} */ keySet: any;\n    if (t1 === t2 && t1 === 'object') {\n      if (Array.isArray(objectOne)) {\n        if (!Array.isArray(objectTwo)) {\n          return false;\n        }\n        length = objectOne.length;\n        if (length === objectTwo.length) {\n          for (key = 0; key < length; key++) {\n            if (!this.equals(objectOne[key], objectTwo[key])) {\n              return false;\n            }\n          }\n          return true;\n        }\n      } else {\n        if (Array.isArray(objectTwo)) {\n          return false;\n        }\n        keySet = Object.create(null);\n        for (key in objectOne) {\n          if (objectOne[key]) {\n            if (!this.equals(objectOne[key], objectTwo[key])) {\n              return false;\n            }\n            keySet[key] = true;\n          }\n        }\n        for (key in objectTwo) {\n          if (!(key in keySet) && typeof objectTwo[key] !== 'undefined') {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n/**\n * @param {?} item\n * @param {?} entity\n * @return {?}\n */\ngetEntityLabel(item: any, entity: string): string {\n    switch (entity) {\n      case 'CorporateUser':\n      case 'ClientContact':\n      case 'ClientContact1':\n      case 'ClientContact2':\n      case 'ClientContact3':\n      case 'ClientContact4':\n      case 'ClientContact5':\n      case 'Lead':\n      case 'Candidate':\n      case 'Person':\n        return `${item.firstName || ''} ${item.lastName || ''}`.trim();\n      case 'ClientCorporation':\n      case 'ClientCorporation1':\n      case 'ClientCorporation2':\n      case 'ClientCorporation3':\n      case 'ClientCorporation4':\n      case 'ClientCorporation5':\n        return `${item.name || ''}`.trim();\n      case 'JobOrder':\n      case 'JobOrder1':\n      case 'JobOrder2':\n      case 'JobOrder3':\n      case 'JobOrder4':\n      case 'JobOrder5':\n      case 'Opportunity':\n        return `${item.title || ''}`.trim();\n      case 'Placement':\n        let /** @type {?} */ label: string = '';\n        if (item.candidate) {\n          label = `${item.candidate.firstName} ${item.candidate.lastName}`.trim();\n        }\n        if (item.jobOrder) {\n          label = `${label} - ${item.jobOrder.title}`.trim();\n        }\n        return label;\n      default:\n        return '';\n    }\n  }\n/**\n * Define the fields to set or retrieve for the given entity. Getter and Setter methods will automagically\n * be set up on the entity once the fields are defined.\n * \\@name fields\n * \\@memberOf Entity#\n * @param {?} value\n * @param {?} args\n * @return {?} text\n */\nrender(value: any, args: any): any {\n    let /** @type {?} */ type: any = null;\n    let /** @type {?} */ text: any = value;\n    let /** @type {?} */ rezonedTime: any;\n\n    // Handle when we don't have meta, but passing an entity\n    if (value && value._subtype && !args) {\n      return this.getEntityLabel(value, value._subtype);\n    }\n\n    // Stop logic for nulls\n    if (value === undefined || value === null || !args) {\n      return text;\n    }\n\n    if (args.formatter && typeof args.formatter === 'function') {\n      return args.formatter(value, args);\n    }\n    // TODO move this to a service\n    // Determine TYPE because its not just 1 value that determines this.\n    if (args.type === 'TO_MANY') {\n      type = 'ToMany';\n    } else if (args.type === 'TO_ONE') {\n      type = args.associatedEntity.entity;\n    } else if (args.dataSpecialization === 'DATETIME') {\n      type = 'DateTime';\n    } else if (args.dataSpecialization === 'YEAR') {\n      type = 'Year';\n    } else if (args.dataSpecialization === 'DATE' && args.dataType === 'Date') {\n      type = 'Date';\n    } else if (args.dataType === 'Timestamp') {\n      type = 'Timestamp';\n    } else if (['mobile', 'phone', 'phone1', 'phone2', 'phone3', 'workPhone'].indexOf(args.name) > -1) {\n      type = 'Phone';\n    } else if (args.name && args.name.substring(0, 5) === 'email') {\n      type = 'Email';\n    } else if ((args.name && args.name === 'address.countryID') || args.optionsType === 'Country') {\n      type = 'Country';\n    } else if (args.optionsType === 'SkillText') {\n      type = 'SkillText';\n    } else if (args.options || args.inputType === 'SELECT') {\n      type = 'Options';\n    } else if (['MONEY', 'PERCENTAGE', 'HTML', 'SSN'].indexOf(args.dataSpecialization) > -1) {\n      type = this.capitalize(args.dataSpecialization.toLowerCase());\n    } else {\n      type = args.dataType || 'default';\n    }\n\n    // Transform data here\n    switch (type) {\n      case 'Address':\n      case 'Address1':\n      case 'AddressWithoutCountry':\n        let /** @type {?} */ country: any = findByCountryId(Number(value.countryName));\n        text = '';\n        if (value.address1 || value.address2) {\n          text += `${value.address1 || ''} ${value.address2 || ''}<br />\\n`;\n        }\n        text += `${value.city || ''} ${value.state || ''} ${value.zip || ''}${value.city || value.state || value.zip ? '<br />\\n' : ''}`;\n        text += `${country ? country.name : value.countryName || ''}${country || value.countryName ? '<br />\\n' : ''}`;\n        text = this.sanitizationService.bypassSecurityTrustHtml(text.trim());\n        break;\n      case 'DateTime':\n      case 'Timestamp':\n        text = this.labels.formatDateShort(value);\n        break;\n      case 'Date':\n        text = this.labels.formatDate(new Date(value));\n        break;\n      case 'Year':\n        text = new Date(value).getFullYear();\n        break;\n      case 'Phone':\n      case 'Email':\n        text = value;\n        break;\n      case 'Money':\n        text = this.labels.formatCurrency(value);\n        break;\n      case 'Percentage':\n        text = this.labels.formatNumber(parseFloat(value).toString(), { style: 'percent', minimumFractionDigits: 2 });\n        break;\n      case 'Double':\n      case 'BigDecimal':\n        text = this.labels.formatNumber(value, { minimumFractionDigits: this.getNumberDecimalPlaces(value) });\n        break;\n      case 'Integer':\n        text = value;\n        break;\n      case 'BusinessSector':\n      case 'Category':\n      case 'Certification':\n      case 'ClientCorporation':\n      case 'CorporationDepartment':\n      case 'DistributionList':\n      case 'Skill':\n      case 'Tearsheet':\n      case 'Specialty':\n        text = value.label || value.name || '';\n        break;\n      case 'SkillText':\n        text = Array.isArray(value) ? value.join(', ') : value;\n        break;\n      case 'Lead':\n      case 'Candidate':\n      case 'ClientContact':\n      case 'CorporateUser':\n      case 'Person':\n        text = value.label || `${value.firstName || ''} ${value.lastName || ''}`;\n        break;\n      case 'Opportunity':\n      case 'JobOrder':\n        text = value.label || value.title || '';\n        break;\n      case 'Placement':\n        if (value.candidate) {\n          text = `${value.candidate.firstName || ''} ${value.candidate.lastName || ''}`;\n        }\n        if (value.jobOrder) {\n          text = value.candidate ? `${text} - ${value.jobOrder.title || ''}` : `${value.jobOrder.title || ''}`;\n        }\n        break;\n      case 'JobSubmission':\n        text =\n          value.label ||\n          `${value.jobOrder ? `${value.jobOrder.title} - ` : ''} ${value.candidate ? value.candidate.firstName : ''} ${\n            value.candidate ? value.candidate.lastName : ''\n          }`;\n        break;\n      case 'WorkersCompensationRate':\n        text = `${value.compensation ? `${value.compensation.code} - ` : ''} ${value.compensation ? value.compensation.name : ''}`;\n        break;\n      case 'Options':\n        text = this.options(value, args.options);\n        break;\n      case 'ToMany':\n        if (['Candidate', 'CorporateUser', 'Person'].indexOf(args.associatedEntity.entity) > -1) {\n          text = this.concat(value.data, 'firstName', 'lastName');\n          if (value.data.length < value.total) {\n            text = text + ', ' + this.labels.getToManyPlusMore({ quantity: value.total - value.data.length });\n          }\n        } else if (\n          ['Category', 'BusinessSector', 'Skill', 'Specialty', 'ClientCorporation', 'CorporationDepartment'].indexOf(\n            args.associatedEntity.entity,\n          ) > -1\n        ) {\n          text = this.concat(value.data, 'name');\n          if (value.data.length < value.total) {\n            text = text + ', ' + this.labels.getToManyPlusMore({ quantity: value.total - value.data.length });\n          }\n        } else if (args.associatedEntity.entity === 'MailListPushHistoryDetail') {\n          text = this.concat(value.data, 'externalListName');\n        } else {\n          text = `${value.total || ''}`;\n        }\n        break;\n      case 'Country':\n        let /** @type {?} */ countryObj: any = findByCountryId(Number(value));\n        text = countryObj ? countryObj.name : value;\n        break;\n      case 'Html':\n        if (Array.isArray(value)) {\n          value = value.join(' ');\n        }\n        if (typeof text === 'string') {\n          text = this.sanitizationService.bypassSecurityTrustHtml(value.replace(/\\<a/gi, '<a target=\"_blank\"'));\n        }\n        break;\n      case 'CandidateComment':\n        text = value.comments ? `${this.labels.formatDateShort(value.dateLastModified)} (${value.name}) - ${value.comments}` : '';\n        break;\n      default:\n        text = value.trim ? value.trim() : value;\n        break;\n    }\n    return text;\n  }\n/**\n * @param {?} value\n * @param {?} args\n * @return {?}\n */\nupdateValue(value: any, args: any): any {\n    this.value = this.render(value, args);\n    this.changeDetector.markForCheck();\n  }\n/**\n * @param {?=} value\n * @param {?=} args\n * @return {?}\n */\ntransform(value?: any, args?: any): any {\n    if (value === undefined || value === null) {\n      return '';\n    }\n\n    if (this.equals(value, this.lastValue) && this.equals(args, this.lastArgs)) {\n      return this.value;\n    }\n\n    this.lastValue = value;\n    this.lastArgs = args;\n\n    this.updateValue(this.lastValue, this.lastArgs);\n\n    return this.value;\n  }\n/**\n * Simple function concat a list of fields from a list of objects\n * \\@name options\n * @param {?} list\n * @param {...?} fields\n * @return {?}\n */\nconcat(list: any, ...fields: any[]): any {\n    let /** @type {?} */ data: any = [];\n    for (let /** @type {?} */ item of list) {\n      let /** @type {?} */ label: any = [];\n      for (let /** @type {?} */ field of fields) {\n        label.push(`${item[field]}`);\n      }\n      data.push(label.join(' '));\n    }\n    return data.join(', ');\n  }\n/**\n * Simple function to look up the **label** to display from options\n * \\@name options\n * @param {?} value\n * @param {?} list\n * @return {?}\n */\noptions(value: any, list: any): any {\n    try {\n      for (const /** @type {?} */ item of list) {\n        if (item.value === value) {\n          return item.label;\n        }\n      }\n    } catch ( /** @type {?} */e) {\n      // do nothing\n    }\n    return value;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ngetNumberDecimalPlaces(value: any): any {\n    let /** @type {?} */ decimalPlaces: any;\n    if (value) {\n      let /** @type {?} */ numberString: any = parseFloat(value).toString();\n      let /** @type {?} */ decimalPlace: any = (numberString || '').split('.')[1] || '';\n      decimalPlaces = decimalPlace.length;\n    }\n    return decimalPlaces || 1;\n  }\n/**\n * Capitalizes the first letter\n * @param {?} value\n * @return {?}\n */\ncapitalize(value: any): string {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'render',\n  pure: false,\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: DomSanitizer, },\n{type: NovoLabelService, },\n];\n}\n\nfunction RenderPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRenderPipe.ctorParameters;\n/** @type {?} */\nRenderPipe.prototype.value;\n/** @type {?} */\nRenderPipe.prototype.lastValue;\n/** @type {?} */\nRenderPipe.prototype.lastArgs;\n/** @type {?} */\nRenderPipe.prototype.changeDetector;\n/** @type {?} */\nRenderPipe.prototype.sanitizationService;\n/** @type {?} */\nRenderPipe.prototype.labels;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { Component, Input, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Helpers } from '../../utils/Helpers';\nexport class EntityList implements OnInit {\n     data: any;\n     meta: any;\n    baseEntity: string = '';\n    metaDisplay: any;\n    ENTITY_SHORT_NAMES: any = {\n        Lead: 'lead',\n        ClientContact: 'contact',\n        ClientContact1: 'contact',\n        ClientContact2: 'contact',\n        ClientContact3: 'contact',\n        ClientContact4: 'contact',\n        ClientContact5: 'contact',\n        ClientCorporation: 'company',\n        ClientCorporation1: 'company',\n        ClientCorporation2: 'company',\n        ClientCorporation3: 'company',\n        ClientCorporation4: 'company',\n        ClientCorporation5: 'company',\n        Opportunity: 'opportunity',\n        Task: 'task',\n        Note: 'note',\n        CorporateUser: 'user',\n        Candidate: 'candidate',\n        JobOrder: 'job',\n        JobOrder1: 'job',\n        JobOrder2: 'job',\n        JobOrder3: 'job',\n        JobOrder4: 'job',\n        JobOrder5: 'job',\n        Placement: 'placement',\n        JobSubmission: 'submission',\n        CandidateReference: 'references',\n        DistributionList: 'distributionList',\n        Appointment: 'appointment',\n    };\nconstructor() {\n    }\n/**\n * @return {?}\n */\nngOnInit(): any {\n        // use a local copy of the meta to set the type to TO_ONE for proper display\n        // without changing the input object\n        this.metaDisplay = Helpers.deepClone(this.meta);\n        this.metaDisplay.type = 'TO_ONE';\n        this.baseEntity = this.meta.associatedEntity.entity;\n        for (let /** @type {?} */ entity of this.data.data) {\n            entity.isLinkable = this.isLinkable(entity);\n            entity.class = this.getClass(entity);\n        }\n    }\n/**\n * @param {?} entity\n * @return {?}\n */\ngetClass(entity: any): any {\n        return this.ENTITY_SHORT_NAMES[entity.personSubtype];\n    }\n/**\n * @param {?} entity\n * @return {?}\n */\nopenLink(entity: any): void {\n        entity.openLink(entity);\n    }\n/**\n * @param {?} entity\n * @return {?}\n */\nisLinkable(entity: any): boolean {\n        return entity.openLink;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-entity-list',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <div *ngFor=\"let entity of data.data\" class=\"entity\">\n            <a *ngIf=\"entity.isLinkable\" (click)=\"openLink(entity)\">\n                <i class=\"bhi-circle {{ entity.class }}\"></i>{{ entity | render : metaDisplay }}\n            </a>\n            <span *ngIf=\"!entity.isLinkable && entity.personSubtype\">\n                <i class=\"bhi-circle {{ entity.class }}\"></i>{{ entity | render : metaDisplay }}\n            </span>\n            <span *ngIf=\"!entity.isLinkable && !entity.personSubtype\">\n                {{ entity | render : metaDisplay }}\n            </span>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'meta': [{ type: Input },],\n};\n}\n\nfunction EntityList_tsickle_Closure_declarations() {\n/** @type {?} */\nEntityList.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEntityList.ctorParameters;\n/** @type {?} */\nEntityList.propDecorators;\n/** @type {?} */\nEntityList.prototype.data;\n/** @type {?} */\nEntityList.prototype.meta;\n/** @type {?} */\nEntityList.prototype.baseEntity;\n/** @type {?} */\nEntityList.prototype.metaDisplay;\n/** @type {?} */\nEntityList.prototype.ENTITY_SHORT_NAMES;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// NG2\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// APP\n\nimport { NovoValueElement, NOVO_VALUE_THEME, NOVO_VALUE_TYPE } from './Value';\nimport { RenderPipe } from './Render';\nimport { EntityList } from './EntityList';\nexport class NovoValueModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [NovoValueElement, RenderPipe, EntityList],\n    exports: [NovoValueElement, RenderPipe, EntityList]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoValueModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoValueModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoValueModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ElementRef,\n    Input,\n    HostBinding,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n} from '@angular/core';\nexport class NovoIconComponent implements AfterViewInit {\npublic raised: boolean;\npublic size: string = 'medium';\npublic theme: string;\npublic color: string;\npublic role: string = 'img';\npublic ariaLabel: string;\n/**\n * @param {?} value\n * @return {?}\n */\nset alt(value: string) {\n        this.ariaLabel = value;\n    }\n/**\n * @return {?}\n */\nget alt(): string {\n        return this.ariaLabel;\n    }\n/**\n * @param {?} iconName\n * @return {?}\n */\nset name(iconName: string) {\n        this.iconName = `bhi-${iconName}`;\n    }\n/**\n * @return {?}\n */\nget name(): string {\n        return this.iconName;\n    }\npublic iconName: string;\n/**\n * @param {?} element\n * @param {?} cdr\n */\nconstructor(public element: ElementRef,\nprivate cdr: ChangeDetectorRef) { }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        if (this.element.nativeElement.textContent.trim()) {\n            Promise.resolve().then(() => {\n                this.name = this.element.nativeElement.textContent.trim();\n                this.cdr.markForCheck();\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'novo-icon',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <i [class]=\"iconName\"><span><ng-content></ng-content></span></i>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'raised': [{ type: HostBinding, args: ['attr.raised', ] },{ type: Input },],\n'size': [{ type: HostBinding, args: ['attr.size', ] },{ type: Input },],\n'theme': [{ type: HostBinding, args: ['attr.theme', ] },{ type: Input },],\n'color': [{ type: HostBinding, args: ['attr.color', ] },{ type: Input },],\n'role': [{ type: HostBinding, args: ['attr.role', ] },],\n'ariaLabel': [{ type: HostBinding, args: ['attr.aria-label', ] },],\n'alt': [{ type: Input },],\n'name': [{ type: Input },],\n};\n}\n\nfunction NovoIconComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoIconComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoIconComponent.ctorParameters;\n/** @type {?} */\nNovoIconComponent.propDecorators;\n/** @type {?} */\nNovoIconComponent.prototype.raised;\n/** @type {?} */\nNovoIconComponent.prototype.size;\n/** @type {?} */\nNovoIconComponent.prototype.theme;\n/** @type {?} */\nNovoIconComponent.prototype.color;\n/** @type {?} */\nNovoIconComponent.prototype.role;\n/** @type {?} */\nNovoIconComponent.prototype.ariaLabel;\n/** @type {?} */\nNovoIconComponent.prototype.iconName;\n/** @type {?} */\nNovoIconComponent.prototype.element;\n/** @type {?} */\nNovoIconComponent.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { NovoIconComponent } from './Icon';\nexport class NovoIconModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [NovoIconComponent],\n    declarations: [NovoIconComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NovoIconModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNovoIconModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNovoIconModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["nextId","this","id","_multi","Object","defineProperty","CdkAccordion","prototype","multi","coerceBooleanProperty","type","Directive","args","selector","exportAs","Input","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_this","closed","EventEmitter","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","emit","notify","markForCheck","disabled","ngOnDestroy","toggle","close","open","decorators","Optional","ChangeDetectorRef","UniqueSelectionDispatcher","Output","CdkAccordionModule","NgModule","exports","declarations","providers","UNIQUE_SELECTION_DISPATCHER_PROVIDER","NovoAccordion","_super","apply","arguments","_hideToggle","displayMode","__extends","get","set","show","host","class","ctorParameters","propDecorators","hideToggle","AuditSubscriber","destination","durationSelector","call","hasValue","_next","value","throttled","duration","tryCatch_1","tryCatch","errorObject_1","errorObject","error","e","innerSubscription","subscribeToResult_1","subscribeToResult","clearThrottle","add","remove","unsubscribe","next","notifyNext","outerValue","innerValue","outerIndex","innerIndex","notifyComplete","OuterSubscriber_1","OuterSubscriber","Action","scheduler","work","schedule","state","delay","Subscription_1","Subscription","Action_2","AsyncAction","pending","recycleAsyncId","requestAsyncId","root_1","root","setInterval","flush","bind","clearInterval","undefined","execute","Error","_execute","errored","errorValue","_unsubscribe","actions","index","indexOf","splice","Action_1","AsyncAction_2","Scheduler","SchedulerAction","now","Date","Scheduler_2","AsyncScheduler","active","scheduled","action","push","shift","Scheduler_1","AsyncScheduler_2","async_1","AsyncScheduler_1","AsyncAction_1","isNumeric","val","isArray_1","isArray","parseFloat","isNumeric_2","isScheduler","isScheduler_2","isDate$1","isNaN","isDate_2","isDate","TimerObservable","dueTime","period","isNumeric_1","Number","isScheduler_1","async","isDate_1","create","initialDelay","dispatch","subscriber","complete","_subscribe","Observable_1","Observable","BufferSubscriber","closingNotifier","buffer","innerSub","BufferCountSubscriber","bufferSize","length","_complete","Subscriber_1","Subscriber","BufferSkipCountSubscriber","startBufferEvery","buffers","count","i","Context","BufferTimeSubscriber","bufferTimeSpan","bufferCreationInterval","maxBufferSize","contexts","context","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","len","onBufferFull","_error","err","closeContext","prevContext","arg","BufferToggleSubscriber","openings","closingSelector","subscription","closeBuffer","openBuffer","trySubscribe","BufferWhenSubscriber","subscribing","closingSubscription","catchError$1","source","operator","CatchOperator","caught","lift","catchError_2","catchError","subscribe","CatchSubscriber","isStopped","result","err2","_unsubscribeAndRecycle","ScalarObservable","_isScalar","done","ScalarObservable_2","EmptyObservable","EmptyObservable_2","ArrayObservable","array","of","_i","pop","ScalarObservable_1","EmptyObservable_1","ArrayObservable_2","none","CombineLatestSubscriber","project","values","observables","observable","toRespond","unused","oldVal","_tryProject","slice","of_1","ArrayObservable_1","PromiseObservable","promise","then","setTimeout","dispatchNext","dispatchError","PromiseObservable_2","IteratorObservable","iterator","getIterator","hasError","return","IteratorObservable_2","StringIterator","str","idx","iterator_1","charAt","ArrayIterator","arr","toLength","obj","TypeError","maxSafeInteger","Math","pow","o","numberIsFinite","sign","floor","abs","isFinite","valueAsNumber","ArrayLikeObservable","arrayLike","ArrayLikeObservable_2","Notification","kind","observe","observer","do","accept","nextOrObserver","toObservable","throw","empty","createNext","undefinedValueNotification","createError","createComplete","completeNotification","Notification_2","observeOn$1","ObserveOnOperator","observeOn_2","observeOn","ObserveOnSubscriber","ObserveOnOperator_1","notification","scheduleMessage","ObserveOnMessage","Notification_1","ObserveOnSubscriber_1","ObserveOnMessage_1","FromObservable","ish","observable_1","isPromise_1","isPromise","PromiseObservable_1","IteratorObservable_1","isArrayLike_1","isArrayLike","ArrayLikeObservable_1","observeOn_1","FromObservable_2","from_1","FromObservable_1","mergeMap$1","resultSelector","concurrent","POSITIVE_INFINITY","MergeMapOperator","mergeMap_2$1","mergeMap","MergeMapSubscriber","MergeMapOperator_1","hasCompleted","_tryNext","_innerSub","_notifyResultSelector","MergeMapSubscriber_1","identity","x","identity_2","mergeAll$1","mergeMap_1","identity_1","mergeAll_2","mergeAll","concatAll$1","mergeAll_1","concatAll_2","concatAll","concat$2","from","concatAll_1","concat_2$1","concat","CountSubscriber","predicate","_tryPredicate","DebounceSubscriber","durationSubscription","emitValue","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","dispatchNext$1","DefaultIfEmptySubscriber","defaultValue","isEmpty","DelaySubscriber","queue","time","delay_1","max","_schedule","scheduleNotification","message","DelayMessage","DelayWhenSubscriber","delayDurationSelector","completed","delayNotifierSubscriptions","removeSubscription","tryComplete","notifyError","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelayObservable","subscriptionDelay","SubscriptionDelaySubscriber","parent","sourceSubscribed","subscribeToSource","DeMaterializeSubscriber","minimalSetImpl","MinimalSet","_values","has","clear","minimalSetImpl_1","Set$1","Set","DistinctSubscriber","keySelector","flushes","Set_1","_useKeySelector","_finalizeNext","key","DistinctUntilChangedSubscriber","compare","hasKey","y","Boolean","ArgumentOutOfRangeError","name","stack","ArgumentOutOfRangeError_2","ElementAtSubscriber","ArgumentOutOfRangeError_1","EverySubscriber","thisArg","everyValueMatch","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandSubscriber","subscribeToProjection","filter$4","FilterOperator","filter_2","filter","FilterSubscriber","FinallySubscriber","callback","FindValueSubscriber","yieldIndex","ObjectUnsubscribedError","ObjectUnsubscribedError_2","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscriber","SubjectSubscriber_1","Subject","Subject$$1","thrownError","rxSubscriber_1","rxSubscriber","AnonymousSubject","ObjectUnsubscribedError_1","copy","_trySubscribe","EMPTY","SubjectSubscription_1","asObservable","Subject_2","AnonymousSubject_1","MapPolyfill","size","_keys","delete","forEach","cb","MapPolyfill_2","Map$1","Map","MapPolyfill_1","FastMap","hasOwnProperty","FastMap_2","GroupBySubscriber","elementSelector","subjectSelector","groups","attemptedToUnsubscribe","_group","FastMap_1","Map_1","element","group","Subject_1","groupedObservable","GroupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsSubscriber","noop_1","noop","IsEmptySubscriber","LastSubscriber","_tryResultSelector","EmptyError_1","EmptyError","map$2","MapOperator","map_2","map","MapSubscriber","MapOperator_1","MapToSubscriber","MaterializeSubscriber","ScanSubscriber","accumulator","_seed","hasSeed","seed","TakeLastSubscriber","total","ring","Array","MergeMapToSubscriber","MergeScanSubscriber","acc","refCount$1","RefCountOperator","refCount_2","refCount","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","refCount_1","OnErrorResumeNextSubscriber","nextSources","subscribeToNextSource","PairwiseSubscriber","hasPrev","prev","BehaviorSubject","_value","getValue","AsyncSubject","hasNext","QueueAction","QueueAction_2","QueueScheduler","QueueScheduler_2","queue_1","QueueScheduler_1","QueueAction_1","ReplaySubject","ReplaySubject$$1","windowTime","_events","_bufferSize","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","eventsCount","spliceCount","RaceSubscriber","hasFirst","subscriptions","RepeatSubscriber","RepeatWhenSubscriber","notifier","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","RetrySubscriber","RetryWhenSubscriber","errors","SampleSubscriber","SampleTimeSubscriber","dispatchNotification","SequenceEqualSubscriber","compareTo","comparor","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","checkValues","a","b","areEqual","nextB","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipSubscriber","SkipLastSubscriber","_skipCount","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilSubscriber","isInnerStopped","SkipWhileSubscriber","skipping","tryCallPredicate","startWith$2","concat_1","startWith_2","startWith","SwitchMapToSubscriber","inner","tryResultSelector","take$1","TakeOperator","take_2","take","TakeSubscriber","takeUntil$1","TakeUntilOperator","takeUntil_2","takeUntil","TakeUntilSubscriber","TakeWhileSubscriber","nextOrComplete","predicateResult","DoSubscriber","safeSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","defaultThrottleConfig","leading","trailing","throttle","config","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeSubscriber","dispatchNext$2","TimeInterval","interval","TimeIntervalSubscriber","lastTime","span","TimeoutError","TimeoutSubscriber","absoluteTimeout","waitFor","errorInstance","scheduleTimeout","dispatchTimeout","TimeoutWithSubscriber","withObservable","WindowSubscriber","window","openWindow","prevWindow","newWindow","WindowCountSubscriber","windowSize","startWindowEvery","windows","c","window_1","CountedSubject","_numberOfNextedValues","WindowTimeSubscriber","windowTimeSpan","windowCreationInterval","maxWindowSize","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromSubscriber","found","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","isComplete","catchError_1","filter$3","filter_1","map$1","map_1","startWith$1","startWith_1","switchMap$2","switchMap_1","switchMap","take_1","throttle_1","EXPANSION_PANEL_ANIMATION_TIMING","novoExpansionAnimations","indicatorRotate","trigger","style","transform","transition","animate","expansionHeaderHeight","height","params","collapsedHeight","expandedHeight","query","animateChild","optional","bodyExpansion","visibility","NovoExpansionPanelContent","_template","TemplateRef","uniqueId","NovoExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_padding","_inputChanges","_headerId","_getHideToggle","_hasSpacing","_getExpandedState","ngAfterContentInit","_lazyContent","pipe","_portal","TemplatePortal","ngOnChanges","changes","_bodyAnimation","event","classList","cssClass","phaseName","toState","Component","styles","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","animations","[class.novo-expanded]","[class.novo-expansion-panel-spacing]","[class.novo-expansion-panel-padding]","Host","ViewContainerRef","padding","ContentChild","NovoExpansionPanelActionRow","NovoExpansionPanelHeader","panel","_element","_parentChangeSubscription","merge","_toggle","_isExpanded","_getPanelId","_showToggle","_keydown","keyCode","SPACE","ENTER","preventDefault","role","[attr.id]","[attr.tabindex]","[attr.aria-controls]","[attr.aria-expanded]","[attr.aria-disabled]","(click)","(keydown)","[@expansionHeight]","ElementRef","NovoExpansionPanelDescription","NovoExpansionPanelTitle","NovoExpansionModule","imports","CommonModule","PortalModule","NovoStepLabel","CdkStepLabel","NovoStepHeader","_focusMonitor","monitor","nativeElement","_index","coerceNumberProperty","_selected","_active","selected","_optional","stopMonitoring","_stringLabel","label","_templateLabel","_getHostElement","preserveWhitespaces","FocusMonitor","theme","color","icon","iconOverrides","novoStepperAnimations","horizontalStepTransition","verticalStepTransition","NovoStep","stepper","CdkStep","NovoStepper","Inject","forwardRef","stepLabel","_iconOverrides","steps","_steps","toArray","selectedIndex","_destroyed","_stateChanged","getIndicatorType","CdkStepper","_stepHeader","ViewChildren","read","ContentChildren","_icons","NovoIconComponent","NovoHorizontalStepper","aria-orientation","provide","useExisting","NovoVerticalStepper","dir","changeDetectorRef","_orientation","Directionality","NovoStepStatus","step","NovoStepperModule","NovoButtonModule","CdkStepperModule","NovoIconModule","A11yModule","NovoCategoryDropdownElement","labels","_query","_categoryMap","_categories","persistSelection","closeOnSelect","_select","categorySelected","clickHandler","toggleActive","categories","_masterCategoryMap","assign","keys","ngOnInit","querySelector","addEventListener","button","removeEventListener","onKeyDown","KeyCodes","ESC","clearSelection","category","item","select","Helpers","swallowEvent","onCategorySelected","clearQuery","queryCategories","_queryTimeout","clearTimeout","search","toLowerCase","debounce","executeClickCallback","link","OutsideClick","[class.active]","NovoLabelService","footer","NovoCategoryDropdownModule","NovoTabModule","NovoListModule","CHIPS_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","NovoMultiPickerElement","placeholder","changed","focus","blur","items","_items","notShown","onModelChange","onModelTouched","chipsCount","selectedItems","types","selectAllOption","strictRelationship","setupOptions","clearValue","modifyAllOfType","setInitialValue","removeFromDisplay","modifyAffectedParentsOrChildren","options","_options","option","formattedOption","setupOptionsByType","section","formattedSection","data","formatOption","selectAll","createSelectAllOption","originalData","field","format","interpolate","String","checked","isParentOf","isChildOf","model","allParents","reduce","accum","deselectAll","onFocus","clickOption","Event","input","updateDisplayItems","updateAllItemState","triggerValueUpdate","updateParentOrChildren","allOfType","getAllOfType","allOfTypeSelected","allItemsSelected","setIndeterminateState","status","indeterminate","updateDisplayText","selectedOfType","displayType","singular","plural","triggeredByEvent","itemToRemove","handleRemoveItemIfAllSelected","removeItem","removeValue","updatedValues","BACKSPACE","target","stopPropagation","selecting","updateAllParentsOrChildren","updatedObject","updatedItems","allItem","handleOutsideClick","contains","updateChildrenValue","updateParentValue","itemChanged","parentType","allParentType","childType","allChildren","allCheckedChildren","selectedChildrenOfParent","allChildrenOfParent","addIndividualChildren","updateIndeterminateStates","updateAllChildrenValue","updateAllParentValue","potentialChildren","allCheckedOrIndeterminateParents","isParentIndeterminate","isChildIndeterminate","child","children","parentAlreadySelected","p","typeObj","indeterminateIsSet_1","optionsByType_1","allSelected_1","optionsByType","onTouched","writeValue","registerOnChange","fn","registerOnTouched","[class.with-value]","NovoMultiPickerModule","FormsModule","NovoPickerModule","NovoChipsModule","Security","credentials","change","grant","parsed","_d","data_1","permission","replace","_e","_f","revoke","checkRoutes","routes","filtered","routes_1","route","entities","entityType","permissions","Function","every","perm","Injectable","Unless","templateRef","viewContainer","security","isDisplayed","check","display","ps_1","split","trim","createEmbeddedView","bhUnless","UnlessModule","DataTableSource","tableService","ref","currentTotal","current","loading","pristine","totalSet","displayDataChanges","updates","getTableResults","sort","page","pageSize","globalSearch","outsideFilter","isForceRefresh","results","selectedRows","onSelectionChange","dataLoaded","console","disconnect","DataSource","DataTableState","selectionSource","paginationSource","sortFilterSource","resetSource","expandSource","expandedRows","reset","fireUpdate","persistUserFilters","clearSort","clearFilter","onExpandChange","onPaginationChange","isPageSizeChange","onSortFilterChange","StaticDataTableService","currentData","some","includes","isString","filterByField","sortByField","isBlank","NovoDataTable","globalSearchHiddenClassToggle","rowIdentifier","trackByFn","templates","_hideGlobalSearch","preferencesChanged","columnToTemplate","columnsLoaded","selection","scrollLeft","expandable","scrollListenerHandler","scrollListener","paginationSubscription","resetSubscription","detectChanges","_disabledColumns","displayedColumns","service","dataSource","rows","outsideFilterSubscription","refreshSubject","refreshSubscription","_columns","columns","configureColumns","_customFilter","v","_hasExandedRows","_forceShowHeader","totallyEmpty","novoDataTableContainer","defaultTemplates","getType","customTemplates","paginationOptions","pageSizeOptions","onSearchChange","term","trackColumnsBy","isDisabled","row","disabledFunc","isExpanded","expandRow","expandRows","expand","allCurrentRowsExpanded","isSelected","selectRow","selectRows","allCurrentRowsSelected","column","templateName","animState","minHeight","HostBinding","NovoTemplate","ViewChild","searchOptions","defaultSort","dataTableService","customFilter","hasExandedRows","forceShowHeader","hideGlobalSearch","loadingClass","NovoDataTableCell","columnDef","elementRef","renderer","setAttribute","cssClassFriendlyName","addClass","cellClass","width","setStyle","CdkCell","CdkColumnDef","Renderer2","NovoDataTableCheckboxCell","dataTable","selectionSubscription","onClick","NovoDataTableExpandCell","expandSubscription","NovoDataTableHeaderRow","rowClass","CdkHeaderRow","CDK_ROW_TEMPLATE","NovoDataTableRow","CdkRow","dataAutomationId","NovoDataTableSortFilter","NovoDataTableCellHeader","_sort","_cdkColumnDef","filterActive","sortActive","showCustomRange","_rerenderSubscription","labelIcon","sortable","filterable","transforms","isObject","filterConfig","getDefaultDateFilterOptions","toggleCustomRange","dropdown","openPanel","focusInput","filterInput","changeTimeout","direction","getNextSortDirection","filterData","actualFilter","activeDateFilter","customDateRange","startDate","endDate","min","dateFns.startOfDay","date","dateFns.addDays","dateFns.startOfToday","dateFns.endOfToday","past1Day","past7Days","past30Days","past90Days","past1Year","next1Day","next7Days","next30Days","next90Days","next1Year","NovoDropdownElement","NovoDataTableExpandHeaderCell","expandAll","CdkHeaderCell","NovoDataTableCheckboxHeaderCell","NovoDataTableHeaderCell","MAX_PAGES_DISPLAYED","NovoDataTablePagination","_page","_pageSizeOptions","_length","pageChange","longRangeLabel","getRangeText","shortRangeLabel","_pageSize","updateDisplayedPageSizeOptions","totalPages","calculateTotalPages","pages","getPages","_initialized","selectPage","emitPageEvent","nextPage","hasNextPage","previousPage","hasPreviousPage","numberOfPages","ceil","changePageSize","displayedPageSizeOptions","makePage","number","text","isActive","currentPage","startPage","endPage","toString","interpolateCell","col","interpolateWithFallback","DataTableInterpolatePipe","Pipe","pure","DateTableDateRendererPipe","formatDate","DateTableDateTimeRendererPipe","formatDateShort","DateTableTimeRendererPipe","formatTime","DateTableNumberRendererPipe","isPercent","isNumber","formatNumber","DateTableCurrencyRendererPipe","formatCurrency","NovoDataTableExpandDirective","vcRef","render","hasAttribute","$implicit","HostListener","NovoDataTableClearButton","sortClear","filterClear","allClear","clearAll","NovoDataTableModule","NovoDatePickerModule","CdkTableModule","NovoDropdownModule","NovoFormExtrasModule","NovoLoadingModule","NovoTilesModule","NovoSearchBoxModule","NovoCommonModule","NovoSelectModule","NovoTooltipModule","RemoteDataTableService","RemoteActivityTableService","StaticActivityTableService","ret","deepClone","ActivityTableDataSource","catch","NovoActivityTableState","random","onReset","_NovoTable","CdkTable","NovoTable","CDK_TABLE_TEMPLATE","NovoActivityTableActions","NovoActivityTableCustomHeader","NovoActivityTableCustomFilter","NovoActivityTableEmptyMessage","NovoActivityTableNoResultsMessage","NovoActivityTable","_debug","currentValue","activityService","actionColumns","debug","NovoSortFilter","NovoSelection","novoSelectAllToggle","allRows","register","deregister","throttleTimeout","_NovoCellDef","CdkCellDef","_NovoHeaderCellDef","CdkHeaderCellDef","_NovoColumnDef","_NovoHeaderCell","_NovoCell","NovoSimpleCellDef","NovoSimpleHeaderCellDef","NovoSimpleColumnDef","NovoSimpleHeaderCell","NovoSimpleEmptyHeaderCell","NovoSimpleCheckboxHeaderCell","_selection","selectAllSubscription","NovoSimpleCell","customClass","spanElement","NovoSimpleCheckboxCell","NovoSimpleActionCell","disabledCheck","_NovoHeaderRowDef","CdkHeaderRowDef","_NovoCdkRowDef","CdkRowDef","_NovoHeaderRow","_NovoRow","NovoSimpleHeaderRowDef","NovoSimpleRowDef","NovoSimpleHeaderRow","NovoSimpleRow","NovoSimpleFilterFocus","ngAfterViewInit","NovoSimpleCellHeader","_config","dateFns.startOfTomorrow","DEFAULT_PAGE_SIZE","NovoSimpleTablePagination","ActivityTableRenderers","propertyRenderer","prop","dateRenderer","toLocaleDateString","NovoSimpleTableModule","GlobalRef","nativeGlobal","BrowserGlobalRef","LocalStorageService","setItem","localStorage","getItem","GooglePlacesService","_http","platformId","_global","_localStorageService","getPredictions","url","Promise","resolve","getLatLngDetail","lat","lng","getPlaceDetails","placeId","getGeoCurrentLocation","isPlatformBrowser","_window","navigator","geolocation","getCurrentPosition","pos","latlng","coords","latitude","longitude","getGeoLatLngDetail","google","maps","Geocoder","geocode","location","getGeoPlaceDetail","place_id","getGeoPrediction","placesService","places","AutocompleteService","queryInput","promiseArr","countryRestriction","componentRestrictions","country","geoLocation","LatLng","radius","geoTypes","_tempQuery","geoPredictionCall","all","_tempArr","j","getUniqueResults","PlacesService","document","createElement","getDetails","getGeoPaceDetailByReferance","referance","referanceData","_window_1","reference","PlacesServiceStatus","OK","addRecentList","localStorageName","itemSavedLength","getRecentList","description","unshift","JSON","stringify","parse","m","t","getPlacePredictions","HttpClient","PLATFORM_ID","AppBridgeHandler","HTTP","OPEN","OPEN_LIST","CLOSE","REFRESH","PIN","REGISTER","UPDATE","REQUEST_DATA","CALLBACK","HTTP_VERBS","GET","POST","PUT","DELETE","MESSAGE_TYPES","HTTP_GET","HTTP_POST","HTTP_PUT","HTTP_DELETE","CUSTOM_EVENT","AppBridgeService","AppBridge","DevAppBridgeService","http","DevAppBridge","traceName","_registeredFrames","_handlers","_tracing","_eventListeners","postRobot","CONFIG","LOG_LEVEL","_setupHandlers","tracing","handle","handler","_trace","eventType","log","on","windowName","update","success","openList","findIndex","frame","refresh","pin","requestData","httpGET","relativeURL","httpPOST","httpPUT","httpDELETE","listener","send","packet","reject","sendToParent","keywords","criteria","info","realPacket","verb","postData","putData","fireEvent","fireEventToChildren","cookie","getCookie","endpoints","decodeURIComponent","sessions","session","endpoint","baseURL","rest","withCredentials","res","toPromise","post","put","cname","ca","substring","NOVO_ELEMENTS_PROVIDERS","NovoDragulaService","useClass","NovoModalRef","NovoModalService","NovoToastService","ComponentUtils","OptionsService","FieldInteractionApi","DateFormatService","NovoTemplateService","NovoElementProviders","forRoot","ngModule","forChild","PopOverContent","cdr","placement","animation","onCloseFromOutside","top","left","isHidden","hide","popover","getElement","positionElements","popoverDiv","hideFromPopover","hostEl","targetEl","positionStr","appendToBody","targetElPos","positionStrParts","mainSide","effectivePlacement","getEffectivePlacement","orientation","effectiveAlignment","hostElPos","offset","position","targetElWidth","offsetWidth","targetElHeight","offsetHeight","shiftWidth","center","right","shiftHeight","bottom","nativeEl","offsetParentBCR","elBCR","offsetParentEl","parentOffsetEl","clientTop","scrollTop","clientLeft","boundingClientRect","getBoundingClientRect","pageYOffset","documentElement","pageXOffset","getStyle","cssProp","currentStyle","getComputedStyle","isStaticPositioned","offsetParent","desiredPlacement","hostElement","targetElement","hostElBoundingRect","innerHeight","innerWidth","content","title","PopOverDirective","viewContainerRef","resolver","PopoverComponent","popoverOnHover","popoverDismissTimeout","onShown","onHidden","showOrHideOnClick","popoverDisabled","showOnHover","hideOnHover","visible","factory","resolveComponentFactory","createComponent","popoverPlacement","popoverAnimation","popoverTitle","destroy","ComponentFactoryResolver","popoverAlways","NovoPopOverModule","entryComponents","PlacesListComponent","_elmRef","_googlePlacesService","termChange","locationInput","gettingCurrentLocationFlag","dropdownOpen","recentDropdownOpen","queryItems","isSettingsError","settingsErrorMsg","settings","moduleinit","selectedDataIndex","recentSearchData","userSelectedOption","defaultSettings","geoPredictionServerUrl","geoLatLangServiceUrl","geoLocDetailServerUrl","geoCountryRestriction","geoRadius","serverResponseListHierarchy","serverResponseatLangHierarchy","serverResponseDetailHierarchy","resOnSearchButtonClickOnly","useGoogleGeoApi","inputPlaceholderText","inputString","showSearchButton","showRecentSearch","showCurrentLocation","recentStorageName","noOfRecentSearchSave","currentLocIconUrl","searchIconUrl","locationIconUrl","moduleInit","searchinputCallback","searchinputClickCallback","inputVal","getListQuery","userQuerySubmit","activeListNode","selectedListNode","setRecentLocation","getPlaceLocationInfo","closeAutocomplete","selectedOption","currentLocationSelected","getCurrentLocationInfo","setUserSettings","getRecentLocations","processSearchQuery","_tempObj","userSettings","keys_1","_tempParams","updateListItem","extractServerList","arrayList","_tempData","arrayList_1","listData","selectedData","formatted_address","GooglePlacesModule","HttpClientModule","NovoElementsModule","ReactiveFormsModule","NovoPipesModule","NovoCardModule","NovoCalendarModule","NovoToastModule","NovoHeaderModule","NovoModalModule","NovoQuickNoteModule","NovoRadioModule","NovoSwitchModule","NovoDragulaModule","NovoSliderModule","NovoTimePickerModule","NovoDateTimePickerModule","NovoNovoCKEditorModule","NovoTipWellModule","NovoTableModule","NovoTableExtrasModule","NovoFormModule","NovoOverlayModule","NovoValueModule","NovoAceEditorModule","ScrollDispatchModule","FormUtils","props","original","k","formatString","successes_1","failures_1","isSuccess","attempt","validateInterpolationProps","match","substr","parseInt","isFunction","constructor","fields","reverse","previous","first_1","second","getTime","can","have","subkey","any","not","subvalue","RegExp","findAncestor","parentElement","matches","newArr","test","eval","deepAssign","objs","_loop_1","targetArray_1","sourceItem","itemIndex","targetItem","is","getNextElementSibling","nextElementSibling","nextSibling","nodeType","Can","thing","ACE_VALUE_ACCESSOR","NovoAceEditor","showPrintMargin","displayIndentGuides","_theme","_mode","onChange","_","setTheme","setOptions","mode","setMode","editor","initializeEditor","initializeOptions","initializeEvents","el","ace","edit","$blockScrolling","Infinity","updateText","newVal","oldText","setText","setValue","getSession","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","toTitleCase","toUpperCase","sanitizeRule","rule","restoreCase","word","token","sanitizeWord","collection","words","replaceWord","replaceMap","keepMap","rules","Pluralize","pluralize","inclusive","addPluralRule","replacement","addSingularRule","addUncountableRule","addIrregularRule","single","one","many","PluralPipe","DecodeURIPipe","encodedString","decodedString","GroupByPipe","input_1","NovoButtonElement","side","_icon","[attr.theme]","[attr.color]","[attr.icon]","[attr.loading]","[attr.side]","NovoLoadingElement","[class]","NovoSpinnerElement","inverse","baseHref","NovoTooltip","overlay","containerRef","opacity","Overlay","TooltipDirective","removeArrow","autoPosition","isPosition","isType","isSize","onMouseEnter","tooltip","always","onMouseLeave","overlayRef","dispose","overlayState","OverlayConfig","positionStrategy","getPosition","scrollStrategy","scrollStrategies","reposition","enable","detach","portal","ComponentPortal","tooltipInstance","attach","instance","tooltipType","rounded","preline","noAnimate","strategy","originPosition","overlayPosition","offsetX","offsetY","originX","originY","overlayX","overlayY","connectedTo","withOffsetX","withOffsetY","withFallbackStrategy","withFallbackPosition","[attr.data-hint]","bounce","userLocale","filters","emptyTableMessage","noMatchingRecordsMessage","erroredTableMessage","pickerError","pickerEmpty","quickNoteError","quickNoteEmpty","required","numberTooLarge","save","cancel","itemsPerPage","selectAllOnPage","move","more","clearAllNormalCase","today","isRequired","notValidYear","isTooLarge","invalidAddress","invalidEmail","minLength","backToPresetFilters","okGotIt","address","address1","apt","address2","city","zip","zipCode","or","clickToBrowse","chooseAFile","no","yes","noItems","dateFormat","dateFormatPlaceholder","timeFormatPlaceholderAM","timeFormatPlaceholder24Hour","timeFormatAM","timeFormatPM","confirmChangesModalMessage","promptModalMessage","asyncFailure","groupedMultiPickerEmpty","groupedMultiPickerSelectCategory","encryptedFieldTooltip","noStatesForCountry","selectCountryFirst","invalidIntegerInput","maxlengthMetWithField","maxlength","maxlengthMet","invalidMaxlengthWithField","invalidMaxlength","getToManyPlusMore","toMany","quantity","selectedRecords","showingXofXResults","shown","totalRecords","formatDateWithFormat","Intl","DateTimeFormat","getWeekdays","getDay$$1","dayOfWeek","dt","setDate","getDate","getDay","weekdays","weekday","getMonths","getMonth$$1","month","setMonth","getMonth","months","getProperty","short","startIndex","endIndex","NumberFormat","currency","day","year","hour","minute","LOCALE_ID","CardActionsElement","CardElement","onClose","onRefresh","cardAutomationId","newIcon","newMessageIcon","messageIcon","iconClass","messageIconClass","toggleClose","toggleRefresh","iconTooltip","NovoEventTypeLegendElement","eventTypeClicked","events","customTemplate","NovoCalendarDateChangeElement","locale","viewDateChange","subtractDate","changeDate","addDate","unit","addFn","week","dateFns.addWeeks","dateFns.addMonths","view","viewDate","dateFns.startOfWeek","dateFns.endOfWeek","WEEKEND_DAY_NUMBERS","DAYS_IN_WEEK","HOURS_IN_DAY","MINUTES_IN_HOUR","CalendarEventResponse","getExcludedDays","days","excluded","getWeekViewEventOffset","startOfWeek$$1","startOfWeek","start","distance","dateFns.differenceInDays","isEventIsPeriod","periodStart","periodEnd","eventStart","eventEnd","end","dateFns.isSameSecond","getEventsInPeriod","getEventsInTimeRange","dayStart","dayEnd","startOfView","dateFns.setMinutes","dateFns.setHours","endOfView","dateFns.startOfMinute","dateFns.isAfter","dateFns.isBefore","getWeekDay","isPast","isToday","dateFns.isSameDay","isFuture","isWeekend","dateFns.getDay","getWeekViewHeader","weekStartsOn","_loop_3","getWeekView","hourSegments","segmentHeight","startOfViewWeek","endOfViewWeek","maxRange","eventsMapped","entry","startsBeforeWeek","endsAfterWeek","itemA","itemB","startSecondsDiff","dateFns.differenceInSeconds","dateFns.endOfDay","hourHeightModifier","dateFns.differenceInMinutes","eventRows","allocatedEvents","otherRowEvents","nextEvent","totalEventsForRow","nextOffset_1","getMonthView","dateFns.startOfMonth","dateFns.endOfMonth","eventsInMonth","_loop_4","calEvents","inMonth","dateFns.isSameMonth","badgeTotal","totalDaysVisibleInWeek","rowOffsets","getDayView","eventWidth","previousDayEvents","dayViewEvents","allDay","eventA","eventB","valueOf","startsBeforeDay","endsAfterDay","overlappingPreviousEvents","previousEvent","previousEventTop","previousEventBottom","dayEvent","allDayEvents","getDayViewHourGrid","hours","segmentDuration","startOfViewDay","segments","dateFns.addMinutes","dateFns.addHours","isStart","Maybe","Accepted","Rejected","NovoCalendarMonthViewElement","excludeDays","tooltipPosition","dayClicked","eventClicked","eventTimesChanged","refreshAll","refreshHeader","refreshBody","eventDropped","newEnd","dateFns.getYear","dateFns.getMonth","dateFns.getDate","newStart","dateFns.setYear","dateFns.setMonth","dateFns.setDate","secondsDiff","dateFns.addSeconds","columnHeaders","dayModifier","headerTemplate","cellTemplate","NovoCalendarMonthHeaderElement","prevMonth","dateFns.subMonths","nextMonth","NovoCalendarMonthDayElement","evt","response","[class.calendar-day-accepted]","[class.calendar-day-rejected]","[class.calendar-past]","[class.calendar-today]","[class.calendar-future]","[class.calendar-weekend]","[class.calendar-in-month]","[class.calendar-out-month]","[class.calendar-has-events]","[style.backgroundColor]","SEGMENT_HEIGHT","NovoCalendarWeekViewElement","precision","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","hourSegmentClicked","refreshHourGrid","getDayColumnWidth","eventRowContainer","eventTemplate","hourSegmentTemplate","NovoCalendarWeekHeaderElement","NovoCalendarWeekEventElement","weekEvent","NovoCalendarDayViewElement","eventSnapSize","refreshView","hourSegmentModifier","segment","allDayEventTemplate","NovoCalendarDayEventElement","NovoCalendarHourSegmentElement","NovoCalendarAllDayEventElement","WeekdayPipe","method","MonthPipe","MonthDayPipe","YearPipe","HoursPipe","DayOfMonthPipe","EndOfWeekDisplayPipe","endOfWeek","NovoToastElement","sanitizer","hasDialogue","isCloseable","launched","_message","bypassSecurityTrustHtml","alertTheme","[class.show]","[class.animate]","[class.embedded]","DomSanitizer","NovoHeaderSpacer","NovoUtilsComponent","NovoUtilActionComponent","NovoHeaderComponent","headerClass","condensed","subTitle","NovoNavElement","outlet","router","NovoTabElement","nav","activeChange","[class.disabled]","NovoTabButtonElement","NovoTabLinkElement","NovoNavOutletElement","NovoNavContentElement","NovoNavHeaderElement","INDEX","forElement","TILES_VALUE_ACCESSOR","NovoTilesElement","onSelectedOptionClick","onDisabledOptionClick","activeTile","focused","setFocus","firstChange","setTile","moveTile","ind","w","clientWidth","offsetLeft","offsetTop","setDisabledState","Deferred","temp","componentFactoryResolver","appendNextToLocation","ComponentClass","componentFactory","parentInjector","childInjector","ReflectiveInjector","fromResolvedProviders","appendTopOfLocation","NovoModalParams","component","contentRef","isClosed","_onClosed","body","NovoModalContainerElement","modalRef","componentUtils","container","NovoModalElement","NovoModalNotificationElement","iconType","NovoListElement","[class.vertical-list]","[class.horizontal-list]","NovoListItemElement","avatar","NovoItemAvatarElement","classMap","NovoItemTitleElement","NovoItemHeaderElement","NovoItemDateElement","NovoItemContentElement","NovoItemEndElement","onActiveChange","onOutsideClick","forceValue","outsideClick","otherElement","TAB","NUM_CENTER","RETURN","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","PAGE_UP","PAGE_DOWN","HASH_SYMBOL","HOME","LEFT","UP","RIGHT","DOWN","PRINT_SCREEN","INSERT","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","AT_SYMBOL","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","CONTEXT_MENU","NUM_ZERO","NUM_ONE","NUM_TWO","NUM_THREE","NUM_FOUR","NUM_FIVE","NUM_SIX","NUM_SEVEN","NUM_EIGHT","NUM_NINE","NUM_MULTIPLY","NUM_PLUS","NUM_MINUS","NUM_PERIOD","NUM_DIVISION","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","DASH","PERIOD","FORWARD_SLASH","BasePickerResults","_term","isLoading","isStatic","lastPage","autoSelectFirstOption","selectingMatches","scrollHandler","onScrollDown","cleanUp","getListElement","removeAttribute","scrollHeight","processSearch","addScrollListener","enableInfiniteScroll","shouldReset","nextActiveMatch","updatePosition","fromPromise","structureArray","minSearchLength","getPrototypeOf","defaultOptions","dataArray","valueFormat","selectActiveMatch","selectMatch","prevActiveMatch","activeMatch","scrollToActive","getChildrenOfListElement","list","selectActive","hideResults","escapeRegexp","queryToEscape","highlight","preselected","isPreselected","PickerResults","QuickNoteResults","taggingMode","searchTerm","searchCall","onSelected","QUICK_NOTE_VALUE_ACCESSOR","QuickNoteElement","zone","startupFocus","placeholderVisible","_placeholderElement","triggers","resultsComponent","resultsTemplate","ckeInstance","focusManager","removeAllListeners","CKEDITOR","instances","getCKEditorConfig","onKey","domEvent","$","debounceTimeout","run","onValueChange","showPlaceholder","hidePlaceholder","readOnly","setReadOnly","references","note","setData","defaultRenderer","symbol","getRenderer","quickNoteResults","triggers_1","isTagging","getData","regex","fromCharCode","validateReferences","showResults","newModel","getSearchTerm","positionResultsDropdown","renderedText","replaceWordAtCursor","getWordAtCursor","range","getSelection","getRanges","startContainer","NODE_TEXT","startOffset","getText","wordStart","lastIndexOf","beforeSymbol","hasPrevious","getPrevious","wordEnd","newWord","originalWord","parentNode","getParent","line","getHtml","newLine","setHtml","moveToPosition","POSITION_BEFORE_END","selectRanges","html","getBody","ampRegex","editorHeight","wrapper","clientHeight","TOOLBAR_HEIGHT","setProperty","enterMode","ENTER_BR","shiftEnterMode","ENTER_P","disableNativeSpellChecker","removePlugins","toolbar","getCursorPosition","editorElement","editable","cursorElement","appendChild","cursorPosition","MIN_MARGIN_TOP","MAX_MARGIN_TOP","getContentHeight","marginTop","contentHeight","ui","contentsElement","cssText","placeholderElement","removeChild","className","textContent","NgZone","RADIO_VALUE_ACCESSOR","NovoRadioElement","NovoRadioGroup","[class.vertical]","vertical","isFunction_2","isObject_2","tryCatchTarget","tryCatcher","tryCatch_2","UnsubscriptionError","join","UnsubscriptionError_2","Subscription$$1","_parent","_parents","_subscriptions","hasErrors","isFunction_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","sub","isObject_1","teardown","_addParent","tmp","subscriptionIndex","Subscription_2","errs","__window","__self","self","WorkerGlobalScope","__global","global","_root","Symbol","for","$$rxSubscriber","destinationOrNext","Observer_1","isTrustedSubscriber","trustedSubscriber","SafeSubscriber","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","EmptyError_2","first","FirstOperator","first_2","FirstSubscriber","_emitted","_emit","_emitFinal","OuterSubscriber_2","isPromise_2","toSubscriber","toSubscriber_2","getSymbolObservable","$$observable","noop_2","fns","pipeFromArray","pipe_2","pipeFromArray_1","Observable$$1","sink","toSubscriber_1","PromiseCtor","Rx","operations","pipe_1","Observable_2","symbolIteratorPonyfill","getOwnPropertyNames","$$iterator","InnerSubscriber","InnerSubscriber_2","outerSubscriber","InnerSubscriber_1","obs","msg","subscribeToResult_2","switchMap$1","SwitchMapOperator","switchMap_2","SwitchMapSubscriber","_tryNotifyNext","NovoOverlayTemplateComponent","closing","destroyOverlay","hasAttached","checkSizes","createOverlay","closingActionsSubscription","subscribeToClosingActions","closePanel","panelOpen","onClosingAction","outsideClickStream","fromEvent","clickTarget","clicked","getConnectedElement","overlayElement","observableOf","firstStable","onStable","panelClosingActions","getOverlayConfig","backdropClick","getHostWidth","hasBackdrop","getScrollStrategy","fallbackX","withDirection","block","getConfig","updateSize","DOCUMENT","isDevMode","warn","parentScrollAction","toggled","activeIndex","filterTerm","togglePanel","closeHandler","parentScrollSelector","parentScrollElement","_textItems","innerText","filterTermTimeout","char","onOverlayKeyDown","containerClass","NovoItemElement","keepOpen","originalEvent","NovoListElement$1","NovoItemHeaderElement$1","OverlayModule","SELECT_VALUE_ACCESSOR","NovoSelectElement","focusMonitor","ngZone","onSelect","header","valid","origin","readonly","filteredOptions","createdItem","find","setValueAndClose","fireEvents","saveHeader","scrollToSelected","toggleHeader","scrollToIndex","querySelectorAll","headerConfig","onSave","SWITCH_VALUE_ACCESSOR","NovoSwitchElement","onKeydown","[attr.aria-checked]","PICKER_VALUE_ACCESSOR","NovoPickerElement","_disablePickerInput","typing","overrideElement","debounceTime","distinctUntilChanged","onDebouncedKeyup","disablePickerInput","popup","wipeTerm","rawValue","onOverlayClosed","clearValueOnSelect","checkTerm","firstName","lastName","getLabels","EntityPickerResult","getIconForResult","searchEntity","renderTimestamp","timestamp","getNameForResult","candidate","jobOrder","EntityPickerResults","ChecklistPickerResults","filteredMatches","GroupedMultiPickerResults","customFilterEnabled","internalMap","displayAll","getItemsForCategoryAsync","customFilterLabel","customFilterValue","defaultFilterValue","matchFunction","selectedCategory","setAllCategory","inputElement","categoryMap","keyboardSubscription","allItems_1","selectCategory","listElement","getNewMatches","clearSearchTerm","fireCustomFilter","ignoreCustomFilter","SkillsSpecialtyPickerResults","limitedTo","limit","limitedTo200","DistributionListPickerResults","sanitizeHTML","SEARCH_VALUE_ACCESSOR","NovoSearchBoxElement","_zone","alwaysOpen","searchChanged","_onChange","_onTouched","showSearch","forceClose","onBlur","_handleKeydown","ESCAPE","_handleInput","activeElement","debounceSearchChange","_setValue","toDisplay","displayField","displayValue","skip","hint","dragula","dragulaImported","cloned","drag","dragend","drop","out","over","shadow","dropModel","removeModel","bags","drake","bag","models","handleModels","initEvents","setupEvents","dragElm","dragIndex","dropIndex","sourceModel","containers","domIndexOf","dropElm","notCopy","targetModel","dropElmModel","that","NovoDragulaElement","dragulaService","checkModel","dragulaModel","modelIndex","previousValue","NovoSliderElement","currentSlide","currSlides","handleKeyDownFunc","handleKeyDown","slides","stopImmediatePropagation","changeSlide","currentClass","NovoChipsElement","NovoChipElement","deselect","_type","onRemove","onDeselect","setItems","itemToAdd","noLabels","getLabelFromOptions","result_1","optLabel","hidePreview","showPreview","onTyping","previewTemplate","preview","NovoRowChipsElement","NovoRowChipElement","DATE_PICKER_VALUE_ACCESSOR","NovoDatePickerElement","weekStart","years","rangeSelectMode","minYear","getFullYear","maxYear","setupWeekdays","selectedLabel","selected2Label","updateView","weekRangeSelectChange","clearRange","weekStartChanges","isSelectingRange","selected2","hoverDay","weekRangeSelect","isRangeModeEndDate","isRangeModeStartDate","isNotSelected","isEndFill","isStartFill","isFiller","markedSelected","removeTime","monthLabel","buildMonth","setToday","setYear","fireRangeSelect","updateHeading","selectedItem","heading","setHours","setSeconds","setMilliseconds","weeks","monthIndex","buildWeek","dateFns.isToday","toggleRangeSelect","rangeHover","inline","module","n","r","loaded","default","d","u","s","dd","mm","yy","yyyy","HH","MM","SS","f","l","indexesOfPipedChars","getTimeMask","militaryTime","mask","timeFormatArray","timeFormat","timeFormatArray_1","timeFormatPart","getDateMask","getDateTimeMask","getTimePlaceHolder","parseDateString","dateString","dateFormatTokens","dateValueTokens","exec","twoTokens","oneToken","delimiter","dateStringWithDelimiter","isValidDatePart","parseTimeString","timeString","timeStringParts","amFormat","pmFormat","splits","pm","splits_1","setMinutes","parseString","dateTimeString","parts","dts","tm","tms","getHours","getMinutes","datePart","DATE_VALUE_ACCESSOR","NovoDatePickerInputElement","dateFormatService","formattedValue","textMaskEnabled","allowInvalidDate","blurEvent","focusEvent","userDefinedFormat","maskOptions","createAutoCorrectedDatePipe","keepCharPositions","guide","_handleEvent","_handleBlur","_handleFocus","dateTimeValue","getUTCDate","dispatchOnChange","_setTriggerValue","newValue","_setCalendarValue","_setFormValue","formatDateValue","originalValue","dateFns.isValid","dateFns.format","TextMaskModule","TIME_PICKER_VALUE_ACCESSOR","NovoTimePickerElement","military","analog","minutes","increments","MERIDIANS","MINUTES","HOURS","flatten","init","meridian","checkBetween","inBetween","dispatchChange","hoursClass","activeHour","minutesClass","activeMinute","setPeriod","[class.military]","NovoTimePickerInputElement","hour_1","num","setFullYear","hour12","DATE_TIME_PICKER_VALUE_ACCESSOR","NovoDateTimePickerElement","componentTabState","datePickerValue","timePickerValue","toggleView","tab","setDateLabels","setTimeLabels","toLocaleTimeString","onDateSelected","createFullDateValue","onTimeSelected","dateFns.setMilliseconds","dateFns.setSeconds","dateFns.getHours","dateFns.getMinutes","dateFns.getSeconds","dateFns.getMilliseconds","NovoDateTimePickerInputElement","timePart","updateDate","checkParts","updateTime","handleBlur","handleFocus","newDt","CKEDITOR_CONTROL_VALUE_ACCESSOR","NovoCKEditorElement","fileBrowserImageUploadUrl","ready","paste","getBaseConfig","ckeditorInit","updateValue","baseConfig","extraAllowedContent","font_names","extendedConfig","filebrowserImageUploadUrl","minimal","insertText","trimmedText","NovoTipWellElement","sanitize","confirmed","isLocalStorageEnabled","isEnabled","tip","buttonText","round","localStorageKey","storedValue","hideTip","custom","getAll","customTemplateTypes","addDefault","addCustom","NovoFieldsetHeaderElement","NovoFieldsetElement","controls","form","autoFocus","NovoDynamicFormElement","fieldsets","hideNonRequiredFields","autoFocusFirstField","allFieldsRequired","allFieldsNotRequired","showingAllFields","showingRequiredFields","numControls","layout","fieldset","requiredFields","nonRequiredFields","control","hidden","showAllFields","showOnlyRequired","hideRequiredWithValue","forceValidation","dirty","markAsDirty","markAsTouched","NovoFormElement","hideHeader","getRawValue","NovoFormControl","validators","asyncValidators","displayValueChanges","valueHistory","initialValue","encrypted","subType","hasRequiredValidator","tooltipSize","tooltipPreline","removeTooltipArrow","tooltipAutoPosition","sortOrder","controlType","multiple","optionsType","layoutOptions","currencyFormat","minlength","interactions","checkboxLabel","restrictFieldInteractions","tipWell","customControlConfig","disable","setRequired","Validators","setValidators","updateValueAndValidity","emitEvent","onlySelf","emitModelToViewChange","emitViewToModelChange","historyTimeout","isReadOnly","opts","markAsInvalid","setErrors","FormControl","NovoFormGroup","fieldInteractionEvents","FormGroup","BaseControl","__type","__config","associatedEntity","forceClear","maxLength","dataSpecialization","dataType","MAX_INTEGER","MIN_YEAR","FormValidators","showStateRequiredFlag","subfield","updated","countryName","pickerConfig","maxInteger","integerTooLarge","maxDouble","MAX_SAFE_INTEGER","doubleTooLarge","isEmail","isValidAddress","invalidAddressFields","maxlengthFields","returnVal","maxlengthError","valid_1","formValidity_1","ctrl","countryID","invalidAddressForForm","AddressControl","CheckListControl","CheckboxControl","DateControl","DateTimeControl","EditorControl","AceEditorControl","FileControl","NativeSelectControl","PickerControl","TablePickerControl","QuickNoteControl","RadioControl","ReadOnlyControl","SelectControl","TextAreaControl","TextBoxControl","getTextboxType","TilesControl","TimeControl","GroupedControl","ControlFactory","CustomControl","getOptionsConfig","optionsUrl","optionsService","ASSOCIATED_ENTITY_LIST","PICKER_TEST_LIST","toFormGroup","emptyFormGroup","addControls","formGroup","formControl","addControl","toFormGroupFromFieldset","determineInputType","dataSpecializationTypeMap","DATETIME","TIME","MONEY","PERCENTAGE","HTML","HTML-MINIMAL","YEAR","dataTypeToTypeMap","Timestamp","inputTypeToTypeMap","CHECKBOX","RADIO","SELECT","TILES","inputTypeMultiToTypeMap","typeToTypeMap","file","COMPOSITE","numberDataTypeToTypeMap","Double","BigDecimal","Integer","entity","inputType","multiValue","isFieldEncrypted","getControlForField","overrides","forTable","overrideResultsTemplate","controlConfig","optionsConfig","getControlOptions","overridePreviewTemplate","pickerCallback","isAddressEmpty","toControls","meta","toTableControls","editorType","editorConfig","toFieldSets","ranges","sectionHeaders","enabled","fieldsetIdx","setInitialValues","keepClean","keyOverride","setInitialValuesFieldsets","forceShowAllControls","forceShowAllControlsInFieldsets","themes","icons","warning","danger","defaults","hideDelay","_parentViewContainer","alert","toast","handleAlert","isVisible","REF","setToastOnSession","toastTimer","OPTIONS","CUSTOM_CLASS","ALERT_STYLE","ALERT_POSITION","ALERT_ICON","scope","modal","bindings","useValue","ControlConfirmModal","ControlPromptModal","toaster","modalService","formUtils","_form","associations","currentEntity","currentEntityId","_globals","globals","_currentKey","_appBridge","appBridge","isActiveControlValid","currentKey","getActiveControl","getControl","getActiveKey","getActiveValue","getActiveInitialValue","getInitialValue","triggerEvent","controlKey","patchValue","validationMessage","markAsPending","markAsPristine","markAsUntouched","displayToast","toastConfig","displayTip","allowDismiss","setTooltip","confirmChanges","history","onClosed","promptUser","isValueEmpty","isValueBlank","hasField","addStaticOption","newOption","optionToAdd","isUnique","currentOptions","removeStaticOption","optionToRemove","opt","modifyPickerConfig","mapper","newConfig","optionsUrlBuilder","optionsPromise","setLoading","fieldInteractionloading","asyncBlockTimeout","metaForNewField","FIELD_POSITIONS","ABOVE_FIELD","fieldsetIndex","controlIndex","fi","fieldsetControl","ci","BELOW_FIELD","TOP_OF_FORM","BOTTOM_OF_FORM","novoControl","removeControl","fieldsetIndex_1","controlIndex_1","func","wait","h","NovoAutoSize","onInput","textArea","adjust","NovoControlElement","fieldInteractionApi","templateService","upload","_blurEmitter","_focusEmitter","_focused","_enteredText","maxLengthMet","characterCount","_showCount","maxLengthMetErrorfields","decimalSeparator","focusedField","isDirty","maxlengthMetField","maxlengthErrorField","charCount","_loop_5","interaction","this_1","valueChangeSubscription","executeInteraction","valueChanges","invokeOnInit","forceClearSubscription","statusChangeSubscription","statusChanges","validity","templateContext","methods","restrictKeys","emitChange","handlePercentChange","handleTextAreaInput","handleEdit","handleSave","handleDelete","handleUpload","modelChange","modelChangeWithRaw","handleAddressChange","handleTyping","updateValidity","validateIntegerInput","validateNumberOnBlur","percentValue","toFixed","percentChangeSubscription","getDecimalSeparator","dateChangeSubscription","script","characterCountField","showCount","checkMaxLength","UTILITY_KEYS","percent","handleTabForPickers","shouldEventBeEmitted","[attr.data-control-type]","[class.hidden]","[attr.data-control-key]","COUNTRIES","code","states","getCountries","findByCountryId","findByCountryName","findByCountryCode","getStateObjects","foundCountry","getStates","ADDRESS_VALUE_ACCESSOR","NovoAddressElement","countries","fieldList","invalid","initComplete","validityChange","updateControl","initConfig","updateStates","getDefaultCountryConfig","getDefaultStateConfig","stateOptions","isValid","isInvalid","isFocused","isBlurred","onCountryChange","statesUpdatable","onStateChange","setStateLabel","getStateOptions","loadingCountries","countryName_1","CHECKBOX_VALUE_ACCESSOR","NovoCheckboxElement","LAYOUT_DEFAULTS","iconStyle","boxIcon","CHECKLIST_VALUE_ACCESSOR","NovoCheckListElement","setModel","checkBox","checkedOptions","NovoFile","contentType","lastModified","reader","FileReader","encodeURIComponent","onload","fileContents","dataURL","readAsDataURL","toJSON","FILE_VALUE_ACCESSOR","NovoFileInputElement","order","download","labelStyle","draggable","elements","files","commands","dragenter","dragEnterHandler","dragleave","dragLeaveHandler","dragover","dragOverHandler","dropHandler","updateLayout","initializeDragula","setInitialFileList","fileOutputBag","insertTemplatesBasedOnLayout","moves","dataTransfer","dropEffect","filelist","customActions","process","readFile","customEdit","customSave","customDelete","customCheck","fileInput","fileOutput","NovoControlGroup","fb","_vertical","_remove","_edit","_collapsible","onEdit","onAdd","controlLabels","disabledArray","initialValueChange","clearControls","addNewControl","newCtrl","buildControl","checkCanEdit","checkCanRemove","newControls","getNewControls","at","removeAt","editControl","collapsible","canEdit","canRemove","FormBuilder","emptyMessage","rowTemplate","NovoControlTemplates","Pagination","itemsPerPageChange","onPageChange","maxPagesDisplayed","pageSelectDisabled","rowOptions","getDefaultRowOptions","onPageSizeChanged","noPrevious","noNext","totalItems","disablePageSelection","BaseRenderer","RowDetails","TableCell","componentRef","hasEditor","TableFilter","onFilterChange","freetextFilter","onChangeFilter","filterThrottle","filtering","ThOrderable","onOrderChange","ordering","table","findTable","onDragStart","effectAllowed","clone","cloneNode","deleteColumns","setDragImage","deleteRow","cellLength","cells","deleteCell","htmlElementNode","tagName","onDrag","onDragEnd","onDrop","onDragOver","onDragEnter","onDragLeave","(dragstart)","(dragover)","(dragenter)","(dragleave)","(dragend)","(drop)","ThSortable","onSortChange","onToggleSort","sorting","DateCell","PercentageCell","NovoDropdownCell","dropdownCellConfig","NovoTableKeepFilterFocus","NovoTableActionsElement","NovoTableFooterElement","NovoTableHeaderElement","CollectionEvent","ADD","REMOVE","REMOVE_ALL","REPLACE","INVALIDATE_ALL","SORT","FILTER","CHANGE","CURRENTPAGE_CHANGE","PAGESIZE_CHANGE","NUMBEROFPAGES_CHANGE","ArrayCollection","dataChange","editData","isEditing","_filter","isFiltered","undo","commit","addItem","onDataChange","addItemAt","addItems","addItemsAt","getItemAt","getItemIndex","invalidate","newData","newData_1","existing","replaceItem","removeAll","removeItemAt","newItem","oldItem","replaceItemAt","sortOn","fieldName","filterOn","PagedArrayCollection","_numberOfPages","last","NovoTableMode","VIEW","EDIT","NovoTableElement","builder","skipSortAndFilterClear","onRowClick","onRowSelect","onTableChange","_rows","activeId","master","selectedPageCount","showSelectAllMessage","pagedData","toggledDropdownMap","tableForm","footers","grossFlagToAvoidTheTableFromBeingUglyWhenHidingTheToast","dataProvider","setupColumnDefaults","clearAllSortAndFilters","_dataProvider","dp","rowSelectionStyle","pageSelected","rowSelectHandler","columnsToSum_1","columnSums_1","tableFormRows_1","rowControls","_editing","rowId","setTableEdit","footerConfig","footerConfigIndex","labelColumn","paging","onDropdownToggled","filterInputs","getOptionDataAutomationId","getDefaultOptions","ngDoCheck","getPageStart","getPageEnd","onFilterClick","calendarShow","calenderShow","onFilterClear","originalOptions","_loop_6","record","preFilter","this_2","escapeCharacters","filters_1","fireTableChangeEvent","isFilterActive","currentSortColumn","sortedColumns_1","thisColumn","preSort","findColumnIndex","oldIndex","newIndex","expandAllOnPage","emitSelected","rowClickHandler","rowSelect","onCalenderSelect","onFilterKeywords","filterKeywords_1","newOptions","rowNumber","columnNumber","rowIndex","columnIndex","viewOnly","leaveEditMode","hideToastMessage","addEditableRow","tableFormRows","validateAndGetUpdatedData","changedRows_1","errors_1","changedRow","cancelEditing","saveChanges","displayToastMessage","toggleLoading","isColumnHidden","editing","hideColumnOnEdit","hideColumnOnView","[class.editing]","[class.novo-table-loading]","NOVO_VALUE_TYPE","DEFAULT","ENTITY_LIST","LINK","INTERNAL_LINK","NOVO_VALUE_THEME","MOBILE","NovoValueElement","iconCls","onIconClick","onValueClick","openLink","isLinkField","isEntityList","isHTMLField","stripHTML","isURL","isMobile","RenderPipe","changeDetector","sanitizationService","equals","objectOne","objectTwo","keySet","t1","getEntityLabel","_subtype","formatter","capitalize","minimumFractionDigits","getNumberDecimalPlaces","compensation","countryObj","comments","dateLastModified","lastArgs","list_1","fields_1","list_2","decimalPlaces","EntityList","baseEntity","ENTITY_SHORT_NAMES","Lead","ClientContact","ClientContact1","ClientContact2","ClientContact3","ClientContact4","ClientContact5","ClientCorporation","ClientCorporation1","ClientCorporation2","ClientCorporation3","ClientCorporation4","ClientCorporation5","Opportunity","Task","Note","CorporateUser","Candidate","JobOrder","JobOrder1","JobOrder2","JobOrder3","JobOrder4","JobOrder5","Placement","JobSubmission","CandidateReference","DistributionList","Appointment","metaDisplay","isLinkable","getClass","personSubtype","ariaLabel","iconName","raised","alt"],"mappings":"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AAC,SArBU,MAsBX,CAAC,WArBY,OAsBb,CAAC,OArBQ,QACXj4C,QAAQ,SAACi4C,GAsBP,OArBOW,UAAUG,cAAcd,EAAK,GAAIA,EAAK,MA2BjD,CACI,CAAC,MArBO,IAsBR,CAAC,SArBU,MAsBX,CAAC,yEArB0E,SAsB3E,CAAC,wBArByB,SAsB3B,CAAA,gEArBmE,QAsBlE,CAAC,kCArBmC,OAsBpC,CAAA,sBArBwB,OAsBxB,CAAC,8CArB+C,QAsBhD,CAAC,wBArByB,QAsB1B,CAAC,aArBc,UAsBf,CAAC,sBArBuB,MAsB1B,CAAA,iFArBqF,MAsBnF,CAAC,eArBgB,MAsBjB,CAAC,oBArBqB,MAsBtB,CAAC,iCArBkC,QAsBnC,CAAC,kGArBmG,QAsBpG,CAAC,yGArB0G,QAsB3G,CAAC,8FArB+F,QAsBhG,CAAC,0BArB2B,OAsB5B,CAAC,+BArBgC,QAsBjC,CAAC,sBArBuB,QAsBxB,CAAC,oBArBqB,UAsBtB,CAAC,eArBgB,MAsBjB,CAAC,YArBa,MAsBd,CAAC,QArBS,QACZj4C,QAAQ,SAACi4C,GAsBP,OArBOW,UAAUK,gBAAgBhB,EAAK,GAAIA,EAAK,MA2BnD,CAEI,SACA,YACA,SACA,MACA,UACA,OACA,YACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,WACA,MACA,cACA,QACA,YACA,SACA,WACA,SACA,YACA,MACA,YACA,YACA,WACA,MACA,UACA,UACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,QACA,OACA,QACA,QACA,OACA,OACA,WACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACD,UACC,QACA,QACA,QACA,UACA,gBACA,OACA,SACA,UACA,UACA,aACA,WACA,MAEA,QANF,QAQE,SACA,SACA,UACA,YACA,iBApBFj4C,QAAQ44C,UAAUM,oBAsBpB,IAAAK,WAAA,WAAA,SAAAA,YAKAA,EAAAt3D,UAAAouB,UAAA,SAtBKnqB,GAuBG,OAtBO0yD,UAAUC,UAAU3yD,MAgBnC,GAdOqzD,WAAPr1D,WAA2C,CAuB3C,CAtBE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,YAuB7B,CAtBEza,KAAMqjC,KAAAA,aAGP8zB,WAAD9zD,eAAC,WAAA,MAAA,ICtYD,IAAA+zD,cAAA,WAAA,SAAAA,YAMAA,EAAAv3D,UAAAouB,UAAA,SAHKopC,GAIG,IAHIC,EAAwB,GAO5B,OANKn+B,QAAQ+N,QAAQmwB,IAA2C,iBAAlBA,IAI1CC,EAHgB7T,mBAAmB4T,IAEhCC,KARf,GAUOF,cAAPt1D,WAA2C,CAI3C,CAHE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,eAI7B,CAHEza,KAAMqjC,KAAAA,aAGP+zB,cAAD/zD,eAAC,WAAA,MAAA,IClBD,IAAAk0D,YAAA,WAAA,SAAAA,YAMAA,EAAA13D,UAAAouB,UAAA,SAFGuP,EAAA+b,GAIC,IAFKx4B,MAAMrY,QAAQ80B,GAGjB,OAFOA,EAOT,IAFA,IAFMxsB,EAAqC,GAI/CmxB,EAAA,EAFwBq1B,EAExBh6B,EAFwB2E,EAExBq1B,EAAA/sD,OAFwB03B,IAExB,CAAS,IAFMr+B,EAEf0zD,EAAAr1B,GADY1F,EAAas1B,IAAIjuD,GAAOkuD,KAAKzY,GAG/BpgB,QAFQ+N,QAAQl2B,EAAIyrB,MAGtBzrB,EAFIyrB,GAAS,IAKfzrB,EAFIyrB,GAAOz0B,KAAKlE,GAKlB,OAFOpE,OAAO44B,KAAKtnB,GAAKkP,IAAI,SAAAhG,GAEhC,MAAA,CAF0CA,IAE1CA,EAF+CpW,MAASkN,EAAIkJ,SArB5D,GAuBOq9C,YAAPz1D,WAA2C,CAG3C,CAFE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAGlBua,KAFM,cAIP88C,YAADl0D,eAAC,WAAA,MAAA,IC1BD,IAAA+rD,gBAAA,aAIOA,gBAAPttD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBoC,aAAc,CAAA60D,WAAaC,cAAeG,aAC1Cl1D,QAAS,CAAA80D,WAAaC,cAAeG,iBAIxCnI,gBAAD/rD,eAAC,WAAA,MAAA,ICdD,IAAAo0D,kBAAA,WACA,SAAAA,IAEGl4D,KAAHm4D,KACkB,eAMlBh4D,OAAAC,eAFG83D,EAEH53D,UAAA,OAAA,CAMAmD,IAAA,WACI,OALOzD,KAAKo4D,OAFhB10D,IAAA,SAFG4xB,GAGCt1B,KAFKo4D,MAAQ,OAAA9iC,qCATjB,GAgBO4iC,kBAAP31D,WAA2C,CAK3C,CAJE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAKvBC,SAJU,gBAKVgD,KAJM,CAKJy0D,eAJgB,QAKhBC,eAJgB,QAKhBC,cAJe,OAKfC,iBAJkB,UAKlBC,cAJe,QAMjBtnC,SAJU,o1CA4BVI,gBAJiBC,KAAAA,wBAAwBC,WAI1CymC,kBAADp0D,eAAC,WAAA,MAAA,IAEMo0D,kBAAPn0D,eAAgE,CAOhEsxB,MANS,CAAA,CAAG50B,KAAMK,KAAAA,QAOlBq3D,KANQ,CAAA,CAAG13D,KAAMK,KAAAA,QAOjBs0B,MANS,CAAA,CAAG30B,KAAMK,KAAAA,QAOlBmkC,QANW,CAAA,CAAGxkC,KAAMK,KAAAA,QAOpBw0B,KANQ,CAAA,CAAG70B,KAAMK,KAAAA,SCzDjB,IAAA+2B,iBAAA,aAEOA,iBAAPt1B,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,cACThxB,aAAc,CAAAm1D,mBACdp1D,QAAS,CAAAo1D,uBAIZrgC,iBAAD/zB,eAAC,WAAA,MAAA,ICdD,IAAA40D,mBAAA,aAIOA,mBAAPn2D,WAA2C,CAA3C,CACE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAArBC,SACU,eAAVgD,KACM,CAAF+0D,UACW,eACfxnC,SACU,4LAUbunC,mBAAD50D,eAAC,WAAA,MAAA,IAEM40D,mBAAP30D,eAAgE,CAEhEqxB,MADS,CAAA,CAAG30B,KAAMK,KAAAA,SAKlB,IAAA83D,mBAAA,aAIOA,mBAAPr2D,WAA2C,CAe3C,CAdE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAerBC,SAdU,eAeVuwB,SAdU,koIA+EbynC,mBAAD90D,eAAC,WAAA,MAAA,IAEM80D,mBAAP70D,eAAgE,CAiBhEqxB,MAhBS,CAAA,CAAG30B,KAAMK,KAAAA,QAiBlB+3D,QAhBW,CAAA,CAAGp4D,KAAMK,KAAAA,QAiBpBg4D,SAhBY,CAAA,CAAGr4D,KAAMK,KAAAA,SCnHrB,IAAAo0C,kBAAA,aAEOA,kBAAP3yC,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,cACThxB,aAAc,CAAA21D,mBAAqBE,oBACnC91D,QAAS,CAAA41D,mBAAqBE,wBAIjC1jB,kBAADpxC,eAAC,WAAA,MAAA,ICdD,IAAAi1D,YAkBA,SAFsBC,EAA0BC,GAA1Bj5D,KAAtBg5D,QAAsBA,EAA0Bh5D,KAAhDi5D,aAAgDA,GACzCF,YAAPx2D,WAA2C,CAI3C,CAHE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAIvBC,SAHU,eAIVuwB,SAHU,sMAKVD,OAHQ,CAAA,otLAkKRQ,WAHY,CAIVlD,WAAAA,QAHQ,QAAS,CAIfpoB,WAAAA,MAHM,wBAAyBqoB,WAAAA,MAAM,CAAEyqC,QAAS,OAIhD9yD,WAAAA,MAHM,UAAWqoB,WAAAA,MAAM,CAAEyqC,QAAS,OAIlCvqC,WAAAA,WAHW,eAAgB,CAIzBF,WAAAA,MAHM,CAIJyqC,QAHS,EAIT5pC,WAHY,YAKdV,WAAAA,QAHQ,kBAKVD,WAAAA,WAHW,cAAe,CAIxBF,WAAAA,MAHM,CAIJyqC,QAHS,EAIT5pC,WAHY,WAKdV,WAAAA,QAHQ,yBAOfmqC,YAADj1D,eAAC,WAAA,MAAA,CAMD,CAACrD,KAAM04D,QAAAA,SACP,CAAC14D,KAAMsxB,KAAAA,oBCvMP,IAAAqnC,iBAAA,WAkCA,SAAAA,EAJwBJ,EAA0BhP,EAA4C7d,GAAtEnsC,KAAxBg5D,QAAwBA,EAA0Bh5D,KAAlDgqD,iBAAkDA,EAA4ChqD,KAA9FmsC,WAA8FA,EAzB5FnsC,KAAF0nD,SAAqB,MAEnB1nD,KAAFS,KAAiB,SAYfT,KAAFsI,QAAoB,EAIlBtI,KAAFq5D,aAAyB,EAEvBr5D,KAAFs5D,cAA0B,SAgB1BF,EAAA94D,UAAAi5D,WAAA,SAVG7R,GAWC,OAVOA,EAASttB,iBAAkBp6B,KAAM0nD,UAAY,IAAIttB,eAgB5Dg/B,EAAA94D,UAAAk5D,OAAA,SAbG/4D,GAcC,OAbOA,EAAK25B,iBAAkBp6B,KAAMS,MAAQ,IAAI25B,eAmBpDg/B,EAAA94D,UAAAm5D,OAAA,SAhBGv7C,GAiBC,OAhBOA,EAAKkc,iBAAkBp6B,KAAMke,MAAQ,IAAIkc,eAqBpDg/B,EAAA94D,UAAAo5D,aAAA,WACQ15D,KAjBK25D,SAAW35D,KAAKsI,SAAUtI,KAAM45D,QAkBvC55D,KAjBK2D,QAuBXy1D,EAAA94D,UAAAu5D,aAAA,WACQ75D,KAlBK85D,aAAc95D,KAAM45D,SAmB3B55D,KAlBKumD,OAmBLvmD,KAlBK85D,WAAWC,YAwBtBX,EAAA94D,UAAA04B,SAAA,WACQh5B,KApBK25D,SAAW35D,KAAK45D,QAAU55D,KAAKsI,QAqBtCtI,KApBK2D,QA0BXy1D,EAAA94D,UAAA6B,YAAA,WACQnC,KAtBK85D,aAAc95D,KAAM45D,SAuB3B55D,KAtBKumD,OAuBLvmD,KAtBK85D,WAAWC,YAInBX,EAAH94D,UAAAqD,KAAG,WAyBC,IAxBMq2D,EAAe,IAAIC,QAAAA,cAyBzBD,EAxBaE,iBAAmBl6D,KAAKm6D,cA0BjCn6D,KAxBK45D,OAyBPI,EAxBaI,eAAiBp6D,KAAKg5D,QAAQqB,iBAAiBC,aA0B5DN,EAxBaI,eAAiBp6D,KAAKg5D,QAAQqB,iBAAiBh4D,QA0B9D23D,EAxBaI,eAAeG,SA0B5Bv6D,KAxBK85D,WAAa95D,KAAKg5D,QAAQ5uD,OAAO4vD,GA0BtCh6D,KAxBK85D,WAAWU,SAyBhBx6D,KAxBKy6D,OAASz6D,KAAKy6D,QAAU,IAAIC,OAAAA,gBAAgB3B,YAAa/4D,KAAKgqD,kBA0BnE,IAxBI2Q,EAAkB36D,KAAK85D,WAAWc,OAAO56D,KAAKy6D,QAAQI,SAyB1DF,EAxBgBliD,QAAUzY,KAAK25D,QAyB/BgB,EAxBgBG,YAAc96D,KAAKS,KAyBnCk6D,EAxBgBI,QAAU/6D,KAAK+6D,QAyB/BJ,EAxBgBz8C,KAAOle,KAAKke,KAyB5By8C,EAxBgBK,QAAUh7D,KAAKg7D,QAyB/BL,EAxBgBM,UAAYj7D,KAAKi7D,UAyBjCN,EAxBgBjT,SAAW1nD,KAAKq5D,YAAc,WAAar5D,KAAK0nD,UAGjE0R,EAAH94D,UAAAimD,KAAG,WA2BKvmD,KA1BK85D,YA2BP95D,KA1BK85D,WAAWU,UAInBpB,EAAH94D,UAAA65D,YAAG,WA6BC,IA5BIe,EACAC,EACAC,EACAC,EACAC,EA8BJ,OAAQt7D,KA5BK0nD,UA6BX,IA5BK,QA6BHyT,EA5BiB,CAAEI,QAAS,MAAOC,QAAS,UA6B5CJ,EA5BkB,CAAEK,SAAU,QAASC,SAAU,UA6BjDL,EA5BU,EA6BVC,EA5BU,EA6BV,MACF,IA5BK,SA6BHH,EA5BiB,CAAEI,QAAS,SAAUC,QAAS,UA6B/CJ,EA5BkB,CAAEK,SAAU,SAAUC,SAAU,OA6BlDL,EA5BU,EA6BVC,EA5BU,EA6BV,MACF,IA5BK,MA6BHH,EA5BiB,CAAEI,QAAS,SAAUC,QAAS,OA6B/CJ,EA5BkB,CAAEK,SAAU,SAAUC,SAAU,UA6BlDL,EA5BU,EA6BVC,GA5BU,EA6BV,MACF,IA5BK,OA6BHH,EA5BiB,CAAEI,QAAS,QAASC,QAAS,UA6B9CJ,EA5BkB,CAAEK,SAAU,MAAOC,SAAU,UA6B/CL,GA5BU,EA6BVC,EA5BU,EA6BV,MACF,IA5BK,WA6BHH,EA5BiB,CAAEI,QAAS,QAASC,QAAS,OA6B9CJ,EA5BkB,CAAEK,SAAU,MAAOC,SAAU,UA8B/CJ,IADAD,EA5BU,GA8BV,MACF,IA5BK,cA6BHF,EA5BiB,CAAEI,QAAS,QAASC,QAAS,UA6B9CJ,EA5BkB,CAAEK,SAAU,MAAOC,SAAU,OA8B/CJ,EADAD,EA5BU,EA8BV,MACF,IA5BK,YA6BHF,EA5BiB,CAAEI,QAAS,MAAOC,QAAS,OA6B5CJ,EA5BkB,CAAEK,SAAU,QAASC,SAAU,UA8BjDJ,EADAD,GA5BU,EA8BV,MACF,IA5BK,eA6BHF,EA5BiB,CAAEI,QAAS,MAAOC,QAAS,UA6B5CJ,EA5BkB,CAAEK,SAAU,QAASC,SAAU,OA6BjDL,GA5BU,EA6BVC,EA5BU,EAwCd,OANAJ,EA5BWl7D,KAAKg5D,QA6BbtR,WACAiU,YA5BY37D,KAAKmsC,WAAYgvB,EAAgBC,GA6B7CQ,YA5BYP,GA6BZQ,YA5BYP,GAERt7D,KAAKs5D,aAAet5D,KAAK87D,qBAAqBZ,GAAYA,GAElE9B,EAAH94D,UAAAw7D,qBAAG,SAAAZ,GAsBD,OAWEA,EACGa,qBAhCqB,CAAER,QAAS,SAAUC,QAAS,UAAY,CAAEC,SAAU,SAAUC,SAAU,OAAS,EAAG,GAiC3GK,qBAhCqB,CAAER,QAAS,MAAOC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,OAAS,EAAG,GAiCrGK,qBAhCqB,CAAER,QAAS,MAAOC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,UAAY,EAAG,GAiC1GK,qBAhCqB,CAAER,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,WAAY,EAAI,GAiC3GK,qBAhCqB,CAAER,QAAS,SAAUC,QAAS,OAAS,CAAEC,SAAU,SAAUC,SAAU,UAAY,GAAG,GAiC3GK,qBAhCqB,CAAER,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,OAAS,EAAG,GAiCzGK,qBAhCqB,CAAER,QAAS,QAASC,QAAS,OAAS,CAAEC,SAAU,QAASC,SAAU,UAAY,GAAG,GAiCzGK,qBAhCqB,CAAER,QAAS,MAAOC,QAAS,OAAS,CAAEC,SAAU,MAAOC,SAAU,UAAY,GAAG,GAiCrGK,qBAhCqB,CAAER,QAAS,QAASC,QAAS,OAAS,CAAEC,SAAU,MAAOC,SAAU,UAAY,GAAG,GAiCvGK,qBAhCqB,CAAER,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,OAAS,EAAG,GAiCvGK,qBAhCqB,CAAER,QAAS,MAAOC,QAAS,OAAS,CAAEC,SAAU,QAASC,SAAU,WAAY,GAAI,GAiCxGK,qBAhCqB,CAAER,QAAS,MAAOC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,QAAS,EAAI,GAEpGR,KA1LX,GA4LO9B,iBAAP72D,WAA2C,CAiC3C,CAhCE9B,KAAMC,KAAAA,UAAWC,KAAM,CAAA,CAiCvBC,SAhCU,YAiCVgD,KAhCM,CAiCJo4D,mBAhCoB,eAKvB5C,iBAADt1D,eAAC,WAAA,MAAA,CAmCD,CAACrD,KAAM04D,QAAAA,SACP,CAAC14D,KAAMsxB,KAAAA,kBACP,CAACtxB,KAAMizB,KAAAA,cAhCA0lC,iBAAPr1D,eAAgE,CAmChE41D,QAlCW,CAAA,CAAGl5D,KAAMK,KAAAA,QAmCpB4mD,SAlCY,CAAA,CAAGjnD,KAAMK,KAAAA,MAAOH,KAAM,CAAA,qBAmClCF,KAlCQ,CAAA,CAAGA,KAAMK,KAAAA,MAAOH,KAAM,CAAA,iBAmC9Bud,KAlCQ,CAAA,CAAGzd,KAAMK,KAAAA,MAAOH,KAAM,CAAA,iBAmC9Bs7D,OAlCU,CAAA,CAAGx7D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,mBAmChCs6D,UAlCa,CAAA,CAAGx6D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,sBAmCnCo6D,QAlCW,CAAA,CAAGt6D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,oBAmCjCi5D,OAlCU,CAAA,CAAGn5D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,mBAmChC2H,OAlCU,CAAA,CAAG7H,KAAMK,KAAAA,MAAOH,KAAM,CAAA,mBAmChCq6D,QAlCW,CAAA,CAAGv6D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,oBAmCjC04D,YAlCe,CAAA,CAAG54D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,wBAmCrC24D,aAlCgB,CAAA,CAAG74D,KAAMK,KAAAA,MAAOH,KAAM,CAAA,yBAmCtC+4D,aAlCgB,CAAA,CAAGj5D,KAAM8zC,KAAAA,aAAc5zC,KAAM,CAAA,gBAmC7Ck5D,aAlCgB,CAAA,CAAGp5D,KAAM8zC,KAAAA,aAAc5zC,KAAM,CAAA,iBChO7C,IAAA40C,kBAAA,aAEuCA,kBAAvChzC,WAA2E,CAC3E,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACtBoC,aAAc,CAAAq2D,iBAAmBL,aACjCj2D,QAAS,CAAAs2D,kBACT9N,gBAAiB,CAAAyN,aACjBjlC,QAAS,CAAAC,OAAAA,kBAIVwhB,kBAADzxC,eAAC,WAAA,MAAA,ICfD,IAAA42B,iBAAA,WA2FA,SAAAA,EAEWwhC,QAAX,IAAAA,IAAWA,EAAX,SAAWl8D,KAAXk8D,WAAWA,EA3FTl8D,KAAFm8D,QACY,SAAVn8D,KAAFia,MACU,QAARja,KAAFulC,KACS,OAAPvlC,KAAFo8D,kBACsB,2BAApBp8D,KAAFq8D,yBAC6B,sBAA3Br8D,KAAFs8D,oBACwB,2BAAtBt8D,KAAFu8D,YACgB,2BAAdv8D,KAAFw8D,YACgB,2BAAdx8D,KAAFy8D,eACmB,2BAAjBz8D,KAAF08D,eACmB,2BAAjB18D,KAAF28D,SACa,WAAX38D,KAAF48D,eACmB,sBAAjB58D,KAAF68D,KACS,OAAP78D,KAAF88D,OACW,SAAT98D,KAAFuF,KACS,OAAPvF,KAAF+8D,aACiB,kBAAf/8D,KAAF25B,OACW,YAAT35B,KAAF20B,SACa,WAAX30B,KAAFg9D,gBACoB,qBAAlBh9D,KAAF69B,YACgB,eAAd79B,KAAFyiD,QACY,UAAVziD,KAAFqC,MACU,QAARrC,KAAFi9D,KACS,OAAPj9D,KAAFsvC,UACc,aAAZtvC,KAAFuvC,QACY,WAAVvvC,KAAFk9D,KACS,OAAPl9D,KAAF40C,SACa,YAAX50C,KAAFm9D,mBACuB,YAArBn9D,KAAF8mC,UACc,aAAZ9mC,KAAF+mC,YACgB,eAAd/mC,KAAFo9D,MACU,QAARp9D,KAAFkI,IACQ,MAANlI,KAAFq9D,WACe,cAAbr9D,KAAFs9D,aACiB,sBAAft9D,KAAFu9D,WACe,eAAbv9D,KAAFw9D,eACmB,yCAAjBx9D,KAAFy9D,aACiB,2CAAfz9D,KAAF09D,UACc,wCAAZ19D,KAAF8vC,SACa,aAAX9vC,KAAF+vC,UACc,cAAZ/vC,KAAFgwC,WACe,eAAbhwC,KAAFiwC,WACe,eAAbjwC,KAAFkwC,UACc,cAAZlwC,KAAFmwC,SACa,aAAXnwC,KAAFowC,UACc,cAAZpwC,KAAFqwC,WACe,eAAbrwC,KAAFswC,WACe,eAAbtwC,KAAFuwC,UACc,cAAZvwC,KAAFqvC,gBACoB,oBAAlBrvC,KAAF29D,oBACwB,yBAAtB39D,KAAF49D,QACY,aAAV59D,KAAF69D,QACY,UAAV79D,KAAF89D,SACa,UAAX99D,KAAF+9D,IACQ,MAAN/9D,KAAFg+D,SACa,MAAXh+D,KAAFi+D,KACS,kBAAPj+D,KAAFoG,MACU,iBAARpG,KAAFk+D,IACQ,cAANl+D,KAAFm+D,QACY,cAAVn+D,KAAFo9C,QACY,UAAVp9C,KAAFo+D,GACO,KAALp+D,KAAFq+D,cACkB,kBAAhBr+D,KAAFs+D,YACgB,gBAAdt+D,KAAFu+D,GACO,KAALv+D,KAAFw+D,IACQ,MAANx+D,KAAFm6B,OACW,SAATn6B,KAAFy+D,QACY,qBAAVz+D,KAAF0+D,WACe,aAAb1+D,KAAF2+D,sBAC0B,aAAxB3+D,KAAF4+D,wBAC4B,WAA1B5+D,KAAF6+D,4BACgC,QAA9B7+D,KAAF8+D,aACiB,KAAf9+D,KAAF++D,aACiB,KAAf/+D,KAAFg/D,2BAC+B,8CAA7Bh/D,KAAFi/D,mBACuB,gDAArBj/D,KAAFk/D,aACiB,2GAAfl/D,KAAFoyD,SACa,WAAXpyD,KAAF0H,QACY,UAAV1H,KAAF29C,IACQ,MAAN39C,KAAFm/D,wBAC4B,sBAA1Bn/D,KAAFo/D,iCACqC,kDAAnCp/D,KAAFoF,IACQ,MAANpF,KAAFq/D,sBAC0B,6DAAxBr/D,KAAFs/D,mBACuB,+CAArBt/D,KAAFu/D,mBACuB,mDAArBv/D,KAAFw/D,oBACwB,gDAWxB9kC,EAAAp6B,UAAAm/D,sBAAA,SAHGviC,EAAAwiC,GAIC,MAHO,0DAAAA,EAGX,QAH+ExiC,EAG/E,KAMAxC,EAAAp6B,UAAAq/D,aAAA,SANGD,GAOC,MANO,0DAAAA,EAMX,oBAOAhlC,EAAAp6B,UAAAs/D,0BAAA,SAVG1iC,EAAAwiC,GAWC,MAVO,2DAAAA,EAUX,QAVgFxiC,EAUhF,KAMAxC,EAAAp6B,UAAAu/D,iBAAA,SAbGH,GAcC,MAbO,2DAAAA,EAaX,oBAMAhlC,EAAAp6B,UAAAw/D,kBAAA,SAhBGC,GAiBC,MAhBO,IAAAA,EAAWC,SAgBtB,SAMAtlC,EAAAp6B,UAAA2/D,gBAAA,SAnBGtrC,GAoBC,OAnBOA,EAmBX,0BAOA+F,EAAAp6B,UAAA4/D,mBAAA,SAvBGC,EAAA7+C,GAwBC,MAvBO,WAAA6+C,EAuBX,OAvB4B7+C,EAuB5B,aAOAoZ,EAAAp6B,UAAA8/D,aAAA,SA3BG9+C,EAAAqY,GA4BC,OA3BOA,EAAS,cAAArY,EA2BpB,YA3BqD,uBAAAA,EA2BrD,aAOAoZ,EAAAp6B,UAAA+/D,qBAAA,SA/BG97D,EAAA44B,GAgCC,IA/BIuS,EAAOnrC,aAAiB4D,KAAO5D,EAAQ,IAAI4D,KAAK5D,GAgCpD,OAAImrC,EA/BK6iB,WAAc7iB,EAAK6iB,UACnBhuD,EAEF,IAAI+7D,KAAKC,eAAevgE,KAAKk8D,WAAY/+B,GAAQA,OAAOuS,IAoCnEhV,EAAAp6B,UAAAkgE,YAAA,WAAA,IAAAr/D,EAAAnB,KAKA,SAAAygE,EArCKC,GAsCC,IArCIC,EAAK,IAAIx4D,KAsCb,OArCOw4D,EAAGC,QAAQD,EAAGE,UAAYF,EAAGG,SAAWJ,GAwCjD,MArCO,CAAAI,EAAQ,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAAInjC,OAAO,SAACojC,EAAUJ,GAuCrG,OADAI,EArCSt4D,KAAK,IAAI63D,KAAKC,eAAep/D,EAAK+6D,WAAY,CAAE8E,QAAS,SAAU7jC,OAAOwjC,IAC5EI,GACN,KA0CPrmC,EAAAp6B,UAAA2gE,UAAA,WAAA,IAAA9/D,EAAAnB,KAKA,SAAAkhE,EA3CKC,GA6CC,OA5CS,IAAIh5D,MACHi5D,SAASD,EAAO,GA8C5B,MA3CO,CA4CLE,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,GA4CTA,EA3CS,IA4CTA,EA3CS,KACT1jC,OAAO,SAAC2jC,EAAQX,GA6ChB,OADAW,EA3CO74D,KAAK,IAAI63D,KAAKC,eAAep/D,EAAK+6D,WAAY,CAAEiF,MAAO,SAAUhkC,OAAOwjC,IACxEW,GACN,KAiDP5mC,EAAAp6B,UAAAihE,YAAA,SA9CGh9D,GA+CC,OA9COvE,KAAKuE,IAuDhBm2B,EAAAp6B,UAAA+wC,aAAA,SApDG7L,EAAAC,EAAAv6B,EAAAs2D,GAqDC,GApDe,IAoDXt2D,GApD6B,IAAbu6B,EAqDlB,MApDO,mBAAAv6B,EAyDT,IApDMu2D,EAAaj8B,EAAOC,EAGpBi8B,EAAWD,GA+CjBv2D,EApDS4G,KAAKwG,IAAIpN,EAAQ,IAKa4G,KAAK09B,IAAIiyB,EAAah8B,EAAUv6B,GAAUu2D,EAAah8B,EA+ChG,OA7CS+7B,EAAQC,EAAgB,EA6CnC,MA7CqCC,EA6CrC,IA7CmDx2D,EAAc,eAAAu2D,EAA2B,GA6C5F,MA7C8FC,EA6C9F,OA7C4Gx2D,GA0D5GwvB,EAAAp6B,UAAA2zC,eAAA,SAvDG1vC,GAyDC,OAvDO,IAAI+7D,KAAKqB,aAAa3hE,KAAKk8D,WADpB,CAAEztC,MAAO,WAAYmzC,SAAU,QACUzkC,OAAO54B,IA8DlEm2B,EAAAp6B,UAAAyzC,aAAA,SA3DGxvC,EAAA+3B,GA4DC,OA3DO,IAAIgkC,KAAKqB,aAAa3hE,KAAKk8D,WAAY5/B,GAASa,OAAO54B,IAiElEm2B,EAAAp6B,UAAAmzC,gBAAA,SA9DGlvC,GA+DC,IAtDI+e,EAAmB,OAAV/e,GAAkBA,IAAU4C,WAAuB,KAAV5C,EAAe,IAAI4D,KAAS,IAAIA,KAAK5D,GA+D3F,OA9DO,IAAI+7D,KAAKC,eAAevgE,KAAKk8D,WATM,CAgExCiF,MA9DO,UA+DPU,IA9DK,UA+DLC,KA9DM,UA+DNC,KA9DM,UA+DNC,OA9DQ,YAG+C7kC,OAAO7Z,IAoEpEoX,EAAAp6B,UAAAqzC,WAAA,SAjEGpvC,GAkEC,IA5DI+e,EAAmB,OAAV/e,GAAkBA,IAAU4C,WAAuB,KAAV5C,EAAe,IAAI4D,KAAS,IAAIA,KAAK5D,GAkE3F,OAjEO,IAAI+7D,KAAKC,eAAevgE,KAAKk8D,WANM,CAmExC6F,KAjEM,UAkENC,OAjEQ,YAG+C7kC,OAAO7Z,IAuEpEoX,EAAAp6B,UAAAizC,WAAA,SApEGhvC,GAqEC,IA9DI+e,EAAmB,OAAV/e,GAAkBA,IAAU4C,WAAuB,KAAV5C,EAAe,IAAI4D,KAAS,IAAIA,KAAK5D,GAqE3F,OApEO,IAAI+7D,KAAKC,eAAevgE,KAAKk8D,WAPM,CAsExCiF,MApEO,UAqEPU,IApEK,UAqELC,KApEM,YAGiD3kC,OAAO7Z,MAxOpE,GA0OOoX,iBAAPn4B,WAA2C,CAqE3C,CApEE9B,KAAMqjC,KAAAA,aAGPpJ,iBAAD52B,eAAC,WAAA,MAAA,CAuED,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAM+B,KAAAA,UAAY,CAAE/B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBClT1E,IAAAC,mBAAA,aACwCA,mBAAxC3/D,WAA4E,CAC5E,CAAE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CACvBC,SAAU,oBACVuwB,SAAU,gCAIX+wC,mBAADp+D,eAAC,WAAA,MAAA,IAMD,IAAAq+D,YAAA,WAiCA,SAAAA,EAbGjqC,GATAl4B,KAAHgyB,SAXsB,EAYnBhyB,KAAHupB,OAXiB,GAsBdvpB,KAAHoiE,QAXgC,IAAI/gE,KAAAA,aAYjCrB,KAAHqiE,UAXkC,IAAIhhE,KAAAA,aAqBlCrB,KAAKk4B,OAASA,SAKlBiqC,EAAA7hE,UAAA04B,SAAA,WACIh5B,KAfKupB,OAASvpB,KAAKupB,QAAU,IAqBjC44C,EAAA7hE,UAAAmwB,YAAA,SAlBGC,GAmBC1wB,KAlBKupB,OAASvpB,KAAKupB,QAAU,GAmB7BvpB,KAlBKsiE,kBAAuBtiE,KAAK8pD,OAAS9pD,KAAKupB,OAAOugC,OAAS,YAAY1vB,cAAc2I,QAAQ,MAAO,KAkB5G,QAEI,IAlBIw/B,EAAkBviE,KAAKs1B,MAAQt1B,KAAKupB,OAAO+L,KAC3CktC,EAAyBxiE,KAAKyiE,aAAeziE,KAAKupB,OAAOk5C,YAmB7DziE,KAlBK0iE,UAAYH,EAAU,OAAAA,EAAmB,KAmB9CviE,KAlBK2iE,iBAAmBH,EAAiB,OAAAA,EAA0B,MAuBvEL,EAAA7hE,UAAAsiE,YAAA,WAnBS5iE,KAAKupB,OAAO64C,QAuBfpiE,KApBKupB,OAAO64C,UAkBZpiE,KApBKoiE,QAAQ78D,QA4BnB48D,EAAA7hE,UAAAuiE,cAAA,WArBS7iE,KAAKupB,OAAO84C,UAyBfriE,KAtBKupB,OAAO84C,YAoBZriE,KAtBKqiE,UAAU98D,UAhDrB,GAqDO48D,YAAP5/D,WAA2C,CAuB3C,CAtBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAuBvBC,SAtBU,YAuBVuwB,SAtBU,8gFAmCXgxC,YAADr+D,eAAC,WAAA,MAAA,CAyBD,CAACrD,KAAMi6B,oBAtBAynC,YAAPp+D,eAAgE,CAyBhEiuB,QAxBW,CAAA,CAAGvxB,KAAMK,KAAAA,QAyBpByoB,OAxBU,CAAA,CAAG9oB,KAAMK,KAAAA,QAyBnBgpD,MAxBS,CAAA,CAAGrpD,KAAMK,KAAAA,QAyBlB2X,QAxBW,CAAA,CAAGhY,KAAMK,KAAAA,QAyBpB2hE,YAxBe,CAAA,CAAGhiE,KAAMK,KAAAA,QAyBxBw0B,KAxBQ,CAAA,CAAG70B,KAAMK,KAAAA,QAyBjBgiE,YAxBe,CAAA,CAAGriE,KAAMK,KAAAA,QAyBxB2hD,QAxBW,CAAA,CAAGhiD,KAAMK,KAAAA,QAyBpBuB,MAxBS,CAAA,CAAG5B,KAAMK,KAAAA,QAyBlBm8D,KAxBQ,CAAA,CAAGx8D,KAAMK,KAAAA,QAyBjBmkC,QAxBW,CAAA,CAAGxkC,KAAMK,KAAAA,QAyBpBshE,QAxBW,CAAA,CAAG3hE,KAAMkC,KAAAA,SAyBpB0/D,UAxBa,CAAA,CAAG5hE,KAAMkC,KAAAA,UCxHtB,IAAAmtD,eAAA,aAKOA,eAAPvtD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe8D,iBAAkBqd,kBAAmBK,mBAC7DxyC,aAAc,CAAAo/D,YAAcD,oBAC5Bp/D,QAAS,CAAAq/D,YAAcD,wBAI1BpS,eAADhsD,eAAC,WAAA,MAAA,ICjBD,IAAAi/D,2BAAA,WAMK/iE,KAALgjE,iBAE2C,IAAI3hE,KAAAA,cAExC0hE,2BAAPxgE,WAA2C,CAD3C,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADrBC,SAEU,yBADVuwB,SAEU,2kBAkBb4xC,2BAADj/D,eAAC,WAAA,MAAA,IAEMi/D,2BAAPh/D,eAAgE,CAChEk/D,OAAU,CAAA,CAAGxiE,KAAMK,KAAAA,QACnBoiE,eAAkB,CAAA,CAAGziE,KAAMK,KAAAA,QAC3BkiE,iBAAoB,CAAA,CAAGviE,KAAMkC,KAAAA,UCnC7B,IAAAwgE,8BAAA,WAkBA,SAAAA,EAGiBC,GAPjBpjE,KAAAqjE,eAKM,IAAAhiE,KAAAA,aAAErB,KAAKojE,OAASA,SAMtBD,EAAA7iE,UAAAgjE,aAAA,WACQtjE,KAGKujE,YAAY,IAEzBJ,EAAA7iE,UAAAkjE,QAAA,WACQxjE,KACKujE,WAAW,IAKxBJ,EAAA7iE,UAAAijE,WAAA,SAFKE,GAGG,IAFMC,EAAa,CAGf7B,IAFKlyB,QAAAA,QAGLg0B,KAFMC,QAAAA,SAGNzC,MAFO0C,QAAAA,WACT7jE,KAAK8jE,MAIP9jE,KAFKqjE,eAAethE,KAAK2hE,EAAM1jE,KAAK+jE,SAAUN,KAOtDtjE,OAAAC,eAJK+iE,EAIL7iE,UAAA,cAAA,CAAAmD,IAAA,WACQ,OAJOugE,QAAAA,YAAoBhkE,KAAK+jE,2CASxC5jE,OAAAC,eANK+iE,EAML7iE,UAAA,YAAA,CAAAmD,IAAA,WACQ,OANOwgE,QAAAA,UAAkBjkE,KAAK+jE,6CAnDtC,GAsDOZ,8BAAP5gE,WAA2C,CAO3C,CANE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAOrBC,SANU,4BAOVuwB,SANU,msBAcbgyC,8BAADr/D,eAAC,WAAA,MAAA,CASD,CAACrD,KAbC0G,UAAA5E,WAAA,CAAA,CAAA9B,KAAAs1B,KAAAA,OAAAp1B,KAAA,CAAAshE,KAAAA,gBAOKkB,8BAAPp/D,eAAgE,CAShE+/D,KARQ,CAAA,CAAGrjE,KAAMK,KAAAA,QASjBijE,SARY,CAAA,CAAGtjE,KAAMK,KAAAA,QASrBsiE,OARU,CAAA,CAAG3iE,KAAMK,KAAAA,QASnBuiE,eARkB,CAAA,CAAG5iE,KAAMkC,KAAAA,UC/E3B,IAAMuhE,oBAAgC,CAAA,EAAI,GACpCC,aAAuB,EACvBC,aAAuB,GACvBC,gBAA0B,GAErBC,sBAA6B,GA0IxC,SAAAC,gBARC3hC,GAAD,IAAC0M,EAAD1M,EAAA0M,UAACk1B,EAAD5hC,EAAA4hC,KAACC,EAAD7hC,EAAA6hC,SASI,GAAIA,EARSv5D,OAAS,EASlB,OARO,EAYX,IAFA,IARI22D,EAAcvyB,EAAUwxB,SACxBnjC,EAAiB,EACZjyB,EAAY,EAAGA,EAAI84D,EAAM94D,IAS1Bm2D,IARQsC,eASRtC,EARM,GAUN4C,EARSn9B,KAAK,SAAAviC,GAAK,OAAAA,IAAM88D,KASzBlkC,IAEJkkC,IAEJ,OAROlkC,EA+BX,SAAA+mC,uBACI9hC,GAAJ,IAAMhS,EAANgS,EAAAhS,MADA+zC,EACA/hC,EAAAgiC,YAA0B5hC,EAA1BJ,EAAA6hC,SAA0BA,OAA1B,IAAAzhC,EAAA,GAAAA,EACI,GAAIpS,EAdMi0C,MAAQD,EAed,OAdO,EAgBX,IAdME,EAAmBC,QAAAA,iBAAyBn0C,EAAMi0C,MAAOD,GAe/D,OAdOE,EAAWP,gBAAgB,CAAEj1B,UAAWs1B,EAAaJ,KAAMM,EAAUL,SAchFA,IAMA,SAAAO,gBAjBCpiC,GAAD,IAAChS,EAADgS,EAAAhS,MAACq0C,EAADriC,EAAAqiC,YAACC,EAADtiC,EAAAsiC,UAEUC,EAAmBv0C,EAAMi0C,MACzBO,EAAiBx0C,EAAMy0C,KAAOz0C,EAAMi0C,MAmB1C,OAjBiBI,EAiBbE,GAjB4BA,EAAaD,IAI9BD,EAiBXG,GAjB0BA,EAAWF,IAqBrCC,EAjBaF,GAA0BC,EAAXE,OAqB5BE,QAAAA,aAjBqBH,EAAYF,KAAgBK,QAAAA,aAAqBH,EAAYD,QAqBlFI,QAAAA,aAjBqBF,EAAUH,KAAgBK,QAAAA,aAAqBF,EAAUF,OA4BtF,SAAAK,kBApBC3iC,GAAD,IAACqgC,EAADrgC,EAAAqgC,OAACgC,EAADriC,EAAAqiC,YAACC,EAADtiC,EAAAsiC,UAqBI,OApBOjC,EAAO7mD,OAAO,SAACwU,GAAyB,OAAAo0C,gBAAgB,CAAEp0C,MAoBrEA,EApB4Eq0C,YAoB5EA,EApByFC,UAoBzFA,MAQA,SAAAM,qBAzBCvC,EAAAwC,EAAAC,GA0BG,OAzBOzC,EAAO7mD,OAAQ,SAAAwU,GA0BlB,IAzBMu0C,EAAmBv0C,EAAMi0C,MACzBO,EAAiBx0C,EAAMy0C,KAAOF,EAE9BQ,EAAoBC,QAAAA,WAAmBC,QAAAA,SAAiBp2B,QAAAA,WAAmB01B,GAAaM,EAAS1D,MAAO0D,EAASzD,QACjH8D,EAAkBF,QAAAA,WAAmBC,QAAAA,SAAiBE,QAAAA,cAAsBZ,GAAaO,EAAO3D,MAAO2D,EAAO1D,QA2BpH,OAzBOgE,QAAAA,QAAgBZ,EAAUO,IAC1BM,QAAAA,SAAiBd,EAAYW,KAgC5C,SAAAI,WA5BCtjC,GAAD,IAAC8M,EAAD9M,EAAA8M,KACU0tB,EAAc3tB,QAAAA,WAAmB,IAAItnC,MA6B3C,MA5BO,CA6BHunC,KAARA,EACQy2B,OA5BQz2B,EAAO0tB,EA6BfgJ,QA5BSC,QAAAA,UAAkB32B,EAAM0tB,GA6BjCkJ,SA5BiBlJ,EAAP1tB,EA6BV62B,WA5B+D,EAApDrC,oBAAoBt8D,QAAQ4+D,QAAAA,OAAe92B,KAmC9D,SAAA+2B,kBA/BC7jC,GAmCG,IAnCJ,IAACmhC,EAADnhC,EAAAmhC,SAAC2C,EAAD9jC,EAAA8jC,aAAC1jC,EAADJ,EAAA6hC,SAACA,OAAD,IAAAzhC,EAAA,GAAAA,EAEU6hC,EAAcb,QAAAA,YAAoBD,EAAU,CAAE2C,aA+BxDA,IA9BUlC,EAAkB,GAC5BmC,EAAA,SAAaj7D,GAgCL,IA/BMgkC,EAAaC,QAAAA,QAAgBk1B,EAAOn5D,GACrC+4D,EAASn9B,KAAK,SAAAviC,GAAK,OAAA2qC,EAAKoxB,WAAa/7D,KAgCtCy/D,EA/BK/7D,KAAKy9D,WAAW,CAAEx2B,KA+BnCA,MAlCahkC,EAAY,EAAGA,EAAIy4D,aAAcz4D,IA+B9Ci7D,EA/Baj7D,GAsCT,OA/BO84D,EAsCX,SAAAoC,YAlCChkC,GAAD,IAACI,EAADJ,EAAAqgC,OAACA,OAAD,IAAAjgC,EAAA,GAAAA,EAAC+gC,EAADnhC,EAAAmhC,SAAC2C,EAAD9jC,EAAA8jC,aAACzjC,EAADL,EAAA6hC,SAACA,OAAD,IAAAxhC,EAAA,GAAAA,EAAC4jC,EAADjkC,EAAAikC,aAACC,EAADlkC,EAAAkkC,cAACrB,EAAD7iC,EAAA6iC,SAACC,EAAD9iC,EAAA8iC,OACSzC,IAmCDA,EAlCS,IAqCb,IAlCM8D,EAAwB/C,QAAAA,YAAoBD,EAAU,CAAE2C,aAkClEA,IAjCUM,EAAsB/C,QAAAA,UAAkBF,EAAU,CAAE2C,aAkC9DA,IAjCUO,EAAmB9C,aAAeM,EAASv5D,OAE3Cg8D,EAAgC1B,qBAAqBD,kBAAkB,CAAEtC,OAkCnFA,EAlC2FgC,YAAa8B,EAAiB7B,UAAW8B,IAAkBvB,EAAUC,GAAQ/kD,IAAI,SAAAiQ,GAqCpK,MAlCO,CAAEA,MAkCjBA,EAlCwB62B,OAFOid,uBAAuB,CAAE9zC,MAkCxDA,EAlC+Dg0C,YAAamC,EAAiBtC,SAkC7FA,IAhCgCn6C,KADH,KAEtBlO,OAAO,SAAArX,GAAK,OAAAA,EAAE0iD,OAASwf,IAAU7qD,OAAO,SAAArX,GAAK,OAAS,EAATA,EAAEulB,OAAU3J,IAAI,SAAAwmD,GAkCpE,MAAA,CACQv2C,MAlCOu2C,EAAMv2C,MAmCb62B,OAlCQ0f,EAAM1f,OAmCdn9B,KAlCM68C,EAAM78C,KAmCZ88C,iBAlCkBD,EAAMv2C,MAAMi0C,MAAQkC,EAmCtCM,eAlCeF,EAAOv2C,MAAMy0C,KAAO8B,EAAMv2C,MAAMi0C,OAASmC,EAmCxD5gB,IAlCK,KACL7gB,KAAK,SAAC+hC,EAAOC,GAmCb,IAlCMC,EAA2BC,QAAAA,oBAA4BH,EAAM12C,MAAMi0C,MAAO0C,EAAM32C,MAAMi0C,OAmC5F,OAlCyB,IAkCrB2C,EAjCOC,QAAAA,oBAA4BF,EAAM32C,MAAMy0C,KAAOkC,EAAM32C,MAAMi0C,MAAOyC,EAAM12C,MAAMy0C,KAAOiC,EAAM12C,MAAMi0C,OAErG2C,IACR7mD,IAAI,SAACwmD,GAmCJ,IAlCMxB,EAAoBC,QAAAA,WAAmBC,QAAAA,SAAiBp2B,QAAAA,WAAmB03B,EAAMv2C,MAAMi0C,OAAQY,EAAS1D,MAAO0D,EAASzD,QACxH8D,EAAkBF,QAAAA,WAAmBC,QAAAA,SAAiBE,QAAAA,cAAsB2B,QAAAA,SAAiBP,EAAMv2C,MAAMi0C,QAASa,EAAO3D,MAAO2D,EAAO1D,QAEvImD,EAAmBgC,EAAMv2C,MAAMi0C,MAC/BO,EAAiB+B,EAAMv2C,MAAMy0C,KAAOF,EAEpCwC,EAA6Bd,EAAgBC,EAAiBzC,gBAEnDsB,EAkCbR,IACAgC,EAlCM/gB,KAAOwhB,QAAAA,oBAA4BzC,EAAYQ,IAqCzDwB,EAlCM/gB,KAAOuhB,EAoCb,IA/BMr4B,EAH2B61B,EAAaQ,EAGJA,EAAcR,EAClD51B,EAHmCu2B,EAAXV,EAGOU,EAAYV,EAE7Ct2C,EAAiB84C,QAAAA,oBAA4Br4B,EAASD,GA4C1D,OA1CK63B,EAAMv2C,MAAMy0C,IAqCbv2C,GAlCU64C,EAgCV74C,EAlCSg4C,EAuCbK,EAlCMr4C,OAASA,EAERq4C,IAGLU,EAAgC,GAChCC,EAAmC,GAqEzC,OAjCAZ,EAlCa7oD,QAAQ,SAACuS,EAAsBjpB,GAmCxC,IAlCuC,IAkCnCmgE,EAlCgBlgE,QAAQgpB,GAAe,CAmCvCk3C,EAlCgBr/D,KAAKmoB,GAoCrB,IAlCMm3C,EAAkCb,EAAa/2D,MAAMxI,EAAQ,GAAGyU,OAAO,SAAA4rD,GAmCzE,OAlCOA,EAAU5hB,MAAQx1B,EAAMw1B,KAAO4hB,EAAUvgB,SAAW72B,EAAM62B,SAqCrE,GAlC4B,EAkCxBsgB,EAlCe78D,OAAY,CAmC3B,IAlCI+8D,EAAoBF,EAAe78D,OAAS,EAoChD0lB,EAlCMtG,KAAS,EAAI29C,EAoCnB,IAlCIC,EAAat3C,EAAMtG,KAAOsG,EAAM62B,OAoCpCsgB,EAlCe1pD,QAAS,SAAA2pD,GAmCpBA,EAlCUvgB,OAASygB,EAmCnBF,EAlCU19C,KAAOsG,EAAMtG,KAmCvB49C,EAlCaF,EAAU19C,KAAO09C,EAAUvgB,SAqC5CqgB,EAlCgBr/D,KAkChCrF,MAAgB0kE,EAlCsBC,GAqC1BF,EAlCUp/D,KAAK,CAmCX8hC,IAAhB,CACoB3Z,GACpB1Z,OAAuB6wD,QA5BZF,EAwCX,SAAAM,aArCCvlC,GAAD,IAACI,EAADJ,EAAAqgC,OAACA,OAAD,IAAAjgC,EAAA,GAAAA,EAAC+gC,EAADnhC,EAAAmhC,SAAC2C,EAAD9jC,EAAA8jC,aAACzjC,EAADL,EAAA6hC,SAACA,OAAD,IAAAxhC,EAAA,GAAAA,EACSggC,IAsCDA,EArCS,IAgDb,IARA,IArCM4B,EAAcb,QAAAA,YAAoBoE,QAAAA,aAAqBrE,GAAW,CAAE2C,aAqC9EA,IApCUrB,EAAYpB,QAAAA,UAAkBoE,QAAAA,WAAmBtE,GAAW,CAAE2C,aAqCxEA,IApCU4B,EAAiC/C,kBAAkB,CAsCrDtC,OAARA,EACQgC,YArCaJ,EAsCbK,UArCWG,IAETb,EAAuB,GACjC+D,EAAA,SAAa78D,GAsCL,IArCMgkC,EAAaC,QAAAA,QAAgBk1B,EAAOn5D,GAsC1C,IArCK+4D,EAASn9B,KAAK,SAAAviC,GAAK,OAAA2qC,EAAKoxB,WAAa/7D,IAAI,CAsC1C,IArCM88D,EAAoBqE,WAAW,CAAEx2B,KAqCnDA,IApCkB84B,EAA6BjD,kBAAkB,CAsCjDtC,OArCQqF,EAsCRrD,YArCax1B,QAAAA,WAAmBC,GAsChCw1B,UArCWwC,QAAAA,SAAiBh4B,KAuChCmyB,EArCI4G,QAAUC,QAAAA,YAAoBh5B,EAAMq0B,GAsCxClC,EArCIoB,OAASuF,EAsCb3G,EArCI8G,WAAaH,EAAUt9D,OAsC3Bs5D,EArCK/7D,KAAKo5D,KAZTn2D,EAAY,EAAGA,EAAIq5D,QAAAA,iBAAyBM,EAAKR,GAAS,EAAGn5D,IAqC1E68D,EArCa78D,GAqDT,IArCMk9D,EAAiCzE,aAAeM,EAASv5D,OACzD+9B,EAAen3B,KAAKK,MAAMqyD,EAAKt5D,OAAS09D,GACxCC,EAAuB,GAsC7B,IArCSn9D,EAAY,EAAGA,EAAIu9B,EAAMv9B,IAsC9Bm9D,EArCWpgE,KAAKiD,EAAIk9D,GAwCxB,MArCO,CAsCHC,WAARA,EACQD,uBAARA,EACQpE,KAARA,GAQA,SAAAsE,WAxCClmC,GAAD,IAACI,EAADJ,EAAAqgC,OAACA,OAAD,IAAAjgC,EAAA,GAAAA,EAAC+gC,EAADnhC,EAAAmhC,SAAC8C,EAADjkC,EAAAikC,aAACpB,EAAD7iC,EAAA6iC,SAACC,EAAD9iC,EAAA8iC,OAACqD,EAADnmC,EAAAmmC,WAACjC,EAADlkC,EAAAkkC,cACS7D,IAyCDA,EAxCS,IA2Cb,IAxCM0C,EAAoBC,QAAAA,WAAmBC,QAAAA,SAAiBp2B,QAAAA,WAAmBs0B,GAAW0B,EAAS1D,MAAO0D,EAASzD,QAC/G8D,EAAkBF,QAAAA,WAAmBC,QAAAA,SAAiBE,QAAAA,cAAsB2B,QAAAA,SAAiB3D,IAAY2B,EAAO3D,MAAO2D,EAAO1D,QAC9HgH,EAAoC,GAEpCC,EAAgCzD,qBAAqBD,kBAAkB,CAyCzEtC,OAxCQA,EAAO7mD,OAAO,SAACwU,GAAyB,OAAAA,EAAOs4C,SAyCvDjE,YAxCaU,EAyCbT,UAxCWY,IACXL,EAAUC,GAAQngC,KAAK,SAAC4jC,EAAuBC,GAyC/C,OAxCOD,EAAOtE,MAAMwE,UAAYD,EAAOvE,MAAMwE,YAC9C1oD,IAAI,SAACiQ,GAyCJ,IAxCMu0C,EAAmBv0C,EAAMi0C,MACzBO,EAAiBx0C,EAAMy0C,KAAOF,EAC9BmE,EAA2BnE,EAAaQ,EACxC4D,EAAmCzD,EAAXV,EACxBuC,EAA6Bd,EAAgBC,EAAiBzC,gBAEhEje,EAAc,EAEDuf,EAwCbR,IACA/e,GAxCOwhB,QAAAA,oBAA4BzC,EAAYQ,IA2CnDvf,GAxCOuhB,EA0CP,IAxCMr4B,EAAkBg6B,EAAkB3D,EAAcR,EAClD51B,EAAgBg6B,EAAezD,EAAYV,EAE7Ct2C,EAAiB84C,QAAAA,oBAA4Br4B,EAASD,GAErD1e,EAAMy0C,IA2CPv2C,GAxCU64C,EAsCV74C,EAxCSg4C,EA+Db,IAlBA,IAxCM3e,EAAiB/B,EAAMt3B,EAEvB06C,EAA4CR,EAAkB5sD,OAAO,SAACqtD,GAyCxE,IAxCMC,EAA2BD,EAAcrjB,IACzCujB,EAA8BF,EAAcrjB,IAAMqjB,EAAc36C,OA0CtE,OAAIs3B,EAxCMujB,GAAuBA,EAAsBxhB,GAEhDuhB,GAAwBtjB,GAAO+B,GAAUwhB,IAQhDtjB,EAAe,EA0CZmjB,EAxC0BliC,KAAK,SAAAmiC,GAAiB,OAAAA,EAAcpjB,OAASA,KAyC1EA,GAxCQ0iB,EA2CZ,IAxCMa,EAAyB,CAyC3Bh5C,MAAZA,EACY9B,OAAZA,EACY2d,MAxCOs8B,EAyCP3iB,IAAZA,EACYC,KAAZA,EACYijB,gBAAZA,EACYC,aAAZA,GAOQ,OA5Ca,EAwCTz6C,GACAk6C,EAxCkBvgE,KAAKmhE,GAGpBA,IACRxtD,OAAO,SAACwtD,GAA2B,OAAkB,EAAlBA,EAAS96C,SAiD/C,MAxCO,CAyCHm0C,OAxCQgG,EAyCRx8B,MAjDkB36B,KAAKwG,IAwC/BlV,MAxC0B0O,KAAUm3D,EAAgBtoD,IAAI,SAACiQ,GAAwB,OAAAA,EAAMy1B,KAAOz1B,EAAM6b,SAkD5Fo9B,aAjDkCtE,kBAAkB,CAyCpDtC,OAxCQA,EAAO7mD,OAAO,SAACwU,GAAyB,OAAAA,EAAMs4C,SAyCtDjE,YAxCax1B,QAAAA,WAAmBk2B,GAyChCT,UAxCWwC,QAAAA,SAAiB5B,MAsDpC,SAAAgE,mBACIlnC,GAWA,IAXJ,IAAMmhC,EAANnhC,EAAAmhC,SAAgB8C,EAAhBjkC,EAAAikC,aAA8BpB,EAA9B7iC,EAAA6iC,SAAwCC,EAAxC9iC,EAAA8iC,OAvCUqE,EAAuB,GAEvBpE,EAAoBC,QAAAA,WAAmBC,QAAAA,SAAiBp2B,QAAAA,WAAmBs0B,GAAW0B,EAAS1D,MAAO0D,EAASzD,QAC/G8D,EAAkBF,QAAAA,WAAmBC,QAAAA,SAAiBE,QAAAA,cAAsB2B,QAAAA,SAAiB3D,IAAY2B,EAAO3D,MAAO2D,EAAO1D,QAC9HgI,EAA0B3F,gBAAkBwC,EAC5CoD,EAAuBx6B,QAAAA,WAAmBs0B,GAEvCr4D,EAAY,EAAGA,EAAI04D,aAAc14D,IAAK,CA6C3C,IADA,IA3CMw+D,EAAiC,GAC9BrsB,EAAY,EAAGA,EAAIgpB,EAAchpB,IAAK,CA4C3C,IA3CMnO,EAAay6B,QAAAA,WAAmBC,QAAAA,SAAiBH,EAAgBv+D,GAAImyC,EAAImsB,GACnErE,GA2CRj2B,GA3CuBA,EAAOo2B,GA4C9BoE,EA3CSzhE,KAAK,CA4CVinC,KAApBA,EACoB26B,QA3Ce,IAANxsB,IAIC,EA2ClBqsB,EA3CSh/D,QA4CT6+D,EA3CMthE,KAAK,CAAEyhE,SA2CzBA,IAII,OA3COH,EA5fXzF,sBAAsBgG,MAAQ,EAC9BhG,sBAAsBiG,SAAW,EACjCjG,sBAAsBkG,SAAW,EACjClG,sBAAsBA,sBAAsBgG,OAAS,QACrDhG,sBAAsBA,sBAAsBiG,UAAY,WACxDjG,sBAAsBA,sBAAsBkG,UAAY,WCExD,IAAAC,6BAAA,WAyEA,SAAAA,EAiBwBzkB,EAAwBod,GAAxBpjE,KAAxBgmD,IAAwBA,EAlFxBhmD,KAAAijE,OAIM,GAANjjE,KAAA0qE,YAKM,GAQN1qE,KAAAojE,OAQM,QAJNpjE,KAAA2qE,gBASM,MAON3qE,KAAA4qE,WAaM,IAAAvpE,KAAAA,aATNrB,KAAA6qE,aAcM,IAAAxpE,KAAAA,aAVNrB,KAAA8qE,kBAeM,IAAAzpE,KAAAA,aAbDrB,KAALqjE,eAe0C,IAAIhiE,KAAAA,aAItCrB,KAAKojE,OAASA,SAMtBqH,EAAAnqE,UAAA04B,SAAA,WAAA,IAAA73B,EAAAnB,KACYA,KAiBKyiD,UAhBLziD,KAiBKopC,oBAAsBppC,KAAKyiD,QAAQp0C,UAAU,WAhB9ClN,EAiBK4pE,aAhBL5pE,EAiBK6kD,IAAI/jD,mBARzBwoE,EAAAnqE,UAAAmwB,YAAA,SAgBKC,IAfOA,EAgBQqzC,UAAYrzC,EAAQg6C,cAf5B1qE,KAgBKgrE,iBAdLt6C,EAgBQqzC,UAAYrzC,EAAQuyC,QAAUvyC,EAAQg6C,cAf9C1qE,KAgBKirE,eATjBR,EAAAnqE,UAAA6B,YAAA,WACYnC,KAgBKopC,qBAfLppC,KAgBKopC,oBAAoB9jC,eAPrCmlE,EAAAnqE,UAAA4qE,aAAA,SAcKrJ,EAAAjxC,GAbG,IAkBIu6C,EAJErJ,EAAesJ,QAAAA,QAAgBvJ,EAAInyB,MACnCyxB,EAAgBkK,QAAAA,SAAiBxJ,EAAInyB,MACrCA,EAAe47B,QAAAA,QAAgBzJ,EAAInyB,MACnC67B,EAAiBC,QAAAA,QAAgBC,QAAAA,SAAiBC,QAAAA,QAAgB96C,EAAMi0C,MAAOn1B,GAAOyxB,GAAQW,GAZpG,GAAIlxC,EAcMy0C,IAAK,CAbX,IAcMsG,EAAsBlE,QAAAA,oBAA4B8D,EAAU36C,EAAMi0C,OAbxEsG,EAcSS,QAAAA,WAAmBh7C,EAAMy0C,IAAKsG,GAZ3C3rE,KAcK8qE,kBAAkB/oE,KAAK,CAAE6uB,MAdtCA,EAc6C26C,SAd7CA,EAcuDJ,OAdvDA,KAiBKV,EAALnqE,UAAA0qE,cAAK,WAXGhrE,KAYK6rE,cAAgBpF,kBAAkB,CAXnC1C,SAYU/jE,KAAK+jE,SAXf2C,aAYc1mE,KAAK0mE,aAXnBjC,SAYUzkE,KAAK0qE,eAItBD,EAALnqE,UAAA2qE,YAAK,WAAA,IAAL9pE,EAAAnB,KATQA,KAUK8jE,KAAOqE,aAAa,CATrBlF,OAUQjjE,KAAKijE,OATbc,SAUU/jE,KAAK+jE,SATf2C,aAUc1mE,KAAK0mE,aATnBjC,SAUUzkE,KAAK0qE,cARf1qE,KAUK8rE,aATL9rE,KAUK8jE,KAAKU,KAAKnmD,QAAQ,SAAAwjD,GAAO,OAAA1gE,EAAK2qE,YAAYjK,MAItD4I,EAALnqE,UAAAyqE,WAAK,WAPG/qE,KAQKgrE,gBAPLhrE,KAQKirE,cAPLjrE,KAQKqjE,eAAethE,KAAK/B,KAAK+jE,aAtKtC,GAwKO0G,6BAAPloE,WAA2C,CAP3C,CAQE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAPrBC,SAQU,sBAPVuwB,SAQU,k6BA4Bbs5C,6BAAD3mE,eAAC,WAAA,MAAA,CALD,CAACrD,KAAMgC,KAAAA,mBACP,CAAChC,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBAQ/CwI,6BAAP1mE,eAAgE,CALhEggE,SAMY,CAAA,CAAGtjE,KAAMK,KAAAA,QALrBmiE,OAMU,CAAA,CAAGxiE,KAAMK,KAAAA,QALnB4pE,YAMe,CAAA,CAAGjqE,KAAMK,KAAAA,QALxBgrE,YAMe,CAAA,CAAGrrE,KAAMK,KAAAA,QALxB2hD,QAMW,CAAA,CAAGhiD,KAAMK,KAAAA,QALpBsiE,OAMU,CAAA,CAAG3iE,KAAMK,KAAAA,QALnB6pE,gBAMmB,CAAA,CAAGlqE,KAAMK,KAAAA,QAL5B4lE,aAMgB,CAAA,CAAGjmE,KAAMK,KAAAA,QALzBirE,eAMkB,CAAA,CAAGtrE,KAAMK,KAAAA,QAL3BkrE,aAMgB,CAAA,CAAGvrE,KAAMK,KAAAA,QALzB8pE,WAMc,CAAA,CAAGnqE,KAAMkC,KAAAA,SALvBkoE,aAMgB,CAAA,CAAGpqE,KAAMkC,KAAAA,SALzBmoE,kBAMqB,CAAA,CAAGrqE,KAAMkC,KAAAA,SAL9B0gE,eAMkB,CAAA,CAAG5iE,KAAMkC,KAAAA,UCrO3B,IAAAspE,+BAAA,WAAA,SAAAA,IAWAjsE,KAAAqjE,eAGM,IAAAhiE,KAAAA,oBACN4qE,EAAA3rE,UAAA4rE,UAAA,WACQlsE,KACKqjE,eAAethE,KAAKoqE,QAAAA,UAAkBnsE,KAAK+jE,SAAU,KAIlEkI,EAAA3rE,UAAA8rE,UAAA,WACQpsE,KADKqjE,eAAethE,KAAK8hE,QAAAA,UAAkB7jE,KAAK+jE,SAAU,OArBlE,GAwBOkI,+BAAP1pE,WAA2C,CAE3C,CADE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAErBC,SADU,6BAEVuwB,SADU,8/BA6Bb86C,+BAADnoE,eAAC,WAAA,MAAA,IAEMmoE,+BAAPloE,eAAgE,CAIhEggE,SAHY,CAAA,CAAGtjE,KAAMK,KAAAA,QAIrB0jE,KAHQ,CAAA,CAAG/jE,KAAMK,KAAAA,QAIjBsiE,OAHU,CAAA,CAAG3iE,KAAMK,KAAAA,QAInBoiE,eAHkB,CAAA,CAAGziE,KAAMK,KAAAA,QAI3BuiE,eAHkB,CAAA,CAAG5iE,KAAMkC,KAAAA,UChE3B,IAAA0pE,4BAAA,WAAA,SAAAA,IAUKrsE,KAAL6qE,aAE4D,IAAIxpE,KAAAA,oBAEhElB,OAAAC,eAAKisE,EAAL/rE,UAAA,WAAA,CAAAmD,IAAA,WACQ,OAAKzD,KAAK6hE,IAGH7hE,KAAK6hE,IAAIoB,OAAO7mD,OAAO,SAACkwD,GAC3B,OAAOA,EAAKC,WAAajI,sBAAsBiG,WAHxC,oCASnBpqE,OAAAC,eAFKisE,EAEL/rE,UAAA,WAAA,CAAAmD,IAAA,WACQ,OAFKzD,KAAK6hE,IAGH7hE,KAAK6hE,IAAIoB,OAAO7mD,OAAO,SAACkwD,GAG3B,OAFOA,EAAKC,WAAajI,sBAAsBkG,WAHxC,oCAWnBrqE,OAAAC,eAJKisE,EAIL/rE,UAAA,SAAA,CAAAmD,IAAA,WACQ,OAJKzD,KAAK6hE,IAGH7hE,KAAK6hE,IAAIoB,OAAO7mD,OAAO,SAACkwD,GAK3B,OAJOA,EAAKC,WAAajI,sBAAsBgG,QAHxC,sCAlCnB,GAwCO+B,4BAAP9pE,WAA2C,CAK3C,CAJE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAKrBC,SAJU,0BAKVuwB,SAJU,4iCAkCVvtB,KAJM,CAKF+0D,UAJW,qDAKX6T,gCAJiC,kBAKjCC,gCAJiC,kBAKjCC,wBAJyB,aAKzBC,yBAJ0B,cAK1BC,0BAJ2B,eAK3BC,2BAJ4B,gBAK5BC,4BAJ6B,cAK7BC,6BAJ8B,eAK9BC,8BAJ+B,wBAK/BC,0BAJ2B,2BAKlCZ,4BAADvoE,eAAC,WAAA,MAAA,IAEMuoE,4BAAPtoE,eAAgE,CAOhE89D,IANO,CAAA,CAAGphE,KAAMK,KAAAA,QAOhBsiE,OANU,CAAA,CAAG3iE,KAAMK,KAAAA,QAOnB6pE,gBANmB,CAAA,CAAGlqE,KAAMK,KAAAA,QAO5BoiE,eANkB,CAAA,CAAGziE,KAAMK,KAAAA,QAO3B+pE,aANgB,CAAA,CAAGpqE,KAAMkC,KAAAA,UCtEzB,IACCuqE,eAAA,GAcDC,4BAAA,WAuHA,SAAAA,EAwBwBnnB,EAAwBod,GAAxBpjE,KAAxBgmD,IAAwBA,EAvIxBhmD,KAAAijE,OAKM,GADNjjE,KAAA0qE,YAMM,GAMN1qE,KAAA2qE,gBASM,SAQN3qE,KAAAotE,UAaM,OATNptE,KAAA6mE,aAaM,EATN7mE,KAAAqtE,aAcM,EAVNrtE,KAAAstE,eAeM,EAXNttE,KAAAutE,WAgBM,GAZNvtE,KAAAwtE,aAiBM,GATNxtE,KAAAytE,mBAiBM,IAAApsE,KAAAA,aAbNrB,KAAA4qE,WAiBM,IAAAvpE,KAAAA,aAbNrB,KAAA6qE,aAkBM,IAAAxpE,KAAAA,aAdNrB,KAAA8qE,kBAmBM,IAAAzpE,KAAAA,aAXNrB,KAAA+pE,MAoBK,GAhBL/pE,KAAA6nE,UAqBK,GAMG7nE,KAAKojE,OAASA,SAMtB+J,EAAA7sE,UAAA04B,SAAA,WAAA,IAAA73B,EAAAnB,KACYA,KAwBKyiD,UAvBLziD,KAwBKopC,oBAAsBppC,KAAKyiD,QAAQp0C,UAAU,WAvB9ClN,EAwBK4pE,aAvBL5pE,EAwBK6kD,IAAIpd,oBAfzBukC,EAAA7sE,UAAAmwB,YAAA,SAuBKC,IArBOA,EAuBQqzC,UAAYrzC,EAAQg6C,cAtB5B1qE,KAuBKgrE,iBApBLt6C,EAuBQuyC,QAAUvyC,EAAQqzC,UAAYrzC,EAAQg6C,cAtB9C1qE,KAuBKirE,eAnBLv6C,EAuBQqzC,UAtBRrzC,EAuBQ28C,cAtBR38C,EAuBQ48C,gBAtBR58C,EAuBQ68C,YAtBR78C,EAuBQ88C,eArBRxtE,KAuBK0tE,mBAfjBP,EAAA7sE,UAAA6B,YAAA,WACYnC,KAuBKopC,qBAtBLppC,KAuBKopC,oBAAoB9jC,eAhBrC6nE,EAAA7sE,UAAAqtE,kBAAA,SAwFKC,GAvFG,OAwFO97D,KAAKK,MAAMy7D,EAAkBhmB,YAAc5nD,KAAKwkE,KAAKt5D,SAG/DiiE,EAAL7sE,UAAA0qE,cAAK,WArFGhrE,KAsFKwkE,KAAOiC,kBAAkB,CArF1B1C,SAsFU/jE,KAAK+jE,SArFf2C,aAsFc1mE,KAAK0mE,aArFnBjC,SAsFUzkE,KAAK0qE,eAItByC,EAAL7sE,UAAA2qE,YAAK,WAnFGjrE,KAoFK6nE,UAAYjB,YAAY,CAnFzB3D,OAoFQjjE,KAAKijE,OAnFbc,SAoFU/jE,KAAK+jE,SAnFf2C,aAoFc1mE,KAAK0mE,aAnFnBjC,SAoFUzkE,KAAK0qE,YAnFf7D,aAoFc7mE,KAAK6mE,aAnFnBC,cAoFeoG,eAnFfzH,SAoFU,CAnFN1D,KAoFM/hE,KAAKqtE,aAnFXrL,OAoFQhiE,KAAKstE,gBAlFjB5H,OAoFQ,CAnFJ3D,KAoFM/hE,KAAKutE,WAnFXvL,OAoFQhiE,KAAKwtE,iBAMxBL,EAAL7sE,UAAAotE,gBAAK,WAjFG1tE,KAkFK+pE,MAAQD,mBAAmB,CAjF5B/F,SAkFU/jE,KAAK+jE,SAjFf8C,aAkFc7mE,KAAK6mE,aAjFnBpB,SAkFU,CAjFN1D,KAkFM/hE,KAAKqtE,aAjFXrL,OAkFQhiE,KAAKstE,gBAhFjB5H,OAkFQ,CAjFJ3D,KAkFM/hE,KAAKutE,WAjFXvL,OAkFQhiE,KAAKwtE,iBAUxBL,EAAL7sE,UAAAyqE,WAAK,WA/EG/qE,KAgFKgrE,gBA/ELhrE,KAgFK0tE,kBA/EL1tE,KAgFKirE,iBA5Tb,GA8TOkC,4BAAP5qE,WAA2C,CA/E3C,CAgFE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA/ErBC,SAgFU,qBA/EVuwB,SAgFU,m6CAuCbg8C,4BAADrpE,eAAC,WAAA,MAAA,CA7ED,CAACrD,KAAMgC,KAAAA,mBACP,CAAChC,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBAgF/CkL,4BAAPppE,eAAgE,CA7EhEggE,SA8EY,CAAA,CAAGtjE,KAAMK,KAAAA,QA7ErBmiE,OA8EU,CAAA,CAAGxiE,KAAMK,KAAAA,QA7EnB4pE,YA8Ee,CAAA,CAAGjqE,KAAMK,KAAAA,QA7ExB2hD,QA8EW,CAAA,CAAGhiD,KAAMK,KAAAA,QA7EpBsiE,OA8EU,CAAA,CAAG3iE,KAAMK,KAAAA,QA7EnB6pE,gBA8EmB,CAAA,CAAGlqE,KAAMK,KAAAA,QA7E5B4lE,aA8EgB,CAAA,CAAGjmE,KAAMK,KAAAA,QA7EzBirE,eA8EkB,CAAA,CAAGtrE,KAAMK,KAAAA,QA7E3B+sE,cA8EiB,CAAA,CAAGptE,KAAMK,KAAAA,QA7E1BssE,UA8Ea,CAAA,CAAG3sE,KAAMK,KAAAA,QA7EtB+lE,aA8EgB,CAAA,CAAGpmE,KAAMK,KAAAA,QA7EzBusE,aA8EgB,CAAA,CAAG5sE,KAAMK,KAAAA,QA7EzBwsE,eA8EkB,CAAA,CAAG7sE,KAAMK,KAAAA,QA7E3BysE,WA8Ec,CAAA,CAAG9sE,KAAMK,KAAAA,QA7EvB0sE,aA8EgB,CAAA,CAAG/sE,KAAMK,KAAAA,QA7EzBgtE,oBA8EuB,CAAA,CAAGrtE,KAAMK,KAAAA,QA7EhC2sE,mBA8EsB,CAAA,CAAGhtE,KAAMkC,KAAAA,SA7E/BioE,WA8Ec,CAAA,CAAGnqE,KAAMkC,KAAAA,SA7EvBkoE,aA8EgB,CAAA,CAAGpqE,KAAMkC,KAAAA,SA7EzBmoE,kBA8EqB,CAAA,CAAGrqE,KAAMkC,KAAAA,UCza9B,IAAAorE,8BAAA,WAQK/tE,KAAL4qE,WAEgD,IAAIvpE,KAAAA,aAA/CrB,KAALkrE,aAE4E,IAAI7pE,KAAAA,cAEzE0sE,8BAAPxrE,WAA2C,CAD3C,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADrBC,SAEU,4BADVuwB,SAEU,iiCA6Bb48C,8BAADjqE,eAAC,WAAA,MAAA,IAEMiqE,8BAAPhqE,eAAgE,CAChEygE,KAAQ,CAAA,CAAG/jE,KAAMK,KAAAA,QACjBsiE,OAAU,CAAA,CAAG3iE,KAAMK,KAAAA,QACnBoiE,eAAkB,CAAA,CAAGziE,KAAMK,KAAAA,QAC3B8pE,WAAc,CAAA,CAAGnqE,KAAMkC,KAAAA,SACvBuoE,aAAgB,CAAA,CAAGzqE,KAAMkC,KAAAA,UCrDzB,IAAAqrE,6BAAA,WAQKhuE,KAAL6qE,aAEuC,IAAIxpE,KAAAA,cAEpC2sE,6BAAPzrE,WAA2C,CAD3C,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADrBC,SAEU,2BADVuwB,SAEU,y6BAuBb68C,6BAADlqE,eAAC,WAAA,MAAA,IAEMkqE,6BAAPjqE,eAAgE,CAChEkqE,UAAa,CAAA,CAAGxtE,KAAMK,KAAAA,QACtB6pE,gBAAmB,CAAA,CAAGlqE,KAAMK,KAAAA,QAC5BoiE,eAAkB,CAAA,CAAGziE,KAAMK,KAAAA,QAC3B+pE,aAAgB,CAAA,CAAGpqE,KAAMkC,KAAAA,UClBzB,IAMCuqE,iBAAA,GASDgB,2BAAA,WAmHA,SAAAA,EAkCwBloB,EAAwBod,GAAxBpjE,KAAxBgmD,IAAwBA,EA7IxBhmD,KAAAijE,OAWM,GAPNjjE,KAAA6mE,aAYM,EARN7mE,KAAAqtE,aAaM,EATNrtE,KAAAstE,eAcM,EAVNttE,KAAAutE,WAeM,GAXNvtE,KAAAwtE,aAgBM,GAZNxtE,KAAA+oE,WAiBM,IAAN/oE,KAAAmuE,cAqBM,GAjBNnuE,KAAA2qE,gBAsBM,MANN3qE,KAAA6qE,aA0BM,IAAAxpE,KAAAA,aAtBNrB,KAAAytE,mBA2BM,IAAApsE,KAAAA,aAvBNrB,KAAA8qE,kBA4BM,IAAAzpE,KAAAA,aAxBNrB,KAAA+pE,MA6BK,GArBL/pE,KAAAysC,MA+BK,EAJGzsC,KAAKojE,OAASA,SAMtB8K,EAAA5tE,UAAA04B,SAAA,WAAA,IAAA73B,EAAAnB,KACYA,KAkCKyiD,UAjCLziD,KAkCKopC,oBAAsBppC,KAAKyiD,QAAQp0C,UAAU,WAjC9ClN,EAkCK4pE,aAjCL5pE,EAkCK6kD,IAAIpd,oBA1BzBslC,EAAA5tE,UAAA6B,YAAA,WACYnC,KAkCKopC,qBAjCLppC,KAkCKopC,oBAAoB9jC,eA1BrC4oE,EAAA5tE,UAAAmwB,YAAA,SAiCKC,IA9BOA,EAiCQqzC,UAhCRrzC,EAiCQ28C,cAhCR38C,EAiCQ48C,gBAhCR58C,EAiCQ68C,YAhCR78C,EAiCQ88C,eA/BRxtE,KAiCK0tE,mBA7BLh9C,EAiCQqzC,UAhCRrzC,EAiCQuyC,QAhCRvyC,EAiCQ28C,cAhCR38C,EAiCQ48C,gBAhCR58C,EAiCQ68C,YAhCR78C,EAiCQ88C,cAhCR98C,EAiCQq4C,aA/BR/oE,KAiCKouE,eA6EZF,EAAL5tE,UAAAotE,gBAAK,WAAA,IAALvsE,EAAAnB,KAtGQA,KAuGK+pE,MAAQD,mBAAmB,CAtG5B/F,SAuGU/jE,KAAK+jE,SAtGf8C,aAuGc7mE,KAAK6mE,aAtGnBpB,SAuGU,CAtGN1D,KAuGM/hE,KAAKqtE,aAtGXrL,OAuGQhiE,KAAKstE,gBArGjB5H,OAuGQ,CAtGJ3D,KAuGM/hE,KAAKutE,WAtGXvL,OAuGQhiE,KAAKwtE,gBApGjBxtE,KAuGKquE,qBAtGLruE,KAuGK+pE,MAAM1rD,QAAQ,SAAA0jD,GAtGfA,EAuGKmI,SAAS7rD,QAAQ,SAAAiwD,GAAW,OAAAntE,EAAKktE,oBAAoBC,QAKrEJ,EAAL5tE,UAAA8tE,YAAK,WApGGpuE,KAqGK8jE,KAAOgF,WAAW,CApGnB7F,OAqGQjjE,KAAKijE,OApGbc,SAqGU/jE,KAAK+jE,SApGf8C,aAqGc7mE,KAAK6mE,aApGnBpB,SAqGU,CApGN1D,KAqGM/hE,KAAKqtE,aApGXrL,OAqGQhiE,KAAKstE,gBAnGjB5H,OAqGQ,CApGJ3D,KAqGM/hE,KAAKutE,WApGXvL,OAqGQhiE,KAAKwtE,cAnGjBzE,WAqGY/oE,KAAK+oE,WApGjBjC,cAqGeoG,oBAItBgB,EAAL5tE,UAAAyqE,WAAK,WAlGG/qE,KAmGK0tE,kBAlGL1tE,KAmGKouE,iBA3Tb,GA8TOF,2BAAP3rE,WAA2C,CAlG3C,CAmGE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAlGrBC,SAmGU,oBAlGVuwB,SAmGU,q9CAyCb+8C,2BAADpqE,eAAC,WAAA,MAAA,CAhGD,CAACrD,KAAMgC,KAAAA,mBACP,CAAChC,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBAmG/CiM,2BAAPnqE,eAAgE,CAhGhEggE,SAiGY,CAAA,CAAGtjE,KAAMK,KAAAA,QAhGrBmiE,OAiGU,CAAA,CAAGxiE,KAAMK,KAAAA,QAhGnB+lE,aAiGgB,CAAA,CAAGpmE,KAAMK,KAAAA,QAhGzBusE,aAiGgB,CAAA,CAAG5sE,KAAMK,KAAAA,QAhGzBwsE,eAiGkB,CAAA,CAAG7sE,KAAMK,KAAAA,QAhG3BysE,WAiGc,CAAA,CAAG9sE,KAAMK,KAAAA,QAhGvB0sE,aAiGgB,CAAA,CAAG/sE,KAAMK,KAAAA,QAhGzBioE,WAiGc,CAAA,CAAGtoE,KAAMK,KAAAA,QAhGvB2hD,QAiGW,CAAA,CAAGhiD,KAAMK,KAAAA,QAhGpBsiE,OAiGU,CAAA,CAAG3iE,KAAMK,KAAAA,QAhGnButE,oBAiGuB,CAAA,CAAG5tE,KAAMK,KAAAA,QAhGhCqtE,cAiGiB,CAAA,CAAG1tE,KAAMK,KAAAA,QAhG1B6pE,gBAiGmB,CAAA,CAAGlqE,KAAMK,KAAAA,QAhG5BgtE,oBAiGuB,CAAA,CAAGrtE,KAAMK,KAAAA,QAhGhCytE,oBAiGuB,CAAA,CAAG9tE,KAAMK,KAAAA,QAhGhC+sE,cAiGiB,CAAA,CAAGptE,KAAMK,KAAAA,QAhG1B+pE,aAiGgB,CAAA,CAAGpqE,KAAMkC,KAAAA,SAhGzB8qE,mBAiGsB,CAAA,CAAGhtE,KAAMkC,KAAAA,SAhG/BmoE,kBAiGqB,CAAA,CAAGrqE,KAAMkC,KAAAA,UC1a9B,IAAA6rE,4BAAA,WAQKxuE,KAAL6qE,aAEuC,IAAIxpE,KAAAA,cAEpCmtE,4BAAPjsE,WAA2C,CAD3C,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADrBC,SAEU,0BADVuwB,SAEU,4hCA0Bbq9C,4BAAD1qE,eAAC,WAAA,MAAA,IAEM0qE,4BAAPzqE,eAAgE,CAChE6lE,SAAY,CAAA,CAAGnpE,KAAMK,KAAAA,QACrB6pE,gBAAmB,CAAA,CAAGlqE,KAAMK,KAAAA,QAC5BoiE,eAAkB,CAAA,CAAGziE,KAAMK,KAAAA,QAC3B+pE,aAAgB,CAAA,CAAGpqE,KAAMkC,KAAAA,UC/CzB,IAAA8rE,+BAAA,aAUOA,+BAAPlsE,WAA2C,CAD3C,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADrBC,SAEU,iCADVuwB,SAEU,ojBAuBbs9C,+BAAD3qE,eAAC,WAAA,MAAA,IAEM2qE,+BAAP1qE,eAAgE,CAChEuqE,QAAW,CAAA,CAAG7tE,KAAMK,KAAAA,QACpBsiE,OAAU,CAAA,CAAG3iE,KAAMK,KAAAA,QACnBoiE,eAAkB,CAAA,CAAGziE,KAAMK,KAAAA,SCzC3B,IAAA4tE,+BAAA,WAMK1uE,KAAL6qE,aAEuC,IAAIxpE,KAAAA,cAEpCqtE,+BAAPnsE,WAA2C,CAD3C,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADrBC,SAEU,8BADVuwB,SAEU,2tBA0Bbu9C,+BAAD5qE,eAAC,WAAA,MAAA,IAEM4qE,+BAAP3qE,eAAgE,CAChE6sB,MAAS,CAAA,CAAGnwB,KAAMK,KAAAA,QAClBoiE,eAAkB,CAAA,CAAGziE,KAAMK,KAAAA,QAC3B+pE,aAAgB,CAAA,CAAGpqE,KAAMkC,KAAAA,UC7CzB,IAAAgsE,YAAA,WAIA,SAAAA,EAD0BvL,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAS1BuL,EAAAruE,UAAAouB,UAAA,SARKghB,EAAA0zB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,SACe,IAAItO,KAAKC,eAAe6C,EAAQ,CAAEpC,QAAS4N,IAAUzxC,OAAOuS,MAL3E,GAOOi/B,YAAPpsE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,cAG5ByzD,YAAD7qE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCtBtD,IAAA4M,UAAA,WAIA,SAAAA,EAD0BzL,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAS1ByL,EAAAvuE,UAAAouB,UAAA,SARKghB,EAAA0zB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,QACe,IAAItO,KAAKC,eAAe6C,EAAQ,CAAEjC,MAAOyN,IAAUzxC,OAAOuS,MALzE,GAOOm/B,UAAPtsE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,YAG5B2zD,UAAD/qE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCtBtD,IAAA6M,aAAA,WAIA,SAAAA,EAD0B1L,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAS1B0L,EAAAxuE,UAAAouB,UAAA,SARKghB,EAAA0zB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,SACe,IAAItO,KAAKC,eAAe6C,EAAQ,CAAEjC,MAAOyN,EAAQ/M,IAAK,YAAa1kC,OAAOuS,MALzF,GAOOo/B,aAAPvsE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,eAG5B4zD,aAADhrE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCtBtD,IAAA8M,SAAA,WAIA,SAAAA,EAD0B3L,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAS1B2L,EAAAzuE,UAAAouB,UAAA,SARKghB,EAAA0zB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,WACe,IAAItO,KAAKC,eAAe6C,EAAQ,CAAEtB,KAAM8M,IAAUzxC,OAAOuS,MALxE,GAOOq/B,SAAPxsE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,WAG5B6zD,SAADjrE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCtBtD,IAAA+M,UAAA,WAIA,SAAAA,EAD0B5L,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAS1B4L,EAAA1uE,UAAAouB,UAAA,SARKghB,EAAA0zB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,WACe,IAAItO,KAAKC,eAAe6C,EAAQ,CAAErB,KAAM6M,IAAUzxC,OAAOuS,MALxE,GAOOs/B,UAAPzsE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,YAG5B8zD,UAADlrE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCtBtD,IAAAgN,eAAA,WAIA,SAAAA,EAD0B7L,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAS1B6L,EAAA3uE,UAAAouB,UAAA,SARKghB,EAAA0zB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,WACe,IAAItO,KAAKC,eAAe6C,EAAQ,CAAEvB,IAAK+M,IAAUzxC,OAAOuS,MALvE,GAOOu/B,eAAP1sE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,iBAG5B+zD,eAADnrE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCtBtD,IAAAiN,qBAAA,WAIA,SAAAA,EAD0B9L,QAA1B,IAAAA,IAA0BA,EAA1B,SAA0BpjE,KAA1BojE,OAA0BA,SAU1B8L,EAAA5uE,UAAAouB,UAAA,SARKygD,EAAAvK,EAAAxB,EAAAwL,GASG,YATR,IAAAxL,IAAKA,EAAApjE,KAAAojE,aAAL,IAAAwL,IAAKA,EAAL,SASYO,EARU9N,aAAeuD,EAAYvD,WAC9B,IAAIf,KAAKC,eAAe6C,EAAQ,CAAEvB,IAAK,YAAa1kC,OAAOgyC,GAG/D,IAAI7O,KAAKC,eAAe6C,EAAQ,CAAEjC,MAAOyN,EAAQ/M,IAAK,YAAa1kC,OAAOgyC,MAVzF,GAaOD,qBAAP3sE,WAA2C,CAS3C,CARE9B,KAAM2yC,KAAAA,KAAMzyC,KAAM,CAAA,CAAGua,KAAM,uBAG5Bg0D,qBAADprE,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBCGtD,IAAAlS,mBAAA,aAGOA,mBAAPxtD,WAA2C,CAM3C,CALE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CAMpBmzB,QALS,CAAAC,OAAAA,aAAe8D,iBAAkB0d,kBAAmBsa,iBAM7D9sD,aALc,CAMVggE,2BACA0H,6BACAwB,+BACAI,4BACAc,4BACAY,8BACAC,6BACAE,2BACAM,4BACAC,+BACAC,+BACAvL,8BACAwL,YACAM,eACAJ,UACAC,aACAC,SACAC,UACAE,sBAEJpsE,QALS,CAMLigE,2BACA0H,6BACAwB,+BACAI,4BACAc,4BACAY,8BACAC,6BACAE,2BACAM,4BACAC,+BACAC,+BACAvL,8BACAwL,YACAM,eACAJ,UACAC,aACAC,SACAC,UACAE,0BAAPnf,mBAADjsD,eAAC,WAAA,MAAA,ICjFD,IAAAsrE,iBAAA,WA+BA,SAAAA,EAJsBC,GAAArvE,KAAtBqvE,UAAsBA,EAxBnBrvE,KAAHo1B,MACmB,SAAhBp1B,KAAHs1B,KACkB,UACft1B,KAAHsvE,aAC0B,EACvBtvE,KAAHuvE,aAC0B,EAOvBvvE,KAAHoB,OAF+B,IAAIC,KAAAA,aAKjCrB,KAAF2D,MAFkB,EAGhB3D,KAAF4uB,SAFqB,EAGnB5uB,KAAFyZ,OAFgB,KAGdzZ,KAAFwvE,UAFsB,SAPtBrvE,OAAAC,eAFGgvE,EAEH9uE,UAAA,UAAA,CAAAoD,IAAA,SAFGy7C,GAGCn/C,KAFKyvE,SAAWzvE,KAAKqvE,UAAUK,wBAAwBvwB,oCAuB3DiwB,EAAA9uE,UAAA04B,SAAA,WALSh5B,KAAKwvE,WAQRxvE,KANK0nD,SAAW,KAOhB1nD,KANKoY,KAAO,KASZpY,KANK0iE,UAAY,OAAA1iE,KAAYs1B,KAO7Bt1B,KANK2vE,WAAa3vE,KAAQo1B,MAMhC,4BACUp1B,KANKsvE,cAOPtvE,KANK2vE,YAAc,eAc3BP,EAAA9uE,UAAAmwB,YAAA,SATGC,GAWC1wB,KATK0iE,UAAY,OAAA1iE,KAAYs1B,KAU7Bt1B,KATK2vE,WAAa3vE,KAAQo1B,MAS9B,4BACQp1B,KATKsvE,cAUPtvE,KATK2vE,YAAc,cAgBzBP,EAAA9uE,UAAAo4B,aAAA,SAZG9H,GACM5wB,KAAKuvE,cAaJ3+C,IACFA,EAZM8O,kBAaN9O,EAZMoC,kBAcJhzB,KAZKyZ,OAaPzZ,KAZKyZ,OAAO8sC,KAAKvmD,MAcjBA,KAZKoB,OAAOW,KAAK,CAAEX,QAAQ,MAoBnCguE,EAAA9uE,UAAA+B,MAAA,SAfGuuB,GAgBKA,IACFA,EAfM8O,kBAgBN9O,EAfMoC,kBAiBJhzB,KAfKyZ,OAgBPzZ,KAfKyZ,OAAO8sC,KAAKvmD,MAiBjBA,KAfKoB,OAAOW,KAAK,CAAEX,QAAQ,OA3EjC,GA8EOguE,iBAAP7sE,WAA2C,CAgB3C,CAfE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAgBvBC,SAfU,aAgBVgD,KAfM,CAgBJ+0D,UAfW,aAgBXiX,eAfgB,OAgBhBC,kBAfmB,UAgBnBC,mBAfoB,WAgBpBv8C,UAfW,wCAiBbpC,SAfU,yqBAqBXi+C,iBAADtrE,eAAC,WAAA,MAAA,CAkBD,CAACrD,KAAMsvE,gBAAAA,gBAfAX,iBAAPrrE,eAAgE,CAkBhEqxB,MAjBS,CAAA,CAAG30B,KAAMK,KAAAA,QAkBlBw0B,KAjBQ,CAAA,CAAG70B,KAAMK,KAAAA,QAkBjBgpD,MAjBS,CAAA,CAAGrpD,KAAMK,KAAAA,QAkBlBwuE,YAjBe,CAAA,CAAG7uE,KAAMK,KAAAA,QAkBxBy5B,KAjBQ,CAAA,CAAG95B,KAAMK,KAAAA,QAkBjByuE,YAjBe,CAAA,CAAG9uE,KAAMK,KAAAA,QAkBxB2X,QAjBW,CAAA,CAAGhY,KAAMK,KAAAA,QAkBpBM,OAjBU,CAAA,CAAGX,KAAMkC,KAAAA,UCpHnB,IAAAqtD,gBAAA,aAEOA,gBAAPztD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,cACThxB,aAAc,CAAAqsE,kBACdtsE,QAAS,CAAAssE,kBACT9jB,gBAAiB,CAAA8jB,sBAIpBpf,gBAADlsD,eAAC,WAAA,MAAA,IChBD,IAAAksE,iBAAA,aAEsCA,iBAAtCztE,WAA0E,CAD1E,CAEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CADvBC,SAEU,gBADVuwB,SAEU,0CAMX6+C,iBAADlsE,eAAC,WAAA,MAAA,IAID,IAAAmsE,mBAAA,aACwCA,mBAAxC1tE,WAA4E,CAU5E,CATE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAUvBC,SATU,QAUVuwB,SATU,0CAMX8+C,mBAADnsE,eAAC,WAAA,MAAA,IAeD,IAAAosE,wBAAA,aANOA,wBAAP3tE,WAA2C,CAqB3C,CApBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAqBvBC,SApBU,2BAqBVuwB,SApBU,mJAQX++C,wBAADpsE,eAAC,WAAA,MAAA,IAEMosE,wBAAPnsE,eAAgE,CAuBhEuxB,KAtBQ,CAAA,CAAG70B,KAAMK,KAAAA,QAuBjB+3D,QAtBW,CAAA,CAAGp4D,KAAMK,KAAAA,QAuBpBoB,SAtBY,CAAA,CAAGzB,KAAMK,KAAAA,SA0BrB,IAAAqvE,oBAAA,WAkBA,SAAAA,IAtCUnwE,KAAVowE,YAAgC,cACrBpwE,KAAXqwE,WAAgC,EAGvBrwE,KAAT64D,QAA2B,iBA4C3B14D,OAAAC,eAzCG+vE,EAyCH7vE,UAAA,QAAA,CAOAmD,IAAA,WACI,OA3COzD,KAAKu0D,QAmChB7wD,IAAA,SAzCG0xB,GA0CCp1B,KAzCKu0D,OAASn/B,EA0Cdp1B,KAzCK64D,QAAoB,UAAVzjC,GAA+B,cAAVA,GAAmC,UAAVA,EAAoBjuB,UAAY,2CAqDjGhH,OAAAC,eA7CG+vE,EA6CH7vE,UAAA,OAAA,CAMAmD,IAAA,WACI,OA/COzD,KAAKo4D,OAwChB10D,IAAA,SA7CG4xB,GA8CCt1B,KA7CKo4D,MAAQ,OAAA9iC,qCAEjB,GAOO66C,oBAAP5tE,WAA2C,CA+C3C,CA9CE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA+CvBC,SA9CU,gBA+CVuwB,SA9CU,2zBA0BXg/C,oBAADrsE,eAAC,WAAA,MAAA,IAEMqsE,oBAAPpsE,eAAgE,CAiDhEqsE,YAhDe,CAAA,CAAG3vE,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,WAiD3C0vE,UAhDa,CAAA,CAAG5vE,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,oBAAwB,CAAEF,KAAMK,KAAAA,QAiDzEgpD,MAhDS,CAAA,CAAGrpD,KAAMK,KAAAA,QAiDlBwvE,SAhDY,CAAA,CAAG7vE,KAAMK,KAAAA,QAiDrBs0B,MAhDS,CAAA,CAAG30B,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,eAAmB,CAAEF,KAAMK,KAAAA,QAiDhEw0B,KAhDQ,CAAA,CAAG70B,KAAMK,KAAAA,SCjHjB,IAAAmvD,iBAAA,aAEuCA,iBAAvC1tD,WAA2E,CAD3E,CAEE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CADpBmzB,QAES,CADLC,OAAAA,aACA8D,kBAEJ90B,aAEc,CADVotE,oBACAD,wBACAD,mBACAD,kBAEJltE,QAES,CADLqtE,oBACAD,wBACAD,mBACAD,sBAOP/f,iBAADnsD,eAAC,WAAA,MAAA,IC7BD,IAAAysE,eAAA,WACA,SAAAA,IACKvwE,KAALo1B,MACqB,GAAhBp1B,KAALgvC,UACyB,GAEnBhvC,KAANqwE,WAC2B,EACvBrwE,KAAJs7B,MACwB,UAIxBi1C,EAAAjwE,UAAAq5B,OAAA,SAFKD,GAauB15B,KAAKs7B,MARfjd,QAAQ,SAAC+gC,GAKPA,EAJE92C,OAON82C,EAJE92C,QAAS,IASnBoxB,EAJKpxB,QAAS,EAKVtI,KAJKwwE,QAKLxwE,KAJKwwE,OAAO7sE,KAAK3D,KAAKs7B,MAAM1zB,QAAQ8xB,IAQxC,IAJIpa,EAAU0+B,SAAS/kB,cAAc,uCAKjC3Z,IACAA,EAJQmP,MAAMyqC,QAAU,IAKxBzoD,WAJW,WAKP6O,EAJQmP,MAAMyqC,QAAU,GACzB,MAWfqX,EAAAjwE,UAAA8E,IAAA,SAPKs0B,GAC6B,IAOtB15B,KAPKs7B,MAAMpwB,SAQXwuB,EAPKpxB,QAAS,GAUlBtI,KAPKs7B,MAAM7yB,KAAKixB,MA7CxB,GA+CO62C,eAAPhuE,WAA2C,CAQ3C,CAPE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAQrBC,SAPU,WAQVuwB,SAPU,gCAIbo/C,eAADzsE,eAAC,WAAA,MAAA,IAEMysE,eAAPxsE,eAAgE,CAUhEqxB,MATS,CAAA,CAAG30B,KAAMK,KAAAA,QAUlBkuC,UATa,CAAA,CAAGvuC,KAAMK,KAAAA,QAUtB0vE,OATU,CAAA,CAAG/vE,KAAMK,KAAAA,QAUnB2vE,OATU,CAAA,CAAGhwE,KAAMK,KAAAA,QAUnBuvE,UATa,CAAA,CAAG5vE,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,oBAAwB,CAAEF,KAAMK,KAAAA,SAazE,IAAA4vE,eAAA,WAiCA,SAAAA,EAlCKC,GA0BA3wE,KAALsI,QAhCuB,EAiClBtI,KAALkC,UAhCyB,EAiCpBlC,KAAL4wE,aAhC2C,IAAIvvE,KAAAA,aAuCvCrB,KAAK2wE,IAAMA,EACX3wE,KAAK2wE,IAAIvrE,IAAIpF,aAKrB0wE,EAAApwE,UAAAq5B,OAAA,WAnCa35B,KAAKkC,WAqCNlC,KApCK4wE,aAAa7uE,MAAK,GAqCvB/B,KApCK2wE,IAAIh3C,OAAO35B,UAP5B,GAUO0wE,eAAPnuE,WAA2C,CAqC3C,CApCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAqCrBC,SApCU,WAqCVgD,KApCM,CAqCF2vB,UApCW,WAqCXkH,iBApCkB,SAqClBo2C,mBApCoB,YAsCxB1/C,SApCU,iJASbu/C,eAAD5sE,eAAC,WAAA,MAAA,CAuCD,CAACrD,KAAM8vE,kBApCAG,eAAP3sE,eAAgE,CAuChEuE,OAtCU,CAAA,CAAG7H,KAAMK,KAAAA,QAuCnBoB,SAtCY,CAAA,CAAGzB,KAAMK,KAAAA,QAuCrB8vE,aAtCgB,CAAA,CAAGnwE,KAAMkC,KAAAA,UA0CzB,IAAAmuE,qBAAA,WA4BA,SAAAA,EA3DKH,GAoDA3wE,KAALsI,QAzDuB,EA0DlBtI,KAALkC,UAzDyB,EAgEjBlC,KAAK2wE,IAAMA,EACX3wE,KAAK2wE,IAAIvrE,IAAIpF,aAKrB8wE,EAAAxwE,UAAAq5B,OAAA,WA5Da35B,KAAKkC,UA8DNlC,KA7DK2wE,IAAIh3C,OAAO35B,SAwB5B,GArBO8wE,qBAAPvuE,WAA2C,CA8D3C,CA7DE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA8DrBC,SA7DU,kBA8DVgD,KA7DM,CA8DF2vB,UA7DW,WA8DXkH,iBA7DkB,SA8DlBo2C,mBA7DoB,YA+DxB1/C,SA7DU,gCAIb2/C,qBAADhtE,eAAC,WAAA,MAAA,CAgED,CAACrD,KAAM8vE,kBA7DAO,qBAAP/sE,eAAgE,CAgEhEuE,OA/DU,CAAA,CAAG7H,KAAMK,KAAAA,QAgEnBoB,SA/DY,CAAA,CAAGzB,KAAMK,KAAAA,SAmErB,IAAAiwE,mBAAA,WA0BA,SAAAA,EAlFKJ,GA2EA3wE,KAALsI,QAhFuB,EAiFlBtI,KAALkC,UAhFyB,EAuFjBlC,KAAK2wE,IAAMA,EACX3wE,KAAK2wE,IAAIvrE,IAAIpF,aAKrB+wE,EAAAzwE,UAAAq5B,OAAA,WAnFa35B,KAAKkC,UAqFNlC,KApFK2wE,IAAIh3C,OAAO35B,SAiD5B,GA9CO+wE,mBAAPxuE,WAA2C,CAqF3C,CApFE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAqFrBC,SApFU,gBAqFVgD,KApFM,CAqFF2vB,UApFW,WAqFXkH,iBApFkB,SAqFlBo2C,mBApFoB,YAsFxB1/C,SApFU,kJASb4/C,mBAADjtE,eAAC,WAAA,MAAA,CAuFD,CAACrD,KAAM8vE,kBApFAQ,mBAAPhtE,eAAgE,CAuFhEuE,OAtFU,CAAA,CAAG7H,KAAMK,KAAAA,QAuFnBoB,SAtFY,CAAA,CAAGzB,KAAMK,KAAAA,SA0FrB,IAAAkwE,qBAAA,WAkBA,SAAAA,IAzEEhxE,KAAFs7B,MA7BwB,UA4GxB01C,EAAA1wE,UAAAqD,KAAA,SA1GKgE,GA2GG,IA1GI+xB,EAAO15B,KAAKs7B,MAAM3zB,GAeF3H,KAAKs7B,MARfjd,QAAQ,SAAC+gC,GA2GPA,EA1GE92C,OA6GN82C,EA1GE92C,QAAS,IA+GnBoxB,EA1GKpxB,QAAS,GAgHtB0oE,EAAA1wE,UAAA8E,IAAA,SA7GKs0B,GAC6B,IA6GtB15B,KA7GKs7B,MAAMpwB,SA8GXwuB,EA7GKpxB,QAAS,GA+GlBtI,KA7GKs7B,MAAM7yB,KAAKixB,MA0DxB,GAxDOs3C,qBAAPzuE,WAA2C,CA8G3C,CA7GE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA8GrBC,SA7GU,kBA8GVuwB,SA7GU,gCAIb6/C,qBAADltE,eAAC,WAAA,MAAA,IAmHD,IAAAmtE,sBAiBA,SA5HKT,GAwHAxwE,KAALsI,QA1HuB,EA+HfkoE,EAAOprE,IAAIpF,OA1HZixE,sBAAP1uE,WAA2C,CA6H3C,CA5HE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA6HrBC,SA5HU,mBA6HVgD,KA5HM,CA6HF62B,iBA5HkB,UA8HtBtJ,SA5HU,gCAIb8/C,sBAADntE,eAAC,WAAA,MAAA,CA+HD,CAACrD,KAAMuwE,wBA5HAC,sBAAPltE,eAAgE,CA+HhEuE,OA9HU,CAAA,CAAG7H,KAAMK,KAAAA,SAkInB,IAAAowE,qBAAA,WAqBA,SAAAA,EA7IKV,GAuIAxwE,KAALsI,QA3IuB,EAkJftI,KAAKsI,OAAStI,KAAKsI,SAAU,EAC7BtI,KAAKwwE,OAASA,SAMtBU,EAAA5wE,UAAAqD,KAAA,SAhJKitB,GAiJG,IACI,IAhJMugD,EAAQnxE,KAAKwwE,OAAOl1C,MAAM1zB,QAAQ5H,KAAKoxE,aACjC,EAgJRD,GACAnxE,KAhJKwwE,OAAO7sE,KAAKwtE,GAEvB,MAAApkE,QA6GV,GAzGOmkE,qBAAP3uE,WAA2C,CAiJ3C,CAhJE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAiJrBC,SAhJU,kBAiJVgD,KAhJM,CAiJF62B,iBAhJkB,SAiJlBlH,UAhJW,gBAkJfpC,SAhJU,gCAIb+/C,qBAADptE,eAAC,WAAA,MAAA,CAmJD,CAACrD,KAAMuwE,wBAhJAE,qBAAPntE,eAAgE,CAmJhEuE,OAlJU,CAAA,CAAG7H,KAAMK,KAAAA,QAmJnBswE,WAlJc,CAAA,CAAG3wE,KAAMK,KAAAA,MAAOH,KAAM,CAAA,UCnSpC,IAAAk6B,cAAA,aAUOA,cAAPt4B,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,cACThxB,aAAc,CACVwtE,eACAG,eACAI,qBACAC,mBACAC,qBACAC,sBACAC,sBAEJpuE,QAAS,CACLytE,eACAG,eACAI,qBACAC,mBACAC,qBACAC,sBACAC,0BAKPr2C,cAAD/2B,eAAC,WAAA,MAAA,IClBD,IAFMutE,qBAAuB,CAG3Bl6C,QAFS6D,MAAAA,kBAGT5D,YAFapB,KAAAA,WAAW,WAAM,OAAAs7C,mBAG9B/wE,OAFO,GAIT+wE,iBAAA,WA4BA,SAAAA,EAHsBhyD,EAA6BwlB,GAA7B9kC,KAAtBsf,QAAsBA,EAA6Btf,KAAnD8kC,IAAmDA,EAvBjD9kC,KAAFkb,MAAiB,IAAI/S,MAAOoqD,UAAUxf,WAMpC/yC,KAAFkC,UAAsB,EAEpBlC,KAAFy0D,SAAgC,IAAIpzD,KAAAA,aAElCrB,KAAFuxE,sBAA6C,IAAIlwE,KAAAA,aAE/CrB,KAAFwxE,sBAA6C,IAAInwE,KAAAA,aAE/CrB,KAAFu8B,SAAyB,GAChBv8B,KAATyxE,WAA2B,KAClBzxE,KAAToG,MAAyB,WAChBpG,KAAT0xE,SAA4B,EAG1B1xE,KAAFy7B,cAA4B,aAC1Bz7B,KAAF07B,eAA6B,oBAI1B41C,EAAHhxE,UAAAqxE,SAAG,SAAAv2C,GAQCp7B,KAPK0xE,QAAUt2C,GAYnBk2C,EAAAhxE,UAAA8vB,mBAAA,WACIpwB,KATKkb,KAAOlb,KAAKkb,MAAQ,GAUzBlb,KATKg8B,gBAeTs1C,EAAAhxE,UAAAmwB,YAAA,SAZGgS,GAaKA,EAZQ,SAAaA,EAAQ,QAAUoU,eAAgBpU,EAAS,QAAUmvC,cAa5E5xE,KAZKkb,KAAOlb,KAAKkb,MAAQ,GAazBlb,KAZKu8B,SAAW,GAahBv8B,KAZKg8B,iBAkBXs1C,EAAAhxE,UAAA07B,aAAA,WAAA,IAAA76B,EAAAnB,KACQA,KAdKs8B,SAAWt8B,KAAKs8B,QAAQpxB,SAAUlL,KAAMs8B,QAAQ,GAAG/3B,QAAU4C,WAAuC,OAA1BnH,KAAKs8B,QAAQ,GAAG/3B,OAejGvE,KAdKu8B,SAAWv8B,KAAKs8B,QAAQ3b,IAAI,SAACxK,GAehC,IAdIujB,EAAO,CAAEn1B,MAAO4R,EAAG4e,MAAO5e,EAAGmnB,QAASn8B,EAAKs8B,QAAUtnB,GAkBzD,OAHIujB,EAdK4D,SAePn8B,EAdK0wE,QAAQn4C,GAERA,IAiBT15B,KAdKu8B,SAAWv8B,KAAKs8B,QAAQ3b,IAAI,SAACxK,GAmBhC,OAJAA,EAdEmnB,QAAUn8B,EAAKs8B,QAAUtnB,EAAE5R,MAezB4R,EAdEmnB,SAeJn8B,EAdK0wE,QAAQ17D,GAERA,IAiBXnW,KAdK8kC,IAAI7iC,gBAqBbqvE,EAAAhxE,UAAAq5B,OAAA,SAlBG/I,EAAA8I,GAwBC,GALI9I,IACFA,EAlBM8O,kBAmBN9O,EAlBMoC,kBAGH0G,EAAKx3B,SAkCRlC,KAlBKwxE,sBAAsBzvE,KAAK23B,OAhBd,CAmBlB,GAAIA,EAlBK4D,QAoBP,YADAt9B,KAlBKuxE,sBAAsBxvE,KAAK23B,GAsBlC,IAlBmB,IAkBzBkJ,EAAA,EAlByBI,EAAAhjC,KAAKu8B,SAALqG,EAkBzBI,EAAA93B,OAlByB03B,IAkBzB,CAAAI,EAAAJ,GAjBetF,SAAU,EAqBnB5D,EAlBK4D,SAAU5D,EAAM4D,QAmBrBt9B,KAlBKy0D,SAAS1yD,KAAK23B,EAAKn1B,OAmBxBvE,KAlBKy7B,cAAc/B,EAAKn1B,OAmBxBvE,KAlBK6xE,QAAQn4C,GAmBb15B,KAlBKy9B,MAAQ/D,EAAKn1B,MAsBpBvE,KAlBK8kC,IAAI7iC,gBAwBbqvE,EAAAhxE,UAAAuxE,QAAA,SArBGn4C,GAsBKA,IACF15B,KArBKyxE,WAAa/3C,EAAKn1B,MAsBvBvE,KArBK8xE,aA2BXR,EAAAhxE,UAAAwxE,SAAA,WAAA,IAAA3wE,EAAAnB,KACIyQ,WAvBW,WAwBT,IAvBIshE,EAAM5wE,EAAKme,QAAQgV,cAAc2E,cAAc,qBAC/Ck8B,EAAKh0D,EAAKme,QAAQgV,cAAc2E,cAAc,gBAwBlD,GAAI84C,GAvBO5c,EAAI,CAwBb,IAvBI6c,EAAY7c,EAAG8c,YACf5rB,EAAe8O,EAAG+c,WAAa/c,EAAGgd,UAwBtCJ,EAvBItjD,MAAMge,MAAQ,QAAAulC,EAuB1B,eACQD,EAvBItjD,MAAM43B,KAAOA,EAuBzB,KACQllD,EAvBKiF,MAAQ,SAwBbjF,EAvBK2jC,IAAI7iC,mBA+BjBqvE,EAAAhxE,UAAAwhC,WAAA,SA1BGrE,GA2BCz9B,KA1BKy9B,MAAQA,EACR7D,QAAQ+N,QAAQlK,IA2BnBz9B,KA1BKg8B,gBAiCXs1C,EAAAhxE,UAAAyhC,iBAAA,SA7BGC,GA8BChiC,KA7BKy7B,cAAgBuG,GAmCzBsvC,EAAAhxE,UAAA2hC,kBAAA,SAhCGD,GAiCChiC,KAhCK07B,eAAiBsG,GAsC1BsvC,EAAAhxE,UAAA8xE,iBAAA,SAnCGlwE,GAoCClC,KAnCKkC,SAAWA,KAlIpB,GAoIOovE,iBAAP/uE,WAA2C,CAoC3C,CAnCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAoCvBC,SAnCU,aAoCVoC,UAnCW,CAAAquE,sBAoCXlgD,SAnCU,64BA6BVO,WAlBY,CAoCVlD,WAAAA,QAnCQ,YAAa,CAoCnBpoB,WAAAA,MACE,WACAqoB,WAAAA,MAnCM,CAoCJyqC,QAnCS,OAsCb9yD,WAAAA,MACE,SACAqoB,WAAAA,MAnCM,CAoCJyqC,QAnCS,OAsCbvqC,WAAAA,WAnCW,qBAAsBC,WAAAA,QAAQ,kBAoCzCD,WAAAA,WAnCW,qBAAsBC,WAAAA,QAAQ,sBAsC7C2C,gBAnCiBC,KAAAA,wBAAwBC,WAI1C6/C,iBAADxtE,eAAC,WAAA,MAAA,CAsCD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMgC,KAAAA,qBAnCA6uE,iBAAPvtE,eAAgE,CAsChEmX,KArCQ,CAAA,CAAGza,KAAMK,KAAAA,QAsCjBw7B,QArCW,CAAA,CAAG77B,KAAMK,KAAAA,QAsCpB67D,SArCY,CAAA,CAAGl8D,KAAMK,KAAAA,QAsCrBoB,SArCY,CAAA,CAAGzB,KAAMK,KAAAA,MAAOH,KAAM,CAAA,qBAsClC8zD,SArCY,CAAA,CAAGh0D,KAAMkC,KAAAA,SAsCrB4uE,sBArCyB,CAAA,CAAG9wE,KAAMkC,KAAAA,SAsClC6uE,sBArCyB,CAAA,CAAG/wE,KAAMkC,KAAAA,UCxMlC,IAAAwyC,gBAAA,aCFA,SAAAk9B,WACI,IAFMC,EAAY,GACZ/hE,EAAe,IAAI2qC,QAAQ,SAACC,EAAciI,GAG5CkvB,EAFKn3B,QAAUA,EAGfm3B,EAFKlvB,OAASA,IAMlB,OAFA7yC,EAFQ4qC,QAAUm3B,EAAKn3B,QAGvB5qC,EAFQ6yC,OAASkvB,EAAKlvB,OACf7yC,EDFJ4kC,gBAAP5yC,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe67B,MAAAA,qBACxB7sD,aAAc,CAAAuuE,kBACdxuE,QAAS,CAAAwuE,sBAIZn8B,gBAADrxC,eAAC,WAAA,MAAA,IEfD,IAAAwhD,eAAA,WAMA,SAAAA,EADKitB,GAEGvyE,KAAKuyE,yBAA2BA,SAQxCjtB,EAAAhlD,UAAAkyE,qBAAA,SANKC,EAAAh2B,EAAAz5C,GAOG,IANI0vE,EAAmB1yE,KAAKuyE,yBAAyB1nB,wBAAwB4nB,GACzEE,EAAiBl2B,EAASk2B,eAC1BC,EAA0BD,EAU9B,OAHI3vE,GANgC,EAAnBA,EAAUkI,SAOvB0nE,EANgBC,KAAAA,mBAAmBC,sBAAsB9vE,EAAW2vE,IAEjEl2B,EAASqO,gBAAgB4nB,EAAkBj2B,EAASvxC,OAAQ0nE,IAc3EttB,EAAAhlD,UAAAyyE,oBAAA,SAXKN,EAAAh2B,EAAAz5C,GAYG,IAXI0vE,EAAmB1yE,KAAKuyE,yBAAyB1nB,wBAAwB4nB,GACzEE,EAAiBl2B,EAASk2B,eAC1BC,EAA0BD,EAe9B,OAHI3vE,GAXgC,EAAnBA,EAAUkI,SAKjC0nE,EAJ0BC,KAAAA,mBAAmBC,sBAAsB9vE,EAAW2vE,IAEjEl2B,EAASqO,gBAAgB4nB,EAAkB,EAAGE,MA1B7D,GA4BOttB,eAAP/iD,WAA2C,CAY3C,CAXE9B,KAAMqjC,KAAAA,aAGPwhB,eAADxhD,eAAC,WAAA,MAAA,CAcD,CAACrD,KAAM0qD,KAAAA,4BC3CP,IAAA6nB,gBAAA,aAeA7tB,aAAA,WAAA,SAAAA,IACInlD,KAAJizE,UAAqB,KACjBjzE,KAAJkzE,WAAsB,KAClBlzE,KAAJi5D,aAAwB,KACpBj5D,KAAJmzE,UAAwB,EACpBnzE,KAAJozE,UAAqBf,kBAIrBlyE,OAAAC,eADK+kD,EACL7kD,UAAA,WAAA,CAAAmD,IAAA,WACQ,OADOzD,KAAKozE,2CAMpBjuB,EAAA7kD,UAAAgC,KAAA,WACQ07C,SAHSq1B,KAAKxiD,UAAUzrB,IAAI,eASpC+/C,EAAA7kD,UAAA+B,MAAA,SANKmM,GAOGwvC,SANSq1B,KAAKxiD,UAAUxrB,OAAO,cAQ3BrF,KANKkzE,YAOLlzE,KANKkzE,WAAWhoB,UAShBlrD,KANKi5D,cAOLj5D,KANKi5D,aAAa/N,UAStBlrD,KANKozE,UAAUj4B,QAAQ3sC,MA3B/B,GA6BO22C,aAAP5iD,WAA2C,CAO3C,CANE9B,KAAMqjC,KAAAA,aAGPqhB,aAADrhD,eAAC,WAAA,MAAA,IAYD,IAAAwvE,0BAAA,WA0BA,SAAAA,EA9BwBC,EAAgCC,GAAhCxzE,KAAxBuzE,SAAwBA,EAAgCvzE,KAAxDwzE,eAAwDA,SAmCxDF,EAAAhzE,UAAAk5C,gBAAA,WAAA,IAAAr4C,EAAAnB,KACQyQ,WAjCW,WAkCPtP,EAjCKoyE,SAASL,WAAa/xE,EAAKqyE,eAAehB,qBAAqBrxE,EAAKoyE,SAASN,UAAW9xE,EAAKsyE,gBAA9G,GAGOH,0BAAP/wE,WAA2C,CAkC3C,CAjCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAkCrBC,SAjCU,uBAkCVuwB,SAjCU,+BAIbmiD,0BAADxvE,eAAC,WAAA,MAAA,CAoCD,CAACrD,KAAM0kD,cACP,CAAC1kD,KAAM6kD,kBAjCAguB,0BAAPvvE,eAAgE,CAoChE0vE,UAnCa,CAAA,CAAGhzE,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,YAAc,CAAEk2B,KAAM9E,KAAAA,sBAuC7D,IAAA2hD,iBAAA,WAsBA,SAAAA,EAvDwBH,GAAAvzE,KAAxBuzE,SAAwBA,SA4DxBG,EAAApzE,UAAA+B,MAAA,WACQrC,KAzDKuzE,SAASlxE,WA6BtB,GA3BOqxE,iBAAPnxE,WAA2C,CA0D3C,CAzDE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA0DrBC,SAzDU,aA0DVuwB,SAzDU,gNAUbuiD,iBAAD5vE,eAAC,WAAA,MAAA,CA4DD,CAACrD,KAAM0kD,gBAIP,IAAAwuB,6BAAA,WAsBA,SAAAA,EAxEwBJ,GAAAvzE,KAAxBuzE,SAAwBA,EAkEnBvzE,KAAL88D,OAtEiC,IAAIz7D,KAAAA,aA6E7BrB,KAAKuzE,SAAWA,SAKxBI,EAAArzE,UAAA+B,MAAA,WACQrC,KA1EK88D,OAAO/6D,OA2EZ/B,KA1EKuzE,SAASlxE,SA+EtBsxE,EAAArzE,UAAA04B,SAAA,WACQ,OAAQh5B,KA5EKS,MA6ET,IA5EK,UA6EDT,KA5EK4zE,SAAW,YA6EhB,MACJ,IA5EK,UA+EL,IA5EK,QA6ED5zE,KA5EK4zE,SAAW,gBA6EhB,MACJ,IA5EK,SA6ED5zE,KA5EK4zE,SAAW,OAAA5zE,KAAYs1B,SA6B5C,GAvBOq+C,6BAAPpxE,WAA2C,CA6E3C,CA5EE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA6ErBC,SA5EU,oBA6EVuwB,SA5EU,qkBAkBbwiD,6BAAD7vE,eAAC,WAAA,MAAA,CA+ED,CAACrD,KAAM0kD,gBA5EAwuB,6BAAP5vE,eAAgE,CA+EhEtD,KA9EQ,CAAA,CAAGA,KAAMK,KAAAA,QA+EjBw0B,KA9EQ,CAAA,CAAG70B,KAAMK,KAAAA,QA+EjBg8D,OA9EU,CAAA,CAAGr8D,KAAMkC,KAAAA,UCvKnB,IAAAutD,gBAAA,aAGOA,gBAAP3tD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe8D,kBACxB90B,aAAc,CAAAuwE,0BAA4BI,iBAAkBC,8BAC5D7wE,QAAS,CAAA4wE,iBAAmBC,8BAC5BroB,gBAAiB,CAAAgoB,+BAIpBpjB,gBAADpsD,eAAC,WAAA,MAAA,IChBD,IAAA+vE,gBAOA,SADuBv0D,GAAAtf,KAAvBsf,QAAuBA,GAChBu0D,gBAAPtxE,WAA2C,CAE3C,CADE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAErBC,SADU,YAEVgD,KADM,CAEFkwE,wBADyB,2BAEzBC,0BAD2B,6BAE3B1b,eADgB,SAGpBlnC,SADU,gDAMb0iD,gBAAD/vE,eAAC,WAAA,MAAA,CAID,CAACrD,KAAMizB,KAAAA,cADAmgD,gBAAP9vE,eAAgE,CAIhEqxB,MAHS,CAAA,CAAG30B,KAAMK,KAAAA,QAIlBkuC,UAHa,CAAA,CAAGvuC,KAAMK,KAAAA,SAOtB,IAAAkzE,oBAAA,WAuBA,SAAAA,EAtBwB10D,GAAAtf,KAAxBsf,QAAwBA,EAkBpBtf,KAAJi0E,QApBsB,SA6BtBD,EAAA1zE,UAAA04B,SAAA,WACQh5B,KAxBKi0E,SAAWj0E,KAAKsf,QAAQgV,cAAc2E,cAAc,kBALjE,GAOO+6C,oBAAPzxE,WAA2C,CAyB3C,CAxBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAyBrBC,SAxBU,iBAyBVuwB,SAxBU,mTAWb6iD,oBAADlwE,eAAC,WAAA,MAAA,CA2BD,CAACrD,KAAMizB,KAAAA,cAIP,IAAAwgD,sBAAA,WAAA,SAAAA,YAuBAA,EAAA5zE,UAAAmwB,YAAA,SA1CKC,GA2CG1wB,KA1CK0iE,UAAY1iE,KAAO,KAAO,OAAAA,KAAYs1B,KAAS,KA2CpDt1B,KA1CKm0E,SAAW,CAAAn0E,KAAM0iE,UAAW1iE,KAAKs1B,OA+C9C4+C,EAAA5zE,UAAA04B,SAAA,WACQh5B,KA5CKywB,iBAab,GAXOyjD,sBAAP3xE,WAA2C,CA6C3C,CA5CE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA6CrBC,SA5CU,cA6CVuwB,SA5CU,uFAMb+iD,sBAADpwE,eAAC,WAAA,MAAA,IAEMowE,sBAAPnwE,eAAgE,CA+ChEuxB,KA9CQ,CAAA,CAAG70B,KAAMK,KAAAA,SAkDjB,IAAAszE,qBAAA,aA5COA,qBAAP7xE,WAA2C,CAgE3C,CA/DE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAgErBC,SA/DU,aAgEVuwB,SA/DU,yDAMbijD,qBAADtwE,eAAC,WAAA,MAAA,IAqED,IAAAuwE,sBAAA,aA/DOA,sBAAP9xE,WAA2C,CA2E3C,CA1EE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA2ErBC,SA1EU,cA2EVuwB,SA1EU,wLAQbkjD,sBAADvwE,eAAC,WAAA,MAAA,IAgFD,IAAAwwE,oBAAA,aA1EOA,oBAAP/xE,WAA2C,CAsF3C,CArFE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAsFrBC,SArFU,kBAsFVuwB,SArFU,gDAMbmjD,oBAADxwE,eAAC,WAAA,MAAA,IA2FD,IAAAywE,uBAAA,aApFOA,uBAAPhyE,WAA2C,CAiG3C,CAhGE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAiGrBC,SAhGU,eAiGVgD,KAhGM,CAiGFkwE,wBAhGyB,2BAiGzBC,0BAhG2B,8BAkG/B5iD,SAhGU,gDAMbojD,uBAADzwE,eAAC,WAAA,MAAA,IAEMywE,uBAAPxwE,eAAgE,CAmGhEirC,UAlGa,CAAA,CAAGvuC,KAAMK,KAAAA,SAsGtB,IAAA0zE,mBAAA,aAhGOA,mBAAPjyE,WAA2C,CAgH3C,CA/GE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAgHrBC,SA/GU,WAgHVuwB,SA/GU,gDAMbqjD,mBAAD1wE,eAAC,WAAA,MAAA,ICvKD,IAAAg3B,eAAA,aAEOA,eAAPv4B,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,cACThxB,aAAc,CAAA8wE,gBAAkBG,oBAAqBE,sBAAuBE,qBAAsBG,uBAAwBC,mBAAoBH,sBAAuBC,qBACrKxxE,QAAS,CAAA+wE,gBAAkBG,oBAAqBE,sBAAuBE,qBAAsBC,sBAAuBE,uBAAwBC,mBAAoBF,yBAInKx5C,eAADh3B,eAAC,WAAA,MAAA,ICPD,IAAA02B,aAAA,WASA,SAAAA,EAHKlb,GAHDtf,KAAJsI,QADsB,EAGlBtI,KAAJy0E,eAD4C,IAAIpzE,KAAAA,aAOxCrB,KAAKsf,QAAUA,EAGftf,KAAK00E,eAAiB10E,KAAKggC,mBAAmB/4B,KAAKjH,MA0C3D,OApCAw6B,EAAAl6B,UAAA6B,YAAA,WACQ8oB,OAHOmO,oBAAoB,QAASp5B,KAAK00E,iBAQ5Cl6C,EAALl6B,UAAAq4B,aAAK,SAAA/H,EAAA+jD,GAKG30E,KAHKsI,OAASsxB,QAAS+N,QAAQgtC,IAA2B30E,KAAMsI,OAAnBqsE,EAKzC30E,KAHKsI,OAIL2iB,OAHOiO,iBAAiB,QAASl5B,KAAK00E,gBAKtCzpD,OAHOmO,oBAAoB,QAASp5B,KAAK00E,gBAM7C10E,KAHKy0E,eAAe1yE,KAAK/B,KAAKsI,SAOjCkyB,EAALl6B,UAAA0/B,mBAAK,SAAApP,GAKG,IAHIgkD,GAAe50E,KAAMsf,QAAQgV,cAAc2L,SAASrP,EAAM6O,QAI1Dz/B,KAHK60E,cAAgBD,IAIrBA,GAHe50E,KAAM60E,aAAavgD,cAAc2L,SAASrP,EAAM6O,SAK/Dm1C,GACA50E,KAHK24B,aAAa/H,GAAO,IAMrC4J,EAxDA,GCRalB,SAAW,CACpBkG,UAAW,EACXs1C,IAAK,EACLC,WAAY,GACZhiD,MAAO,GACPiiD,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,UAAW,GACX97C,IAAK,GACLzG,MAAO,GACPwiD,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,KAAM,GACNC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,GACNC,aAAc,GACdC,OAAQ,GACRx1B,OAAQ,GACRy1B,KAAM,GACNC,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,UAAW,GACXC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,aAAc,GACdC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,SAAU,IACVC,SAAU,IACVC,QAAS,IACTC,UAAW,IACXC,UAAW,IACXC,SAAU,IACVC,aAAc,IACdC,SAAU,IACVC,UAAW,IACXC,WAAY,IACZC,aAAc,IACdC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,OAAQ,IACRC,cAAe,KC3EnBC,kBAAA,WAuBA,SAAAA,EAJG96D,EAAgCwlB,GAlBjC9kC,KAAFq6E,MAFkB,GAGhBr6E,KAAF20B,SAFyB,GAIvB30B,KAAFizD,QAFiB,GAGfjzD,KAAFgR,UAFsB,EAGpBhR,KAAFs6E,WAFuB,EAGrBt6E,KAAFu6E,UAFsB,EAQpBv6E,KAAFwlC,KAFiB,EAGfxlC,KAAFw6E,UAFsB,EAGpBx6E,KAAFy6E,uBAFmC,EAGzBz6E,KAAV06E,kBAAsC,EAQlC16E,KAAKsf,QAAUA,EACftf,KAAK8kC,IAAMA,EACX9kC,KAAK26E,cAAgB36E,KAAK46E,aAAa3zE,KAAKjH,aAKhDo6E,EAAA95E,UAAAu6E,QAAA,WACI,IANIv7D,EAAmBtf,KAAK86E,iBAOxBx7D,GANWA,EAAQ+0B,aAAa,oBAOlC/0B,EANQy7D,gBAAgB,kBAOxBz7D,EANQ8Z,oBAAoB,SAAUp5B,KAAK26E,iBAajDP,EAAA95E,UAAAs6E,aAAA,SATGhqD,GAUC,IATItR,EAAesR,EAAM6O,OAUzB,GAAIngB,EATS,CAUX,IATImoC,EAASnoC,EAAQwoC,aAAexoC,EAAQopC,UACjCppC,EAAQ07D,aAAe,KAU9BvzB,IACF72B,EATM8O,kBACD1/B,KAAKw6E,UAAYx6E,KAAMs6E,WAU1Bt6E,KATKi7E,mBAiBf96E,OAAAC,eAXGg6E,EAWH95E,UAAA,OAAA,CAAAmD,IAAA,WACI,OAXOzD,KAAKq6E,OAiBhB32E,IAAA,SAdGa,GAeKA,IAdUvE,KAAKq6E,OAAuB,IAAdr6E,KAAKwlC,MAe/BxlC,KAdKq6E,MAAQ91E,EAebvE,KAdKwlC,KAAO,EAeZxlC,KAdKizD,QAAU,GAefjzD,KAdKi7E,eAAc,IAgBnBj7E,KAdKk7E,qDAoBXd,EAAA95E,UAAA46E,kBAAA,WACI,GAAIl7E,KAhBKupB,OAAO4xD,qBAAsB,CAiBpC,IAhBI77D,EAAmBtf,KAAK86E,iBAiBxBx7D,IAhBWA,EAAS+0B,aAAa,oBAiBnC/0B,EAhBQ+sB,aAAa,iBAAkB,QAiBvC/sB,EAhBQ4Z,iBAAiB,SAAUl5B,KAAK26E,kBAwBhDP,EAAA95E,UAAA26E,cAAA,SAnBGG,GAmBH,IAAAj6E,EAAAnB,KACIA,KAnBKgR,UAAW,EAoBhBhR,KAnBKs6E,WAAY,EAoBjBt6E,KAnBK8kC,IAAI7iC,eAoBTjC,KAnBKm6B,OAAOn6B,KAAKoqC,MAAM/7B,UAoBrB,SAACw3B,GACKu1C,IACFj6E,EAnBK8xD,QAAU,IAqBb9xD,EAnBKo5E,SAoBPp5E,EAnBK8xD,QAAU9xD,EAAK+tC,WAAWrJ,IAqB/B1kC,EAnBK8xD,QAAU9xD,EAAK8xD,QAAQ/7C,OAAO2uB,GAoBnC1kC,EAnBKq5E,SAAW30C,IAAWA,EAAS36B,QAEZ,EAmBtB/J,EAnBK8xD,QAAQ/nD,QAAc/J,EAAKs5E,wBAAyBt5E,EAAMu5E,kBAoBjEv5E,EAnBKk6E,kBAqBPl6E,EAnBKm5E,WAAY,EAoBjBn5E,EAnBK2jC,IAAI7iC,eAoBTwO,WAnBW,WAoBTtP,EAnBK63D,QAAQsiB,iBAoBbn6E,EAnBK+5E,uBAsBT,SAACnuE,GACC5L,EAnBK6P,SAAW7P,EAAKipC,MAA6B,IAArBjpC,EAAKipC,KAAKl/B,OAoBvC/J,EAnBKm5E,WAAY,EAoBjBn5E,EAnBKq5E,UAAW,EAoBZr5E,EAnBKipC,MAA6B,IAArBjpC,EAAKipC,KAAKl/B,QAoBzB+6B,QAnBQnhC,MAAMiI,GAqBhB5L,EAnBK2jC,IAAI7iC,kBA4BjBm4E,EAAA95E,UAAA65B,OAAA,SAvBGiQ,EAAAyqB,GAuBH,IAAA1zD,EAAAnB,KAtBQs8B,EAAUt8B,KAAKupB,OAAO+S,QAwB1B,OAvBO3xB,WAAAA,WAAW4wE,YAwBhB,IAvBIrgC,QAAQ,SAACC,EAASiI,GAyBpB,GAAI9mB,EAEF,GAAI9a,MAvBMrY,QAAQmzB,GAwBhBn7B,EAvBKo5E,UAAW,EAyBhBp/B,EAvBQh6C,EAAKq6E,eAAel/C,SACvB,GAAA8N,GAAYA,EAAKl/B,SAAU/J,EAAMooB,OAAOkyD,iBAAmB,GAwBhE,GACGn/C,EAvBQ1d,eAAe,WAAa0d,EAAQ1d,eAAe,YAwB5Dze,OAvBOu7E,eAAep/C,GAAS1d,eAAe,QAyB9Czd,EAvBKo5E,UAAW,EAyBhBj+C,EAvBQ9rB,KAAKrP,EAAKq6E,eAAev0E,KAAK9F,IAAOqP,KAAK2qC,EAASiI,OACtD,CAAA,GAAuB,mBAAZ9mB,EAgChB,MADA8mB,EAvBO,kDACD,IAAI/7C,MAAM,kDAehBlG,EAvBKo5E,UAAW,EAyBhBj+C,EAvBQ8N,IAAMjpC,EAAOqkC,MAwBlBh1B,KAvBKrP,EAAKq6E,eAAev0E,KAAK9F,IAwB9BqP,KAvBK2qC,EAASiI,QA8BnB,GAAIjiD,EAvBKooB,OAAOoyD,eAyBd,GADAx6E,EAvBKo5E,UAAW,EAC0B,mBAA/Bp5E,EAAKooB,OAAOoyD,eAA+B,CAwBpD,IAvBIA,EAAiBx6E,EAAKooB,OAAOoyD,eAAevxC,IAAMjpC,EAAOqkC,MAwBzDrlC,OAvBOu7E,eAAeC,GAAgB/8D,eAAe,QAwBvD+8D,EAvBenrE,KAAKrP,EAAKq6E,eAAev0E,KAAK9F,IAAOqP,KAAK2qC,EAASiI,GAyBlEjI,EAvBQh6C,EAAKq6E,eAAeG,SA0B9BxgC,EAvBQh6C,EAAKq6E,eAAer6E,EAAKooB,OAAOoyD,sBA2B1Cv4B,EAvBO,uBA4BXA,EAvBO,aAoCjBg3B,EAAA95E,UAAAk7E,eAAA,SAtBG7kB,GAsBH,IAAAx1D,EAAAnB,KArBQ47E,EAAYjlB,EAAW95B,KAAO85B,EAAW95B,KAAO85B,EAuBpD,OAAIilB,GAtBsC,iBAAjBA,EAAU,IAA2C,iBAAjBA,EAAU,GAQhEA,EAAUj7D,IAAI,SAACkc,GAuBpB,IAtBIt4B,EAAQpD,EAAKooB,OAAO2T,MAAQL,EAAK17B,EAAKooB,OAAO2T,OAASL,EAAKt4B,OAASs4B,EA2BxE,OAJI17B,EAtBKooB,OAAOsyD,cAuBdt3E,EAtBQq1B,QAAQwD,YAAYj8B,EAAKooB,OAAOsyD,YAAah/C,IAGhD,CAAEt4B,MAsBfA,EAtBsBwwB,MADJ5zB,EAAKooB,OAAO4T,OAASvD,QAAQwD,YAAYj8B,EAAKooB,OAAO4T,OAAQN,GAAQA,EAAK9H,OAASsI,OAAO94B,GAC/Es4B,KAsB7BA,KAnCa85B,EAAWh2C,IAAI,SAAC+Y,GAuBrB,MAtBO,CAuBLn1B,MAtBOm1B,EAuBP3E,MAtBO2E,MA2CjB0gD,EAAA95E,UAAA4uC,WAAA,SAtBG+jB,GAsBH,IAAA9xD,EAAAnB,KACI,OAAIA,KAtBKoqC,MAAQ6oB,EACRA,EAAQ72C,OAAO,SAACy1C,GAuBrB,OAtBOx0B,OAAQw0B,EAAM98B,OAuBlBqF,cACAxyB,QAtBQzG,EAAKipC,KAAKhQ,iBAIlB64B,GA8BXmnB,EAAA95E,UAAAw7E,kBAAA,WACI97E,KAtBK+7E,eA8BT3B,EAAA95E,UAAA07E,gBAAA,WACI,IAtBIr0E,EAAQ3H,KAAKizD,QAAQrrD,QAAQ5H,KAAKi8E,aAuBtCj8E,KAtBKi8E,YAAcj8E,KAAKizD,QAAQtrD,EAAQ,EAAI,EAAI3H,KAAKizD,QAAQ/nD,OAAS,EAAIvD,EAAQ,GAuBlF3H,KAtBKk8E,iBAuBLl8E,KAtBK8kC,IAAI7iC,gBA8Bbm4E,EAAA95E,UAAA+6E,gBAAA,WACI,IAtBI1zE,EAAQ3H,KAAKizD,QAAQrrD,QAAQ5H,KAAKi8E,aAuBtCj8E,KAtBKi8E,YAAcj8E,KAAKizD,QAAQtrD,EAAQ,EAAI3H,KAAKizD,QAAQ/nD,OAAS,EAAI,EAAIvD,EAAQ,GAuBlF3H,KAtBKk8E,iBAuBLl8E,KAtBK8kC,IAAI7iC,gBA2Bbm4E,EAAA95E,UAAAw6E,eAAA,WACI,OAxBO96E,KAAKsf,QAAQgV,eA6BxB8lD,EAAA95E,UAAA67E,yBAAA,WACI,IA1BI96C,EAAW,GA8Bf,OAHIrhC,KA1BK86E,mBA2BPz5C,EA1BWrhC,KAAK86E,iBAAiBz5C,UAE5BA,GA+BX+4C,EAAA95E,UAAA47E,eAAA,WACI,IA5BIE,EAAOp8E,KAAK86E,iBAGZphD,EAFQ15B,KAAKm8E,2BACLn8E,KAAKizD,QAAQrrD,QAAQ5H,KAAKi8E,cA8BlCviD,IACF0iD,EA5BK1zB,UAAYhvB,EAAKy4C,YAsC5BiI,EAAA95E,UAAA+7E,aAAA,SA5BGxqB,GA6BC7xD,KA5BKi8E,YAAcpqB,GAqCvBuoB,EAAA95E,UAAAqyC,SAAA,SA5BGkf,GA6BC,OA5BO7xD,KAAKi8E,cAAgBpqB,GAsChCuoB,EAAA95E,UAAAy7E,YAAA,SA5BGnrD,EAAA8I,GA6BK9I,IACFA,EA5BM8O,kBA6BN9O,EA5BMoC,kBA+BR,IA5BI2B,EAAW30B,KAAKi8E,YAsCpB,OATItnD,GA5BY30B,KAAKyZ,SA6BnBzZ,KA5BKyZ,OAAOlV,MAAQowB,EA6BpB30B,KA5BK06E,kBAAmB,EA6BpB16E,KA5BKyZ,OAAO8e,gBA6Bdv4B,KA5BKyZ,OAAO6iE,cA6BZt8E,KA5BK06E,kBAAmB,IA+B5B16E,KA5BK8kC,IAAI7iC,gBACF,GAsCXm4E,EAAA95E,UAAAi8E,aAAA,SA5BGC,GA8BC,OA5BOA,EAAcz5C,QAAQ,yBAA0B,SAsC3Dq3C,EAAA95E,UAAAm8E,UAAA,SA5BG5qB,EAAA3iC,GA8BC,OA5BOA,EAAQ2iC,EAAM9uB,QAAQ,IAAI+vB,OAAO9yD,KAAKu8E,aAAartD,EAAMsV,QAAS,MAAO,uBAAyBqtB,GAkC7GuoB,EAAA95E,UAAAo8E,YAAA,SA/BG7qB,GAgCC,OApBS,IAqBP7xD,KA/BK20B,SAAS4tB,UAAU,SAAC7oB,GAgCvB,IA/BIijD,GAAgB,EAuCpB,OAPIjjD,GA/BQA,EAAKn1B,OAASstD,GAASA,EAAMttD,QAiCrCo4E,EADEjjD,EA/BKn1B,MAAMtE,IAAM4xD,EAAMttD,MAAMtE,GACfy5B,EAAKn1B,MAAMtE,KAAO4xD,EAAMttD,MAAMtE,GAE9By5B,EAAKn1B,QAAUstD,EAAMttD,OAGlCo4E,OA5Vf,GAgWOvC,kBAAPr2E,eAAgE,CAgChEkvD,QA/BW,CAAA,CAAGxyD,KAAMK,KAAAA,SC7WpB,IAAA87E,cAAA,SAAAz5E,GAQA,SAAAy5E,EALKt9D,EAAuC4Y,EAA0B4M,GAKtE,IAAA3jC,EAEQgC,EAFRiB,KAAApE,KAEcsf,EAASwlB,IAFvB9kC,YAL4CmB,EAA5C+2B,OAA4CA,WAD3C10B,UAADo5E,EAAAz5E,GAaAy5E,EAAAt8E,UAAAw6E,eAAA,WACQ,OARO96E,KAAKsf,QAAQgV,cAAc2E,cAAc,gBARxD,CAECmhD,mBAQMwC,cAAPr6E,WAA2C,CAS3C,CARE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CASrBC,SARU,iBASVgD,KARM,CASFC,QARS,UAUbstB,SARU,m/BAuBbyrD,cAAD94E,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBChDP,IAAAo6E,iBAAA,SAAA15E,GAWA,SAAA05E,EALKv9D,EAAuC4Y,EAA0B4M,GAKtE,IAAA3jC,EAEQgC,EAFRiB,KAAApE,KAEcsf,EAAS4Y,EAAQ4M,IAF/B9kC,YAL4CmB,EAA5C+2B,OAA4CA,EADxC/2B,EAAJ27E,YAD0B,YAFzBt5E,UAADq5E,EAAA15E,GAgBAhD,OAAAC,eARKy8E,EAQLv8E,UAAA,OAAA,CAAAmD,IAAA,WACQ,OAROzD,KAAKq6E,OAcpB32E,IAAA,SAXKa,GAWL,IAAApD,EAAAnB,KACQA,KAXKq6E,MAAQ91E,EAAMw4E,WAYnB/8E,KAXK88E,YAAcv4E,EAAMu4E,YAYzB98E,KAXKgR,UAAW,EAYhBhR,KAXKs6E,WAAY,EAYjBt6E,KAXKm6B,OAAO51B,EAAOvE,KAAK88E,aAYnBzuE,UACD,SAAAw3B,GACI1kC,EAXK8xD,QAAU9xD,EAAKo5E,SAAWp5E,EAAK+tC,WAAWrJ,GAAWA,EAY1D1kC,EAXKm5E,WAAY,GAarB,WACIn5E,EAXK6P,UAAW,EAYhB7P,EAXKm5E,WAAY,qCAmBjCuC,EAAAv8E,UAAA65B,OAAA,SAfKiQ,EAAA0yC,GAeL,IAAA37E,EAAAnB,KAdYg9E,EAAah9E,KAAKupB,OAAO+S,QAAQwgD,GAgBrC,OAfOnyE,WAAAA,WAAW4wE,YAAY,IAAIrgC,QAAQ,SAACC,EAASiI,GAiBhD,GAAI45B,EAEA,GAAIx7D,MAfMrY,QAAQ6zE,GAgBd77E,EAfKo5E,UAAW,EAiBhBp/B,EAfQh6C,EAAKq6E,eAAewB,SACzB,GAAKA,EAAWp+D,eAAe,WAAao+D,EAAWp+D,eAAe,YAAeze,OAAOu7E,eAAesB,GAAYp+D,eAAe,QAgBzIzd,EAfKo5E,UAAW,EAiBhByC,EACKxsE,KAfKrP,EAAKq6E,eAAev0E,KAAK9F,IAgB9BqP,KAfK2qC,EAASiI,OAChB,CAAA,GAA0B,mBAAf45B,EAwBd,MADA55B,EAfO,kDACD,IAAI/7C,MAAM,kDAOhBlG,EAfKo5E,UAAW,EAiBhByC,EAfW5yC,GAgBN55B,KAfKrP,EAAKq6E,eAAev0E,KAAK9F,IAgB9BqP,KAfK2qC,EAASiI,QAuBvBA,EAfO,aA2BvBy5B,EAAAv8E,UAAAk7E,eAAA,SAdK7kB,GAcL,IAAAx1D,EAAAnB,KACQ,OAAI22D,GAdwC,iBAAlBA,EAAW,IAA4C,iBAAlBA,EAAW,GAQnEA,EAAWh2C,IAAI,SAACkc,GAenB,IAdIt4B,EAAQpD,EAAKooB,OAAO2T,MAAQL,EAAK17B,EAAKooB,OAAO2T,MAAM/7B,EAAK27E,cAAgBjgD,EAAMt4B,OAASs4B,EAgB3F,MAdO,CAAEt4B,MAcrBA,EAd4BwwB,MADJ5zB,EAAKooB,OAAO4T,OAASvD,QAAQwD,YAAYj8B,EAAKooB,OAAO4T,OAAOh8B,EAAK27E,aAAcjgD,GAAQA,EAAK9H,OAASsI,OAAO94B,GACjGs4B,KAcnCA,KAxBmB85B,EAAWh2C,IAAI,SAAC+Y,GAenB,MAdO,CAeHn1B,MAdOm1B,EAeP3E,MAdO2E,MA+B3BmjD,EAAAv8E,UAAAy7E,YAAA,SAdKnrD,GAeOA,IACAA,EAdM8O,kBAeN9O,EAdMoC,kBAiBV,IAdI2B,EAAW30B,KAAKi8E,YAmBpB,OAJItnD,IACA30B,KAdKyZ,OAAOwjE,WAAWj9E,KAAK88E,YAAanoD,GAezC30B,KAdKyZ,OAAO6iE,gBAET,KA1Gf,CAECM,eA0GMC,iBAAPt6E,WAA2C,CAe3C,CAdE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAerBC,SAdU,qBAeVgD,KAdM,CAeFC,QAdS,UAgBbstB,SAdU,+vBAmBb0rD,iBAAD/4E,eAAC,WAAA,MAAA,CAiBD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBCxIP,IAFMy6E,0BAA4B,CAGhC/lD,QAFS6D,MAAAA,kBAGT5D,YAFapB,KAAAA,WAAW,WAAM,OAAAmnD,mBAG9B58E,OAFO,GAMT48E,iBAAA,SAAAh6E,GAqCA,SAAAg6E,EAEsBC,EAAc99D,EAA6Bk0D,GAFjE,IAAAryE,EAEIgC,EAFJiB,KAAApE,KAEUsf,IAFVtf,YAEsBmB,EAAtBi8E,KAAsBA,EAA2Cj8E,EAAjEqyE,eAAiEA,EA9B/DryE,EAAFk8E,cAE0B,EAIxBl8E,EAAFi6B,MAE6B,IAAI/5B,KAAAA,aAA/BF,EAAFk6B,KAE4B,IAAIh6B,KAAAA,aAA9BF,EAAFshC,OAE8B,IAAIphC,KAAAA,aAUxBF,EAAVm8E,oBAAwC,EAC9Bn8E,EAAVo8E,oBAAqC,KAI3Bp8E,EAAVs6B,cAAoC,aAC1Bt6B,EAAVu6B,eAAqC,aAIjCv6B,EAAKszE,eAAepmE,UAAU,SAAC/F,GACxBA,GACHmI,WAAW,WACTtP,EAAKm7E,2BA5Cd94E,UAAD25E,EAAAh6E,GAmDGg6E,EAAH78E,UAAA04B,SAAG,WAGC,IADKh5B,KAAKupB,OAER,MADM,IAAIliB,MAAM,gCAIlB,IADKrH,KAAKupB,OAAOi0D,SAEf,MADM,IAAIn2E,MAAM,0CAIlB,IADKrH,KAAKupB,OAAO+S,QAEf,MADM,IAAIj1B,MAAM,yCAIlBrH,KADKy9E,iBAAmBz9E,KAAKupB,OAAOm0D,iBAAmBb,kBAGxDM,EAAH78E,UAAA6B,YAAG,WAAA,IAAHhB,EAAAnB,KAKQA,KAHK29E,cAIP39E,KAHK29E,YAAYC,aAAaviD,MAAK,GAInC5qB,WAHW,WAITtP,EAHKw8E,YAAYE,qBAIjBC,SAHSC,UAAU58E,EAAKw8E,YAAYziE,MAAMgwC,UAI1C/pD,EAHKw8E,YAAYzyB,UAIjB/pD,EAHKw8E,YAAc,SAQxBR,EAAH78E,UAAAk5C,gBAAG,WAAA,IAAHr4C,EAAAnB,KACS89E,UASL99E,KAHK29E,YAAcG,SAAS/6C,QAAQ/iC,KAAK4D,KAAK0wB,cAAet0B,KAAKg+E,qBAMlEh+E,KAHK8hC,WAAW9hC,KAAKy9B,OAMrBz9B,KAHK29E,YAAYz7B,GAAG,MAAO,SAAAtxB,GACpBzvB,EAAK88E,MAAMrtD,EAAMiM,KAAKqhD,SAASC,IAIlCvtD,EAHMksC,WAQV98D,KAHK29E,YAAYz7B,GAAG,SAAU,WAKxB/gD,EAHKi9E,iBAIPlkD,aAHa/4B,EAAKi9E,iBAKpBj9E,EAHKi9E,gBAAkB3tE,WAAW,WAKhCtP,EAHKi8E,KAAKiB,IAAI,WAIZl9E,EAHKm9E,kBAKPn9E,EAHKi9E,gBAAkB,MACtB,OAOLp+E,KAHK29E,YAAYz7B,GAAG,OAAQ,SAAAtxB,GAI1BzvB,EAHKo9E,kBAILp9E,EAHKk6B,KAAKt5B,KAAK6uB,KAOjB5wB,KAHK29E,YAAYz7B,GAAG,QAAS,SAAAtxB,GAI3BzvB,EAHKq9E,kBAILr9E,EAHKi6B,MAAMr5B,KAAK6uB,KAOlB5wB,KAHK29E,YAAYz7B,GAAG,gBAAiB,SAAAtxB,GAInCzvB,EAHKo9E,kBAKDp9E,EAHKooB,OAAOk1D,UAIdt9E,EAHKw8E,YAAYe,YAAYv9E,EAAKooB,OAAOk1D,aA9C3Cx4C,QAHQnhC,MAAM,gEAuDjBq4E,EAAH78E,UAAAuhC,UAAG,SAAAjR,GAMC5wB,KALK07B,kBAQNyhD,EAAH78E,UAAAwhC,WAAG,SAAArE,GAOKA,IALSA,EAAOkhD,YAAclhD,EAAMmhD,MAMtC5+E,KALKy9B,MAAQ,CAMXmhD,KALMnhD,EAAMmhD,MAAQ,GAMpBD,WALYlhD,EAAMkhD,YAAc,IAQlC3+E,KALKy9B,MAAQ,CAMXmhD,KALMnhD,EAMNkhD,WALY,IAUZ3+E,KALK29E,aAMP39E,KALK29E,YAAYkB,QAAQ7+E,KAAKy9B,MAAMmhD,OAIvCzB,EAAH78E,UAAAyhC,iBAAG,SAAAC,GASChiC,KARKy7B,cAAgBuG,GAGtBm7C,EAAH78E,UAAA2hC,kBAAG,SAAAD,GAYChiC,KAXK07B,eAAiBsG,GAMvBm7C,EAAH2B,gBAAG,SAAAC,EAAArlD,GAcC,MAbO,MAAAqlD,EAAarlD,EAAO3E,MAa/B,QAPGooD,EAAH78E,UAAA0+E,YAAG,SAAAlC,GAeC,OAdO98E,KAAKupB,OAAO6iB,SAAWpsC,KAAKupB,OAAO6iB,SAAS0wC,GAAeK,EAAiB2B,iBAapF3B,EAAH78E,UAAA29E,MAAG,SAAArtD,GAAA,IAAHzvB,EAAAnB,KAcI,GAAI4wB,EAbMjW,IAcR,GAAI3a,KAbKi/E,iBAAkB,CAezB,GAAIruD,EAbMiC,UAAYyG,SAASC,IAiB7B,OAHAv5B,KAbKo9E,KAAKiB,IAAI,WAcZl9E,EAbKm7E,iBAEA,EAiBT,GAAI1rD,EAbMiC,UAAYyG,SAASq8C,GAiB7B,OAHA31E,KAbKo9E,KAAKiB,IAAI,WAcZl9E,EAbK89E,iBAAiBpkB,SAASmhB,qBAE1B,EAgBT,GAAIprD,EAbMiC,UAAYyG,SAASu8C,KAiB7B,OAHA71E,KAbKo9E,KAAKiB,IAAI,WAcZl9E,EAbK89E,iBAAiBpkB,SAASwgB,qBAE1B,EAgBT,GAAIzqD,EAbMiC,UAAYyG,SAASvG,MAiB7B,OAHA/yB,KAbKo9E,KAAKiB,IAAI,WAcZl9E,EAbK89E,iBAAiBpkB,SAASihB,uBAE1B,MAEJ,CAeL,IAbIoD,EAAWl/E,KAAKupB,OAAOi0D,UAAY,GAcvCr9E,OAbO44B,KAAKmmD,GAAU7gE,QAAQ,SAAC1D,GAc7B,IAbI6T,EAAU0wD,EAASvkE,IAAQ,GAc3BiW,EAbMjW,MAAQ6T,IAchBrtB,EAbKg+E,WAAY,EAcjBh+E,EAbK27E,YAAcniE,KAkB3B,OAbO,GAORwiE,EAAH78E,UAAAg+E,cAAG,WAeC,IAbI/5E,EAAQvE,KAAK29E,YAAYyB,UAGzBC,EAAQ,IAAIvsB,OAAOz1B,OAAOiiD,aAAa,MAAO,KAclD/6E,EAbQA,EAAMw+B,QAAQs8C,EAAO,IAgB7Br/E,KAbKu/E,qBAgBLv/E,KAbKw/E,cAgBL,IAbIC,EAAW,KAcXl7E,IACFk7E,EAbW,CAcTb,KAbMr6E,EAcNo6E,WAbY3+E,KAAKy9B,MAAMkhD,aAkB3B3+E,KAbKy7B,cAAcgkD,GAgBnBz/E,KAbKyiC,OAAO1gC,KAAK09E,GAgBjBz/E,KAbK6hC,aAMNs7C,EAAH78E,UAAAk/E,YAAG,WAcC,GAAIx/E,KAbKm/E,UAAW,CAclB,IAbIpC,EAAa/8E,KAAK0/E,gBAclB3C,EAbW7xE,OAeTlL,KAbKi/E,iBAePj/E,KAbKi/E,iBAAiBpkB,SAASzwB,KAAO,CAcpC2yC,WAbYA,EAcZD,YAba98E,KAAK88E,cAiBpB98E,KAbKi/E,iBAAmBj/E,KAAKwzE,eAAehB,qBAAqBxyE,KAAKy9E,iBAAkBz9E,KAAK6lC,UAc7F7lC,KAbKi/E,iBAAiBpkB,SAASphD,OAASzZ,MACnCi/E,iBAAiBpkB,SAAStxC,OAASvpB,KAAKupB,OAc7CvpB,KAbKi/E,iBAAiBpkB,SAASzwB,KAAO,CAcpC2yC,WAbYA,EAcZD,YAba98E,KAAK88E,aAepB98E,KAbK2/E,2BAEF3/E,KAASi/E,mBAcdj/E,KAbKi/E,iBAAiB/zB,UActBlrD,KAbKi/E,iBAAmB,MAiB1Bj/E,KAbK24B,aAAa,MAAM,KAO3BwkD,EAAH78E,UAAAg8E,YAAG,WAcCt8E,KAbKm/E,WAAY,EAcbn/E,KAbKi/E,mBAcPj/E,KAbKi/E,iBAAiB/zB,UActBlrD,KAbKi/E,iBAAmB,OAW3B9B,EAAH78E,UAAA28E,WAAG,SAAAH,EAAAnoD,GAeC30B,KAbKm/E,WAAY,EAgBjB,IAbIJ,EAAS/+E,KAAKupB,OAAOi0D,SAASV,GAE9B8C,EADW5/E,KAAKg/E,YAAYlC,EACb1wC,CAAS2yC,EAAQpqD,GAepC30B,KAbK6/E,oBAAoBD,GAgBzB5/E,KAbKy9B,MAAMkhD,WAAa3+E,KAAKy9B,MAAMkhD,YAAc,GAcjD3+E,KAbKy9B,MAAMkhD,WAAW7B,GAAe98E,KAAKy9B,MAAMkhD,WAAW7B,IAAgB,GAE9C,IADT98E,KAAKy9B,MAAMkhD,WAAW7B,GAAa1gE,OAAO,SAACsd,GAAS,OAAAslB,KAAKC,UAAUvlB,KAAUslB,KAAKC,UAAUtqB,KAC9FzpB,QAchBlL,KAbKy9B,MAAMkhD,WAAW7B,GAAar0E,KAAKksB,GAiB1C30B,KAbKs+E,iBAONnB,EAAH78E,UAAAo/E,cAAG,WAcC,IAbIlpB,EAAOx2D,KAAK8/E,kBAAkBt7C,OAclC,GAAIxkC,KAbKm/E,UAAW,CAclB,IAbIJ,EAAS/+E,KAAKupB,OAAOi0D,SAASx9E,KAAK88E,aAcvC,IAbKtmB,EAAKjvB,SAASw3C,GAejB,OADA/+E,KAbKs8E,cACE,GAeT9lB,EAbOA,EAAKrmD,MAAMqmD,EAAK5uD,QAAQm3E,GAAUA,EAAO7zE,QAelD,OAbOsrD,GASR2mB,EAAH78E,UAAAw/E,gBAAG,WAaC,IAZIC,EAAQ//E,KAAK29E,YAAYqC,eAAeC,YAAY,GACpDpb,EAAQkb,EAAMG,eAclB,GAAIrb,EAZMpkE,OAASq9E,SAASqC,WAAaJ,EAAMK,YAAa,CAa1D,IAZI1tC,EAAOmyB,EAAMwb,UACbtB,EAAS/+E,KAAKupB,OAAOi0D,SAASx9E,KAAK88E,aACnCwD,EAAY5tC,EAAK6tC,YAAYxB,EAAQgB,EAAMK,YAAc,GAc7D,GAZgB,EAYZE,EAZe,CAajB,IAZIE,EAAuB9tC,EAAKnhC,OAAO+uE,EAAY,GAcnD,GAZqB,MAYjBE,GAZ6B,KAAKrtB,KAAKqtB,GAazC,MAZO,QAEJ,GAAA3b,EAAU4b,eAAiB,MAAMttB,KAAK0R,EAAM6b,cAAcL,WAc/D,MAZO,GAeT,IAZIM,EAAUjuC,EAAK9qC,QAAQ,IAAKm4E,EAAMK,YAAc,GAoBpD,OAnBkB,IAYdE,IACFA,EAZY,IAEE,IAYZK,IACFA,EAZUjuC,EAAKxnC,QAGVwnC,EAAKqS,UAAUu7B,EAAWK,GAgBnC,MAZO,IASRxD,EAAH78E,UAAAu/E,oBAAG,SAAAe,GAcC,IAbIC,EAAe7gF,KAAK8/E,kBAAkBt7C,OACtCu7C,EAAQ//E,KAAK29E,YAAYqC,eAAeC,YAAY,GACpDpb,EAAQkb,EAAMG,eACdY,EAAajc,EAAMkc,YAevB,GAAIlc,EAbMpkE,OAASq9E,SAASqC,WAAaW,EAAY,CAcnD,IAbIE,EAAOF,EAAWG,UAClBt5E,EAAQq5E,EAAKT,YAAYM,GAe7B,GAba,GAaTl5E,EAbY,CAed,IAbIu5E,EAAUF,EAAKj8B,UAAU,EAAGp9C,GAASi5E,EAAU,IAAMI,EAAKj8B,UAAUp9C,EAAQk5E,EAAa31E,QAc7F41E,EAbWK,QAAQD,GAgBnBnB,EAbMqB,eAAeN,EAAYhD,SAASuD,qBAc1CrhF,KAbK29E,YAAYqC,eAAesB,aAAa,CAACvB,OAQnD5C,EAAH78E,UAAAi/E,mBAAG,WAAA,IAAHp+E,EAAAnB,KACQuhF,EAAOvhF,KAAK29E,YAAY3/B,SAASwjC,UAAUP,UAI3CQ,EAAW,IAAI3uB,OAAO,QAAS,KAcnCyuB,EAbOA,EAAKx+C,QAAQ0+C,EAAU,KAe9BthF,OAbO44B,KAAK/4B,KAAKy9B,MAAMkhD,YAAYtgE,QAAQ,SAACy+D,GAc1C,IAbI5tE,EAAQ/N,EAAKs8B,MAAMkhD,WAAW7B,IAAgB,GAC9CiC,EAAS59E,EAAKooB,OAAOi0D,SAASV,GAC9B1wC,EAAWjrC,EAAK69E,YAAYlC,GAehC37E,EAbKs8B,MAAMkhD,WAAW7B,GAAe5tE,EAAMkN,OAAO,SAACsd,GAcjD,IAbIkmD,EAAexzC,EAAS2yC,EAAQrlD,GAcpC,OAbO6nD,EAAKh6C,SAASq4C,KAI2B,IAa9Cz+E,EAbKs8B,MAAMkhD,WAAW7B,GAAa5xE,eAC9B/J,EAAKs8B,MAAMkhD,WAAW7B,MAYlCK,EAAH78E,UAAA09E,kBAAG,WAgBC,IAbI0D,EAAe1hF,KAAK2hF,QAAQrtD,cAAcstD,aAAezE,EAAiB0E,eAgB9E,OAFA7hF,KAbK2hF,QAAQrtD,cAAc7F,MAAMqzD,YAAY,SAAU,QAEhD,CAcLC,UAbWjE,SAASkE,SAcpBC,eAbgBnE,SAASoE,QAczBC,2BAb2B,EAc3BrzD,OAbQ4yD,EAcRrE,aAbcr9E,KAAKq9E,aAcnB+E,cAbe,mCAcfC,QAbS,CAcP,CACEnnE,KAbM,cAcNogB,MAbO,CAcL,SACA,WACA,OACA,SACA,YACA,YACA,IACA,eACA,eACA,UACA,SACA,YADT6hD,EAAH78E,UAAAgiF,kBAAG,WAaC,IAXItvB,EADQhzD,KAAK29E,YAAYqC,eAAeC,YAAY,GAC9BC,eAAe/B,EAAEnrB,cACvCuvB,EAAgBviF,KAAK29E,YAAY6E,WAAWrE,EAI5CsE,EAAgBzkC,SAASC,cAAc,OAa3CwkC,EAZcp2C,aAAa,MAAO,QAalCo2C,EAZcp2C,aAAa,QAAS,KAapCo2C,EAZcp2C,aAAa,SAAU,KAcrC2mB,EAZc0vB,YAAYD,GAa1B,IAZIE,EAAiB,CAanBv8B,IAZKq8B,EAActQ,UAAYoQ,EAAc75B,UAa7CrC,KAZMo8B,EAAcvQ,WAAaqQ,EAAcj6C,YAgBjD,OAFAm6C,EAZcp9E,SAEPs9E,GAMRxF,EAAH78E,UAAAq/E,wBAAG,WAaC,IAZMiD,EAA2D,EAAlCzF,EAAiB0E,eAC1CgB,EAAyB7iF,KAAK8iF,mBAAqB3F,EAAiB0E,eAGtEkB,EADiB/iF,KAAKsiF,oBACal8B,IAAM+2B,EAAiB0E,eAe9DkB,EAZYjxE,KAAKwG,IAAIyqE,EAAWH,GAahCG,EAZYjxE,KAAK09B,IAAIuzC,EAAWF,GAehC7iF,KAZKi/E,iBAAiBpkB,SAASv7C,QAAQgV,cAAc7F,MAAMqzD,YAAY,aAAciB,EAAY,OAMlG5F,EAAH78E,UAAAwiF,iBAAG,WAaC,IAZIE,EAAwB,EAa5B,GACEhjF,KAZK29E,YAAYsF,IAajBjjF,KAZK29E,YAAYsF,GAAGC,iBAapBljF,KAZK29E,YAAYsF,GAAGC,gBAAgB/E,GAapCn+E,KAZK29E,YAAYsF,GAAGC,gBAAgB/E,EAAE1vD,MACtC,CAaA,IAZI00D,EAAkBnjF,KAAK29E,YAAYsF,GAAGC,gBAAgB/E,EAAE1vD,MAAM00D,QAalE,IAZoC,IAYhCA,EAZQv7E,QAAQ,YAAoB,CAatC,IAZIknB,EAAiBq0D,EAAQ5+C,MAAM,YAAY,GAa/CzV,EAZSA,EAAOyV,MAAM,MAAM,GAa5By+C,EAZgBjxB,SAASjjC,IAe7B,OAZOk0D,GAMR7F,EAAH78E,UAAAi+E,gBAAG,WACMv+E,KAAK29E,YAAYyB,WAAap/E,KAAMq9E,eAavCr9E,KAZK29E,YAaF6E,WACAzB,YACA5C,EAZEuE,YAAY1iF,KAAKojF,oBAatBpjF,KAZKs9E,oBAAqB,IAO7BH,EAAH78E,UAAAk+E,gBAAG,WAaKx+E,KAZKs9E,qBAaPt9E,KAZK29E,YAaF6E,WACAzB,YACA5C,EAZEkF,YAAYrjF,KAAKojF,oBAatBpjF,KAZKs9E,oBAAqB,IAmBhCn9E,OAAAC,eAZG+8E,EAYH78E,UAAA,qBAAA,CAAAmD,IAAA,WAQI,OAnBKzD,KAAKu9E,sBAaRv9E,KAZKu9E,oBAAsBv/B,SAASC,cAAc,OAalDj+C,KAZKu9E,oBAAoB+F,UAAY,cAarCtjF,KAZKu9E,oBAAoB9uD,MAAM00D,QAa7B,wHACFnjF,KAZKu9E,oBAAoBgG,YAAcvjF,KAAKk7B,aAEvCl7B,KAAKu9E,uDA7mBhB,CAAC/iD,cAkCgB2iD,iBAAjB0E,eAAkC,GA6kB3B1E,iBAAP56E,WAA2C,CAa3C,CAZE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAavBC,SAZU,kBAaVoC,UAZW,CAAAk6E,2BAaX/rD,SAZU,6JASXgsD,iBAADr5E,eAAC,WAAA,MAAA,CAeD,CAACrD,KAAM+iF,KAAAA,QACP,CAAC/iF,KApBCizB,KAAAA,YAqBF,CAACjzB,KAAM6kD,kBAZA63B,iBAAPp5E,eAAgE,CAehE49E,QAdW,CAAA,CAAGlhF,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,aAerCiD,KAdQ,CAAA,CAAGnD,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,UAelCklC,QAdW,CAAA,CAAGplC,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,UAAY,CAAEk2B,KAAM9E,KAAAA,qBAezDxI,OAdU,CAAA,CAAG9oB,KAAMK,KAAAA,QAenBu8E,aAdgB,CAAA,CAAG58E,KAAMK,KAAAA,QAezBo6B,YAde,CAAA,CAAGz6B,KAAMK,KAAAA,QAexBs6B,MAdS,CAAA,CAAG36B,KAAMkC,KAAAA,SAelB04B,KAdQ,CAAA,CAAG56B,KAAMkC,KAAAA,SAejB8/B,OAdU,CAAA,CAAGhiC,KAAMkC,KAAAA,UCnqBnB,IAAAwtD,oBAAA,aAKOA,oBAAP5tD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAa8S,kBAAmBpa,gBACxD/3B,aAAc,CAAAo6E,iBAAmBN,kBACjC/5E,QAAS,CAAAq6E,iBAAmBN,kBAC5BvxB,gBAAiB,CAAAuxB,sBAIpB1sB,oBAADrsD,eAAC,WAAA,MAAA,ICZD,IAFM2/E,qBAAuB,CAG3BtsD,QAFS6D,MAAAA,kBAGT5D,YAFapB,KAAAA,WAAW,WAAM,OAAA0tD,mBAG9BnjF,OAFO,GAITojF,eAAA,aAAoCA,eAApCphF,WAAwE,CACxE,CAAE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CACvBC,SAAU,mBACVuwB,SAAU,gCAIXwyD,eAAD7/E,eAAC,WAAA,MAAA,IAMD,IAAA4/E,iBAAA,WAuCA,SAAAA,EAbsB5+C,GAAA9kC,KAAtB8kC,IAAsBA,EAJpB9kC,KAAFm5B,QAXoB,EAalBn5B,KAAFo1B,MAXkB,YAehBp1B,KAAFkC,UAXsB,EAcpBlC,KAAFyiC,OAX8B,IAAIphC,KAAAA,aAchCrB,KAAFy7B,cAX4B,aAY1Bz7B,KAAF07B,eAX6B,oBAoB7BgoD,EAAApjF,UAAAq5B,OAAA,SAhBG/I,GAiBCgJ,QAhBQC,aAAajJ,GAEhB5wB,KAAKs9B,UAiBRt9B,KAhBKs9B,SAAUt9B,KAAMs9B,QAiBrBt9B,KAhBKyiC,OAAO1gC,KAAK/B,KAAKuE,OAiBtBvE,KAhBKy7B,cAAcz7B,KAAKuE,OAiBxBvE,KAhBK8kC,IAAI7iC,iBAuBfyhF,EAAApjF,UAAAwhC,WAAA,SAnBGrE,GAoBCz9B,KAnBKy9B,MAAQA,EAoBbz9B,KAnBK8kC,IAAI7iC,gBAyBbyhF,EAAApjF,UAAAyhC,iBAAA,SAtBGC,GAuBChiC,KAtBKy7B,cAAgBuG,GA4BzB0hD,EAAApjF,UAAA2hC,kBAAA,SAzBGD,GA0BChiC,KAzBK07B,eAAiBsG,GA+B1B0hD,EAAApjF,UAAA8xE,iBAAA,SA5BGlwE,GA6BClC,KA5BKkC,SAAWA,KArDpB,GAuDOwhF,iBAAPnhF,WAA2C,CA6B3C,CA5BE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA6BvBC,SA5BU,aA6BVoC,UA5BW,CAAAygF,sBA6BXtyD,SA5BU,goBAuCVvtB,KA5BM,CA6BJggF,mBA5BoB,gBAKvBF,iBAAD5/E,eAAC,WAAA,MAAA,CA+BD,CAACrD,KAAMgC,KAAAA,qBA5BAihF,iBAAP3/E,eAAgE,CA+BhEmX,KA9BQ,CAAA,CAAGza,KAAMK,KAAAA,QA+BjByD,MA9BS,CAAA,CAAG9D,KAAMK,KAAAA,QA+BlBw8B,QA9BW,CAAA,CAAG78B,KAAMK,KAAAA,QA+BpB+iF,SA9BY,CAAA,CAAGpjF,KAAMK,KAAAA,QA+BrBi0B,MA9BS,CAAA,CAAGt0B,KAAMK,KAAAA,QA+BlBq4B,OA9BU,CAAA,CAAG14B,KAAMK,KAAAA,QA+BnBs0B,MA9BS,CAAA,CAAG30B,KAAMK,KAAAA,QA+BlBw0B,KA9BQ,CAAA,CAAG70B,KAAMK,KAAAA,QA+BjBoB,SA9BY,CAAA,CAAGzB,KAAMK,KAAAA,QA+BrB2hC,OA9BU,CAAA,CAAGhiC,KAAMkC,KAAAA,UC9GnB,IAAAytD,gBAAA,aAGOA,gBAAP7tD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe8D,kBACxB90B,aAAc,CAAA2gF,iBAAmBC,gBACjC7gF,QAAS,CAAA4gF,iBAAmBC,oBAI/BvzB,gBAADtsD,eAAC,WAAA,MAAA,+TCjBD,SAAAkuD,WAA2B77C,GACzB,MAAoB,mBAANA,EADA,IAAhB2tE,aAAA9xB,kDCAA9oD,UAAuBsY,MAAMrY,SAAO,SAASgN,GAAqB,OAAAA,GAAyB,iBAAbA,EAAEjL,oCCAhF,SAAAqjC,SAAyBp4B,GACvB,OAAY,MAALA,GAA0B,iBAANA,EADb,IAAhB4tE,WAAAx1C,0CCCA3pC,cAAgC,CAAEG,EAAG,4CCCjCi/E,eAEJ,SAAAC,aACE,IACE,OAAOD,eAAe5gF,MAAMpD,KAAMqD,WAClC,MAAO0B,GAEP,OADAH,YAAJC,YAAgBE,EAAIA,EACTH,YAAXC,aAIA,SAAAF,SAA6Cq9B,GAE3C,OADAgiD,eAAiBhiD,EACLiiD,WAFE,IAAhBC,WAAAv/E,qQCTAw/E,oBAAA,SAAAhhF,GACE,SAAFghF,EAAqB1+D,GACjBtiB,EAAJiB,KAAApE,MADqBA,KAArBylB,OAAqBA,EAEjB,IAAM1Y,EAAW1F,MAAMjD,KAAKpE,KAAMylB,EAC7BA,EAAOva,OAAhB,8CACIua,EAAO9E,IAAI,SAAC5T,EAAKrB,GAAM,OAAGA,EAAI,EADlC,KACwCqB,EAAIgmC,aAAcqxC,KAAK,QAAY,IAChEpkF,KAAMkb,KAAOnO,EAAImO,KAAO,sBACxBlb,KAAMmb,MAAQpO,EAAIoO,MAClBnb,KAAMyY,QAAU1L,EAAI0L,QAE/B,OAVyCjV,YAAzC2gF,EAAAhhF,GAUAghF,EAVA,CAAyC98E,OAAzCg9E,sBAAAF,sFC0BA59E,eAAA,WAoBE,SAAF+9E,EAAch/E,GAVLtF,KAAToB,QAA2B,EAEfpB,KAAZukF,QAAoC,KACxBvkF,KAAZwkF,SAAuC,KAC7BxkF,KAAVykF,eAA4C,KAOpCn/E,IACKtF,KAAMyH,aAAenC,GArBK,IAAS6N,EA0LhD,OA3JE5M,EAAFjG,UAAAgF,YAAE,WACE,IACImgB,EADAi/D,GAAY,EAGhB,IAAI1kF,KAAKoB,OAAT,CAIA,IAAMmjF,EAAVvkF,KAAAukF,QAAmBC,EAAnBxkF,KAAAwkF,SAA6B/8E,EAA7BzH,KAAAyH,aAA2Cg9E,EAA3CzkF,KAAAykF,eAEIzkF,KAAKoB,QAAS,EACdpB,KAAKukF,QAAU,KACfvkF,KAAKwkF,SAAW,KAGhBxkF,KAAKykF,eAAiB,KAOtB,IALA,IAAI98E,GAAS,EACTiF,EAAM43E,EAAWA,EAASt5E,OAAS,EAIhCq5E,GACLA,EAAQl/E,OAAOrF,MAGfukF,IAAY58E,EAAQiF,GAAO43E,EAAS78E,IAAU,KAGhD,GAAIg9E,aAAR3yB,WAAmBvqD,GACD/C,WAAlBC,SAA2B8C,GAAcrD,KAAKpE,QAC1B4E,YAApBC,cACQ6/E,GAAY,EACZj/D,EAASA,IACP7gB,YADVC,YACsBE,aAAa6/E,sBADnCT,oBAEYU,4BAA4BjgF,YAAxCC,YAAoDE,EAAE0gB,QAAU,CAAC7gB,YAAjEC,YAA6EE,KAKzE,GAAImE,QAARC,QAAgBs7E,GAKV,IAHA98E,GAAS,EACTiF,EAAM63E,EAAev5E,SAEZvD,EAAQiF,GAAK,CACpB,IAAMk4E,EAAML,EAAe98E,GAC3B,GAAIo9E,WAAZx2C,SAAqBu2C,GAEX,GADYpgF,WAAtBC,SAA+BmgF,EAAIx/E,aAAalB,KAAK0gF,KAC7BlgF,YAAxBC,YAAqC,CACzB6/E,GAAY,EACZj/D,EAASA,GAAU,GACnB,IAAI1Y,EAAMnI,YAAtBC,YAAkCE,EAClBgI,aAAe63E,sBAA/BT,oBACc1+D,EAASA,EAAOvO,OAAO2tE,4BAA4B93E,EAAI0Y,SAEvDA,EAAOhd,KAAKsE,IAOtB,GAAI23E,EACF,MAAM,IAAIE,sBAAhBT,oBAAoC1+D,KAsBlClf,EAAFjG,UAAA8E,IAAE,SAAI4/E,GACF,IAAKA,GAAaA,IAAaz+E,EAAaqX,MAC1C,OAAOrX,EAAaqX,MAGtB,GAAIonE,IAAahlF,KACf,OAAOA,KAGT,IAAIsN,EAA+B03E,EAEnC,cAAeA,GACb,IAAK,WACH13E,EAAe,IAAI/G,EAA6By+E,GAClD,IAAK,SACH,GAAI13E,EAAalM,QAA8C,mBAA7BkM,EAAahI,YAC7C,OAAOgI,EACF,GAAItN,KAAKoB,OAEd,OADAkM,EAAahI,cACNgI,EACF,GAAuC,mBAA5BA,EAAa23E,WAA6C,CAC1E,IAAMC,EAAM53E,GACZA,EAAe,IAAI/G,GACNk+E,eAAiB,CAACS,GAEjC,MACF,QACE,MAAM,IAAI79E,MAAM,yBAA2B29E,EAAW,2BAQ1D,OALsBhlF,KAAKykF,iBAAmBzkF,KAAKykF,eAAiB,KAEtDh8E,KAAK6E,GACnBA,EAAa23E,WAAWjlF,MAEjBsN,GAST/G,EAAFjG,UAAA+E,OAAE,SAAOiI,GACL,IAAMwX,EAAgB9kB,KAAKykF,eAC3B,GAAI3/D,EAAe,CACjB,IAAMqgE,EAAoBrgE,EAAcld,QAAQ0F,IACrB,IAAvB63E,GACFrgE,EAAcjd,OAAOs9E,EAAmB,KAKtC5+E,EAAVjG,UAAA2kF,WAAE,SAAmBxrE,GACjB,IAAM8qE,EAAVvkF,KAAAukF,QAAmBC,EAAnBxkF,KAAAwkF,SACSD,GAAWA,IAAY9qE,EAIhB+qE,GAI6B,IAA9BA,EAAS58E,QAAQ6R,IAE1B+qE,EAAS/7E,KAAKgR,GAHdzZ,KAAKwkF,SAAW,CAAC/qE,GAJjBzZ,KAAKukF,QAAU9qE,GAhLLlT,EAAhBqX,QAAgDzK,EAG5C,IAAI5M,GAFEnF,QAAS,EACR+R,GAwLX5M,EA3LA,GAAA6+E,eAAA7+E,eA6LA,SAAAs+E,4BAAqCp/D,GACpC,OAAOA,EAAOkY,OAAO,SAAC0nD,EAAMt4E,GAAQ,OAAAs4E,EAAKnuE,OAAQnK,aAAe63E,sBAAjET,oBAAwFp3E,EAAI0Y,OAAS1Y,IAAM,qDC9L3GoG,MAAoC,CAClC/R,QAAQ,EACRmE,KAAF,SAAOhB,KACLO,MAAF,SAAQiI,GAAkB,MAAMA,GAC9BvC,SAAF,qCCnBM86E,SAA6B,oBAAXr6D,QAA0BA,OAC5Cs6D,OAAyB,oBAATC,MAAqD,oBAAtBC,mBACjDD,gBAAgBC,mBAAqBD,KACnCE,cAA6B,IAAXC,gBAA0BA,eAC5CC,MAAaN,UAAYI,UAAYH,OAW3C1+E,OAAA++E,OANA,WACE,IAAKA,MACH,MAAM,IAAIv+E,MAAM,iEAFpB,0ECtBA,IAAMw+E,EAAch/E,KAApBC,KAAyB++E,OAEZ/iF,EAAbya,aAA+C,mBAAXsoE,GAA+C,mBAAfA,EAAOC,OACzED,EAAOC,OAAI,gBAAkB,iBAKlBhjF,EAAbijF,eAA8BjjF,EAA9Bya,8TCMAlS,WAAA,SAAAlI,GAsCE,SAAFkI,EAAc26E,EACAlhF,EACA0F,GAGV,OAFArH,EAAJiB,KAAApE,MAlBSA,KAATkpB,eAA+B,KACtBlpB,KAATipB,iBAAoC,EAC3BjpB,KAATgpB,oBAAuC,EAE3BhpB,KAAZuO,WAAiC,EAgBrBlL,UAAU6H,QAChB,KAAK,EACHlL,KAAKkE,YAAc+hF,SAA3B9yE,MACQ,MACF,KAAK,EACH,IAAK6yE,EAAmB,CACtBhmF,KAAKkE,YAAc+hF,SAA7B9yE,MACU,MAEF,GAAiC,iBAAtB6yE,EAAgC,CAGzC,GAAIE,oBAAoBF,GAAoB,CAC1C,IAAMG,EAAoBH,EAAkB1oE,aAAxDC,gBACYvd,KAAKgpB,mBAAqBm9D,EAAkBn9D,oBAC5ChpB,KAAKkE,YAAciiF,GACD/gF,IAAIpF,WAEtBA,KAAKgpB,oBAAqB,EAC1BhpB,KAAKkE,YAAc,IAAIkiF,eAAkBpmF,KAA6BgmF,GAExE,MAEJ,QACEhmF,KAAKgpB,oBAAqB,EAC1BhpB,KAAKkE,YAAc,IAAIkiF,eAAkBpmF,KAA6BgmF,EAAmBlhF,EAAO0F,IA8ExG,OAlJmChH,YAAnC6H,EAAAlI,GAEEkI,EAAF/K,UAAGgd,aAAHC,cAAE,WAAyB,OAAOvd,MAazBqL,EAATjB,OAAE,SAAiB7E,EACAT,EACA0F,GACf,IAAMD,EAAa,IAAIc,EAAW9F,EAAMT,EAAO0F,GAE/C,OADAD,EAAWye,oBAAqB,EACzBze,GA4DTc,EAAF/K,UAAAiF,KAAE,SAAKhB,GACEvE,KAAKuO,WACRvO,KAAKsE,MAAMC,IAWf8G,EAAF/K,UAAAwE,MAAE,SAAMiI,GACC/M,KAAKuO,YACRvO,KAAKuO,WAAY,EACjBvO,KAAK8M,OAAOC,KAUhB1B,EAAF/K,UAAAkK,SAAE,WACOxK,KAAKuO,YACRvO,KAAKuO,WAAY,EACjBvO,KAAKmL,cAITE,EAAF/K,UAAAgF,YAAE,WACMtF,KAAKoB,SAGTpB,KAAKuO,WAAY,EACjBpL,EAAJ7C,UAAUgF,YAAVlB,KAAApE,QAGYqL,EAAZ/K,UAAAgE,MAAE,SAAgBC,GACdvE,KAAKkE,YAAYqB,KAAKhB,IAGd8G,EAAZ/K,UAAAwM,OAAE,SAAiBC,GACf/M,KAAKkE,YAAYY,MAAMiI,GACvB/M,KAAKsF,eAGG+F,EAAZ/K,UAAA6K,UAAE,WACEnL,KAAKkE,YAAYsG,WACjBxK,KAAKsF,eAG8B+F,EAAvC/K,UAAAoO,uBAAuC,WACnC,IAAQ61E,EAAZvkF,KAAAukF,QAAqBC,EAArBxkF,KAAAwkF,SAQI,OAPAxkF,KAAKukF,QAAU,KACfvkF,KAAKwkF,SAAW,KAChBxkF,KAAKsF,cACLtF,KAAKoB,QAAS,EACdpB,KAAKuO,WAAY,EACjBvO,KAAKukF,QAAUA,EACfvkF,KAAKwkF,SAAWA,EACTxkF,MAEXqL,EAlJA,CAAmC/E,eAkJnCC,cAlJA8/E,aAAAh7E,WAyJA+6E,eAAA,SAAAjjF,GAIE,SAAFijF,EAAsBE,EACRC,EACAzhF,EACA0F,GAGV,IAAIjF,EAFJpC,EAAJiB,KAAApE,MAJsBA,KAAtBsmF,kBAAsBA,EAOlB,IAAIr6E,EAAejM,KAEf2kF,aAAR3yB,WAAmBu0B,GACbhhF,EAA+BghF,EACtBA,IACThhF,EAA6BghF,EAAgBhhF,KAC7CT,EAA8ByhF,EAAgBzhF,MAC9C0F,EAAiC+7E,EAAgB/7E,SAC7C+7E,IAAmBN,SAA7B9yE,QACQlH,EAAU9L,OAAOiK,OAAOm8E,GACpB5B,aAAZ3yB,WAAuB/lD,EAAQ3G,cACrBtF,KAAKoF,IAAiB6G,EAAQ3G,YAAY2B,KAAKgF,IAEjDA,EAAQ3G,YAActF,KAAKsF,YAAY2B,KAAKjH,QAIhDA,KAAKwmF,SAAWv6E,EAChBjM,KAAKsE,MAAQiB,EACbvF,KAAK8M,OAAShI,EACd9E,KAAKmL,UAAYX,EAiFrB,OAhHgChH,YAAhC4iF,EAAAjjF,GAkCEijF,EAAF9lF,UAAAiF,KAAE,SAAKhB,GACH,IAAKvE,KAAKuO,WAAavO,KAAKsE,MAAO,CACzB,IAAdgiF,EAAAtmF,KAAAsmF,kBACWA,EAAkBt9D,mBAEZhpB,KAAKymF,gBAAgBH,EAAmBtmF,KAAKsE,MAAOC,IAC7DvE,KAAKsF,cAFLtF,KAAK0mF,aAAa1mF,KAAKsE,MAAOC,KAOpC6hF,EAAF9lF,UAAAwE,MAAE,SAAMiI,GACJ,IAAK/M,KAAKuO,UAAW,CACX,IAAd+3E,EAAAtmF,KAAAsmF,kBACM,GAAItmF,KAAK8M,OACFw5E,EAAkBt9D,mBAIrBhpB,KAAKymF,gBAAgBH,EAAmBtmF,KAAK8M,OAAQC,GAHrD/M,KAAK0mF,aAAa1mF,KAAK8M,OAAQC,GAI/B/M,KAAKsF,kBAEF,CAAA,IAAKghF,EAAkBt9D,mBAE5B,MADAhpB,KAAKsF,cACCyH,EAENu5E,EAAkBp9D,eAAiBnc,EACnCu5E,EAAkBr9D,iBAAkB,EACpCjpB,KAAKsF,iBAKX8gF,EAAF9lF,UAAAkK,SAAE,WAAA,IAAFrJ,EAAAnB,KACI,IAAKA,KAAKuO,UAAW,CACX,IAAd+3E,EAAAtmF,KAAAsmF,kBACM,GAAItmF,KAAKmL,UAAW,CAClB,IAAMw7E,EAAkB,WAAM,OAAAxlF,EAAKgK,UAAU/G,KAAKjD,EAAKqlF,WAElDF,EAAkBt9D,mBAIrBhpB,KAAKymF,gBAAgBH,EAAmBK,GAHxC3mF,KAAK0mF,aAAaC,GAIlB3mF,KAAKsF,mBAGPtF,KAAKsF,gBAKH8gF,EAAV9lF,UAAAomF,aAAE,SAAqB1kD,EAAcz9B,GACjC,IACEy9B,EAAG59B,KAAKpE,KAAKwmF,SAAUjiF,GACvB,MAAOwI,GAEP,MADA/M,KAAKsF,cACCyH,IAIFq5E,EAAV9lF,UAAAmmF,gBAAE,SAAwBhtE,EAAuBuoB,EAAcz9B,GAC3D,IACEy9B,EAAG59B,KAAKpE,KAAKwmF,SAAUjiF,GACvB,MAAOwI,GAGP,OAFA0M,EAAOyP,eAAiBnc,EACxB0M,EAAOwP,iBAAkB,EAG3B,OAAO,GAG4Bm9D,EAAvC9lF,UAAAmH,aAAuC,WAC3B,IAAZ6+E,EAAAtmF,KAAAsmF,kBACItmF,KAAKwmF,SAAW,KAChBxmF,KAAKsmF,kBAAoB,KACzBA,EAAkBhhF,eAEtB8gF,EAhHA,CAAgC/6E,YAkHhC,SAAA66E,oBAA6Bv0E,GAC3B,OAAOA,aAAetG,YAAe,uBAAwBsG,GAAOA,EAAI2L,aAA1EC,oRClRAgD,WAAA,SAAApd,GACE,SAAFod,IACI,IAAMxT,EAAW5J,EAArBiB,KAAApE,KAA2B,2BAChBA,KAAMkb,KAAOnO,EAAImO,KAAO,aACxBlb,KAAMmb,MAAQpO,EAAIoO,MAClBnb,KAAMyY,QAAU1L,EAAI0L,QAE/B,OAPgCjV,YAAhC+c,EAAApd,GAOAod,EAPA,CAAgClZ,OAAhCu/E,aAAArmE,2QC2DA,SAAAsmE,MAA4BzvE,EACA/B,EACA2C,GAC1B,OAAO,SAAClK,GAA0B,OAAAA,EAAOI,KAAK,IAAI44E,cAAc1vE,EAAW/B,EAAgB2C,EAAclK,KAH3F,IAAhBi5E,QAAAF,MAMAC,cAAA,WACE,SAAFA,EAAsB1vE,EACA/B,EACA2C,EACAlK,GAHA9N,KAAtBoX,UAAsBA,EACApX,KAAtBqV,eAAsBA,EACArV,KAAtBgY,aAAsBA,EACAhY,KAAtB8N,OAAsBA,EAMtB,OAHEg5E,EAAFxmF,UAAA8D,KAAE,SAAKyO,EAAyB/E,GAC5B,OAAOA,EAAOO,UAAU,IAAI24E,gBAAgBn0E,EAAU7S,KAAKoX,UAAWpX,KAAKqV,eAAgBrV,KAAKgY,aAAchY,KAAK8N,UAEvHg5E,EAVA,GAiBAE,gBAAA,SAAA7jF,GAKE,SAAF6jF,EAAc9iF,EACQkT,EACA/B,EACA2C,EACAlK,GAClB3K,EAAJiB,KAAApE,KAAUkE,GAJYlE,KAAtBoX,UAAsBA,EACApX,KAAtBqV,eAAsBA,EACArV,KAAtBgY,aAAsBA,EACAhY,KAAtB8N,OAAsBA,EARZ9N,KAAV2H,MAA0B,EAChB3H,KAAV6V,cAAkC,EACxB7V,KAAVinF,UAA8B,EAsE9B,OAzEoCzjF,UAApCwjF,EAAA7jF,GAaY6jF,EAAZ1mF,UAAAgE,MAAE,SAAgBC,GACd,IAAMoD,EAAQ3H,KAAK2H,QACf3H,KAAKoX,UACPpX,KAAKqX,cAAc9S,EAAOoD,GAE1B3H,KAAKknF,MAAM3iF,EAAOoD,IAIdq/E,EAAV1mF,UAAA+W,cAAE,SAAsB9S,EAAUoD,GAC9B,IAAI6G,EACJ,IACEA,EAASxO,KAAKoX,UAAU7S,EAAOoD,EAAO3H,KAAK8N,QAC3C,MAAOf,GAEP,YADA/M,KAAKkE,YAAYY,MAAMiI,GAGrByB,GACFxO,KAAKknF,MAAM3iF,EAAOoD,IAIdq/E,EAAV1mF,UAAA4mF,MAAE,SAAc3iF,EAAYoD,GACpB3H,KAAKqV,eACPrV,KAAKqgB,mBAAmB9b,EAAOoD,GAGjC3H,KAAKmnF,WAAW5iF,IAGVyiF,EAAV1mF,UAAA+f,mBAAE,SAA2B9b,EAAUoD,GACnC,IAAI6G,EACJ,IACEA,EAAexO,KAAMqV,eAAe9Q,EAAOoD,GAC3C,MAAOoF,GAEP,YADA/M,KAAKkE,YAAYY,MAAMiI,GAGzB/M,KAAKmnF,WAAW34E,IAGVw4E,EAAV1mF,UAAA6mF,WAAE,SAAmB5iF,GACjB,IAAML,EAAclE,KAAKkE,YACpBlE,KAAKinF,WACRjnF,KAAKinF,UAAW,EAChB/iF,EAAYqB,KAAKhB,GACjBL,EAAYsG,WACZxK,KAAK6V,cAAe,IAIdmxE,EAAZ1mF,UAAA6K,UAAE,WACE,IAAMjH,EAAclE,KAAKkE,YACpBlE,KAAK6V,cAA6C,oBAAtB7V,KAAKgY,aAG1BhY,KAAK6V,cACf3R,EAAYY,MAAM,IAAIwb,aAA5BC,aAHMrc,EAAYqB,KAAKvF,KAAKgY,cACtB9T,EAAYsG,aAKlBw8E,EAzEA,CAAoC57E,aAyEpCC,uOC7JAtF,gBAAA,SAAA5C,GAAA,SAAA4C,IAA2C5C,EAA3CC,MAAApD,KAAAqD,WAcA,OAd2CG,YAA3CuC,EAAA5C,GACE4C,EAAFzF,UAAAkF,WAAE,SAAWC,EAAeC,EACfC,EAAoBC,EACpBmF,GACT/K,KAAKkE,YAAYqB,KAAKG,IAGxBK,EAAFzF,UAAA2Y,YAAE,SAAYnU,EAAYiG,GACtB/K,KAAKkE,YAAYY,MAAMA,IAGzBiB,EAAFzF,UAAAuF,eAAE,SAAekF,GACb/K,KAAKkE,YAAYsG,YAErBzE,EAdA,CAA2CqF,aAc3CC,YAdA+7E,kBAAArhF,sECRA8O,cAAwB,SAAQsB,GAA8B,OAAAA,GAAyB,iBAAbA,EAAEjL,gDCA5E,SAAAwJ,UAA6BnQ,GAC3B,OAAOA,GAA2C,mBAArBA,EAAO8J,WAA2D,mBAAvB9J,EAAciM,KADxE,IAAhB62E,YAAA3yE,8CCIA,SAAA4yE,aACEt0E,EACAlO,EACA0F,GAEA,GAAIwI,EAAgB,CAClB,GAAIA,aAA0B5H,aAAlCC,WACM,OAAwB2H,EAG1B,GAAIA,EAAesK,aAAvBC,cACM,OAAOvK,EAAesK,aAA5BC,gBAIE,OAAKvK,GAAmBlO,GAAU0F,EAI3B,IAAIY,aAAbC,WAAwB2H,EAAgBlO,EAAO0F,GAHpC,IAAIY,aAAfC,WAA0B46E,SAA1B9yE,OAhBgB,IAAhBo0E,eAAAD,wGCFA,SAAAE,EAAoCv7E,GAClC,IAAIw7E,EACA5B,EAAS55E,EAAQ45E,OAarB,MAXsB,mBAAXA,EACLA,EAAO/1E,WACT23E,EAAe5B,EAAO/1E,YAEpB23E,EAAe5B,EAAO,cACtBA,EAAO/1E,WAAa23E,GAGxBA,EAAe,eAGVA,EAfO3kF,EAAhB0kF,oBAAAA,EAkBa1kF,EAAbgN,WAA0B03E,EAAoB3gF,KAA9CC,MAKahE,EAAb2kF,aAA4B3kF,EAA5BgN,iICxBA,SAAAoQ,QAAgB,IAAhBwnE,OAAAxnE,0BCeA,SAAAoQ,OAAA,IAA2B,IAA3Bq3D,EAAA,GAAAv4E,EAAA,EAA2BA,EAA3B/L,UAAA6H,OAA2BkE,IAAAu4E,EAA3Bv4E,EAAA,GAAA/L,UAAA+L,GACE,OAAOw4E,cAAcD,GADP,IAAhBE,OAAAv3D,KAKA,SAAAs3D,cAAoCD,GAClC,OAAKA,EAIc,IAAfA,EAAIz8E,OACCy8E,EAAI,GAGN,SAAe1pD,GACpB,OAAO0pD,EAAIhqD,OAAO,SAACva,EAAW4e,GAA4B,OAAAA,EAAG5e,IAAO6a,IAR7Dhe,OAAXC,KAFgB,IAAhB4nE,gBAAAF,iECMAj9E,aAAA,WAcE,SAAFo9E,EAAc15E,GAZLrO,KAAT4O,WAA8B,EAatBP,IACFrO,KAAKyK,WAAa4D,GAuTxB,OA9RE1D,EAAFrK,UAAA4N,KAAE,SAAQH,GACN,IAAM+B,EAAa,IAAInF,EAGvB,OAFAmF,EAAWhC,OAAS9N,KACpB8P,EAAW/B,SAAWA,EACf+B,GAuHTnF,EAAFrK,UAAA+N,UAAE,SAAUk4E,EACAzhF,EACA0F,GAEA,IAAZuD,EAAA/N,KAAA+N,SACUi6E,EAAOC,eAAjBX,aAA8Bf,EAAgBzhF,EAAO0F,GAQjD,GANIuD,EACFA,EAAS3J,KAAK4jF,EAAMhoF,KAAK8N,QAEzBk6E,EAAK5iF,IAAIpF,KAAK8N,SAAWk6E,EAAKh/D,mBAAqBhpB,KAAKyK,WAAWu9E,GAAQhoF,KAAK2d,cAAcqqE,IAG5FA,EAAKh/D,qBACPg/D,EAAKh/D,oBAAqB,EACtBg/D,EAAK/+D,iBACP,MAAM++D,EAAK9+D,eAIf,OAAO8+D,GAGCr9E,EAAZrK,UAAAqd,cAAE,SAAwBqqE,GACtB,IACE,OAAOhoF,KAAKyK,WAAWu9E,GACvB,MAAOj7E,GACPi7E,EAAK/+D,iBAAkB,EACvB++D,EAAK9+D,eAAiBnc,EACtBi7E,EAAKljF,MAAMiI,KAWfpC,EAAFrK,UAAA+d,QAAE,SAAQ9Y,EAA0B2iF,GAAlC,IAAF/mF,EAAAnB,KASI,GARKkoF,IACCrhF,KAAVC,KAAeqhF,IAAMthF,KAArBC,KAA0BqhF,GAAG5+D,QAAU1iB,KAAvCC,KAA4CqhF,GAAG5+D,OAAO2xB,QAC9CgtC,EAAcrhF,KAAtBC,KAA2BqhF,GAAG5+D,OAAO2xB,QACpBr0C,KAAjBC,KAAsBo0C,UACdgtC,EAAcrhF,KAAtBC,KAA2Bo0C,WAIlBgtC,EACH,MAAM,IAAI7gF,MAAM,yBAGlB,OAAO,IAAI6gF,EAAkB,SAAC/sC,EAASiI,GAGrC,IAAI91C,EACJA,EAAenM,EAAKkN,UAAU,SAAC9J,GAC7B,GAAI+I,EAKF,IACE/H,EAAKhB,GACL,MAAOwI,GACPq2C,EAAOr2C,GACPO,EAAahI,mBASfC,EAAKhB,IAEN6+C,EAAQjI,MAIsBxwC,EAAvCrK,UAAAmK,WAAuC,SAAWF,GAC9C,OAAOvK,KAAK8N,OAAOO,UAAU9D,IAY/BI,EAAFrK,UAAGkU,WAAH1E,YAAE,WACE,OAAO9P,MAmCT2K,EAAFrK,UAAAgwB,KAAE,WAAF,IAAU,IAAV83D,EAAA,GAAAh5E,EAAA,EAAUA,EAAV/L,UAAA6H,OAAUkE,IAAAg5E,EAAVh5E,EAAA,GAAA/L,UAAA+L,GACI,OAA0B,IAAtBg5E,EAAWl9E,OACNlL,KAGFqoF,OAAXT,cAAyBQ,EAAdC,CAA0BroF,OASnC2K,EAAFrK,UAAAokD,UAAE,SAAUwjC,GAAV,IAAF/mF,EAAAnB,KASI,GARKkoF,IACCrhF,KAAVC,KAAeqhF,IAAMthF,KAArBC,KAA0BqhF,GAAG5+D,QAAU1iB,KAAvCC,KAA4CqhF,GAAG5+D,OAAO2xB,QAC9CgtC,EAAcrhF,KAAtBC,KAA2BqhF,GAAG5+D,OAAO2xB,QACpBr0C,KAAjBC,KAAsBo0C,UACdgtC,EAAcrhF,KAAtBC,KAA2Bo0C,WAIlBgtC,EACH,MAAM,IAAI7gF,MAAM,yBAGlB,OAAO,IAAI6gF,EAAY,SAAC/sC,EAASiI,GAC/B,IAAI7+C,EACJpD,EAAKkN,UAAU,SAAC8H,GAAS,OAAA5R,EAAQ4R,GAAG,SAACpJ,GAAa,OAAAq2C,EAAOr2C,IAAM,WAAM,OAAAouC,EAAQ52C,QAtS1EoG,EAATP,OAA4B,SAAIiE,GAC5B,OAAO,IAAI1D,EAAc0D,IAwS7B1D,EAvUA,GAAA29E,aAAA39E,gGCzBA,SAAA49E,EAAuCzhF,GACrC,IAAM++E,EAAc/+E,EAAK++E,OAEzB,GAAsB,mBAAXA,EAIT,OAHKA,EAAO/0E,WACV+0E,EAAO/0E,SAAW+0E,EAAO,sBAEpBA,EAAO/0E,SAGN,IAAZ0J,EAAA1T,EAAAsT,IACI,GAAII,GAA0C,mBAA5B,IAAIA,GAAM,cAC1B,MAAO,aAED,IAAZ6E,EAAAvY,EAAA2X,IAEI,GAAIY,EAEF,IADA,IAAI0Z,EAAO54B,OAAOqoF,oBAAoBnpE,EAAI/e,WACjCoL,EAAI,EAAGA,EAAIqtB,EAAK7tB,SAAUQ,EAAG,CACpC,IAAIiP,EAAMoe,EAAKrtB,GAEf,GAAY,YAARiP,GAA6B,SAARA,GAAkB0E,EAAI/e,UAAUqa,KAAS0E,EAAI/e,UAAmB,QACvF,OAAOqa,EAIb,MAAO,aA1BK7X,EAAhBylF,uBAAAA,EA8BazlF,EAAbgO,SAAwBy3E,EAAuB1hF,KAA/CC,MAKahE,EAAb2lF,WAA0B3lF,EAA1BgO,6UC7BA43E,gBAAA,SAAAvlF,GAGE,SAAFulF,EAAsBjvE,EAAuChU,EAAuBE,GAChFxC,EAAJiB,KAAApE,MADsBA,KAAtByZ,OAAsBA,EAAuCzZ,KAA7DyF,WAA6DA,EAAuBzF,KAApF2F,WAAoFA,EAF1E3F,KAAV2H,MAA0B,EAmB1B,OApB2CnE,YAA3CklF,EAAAvlF,GAOYulF,EAAZpoF,UAAAgE,MAAE,SAAgBC,GACdvE,KAAKyZ,OAAOjU,WAAWxF,KAAKyF,WAAYlB,EAAOvE,KAAK2F,WAAY3F,KAAK2H,QAAS3H,OAGtE0oF,EAAZpoF,UAAAwM,OAAE,SAAiBhI,GACf9E,KAAKyZ,OAAOR,YAAYnU,EAAO9E,MAC/BA,KAAKsF,eAGGojF,EAAZpoF,UAAA6K,UAAE,WACEnL,KAAKyZ,OAAO5T,eAAe7F,MAC3BA,KAAKsF,eAETojF,EApBA,CAA2Ct9E,aAoB3CC,YApBAs9E,kBAAAD,sECQA,SAAAxjF,kBAAqC0jF,EACAp6E,EACA/I,EACAE,GACnC,IAAIzB,EAA+B,IAAI2kF,kBAAzCH,gBAAyDE,EAAiBnjF,EAAYE,GAEpF,GAAIzB,EAAY9C,OACd,OAAO,KAGT,GAAIoN,aAAkB9D,aAAxBC,WACI,OAAI6D,EAAOI,WACT1K,EAAYqB,KAAWiJ,EAAQjK,OAC/BL,EAAYsG,WACL,OAEPtG,EAAY8kB,oBAAqB,EAC1Bxa,EAAOH,UAAUnK,IAErB,GAAI2Q,YAAbC,YAAyBtG,GAAS,CAC9B,IAAK,IAAI9C,EAAI,EAAGkB,EAAM4B,EAAOtD,OAAQQ,EAAIkB,IAAQ1I,EAAY9C,OAAQsK,IACnExH,EAAYqB,KAAKiJ,EAAO9C,IAErBxH,EAAY9C,QACf8C,EAAYsG,eAET,CAAA,GAAIiK,YAAbC,UAAuBlG,GAcnB,OAbAA,EAAOgC,KACL,SAACjM,GACML,EAAY9C,SACf8C,EAAYqB,KAAUhB,GACtBL,EAAYsG,aAGhB,SAACuC,GAAa,OAAA7I,EAAYY,MAAMiI,KAEjCyD,KAAK,KAAM,SAACzD,GAEXlG,KAANC,KAAW2J,WAAW,WAAQ,MAAM1D,MAEzB7I,EACF,GAAIsK,GAA6C,mBAA5BA,EAAO8C,SAArCR,UAEI,IADA,IAAMA,EAAgBtC,EAAO8C,SAAjCR,cACO,CACD,IAAI4oB,EAAO5oB,EAASvL,OACpB,GAAIm0B,EAAK7qB,KAAM,CACb3K,EAAYsG,WACZ,MAGF,GADAtG,EAAYqB,KAAKm0B,EAAKn1B,OAClBL,EAAY9C,OACd,WAGC,GAAIoN,GAA+C,mBAA9BA,EAAOgG,WAArC1E,YAAwE,CACpE,IAAMg5E,EAAMt6E,EAAOgG,WAAvB1E,cACI,GAA6B,mBAAlBg5E,EAAIz6E,UAGb,OAAOy6E,EAAIz6E,UAAU,IAAIw6E,kBAA/BH,gBAA+CE,EAAiBnjF,EAAYE,IAFtEzB,EAAYY,MAAM,IAAI8M,UAAU,uEAI7B,CACL,IACMm3E,EAAV,iBADkBhE,WAAlBx2C,SAA2B//B,GAAU,oBAAsB,IAAIA,EAA/D,KACA,4FAEItK,EAAYY,MAAM,IAAI8M,UAAUm3E,KAElC,OAAO,KAnEO,IAAhBC,oBAAA9jF,ySC6CA,SAAA+jF,YACEt5E,EACA0F,GAEA,OAAO,SAAmCvH,GACxC,OAAOA,EAAOI,KAAK,IAAIg7E,kBAAkBv5E,EAAS0F,KALtC,IAAhB8zE,YAAAj7D,YASAg7D,kBAAA,WACE,SAAFA,EAAsBv5E,EACA0F,GADArV,KAAtB2P,QAAsBA,EACA3P,KAAtBqV,eAAsBA,EAMtB,OAHE6zE,EAAF5oF,UAAA8D,KAAE,SAAKmG,EAA2BuD,GAC9B,OAAOA,EAAOO,UAAU,IAAI+6E,oBAAoB7+E,EAAYvK,KAAK2P,QAAS3P,KAAKqV,kBAEnF6zE,EARA,GAeAE,oBAAA,SAAAjmF,GAIE,SAAFimF,EAAcllF,EACQyL,EACA0F,GAClBlS,EAAJiB,KAAApE,KAAUkE,GAFYlE,KAAtB2P,QAAsBA,EACA3P,KAAtBqV,eAAsBA,EALZrV,KAAV2H,MAA0B,EAoE1B,OArE2CnE,YAA3C4lF,EAAAjmF,GAUYimF,EAAZ9oF,UAAAgE,MAAE,SAAgBC,GACd,IAAIiK,EACE7G,EAAQ3H,KAAK2H,QACnB,IACE6G,EAASxO,KAAK2P,QAAQpL,EAAOoD,GAC7B,MAAO7C,GAEP,YADA9E,KAAKkE,YAAYY,MAAMA,GAGzB9E,KAAK+V,UAAUvH,EAAQjK,EAAOoD,IAGxByhF,EAAV9oF,UAAAyV,UAAE,SAAkBvH,EAA4BjK,EAAUoD,GACtD,IAAM3C,EAAoBhF,KAAKgF,kBAC3BA,GACFA,EAAkBM,cAEpBtF,KAAKoF,IAAIpF,KAAKgF,kBAAoBC,oBAAtCC,kBAAwDlF,KAAMwO,EAAQjK,EAAOoD,KAGjEyhF,EAAZ9oF,UAAA6K,UAAE,WACS,IAAXnG,EAAAhF,KAAAgF,kBACSA,IAAqBA,EAAkB5D,QAC1C+B,EAAN7C,UAAY6K,UAAZ/G,KAAApE,OAIuCopF,EAAvC9oF,UAAAmH,aAAuC,WACnCzH,KAAKgF,kBAAoB,MAG3BokF,EAAF9oF,UAAAuF,eAAE,SAAekF,GACb/K,KAAKqF,OAAO0F,GACZ/K,KAAKgF,kBAAoB,KACrBhF,KAAKuO,WACPpL,EAAN7C,UAAY6K,UAAZ/G,KAAApE,OAIEopF,EAAF9oF,UAAAkF,WAAE,SAAWC,EAAeC,EACfC,EAAoBC,EACpBmF,GACL/K,KAAKqV,eACPrV,KAAKqpF,eAAe5jF,EAAYC,EAAYC,EAAYC,GAExD5F,KAAKkE,YAAYqB,KAAKG,IAIlB0jF,EAAV9oF,UAAA+oF,eAAE,SAAuB5jF,EAAeC,EAAeC,EAAoBC,GACvE,IAAI4I,EACJ,IACEA,EAASxO,KAAKqV,eAAe5P,EAAYC,EAAYC,EAAYC,GACjE,MAAOmH,GAEP,YADA/M,KAAKkE,YAAYY,MAAMiI,GAGzB/M,KAAKkE,YAAYqB,KAAKiJ,IAE1B46E,EArEA,CAA2CtjF,kBAqE3CC,qDCxJAujF,6BAAA,WAwEA,SAAAA,EAActwB,EACAhP,EACAozB,EACA7lD,EAGAymB,GANAh+C,KAAdg5D,QAAcA,EACAh5D,KAAdgqD,iBAAcA,EACAhqD,KAAdo9E,KAAcA,EACAp9E,KAAdu3B,kBAAcA,EAGAv3B,KAAdg+C,SAAcA,EAxCLh+C,KAATC,GAAsB,gBAAAkI,KAAqBD,MAMlClI,KAAT0nD,SAQI,UAIM1nD,KAAVo6D,eAA6D,aAGnDp6D,KAAVu4B,eAAmC,EAEzBv4B,KAAV25B,OAAsC,IAAIt4B,KAAAA,aAChCrB,KAAVupF,QAAuC,IAAIloF,KAAAA,oBAmBxCioF,EAAHhpF,UAAA6B,YAAG,WAICnC,KAHKwpF,kBAQTrpF,OAAAC,eALGkpF,EAKHhpF,UAAA,YAAA,CAAAmD,IAAA,WACI,OALOzD,KAAK85D,YAAc95D,KAAK85D,WAAW2vB,+CAW9CtpF,OAAAC,eAPGkpF,EAOHhpF,UAAA,SAAA,CAOAmD,IAAA,WACI,OATOzD,KAAKukF,SAChB7gF,IAAA,SAPGa,GAQCvE,KAPKukF,QAAUhgF,EAQfvE,KAPK0pF,8CAONJ,EAAHhpF,UAAAsuC,UAAG,WAAA,IAAHztC,EAAAnB,KACSA,KAAK85D,WAcR95D,KAXK0pF,aASL1pF,KAXK2pF,cAAc3pF,KAAKmxB,UAetBnxB,KAXK85D,aAAc95D,KAAM85D,WAAW2vB,gBAYtCzpF,KAXK85D,WAAWc,OAAO56D,KAAKy6D,QAY5Bz6D,KAXK4pF,2BAA6B5pF,KAAK6pF,6BAazC7pF,KAXKu3B,kBAAkBt1B,eAYvBwO,WAXW,WAYLtP,EAXK24D,YAYP34D,EAXK24D,WAAWwhB,oBAKrBgO,EAAHhpF,UAAAwpF,WAAG,WAAA,IAAH3oF,EAAAnB,KAcIA,KAbKo9E,KAAKiB,IAAI,WAcRl9E,EAbK24D,YAAc34D,EAAK24D,WAAW2vB,gBAcrCtoF,EAbK24D,WAAWU,SAchBr5D,EAbKyoF,2BAA2BtkF,eAelCnE,EAbKooF,QAAQxnF,MAAK,GAcdZ,EAbK4oF,WAcP5oF,EAbKo2B,kBAAkBt1B,kBAK5BqnF,EAAHhpF,UAAA0pF,gBAAG,SAAAp5D,GAiBC5wB,KAhBK8pF,cAuBT3pF,OAAAC,eAhBGkpF,EAgBHhpF,UAAA,sBAAA,CAAAmD,IAAA,WACI,OAhBO8uB,MAAAA,MAkBLvyB,KAhBKiqF,qDAuBX9pF,OAAAC,eAlBGkpF,EAkBHhpF,UAAA,qBAAA,CAAAmD,IAAA,WAAA,IAAAtC,EAAAnB,KACI,OAlBKA,KAAKg+C,SAIHzrB,MAAAA,MAAM23D,UAAAA,UAAUlqF,KAAKg+C,SAAU,aAAcksC,UAAAA,UAAUlqF,KAAKg+C,SAAU,aAAa1tB,KAmBxFlU,OAAAA,OAlBO,SAACwU,GAmBN,IAlBMu5D,EAA2Bv5D,EAAgB,OAC3Cw5D,EAmBJjpF,EAlBK4oF,WAmBLI,IAlBgBhpF,EAAKkpF,sBAAsB/1D,gBAmB1CnzB,EAlBKkpF,sBAAsB/1D,cAAc2L,SAASkqD,MAChDhpF,EAAK24D,aAAc34D,EAAM24D,WAAWwwB,eAAerqD,SAASkqD,GAsBjE,OAHIhpF,EAlBK4oF,WAAe5oF,EAAK24D,YAAc34D,EAAK24D,WAAWwwB,eAAerqD,SAASkqD,IAAgBhpF,EAAKo3B,eAmBtGp3B,EAlBKw4B,OAAO53B,KAAK6uB,GAEZw5D,KAdFG,GAAAA,sCAuBVjB,EAAHhpF,UAAAupF,0BAAG,WAAA,IAAH1oF,EAAAnB,KACUwqF,EAA+BxqF,KAAKo9E,KAAKqN,SAAS3sE,eAAewS,KAAKu2D,WAqB5E,OACEt0D,MAAAA,MAlBMi4D,GAmBHl6D,KAGCpC,YAlBU,WAmBR,OAlBO/sB,EAAKupF,sBAqBd7D,WAGDx4E,UAlBU,SAACuiB,GAAe,OAAAzvB,EAAK6oF,gBAAgBp5D,MAIrD04D,EAAHhpF,UAAAqpF,cAAG,SAAAx4D,GAAA,IAAHhwB,EAAAnB,KAsBIA,KArBKy6D,OAAS,IAAIjqC,OAAAA,eAAeW,EAAUnxB,KAAKgqD,kBAsBhDhqD,KArBK85D,WAAa95D,KAAKg5D,QAAQ5uD,OAAOpK,KAAK2qF,oBAsB3C3qF,KArBK85D,WAAW8wB,gBAAgBv8E,UAAU,WAAM,OAAAlN,EAAK2oF,gBAGtDR,EAAHhpF,UAAAkpF,eAAG,WAwBKxpF,KAvBK85D,aAwBP95D,KAvBK8pF,aAwBL9pF,KAvBK85D,WAAWC,UAwBhB/5D,KAvBK85D,WAAa3yD,YAIrBmiF,EAAHhpF,UAAAqqF,iBAAG,WA0BC,IAzBMphE,EAAwB,IAAI0wC,QAAAA,cA0ClC,OAxCKj6D,KAAKysC,MA4BRljB,EAzBOkjB,MAAQzsC,KAAKysC,MAuBpBljB,EAzBOkjB,MAAQzsC,KAAK6qF,eA8BlB7qF,KAzBK8uB,SA0BPvF,EAzBOuF,OAAS9uB,KAAK8uB,QA4BvBvF,EAzBO2wC,iBAAmBl6D,KAAKm6D,cA0B/B5wC,EAzBOuhE,aAAc,EA0BrBvhE,EAzBOylB,UAAY,MA0BnBzlB,EAzBO6wC,eAAiBp6D,KAAK+qF,oBAEtBxhE,GAOR+/D,EAAHhpF,UAAA65D,YAAG,WA0BC,GAzBsB,WAyBlBn6D,KAzBK0nD,SA0BP,OAzBO1nD,KAAKg5D,QA0BTtR,WACAiU,YAzBY37D,KAAKqqF,sBAAuB,CAAE9uB,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,WA0BhHK,qBAzBqB,CAAER,QAAS,QAASC,QAAS,OAAS,CAAEC,SAAU,QAASC,SAAU,QA0B1FK,qBAzBqB,CAAER,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,WAG9F,IAAA94B,EAAR5iC,KAAA0nD,SAAAngB,SAAA,SAAA,CAAA,MAAA,SAAA,CAAA,QAAA,OAAQg0B,EAAR34B,EAAA,GAAkBooD,EAAlBpoD,EAAA,GACQI,EAARhjC,KAAA0nD,SAAAngB,SAAA,OAAA,CAAA,MAAA,UAAA,CAAA,SAAA,OAAQi0B,EAARx4B,EAAA,GAAkB04B,EAAlB14B,EAAA,GAEQk4B,EAAsCl7D,KAAKg5D,QA0B5CtR,WACAiU,YAzBY37D,KAAKqqF,sBAAuB,CAAE9uB,QAyBjDA,EAzB0DC,QAyB1DA,GAzBqE,CAAEC,SAAUF,EAASG,SAyB1FA,IACOuvB,cAzBc,OAwCjB,MAtCsB,WAyBlBjrF,KAzBK0nD,SA0BPwT,EAzBWA,EAASa,qBAAqB,CAAER,QAASyvB,EAAWxvB,QAAS,UAAY,CAAEC,SAAUuvB,EAAWtvB,SAAU,SAC1F,UAAtB17D,KAAS0nD,UAA0C,YAAlB1nD,KAAK0nD,UAA0B1nD,KAAK0nD,SAASngB,SAAS,kBA0B5F2zB,EAzBWA,EA0BRa,qBAzBqB,CAAER,QAyBhCA,EAzByCC,QAAS,OAAS,CAAEC,SAAUF,EAASG,SAAU,WA0BjFK,qBAzBqB,CAAER,QAASyvB,EAAWxvB,QAAS,UAAY,CAAEC,SAAUuvB,EAAWtvB,SAAU,QA0BjGK,qBAzBqB,CAAER,QAASyvB,EAAWxvB,QAAS,OAAS,CAAEC,SAAUuvB,EAAWtvB,SAAU,WAC5F17D,KAAK0nD,SAASngB,SAAS,iBA0B1B2zB,EAzBWA,EA0BRa,qBAzBqB,CAAER,QAASA,EAASC,QAAS,UAAY,CAAEC,SAAUF,EAASG,SAAU,WA0B7FK,qBAzBqB,CAAER,QAASyvB,EAAWxvB,QAAS,UAAY,CAAEC,SAAUuvB,EAAWtvB,SAAU,aAGjGR,GAGRouB,EAAHhpF,UAAAyqF,kBAAG,WA4BC,OAAQ/qF,KA3BKo6D,gBA4BX,IA3BK,QA4BH,OA3BOp6D,KAAKg5D,QAAQqB,iBAAiB6wB,QA4BvC,IA3BK,aA4BH,OA3BOlrF,KAAKg5D,QAAQqB,iBAAiBC,aA4BvC,QACE,OA3BOt6D,KAAKg5D,QAAQqB,iBAAiBh4D,UAI1CinF,EAAHhpF,UAAAopF,WAAG,WA8BK1pF,KA7BK85D,aACF95D,KAAKysC,QA8BRzsC,KA7BK85D,WAAWqxB,YAAY1+C,MAAQzsC,KAAK6qF,gBA+BvC7qF,KA7BK8uB,SA8BP9uB,KA7BK85D,WAAWqxB,YAAYr8D,OAAS9uB,KAAK8uB,QA+B5C9uB,KA7BK85D,WAAWsxB,WAAWprF,KAAK85D,WAAWqxB,aA8B3CnrF,KA7BK85D,WAAWwhB,iBA8BhBt7E,KA7BKu3B,kBAAkBt1B,iBAI1BqnF,EAAHhpF,UAAA+pF,oBAAG,WAgCC,OA/BOrqF,KAAKyZ,QAGb6vE,EAAHhpF,UAAAuqF,aAAG,WAkCC,OAjCO7qF,KAAKqqF,sBAAsB/1D,cAAcu0B,wBAAwBpc,SArS5E,GAuSO68C,6BAAP/mF,WAA2C,CAkC3C,CAjCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAkCvBC,SAjCU,wBAkCVuwB,SAjCU,uKAwCVI,gBAjCiBC,KAAAA,wBAAwBC,WAI1C63D,6BAADxlF,eAAC,WAAA,MAAA,CAoCD,CAACrD,KAAM04D,QAAAA,SACP,CAAC14D,KAAMsxB,KAAAA,kBACP,CAACtxB,KAAM+iF,KAAAA,QACP,CAAC/iF,KAAMgC,KAAAA,mBACP,CAAChC,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAM+B,KAAAA,UAAY,CAAE/B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAAC0qF,OAAAA,eAjCnE/B,6BAAPvlF,eAAgE,CAoChEotB,SAnCY,CAAA,CAAG1wB,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA8uB,KAAAA,eAoCtC2C,MAnCS,CAAA,CAAG3xB,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,WAoCnC+mD,SAnCY,CAAA,CAAGjnD,KAAMK,KAAAA,QAoCrBs5D,eAnCkB,CAAA,CAAG35D,KAAMK,KAAAA,QAoC3B2rC,MAnCS,CAAA,CAAGhsC,KAAMK,KAAAA,QAoClBguB,OAnCU,CAAA,CAAGruB,KAAMK,KAAAA,QAoCnBy3B,cAnCiB,CAAA,CAAG93B,KAAMK,KAAAA,QAoC1B64B,OAnCU,CAAA,CAAGl5B,KAAMkC,KAAAA,SAoCnB4mF,QAnCW,CAAA,CAAG9oF,KAAMkC,KAAAA,SAoCpB8W,OAnCU,CAAA,CAAGhZ,KAAMK,KAAAA,SCtUnB,IAAMwkB,cAA4C,GAKlD,SAAAtjB,OAHCyW,IACM6yE,KAAAA,aAAe7yE,KAAW6M,gBAM/BA,cAHc7M,IAAW,EAIzBwtB,QAHQslD,KAAK9yE,ICUf,IAAA+3B,oBAAA,WA2CA,SAAAA,EAHqBlxB,EAA6BwlB,GAA7B9kC,KAArBsf,QAAqBA,EAA6Btf,KAAlD8kC,IAAkDA,EAlC/C9kC,KAAHwrF,mBAAgC,QAG9BxrF,KAAFm4D,KAWI,UACDn4D,KAAHo6D,eAAsD,aAEnDp6D,KAAHysC,OAAmB,EAChBzsC,KAAHgnD,cAA2B,EAExBhnD,KAAHyrF,QAAoC,IAAIpqF,KAAAA,aAU9BrB,KAAV0rF,aAAgC,EACtB1rF,KAAV2rF,WAA+B,GAQ3B3rF,KAAK04B,aAAe14B,KAAK4rF,YAAY3kF,KAAKjH,MAC1CA,KAAK6rF,aAAe7rF,KAAK8pF,WAAW7iF,KAAKjH,aAD1CwwC,EAAHlwC,UAAA04B,SAAG,WAOKh5B,KANKgnD,cAOPhlD,OANO,qEAGIhC,KAAKsf,QAAQgV,cAAc2E,cAAc,UAC/CC,iBAAiB,QAASl5B,KAAK04B,cAOlC14B,KANK8rF,uBAOP9rF,KANK+rF,oBAAsBnyD,QAAQm5B,aAAa/yD,KAAKsf,QAAQgV,cAAet0B,KAAK8rF,wBAIpFt7C,EAAHlwC,UAAA6B,YAAG,WAUC,IARIg3B,EAASn5B,KAAKsf,QAAQgV,cAAc2E,cAAc,UASlDE,GACFA,EAROC,oBAAoB,QAASp5B,KAAK04B,cAUvC14B,KARK+rF,qBAAmD,UAA5B/rF,KAAKwrF,oBASnCxrF,KARK+rF,oBAAoB3yD,oBAAoB,SAAUp5B,KAAK6rF,eAelE1rF,OAAAC,eAXGowC,EAWHlwC,UAAA,QAAA,CAAAoD,IAAA,SAXG43B,GAYCt7B,KAXKu7B,OAASD,EAadt7B,KAXKgsF,WAAa1wD,EAAM3a,IAAI,SAAC+Y,GAY3B,OAXOA,EAAKpa,QAAQgV,cAAc23D,6CAkBxC9rF,OAAAC,eAbGowC,EAaHlwC,UAAA,YAAA,CAAAmD,IAAA,WACI,OAbOzD,KAAKg5D,SAAWh5D,KAAKg5D,QAAQ+wB,2CAGrCv5C,EAAHlwC,UAAAsuC,UAAG,WAgBC5uC,KAfKg5D,QAAQpqB,YAgBT5uC,KAfK+rF,qBAAmD,UAA5B/rF,KAAKwrF,oBAgBnCxrF,KAfK+rF,oBAAoB7yD,iBAAiB,SAAUl5B,KAAK6rF,cAiB3D7rF,KAfKyrF,QAAQ1pF,MAAK,IAGnByuC,EAAHlwC,UAAAwpF,WAAG,WAkBC9pF,KAjBKg5D,QAAQ8wB,aAkBT9pF,KAjBK+rF,qBAAmD,UAA5B/rF,KAAKwrF,oBAkBnCxrF,KAjBK+rF,oBAAoB3yD,oBAAoB,SAAUp5B,KAAK6rF,eAGrC,IAiBrB7rF,KAjBK0rF,cAkBP1rF,KAjBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,GAmBnDtI,KAjBK0rF,aAAc,EAkBnB1rF,KAjBK8kC,IAAI7iC,eAkBTjC,KAjBKyrF,QAAQ1pF,MAAK,IAGnByuC,EAAHlwC,UAAAsrF,YAAG,WAoBC5rF,KAnBK+pF,UAAY/pF,KAAK8pF,aAAe9pF,KAAK4uC,aAM3C4B,EAAHlwC,UAAA+4B,UAAG,SAAAzI,GAAA,IAAHzvB,EAAAnB,KAqBI,GAAIA,KApBK+pF,WAAan5D,EAAMiC,UAAYyG,SAASC,IAqB/CK,QApBQC,aAAajJ,GAsBrB5wB,KApBK8pF,kBACA,GAAAl5D,EAAUiC,UAAYyG,SAASvG,MAqBpC6G,QApBQC,aAAajJ,GAsBrB5wB,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAaz+C,QAAQrc,QAC3C,GAAAA,EAAUiC,UAAYyG,SAASu8C,KAAM,CA8B1C,IATAj8C,QApBQC,aAAajJ,IAEI,IAoBrB5wB,KApBK0rF,cAqBP1rF,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,GAsBnDtI,KApBK0rF,cAqBD1rF,KApBK0rF,cAAgB1rF,KAAKu7B,OAAOrwB,SAqBnClL,KApBK0rF,YAAc,GAsBd1rF,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAaxpF,UAqB7ClC,KApBK0rF,cAqBD1rF,KApBK0rF,cAAgB1rF,KAAKu7B,OAAOrwB,SAqBnClL,KApBK0rF,YAAc,GAuBvB1rF,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,EAqBjDtI,KApBKk8E,sBACA,GAAAtrD,EAAUiC,UAAYyG,SAASq8C,GAAI,CA8BxC,IATA/7C,QApBQC,aAAajJ,IAEI,IAoBrB5wB,KApBK0rF,cAqBP1rF,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,GAsBnDtI,KApBK0rF,cAqBD1rF,KApBK0rF,YAAc,IAqBrB1rF,KApBK0rF,YAAc1rF,KAAKu7B,OAAOrwB,OAAS,GAsBnClL,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAaxpF,UAqB7ClC,KApBK0rF,cAqBD1rF,KApBK0rF,YAAc,IAqBrB1rF,KApBK0rF,YAAc1rF,KAAKu7B,OAAOrwB,OAAS,GAuB5ClL,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,EAqBjDtI,KApBKk8E,sBACA,GACa,IAoBjBtrD,EApBMiC,SAAiBjC,EAAMiC,SAAW,IACvB,IAoBjBjC,EApBMiC,SAAiBjC,EAAMiC,SAAW,KACvB,IAoBjBjC,EApBMiC,SAAiBjC,EAAMiC,SAAW,IAqBzCjC,EApBMiC,UAAYyG,SAASxG,MAC3B,CAqBA8G,QApBQC,aAAajJ,GAuBrBsJ,aApBal6B,KAAKksF,mBAqBlBlsF,KApBKksF,kBAAoBz7E,WAAW,WAqBlCtP,EApBKwqF,WAAa,IACjB,KAqBH,IApBIQ,EAAO9uD,OAAOiiD,aAAa1uD,EAAMiC,SAqBrC7yB,KApBK2rF,WAAa3rF,KAAK2rF,WAAWz0E,OAAOi1E,GAqBzC,IApBIxkF,EAAQ3H,KAAKgsF,WAAWzpC,UAAU,SAACh+C,GAqBrC,OApBO,IAAIuuD,OAAO,IAAC3xD,EAAQwqF,WAAWvxD,eAAiB+4B,KAAK5uD,EAAMigC,OAAOpK,kBAE7D,IAoBVzyB,KAnBuB,IAoBrB3H,KApBK0rF,cAqBP1rF,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,GAsBnDtI,KApBK0rF,YAAc/jF,EAqBnB3H,KApBKu7B,OAAOlF,UAAUr2B,KAAK0rF,aAAapjF,QAAS,EAqBjDtI,KApBKk8E,sBAEF,CAAK5iD,SAASkG,UAAWlG,SAASinB,QAAQhZ,SAAS3W,EAAMiC,WAqB9D+G,QApBQC,aAAajJ,GAsBrBsJ,aApBal6B,KAAKksF,mBAqBlBlsF,KApBKksF,kBAAoBz7E,WAAW,WAqBlCtP,EApBKwqF,WAAa,IACjB,KAqBH3rF,KApBK2rF,WAAa3rF,KAAK2rF,WAAWx7E,MAAM,GAAG,KAI9CqgC,EAAHlwC,UAAA8rF,iBAAG,SAAAx7D,GAwBKA,EAvBMiC,UAAYyG,SAASC,KAAO3I,EAAMiC,UAAYyG,SAASvG,QAwB/D6G,QAvBQC,aAAajJ,GAwBrB5wB,KAvBK8pF,eAIRt5C,EAAHlwC,UAAA47E,eAAG,WA0BC,IAzBIzI,EAAYzzE,KAAKg5D,QAAQc,WAAWwwB,eAAerxD,cAAc,uBACjES,EAAO15B,KAAKu7B,OAAOlF,UAAUr2B,KAAK0rF,aA0BlCjY,GAzBa/5C,IA0Bf+5C,EAzBU/qB,UAAYhvB,EAAKpa,QAAQgV,cAAc69C,cA3MvD,GA8MO3hC,oBAAPjuC,WAA2C,CA0B3C,CAzBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA0BvBC,SAzBU,gBA0BVuwB,SAzBU,iaAWXqf,oBAAD1sC,eAAC,WAAA,MAAA,CA4BD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMgC,KAAAA,qBAzBA+tC,oBAAPzsC,eAAgE,CA4BhE+nF,qBA3BwB,CAAA,CAAGrrF,KAAMK,KAAAA,QA4BjC0qF,mBA3BsB,CAAA,CAAG/qF,KAAMK,KAAAA,QA4B/BurF,eA3BkB,CAAA,CAAG5rF,KAAMK,KAAAA,QA4B3Bq3D,KA3BQ,CAAA,CAAG13D,KAAMK,KAAAA,QA4BjBs5D,eA3BkB,CAAA,CAAG35D,KAAMK,KAAAA,QA4B3BguB,OA3BU,CAAA,CAAGruB,KAAMK,KAAAA,QA4BnB2rC,MA3BS,CAAA,CAAGhsC,KAAMK,KAAAA,QA4BlBkmD,aA3BgB,CAAA,CAAGvmD,KAAMK,KAAAA,QA4BzB2qF,QA3BW,CAAA,CAAGhrF,KAAMkC,KAAAA,SA4BpBq2D,QA3BW,CAAA,CAAGv4D,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA2oF,gCA4BrCnwD,OA3BU,CAAA,CAAG14B,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,aA4BpC04B,UA3Ba,CAAA,CAAG54B,KAAM8zC,KAAAA,aAAc5zC,KAAM,CAAA,UAAY,CAAA,cA+BtD,IAAA2rF,gBAAA,WA+DA,SAAAA,EAlFsB39C,EAAsCrvB,GAAtCtf,KAAtB2uC,SAAsBA,EAAsC3uC,KAA5Dsf,QAA4DA,EALlDtf,KAAVusF,UAA8B,EACpBvsF,KAAVwI,OAAsC,IAAInH,KAAAA,aAEjCrB,KAATsI,QAA2B,SAKxBgkF,EAAHhsF,UAAA2sC,QAAG,SAAArc,GAEM5wB,KAAKkC,WAEHlC,KAAKusF,UAsFRvsF,KArFK2uC,SAASm7C,aAwFhB9pF,KArFKwI,OAAOzG,KAAK,CAAEyqF,cAAe57D,QAQxC,GALO07D,gBAAP/pF,WAA2C,CAsF3C,CArFE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAsFvBC,SArFU,OAsFVuwB,SArFU,4BAsFVvtB,KArFM,CAsFJitE,mBArFoB,WAsFpBp2C,iBArFkB,cAKrB6xD,gBAADxoF,eAAC,WAAA,MAAA,CAwFD,CAACrD,KAAM+vC,qBACP,CAAC/vC,KAAMizB,KAAAA,cArFA44D,gBAAPvoF,eAAgE,CAwFhE7B,SAvFY,CAAA,CAAGzB,KAAMK,KAAAA,QAwFrByrF,SAvFY,CAAA,CAAG9rF,KAAMK,KAAAA,QAwFrB0H,OAvFU,CAAA,CAAG/H,KAAMkC,KAAAA,SAwFnBsqC,QAvFW,CAAA,CAAGxsC,KAAM8zC,KAAAA,aAAc5zC,KAAM,CAAA,QAAU,CAAA,cA2FlD,IAAA8rF,kBAAA,WA6BA,SAAAA,EAhHsB99C,GAAA3uC,KAAtB2uC,SAAsBA,SAEnB89C,EAAHnsF,UAAA8vB,mBAAG,WAmHCpwB,KAlHK2uC,SAASrT,MAAQt7B,KAAKs7B,SAgF/B,GA9EOu4C,kBAAPtxE,WAA2C,CAmH3C,CAlHE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAmHvBC,SAlHU,OAmHVuwB,SAlHU,gCAIX0iD,kBAAD/vE,eAAC,WAAA,MAAA,CAqHD,CAACrD,KAAM+vC,uBAlHAqjC,kBAAP9vE,eAAgE,CAqHhEu3B,MApHS,CAAA,CAAG76B,KAAMq2B,KAAAA,gBAAiBn2B,KAAM,CAAA2rF,oBAwHzC,IAAAI,wBAAA,aAnH2CrY,wBAA3C9xE,WAA+E,CAoI/E,CAnIE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAoIvBC,SAnIU,uBAoIVuwB,SAnIU,gCAIXkjD,wBAADvwE,eAAC,WAAA,MAAA,ICvUD,IAAAitD,kBAAA,aACuCA,kBAAvCxuD,WAA2E,CAC3E,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACtBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAauqD,QAAAA,cAAez7B,UAAAA,sBACpDnuD,aAAc,CAAAumF,8BACdxmF,QAAS,CAAAwmF,6BAA+Bp4B,UAAAA,0BAIzCH,kBAADjtD,eAAC,WAAA,MAAA,ICbD,IAAAkxC,mBAAA,aAEwCA,mBAAxCzyC,WAA4E,CAC5E,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACtBmzB,QAAS,CAAAi9B,mBACThuD,aAAc,CAAAytC,oBAAsB87C,gBAAiBzY,kBAAiBQ,yBACtEvxE,QAAS,CAAA0tC,oBAAsB87C,gBAAiBzY,kBAAiBQ,6BAIlEr/B,mBAADlxC,eAAC,WAAA,MAAA,ICcD,IAFM8oF,sBAAwB,CAG5Bz1D,QAFS6D,MAAAA,kBAGT5D,YAFapB,KAAAA,WAAW,WAAM,OAAA62D,oBAG9BtsF,OAFO,GAITssF,kBAAA,WA2CA,SAAAA,EALWvtE,EACA4Y,EACA4M,EACCgoD,EACAC,GAJD/sF,KAAXsf,QAAWA,EACAtf,KAAXk4B,OAAWA,EACAl4B,KAAX8kC,IAAWA,EACC9kC,KAAZ8sF,aAAYA,EACA9sF,KAAZ+sF,OAAYA,EApCV/sF,KAAFk7B,YAAwB,YAMtBl7B,KAAFgtF,SAAgC,IAAI3rF,KAAAA,aAElCrB,KAAFs2B,eAA0B,EACxBt2B,KAAFmT,OAAmB,EACjBnT,KAAFitF,OAAgB,CACZ3qF,MAAM,EACN4qF,OAAO,EACP3oF,MAAO,IAKTvE,KAAFy7B,cAA4B,aAC1Bz7B,KAAF07B,eAA6B,aAC3B17B,KAAF2rF,WAAuB,GAGrB3rF,KAAFkC,UAAsB,SAwBtB2qF,EAAAvsF,UAAA04B,SAAA,WAAA,IAAA73B,EAAAnB,KACIA,KARK8sF,aAAaz4D,QAAQr0B,KAAK2uC,SAASra,eAAejmB,UAAU,SAAC8+E,GAShE,OAAAhsF,EARK4rF,OAAO1O,IAAI,WACC,aAQX8O,GARyBhsF,EAAMe,UASjCf,EARKytC,gBAYX5uC,KARKywB,eAcTo8D,EAAAvsF,UAAAmwB,YAAA,SAXGC,GAWH,IAAAvvB,EAAAnB,KAkBI,GAjBAA,KAXKotF,UAA6B,IAAlBptF,KAAKotF,SAYjBptF,KAXKs8B,SAAWt8B,KAAKs8B,QAAQpxB,QAAqC,iBAApBlL,KAAKs8B,QAAQ,GAY7Dt8B,KAXKqtF,gBAAkBrtF,KAAKs8B,QAAQ3b,IAAI,SAAC+Y,GAYvC,MAXO,CAAEn1B,MAAOm1B,EAAM3E,MAAO2E,KAc/B15B,KAXKqtF,iBAAkBrtF,KAAMs8B,SAAW,IAYrClgB,OAXO,SAACsd,GAYP,OAXOA,EAAM+kD,WAad99D,IAXI,SAACrB,GAYJ,OAAVnf,OAAA24B,OAAA,GACexZ,EADf,CAEYhX,QAXQ,MAIXtI,KAAKy9B,OAASz9B,KAAMstF,YAElB,GAAAttF,KAASstF,YAAa,CAY3B,IAXI5zD,EAAO15B,KAAKs8B,QAAQixD,KAAK,SAAC7hF,GAAM,OAAAA,EAAEqpB,QAAU5zB,EAAKmsF,cACjD3lF,EAAQ3H,KAAKs8B,QAAQ10B,QAAQ8xB,GAYjC15B,KAXK25B,OAAOD,EAAM/xB,QAalB3H,KAXK8hC,WAAW9hC,KAAKy9B,YAKrBz9B,KAXKia,QAmBHja,KAXK+pF,WAYP/pF,KAXK4uC,aAiBXi+C,EAAAvsF,UAAA6B,YAAA,WACInC,KAbK8sF,aAAaj4D,eAAe70B,KAAK2uC,SAASra,gBAmBnDu4D,EAAAvsF,UAAAsuC,UAAA,WACI5uC,KAfKg5D,QAAQpqB,aAoBjBi+C,EAAAvsF,UAAAwpF,WAAA,WACI9pF,KAjBKg5D,QAAQ8wB,cAsBjB+C,EAAAvsF,UAAAsrF,YAAA,WAAA,IAAAzqF,EAAAnB,KACQA,KAnBK+pF,UAoBP/pF,KAnBK8pF,cAqBLr5E,WAnBW,WAoBTtP,EAnBKwtC,SAASra,cAAc8G,UAqB9Bp7B,KAnBK4uC,cAyBXzuC,OAAAC,eArBGysF,EAqBHvsF,UAAA,YAAA,CAAAmD,IAAA,WACI,OArBOzD,KAAKg5D,SAAWh5D,KAAKg5D,QAAQ+wB,2CA8BxC8C,EAAAvsF,UAAAktF,iBAAA,SArBG58D,GAsBKA,EArBMrsB,OAAwB,GAAfqsB,EAAMjpB,OAsBvB3H,KArBK25B,OAAO/I,EAAMrsB,MAAOqsB,EAAMjpB,OAuBjC3H,KArBK8pF,cA6BT+C,EAAAvsF,UAAAq5B,OAAA,SA1BG6C,EAAA9wB,EAAA+hF,QAAH,IAAAA,IAAGA,GAAH,GA2BQztF,KA1BK20B,WA2BP30B,KA1BK20B,SAASrsB,QAAS,GA4BzBtI,KA1BKs2B,cAAgB5qB,EA2BrB1L,KA1BK20B,SAAW6H,EA2BhBx8B,KA1BK20B,SAASrsB,QAAS,EA2BvBtI,KA1BKmT,OAAQ,EA2BTs6E,IACFztF,KA1BKy7B,cAAcz7B,KAAK20B,SAASpwB,OA2BjCvE,KA1BKgtF,SAASjrF,KAAK,CAAE4yB,SAAU30B,KAAK20B,SAASpwB,UAgCnDsoF,EAAAvsF,UAAA2Z,MAAA,WACIja,KA5BK20B,SAAW,CA6BdI,MA5BO/0B,KAAKk7B,YA6BZ32B,MA5BO,KA6BP+D,QA5BQ,GA8BVtI,KA5BKitF,OAAS,CA6BZ3qF,MA5BM,EA6BN4qF,OA5BO,EA6BP3oF,MA5BO,IA8BTvE,KA5BKs2B,eAAgB,EA6BrBt2B,KA5BKmT,OAAQ,GAkCjB05E,EAAAvsF,UAAA+4B,UAAA,SA9BGzI,GA8BH,IAAAzvB,EAAAnB,KAKI,GAHI,CA9BCs5B,SAASq8C,GAAIr8C,SAASu8C,MAAMtuC,SAAS3W,EAAMiC,UA+B9CjC,EA9BMoC,iBAgCJ,CA9BCsG,SAASC,IAAKD,SAASw7C,KAAKvtC,SAAS3W,EAAMiC,SA+B9C7yB,KA9BK8pF,kBACA,GAAAl5D,EAAUiC,UAAYyG,SAASvG,MA+BhC/yB,KA9BKitF,OAAO3qF,MAAQtC,KAAKitF,OAAO1oF,MA+BlCvE,KA9BK0tF,aAgCL1tF,KA9BKwtF,iBAAiB,CA+BpBjpF,MA9BOvE,KAAKqtF,gBAAgBrtF,KAAKs2B,eA+BjC3uB,MA9BO3H,KAAKs2B,qBAGX,GAAA1F,EAAUiC,UAAYyG,SAASq8C,GAC/B31E,KAAK+pF,WA+BR/pF,KA9BK4uC,YAEkB,EA8BrB5uC,KA9BKs2B,gBA+BPt2B,KA9BKs2B,gBA+BLt2B,KA9BK25B,OAAO35B,KAAKqtF,gBAAgBrtF,KAAKs2B,eAAgBt2B,KAAKs2B,eA+B3Dt2B,KA9BK2tF,yBAEF,GAAA/8D,EAAUiC,UAAYyG,SAASu8C,KAC/B71E,KAAK+pF,WA+BR/pF,KA9BK4uC,YAgCH5uC,KA9BKs2B,cAAgBt2B,KAAKqtF,gBAAgBniF,OAAS,IA+BrDlL,KA9BKs2B,gBA+BLt2B,KA9BK25B,OAAO35B,KAAKqtF,gBAAgBrtF,KAAKs2B,eAAgBt2B,KAAKs2B,eA+B3Dt2B,KA9BK2tF,mBA+BD3tF,KA9BKitF,OAAO3qF,MA+BdtC,KA9BK4tF,aAAa,MAAM,SAGvB,GAAAh9D,EAAUiC,UAAYyG,SAASq8C,IAA6B,IAAvB31E,KAAKs2B,cAC1Ct2B,KAAK+pF,WA+BR/pF,KA9BK4uC,YAgCP5uC,KA9BKs2B,gBA+BLt2B,KA9BK4tF,aAAa,MAAM,QACnB,GAAsB,IAAjBh9D,EAAMiC,SAAiBjC,EAAMiC,SAAW,IAAOjC,EAAMiC,UAAYyG,SAASxG,MAAO,CA+BvFlC,EA9BMiC,UAAYyG,SAASxG,OA+B7BlC,EA9BMoC,iBAEHhzB,KAAK+pF,WA+BR/pF,KA9BK4uC,YAgCP1U,aA9Bal6B,KAAKksF,mBA+BlBlsF,KA9BKksF,kBAAoBz7E,WAAW,WA+BlCtP,EA9BKwqF,WAAa,IACjB,KA+BH,IA9BIQ,EAAO9uD,OAAOiiD,aAAa1uD,EAAMiC,SA+BrC7yB,KA9BK2rF,WAAa3rF,KAAK2rF,WAAWz0E,OAAOi1E,GA+BzC,IA9BIzyD,EAAO15B,KAAKqtF,gBAAgBE,KAAK,SAAC7hF,GAAM,OAAmD,IAAnDA,EAAEqpB,MAAMqhC,cAAcxuD,QAAQzG,EAAKwqF,cA+B3EjyD,IACF15B,KA9BK25B,OAAOD,EAAM15B,KAAKqtF,gBAAgBzlF,QAAQ8xB,IA+B/C15B,KA9BK2tF,wBAEF,CAAKr0D,SAASkG,UAAWlG,SAASinB,QAAQhZ,SAAS3W,EAAMiC,WA+B9DqH,aA9Bal6B,KAAKksF,mBA+BlBlsF,KA9BKksF,kBAAoBz7E,WAAW,WA+BlCtP,EA9BKwqF,WAAa,IACjB,KA+BH3rF,KA9BK2rF,WAAa3rF,KAAK2rF,WAAWx7E,MAAM,GAAG,KAoCjD08E,EAAAvsF,UAAAqtF,iBAAA,WACI3tF,KAhCK6tF,cAAc7tF,KAAKs2B,gBAsC5Bu2D,EAAAvsF,UAAAutF,cAAA,SAnCGlmF,GAoCC,IAlCIy0E,EADUp8E,KAAKg5D,QAAQc,WAAWwwB,eACnBrxD,cAAc,qBAE7BS,EADQ0iD,EAAK0R,iBAAiB,MACjB9tF,KAAK+tF,aAAepmF,EAAQ,EAAIA,GAoC7C+xB,IACF0iD,EAnCK1zB,UAAYhvB,EAAKy4C,YA2C5B0a,EAAAvsF,UAAAstF,aAAA,SAvCGh9D,EAAA+jD,GAwCK/jD,IACFA,EAvCM8O,kBAwCN9O,EAvCMoC,kBA0CRhzB,KAvCKitF,OAAS,CAwCZ3qF,KAvCMqyE,IAAextE,UAAYwtE,GAAa30E,KAAMitF,OAAO3qF,KAwC3DiC,MAvCO,GAwCP2oF,OAvCO,IA+CbL,EAAAvsF,UAAAm8E,UAAA,SA3CG5qB,EAAA3iC,GA6CC,OA3COA,EAAQ2iC,EAAM9uB,QAAQ,IAAI+vB,OAAO9yD,KAAKu8E,aAAartD,GAAQ,MAAO,uBAAyB2iC,GAiDtGg7B,EAAAvsF,UAAAi8E,aAAA,SA9CGC,GAgDC,OA9COA,EAAcz5C,QAAQ,yBAA0B,SAmD3D8pD,EAAAvsF,UAAAotF,WAAA,WACQ1tF,KAhDKitF,OAAO1oF,OAiDdvE,KAhDK+tF,aAAaC,OAAOhuF,KAAKitF,OAAO1oF,OAiDrCvE,KAhDKstF,YAActtF,KAAKitF,OAAO1oF,MAiD/BvE,KAhDK8pF,cAkDL9pF,KAhDKitF,OAAOC,OAAQ,GAuD1BL,EAAAvsF,UAAAwhC,WAAA,SAnDGrE,GAqDC,GADAz9B,KAnDKy9B,MAAQA,EAoDTz9B,KAnDKs8B,QAAS,CAoDhB,IAnDI5C,EAAO15B,KAAKqtF,gBAAgBE,KAAK,SAAC7hF,GAAM,OAAAA,EAAEnH,QAAUk5B,IACnD/D,GAAQE,QAAS3hB,QAAQwlB,KAoD5B/D,EAnDO,CAoDL3E,MAnDO0I,EAoDPl5B,MAnDOk5B,IAECghD,UAoDRz+E,KAnDKs8B,QAAQyiB,QAAQrlB,GAsDrBA,GACF15B,KAnDK25B,OAAOD,EAAM15B,KAAKqtF,gBAAgBzlF,QAAQ8xB,IAAO,GAoDtD15B,KAnDKmT,OAAQ,GAqDbnT,KAnDKia,QAsDTja,KAnDK8kC,IAAI7iC,gBAyDb4qF,EAAAvsF,UAAAyhC,iBAAA,SAtDGC,GAuDChiC,KAtDKy7B,cAAgBuG,GA4DzB6qD,EAAAvsF,UAAA2hC,kBAAA,SAzDGD,GAoCDhiC,KAnCO07B,eAAiBsG,GA+D1B6qD,EAAAvsF,UAAA8xE,iBAAA,SA5DGlwE,GA6DClC,KA5DKkC,SAAWA,KApTpB,GAsTO2qF,kBAAPtqF,WAA2C,CA6D3C,CA5DE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA6DvBC,SA5DU,cA6DVoC,UA5DW,CAAA4pF,uBA6DXz7D,SA5DU,8lDAmFVvtB,KA5DM,CA6DJ4vB,YA5Da,yBAKhBq5D,kBAAD/oF,eAAC,WAAA,MAAA,CA+DD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,mBACP,CAAChC,KAAM00B,KAAAA,cACP,CAAC10B,KAAM+iF,KAAAA,UA5DAqJ,kBAAP9oF,eAAgE,CA+DhEmX,KA9DQ,CAAA,CAAGza,KAAMK,KAAAA,QA+DjBw7B,QA9DW,CAAA,CAAG77B,KAAMK,KAAAA,QA+DpBo6B,YA9De,CAAA,CAAGz6B,KAAMK,KAAAA,QA+DxBssF,SA9DY,CAAA,CAAG3sF,KAAMK,KAAAA,QA+DrBitF,aA9DgB,CAAA,CAAGttF,KAAMK,KAAAA,QA+DzBksF,SA9DY,CAAA,CAAGvsF,KAAMkC,KAAAA,SA+DrBq2D,QA9DW,CAAA,CAAGv4D,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA2oF,gCA+DrC36C,SA9DY,CAAA,CAAGluC,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,qBA+DtC04B,UA9Da,CAAA,CAAG54B,KAAM8zC,KAAAA,aAAc5zC,KAAM,CAAA,UAAY,CAAA,cCjYtD,IAAA20C,iBAAA,aAEsCA,iBAAtC/yC,WAA0E,CAC1E,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACtBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAapK,KAAAA,WAAY+4B,mBACjDhuD,aAAc,CAAA8pF,mBACd/pF,QAAS,CAAA+pF,uBAIVv3C,iBAADxxC,eAAC,WAAA,MAAA,ICTD,IAFMmqF,sBAAwB,CAG1B92D,QAFS6D,MAAAA,kBAGX5D,YAFepB,KAAAA,WAAW,WAAM,OAAAk4D,oBAG9B3tF,OAFO,GAIX2tF,kBAAA,WA0BA,SAAAA,EANwBppD,GAAA9kC,KAAxB8kC,IAAwBA,EAlBnB9kC,KAALy0D,SAAmC,IAAIpzD,KAAAA,aAEnCrB,KAAJ0B,WAAyB,EAErB1B,KAAJy7B,cAA8B,aAE1Bz7B,KAAJ07B,eAA+B,oBAK/Bv7B,OAAAC,eAFK8tF,EAEL5tF,UAAA,WAAA,CAAAmD,IAAA,WACQ,OAFOzD,KAAK0B,WAQpBgC,IAAA,SAJKa,GAKGvE,KAJK0B,WAAc6C,mCAc3B2pF,EAAA5tF,UAAA6tF,UAAA,SATKv9D,GAUOA,EATMiC,UAAYyG,SAASxG,QAU3BlC,EATMoC,iBAUNhzB,KATKoC,OAAOwuB,KAgBxBs9D,EAAA5tF,UAAA8B,OAAA,SAZKwuB,GAaOA,IACAA,EAZM8O,kBAaN9O,EAZMoC,kBAeNhzB,KAZKkC,WAgBTlC,KAZKy9B,OAAQz9B,KAAMy9B,MAanBz9B,KAZKy0D,SAASlvD,KAAKvF,KAAKy9B,OAaxBz9B,KAZKy7B,cAAcz7B,KAAKy9B,OAaxBz9B,KAZK8kC,IAAI7iC,iBAkBjBisF,EAAA5tF,UAAAwhC,WAAA,SAfKrE,GAgBGz9B,KAfKy9B,MAAQA,EAgBbz9B,KAfK8kC,IAAI7iC,gBAqBjBisF,EAAA5tF,UAAAyhC,iBAAA,SAlBKC,GAmBGhiC,KAlBKy7B,cAAgBuG,GAwB7BksD,EAAA5tF,UAAA2hC,kBAAA,SArBKD,GAsBGhiC,KArBK07B,eAAiBsG,KAvD9B,GAyDOksD,kBAAP3rF,WAA2C,CAsB3C,CArBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAsBrBC,SArBU,cAsBVoC,UArBW,CAAAirF,uBAsBX98D,SArBU,qZAgCVvtB,KArBM,CAsBFqvB,KArBQ,WAsBRm7D,sBArBuB,QAsBvB96D,uBArBwB,WAsBxBE,YArBa,oBAsBbmlC,UArBW,aAKlBu1B,kBAADpqF,eAAC,WAAA,MAAA,CAwBD,CAACrD,KAAMgC,KAAAA,qBArBAyrF,kBAAPnqF,eAAgE,CAwBhEqxB,MAvBS,CAAA,CAAG30B,KAAMK,KAAAA,QAwBlB2zD,SAvBY,CAAA,CAAGh0D,KAAMkC,KAAAA,SAwBrBT,SAvBY,CAAA,CAAGzB,KAAMK,KAAAA,MAAOH,KAAM,CAAA,eC/FlC,IAAA0vD,iBAAA,aAEOA,iBAAP9tD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,aACxBr/B,aAAc,CAAAmrF,mBACdprF,QAAS,CAAAorF,uBAIZ79B,iBAADvsD,eAAC,WAAA,MAAA,ICeD,IAHMuqF,sBAAwB,CAI5Bl3D,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAAs4D,oBAI9B/tF,OAHO,GAaT+tF,kBAAA,WA6EA,SAAAA,EALqBhvE,EAA6Bk0D,EAAwC1uC,GAArE9kC,KAArBsf,QAAqBA,EAA6Btf,KAAlDwzE,eAAkDA,EAAwCxzE,KAA1F8kC,IAA0FA,EA5DxF9kC,KAAFu4B,eAD2B,EAGzBv4B,KAAF20B,SADyB,GAIvB30B,KAAFgnD,cAD0B,EAOxBhnD,KAAFwrF,mBAD+B,QAO7BxrF,KAAFm4D,KADiB,OAIfn4D,KAAFy6E,uBADmC,EAazBz6E,KAAVuuF,qBAAyC,EAQvCvuF,KAAFm7B,QAJ+B,IAAI95B,KAAAA,aAMjCrB,KAAF25B,OAJ8B,IAAIt4B,KAAAA,aAMhCrB,KAAFo7B,MAJ6B,IAAI/5B,KAAAA,aAM/BrB,KAAFq7B,KAJ4B,IAAIh6B,KAAAA,aAM9BrB,KAAFwuF,OAJ8B,IAAIntF,KAAAA,aAShCrB,KAAFu6E,UADsB,EAEpBv6E,KAAFoqC,KADiB,GAKfpqC,KAAFy7B,cAD4B,aAE1Bz7B,KAAF07B,eAD6B,oBA/B7Bv7B,OAAAC,eAFGkuF,EAEHhuF,UAAA,qBAAA,CAMAmD,IAAA,WACI,OAJOzD,KAAKuuF,qBAHhB7qF,IAAA,SAFG+lC,GAGCzpC,KAFKuuF,oBAAsB/tF,SAAAA,sBAAsBipC,oCA6CrD6kD,EAAAhuF,UAAA04B,SAAA,WAAA,IAAA73B,EAAAnB,KACQA,KATKyuF,kBAUPzuF,KATKsf,QAAUtf,KAAKyuF,iBAWlBzuF,KATKgnD,cAUPhlD,OATO,qEAYThC,KATKy9E,iBAAmBz9E,KAAKupB,OAAOm0D,iBAAmBd,cAGjCjyE,WAAAA,WAAWu/E,UAAUlqF,KAAKi+B,MAAM3J,cAAe,SAUlEo6D,aATa,KAUbC,uBARWtgF,UAAU,SAACuiB,GAA0B,OAAAzvB,EAAKytF,iBAAiBh+D,IAAQ,SAAA7jB,GAAS,OAAA5L,EAAKm7E,YAAYvvE,KAClFpC,WAAAA,WAAWu/E,UAAUlqF,KAAKi+B,MAAM3J,cAAe,SAUrEo6D,aATa,KAUbC,uBARctgF,UAAU,SAACuiB,GAAyB,OAAAzvB,EAAKytF,iBAAiBh+D,IAAQ,SAAA7jB,GAAS,OAAA5L,EAAKm7E,YAAYvvE,MAG9GuhF,EAAHhuF,UAAAsuF,iBAAG,SAAAh+D,GAaK,CAZC0I,SAASC,IAAKD,SAASq8C,GAAIr8C,SAASu8C,KAAMv8C,SAASvG,MAAOuG,SAASw7C,KAAKvtC,SAAS3W,EAAO,UAe7F5wB,KAZK2D,KAAMitB,EAAgB,OAAKrsB,QAIjC+pF,EAAHhuF,UAAAsuC,UAAG,WAeC5uC,KAdKyzE,UAAU7kC,aAGhB0/C,EAAHhuF,UAAAwpF,WAAG,WAiBC9pF,KAhBKyzE,UAAUqW,cAqBnB3pF,OAAAC,eAlBGkuF,EAkBHhuF,UAAA,YAAA,CAAAmD,IAAA,WACI,OAlBOzD,KAAKyzE,WAAazzE,KAAKyzE,UAAUsW,2CAKzCuE,EAAHhuF,UAAAqD,KAAG,SAAAymC,GAqBCpqC,KApBK4uC,YAsBL5uC,KApBKw/E,YAAYp1C,IAGlBkkD,EAAHhuF,UAAAimD,KAAG,WAuBCvmD,KAtBK8pF,aAuBL9pF,KAtBK8kC,IAAI7iC,gBA4BbqsF,EAAAhuF,UAAA+4B,UAAA,SAzBGzI,GA0BC,GAAI5wB,KAzBK6uF,mBA0BPj1D,QAzBQC,aAAajJ,QA4BvB,GAAI5wB,KAzBK+pF,YAAa/pF,KAAM6uF,mBAAoB,CA0B9C,GAAIj+D,EAzBMiC,UAAYyG,SAASC,KAAO3I,EAAMiC,UAAYyG,SAASw7C,IA2B/D,YADA90E,KAzBKs8E,cA6BP,GAAI1rD,EAzBMiC,UAAYyG,SAASq8C,GA4B7B,OAFA31E,KAzBK8uF,MAAMj0B,SAASmhB,uBA0BpBh8E,KAzBK8kC,IAAI7iC,eA6BX,GAAI2uB,EAzBMiC,UAAYyG,SAASu8C,KA4B7B,OAFA71E,KAzBK8uF,MAAMj0B,SAASwgB,uBA0BpBr7E,KAzBK8kC,IAAI7iC,eA6BX,GAAI2uB,EAzBMiC,UAAYyG,SAASvG,MA4B7B,OAFA/yB,KAzBK8uF,MAAMj0B,SAASihB,yBA0BpB97E,KAzBK8kC,IAAI7iC,eAIN2uB,EAAMiC,UAAYyG,SAASkG,WAAa5O,EAAMiC,UAAYyG,SAASinB,QAAW3mB,QAAS+N,QAAQ3nC,KAAKsjB,UA0BvGtjB,KAzBKi8B,YAAW,GA0BhBj8B,KAzBK8pF,cA2BHl5D,EAzBMiC,UAAYyG,SAASinB,QAAU3mB,QAAQ+N,QAAQ3nC,KAAKsjB,SA0B5DtjB,KAzBKi8B,YAAW,KAiCxBqyD,EAAAhuF,UAAA27B,WAAA,SA5BG8yD,GA6BC/uF,KA5BKsjB,OAAS,KA6BdtjB,KA5BK25B,OAAO53B,KAAK/B,KAAKsjB,QA6BtBtjB,KA5BKm7B,QAAQp5B,KAAK,CAAEwC,MAAOvE,KAAKsjB,OAAQ0rE,SAAU,CAAEj6D,MAAO,GAAIxwB,MAAOvE,KAAKsjB,UA6B3EtjB,KA5BKy7B,cAAcz7B,KAAKsjB,QA8BpByrE,IACF/uF,KA5BKoqC,KAAO,KA6BZpqC,KA5BKs8E,eA8BPt8E,KA5BK8kC,IAAI7iC,gBAqCbqsF,EAAAhuF,UAAAw9B,QAAA,SA7BGlN,GACM5wB,KAAK+pF,WA8BR/pF,KA7BK2D,OA+BP3D,KA7BKo7B,MAAMr5B,KAAK6uB,IAuCpB09D,EAAAhuF,UAAAk/E,YAAA,SA9BGp1C,GAgCKpqC,KA9BK8uF,OAgCP9uF,KA9BK8uF,MAAMj0B,SAAStxC,OAASvpB,KAAKupB,OA+BlCvpB,KA9BK8uF,MAAMj0B,SAASzwB,KAAOpqC,KAAKoqC,KA+BhCpqC,KA9BK8uF,MAAMj0B,SAASlmC,SAAW30B,KAAK20B,SA+BpC30B,KA9BK8uF,MAAMj0B,SAAS4f,sBAAwBz6E,KAAKy6E,wBAiCjDz6E,KA9BK8uF,MAAQ9uF,KAAKwzE,eAAehB,qBAAqBxyE,KAAKy9E,iBAAkBz9E,KAAK6lC,UA+BlF7lC,KA9BK8uF,MAAMj0B,SAASphD,OAASzZ,MACxB8uF,MAAMj0B,SAAStxC,OAASvpB,KAAKupB,OA+BlCvpB,KA9BK8uF,MAAMj0B,SAASzwB,KAAOpqC,KAAKoqC,KA+BhCpqC,KA9BK8uF,MAAMj0B,SAASlmC,SAAW30B,KAAK20B,SA+BpC30B,KA9BK8uF,MAAMj0B,SAAS4f,sBAAwBz6E,KAAKy6E,sBA+BjDz6E,KA9BK8uF,MAAMj0B,SAAS7B,QAAUh5D,KAAKyzE,UAAU3Z,YAsB7C95D,KA9BK8kC,IAAI7iC,gBAiDfqsF,EAAAhuF,UAAAg8E,YAAA,SA/BGvvE,GAgCK/M,KA/BK8uF,QAgCP9uF,KA/BK8uF,MAAM5jC,UAgCXlrD,KA/BK8uF,MAAQ,MAiCf9uF,KA/BKumD,QAoCT+nC,EAAAhuF,UAAA2uF,gBAAA,WACQjvF,KAjCK8uF,OAAS9uF,KAAK8uF,MAAMj0B,UAAY76D,KAAK8uF,MAAMj0B,SAASggB,SAkC3D76E,KAjCK8uF,MAAMj0B,SAASggB,WAuC1B16E,OAAAC,eAlCGkuF,EAkCHhuF,UAAA,QAAA,CAAAmD,IAAA,WACI,OAlCOzD,KAAKsjB,QAwChB5f,IAAA,SApCGixB,GACMA,EAIEA,EAAapwB,QAAUvE,KAAKsjB,QAqCjCtjB,KApCKoqC,KAAOpqC,KAAKkvF,mBAAqB,GAAKv6D,EAASI,MAqCpD/0B,KApCKsjB,OAASqR,EAASpwB,MAqCvBvE,KApCKm7B,QAAQp5B,KAAK,CAAEwC,MAAOowB,EAASpwB,MAAOyqF,SAAU,CAAEj6D,MAAO/0B,KAAKoqC,KAAM7lC,MAAOowB,EAASpwB,SAqCzFvE,KApCK25B,OAAO53B,KAAK4yB,GAqCjB30B,KApCKy7B,cAAc9G,EAASpwB,SAsC5BvE,KApCKm7B,QAAQp5B,KAAK,CAAEwC,MAAOowB,EAASpwB,MAAOyqF,SAAU,CAAEj6D,MAAO/0B,KAAKoqC,KAAM7lC,MAAOvE,KAAKsjB,UAqCrFtjB,KApCK25B,OAAO53B,KAAK4yB,KAyBjB30B,KApCKoqC,KAAO,GAqCZpqC,KApCKsjB,OAAS,KAqCdtjB,KApCKy7B,cAAcz7B,KAAKsjB,SA+C1BtjB,KApCK8kC,IAAI7iC,gDA0CbqsF,EAAAhuF,UAAA6uF,UAAA,SAtCGv+D,GAuCC5wB,KAtCKwuF,OAAOzsF,KAAK6uB,GACZA,GAASA,EAAO1lB,SAuCnBlL,KAtCKsjB,OAAS,KAuCdtjB,KAtCKy7B,cAAcz7B,KAAKsjB,SAwC1BtjB,KAtCK8kC,IAAI7iC,gBA4CbqsF,EAAAhuF,UAAAuhC,UAAA,SAxCGjR,GAyCC5wB,KAxCK07B,iBAyCL17B,KAxCKq7B,KAAKt5B,KAAK6uB,IA8CnB09D,EAAAhuF,UAAAwhC,WAAA,SA1CGv9B,GA0CH,IAAApD,EAAAnB,KACQA,KA1CKkvF,mBA2CPlvF,KA1CKoqC,KAAO,GAES,iBAAV7lC,EA2CTvE,KA1CKoqC,KAAO7lC,EACPA,GAAaA,EAAMwwB,MA2CxB/0B,KA1CKoqC,KAAO7lC,EAAMwwB,MACbxwB,GAAaA,EAAM6qF,UA2CxBpvF,KA1CKoqC,KAAO7lC,EAAS6qF,UA0C7B,IA1CuC7qF,EAAS8qF,SACnC9qF,GAAaA,EAAM2W,KA2CxBlb,KA1CKoqC,KAAO7lC,EAAM2W,KACwB,mBAA1Blb,KAAKupB,OAAO+lE,UA2C5BtvF,KA1CKupB,OAAO+lE,UAAU/qF,GAAOiM,KAAK,SAAChC,GA4C/BrN,EA1CKipC,KAyCH57B,EAzCUA,EAAOtD,OAASsD,EAAO,GAAGumB,OAAS,GAAKvmB,EAAOumB,OAAS,GAExDxwB,EA4CdpD,EA1CK2jC,IAAI7iC,iBA6CXjC,KA1CKoqC,KAAO7lC,GAAS,GA6CzBvE,KA1CKsjB,OAAS/e,EA2CdvE,KA1CK8kC,IAAI7iC,gBAgDbqsF,EAAAhuF,UAAAyhC,iBAAA,SA7CGC,GA8CChiC,KA7CKy7B,cAAgBuG,GAmDzBssD,EAAAhuF,UAAA2hC,kBAAA,SAhDGD,GAiDChiC,KAhDK07B,eAAiBsG,GAsD1BssD,EAAAhuF,UAAA8xE,iBAAA,SAnDGlwE,GAoDClC,KAnDKuuF,oBAAsBrsF,KA7T/B,GA+TOosF,kBAAP/rF,WAA2C,CAoD3C,CAnDE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAoDvBC,SAnDU,cAoDVoC,UAnDW,CAAAqrF,uBAoDXl9D,SAnDU,yxCA2BXm9D,kBAADxqF,eAAC,WAAA,MAAA,CAsDD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAM6kD,gBACP,CAAC7kD,KAAMgC,KAAAA,qBAnDA6rF,kBAAPvqF,eAAgE,CAsDhE8hC,QArDW,CAAA,CAAGplC,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,UAAY,CAAEk2B,KAAM9E,KAAAA,qBAsDzDxI,OArDU,CAAA,CAAG9oB,KAAMK,KAAAA,QAsDnBo6B,YArDe,CAAA,CAAGz6B,KAAMK,KAAAA,QAsDxBouF,mBArDsB,CAAA,CAAGzuF,KAAMK,KAAAA,QAsD/By3B,cArDiB,CAAA,CAAG93B,KAAMK,KAAAA,QAsD1B6zB,SArDY,CAAA,CAAGl0B,KAAMK,KAAAA,QAsDrBkmD,aArDgB,CAAA,CAAGvmD,KAAMK,KAAAA,QAsDzBgrF,qBArDwB,CAAA,CAAGrrF,KAAMK,KAAAA,QAsDjC0qF,mBArDsB,CAAA,CAAG/qF,KAAMK,KAAAA,QAsD/BurF,eArDkB,CAAA,CAAG5rF,KAAMK,KAAAA,QAsD3Bq3D,KArDQ,CAAA,CAAG13D,KAAMK,KAAAA,QAsDjB25E,sBArDyB,CAAA,CAAGh6E,KAAMK,KAAAA,QAsDlC2tF,gBArDmB,CAAA,CAAGhuF,KAAMK,KAAAA,QAsD5B+tF,mBArDsB,CAAA,CAAGpuF,KAAMK,KAAAA,QAsD/Bq6B,QArDW,CAAA,CAAG16B,KAAMkC,KAAAA,SAsDpBg3B,OArDU,CAAA,CAAGl5B,KAAMkC,KAAAA,SAsDnBy4B,MArDS,CAAA,CAAG36B,KAAMkC,KAAAA,SAsDlB04B,KArDQ,CAAA,CAAG56B,KAAMkC,KAAAA,SAsDjB6rF,OArDU,CAAA,CAAG/tF,KAAMkC,KAAAA,SAsDnB8wE,UArDa,CAAA,CAAGhzE,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA2oF,gCAsDvCrrD,MArDS,CAAA,CAAGx9B,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,YC/ZnC,IAAA4uF,mBAAA,WAUA,SAAAA,EAFqBr3D,GAAAl4B,KAArBk4B,OAAqBA,SAWrBq3D,EAAAjvF,UAAAi8E,aAAA,SAFGC,GAIC,OAFOA,EAAcz5C,QAAQ,yBAA0B,SAY3DwsD,EAAAjvF,UAAAm8E,UAAA,SAFG5qB,EAAA3iC,GAIC,OAFOA,GAAS2iC,EAAQA,EAAM9uB,QAAQ,IAAI+vB,OAAO9yD,KAAKu8E,aAAartD,EAAMsV,QAAS,MAAO,uBAAyBqtB,GAQtH09B,EAAAjvF,UAAAkvF,iBAAA,SALGhhF,GAMC,GAAIA,EACF,OAAQA,EALOihF,cAMb,IALK,gBAMH,MALO,iBAMT,IALK,oBAMH,MALO,UAMT,IALK,cAMH,MALO,cAMT,IALK,YAMH,MALO,YAMT,IALK,OAMH,MALO,OAMT,IALK,WAMH,MALO,MAMT,IALK,YAMH,MALO,iBAMT,IALK,gBAMH,MALO,OAMT,QACE,MALO,GAQb,MALO,IAWXF,EAAAjvF,UAAAovF,gBAAA,SARGhgD,GASC,IARIigD,EAAY,GAYhB,OAHIjgD,IACFigD,EARY3vF,KAAKk4B,OAAOmoC,qBAAqB3wB,EAAM,CAAEoyB,KAAM,UAAWX,MAAO,UAAWU,IAAK,aAExF8tB,GAcXJ,EAAAjvF,UAAAsvF,iBAAA,SAXGphF,GAYC,GAAIA,EACF,OAAQA,EAXOihF,cAYb,IAXK,OAYL,IAXK,gBAYL,IAXK,gBAYL,IAXK,YAYL,IAXK,SAYH,MAAI,cAXejhF,GACVA,EAAU4gF,UAW7B,IAXuC5gF,EAAU6gF,UAAW7qD,QAE3C,IAAAh2B,EAAU0M,MAAQ,KAAKspB,OAYhC,IAXK,oBAYH,OAXO,IAAAh2B,EAAU0M,MAAQ,KAAKspB,OAYhC,IAXK,cAYL,IAXK,WAYH,OAXO,IAAAh2B,EAAUs7C,OAAS,KAAKtlB,OAYjC,IAXK,YAYH,IAXIzP,EAAQ,GAkBZ,OANIvmB,EAXOqhF,YAYT96D,GAXQvmB,EAAUqhF,UAAUT,UAWxC,IAXkD5gF,EAAUqhF,UAAUR,UAAW7qD,QAanEh2B,EAXOshF,WAYT/6D,GAXQA,EAWpB,MAX6BvmB,EAAYshF,SAAShmC,OAAQtlB,QAEzCzP,EAYT,QACE,OAXO,IAAAvmB,EAAU0M,MAAQ,KAAKspB,OAcpC,MAXO,MAlGX,GAoGO+qD,mBAAPhtF,WAA2C,CAY3C,CAXE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAYvBC,SAXU,uBAYVuwB,SAXU,urIAwEXo+D,mBAADzrF,eAAC,WAAA,MAAA,CAcD,CAACrD,KAAMi6B,oBAXA60D,mBAAPxrF,eAAgE,CAchE8tD,MAbS,CAAA,CAAGpxD,KAAMK,KAAAA,QAclBspC,KAbQ,CAAA,CAAG3pC,KAAMK,KAAAA,SAiBjB,IAAAivF,oBAAA,SAAA5sF,GA0BA,SAAA4sF,EAnCGzwE,EAAuC4Y,EAA0B4M,GAmCpE,IAAA3jC,EAEIgC,EAFJiB,KAAApE,KAEUsf,EAASwlB,IAFnB9kC,YAnC0CmB,EAA1C+2B,OAA0CA,EA6BxC/2B,EAAFw4B,OA9B8B,IAAIt4B,KAAAA,sBAFjCmC,UAADusF,EAAA5sF,GA6CA4sF,EAAAzvF,UAAAw6E,eAAA,WACI,OAtCO96E,KAAKsf,QAAQgV,cAAc2E,cAAc,cA6CpD82D,EAAAzvF,UAAAy7E,YAAA,SA1CGnrD,EAAA8I,GA4CC,OADA15B,KA1CK25B,OAAOp0B,KAAKm0B,GACVv2B,EA0CX7C,UA1CiBy7E,YA0CjB33E,KAAApE,KA1C6B4wB,EAAO8I,MADpC,CAZC0gD,mBAeM2V,oBAAPxtF,WAA2C,CA2C3C,CA1CE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA2CvBC,SA1CU,wBA2CVuwB,SA1CU,syBAkBX4+D,oBAADjsF,eAAC,WAAA,MAAA,CA6CD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBA1CAstF,oBAAPhsF,eAAgE,CA6ChE41B,OA5CU,CAAA,CAAGl5B,KAAMkC,KAAAA,UCxNnB,IAAAqtF,uBAAA,SAAA7sF,GAOA,SAAA6sF,EALK1wE,EAAuC4Y,EAA0B4M,GAKtE,IAAA3jC,EAEQgC,EAFRiB,KAAApE,KAEcsf,EAASwlB,IAFvB9kC,YAL4CmB,EAA5C+2B,OAA4CA,WAH3C10B,UAADwsF,EAAA7sF,GAeA6sF,EAAA1vF,UAAA65B,OAAA,WAAA,IAAAh5B,EAAAnB,KAPYs8B,EAAUt8B,KAAKupB,OAAO+S,QAU1B,OARO3xB,WAAAA,WAAW4wE,YAAY,IAAIrgC,QAAQ,SAACC,EAASiI,GAUhD,GAAI9mB,EARS,CAUT,IAAI9a,MARMrY,QAAQmzB,GAed,MADA8mB,EARO,kDACD,IAAI/7C,MAAM,kDAEhBlG,EARKo5E,UAAW,EAUhBp/B,EARQ7e,QAgBZ8mB,EARO,aAoBvB4sC,EAAA1vF,UAAA4uC,WAAA,SARK+jB,GAQL,IAAA9xD,EAAAnB,KACQ,OAAIA,KARKoqC,MAAQ6oB,GASbjzD,KARKiwF,gBAAkBh9B,EAAQtyC,IAAI,SAAAgc,GAS/B,IARIrB,EAAQqB,EAAQM,aAAa7gB,OAAO,SAACy1C,GASrC,OAROx0B,OAAQw0B,EAAM98B,OAAOqF,cAAcxyB,QAAQzG,EAAKipC,KAAKhQ,iBAWhE,OADAuC,EARQE,KAAOvB,EACRqB,GACR38B,MACIA,KAAKiwF,kBACS,KAAlBjwF,KAASoqC,MASZ6oB,EARQ50C,QAAQ,SAAAse,GASZA,EARQE,KAAOF,EAAQM,eAEpBg2B,IAqBnB+8B,EAAA1vF,UAAAy7E,YAAA,SARKnrD,EAAA8I,GASGE,QARQC,aAAajJ,GASjB8I,EARKkF,eASLlF,EARKkF,eAAgB,EASrBlF,EARK4D,SAAU,GAUf5D,EARK4D,SAAU5D,EAAM4D,QAWzB,IARI3I,EAAW30B,KAAKi8E,YAapB,OAJItnD,IACA30B,KARKyZ,OAAOlV,MAAQowB,GAUxB30B,KARK8kC,IAAI7iC,gBACF,KA7Ef,CADCm4E,mBAgFM4V,uBAAPztF,WAA2C,CAS3C,CARE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CASrBC,SARU,2BASVgD,KARM,CASFC,QARS,yBAUbstB,SARU,ipCAuBb6+D,uBAADlsF,eAAC,WAAA,MAAA,CAWD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBClIP,IAAAytF,0BAAA,SAAA/sF,GA8DA,SAAA+sF,EANK5wE,EAAwC8sB,EAA4BlU,EAA0B4M,GAMnG,IAAA3jC,EAGQgC,EAHRiB,KAAApE,KAGcsf,EAASwlB,IAHvB9kC,YAN6CmB,EAA7CirC,SAA6CA,EAA4BjrC,EAAzE+2B,OAAyEA,EAhD9D/2B,EAAXgvF,qBAA0C,EAE/BhvF,EAAX+5B,YAAiC,GAGrB/5B,EAAZivF,YAAoH,IAAI3xE,aAXvHjb,UAAD0sF,EAAA/sF,GAaAhD,OAAAC,eACK8vF,EADL5vF,UAAA,OAAA,CAAAoD,IAAA,SACKa,GADL,IAAApD,EAAAnB,KAEQ,GAAIA,KACKupB,OAAO8mE,YAAcrwF,KAAKupB,OAAO+mE,yBAAtC,MACM,IAAIjpF,MAAM,2IAEpB,GAAIrH,KACKupB,OAAOqiB,cAIZ,GAJA5rC,KACKmwF,qBAAsB,EAA3BnwF,KACKuwF,kBAAoBvwF,KAAKupB,OAAOqiB,aAAa7W,MAAlD/0B,KACKwwF,oBAAsBxwF,KAAKupB,OAAOqiB,aAAa6kD,mBAApDzwF,KACK8kC,IAAI7iC,gBACJjC,KAAKuwF,oBAAqBvwF,KAAMupB,OAAOqiB,aAAa8kD,cAArD,MACM,IAAIrpF,MAAM,6FAEpBrH,KACKmwF,qBAAsB,EAE3BnwF,KACKupB,OAAO8mE,aAAcrwF,KAAM2wF,kBAAhC3wF,KACK4wF,iBAEL5wF,KACKupB,OAAO2R,cAAZl7B,KACKk7B,YAAcl7B,KAAKupB,OAAO2R,aAEnCzqB,WACW,WAAPtP,EACK0vF,aAAav8D,cAAc8G,2CAK5Cj7B,OAAAC,eADK8vF,EACL5vF,UAAA,aAAA,CAAAmD,IAAA,WACQ,OAAIzD,KADKupB,OAAOqP,YAAc54B,KAAKupB,OAAOunE,YAC/B9wF,KAAKupB,OAAOqP,YAAcpX,MAAMzK,KAAK/W,KAAKupB,OAAOunE,YAAYlhF,UAAUwM,OAAO,SAACqd,GAElF,MAD0B,QAAnBA,EAASl1B,QAGjB,oCAOV2rF,EAAL5vF,UAAA04B,SAAK,WAAA,IAAL73B,EAAAnB,KAYQA,KAVK+wF,qBAAuBpmF,WAAAA,WAAWu/E,UAAUlqF,KAAK6wF,aAAav8D,cAAe,SAW7Eo6D,aAVa,KAWbC,uBACAtgF,UAVU,SAACuiB,GAWRzvB,EAVK47E,WAAansD,EAAM6O,OAAQ,MAWhCt+B,EAVK8xD,QAAU9xD,EAAK+tC,aAWpB/tC,EAVK2jC,IAAI7iC,kBAIpBiuF,EAAL5vF,UAAA6B,YAAK,WAcGnC,KAZK+wF,qBAAqBzrF,eAG7B4qF,EAAL5vF,UAAAswF,eAAK,WAgBG,GAAI5wF,KAdKupB,OAAO8mE,WAAY,CAexBrwF,KAdK2wF,iBAAmB,CAAEpsF,MAAO,MAAOwwB,MAAO,OAe/C,IAdIi8D,EAAW,GAefxvE,MAdMzK,KAAK/W,KAAKupB,OAAOunE,YAAYlhF,UAe9BwM,OAdO,SAACqd,GAeL,MAd0B,QAAnBA,EAASl1B,QAgBnB8Z,QAdQ,SAACorB,GAAsD,OAAAunD,EAASvoF,KAczFrF,MAdgF4tF,EAAevnD,EAAInO,SAevFt7B,KAdKizD,QAAUjzD,KAAKoc,OAAO40E,GAe3BhxF,KAdKupB,OAAOunE,YAAYptF,IAAI,MAAO,CAAEa,MAAO,MAAOwwB,MAAO,MAAOuG,MAAO01D,IAexEhxF,KAdK8kC,IAAI7iC,iBAIhBiuF,EAAL5vF,UAAA2wF,eAAK,SAAAx3D,GAmBGz5B,KAjBKosC,SAAS01C,YAAY9hF,KAAKkxF,YAAY5xE,QAAQgV,cAAe,YAAa,GAmB/Et0B,KAjBK6wF,aAAav8D,cAAc8G,QAmBhC,IAjBIzgB,EAAc8e,EAASl1B,MAkB3BvE,KAjBK2wF,iBAAmBl3D,EAmBxBz5B,KAjBKizD,QAAU,GAkBfjzD,KAjBK8kC,IAAI7iC,eAmBTjC,KAjBKmxF,cAAc13D,EAAU9e,IAGhCu1E,EAAL5vF,UAAA8wF,gBAAK,SAAAxgE,GAqBGgJ,QApBQC,aAAajJ,GAqBrB5wB,KApBK+8E,WAAa,GAqBlB/8E,KApBKixF,eAAe,CAAE1sF,MAAOvE,KAAK2wF,iBAAiBpsF,MAAOwwB,MAAO/0B,KAAK2wF,iBAAiB57D,QAqBvF/0B,KApBK8kC,IAAI7iC,gBAGZiuF,EAAL5vF,UAAAy7E,YAAK,SAAAnrD,EAAA8I,GA2BG,OADA15B,KAxBK6wF,aAAav8D,cAAc8G,QACzBj4B,EAwBf7C,UAxBqBy7E,YAwBrB33E,KAAApE,KAxBiC4wB,EAAO8I,IAGnCw2D,EAAL5vF,UAAA+wF,iBAAK,SAAA9sF,GAAA,IAALpD,EAAAnB,KAgCQ,GAJAA,KA3BKwwF,kBAAoBjsF,EA6BzBvE,KA3BKowF,YAAYn2E,QA6Bbja,KA3BKixF,eAAgB,CA6BrB,IA3BIt2E,EAAc3a,KAAK2wF,iBAAiBpsF,MA6BxCvE,KA3BKmxF,cAAcnxF,KAAK2wF,iBAAkBh2E,GA4B1C3a,KA3BK8kC,IAAI7iC,eA8BbwO,WA3BW,WA4BPtP,EA3BK0vF,aAAav8D,cAAc8G,WAiC5C80D,EAAA5vF,UAAA4uC,WAAA,WACQ,OAAIlvC,KA7BK2wF,iBA8BD3wF,KA7BKupB,OAAOunE,YACL9wF,KAAKoc,OAAOpc,KAAKupB,OAAOunE,YAAYrtF,IAAIzD,KAAK2wF,iBAAiBpsF,OAAO+2B,OAErEt7B,KAAKoc,OAAOpc,KAAKowF,YAAY3sF,IAAIzD,KAAK2wF,iBAAiBpsF,OAAO+2B,OAGtE,IAGV40D,EAAL5vF,UAAA6wF,cAAK,SAAA13D,EAAA9e,GAAA,IAALxZ,EAAAnB,KAmCQ,GAAIA,KAjCKupB,OAAOunE,YAkCZ9wF,KAjCKizD,QAAUjzD,KAAKoc,OAAOpc,KAAKupB,OAAOunE,YAAYrtF,IAAIkX,GAAK2gB,OAkC5Dt7B,KAjCK8kC,IAAI7iC,mBACN,CAkCH,IAjCKjC,KAAKupB,OAAO+mE,yBAkCb,MAjCM,IAAIjpF,MAAM,4LAEfrH,KAAKowF,YAAY3sF,IAAIkX,IA6CtB3a,KAjCKizD,QAAUjzD,KAAKoc,OAAOpc,KAAKowF,YAAY3sF,IAAIkX,GAAK2gB,OAkCrDt7B,KAjCK8kC,IAAI7iC,iBAqBTjC,KAjCKs6E,WAAY,EAkCjBt6E,KAjCKupB,OAAO+mE,yBAAyB31E,EAAK3a,KAAKwwF,mBAAmBhgF,KAAK,SAAC8qB,GAkCpEn6B,EAjCKivF,YAAY1sF,IAAIiX,EAAK,CAAEpW,MAAOk1B,EAASl1B,MAAOwwB,MAAO0E,EAAS1E,MAAOuG,MAAOA,IAkCjFn6B,EAjCK8xD,QAAU9xD,EAAKib,OAAOkf,GAAO,GAkClCn6B,EAjCKm5E,WAAY,EAkCjBn5E,EAjCK2jC,IAAI7iC,eAkCTwO,WAjCW,WAkCPtP,EAjCK0vF,aAAav8D,cAAc8G,eAUnD80D,EAAL5vF,UAAA8b,OAAK,SAAAlN,EAAAoiF,GAAA,IAALnwF,EAAAnB,UAAA,IAAAsxF,IAAKA,GAAL,GAsCQ,IArCIr+B,EAAiE/jD,EAgDrE,OAVIlP,KArCK+8E,YAAyC,IAA3B/8E,KAAK+8E,WAAW7xE,QAAgBlL,KAAK2wF,mBAsCxD19B,EArCUA,EAAQ72C,OAAO,SAACy1C,GAsCtB,OArCOx0B,OAAQw0B,EAAM98B,OAAOqF,cAAcxyB,QAAQzG,EAAK47E,WAAW3iD,kBAwCtEp6B,KArCKmwF,qBAAuBnwF,KAAKupB,OAAOqiB,aAAa8kD,gBAAiBY,IAsCtEr+B,EArCUA,EAAQ72C,OAAO,SAACy1C,GAsCtB,OArCO1wD,EAAKooB,OAAOqiB,aAAa8kD,cAAc7+B,EAAO1wD,EAAKqvF,sBAG3Dv9B,KA7Lf,CAECmnB,mBA6LM8V,0BAAP3tF,WAA2C,CAsC3C,CArCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAsCrBC,SArCU,+BAsCVuwB,SArCU,w6HAuEb++D,0BAADpsF,eAAC,WAAA,MAAA,CAwCD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMosC,KAAAA,WACP,CAACpsC,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBArCAytF,0BAAPnsF,eAAgE,CAwChE8sF,aAvCgB,CAAA,CAAGpwF,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,WAwC1CuwF,YAvCe,CAAA,CAAGzwF,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,WCnRzC,IAAA4wF,6BAAA,SAAApuF,GAaA,SAAAouF,EAJuBjyE,EAA4B4Y,EAA0B4M,GAI7E,IAAA3jC,EAEQgC,EAFRiB,KAAApE,KAEcsf,EAASwlB,IAFvB9kC,YAJuBmB,EAAvBme,QAAuBA,EAA4Bne,EAAnD+2B,OAAmDA,EAL9C/2B,EAALmH,QAAuB,EACnBnH,EAAJqwF,WAAyB,EACrBrwF,EAAJswF,MAAoB,aAHnBjuF,UAAD+tF,EAAApuF,GAiBAouF,EAAAjxF,UAAAw6E,eAAA,WACQ,OAPO96E,KAAKsf,QAAQgV,cAAc2E,cAAc,cAiBxDs4D,EAAAjxF,UAAAk7E,eAAA,SANK7kB,GAOG,IANI95B,EAAO85B,EAgBX,OATIA,EANW/3C,eAAe,SAO1B5e,KANKwxF,UAAY76B,EAAW+6B,aAO5B1xF,KANKshB,MAAQq1C,EAAWr1C,MAOxBub,EANO85B,EAAW95B,MACfA,EAAS3xB,OAASlL,KAAKyxF,QAO1BzxF,KANKwxF,WAAY,EAOjBxxF,KANKshB,MAAQub,EAAK3xB,OAOlB2xB,EANOA,EAAK1sB,MAAM,EAAGnQ,KAAKyxF,QAEvBtuF,EAMf7C,UANqBk7E,eAMrBp3E,KAAApE,KANoC68B,MApCpC,CAGCu9C,mBAmCMmX,6BAAPhvF,WAA2C,CAO3C,CANE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAOrBC,SANU,iCAOVuwB,SANU,u1CA2BbogE,6BAADztF,eAAC,WAAA,MAAA,CASD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBANA8uF,6BAAPxtF,eAAgE,CAShEuE,OARU,CAAA,CAAG7H,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,mBC1EtC,IAAAgxF,8BAAA,SAAAxuF,GAgBA,SAAAwuF,EAPKryE,EAAwC+vD,EAAgCn3C,EAA0B4M,GAOvG,IAAA3jC,EAGQgC,EAHRiB,KAAApE,KAGcsf,EAASwlB,IAHvB9kC,YAP6CmB,EAA7CkuE,UAA6CA,EAAgCluE,EAA7E+2B,OAA6EA,EANxE/2B,EAALmH,QAAuB,EAiBfnH,EAAKkuE,UAAYA,WAlBxB7rE,UAADmuF,EAAAxuF,GAKAhD,OAAAC,eAFKuxF,EAELrxF,UAAA,WAAA,CAAAmD,IAAA,WACQ,OAF+B,IAAxBzD,KAAKizD,QAAQ/nD,wCAmB5BymF,EAAArxF,UAAAw6E,eAAA,WACQ,OAXO96E,KAAKsf,QAAQgV,cAAc2E,cAAc,cAiBxD04D,EAAArxF,UAAAsxF,aAAA,SAdKrQ,GAeG,OAdOvhF,KAAKqvE,UAAUK,wBAAwB6R,MAnBtD,CAECnH,mBAmBMuX,8BAAPpvF,WAA2C,CAe3C,CAdE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAerBC,SAdU,mCAeVuwB,SAdU,+wCA0BbwgE,8BAAD7tF,eAAC,WAAA,MAAA,CAiBD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMsvE,gBAAAA,cACP,CAACtvE,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBAdAkvF,8BAAP5tF,eAAgE,CAiBhEuE,OAhBU,CAAA,CAAG7H,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,kBAiBtC2lD,SAhBY,CAAA,CAAG7lD,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,aCzDxC,IAAA0hC,iBAAA,aAYOA,iBAAP9/B,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAa8S,kBAAmBpa,eAAgBi2B,kBAAmBV,kBAC3FttD,aAAc,CACVurF,kBACA1R,cACA2S,mBACAQ,oBACAC,uBACAE,0BACAyB,8BACAJ,8BAEJzuF,QAAS,CACLwrF,kBACA1R,cACA2S,mBACAQ,oBACAC,uBACAE,0BACAyB,8BACAJ,8BAEJjmC,gBAAiB,CACbsxB,cACA2S,mBACAQ,oBACAC,uBACAE,0BACAyB,8BACAJ,kCAKPlvD,iBAADv+B,eAAC,WAAA,MAAA,ICvBD,IAFM+tF,sBAAwB,CAG5B16D,QAFS6D,MAAAA,kBAGT5D,YAFapB,KAAAA,WAAW,WAAM,OAAA87D,uBAG9BvxF,OAFO,GAITuxF,qBAAA,WAiCA,SAAAA,EAPWxyE,EACA4Y,EACCj3B,EACA8wF,GAHD/xF,KAAXsf,QAAWA,EACAtf,KAAXk4B,OAAWA,EACCl4B,KAAZiB,mBAAYA,EACAjB,KAAZ+xF,MAAYA,EA3BF/xF,KAAVs1B,KAAyB,SACft1B,KAAVk7B,YAAgC,YACtBl7B,KAAVgyF,YAAgC,EACtBhyF,KAAVo1B,MAA0B,WAChBp1B,KAAVu4B,eAAmC,EAIzBv4B,KAAViyF,cAAgD,IAAI5wF,KAAAA,aACjDrB,KAAH0xE,SAAsB,EAKtB1xE,KAAAkyF,UADG,aAKHlyF,KAAAmyF,WAHG,oBA6BHL,EAAAxxF,UAAA8xF,WAAA,SAVGxhE,EAAAyhE,GAUH,IAAAlxF,EAAAnB,UAVA,IAAAqyF,IAAGA,GAAH,GACSryF,KAAK+pF,WAaRt5E,WAVW,WAWT,IAVI6O,EAAUne,EAAK88B,MAAM3J,cAWrBhV,GACFA,EAVQ8b,SAET,KAgBT02D,EAAAxxF,UAAAw9B,QAAA,WAAA,IAAA38B,EAAAnB,KACIA,KAbK+xF,MAAM1T,IAAI,WAcbl9E,EAbKuwE,SAAU,EAcfvwE,EAbKytC,eAmBXkjD,EAAAxxF,UAAAgyF,OAAA,WACItyF,KAhBK0xE,SAAU,GAsBnBogB,EAAAxxF,UAAAsuC,UAAA,WACI5uC,KAnBKg5D,QAAQpqB,aAwBjBkjD,EAAAxxF,UAAAwpF,WAAA,WACI9pF,KAtBKg5D,QAAQ8wB,cA2BjB3pF,OAAAC,eAzBG0xF,EAyBHxxF,UAAA,YAAA,CAAAmD,IAAA,WACI,OAzBOzD,KAAKg5D,SAAWh5D,KAAKg5D,QAAQ+wB,2CA8BxC5pF,OAAAC,eA3BG0xF,EA2BHxxF,UAAA,SAAA,CAAAmD,IAAA,WACI,OA3BOzD,KAAK+pF,WAAa/pF,KAAKgyF,4CAkClCF,EAAAxxF,UAAAiyF,eAAA,SA9BG3hE,GACMA,EAAMiC,UAAY2/D,SAAAA,QAAU5hE,EAAMiC,UAAYE,SAAAA,OAASnC,EAAMiC,UAAYiiD,SAAAA,MAAQ90E,KAAK+pF,YA+BzF/pF,KA9BK8pF,aA+BLl5D,EA9BM8O,oBAqCZoyD,EAAAxxF,UAAAmyF,aAAA,SAlCG7hE,GAkCH,IAAAzvB,EAAAnB,KACQg+C,SAlCS00C,gBAAkB9hE,EAAM6O,SAmCnCz/B,KAlCKkyF,UAAWthE,EAAgB,OAAkBrsB,OAoC9CvE,KAlCK2yF,sBAmCPz4D,aAlCal6B,KAAK2yF,sBAoCpB3yF,KAlCK2yF,qBAAuBliF,WAAW,WAmCrCtP,EAlCK8wF,cAAclwF,KAAM6uB,EAAgB,OAAkBrsB,QAC1D,OAyCTutF,EAAAxxF,UAAAwhC,WAAA,SAtCGv9B,GAuCCvE,KAtCK4yF,UAAUruF,IA4CnButF,EAAAxxF,UAAAyhC,iBAAA,SA1CGC,GA2CChiC,KA1CKkyF,UAAYlwD,GAgDrB8vD,EAAAxxF,UAAA2hC,kBAAA,SA9CGD,GA+CChiC,KA9CKmyF,WAAanwD,GAEnB8vD,EAAHxxF,UAAAsyF,UAAG,SAAAruF,GAoDC,IAlDIsuF,EAiDJ7yF,KAlDKuE,MAAQA,EAoDTA,GAlDSvE,KAAK8yF,eAmDhBD,EAlDYtuF,EAAMqa,eAAe5e,KAAK8yF,cAAgBvuF,EAAMvE,KAAK8yF,cAAgBvuF,GAsDnFvE,KAlDK+yF,aAAeF,GAAwB,GAmD5C7yF,KAlDKi+B,MAAM3J,cAAc/vB,MAAQvE,KAAK+yF,aAmDtC/yF,KAlDKiB,mBAAmBgB,gBAQzB6vF,EAAHxxF,UAAAktF,iBAAG,SAAA58D,GAoDKA,GAnDSA,EAAMrsB,QAoDjBvE,KAnDK4yF,UAAUhiE,EAAMrsB,OAoDrBvE,KAnDKkyF,UAAUthE,EAAMrsB,QAqDvBvE,KAnDK8pF,cAMNgI,EAAHxxF,UAAA27B,WAAG,SAAA+2D,GAqDChzF,KApDK8hC,WAAW,MAqDhB9hC,KApDKkyF,UAAU,SAnInB,GAqIOJ,qBAAPvvF,WAA2C,CAqD3C,CApDE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAqDvBC,SApDU,cAqDVoC,UApDW,CAAA6uF,uBAqDXtgE,gBApDiBC,KAAAA,wBAAwBC,OAqDzCN,SApDU,6wBAaX2gE,qBAADhuF,eAAC,WAAA,MAAA,CAuDD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,mBACP,CAAChC,KAAM+iF,KAAAA,UApDAsO,qBAAP/tF,eAAgE,CAuDhEmX,KAtDQ,CAAA,CAAGza,KAAMK,KAAAA,QAuDjBw0B,KAtDQ,CAAA,CAAG70B,KAAMK,KAAAA,QAuDjBo6B,YAtDe,CAAA,CAAGz6B,KAAMK,KAAAA,QAuDxBkxF,WAtDc,CAAA,CAAGvxF,KAAMK,KAAAA,QAuDvBs0B,MAtDS,CAAA,CAAG30B,KAAMK,KAAAA,QAuDlBy3B,cAtDiB,CAAA,CAAG93B,KAAMK,KAAAA,QAuD1BgyF,aAtDgB,CAAA,CAAGryF,KAAMK,KAAAA,QAuDzBiyF,aAtDgB,CAAA,CAAGtyF,KAAMK,KAAAA,QAuDzBmyF,KAtDQ,CAAA,CAAGxyF,KAAMK,KAAAA,QAuDjBmxF,cAtDiB,CAAA,CAAGxxF,KAAMkC,KAAAA,SAuD1B+uE,QAtDW,CAAA,CAAGjxE,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,mBAuDvCq4D,QAtDW,CAAA,CAAGv4D,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA2oF,gCAuDrCrrD,MAtDS,CAAA,CAAGx9B,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,WAuDnC2H,OAtDU,CAAA,CAAG7H,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,mBCzMtC,IAAAy0C,oBAAA,aAMOA,oBAAP7yC,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe8D,iBAAkBwK,iBAAkBkT,kBAAmBwb,mBAC/EhuD,aAAc,CAAA+uF,sBACdhvF,QAAS,CAAAgvF,0BAIZ18C,oBAADtxC,eAAC,WAAA,MAAA,ICfD,IADMovF,UAAUC,gBAGhBluC,mBAAA,WAAA,SAAAA,IACEjlD,KAAF88D,OAA8B,IAAIz7D,KAAAA,aAChCrB,KAAFozF,OAA8B,IAAI/xF,KAAAA,aAChCrB,KAAFqzF,KAA4B,IAAIhyF,KAAAA,aAC9BrB,KAAFszF,QAA+B,IAAIjyF,KAAAA,aACjCrB,KAAFuzF,KAA4B,IAAIlyF,KAAAA,aAC9BrB,KAAFwzF,IAA2B,IAAInyF,KAAAA,aAC7BrB,KAAFyzF,KAA4B,IAAIpyF,KAAAA,aAC9BrB,KAAFqF,OAA8B,IAAIhE,KAAAA,aAChCrB,KAAF0zF,OAA8B,IAAIryF,KAAAA,aAChCrB,KAAF2zF,UAAiC,IAAItyF,KAAAA,aACnCrB,KAAF4zF,YAAmC,IAAIvyF,KAAAA,aACrCrB,KAAFijE,OAA0B,CAAA,SAAW,SAAU,OAAQ,UAAW,OAAQ,MAAO,OAAQ,SAAU,SAAU,YAAa,eACxHjjE,KAAF6zF,KAAqB,UAOrB5uC,EAAA3kD,UAAA8E,IAAA,SACG8V,EAAA44E,GAAC,IACIC,EAAM/zF,KAAKutF,KAAKryE,GAApB,GAAI64E,EACF,MACM,IAAI1sF,MAAM,cAAC6T,EADvB,oBAcI,OAZA64E,EACM,CAAJ74E,KACMA,EAAN44E,MACOA,GACT9zF,KACK6zF,KAAKprF,KAAKsrF,GAAXD,EACME,QACRh0F,KACKi0F,aAAa/4E,EAAM44E,GAErBC,EAAIG,YAAPl0F,KACKm0F,YAAYJ,GAEZA,GAMX9uC,EAAA3kD,UAAAitF,KAAA,SAEGryE,GADC,IAAK,IAEIxP,EAAI,EAAGA,EAAI1L,KAAK6zF,KAAK3oF,OAAQQ,IADpC,GAAI1L,KAEK6zF,KAAKnoF,GAAGwP,OAASA,EADxB,OAEOlb,KAAK6zF,KAAKnoF,GACrB,OAEO,MAKXu5C,EAAA3kD,UAAA4qD,QAAA,SAEGhwC,GADC,IAEI64E,EAAM/zF,KAAKutF,KAAKryE,GAChBxP,EAAI1L,KAAK6zF,KAAKjsF,QAAQmsF,GAD1B/zF,KAEK6zF,KAAKhsF,OAAO6D,EAAG,GADpBqoF,EAEID,MAAM5oC,WAMdjG,EAAA3kD,UAAAs0D,WAAA,SAEG15C,EAAAohB,GADC,IAEIy3D,EAAM/zF,KAAKoF,IAAI8V,EAAMg4E,UAAQ52D,IADjCt8B,KAEKi0F,aAAa/4E,EAAM64E,EAAID,QAMhC7uC,EAAA3kD,UAAA2zF,aAAA,SAEG/4E,EAAA44E,GAFH,IAGQM,EACAC,EACAC,EACAC,EANRpzF,EAAAnB,KAKI8zF,EAEM5xC,GAAG,SAAU,SAAAiT,EAAKrnD,GACjBgmF,EAAME,UACXO,EAEcT,EAAME,OAAOF,EAAMU,WAAW5sF,QAAQkG,KACxCjG,OAAOwsF,EAAW,GAD9BlzF,EAEKyyF,YAAY7xF,KAAK,CAACmZ,EAAMi6C,EAAIrnD,OAAnCgmF,EAEM5xC,GAAG,OAAQ,SAAAiT,EAAKrnD,GADpBsmF,EAEUj/B,EADVk/B,EAEYlzF,EAAKszF,WAAWt/B,EAAIrnD,KAAlCgmF,EAEM5xC,GAAG,OAAQ,SAAAwyC,EAAUj1D,EAAQ3xB,GADjC,GAEKgmF,EAAME,OAFX,CAKA,GAFAM,EAEYnzF,EAAKszF,WAAWC,EAASj1D,GADrC80D,EAEcT,EAAME,OAAOF,EAAMU,WAAW5sF,QAAQkG,IADhD2xB,IAEW3xB,EADbymF,EAEY1sF,OAAOysF,EAAW,EAAGC,EAAY1sF,OAAOwsF,EAAW,GAAG,QAC7D,CADL,IAEIM,EAAUP,IAAYM,EACtBE,EAAcd,EAAME,OAAOF,EAAMU,WAAW5sF,QAAQ63B,IACpDo1D,EAAeF,EAAUJ,EAAYF,GAAar1C,KAAKE,MAAMF,KAAKC,UAAUs1C,EAAYF,KAAxFM,GACFJ,EAEY1sF,OAAOwsF,EAAW,GAAhCO,EAEY/sF,OAAOysF,EAAW,EAAGO,GADjCp1D,EAEO4jD,YAAYqR,GAArBvzF,EAEKwyF,UAAU5xF,KAAK,CAACmZ,EAAMw5E,EAASj1D,EAAQ3xB,QAMlDm3C,EAAA3kD,UAAA6zF,YAAA,SAEGJ,GADCA,EAEIG,YAAa,EADjB,IAEIY,EAAO90F,KAUXA,KADKijE,OAAO5kD,QARE,SAAA5d,GAOZszF,EADID,MAAM5xC,GAAGzhD,EAJnB,WACQ,IADIE,EAAO6gB,MAAMlhB,UAAU6P,MAAM/L,KAAKf,WAEtCyxF,EADKr0F,GAAMsB,KAAK,CAACgyF,EAAI74E,MAAMhE,OAAOvW,SAc1CskD,EAAA3kD,UAAAm0F,WAAA,SAAGrzD,EAAA3nB,GACC,OAAO+H,MAAMlhB,UAAUsH,QAAQxD,KAAKqV,EAAO4nB,SAAUD,MAlJzD,GAoJO6jB,mBAAP1iD,WAA2C,CAC3C,CAAE9B,KAAMqjC,KAAAA,aAGPmhB,mBAADnhD,eAAC,WAAA,MAAA,IC1JD,IADMovF,QAAUC,gBAKhB4B,mBAAA,WAUA,SAAAA,EAJGz1E,EAAwC01E,GAAAh1F,KAA3Cg1F,eAA2CA,EAFzCh1F,KAAF8zF,MADe,KASX9zF,KAAKyzE,UAAYn0D,EAAQgV,qBAK7BygE,EAAAz0F,UAAA04B,SAAA,WACI,IAPI+6D,EAAM/zF,KAAKg1F,eAAezH,KAAKvtF,KAAK+zF,KASpCA,GACF/zF,KAPK8zF,MAAQC,EAAID,MAQjB9zF,KAPKi1F,aAQLj1F,KAPK8zF,MAAMU,WAAW/rF,KAAKzI,KAAKyzE,aAShCzzE,KAPK8zF,MAAQZ,QAAQ,CAQnBsB,WAPY,CAAAx0F,KAAMyzE,aASpBzzE,KAPKi1F,aAQLj1F,KAPKg1F,eAAe5vF,IAAIpF,KAAK+zF,IAAK/zF,KAAK8zF,SAa7CiB,EAAAz0F,UAAA20F,WAAA,WACQj1F,KATKk1F,eAUHl1F,KATK8zF,MAAME,OAUbh0F,KATK8zF,MAAME,OAAOvrF,KAAKzI,KAAKk1F,cAW5Bl1F,KATK8zF,MAAME,OAAS,CAAAh0F,KAAMk1F,gBAiBlCH,EAAAz0F,UAAAmwB,YAAA,SAZGC,GAaC,GAAIA,GAZWA,EAAQwkE,cAajBl1F,KAZK8zF,MAaP,GAAI9zF,KAZK8zF,MAAME,OAAQ,CAarB,IAZImB,EAAan1F,KAAK8zF,MAAME,OAAOpsF,QAAQ8oB,EAAQwkE,aAAaE,eAahEp1F,KAZK8zF,MAAME,OAAOnsF,OAAOstF,EAAY,EAAGzkE,EAAQwkE,aAAar+C,mBAc7D72C,KAZK8zF,MAAME,OAAS,CAAAtjE,EAASwkE,aAAar+C,iBA3CpD,GAgDOk+C,mBAAPxyF,WAA2C,CAa3C,CAZE9B,KAAMC,KAAAA,UAAWC,KAAM,CAAA,CACvBC,SAAU,gBAIXm0F,mBAADjxF,eAAC,WAAA,MAAA,CAeD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMwkD,sBAZA8vC,mBAAPhxF,eAAgE,CAehEgwF,IAdO,CAAA,CAAGtzF,KAAMK,KAAAA,MAAOH,KAAM,CAAA,aAe7Bu0F,aAdgB,CAAA,CAAGz0F,KAAMK,KAAAA,SChEzB,IAAAwvD,kBAAA,aAEOA,kBAAP/tD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBoC,aAAc,CAAAgyF,oBACdjyF,QAAS,CAAAiyF,wBAIZzkC,kBAADxsD,eAAC,WAAA,MAAA,ICTD,IAAAuxF,kBAAA,WAcA,SAAAA,EAHwB/1E,EAA4B4Y,GAA5Bl4B,KAAxBsf,QAAwBA,EAA4Btf,KAApDk4B,OAAoDA,EAPhDl4B,KAAJs1F,aAA2B,EACvBt1F,KAAJ6kE,OAAqB,EACjB7kE,KAAJqlE,KAAmB,EACfrlE,KAAJu1F,WAA6B,CAAA,UASrBv1F,KAAKw1F,kBAAoBx1F,KAAKy1F,cAAcxuF,KAAKjH,aAKzDq1F,EAAA/0F,UAAA04B,SAAA,WACQ,IAAK,IANIttB,EAAI,EAAGA,EAAI1L,KAAK01F,OAAQhqF,IAO7B1L,KANKu1F,WAAW7pF,GAAU,EAALA,EAAU,WAAa,SAShD1L,KANKsf,QAAQgV,cAAc4E,iBAAiB,UAAWl5B,KAAKw1F,oBAWpEH,EAAA/0F,UAAA6B,YAAA,WACQnC,KARKsf,QAAQgV,cAAc8E,oBAAoB,UAAWp5B,KAAKw1F,oBAcvEH,EAAA/0F,UAAAm1F,cAAA,SAXK7kE,GACyB,IAWlBA,EAXMiC,UAYNjC,EAXM+kE,2BAYN/kE,EAXMoC,mBAkBlBqiE,EAAA/0F,UAAAs1F,YAAA,SAdK5mD,GAeG,GAdkB,SAcdA,EAdsB,CAetB,GAAIhvC,KAdKs1F,eAAiBt1F,KAAK01F,OAAS,EAepC,OAEJ11F,KAdKs1F,mBACF,CAeH,GAd0B,IActBt1F,KAdKs1F,aAeL,OAEJt1F,KAdKs1F,eAiBT,IAAK,IAdI5pF,EAAI,EAAGA,EAAI1L,KAAK01F,OAAQhqF,IAe7B1L,KAdKu1F,WAAW7pF,GAAK,WAiBzB1L,KAdKu1F,WAAWv1F,KAAKs1F,cAAgB,SAerCt1F,KAdK6kE,MAA+B,IAAvB7kE,KAAMs1F,aAenBt1F,KAdKqlE,IAAMrlE,KAAMs1F,eAAiBt1F,KAAK01F,OAAS,EAehD11F,KAdK61F,aAAe,SAAA71F,KAAcs1F,gBAtD1C,GAwDOD,kBAAP9yF,WAA2C,CAe3C,CAdE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAerBC,SAdU,cAeVuwB,SAdU,2oBA2BVvtB,KAdM,CAeF+0D,UAdW,oBAKlB08B,kBAADvxF,eAAC,WAAA,MAAA,CAiBD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,oBAdA26D,kBAAPtxF,eAAgE,CAiBhE2xF,OAhBU,CAAA,CAAGj1F,KAAMK,KAAAA,SClFnB,IAAAyvD,iBAAA,aAGOA,iBAAPhuD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe8D,kBACxB90B,aAAc,CAAAsyF,mBACdvyF,QAAS,CAAAuyF,uBAIZ9kC,iBAADzsD,eAAC,WAAA,MAAA,ICAD,IAHMi3B,qBAAuB,CAI3B5D,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAA8/D,mBAI9Bv1F,OAHO,GAKTw1F,gBAAA,WAAA,SAAAA,IAUE/1F,KAAFkC,UAJsB,EAOpBlC,KAAF25B,OAJ8B,IAAIt4B,KAAAA,aAMhCrB,KAAFqF,OAJ8B,IAAIhE,KAAAA,aAMhCrB,KAAFg2F,SAJgC,IAAI30F,KAAAA,oBARpClB,OAAAC,eAJG21F,EAIHz1F,UAAA,OAAA,CAAAoD,IAAA,SAJGjD,GAKCT,KAJKi2F,MAAQx1F,EAAOA,EAAK25B,cAAgB,sCAuB7C27D,EAAAz1F,UAAA41F,SAAA,SAPGnxF,GAaC,OALIA,IACFA,EAPE26B,kBAQF36B,EAPEiuB,kBASJhzB,KAPKqF,OAAOtD,KAAKgD,IACV,GAaXgxF,EAAAz1F,UAAA0sF,SAAA,SAVGjoF,GAgBC,OALIA,IACFA,EAVE26B,kBAWF36B,EAVEiuB,kBAYJhzB,KAVK25B,OAAO53B,KAAKgD,IACV,GAgBXgxF,EAAAz1F,UAAA61F,WAAA,SAbGpxF,GAmBC,OALIA,IACFA,EAbE26B,kBAcF36B,EAbEiuB,kBAeJhzB,KAbKg2F,SAASj0F,KAAKgD,IACZ,KA1CX,GA4COgxF,gBAAPxzF,WAA2C,CAc3C,CAbE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAcvBC,SAbU,iBAcVuwB,SAbU,uVAUX4kE,gBAADjyF,eAAC,WAAA,MAAA,IAEMiyF,gBAAPhyF,eAAgE,CAgBhEtD,KAfQ,CAAA,CAAGA,KAAMK,KAAAA,QAgBjBoB,SAfY,CAAA,CAAGzB,KAAMK,KAAAA,QAgBrB64B,OAfU,CAAA,CAAGl5B,KAAMkC,KAAAA,SAgBnB0C,OAfU,CAAA,CAAG5E,KAAMkC,KAAAA,SAgBnBqzF,SAfY,CAAA,CAAGv1F,KAAMkC,KAAAA,UAmBrB,IAAAmzF,iBAAA,WA6EA,SAAAA,EAhDqBx2E,EAA6Bk0D,EAAuCt7C,GAApEl4B,KAArBsf,QAAqBA,EAA6Btf,KAAlDwzE,eAAkDA,EAAuCxzE,KAAzFk4B,OAAyFA,EAHvFl4B,KAAFu4B,eAtC2B,EAwCzBv4B,KAAFk7B,YAtCwB,GAYdl7B,KAAVuuF,qBAAyC,EA+CvCvuF,KAAFm7B,QA5C+B,IAAI95B,KAAAA,aA8CjCrB,KAAFo7B,MA5C6B,IAAI/5B,KAAAA,aA8C/BrB,KAAFq7B,KA5C4B,IAAIh6B,KAAAA,aA8C9BrB,KAAFwuF,OA5C8B,IAAIntF,KAAAA,aAiDhCrB,KAAFs7B,MA5CsB,GA6CpBt7B,KAAF20B,SA5CkB,KA6ChB30B,KAAFupB,OA5CgB,GAiDdvpB,KAAFsjB,OA5CgB,GA6CdtjB,KAAFu7B,OA5CW,IAAItX,cAAAA,cAAc,GA8C3BjkB,KAAFy7B,cA5C4B,aA6C1Bz7B,KAAF07B,eA5C6B,oBAU7Bv7B,OAAAC,eAzCG01F,EAyCHx1F,UAAA,qBAAA,CAMAmD,IAAA,WACI,OA5COzD,KAAKuuF,qBAqChB7qF,IAAA,SAzCG+lC,GA0CCzpC,KAzCKuuF,oBAAsB/tF,SAAAA,sBAAsBipC,oCAsFrDqsD,EAAAx1F,UAAA04B,SAAA,WACIh5B,KApDKo2F,YAyDTj2F,OAAAC,eArDG01F,EAqDHx1F,UAAA,QAAA,CAAAmD,IAAA,WACI,OArDOzD,KAAKsjB,QA2DhB5f,IAAA,SAtDGixB,GAuDC30B,KAtDKq2F,UAAY,GAuDb1hE,IAtDa30B,KAAKsjB,SAuDpBtjB,KAtDKsjB,OAASqR,EAuDd30B,KAtDKm7B,QAAQp5B,KAAK,CAAEwC,MAAOowB,EAAUq6D,SAAUhvF,KAAKs7B,QAuDpDt7B,KAtDKy7B,cAAc9G,qCA4DzBmhE,EAAAx1F,UAAA27B,WAAA,WACIj8B,KAxDKs7B,MAAQ,GAyDbt7B,KAxDKu7B,OAAOh2B,KAAKvF,KAAKs7B,OAyDtBt7B,KAxDKuE,MAAQ,KAyDbvE,KAxDKm7B,QAAQp5B,KAAK,CAAEwC,MAAOvE,KAAKuE,MAAOyqF,SAAUhvF,KAAKs7B,QAyDtDt7B,KAxDKy7B,cAAcz7B,KAAKuE,QA6D5BuxF,EAAAx1F,UAAA81F,SAAA,WAAA,IAAAj1F,EAAAnB,KAEI,GADAA,KA1DKs7B,MAAQ,GA2DTt7B,KA1DKy9B,OAASjc,MAAMrY,QAAQnJ,KAAKy9B,OAAQ,CA4D3C,IADA,IA1DI64D,EAAW,GA2DrB1zD,EAAA,EA1DwBI,EAAAhjC,KAAKy9B,MAALmF,EA0DxBI,EAAA93B,OA1DwB03B,IA0DxB,CAAW,IA1DIr+B,EA0Dfy+B,EAAAJ,GAzDY7N,OA0DZ,EACY/0B,KA1DK8N,QAAU9N,KAAK8N,OAAOqvB,QAAUvD,QAAQg4B,2BAA2B5xD,KAAK8N,OAAOqvB,OAAQ54B,KA2D9FwwB,EA1DQ6E,QAAQwD,YAAYp9B,KAAK8N,OAAOqvB,OAAQ54B,IA4D9CvE,KA1DK8N,QAAUinB,GAASA,IAAU/0B,KAAK8N,OAAOqvB,OA2DhDn9B,KA1DKs7B,MAAM7yB,KAAK,CA2DdlE,MAAZA,EACYwwB,MAAZA,IAxDe/0B,KAAS8N,OAAOwhF,WAA8C,mBAA1BtvF,KAAK8N,OAAOwhF,UA2DrDgH,EA1DS7tF,KAAKlE,GACTvE,KAAS8N,OAAOwuB,SAAW9a,MAAMrY,QAAQnJ,KAAK8N,OAAOwuB,SA2D1Dt8B,KA1DKs7B,MAAM7yB,KAAKzI,KAAKu2F,oBAAoBhyF,IA4DzCvE,KA1DKs7B,MAAM7yB,KAAK,CA2DdlE,MAAZA,EACYwwB,MA1DOxwB,IAIS,EA0DlB+xF,EA1DSprF,QAAclL,KAAK8N,QAAU9N,KAAK8N,OAAOwhF,WAA8C,mBAA1BtvF,KAAK8N,OAAOwhF,WA2DpFtvF,KA1DK8N,OAAOwhF,UAAUgH,GAAU9lF,KAAK,SAAChC,GA2DpC,IA1DkB,IA0D5Bo0B,EAAA,EA1D4B4zD,EA0D5BhoF,EA1D4Bo0B,EA0D5B4zD,EAAAtrF,OA1D4B03B,IA0D5B,CAAe,IA1DIr+B,EA0DnBiyF,EAAA5zD,GACgBr+B,EA1DMqa,eAAe,SA2DvBzd,EA1DKm6B,MAAM7yB,KAAK,CA2DdlE,MAAhBA,EACgBwwB,MA1DOxwB,EAAMwwB,QAEV5zB,EAAS2M,OAAOwuB,SAAW9a,MAAMrY,QAAQhI,EAAK2M,OAAOwuB,SA2D1Dn7B,EA1DKm6B,MAAM7yB,KAAKtH,EAAKo1F,oBAAoBhyF,IA4DzCpD,EA1DKm6B,MAAM7yB,KAAKlE,GA6DpBpD,EA1DKo6B,OAAOh2B,KAAKpE,EAAKm6B,SA8D5Bt7B,KA1DKm7B,QAAQp5B,KAAK,CAAEwC,MAAOvE,KAAKy9B,MAAOuxD,SAAUhvF,KAAKs7B,QA2DtDt7B,KA1DKu7B,OAAOh2B,KAAKvF,KAAKs7B,QAgE1Bw6D,EAAAx1F,UAAAi2F,oBAAA,SA7DGhyF,GA8DC,IA7DIkyF,EAAWz2F,KAAK8N,OAAOwuB,QAAQixD,KAAK,SAACtkF,GAAQ,OAAAA,EAAI1E,QAAUA,IA8D/D,MA7DO,CA8DLA,MAANA,EACMwwB,MA7DO0hE,EAAWA,EAAS1hE,MAAQxwB,IAoEzCuxF,EAAAx1F,UAAAu9B,YAAA,SAhEGjN,GAiEC5wB,KAhEK20B,SAAW,KAiEhB30B,KAhEK02F,eAuETZ,EAAAx1F,UAAAq5B,OAAA,SApEG/I,EAAA8I,GAqEC15B,KApEKq7B,KAAKt5B,KAAK6uB,GAqEf5wB,KApEK69B,cAqEL79B,KApEK20B,SAAW+E,EAqEhB15B,KApEK22F,eA2ETb,EAAAx1F,UAAA01F,SAAA,SAxEGplE,EAAA8I,GAyEC15B,KAxEKq7B,KAAKt5B,KAAK6uB,GAyEf5wB,KAxEK69B,eA8ETi4D,EAAAx1F,UAAAs2F,SAAA,SA3EGhmE,GA4EC5wB,KA3EKwuF,OAAOzsF,KAAK6uB,IAiFrBklE,EAAAx1F,UAAAw9B,QAAA,SA9EGlN,GA+EC5wB,KA9EK69B,cA+EL79B,KA9EKsf,QAAQgV,cAAczD,UAAUzrB,IAAI,YA+EzCpF,KA9EKo7B,MAAMr5B,KAAK6uB,IAoFpBklE,EAAAx1F,UAAA8E,IAAA,SAjFGwrB,GAkFC,GAAIA,KAjFWA,aAAiBoN,OAAQ,CAkFtCh+B,KAjFKs7B,MAAM7yB,KAAKmoB,GAkFhB5wB,KAjFKuE,MAAQvE,KAAKs7B,MAAM3a,IAAI,SAACjV,GAAM,OAAAA,EAAEnH,QAmFrC,IAjFI05B,EAAQj+B,KAAKsf,QAAQgV,cAAc2E,cAAc,uBAkFjDgF,GACFA,EAjFM7C,QAoFVp7B,KAjFKu7B,OAAOh2B,KAAKvF,KAAKs7B,QAwF1Bw6D,EAAAx1F,UAAA+E,OAAA,SArFGurB,EAAA8I,GAsFK9I,IACFA,EArFM8O,kBAsFN9O,EArFMoC,kBAuFRhzB,KArFKs7B,MAAMzzB,OAAO7H,KAAKs7B,MAAM1zB,QAAQ8xB,GAAO,GAsF5C15B,KArFK69B,cAsFL79B,KArFKuE,MAAQvE,KAAKs7B,MAAM3a,IAAI,SAACjV,GAAM,OAAAA,EAAEnH,QAsFrCvE,KArFKm7B,QAAQp5B,KAAK,CAAEwC,MAAOvE,KAAKuE,MAAM2G,OAASlL,KAAKuE,MAAQ,GAAIyqF,SAAUhvF,KAAKs7B,QAsF/Et7B,KArFKy7B,cAAcz7B,KAAKuE,MAAM2G,OAASlL,KAAKuE,MAAQ,IAsFpDvE,KArFKu7B,OAAOh2B,KAAKvF,KAAKs7B,QA2F1Bw6D,EAAAx1F,UAAA+4B,UAAA,SAxFGzI,GAyFKA,EAxFMiC,UAAYyG,SAASkG,WAyFzB5O,EAxFM6O,QAAwC,IAA9B7O,EAAM6O,OAAOl7B,MAAM2G,QAAgBlL,KAAKs7B,MAAMpwB,SAyF5D0lB,IACFA,EAxFM8O,kBAyFN9O,EAxFMoC,kBA0FJhzB,KAxFK20B,SAyFP30B,KAxFKqF,OAAOurB,EAAO5wB,KAAK20B,UA0FxB30B,KAxFK25B,OAAO/I,EAAO5wB,KAAKs7B,MAAMt7B,KAAKs7B,MAAMpwB,OAAS,MAiG5D4qF,EAAAx1F,UAAAuhC,UAAA,SA1FG98B,GA2FC/E,KA1FKsf,QAAQgV,cAAczD,UAAUxrB,OAAO,YA2F5CrF,KA1FK07B,iBA2FL17B,KA1FKq7B,KAAKt5B,KAAKgD,IAgGnB+wF,EAAAx1F,UAAAwhC,WAAA,SA7FGrE,GA8FCz9B,KA7FKy9B,MAAQA,EA8Fbz9B,KA7FKo2F,YAmGTN,EAAAx1F,UAAAyhC,iBAAA,SAhGGC,GAiGChiC,KAhGKy7B,cAAgBuG,GAsGzB8zD,EAAAx1F,UAAA2hC,kBAAA,SAnGGD,GAoGChiC,KAnGK07B,eAAiBsG,GAyG1B8zD,EAAAx1F,UAAA8xE,iBAAA,SAtGGlwE,GAuGClC,KAtGKuuF,oBAAsBrsF,GAgH/B4zF,EAAAx1F,UAAAq2F,YAAA,WACQ32F,KAtGK8N,OAAO+oF,kBACT72F,KAAK8uF,QAuGR9uF,KAtGK8uF,MAAQ9uF,KAAKwzE,eAAehB,qBAAqBxyE,KAAK8N,OAAO+oF,gBAAiB72F,KAAK82F,UAwG1F92F,KAtGK8uF,MAAMj0B,SAAShJ,MAAQ7xD,KAAK20B,WA+GvCmhE,EAAAx1F,UAAAo2F,YAAA,WACQ12F,KAtGK8uF,QAuGP9uF,KAtGK8uF,MAAM5jC,UAuGXlrD,KAtGK8uF,MAAQ,SAvOnB,GA0OOgH,iBAAPvzF,WAA2C,CAuG3C,CAtGE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAuGvBC,SAtGU,mBAuGVoC,UAtGW,CAAA+3B,sBAuGX5J,SAtGU,66CAwIVvtB,KAtGM,CAuGJs+B,qBAtGsB,mBAuGtB2uC,mBAtGoB,0BAKvBilB,iBAADhyF,eAAC,WAAA,MAAA,CAyGD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAM6kD,gBACP,CAAC7kD,KAAMi6B,oBAtGAo7D,iBAAP/xF,eAAgE,CAyGhEw0B,cAxGiB,CAAA,CAAG93B,KAAMK,KAAAA,QAyG1Bo6B,YAxGe,CAAA,CAAGz6B,KAAMK,KAAAA,QAyGxBgN,OAxGU,CAAA,CAAGrN,KAAMK,KAAAA,QAyGnBL,KAxGQ,CAAA,CAAGA,KAAMK,KAAAA,QAyGjB+tF,mBAxGsB,CAAA,CAAGpuF,KAAMK,KAAAA,QAyG/Bq6B,QAxGW,CAAA,CAAG16B,KAAMkC,KAAAA,SAyGpBy4B,MAxGS,CAAA,CAAG36B,KAAMkC,KAAAA,SAyGlB04B,KAxGQ,CAAA,CAAG56B,KAAMkC,KAAAA,SAyGjB6rF,OAxGU,CAAA,CAAG/tF,KAAMkC,KAAAA,SAyGnBm0F,QAxGW,CAAA,CAAGr2F,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,UAAY,CAAEk2B,KAAM9E,KAAAA,qBAyGzDxtB,MAxGS,CAAA,CAAG9D,KAAMK,KAAAA,SCpYlB,IAFMi6B,uBAAuB,CAG3B5D,QAFS6D,MAAAA,kBAGT5D,YAFapB,KAAAA,WAAW,WAAM,OAAA+gE,sBAG9Bx2F,OAFO,GAITy2F,mBAAA,SAAA7zF,GAAA,SAAA6zF,0DAACxzF,UAADwzF,EAAA7zF,GAKA6zF,EAAA12F,UAAA0sF,SAAA,SAJGjoF,GAKC,OAJO,KAFX,CAACgxF,iBAIMiB,mBAAPz0F,WAA2C,CAK3C,CAJE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAKvBC,SAJU,gBAKVuwB,SAJU,mJAIX6lE,mBAADlzF,eAAC,WAAA,MAAA,IAUD,IAAAizF,oBAAA,SAAA5zF,GAkBA,SAAA4zF,EAnBGz3E,EAAgCk0D,EAAgCt7C,GAmBnE,IAAA/2B,EACIgC,EADJiB,KAAApE,KACUsf,EAASk0D,EAAgBt7C,IADnCl4B,YANEmB,EAAFo3B,eAf2B,WAF1B/0B,UAADuzF,EAAA5zF,GA8BA4zF,EAAAz2F,UAAA+4B,UAAA,SAtBGzI,OAHH,CALCklE,kBAWMiB,oBAAPx0F,WAA2C,CAuB3C,CAtBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAuBvBC,SAtBU,iBAuBVoC,UAtBW,CAAA+3B,wBAuBXn3B,KAtBM,CAuBJs+B,qBAtBsB,oBAwBxB/Q,SAtBU,m0CAoCX4lE,oBAADjzF,eAAC,WAAA,MAAA,CAyBD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAM6kD,gBACP,CAAC7kD,KAAMi6B,oBAtBAq8D,oBAAPhzF,eAAgE,CAyBhEw0B,cAxBiB,CAAA,CAAG93B,KAAMK,KAAAA,SCtF1B,IAAAwhC,gBAAA,aAGqCA,gBAArC//B,WAAyE,CACzE,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACtBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAaC,kBACrCt/B,aAAc,CAAAgzF,gBAAkBD,iBAAkBkB,mBAAoBD,qBACtEj0F,QAAS,CAAAizF,gBAAkBD,iBAAkBkB,mBAAoBD,yBAIlEz0D,gBAADx+B,eAAC,WAAA,MAAA,ICSD,IAHMmzF,2BAA6B,CAIjC9/D,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAAkhE,wBAI9B32F,OAHO,GAqBT22F,sBAAA,WAkDA,SAAAA,EAJqBh/D,EAAkC5Y,GAAlCtf,KAArBk4B,OAAqBA,EAAkCl4B,KAAvDsf,QAAuDA,EA9BrDtf,KAAFm3F,UADsB,EAIpBn3F,KAAFgtF,SADgC,IAAI3rF,KAAAA,cAAa,GAM/CrB,KAAF+gE,SADuB,GAGrB/gE,KAAFshE,OADqB,GAGnBthE,KAAFo3F,MADsB,GAGpBp3F,KAAF8jE,KADiB,OAcf9jE,KAAFq3F,gBADsC,YAEpCr3F,KAAFkyF,UADwB,aAEtBlyF,KAAFmyF,WADyB,oBAWzB+E,EAAA52F,UAAA04B,SAAA,WAMI,IAJA,IAPI9wB,EAAM,IAAIC,KACV08D,EAAQ7kE,KAAKs3F,QAAUttF,OAAOhK,KAAKs3F,SAAWpvF,EAAIqvF,cAAgB,IAClElyB,EAAMrlE,KAAKw3F,QAAUxtF,OAAOhK,KAAKw3F,SAAWtvF,EAAIqvF,cAAgB,GAE3D7rF,EAAIm5D,EAAOn5D,GAAK25D,EAAK35D,IAQ5B1L,KAPKo3F,MAAM3uF,KAAKiD,GAWlB1L,KAPK+gE,SAAW/gE,KAAKy3F,gBAQrBz3F,KAPKshE,OAASthE,KAAKk4B,OAAO+oC,YAU1BjhE,KAPK03F,cAAgB13F,KAAKk4B,OAAOoX,UAQjCtvC,KAPK23F,eAAiB33F,KAAKk4B,OAAOqX,QAQlCvvC,KAPK43F,WAAW53F,KAAKy9B,OAAO,GAAO,IAavCy5D,EAAA52F,UAAAmwB,YAAA,SAVGC,GAWC,IAVImnE,EAAsCnnE,EAAS,gBAYjDmnE,GACAA,EAVsBhhD,eAAiBghD,EAAsBzC,gBAW5DyC,EAVsBjmB,aAYvB5xE,KAVK83F,aAYP,IAVIC,EAAiCrnE,EAAS,UAW1CqnE,GAVoBA,EAAiBlhD,eAAiBkhD,EAAiB3C,gBAAiB2C,EAAkBnmB,cAW5G5xE,KAVK+gE,SAAW/gE,KAAKy3F,gBAWrBz3F,KAVK43F,WAAW53F,KAAKy9B,OAAO,GAAO,KAgBzCy5D,EAAA52F,UAAAm3F,cAAA,WACI,IAZI12B,EAAW/gE,KAAKk4B,OAAOsoC,eAEtB5mC,QAAQ+N,QAAQ3nC,KAAKm3F,YAA+B,EAAjBn3F,KAAKm3F,WAAiBn3F,KAAKm3F,WAAa,IAc9Ep2B,EAbeA,EAASl5D,OAAO7H,KAAKm3F,WAa1CjgF,OAZ+B6pD,IAc3B,OAZOA,GAwBXm2B,EAAA52F,UAAA03F,iBAAA,SArBGjY,EAAAle,EAAAltC,EAAAsjE,EAAAC,EAAAb,EAAAc,GAsBC,GAAIpY,IArBSoY,EAAkB,CAsB7B,IArBIC,EACkB,YAqBpBf,GArBiC1iE,GAAasjE,GAAajyB,QAAAA,QAAgBnE,EAAKo2B,IAAchyB,QAAAA,SAAiBpE,EAAKq2B,GAClHG,EACkB,cAqBpBhB,GArBmC1iE,GAAasjE,GAAahyB,QAAAA,SAAiBpE,EAAKltC,IAAaqxC,QAAAA,QAAgBnE,EAAKq2B,GACnHI,GAAgB3jE,GAAasjE,GAAahyB,QAAAA,SAAiBpE,EAAKo2B,IAAcjyB,QAAAA,QAAgBnE,EAAKq2B,GAuBvG,OAtBqBvjE,IAAYsjE,GAAcjyB,QAAAA,QAAgBnE,EAAKltC,IAAasxC,QAAAA,SAAiBpE,EAAKq2B,IAC9EI,GAAiBD,GAAwBD,EAuBpE,OArBO,GA8BXlB,EAAA52F,UAAAi4F,UAAA,SA3BGxY,EAAAle,EAAAltC,EAAAsjE,GA4BC,SAAIlY,GA3BSkY,GAAatjE,MACjB0xC,QAAAA,UAAmB1xC,EAAUsjE,IAAc5xB,QAAAA,UAAkBxE,EAAKo2B,IAAcjyB,QAAAA,QAAgBnE,EAAKltC,KAsClHuiE,EAAA52F,UAAAk4F,YAAA,SAjCGzY,EAAAle,EAAAltC,EAAAsjE,GAkCC,SAAIlY,GAjCSkY,GAAatjE,MACjB0xC,QAAAA,UAAmB1xC,EAAUsjE,IAAc5xB,QAAAA,UAAkBxE,EAAKltC,IAAasxC,QAAAA,SAAiBpE,EAAKo2B,KA4ClHf,EAAA52F,UAAAm4F,SAAA,SAvCG1Y,EAAAle,EAAAltC,EAAAsjE,GAwCC,SAAIlY,GAvCSkY,GAAatjE,KAyCrBqxC,QAAAA,QAvCgBnE,EAAKltC,IAAasxC,QAAAA,SAAiBpE,EAAKo2B,IAwCzD5xB,QAAAA,UAvCkBxE,EAAKltC,IAwCvB0xC,QAAAA,UAvCkBxE,EAAKo2B,KAmD/Bf,EAAA52F,UAAAwqC,WAAA,SA7CGi1C,EAAAle,EAAAltC,EAAAsjE,GA8CC,OAAIlY,EAEAle,IA5CEltC,GA8CCktC,EA7CIhB,YAAclsC,EAASksC,WA8C1BgB,EA7CIR,aAAe1sC,EAAS0sC,YA8C5BQ,EA7CI01B,gBAAkB5iE,EAAS4iE,eA8ChCU,GACEp2B,EA7CIhB,YAAco3B,EAAUp3B,WA8C3BgB,EA7CIR,aAAe42B,EAAU52B,YA8C7BQ,EA7CI01B,gBAAkBU,EAAUV,eAGnC11B,EAAIhB,YAAclsC,EAASksC,WAAagB,EAAIR,aAAe1sC,EAAS0sC,YAAcQ,EAAI01B,gBAAkB5iE,EAAS4iE,eAqD5HL,EAAA52F,UAAAgqC,WAAA,SAlDGu3B,EAAAgD,EAAAQ,GAmDC,OAlDOY,QAAAA,SAAiBpE,EAAKgD,IAAUmB,QAAAA,QAAgBnE,EAAKwD,IA0DhE6xB,EAAA52F,UAAAs3F,WAAA,SAvDGloD,EAAA+9C,EAAAiL,GAwDC,GAAIhpD,GAvD2B,OAAnBA,EAAKJ,UAwDftvC,KAvDK83F,iBACA,CACApoD,GAwDH1vC,KAvDK83F,aAyDP,IAvDIvzF,EAAamrC,EAAO,IAAIvnC,KAAKunC,GAAQ,IAAIvnC,KAwD7C5D,EAvDQvE,KAAK24F,WAAWp0F,GAwDxBvE,KAvDKmhE,MAAQ,IAAIh5D,KAAK5D,GAwDtBvE,KAvDK44F,WAAa54F,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAKmhE,MAAO,CAAEA,MAAO,UAyDxE,IAvDI0D,EAAQ,IAAI18D,KAAK5D,EAAMguD,WAwD3BsS,EAvDMjE,QAAQ,GAwDd5gE,KAvDK24F,WAAW9zB,EAAMjE,QAAQ,IAyD9B5gE,KAvDK64F,WAAWh0B,EAAO7kE,KAAKmhE,OAyDxBu3B,GACF14F,KAvDK25B,OAAO,KAAM,CAAE+V,KAAMnrC,GAASkpF,KA8D3CyJ,EAAA52F,UAAAw4F,SAAA,WACI,IAzDI5T,EAAM,IAAI/8E,KA0DdnI,KAzDK43F,WAAW1S,GAAK,GAAM,GA2D3BllF,KAzDKsC,KAAK,KAAM,SA8DpB40F,EAAA52F,UAAAw3F,WAAA,WACI93F,KA3DK20B,SAAW,KA4DhB30B,KA3DK03F,cAAgB13F,KAAKk4B,OAAOoX,UA4DjCtvC,KA3DKi4F,UAAY,KA4DjBj4F,KA3DK23F,eAAiB33F,KAAKk4B,OAAOqX,SAiEtC2nD,EAAA52F,UAAA8gE,SAAA,SA9DGD,GA+DC,IA9DIzxB,EAAO1vC,KAAKmhE,MAAQnhE,KAAKmhE,MAAQ,IAAIh5D,KACrC+8E,EAAMzZ,QAAAA,SAAiB/7B,EAAMyxB,GA+DjCnhE,KA9DK43F,WAAW1S,GAAK,GAAM,GAgE3BllF,KA9DKsC,KAAK,KAAM,SAoEpB40F,EAAA52F,UAAAy4F,QAAA,SAjEGj3B,GAkEC,IAjEIpyB,EAAO1vC,KAAKmhE,MAAQnhE,KAAKmhE,MAAQ,IAAIh5D,KACrC+8E,EAAM1Z,QAAAA,QAAgB97B,EAAMoyB,GAkEhC9hE,KAjEK43F,WAAW1S,GAAK,GAAM,GAmE3BllF,KAjEKsC,KAAK,KAAM,SAyEpB40F,EAAA52F,UAAAq5B,OAAA,SAtEG/I,EAAAixC,EAAA4rB,GAuEC7zD,QAtEQC,aAAajJ,GAuEjB5wB,KAtEK+/E,MAuEH//E,KAtEKm4F,iBAuEPn4F,KAtEK20B,SAAWqvC,QAAAA,YAAoBnC,EAAInyB,KAAM,CAAEg3B,aAAc1mE,KAAKm3F,YAuEnEn3F,KAtEKi4F,UAAYh0B,QAAAA,UAAkBpC,EAAInyB,KAAM,CAAEg3B,aAAc1mE,KAAKm3F,YAuElEn3F,KAtEK03F,cAAgB13F,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAuEnEwsC,MAtEO,QAuEPU,IAtEK,UAuELC,KAtEM,YAwER9hE,KAtEK23F,eAAiB33F,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAKi4F,UAAW,CAuErE92B,MAtEO,QAuEPU,IAtEK,UAuELC,KAtEM,aAGH2rB,GAAcztF,KAAKm4F,iBAuEtBn4F,KAtEKg5F,mBAE2B,cAA7Bh5F,KAASq3F,iBAwEdr3F,KAtEK20B,SAAW8a,QAAAA,WAAmBoyB,EAAInyB,MAuEvC1vC,KAtEK03F,cAAgB13F,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAuEnEwsC,MAtEO,QAuEPU,IAtEK,UAuELC,KAtEM,YAwEJ9hE,KAtEKi4F,WAAajyB,QAAAA,QAAgBnE,EAAInyB,KAAM1vC,KAAKi4F,aAwEnDj4F,KAtEKi4F,UAAY,KAuEjBj4F,KAtEK23F,eAAiB33F,KAAKk4B,OAAOqX,SAwEhC3e,IACF5wB,KAtEKq3F,gBAAkB,YAES,YAA7Br3F,KAASq3F,kBAwEdr3F,KAtEKi4F,UAAYvwB,QAAAA,SAAiB7F,EAAInyB,MAuEtC1vC,KAtEK23F,eAAiB33F,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAKi4F,UAAW,CAuErE92B,MAtEO,QAuEPU,IAtEK,UAuELC,KAtEM,YAwEJ9hE,KAtEK20B,UAAYsxC,QAAAA,SAAiBpE,EAAInyB,KAAM1vC,KAAK20B,YAwEnD30B,KAtEK20B,SAAW,KAuEhB30B,KAtEK03F,cAAgB13F,KAAKk4B,OAAOoX,WAwE/B1e,IACF5wB,KAtEKq3F,gBAAkB,eA0E3Br3F,KAtEK20B,SAAWktC,EAAInyB,KAuEpB1vC,KAtEK03F,cAAgB13F,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAuEnEwsC,MAtEO,QAuEPU,IAtEK,UAuELC,KAtEM,YAwER9hE,KAtEKi5F,iBAwEHxL,GAtEcztF,KAAK20B,WAwEjB30B,KAtEK+/E,OAAS//E,KAAK20B,UAAY30B,KAAKi4F,YAuEtCj4F,KAtEKg5F,kBAwELh5F,KAtEKkyF,UAAU,CAuEb5iD,UAtEWtvC,KAAK20B,SAuEhB4a,QAtESvvC,KAAKi4F,UAAYj4F,KAAKi4F,UAAY,OAwE7Cj4F,KAtEKy9B,MAAQ,CAuEX6R,UAtEWtvC,KAAK20B,SAuEhB4a,QAtESvvC,KAAKi4F,UAAYj4F,KAAKi4F,UAAY,OAI1Cj4F,KAAK+/E,QAuER//E,KAtEKgtF,SAASznF,KAAK,CAuEjB47D,MAtEOnhE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAAEwsC,MAAO,SAuEhEW,KAtEM9hE,KAAK20B,SAAS4iE,cAuEpB11B,IAtEK7hE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAAEqsC,QAAS,SAuEhEtxB,KAtEM1vC,KAAK20B,WAyEb30B,KAtEKkyF,UAAUlyF,KAAK20B,UAuEpB30B,KAtEKy9B,MAAQz9B,KAAK20B,YA6E1BuiE,EAAA52F,UAAA04F,gBAAA,WAEQ/yB,QAAAA,SAxEiBjmE,KAAK20B,SAAU30B,KAAKi4F,YAyEvCj4F,KAxEKgtF,SAASznF,KAAK,CAyEjB+pC,UAxEW,CAyET6xB,MAxEOnhE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAAEwsC,MAAO,SAyEhEW,KAxEM9hE,KAAK20B,SAAS4iE,cAyEpB11B,IAxEK7hE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAAEqsC,QAAS,SAyEhEtxB,KAxEM1vC,KAAK20B,UA0Eb4a,QAxES,CAyEP4xB,MAxEOnhE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAKi4F,UAAW,CAAE92B,MAAO,SAyEjEW,KAxEM9hE,KAAKi4F,UAAUV,cAyErB11B,IAxEK7hE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAKi4F,UAAW,CAAEj3B,QAAS,SAyEjEtxB,KAxEM1vC,KAAKi4F,cAkFrBf,EAAA52F,UAAAgC,KAAA,SA5EGsuB,EAAAnwB,GA4EH,IAAAU,EAAAnB,KACI45B,QA5EQC,aAAajJ,GA+EjBnwB,IA5EST,KAAK8jE,KA6EhB9jE,KA5EK8jE,KAAO,OA8EZ9jE,KA5EK8jE,KAAOrjE,EAII,UA4EdT,KA5EK8jE,MAAkC,WAAd9jE,KAAK8jE,MA6EhCrzD,WA5EW,WA6ET,IA5EIgjE,EAAYtyE,EAAKme,QAAQgV,cAAc2E,cAAc,qBAAC93B,EAAyB2iE,MAC/Eo1B,EAAe/3F,EAAKme,QAAQgV,cAAc2E,cA6E5C,qBAAqB93B,EA5EK2iE,KA2EpC,MA3E2D,UAAlB3iE,EAAS2iE,KAAmB,OAAS,SA2E9E,aAGY2P,GA5EaylB,IA6EfzlB,EA5EU/qB,UAAYwwC,EAAa/mB,UAAY,OAiFrDnyE,KA5EKi5F,iBAkFT/B,EAAA52F,UAAA4rE,UAAA,SA/EGt7C,GAgFCgJ,QA/EQC,aAAajJ,GAgFrB,IA/EIs0D,EAAM/Y,QAAAA,UAAkBnsE,KAAKmhE,MAAO,GAgFxCnhE,KA/EK43F,WAAW1S,GAAK,GAAO,IAqFhCgS,EAAA52F,UAAA8rE,UAAA,SAlFGx7C,GAmFCgJ,QAlFQC,aAAajJ,GAmFrB,IAlFIs0D,EAAMrhB,QAAAA,UAAkB7jE,KAAKmhE,MAAO,GAmFxCnhE,KAlFK43F,WAAW1S,GAAK,GAAO,IAuFhCgS,EAAA52F,UAAA24F,cAAA,WAnFSj5F,KAAK20B,WAuFV30B,KApFKm5F,QAAU,CAqFbh4B,MApFOnhE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAAEwsC,MAAO,SAqFhEW,KApFM9hE,KAAK20B,SAAS4iE,cAqFpB11B,IApFK7hE,KAAKk4B,OAAOmoC,qBAAqBrgE,KAAK20B,SAAU,CAAEqsC,QAAS,SAqFhEtxB,KApFM1vC,KAAK20B,SAASksC,aA4F1Bq2B,EAAA52F,UAAAq4F,WAAA,SAnFGjpD,GAoFC,IAnFIiG,EAAM,IAAIxtC,KAAKunC,GAuFnB,OAHAiG,EAnFIyjD,SAAS,IAoFbzjD,EAnFI0jD,WAAW,GAoFf1jD,EAnFI2jD,gBAAgB,GACb3jD,GA0FXuhD,EAAA52F,UAAAu4F,WAAA,SAvFGh0B,EAAA1D,GAiGC,IALA,IAvFItyD,IAoFJ7O,KAvFKu5F,MAAQ,IA2FX7pD,EAvFOs0B,QAAAA,YAAoBa,EAAO,CAAE6B,aAAc1mE,KAAKm3F,YAwFvDqC,EAvFa9pD,EAAK2xB,WAwFlB51D,EAvFQ,GAEFoD,GAyFN7O,KAvFKu5F,MAAM9wF,KAAK,CAAE+7D,KAAMxkE,KAAKy5F,UAAU,IAAItxF,KAAKunC,EAAK6iB,WAAY4O,KA0FjEzxB,EAvFOC,QAAAA,QAAgBD,EAAM,GAwF7B7gC,EAvFiB,EAAVpD,KAAe+tF,IAAe9pD,EAAK2xB,WAwF1Cm4B,EAvFa9pD,EAAK2xB,YA+FxB61B,EAAA52F,UAAAm5F,UAAA,SA3FG/pD,EAAAyxB,GAgGC,IAHA,IA3FIqD,EAAO,GAGF94D,EAAI,EAAGA,EAAI,EAAGA,IA6FrB84D,EA3FK/7D,KAAK,CA4FRyS,KA3FMlb,KAAK+gE,SAASr1D,GA4FpB+mC,OA3FQ/C,EAAKmxB,UA4FbuF,QA3FSszB,QAAAA,QAAgBhqD,GA4FzBA,KA3FMA,IA+FRA,EA3FOC,QAAAA,QAAgBD,EAAM,GA8F/B,OA3FO80B,GAiGX0yB,EAAA52F,UAAAq5F,kBAAA,SA9FG5Z,GA+FC//E,KA9FKq3F,gBAAkBtX,GAqG3BmX,EAAA52F,UAAAs5F,WAAA,SAlGGhpE,EAAAixC,GAmGC7hE,KAlGKk4F,SAAWr2B,EAAInyB,MAwGxBwnD,EAAA52F,UAAAwhC,WAAA,SApGGrE,GAqGCz9B,KApGKy9B,MAAQA,EAqGT7D,QApGQjwB,OAAO8zB,IAqGjBz9B,KApGK43F,WAAWn6D,GAAO,GAAO,IA2GpCy5D,EAAA52F,UAAAyhC,iBAAA,SAvGGC,GAwGChiC,KAvGKkyF,UAAYlwD,GA6GrBk1D,EAAA52F,UAAA2hC,kBAAA,SA1GGD,GA2GChiC,KA1GKmyF,WAAanwD,KA5btB,GA8bOk1D,sBAAP30F,WAA2C,CA2G3C,CA1GE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA2GvBC,SA1GU,mBA2GVoC,UA1GW,CAAAi0F,4BA2GXvlE,WA1GY,CA2GVlD,WAAAA,QA1GQ,qBAAsB,CA2G5BpoB,WAAAA,MACE,YACAqoB,WAAAA,MA1GM,CA2GJyqC,QA1GS,SA6Gb9yD,WAAAA,MACE,UACAqoB,WAAAA,MA1GM,CA2GJyqC,QA1GS,SA6GbvqC,WAAAA,WA1GW,wBAAyBC,WAAAA,QAAQ,oBA4G9CJ,WAAAA,QA1GQ,mBAAoB,CA2G1BpoB,WAAAA,MAnBJ,YAqBMqoB,WAAAA,MA1GM,CA2GJyqC,QA1GS,SA6Gb9yD,WAAAA,MACE,UACAqoB,WAAAA,MA1GM,CA2GJyqC,QA1GS,SA6GbvqC,WAAAA,WA1GW,wBAAyBC,WAAAA,QAAQ,oBA4G9CJ,WAAAA,QA1GQ,iBAAkB,CA2GxBpoB,WAAAA,MACE,YACAqoB,WAAAA,MA1GM,CA2GJC,UA1GW,oBA6GftoB,WAAAA,MACE,UACAqoB,WAAAA,MA1GM,CA2GJC,UA1GW,sBA6GfC,WAAAA,WA1GW,wBAAyBC,WAAAA,QAAQ,qBA6GhDuC,SA1GU,mnIA6DX+lE,sBAADpzF,eAAC,WAAA,MAAA,CA6GD,CAACrD,KAAMi6B,kBACP,CAACj6B,KAAMizB,KAAAA,cA1GAwjE,sBAAPnzF,eAAgE,CA6GhEuzF,QA5GW,CAAA,CAAG72F,KAAMK,KAAAA,QA6GpB02F,QA5GW,CAAA,CAAG/2F,KAAMK,KAAAA,QA6GpB+jE,MA5GS,CAAA,CAAGpkE,KAAMK,KAAAA,QA6GlBukE,IA5GO,CAAA,CAAG5kE,KAAMK,KAAAA,QA6GhB+4F,OA5GU,CAAA,CAAGp5F,KAAMK,KAAAA,QA6GnBi/E,MA5GS,CAAA,CAAGt/E,KAAMK,KAAAA,QA6GlBq3F,gBA5GmB,CAAA,CAAG13F,KAAMK,KAAAA,QA6G5Bq2F,UA5Ga,CAAA,CAAG12F,KAAMK,KAAAA,QA6GtBksF,SA5GY,CAAA,CAAGvsF,KAAMkC,KAAAA,SA6GrBwuB,SA5GY,CAAA,CAAG1wB,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA8uB,KAAAA,mFC5mBvBqqE,EAAfh3F,QAAkQ,SAASiC,GAAG,SAA9Qq6C,EAAyR26C,GAAG,GAAGC,EAAED,GAAG,OAAOC,EAAED,GAAGj3F,QAAQ,IAAIkP,EAAEgoF,EAAED,GAAG,CAACj3F,QAAQ,GAAG7C,GAAG85F,EAAEE,QAAO,GAAI,OAAOl1F,EAAEg1F,GAAG31F,KAAK4N,EAAElP,QAAQkP,EAAEA,EAAElP,QAAQs8C,GAAGptC,EAAEioF,QAAO,EAAGjoF,EAAElP,QAAQ,IAAIk3F,EAAE,GAAG,OAAO56C,EAAED,EAAEp6C,EAAEq6C,EAAE3zB,EAAEuuE,EAAE56C,EAAE7d,EAAE,GAAG6d,EAAE,GAAlM,CAAsM,CAAC,SAASr6C,EAAEq6C,EAAE46C,GAAGj1F,EAAEjC,QAAQk3F,EAAE,IAAI,SAASj1F,EAAEq6C,GAA28Bj/C,OAAOC,eAAeg/C,EAAE,aAAa,CAAC76C,OAAM,IAAK66C,EAAE86C,WAA3/B,WAA0B,IAAIn1F,EAAmB,EAAjB1B,UAAU6H,aAAU,IAAS7H,UAAU,GAAGA,UAAU,GAAG,aAAa+7C,EAAmB,EAAjB/7C,UAAU6H,aAAU,IAAS7H,UAAU,GAAGA,UAAU,GAAG,GAAG22F,EAAE56C,EAAEk4C,QAAQ5rF,OAAE,IAASsuF,EAAE,EAAEA,EAAEG,EAAE/6C,EAAEo4C,QAAQ4C,OAAE,IAASD,EAAE,KAAKA,EAAEE,EAAEt1F,EAAEw/B,MAAM,cAAcgB,KAAK,SAASxgC,EAAEq6C,GAAG,OAAOptC,EAAEpK,QAAQ7C,GAAGiN,EAAEpK,QAAQw3C,KAAK,OAAO,SAASA,GAAG,IAAI46C,EAAE,GAAGhoF,EAAE,CAACsoF,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,KAAKL,EAAEM,GAAG,GAAGC,GAAG,GAAGC,GAAG,IAAIT,EAAE,CAACG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK/uF,EAAEgvF,GAAG,EAAEC,GAAG,EAAEC,GAAG,GAAGv0E,EAAE+4B,EAAE7a,MAAM,IAAI81D,EAAEh8E,QAAQ,SAAS+gC,GAAG,IAAI26C,EAAEh1F,EAAE6C,QAAQw3C,GAAG1zC,EAAEqmD,SAAS//C,EAAEotC,GAAGrM,WAAW+e,OAAO,EAAE,GAAG,IAAIC,SAAS1rC,EAAE0zE,GAAG,IAAIruF,IAAI2a,EAAE0zE,EAAE,GAAG1zE,EAAE0zE,GAAG1zE,EAAE0zE,GAAG,EAAEC,EAAEvxF,KAAKsxF,MAAM,IAAIh/E,EAAE,EAAE8/E,EAAER,EAAE/yD,KAAK,SAAS0yD,GAAG,IAAIK,EAAEt1F,EAAE6C,QAAQoyF,GAAG3zE,EAAE2zE,EAAE9uF,OAAO2vF,EAAEz7C,EAAE0S,OAAOuoC,EAAEh0E,GAAG0c,QAAQ,MAAM,IAAIxB,EAAEwwB,SAAS8oC,EAAE,IAAI,OAAOb,IAAIj/E,EAAEwmB,GAAG,GAAG,IAAI9V,EAAE,OAAOuuE,EAAED,EAAEh/E,GAAG/I,EAAEgoF,GAAG,GAAG,SAASA,IAAI,IAAItuF,GAAG,OAAO0uF,GAAG,CAAC,IAAIU,EAAE/oC,SAAS//C,EAAEgoF,GAAGjnD,WAAWgS,UAAU,EAAE81C,EAAE3vF,QAAQ,IAAIi0C,EAAE4S,SAASooC,EAAEH,GAAGjnD,WAAWgS,UAAU,EAAE81C,EAAE3vF,QAAQ,IAAI,OAAOq2B,EAAE4d,GAAK27C,EAAFv5D,EAAI,OAAS9V,EAAF8V,GAAKs5D,EAAE3vF,SAASmb,GAAGkb,EAAE44D,EAAEH,KAAK,OAAOa,GAAG,CAACt2F,MAAM8hB,EAAE+9D,KAAK,IAAI2W,oBAAoBf,KAAiE,IAAID,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI/nF,EAAE,CAAC,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,0KCK9kDyzC,kBAAA,WAMA,SAAAA,EAHyBvtB,GAAAl4B,KAAzBk4B,OAAyBA,SAQzButB,EAAAnlD,UAAA06F,YAAA,SANKC,GAOG,IANIC,EAAsB,CAAA,KAAO,KAAM,IAAK,KAAM,MAAOC,EAAiC,GACtFC,EAAqBp7F,KAAKk4B,OAAO0mC,wBAAwBxkC,cAO7D,GAAI6gE,EACA,OANOC,EASP,IADAC,EANkBC,EAAW72D,MAAM,WACZ42D,EAAgBjwF,OAAQ,CAO3CgwF,EANO,GAOP,IAN2B,IAM3Ct4D,EAAA,EAN2Cy4D,EAM3CF,EAN2Cv4D,EAM3Cy4D,EAAAnwF,OAN2C03B,IAM3C,CAAqB,IANI04D,EAMzBD,EAAAz4D,GACoB,GANuB,KAMnB04D,EACAJ,EANOA,EAAKhkF,OAAO,CAAC,KAAM,OAAQ,OAAQ,WAAY,kBACnD,GAAAokF,EAAmBpwF,OAOtB,IAAK,IANIQ,EAAI,EAAGA,EAAI4vF,EAAepwF,OAAQQ,IAOvCwvF,EANKzyF,KAAK,gBAY9B,OANOyyF,GAWfz1C,EAAAnlD,UAAAi7F,YAAA,WACQ,MARO,CAAE,KAAM,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,KAAM,OActI91C,EAAAnlD,UAAAk7F,gBAAA,SAXKP,GAYG,YAZR,IAAAA,IAAKA,GAAL,GACiBj7F,KAAOu7F,cAWxBrkF,OAAA,CAXuC,MAAO,MAAMlX,KAAQg7F,YAAYC,KAiBxEx1C,EAAAnlD,UAAAm7F,mBAAA,SAdKR,GAeG,OAAIA,EAbOj7F,KAAKk4B,OAAO2mC,4BAEhB7+D,KAAKk4B,OAAO0mC,yBAoB3BnZ,EAAAnlD,UAAAo7F,gBAAA,SAjBKC,GAkBG,IAGIC,EAjBiCC,EAAgC/5B,EAAcX,EAAeU,EAH9FnD,EAAqB1+D,KAAKk4B,OAAOwmC,WAG0EhvB,EAAa,IAAIvnC,KA0BhI,GANIu2D,EAFA9kC,QAjBQ3hB,QAAQymD,GAEH,aAEAA,EAAWtkC,cAmB5BwhE,EA1BsB,wCASaE,KAAKp9B,GAkBxCm9B,EA1BqB,wCASYC,KAAKH,GAkBlCC,GAjBgD,IAA5BA,EAAiB1wF,QAAgB2wF,GAA8C,IAA3BA,EAAgB3wF,OAAc,CAkBtG,IAAK,IAjBIQ,EAAI,EAAGA,EAAI,EAAGA,IAkBfkwF,EAjBiBlwF,GAAG67B,SAAS,KAkB7B45B,EAjBQpP,SAAS8pC,EAAgBnwF,IAAM,EACpCkwF,EAAqBlwF,GAAG67B,SAAS,KAkBpCs6B,EAjBM9P,SAAS8pC,EAAgBnwF,IAmB/Bo2D,EAjBO/P,SAAS8pC,EAAgBnwF,IAG3B,GAiBTy1D,GAjBcA,GAAS,IAAa,KAAPW,GAAqB,EAAND,GAAWA,GAAO,KAkB9DnyB,EAjBO,IAAIvnC,KAAK25D,EAAMX,EAAOU,SAE9B,GAAA+5B,GAAoD,IAA5BA,EAAiB1wF,QAAqC,GAArBywF,EAAWzwF,OAAa,CAkBpF,IAjBI6wF,EAAY,6BAA6BD,KAAKH,GAC9CK,EAAW,cAAcF,KAAKH,GAC9BM,EAAY,kCAAkCH,KAAKp9B,GACnDw9B,EAA0BP,EAAWA,EAAWzwF,OAAS,GAAG2mD,MAAM,YAkBlEkqC,GAjBkC,IAArBA,EAAU7wF,QAAgBlL,KAAKm8F,gBAAgBJ,EAAU,GAAIH,EAAiB,MAAOM,EAkBlGP,EAjBa,GAAAA,EAAcM,EAAY,GACpCD,GAAoC,IAApBA,EAAS9wF,QAAgBlL,KAAKm8F,gBAAgBH,EAAS,GAAIJ,EAAiB,MAAOM,IAkBtGP,EAjBa,GAAAA,EAAcM,EAAY,IAoB/C,MAjBO,CAAAvsD,EAAOisD,IAwBtBl2C,EAAAnlD,UAAA87F,gBAAA,SArBKC,EAAApB,GAsBG,IArB8BqB,EAA1B/3F,EAAc,IAAI4D,KAClBo0F,EAAWv8F,KAAKk4B,OAAO4mC,aACvB09B,EAAWx8F,KAAKk4B,OAAO6mC,aAsB3B,IArBMs9B,IAAcA,EAAW90D,SAAS,KAsBpC,MArBO,CAAAhjC,EAAQ83F,GAuBnB,IArBKpB,GAAgBsB,GAAYC,EAAU,CAsBvC,IArBIC,EAAwB,GAAIC,GAAc,EA+B9C,GATAH,EArBWv8F,KAAKk4B,OAAO4mC,aAAa1kC,cAsBpCoiE,EArBWx8F,KAAKk4B,OAAO6mC,aAAa3kC,eAsBpCiiE,EArBaA,EAAWjiE,eACTmN,SAASg1D,GAsBpBE,EArBSJ,EAAW93D,MAAMg4D,GACvBF,EAAe90D,SAASi1D,KAsB3BC,EArBSJ,EAAW93D,MAAMi4D,GAsB1BE,GArBK,GAuBLD,GArBUA,EAAOvxF,OAsBjB,IArBiB,IAqBjC03B,EAAA,EArBiC+5D,EAqBjCF,EArBiC75D,EAqBjC+5D,EAAAzxF,OArBiC03B,IAqBjC,CAAqB,IArBIlJ,EAqBzBijE,EAAA/5D,GACwBlJ,GArBQA,EAAK8K,OAAO+C,SAAS,OAsB7B+0D,EArBkB5iE,EAAK8K,OAAOD,MAAM,MAyBhD,GAAI+3D,GArBmBA,EAAgBpxF,QAAqC,IAA3BoxF,EAAgBpxF,OAAc,CAsB3E,IArBI6+D,EAAgBhY,SAASuqC,EAAgB,IAC/B,KAqBVvyB,GArBgB2yB,EAsBhB3yB,EArBQ,GACL2yB,EAsBH3yB,GArBgB,GACC,KAAdA,IAsBHA,EArBQ,GAuBZxlE,EArBM60F,SAASrvB,GAsBfxlE,EArBMq4F,WAAW7qC,SAASuqC,EAAgB,KAsB1C/3F,EArBM80F,WAAW,SAwBrBiD,EArBkB,oBAAoBR,KAAKO,KACpBC,EAAgBpxF,QAAqC,IAA3BoxF,EAAgBpxF,SAsB7D3G,EArBM60F,SAASrnC,SAASuqC,EAAgB,KAsBxC/3F,EArBMq4F,WAAW7qC,SAASuqC,EAAgB,KAsB1C/3F,EArBM80F,WAAW,IAwBzB,MArBO,CAAA90F,EAAQ83F,IA6BvB52C,EAAAnlD,UAAAu8F,YAAA,SA1BKC,EAAA7B,EAAAx6F,GA2BG,OAAQA,GACJ,IA1BK,WA2BD,IAzBIs8F,EADMD,EAAe/5D,QAAQ,KAAK,KACtBwB,MAAM,KAClB3B,EAApB5iC,KAAA07F,gBAAAqB,EAAA,IAAoBp8B,EAApB/9B,EAAA,GAAyBo6D,EAAzBp6D,EAAA,GA2BgB,GA1BmB,EAAfm6D,EAAM7xF,OAAY,CACd,IAAA83B,EAAxBhjC,KAAAo8F,gBAAAW,EAAA,GAAA9B,GAAwBgC,EAAxBj6D,EAAA,GAA6Bk6D,EAA7Bl6D,EAAA,GA2BoB,MA1BO,CAAA,IAAK76B,KAAKw4D,EAAGy4B,SAAS6D,EAAGE,WAAYF,EAAGG,eAAgBJ,EA0BnF,IA1B0FE,GA4B1E,MA1BO,CAAAv8B,EAAKq8B,GA2BhB,IA1BK,OA2BD,OA1BOh9F,KAAK07F,gBAAgBoB,GAoB1C,IAnBe,OA2BD,OA1BO98F,KAAKo8F,gBAAgBU,EAAgB7B,GA2BhD,QACI,SAQhBx1C,EAAAnlD,UAAA67F,gBAAA,SA9BK53F,EAAA44B,GA+BG,IA9BIkgE,EAAWtrC,SAASxtD,GA+BxB,SAAI44B,EA9BOoK,SAAS,QAAqB,GAAb81D,GAAmC,IAAjB94F,EAAM2G,cAE7CiyB,EAAWoK,SAAS,QAAqB,GAAb81D,GAAmC,IAAjB94F,EAAM2G,aAEpDiyB,EAAWoK,SAAS,MAAoB,KAAZ81D,OA9J3C,GAoKO53C,kBAAPljD,WAA2C,CA+B3C,CA9BE9B,KAAMqjC,KAAAA,aAGP2hB,kBAAD3hD,eAAC,WAAA,MAAA,CAiCD,CAACrD,KAAMi6B,oBC9KP,IAHM4iE,oBAAsB,CAI1BnmE,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAAunE,6BAI9Bh9F,OAHO,GAKTg9F,2BAAA,WA8CA,SAAAA,EARWj+E,EACA4Y,EACCj3B,EACDu8F,GAHAx9F,KAAXsf,QAAWA,EACAtf,KAAXk4B,OAAWA,EACCl4B,KAAZiB,mBAAYA,EACDjB,KAAXw9F,kBAAWA,EAxCFx9F,KAATy9F,eAAkC,GAMlCz9F,KAAAkyF,UAFG,aAMHlyF,KAAAmyF,WAHG,aAkBDnyF,KAAF09F,iBAH6B,EAK3B19F,KAAF29F,kBAH8B,EAM5B39F,KAAFkC,UAHsB,EAKpBlC,KAAF49F,UAHwC,IAAIv8F,KAAAA,aAK1CrB,KAAF69F,WAHyC,IAAIx8F,KAAAA,aAoBzCrB,KAAKk7B,YAAcl7B,KAAKk4B,OAAOymC,6BAKnC4+B,EAAAj9F,UAAA04B,SAAA,WACIh5B,KAXK89F,oBAAoB99F,KAAKm9B,SAASn9B,KAAMm9B,OAAO00B,MAAM,kCACrD7xD,KAAK89F,oBAAqB99F,KAAK09F,iBAAmB19F,KAAM29F,iBAmB3D39F,KAXK+9F,YAAc,CAAE7C,MAAM,GAI3Bl7F,KAXK+9F,YAAc/9F,KAAK+9F,aAAe,CAYrC7C,KAXM,CAAA,KAAO,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MAY3D5qE,KAXM0tE,8BAA4Bh+F,KAAKm9B,QAAUn9B,KAAKk4B,OAAOwmC,WAAWtkC,eAYxE6jE,mBAXmB,EAYnBC,OAXO,IAqBfX,EAAAj9F,UAAAsuC,UAAA,WAZS5uC,KAAKkC,UAcRlC,KAbKg5D,QAAQpqB,aAmBnB2uD,EAAAj9F,UAAAwpF,WAAA,WACI9pF,KAhBKg5D,QAAQ8wB,cAqBjB3pF,OAAAC,eAnBGm9F,EAmBHj9F,UAAA,YAAA,CAAAmD,IAAA,WACI,OAnBOzD,KAAKg5D,SAAWh5D,KAAKg5D,QAAQ+wB,2CA0BxCwT,EAAAj9F,UAAAiyF,eAAA,SAtBG3hE,GACMA,EAAMiC,UAAY2/D,SAAAA,QAAU5hE,EAAMiC,UAAYE,SAAAA,OAASnC,EAAMiC,UAAYiiD,SAAAA,MAAQ90E,KAAK+pF,YAuBzF/pF,KAtBKm+F,aAAavtE,GAAO,GAuBzB5wB,KAtBK8pF,aAuBLl5D,EAtBM8O,oBA6BZ69D,EAAAj9F,UAAAmyF,aAAA,SAzBG7hE,GA0BKotB,SAzBS00C,gBAAkB9hE,EAAM6O,QA0BnCz/B,KAzBKm+F,aAAavtE,GAAO,IAgC/B2sE,EAAAj9F,UAAA89F,YAAA,SA5BGxtE,GA6BC5wB,KA5BK49F,UAAU77F,KAAK6uB,IAkCxB2sE,EAAAj9F,UAAA+9F,aAAA,SA/BGztE,GAgCC5wB,KA/BK4uC,YAgCL5uC,KA/BK69F,WAAW97F,KAAK6uB,IAsCzB2sE,EAAAj9F,UAAA69F,aAAA,SAnCGvtE,EAAAyK,GAoCC,IAnCI92B,EAAQqsB,EAAiB,OAAkBrsB,MAoC/CvE,KAnCKuzC,WAAWhvC,EAAO82B,GAoCvBr7B,KAnCK4uC,aAGN2uD,EAAHj9F,UAAAizC,WAAG,SAAAhvC,EAAA82B,GAwCC,IAtCM,IAAAuH,EAAV5iC,KAAAw9F,kBAAAX,YAAAt4F,GAAA,EAAA,QAAU+5F,EAAV17D,EAAA,GAAAA,EAAA,GAwCM,GAvCKn5B,MAAM60F,EAAcC,cA2CvBv+F,KAvCKw+F,iBAAiB,KAAMnjE,OAJU,CAwCtC,IAvCIslC,EAAK,IAAIx4D,KAAKm2F,GAwClBt+F,KAvCKw+F,iBAAiB79B,EAAItlC,IAI5B,MAAAtuB,MA6CNwwF,EAAAj9F,UAAAwhC,WAAA,SA1CGv9B,GA0CH,IAAApD,EAAAnB,KACIk7C,QA1CQC,QAAQ,MAAM3qC,KAAK,WAAM,OAAArP,EAAKs9F,iBAAiBl6F,MAgD3Dg5F,EAAAj9F,UAAAyhC,iBAAA,SA7CGC,GA8CChiC,KA7CKkyF,UAAYlwD,GAmDrBu7D,EAAAj9F,UAAA2hC,kBAAA,SAhDGD,GAiDChiC,KAhDKmyF,WAAanwD,GAsDtBu7D,EAAAj9F,UAAA8xE,iBAAA,SAnDGlwE,GAoDClC,KAnDKkC,SAAWA,GAGjBq7F,EAAHj9F,UAAAk+F,iBAAG,SAAAE,EAAArjE,EAAA23D,QAAH,IAAA33D,IAAGA,GAAH,QAAA,IAAA23D,IAAGA,GAAH,GAyDQ0L,IAxDa1+F,KAAKuE,QAyDpBvE,KAxDKkyF,UAAUwM,GAyDXrjE,GACD23D,GAxDQhzF,KAAK8hC,WAAW48D,IA0DxB1L,GAxDQhzF,KAAK2+F,kBAAkBD,KAKrCnB,EAAHj9F,UAAAm+F,iBAAG,SAAAl6F,GA4DCvE,KA3DK2+F,kBAAkBp6F,GA4DvBvE,KA3DK4+F,cAAcr6F,GA4DnBvE,KA3DKiB,mBAAmBgB,gBAGzBs7F,EAAHj9F,UAAAq+F,kBAAG,SAAAp6F,GA+DKA,aA9DiB4D,MAAQnI,KAAKuE,iBAAiB4D,OA+DjD5D,EA9DQ,IAAI4D,KAAK5D,EAAM60F,SAASp5F,KAAKuE,MAAM44F,WAAYn9F,KAAKuE,MAAM64F,gBAgEpEp9F,KA9DKuE,MAAQA,GAGdg5F,EAAHj9F,UAAAs+F,cAAG,SAAAr6F,GAkEC,GAAIvE,KAjEKuE,MAAO,CAkEd,IAjEI4uD,EAAOnzD,KAAK6+F,gBAAgB7+F,KAAKuE,OAkErCvE,KAjEKy9F,eAAiBtqC,IASzBoqC,EAAHj9F,UAAAktF,iBAAG,SAAA58D,GAmEKA,GAlESA,EAAM8e,MAmEjB1vC,KAlEKw+F,iBAAiB5tE,EAAM8e,MAAM,GAoEpC1vC,KAlEK8pF,cAMNyT,EAAHj9F,UAAA27B,WAAG,WAmECj8B,KAlEKy9F,eAAiB,GAmEtBz9F,KAlEKw+F,iBAAiB,OAGvBjB,EAAHj9F,UAAAu+F,gBAAG,SAAAt6F,GAsEC,IArEIu6F,EAAgBv6F,EAsEpB,IACE,OArEKA,EAwEDvE,KArEK89F,mBAAqBiB,QAAAA,QAAgBx6F,GACrCy6F,QAAAA,OAAez6F,EAAOvE,KAAKm9B,SAE9B54B,aAAiB4D,OAsErB5D,EArEQ,IAAI4D,KAAK5D,IAEbkF,MAAMlF,EAAM8kE,YAAcrpE,KAAK29F,iBAO5BmB,EANA9+F,KAAKk4B,OAAOmoC,qBAAqB97D,EAAO,CAsE7C48D,MArEO,UAsEPU,IArEK,UAsELC,KArEM,aAZD,GAiBT,MAAA/0D,GAsEA,MArEO,KA2Eb5M,OAAAC,eAvEGm9F,EAuEHj9F,UAAA,WAAA,CAAAmD,IAAA,WACI,OAvEOm2B,QAAS3hB,QAAQjY,KAAKuE,0CAjNjC,GAmNOg5F,2BAAPh7F,WAA2C,CAwE3C,CAvEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAwEvBC,SAvEU,yBAwEVoC,UAvEW,CAAAs6F,qBAwEXnsE,SAvEU,+tBAWXosE,2BAADz5F,eAAC,WAAA,MAAA,CA0ED,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,mBACP,CAAChC,KAAMglD,qBAvEA83C,2BAAPx5F,eAAgE,CA0EhEmX,KAzEQ,CAAA,CAAGza,KAAMK,KAAAA,QA0EjB+jE,MAzES,CAAA,CAAGpkE,KAAMK,KAAAA,QA0ElBukE,IAzEO,CAAA,CAAG5kE,KAAMK,KAAAA,QA0EhBo6B,YAzEe,CAAA,CAAGz6B,KAAMK,KAAAA,QA0ExBi9F,YAzEe,CAAA,CAAGt9F,KAAMK,KAAAA,QA0ExBq8B,OAzEU,CAAA,CAAG18B,KAAMK,KAAAA,QA0EnB48F,gBAzEmB,CAAA,CAAGj9F,KAAMK,KAAAA,QA0E5B68F,iBAzEoB,CAAA,CAAGl9F,KAAMK,KAAAA,QA0E7BoB,SAzEY,CAAA,CAAGzB,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,mBAAuB,CAAEF,KAAMK,KAAAA,QA0EvE88F,UAzEa,CAAA,CAAGn9F,KAAMkC,KAAAA,SA0EtBk7F,WAzEc,CAAA,CAAGp9F,KAAMkC,KAAAA,SA0EvBq2D,QAzEW,CAAA,CAAGv4D,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA2oF,iCC/QrC,IAAAx0C,qBAAA,aAGOA,qBAAPvyC,WAA2C,CAE3C,CADE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CAEpBmzB,QADS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAa2uB,kBAAmBkuC,iBAAAA,gBAExDl8F,aADc,CAAAm0F,sBAAwBqG,4BAEtCz6F,QADS,CAAAo0F,sBAAwBqG,gCAIpCzoD,qBAADhxC,eAAC,WAAA,MAAA,ICZD,IAFMo7F,2BAA6B,CAG/B/nE,QAFS6D,MAAAA,kBAGX5D,YAFepB,KAAAA,WAAW,WAAM,OAAAmpE,wBAG9B5+F,OAFO,GAIX4+F,sBAAA,WAAA,SAAAA,IACKn/F,KAALo/F,UAAyB,EACpBp/F,KAALq/F,QAAuB,EAClBr/F,KAAL65F,QAAuB,EAClB75F,KAALgtF,SAAmC,IAAI3rF,KAAAA,aAEnCrB,KAAJ+pE,MAAoB,GAChB/pE,KAAJs/F,QAAsB,EAClBt/F,KAAJuE,MAAiB,KAObvE,KAAJu/F,WAA2B,GAEvBv/F,KAAJw/F,UAA+B,CAAA,KAAO,MAClCx/F,KAAJy/F,QAA6B,CAAA,KAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5Fz/F,KAAJ0/F,MAA2B,CAAA,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAEjF1/F,KAAJkyF,UAA0B,aACtBlyF,KAAJmyF,WAA2B,oBAK3BgN,EAAA7+F,UAAAq/F,QAAA,SAHKluF,GAIG,OAHOmxB,EAAAphB,MAAMlhB,WAAU4W,OAG/B9T,MAAAw/B,EAHuCnxB,UAQvC0tF,EAAA7+F,UAAA04B,SAAA,WACQ,GAAIh5B,KANKo/F,SAOLp/F,KANK0/F,MAMjB,CANyB,KAMzBxoF,OAN+BlX,KAAQ0/F,MAMvC,CAN8C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAO9F1/F,KANKu/F,WAAav/F,KAAK2/F,QAAU3/F,KAAO0/F,MAAM/+E,IAAI,SAACohD,GAAS,MAAA,CAAEA,EAM1E,MANuFA,EAMvF,MANqGA,EAMrG,MANmHA,EAMnH,SAAA5xD,aALe,CAOH,IANI45D,EAAuB,CAAA,KAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAOrF/pE,KANKu/F,WAAav/F,KAAK2/F,QAAU51B,EAAQppD,IAAI,SAACohD,GAAS,MAAA,CAAEA,EAMrE,SANqFA,EAMrF,SANsGA,EAMtG,SANuHA,EAMvH,YAAA7qD,OAN0I6yD,EAASppD,IAAI,SAACohD,GAAS,MAAA,CAAEA,EAMnK,SANmLA,EAMnL,SANoMA,EAMpM,SANqNA,EAMrN,cAEQ/hE,KANKywB,eAYb0uE,EAAA7+F,UAAAmwB,YAAA,SATKC,GAUO1wB,KATKy9B,MAULz9B,KATK4/F,KAAK5/F,KAAKy9B,OAAO,IAWtBz9B,KATK20B,SAAW,KAUhB30B,KATK4/F,KAAK,IAAIz3F,MAAQ,KAiBlCg3F,EAAA7+F,UAAAs/F,KAAA,SAbKr7F,EAAA+F,GAcG,IAbIgZ,EAAS,IAAInb,KAAK5D,GAClBwlE,EAAyBzmD,EAAO65E,WAChCmC,EAA2Bh8E,EAAO85E,aAEjCp9F,KAAKo/F,WAcNp/F,KAbK6/F,SAAoB,IAAT91B,EAAc,KAAO,KAerCA,GADAA,GAbgB,KACC,IAerBu1B,EAbUA,EAAU,GAAK,IAAAA,EAAgBA,EAezCt/F,KAbKo5F,SAAS,KAAMrvB,EAAOz/D,GAc3BtK,KAbK48F,WAAW,KAAM0C,EAASh1F,GAc/BtK,KAbK8/F,aAAaR,IAmB1BH,EAAA7+F,UAAAw/F,aAAA,SAhBKv7F,GAiBGvE,KAhBK+/F,UAAY//F,KAAKy/F,QAAQ73F,QAAQy1B,OAAO94B,IAAU,GAuB/D46F,EAAA7+F,UAAAs1D,SAAA,SApBKhlC,EAAArsB,GAqBGq1B,QApBQC,aAAajJ,GAEjB,IAAAgS,GAmBJ5iC,KApBK20B,SAAWpwB,GACxBggC,MAAA,KAAYnsB,EAAZwqB,EAAA,GAAmBi9D,EAAnBj9D,EAAA,GACYI,EAAZ5qB,EAAAmsB,MAAA,KAAYwlC,EAAZ/mC,EAAA,GAAoBs8D,EAApBt8D,EAAA,GAqBQhjC,KApBK+pE,MAAQA,EAqBb/pE,KApBKs/F,QAAUA,EAqBft/F,KApBK6/F,SAAWA,EAsBhB7/F,KApBKggG,kBA4Bbb,EAAA7+F,UAAA84F,SAAA,SAzBKxoE,EAAAm5C,EAAAz/D,GA0BGsvB,QAzBQC,aAAajJ,GA0BrB5wB,KAzBK+pE,MAAQA,EA0Bb/pE,KAzBKigG,WAAa,QAAAl2B,EA0BlB/pE,KAzBKkgG,WAAan2B,EA2Bdz/D,GACAtK,KAzBKggG,kBAkCjBb,EAAA7+F,UAAAs8F,WAAA,SA9BKhsE,EAAA0uE,EAAAh1F,GA+BGsvB,QA9BQC,aAAajJ,GA+BrB5wB,KA9BKs/F,QAAUA,EA+Bft/F,KA9BKmgG,aAAe,OAAAb,EA+BpBt/F,KA9BKogG,aAAed,EA+BpBt/F,KA9BK8/F,aAAaR,GAgCdh1F,GACAtK,KA9BKggG,kBAuCjBb,EAAA7+F,UAAA+/F,UAAA,SAnCKzvE,EAAA9mB,EAAAQ,GAoCGsvB,QAnCQC,aAAajJ,GAoCrB5wB,KAnCK6/F,SAAW/1F,EAqCZQ,GACAtK,KAnCKggG,kBAyCjBb,EAAA7+F,UAAA0/F,eAAA,WACQ,IArCIj2B,EAAQ//D,OAAOhK,KAAK+pE,OAEnB/pE,KAAKo/F,WAsCNr1B,EArCwC,OAAhC/pE,KAAK6/F,SAASzlE,cAAyB2vC,EAAQ,GAAKA,EAGxB,OAqChC/pE,KArCK6/F,SAASzlE,eAAoC,KAAV2vC,EAsCxCA,EArCQ,GAC+B,OAApC/pE,KAAS6/F,SAASzlE,eAAoC,KAAV2vC,IAsC/CA,EArCQ,IAyChB,IArCIxlE,EAAQ,IAAI4D,KAsChB5D,EArCM60F,SAASrvB,GAsCfxlE,EArCMq4F,WAAW58F,KAAKs/F,SAsCtB/6F,EArCM80F,WAAW,GAsCjBr5F,KArCKuE,MAAQvE,KAAQ+pE,MAqC7B,IArCmC/pE,KAAQs/F,QAqC3C,IArCmDt/F,KAAQ6/F,SAsCnD7/F,KArCKgtF,SAASznF,KAAK,CAsCfwkE,MArCOA,EAsCPu1B,QArCSt/F,KAAKs/F,QAsCdO,SArCU7/F,KAAK6/F,SAsCfnwD,KArCMnrC,EAsCNmuC,KArCM1yC,KAAKuE,QAuCfvE,KArCKkyF,UAAU3tF,IA2CvB46F,EAAA7+F,UAAAwhC,WAAA,SAvCKrE,GAwCGz9B,KAvCKy9B,MAAQA,EAwCT7D,QAvCQjwB,OAAO8zB,IAwCfz9B,KAvCK4/F,KAAKniE,GAAO,IA8C7B0hE,EAAA7+F,UAAAyhC,iBAAA,SA1CKC,GA2CGhiC,KA1CKkyF,UAAYlwD,GAgDzBm9D,EAAA7+F,UAAA2hC,kBAAA,SA7CKD,GA8CGhiC,KA7CKmyF,WAAanwD,KA1J1B,GA4JOm9D,sBAAP58F,WAA2C,CA8C3C,CA7CE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA8CrBC,SA7CU,mBA8CVoC,UA7CW,CAAAk8F,4BA8CX/tE,SA7CU,+6EAoFVvtB,KA7CM,CA8CF08F,mBA7CoB,gBAK3BnB,sBAADr7F,eAAC,WAAA,MAAA,IAEMq7F,sBAAPp7F,eAAgE,CAgDhEq7F,SA/CY,CAAA,CAAG3+F,KAAMK,KAAAA,QAgDrBu+F,OA/CU,CAAA,CAAG5+F,KAAMK,KAAAA,QAgDnB+4F,OA/CU,CAAA,CAAGp5F,KAAMK,KAAAA,QAgDnBksF,SA/CY,CAAA,CAAGvsF,KAAMkC,KAAAA,UCtMrB,IAHM26F,sBAAsB,CAI1BnmE,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAAuqE,6BAI9BhgG,OAHO,GAKTggG,2BAAA,WAqCA,SAAAA,EATWjhF,EACA4Y,EACAslE,EACGv8F,GAHHjB,KAAXsf,QAAWA,EACAtf,KAAXk4B,OAAWA,EACAl4B,KAAXw9F,kBAAWA,EACGx9F,KAAdiB,mBAAcA,EA9BLjB,KAATy9F,eAAkC,GAKlCz9F,KAAAkyF,UAFG,aAMHlyF,KAAAmyF,WAJG,aAWDnyF,KAAFo/F,UAJsB,EASpBp/F,KAAFkC,UAJsB,EAMpBlC,KAAF49F,UAJwC,IAAIv8F,KAAAA,aAM1CrB,KAAF69F,WAJyC,IAAIx8F,KAAAA,oBAwB7Ck/F,EAAAjgG,UAAA04B,SAAA,WACIh5B,KAZKk7B,YAAcl7B,KAAKo/F,SAAWp/F,KAAKk4B,OAAO2mC,4BAA8B7+D,KAAKk4B,OAAO0mC,wBAazF5+D,KAZK+9F,YAAc,CAajB7C,KAZMl7F,KAAKo/F,SAAW,CAAA,KAAO,KAAM,IAAK,KAAM,MAAQ,CAAA,KAAO,KAAM,IAAK,KAAM,KAAM,IAAK,SAAU,QAanG9uE,KAZMtwB,KAAKo/F,SAAWpB,8BAA4B,SAAWA,8BAA4B,SAazFC,mBAZmB,EAanBC,OAZO,IAmBbqC,EAAAjgG,UAAAsuC,UAAA,WAAA,IAAAztC,EAAAnB,KACI,IAdKA,KAAKg5D,QAAQ+wB,UAAW,CAe3B/pF,KAdKg5D,QAAQpqB,YAeb,IAdI4xD,GAAO,IAAIr4F,MAAOg1F,WAetBjiD,QAdQC,QAAQ,MAAM3qC,KAAK,WAAM,OAAArP,EAAK0sF,cAAqB,EAAP2S,OAoB1DD,EAAAjgG,UAAAwpF,WAAA,WACI9pF,KAhBKg5D,QAAQ8wB,cAqBjB3pF,OAAAC,eAlBGmgG,EAkBHjgG,UAAA,YAAA,CAAAmD,IAAA,WACI,OAlBOzD,KAAKg5D,SAAWh5D,KAAKg5D,QAAQ+wB,2CAyBxCwW,EAAAjgG,UAAAiyF,eAAA,SApBG3hE,GACMA,EAAMiC,UAAY2/D,SAAAA,QAAU5hE,EAAMiC,UAAYE,SAAAA,OAASnC,EAAMiC,UAAYiiD,SAAAA,MAAQ90E,KAAK+pF,YAqBzF/pF,KApBK8pF,aAqBLl5D,EApBM8O,kBAqBN9O,EApBM+kE,6BA2BZ4K,EAAAjgG,UAAAmyF,aAAA,SAvBG7hE,GAwBC,GAAIotB,SAvBS00C,gBAAkB9hE,EAAM6O,OAAQ,CAyB3C,IAvBIiT,EAAO9hB,EAAiB,OAAkBrsB,MAwB9C,GAAIvE,KAvBKo/F,SAA6C,IAAlC1sD,EAAK3P,QAAQ,KAAM,IAAI73B,OAAiD,IAAlCwnC,EAAK3P,QAAQ,KAAM,IAAI73B,OAAc,CACzF,IAAA03B,EAAZ5iC,KAAAw9F,kBAAAX,YAAAnqD,EAAA1yC,KAAAo/F,SAAA,QAAYd,EAAZ17D,EAAA,GAAAA,EAAA,GAwBQ5iC,KAvBKw+F,iBAAiBF,QAyBtBt+F,KAvBKw+F,iBAAiB,MAyBxBx+F,KAvBK4uC,YAwBL,IAvBI6xD,EAAMz2F,OAAO0oC,EAAKnO,MAAM,KAAK,IAwBjCvkC,KAvBK6tF,cAAoB,EAAN4S,KA8BzBF,EAAAjgG,UAAA89F,YAAA,SA1BGxtE,GA2BC5wB,KA1BK49F,UAAU77F,KAAK6uB,IAgCxB2vE,EAAAjgG,UAAA+9F,aAAA,SA7BGztE,GA8BC5wB,KA7BK4uC,YA8BL5uC,KA7BK69F,WAAW97F,KAAK6uB,IAmCzB2vE,EAAAjgG,UAAAwhC,WAAA,SAhCGv9B,GAgCH,IAAApD,EAAAnB,KACIk7C,QAhCQC,QAAQ,MAAM3qC,KAAK,WAAM,OAAArP,EAAKs9F,iBAAiBl6F,MAsC3Dg8F,EAAAjgG,UAAAyhC,iBAAA,SAnCGC,GAoCChiC,KAnCKkyF,UAAYlwD,GAyCrBu+D,EAAAjgG,UAAA2hC,kBAAA,SAtCGD,GAuCChiC,KAtCKmyF,WAAanwD,GA4CtBu+D,EAAAjgG,UAAA8xE,iBAAA,SAzCGlwE,GA0CClC,KAzCKkC,SAAWA,GAGjBq+F,EAAHjgG,UAAAk+F,iBAAG,SAAAE,EAAA1L,QAAH,IAAAA,IAAGA,GAAH,GA8CQ0L,IA7Ca1+F,KAAKuE,QA8CpBvE,KA7CKkyF,UAAUwM,IA8Cd1L,GA7CQhzF,KAAK8hC,WAAW48D,KAI5B6B,EAAHjgG,UAAAm+F,iBAAG,SAAAl6F,GAiDKA,aAhDiB4D,MAAQnI,KAAKuE,iBAAiB4D,OAiDjD5D,EAhDQ,IAAI4D,KAAK5D,EAAMm8F,YAAY1gG,KAAKuE,MAAMgzF,cAAev3F,KAAKuE,MAAM88D,WAAYrhE,KAAKuE,MAAMs8D,aAkDjG7gE,KAhDKuE,MAAQA,EAiDTvE,KAhDKuE,QAiDPvE,KAhDKy9F,eAAiBz9F,KAAK6+F,gBAAgB7+F,KAAKuE,QAkDlDvE,KAhDKiB,mBAAmBgB,gBAGzBs+F,EAAHjgG,UAAAs1D,SAAG,SAAAhlC,GAoDKA,GAnDSA,EAAM8e,MAoDjB1vC,KAnDKw+F,iBAAiB5tE,EAAM8e,OAI/B6wD,EAAHjgG,UAAAktF,iBAAG,SAAA58D,GAuDC5wB,KAtDK41D,SAAShlC,GAuDd5wB,KAtDK8pF,cAMNyW,EAAHjgG,UAAA27B,WAAG,WAuDCj8B,KAtDKy9F,eAAiB,GAuDtBz9F,KAtDKw+F,iBAAiB,OAGvB+B,EAAHjgG,UAAAu+F,gBAAG,SAAAt6F,GA0DC,IAzDKA,EA0DH,MAzDO,GAuCX,IArCM44B,EAASn9B,KAAKk4B,OAAOmoC,qBAAqB97D,EAAO,CA0DnDw9D,KAzDM,UA0DNC,OAzDQ,UA0DR2+B,QAzDQ3gG,KAAMo/F,WA2DhB,OAzDoC,IAyDhCjiE,EAzDOoH,MAAM,KAAK,GAAGr5B,OAChB,IAAAiyB,EAEFA,GA8DXh9B,OAAAC,eA3DGmgG,EA2DHjgG,UAAA,WAAA,CAAAmD,IAAA,WACI,OA3DOm2B,QAAS3hB,QAAQjY,KAAKuE,wCAG9Bg8F,EAAHjgG,UAAAutF,cAAG,SAAAlmF,GA+DC,IA7DIy0E,EADUp8E,KAAKg5D,QAAQc,WAAWwwB,eACnBrxD,cAAc,eAE7BS,EADQ0iD,EAAK0R,iBAAiB,kBACjBnmF,GA+Db+xB,IACF0iD,EA9DK1zB,UAAY,EAAsBypB,cA9K7C,GAiLOouB,2BAAPh+F,WAA2C,CA+D3C,CA9DE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CA+DvBC,SA9DU,yBA+DVoC,UA9DW,CAAAs6F,uBA+DXnsE,SA9DU,ksBAaXovE,2BAADz8F,eAAC,WAAA,MAAA,CAiED,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMglD,mBACP,CAAChlD,KAAMgC,KAAAA,qBA9DA89F,2BAAPx8F,eAAgE,CAiEhEmX,KAhEQ,CAAA,CAAGza,KAAMK,KAAAA,QAiEjBo6B,YAhEe,CAAA,CAAGz6B,KAAMK,KAAAA,QAiExBs+F,SAhEY,CAAA,CAAG3+F,KAAMK,KAAAA,QAiErBi9F,YAhEe,CAAA,CAAGt9F,KAAMK,KAAAA,QAiExBoB,SAhEY,CAAA,CAAGzB,KAAM6qC,KAAAA,YAAa3qC,KAAM,CAAA,mBAAuB,CAAEF,KAAMK,KAAAA,QAiEvE88F,UAhEa,CAAA,CAAGn9F,KAAMkC,KAAAA,SAiEtBk7F,WAhEc,CAAA,CAAGp9F,KAAMkC,KAAAA,SAiEvBq2D,QAhEW,CAAA,CAAGv4D,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA2oF,iCCtOrC,IAAA94B,qBAAA,aAIOA,qBAAPjuD,WAA2C,CAE3C,CADE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CAEpBmzB,QADS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAa68D,iBAAAA,eAAgBluC,kBAAmBj2B,gBAExE/3B,aADc,CAAAo8F,sBAAwBoB,4BAEtCz9F,QADS,CAAAq8F,sBAAwBoB,gCAIpC/vC,qBAAD1sD,eAAC,WAAA,MAAA,ICRD,IAHM88F,gCAAkC,CAItCzpE,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAA6qE,4BAI9BtgG,OAHO,GAKTsgG,0BAAA,WAyBA,SAAAA,EAJqB3oE,EAAkC5Y,GAAlCtf,KAArBk4B,OAAqBA,EAAkCl4B,KAAvDsf,QAAuDA,EAbpDtf,KAAHgtF,SADiC,IAAI3rF,KAAAA,cAAa,GAGhDrB,KAAF8gG,kBAD8B,OAM5B9gG,KAAF+gG,gBAD0B,IAAI54F,KAE5BnI,KAAFghG,gBAD0B,IAAI74F,KAI5BnI,KAAFkyF,UADwB,aAEtBlyF,KAAFmyF,WADyB,oBAYzB0O,EAAAvgG,UAAA2gG,WAAA,SARGC,GASClhG,KARK8gG,kBAAoBI,GAc7BL,EAAAvgG,UAAA6gG,cAAA,SAXG58F,GAYCvE,KAXK03F,cAAgB13F,KAAKk4B,OAAOmoC,qBAAqB97D,EAAO,CAY3D48D,MAXO,QAYPU,IAXK,UAYLC,KAXM,aAkBZ++B,EAAAvgG,UAAA8gG,cAAA,SAdG78F,GAeC,IAdIwlE,EAAQxlE,EAAM44F,WACdmC,EAAU/6F,EAAM64F,aAgBpBp9F,KAdK6/F,SAAWt7F,EAAM88F,qBAAqBlxF,OAAO,GAE7CnQ,KAAKo/F,WAeRr1B,EAd0B,OAAlB/pE,KAAK6/F,UAA6B,GAAR91B,EAAaA,EAAQ,GAAKA,EAGtC,OAclB/pE,KAdK6/F,UAA+B,KAAV91B,EAe5BA,EAdQ,GACmB,OAAtB/pE,KAAS6/F,UAA+B,IAAV91B,IAenCA,EAdQ,KAkBZ/pE,KAdK+pE,MAAoC,IAA5BA,EAAMh3B,WAAW7nC,OAAe,IAAA6+D,EAAUh3B,WAAeg3B,EAAMh3B,WAe5E/yC,KAdKs/F,QAAwC,IAA9BA,EAAQvsD,WAAW7nC,OAAe,IAAAo0F,EAAYvsD,WAAeusD,EAAQvsD,YAoBxF8tD,EAAAvgG,UAAAghG,eAAA,SAjBG1wE,GAkBC5wB,KAjBK+gG,gBAAkBnwE,EAAM8e,KAkB7B1vC,KAjBKy9B,MAAQz9B,KAAKuhG,oBAAoBvhG,KAAK+gG,gBAAiB/gG,KAAKghG,iBAkBjEhhG,KAjBKmhG,cAAcnhG,KAAKy9B,OAkBxBz9B,KAjBKgtF,SAASjrF,KAAK,CAAE2tC,KAAM1vC,KAAKy9B,QAkBhCz9B,KAjBKkyF,UAAUlyF,KAAKy9B,OAkBpBz9B,KAjBKihG,WAAW,SAuBpBJ,EAAAvgG,UAAAkhG,eAAA,SApBG5wE,GAqBC5wB,KApBKghG,gBAAkBpwE,EAAM8e,KAqB7B1vC,KApBKy9B,MAAQz9B,KAAKuhG,oBAAoBvhG,KAAKy9B,MAAOz9B,KAAKghG,iBAqBvDhhG,KApBKohG,cAAcphG,KAAKy9B,OAqBxBz9B,KApBKgtF,SAASjrF,KAAK,CAAE2tC,KAAM1vC,KAAKy9B,QAqBhCz9B,KApBKkyF,UAAUlyF,KAAKy9B,QA2BxBojE,EAAAvgG,UAAAihG,oBAAA,SAxBGR,EAAAC,GAyBC,OAxBOS,QAAAA,gBAyBLC,QAAAA,WACE97B,QAAAA,WAxBmBC,QAAAA,SAAiBk7B,EAAiBY,QAAAA,SAAiBX,IAAmBY,QAAAA,WAAmBZ,IAyB5Ga,QAAAA,WAxBmBb,IA0BrBc,QAAAA,gBAxBwBd,KA+B9BH,EAAAvgG,UAAAwhC,WAAA,SA1BGrE,GA2BCz9B,KA1BKy9B,MAAQA,EA2BT7D,QA1BQ3hB,QAAQwlB,GA2BlBz9B,KA1BKy9B,MAAQ,IAAIt1B,KACPsB,MAAMg0B,KA2BhBz9B,KA1BKy9B,MAAQ,IAAIt1B,KAAKs1B,IA4BxBz9B,KA1BK+gG,gBAAkB/gG,KAAKy9B,MA2B5Bz9B,KA1BKghG,gBAAkBhhG,KAAKy9B,MA2BxB7D,QA1BQjwB,OAAO3J,KAAKy9B,SA2BtBz9B,KA1BKmhG,cAAcnhG,KAAKy9B,OA2BxBz9B,KA1BKohG,cAAcphG,KAAKy9B,SAiC9BojE,EAAAvgG,UAAAyhC,iBAAA,SA7BGC,GA8BChiC,KA7BKkyF,UAAYlwD,GAmCrB6+D,EAAAvgG,UAAA2hC,kBAAA,SAhCGD,GAiCChiC,KAhCKmyF,WAAanwD,KAxGtB,GA0GO6+D,0BAAPt+F,WAA2C,CAiC3C,CAhCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAiCvBC,SAhCU,wBAiCVoC,UAhCW,CAAA49F,iCAiCXlvE,WAhCY,CAiCVlD,WAAAA,QAhCQ,gBAAiB,CAiCvBpoB,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJyqC,QAhCS,SAmCb9yD,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJyqC,QAhCS,SAmCbvqC,WAAAA,WAhCW,gBAAiBC,WAAAA,QAAQ,oBAkCtCJ,WAAAA,QAhCQ,gBAAiB,CAiCvBpoB,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJyqC,QAhCS,SAmCb9yD,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJyqC,QAhCS,SAmCbvqC,WAAAA,WAhCW,gBAAiBC,WAAAA,QAAQ,oBAkCtCJ,WAAAA,QAhCQ,iBAAkB,CAiCxBpoB,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJC,UAhCW,oBAmCftoB,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJC,UAhCW,sBAmCfC,WAAAA,WAhCW,gBAAiBC,WAAAA,QAAQ,oBAkCtCJ,WAAAA,QAhCQ,iBAAkB,CAiCxBpoB,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJC,UAhCW,oBAmCftoB,WAAAA,MACE,OACAqoB,WAAAA,MAhCM,CAiCJC,UAhCW,uBAmCfC,WAAAA,WAhCW,gBAAiBC,WAAAA,QAAQ,qBAmCxCuC,SAhCU,66CAwBX0vE,0BAAD/8F,eAAC,WAAA,MAAA,CAmCD,CAACrD,KAAMi6B,kBACP,CAACj6B,KAAMizB,KAAAA,cAhCAmtE,0BAAP98F,eAAgE,CAmChEuzF,QAlCW,CAAA,CAAG72F,KAAMK,KAAAA,QAmCpB02F,QAlCW,CAAA,CAAG/2F,KAAMK,KAAAA,QAmCpB+jE,MAlCS,CAAA,CAAGpkE,KAAMK,KAAAA,QAmClBukE,IAlCO,CAAA,CAAG5kE,KAAMK,KAAAA,QAmChBs+F,SAlCY,CAAA,CAAG3+F,KAAMK,KAAAA,QAmCrBksF,SAlCY,CAAA,CAAGvsF,KAAMkC,KAAAA,UClNrB,IAHM26F,sBAAsB,CAI1BnmE,QAHS6D,MAAAA,kBAIT5D,YAHapB,KAAAA,WAAW,WAAM,OAAA+rE,iCAI9BxhG,OAHO,GAKTwhG,+BAAA,WAsCA,SAAAA,EAPqBziF,EAA4B4Y,EAAkCj3B,GAA9DjB,KAArBsf,QAAqBA,EAA4Btf,KAAjDk4B,OAAiDA,EAAkCl4B,KAAnFiB,mBAAmFA,EAxBnFjB,KAAAkyF,UAFG,aAMHlyF,KAAAmyF,WAHG,aAgBDnyF,KAAFo/F,UAHsB,EAKpBp/F,KAAFkC,UAHsB,EAOpBlC,KAAF49F,UAHwC,IAAIv8F,KAAAA,aAK1CrB,KAAF69F,WAHyC,IAAIx8F,KAAAA,oBAgB7C0gG,EAAAzhG,UAAAwhC,WAAA,SAZGv9B,GAYH,IAAApD,EAAAnB,KACIA,KAZKq9F,SAAW1zF,QAAAA,OAAOpF,GAAS26C,QAAAA,MAAM36C,GAASA,EAa/CvE,KAZKgiG,SAAWr4F,QAAAA,OAAOpF,GAAS26C,QAAAA,MAAM36C,GAASA,EAa/C22C,QAZQC,QAAQ,MAAM3qC,KAAK,WAAM,OAAArP,EAAKs9F,iBAAiBl6F,MAkB3Dw9F,EAAAzhG,UAAA2hG,WAAA,SAhBGrxE,GAiBC5wB,KAhBKq9F,SAAWzsE,EAiBhB5wB,KAhBKkiG,cAsBTH,EAAAzhG,UAAA6hG,WAAA,SApBGvxE,GAqBC5wB,KApBKgiG,SAAWpxE,EAqBhB5wB,KApBKkiG,cA0BTH,EAAAzhG,UAAA8hG,WAAA,SAvBGxxE,GAwBC5wB,KAvBK49F,UAAU77F,KAAK6uB,IA6BxBmxE,EAAAzhG,UAAA+hG,YAAA,SA1BGzxE,GA2BC5wB,KA1BK69F,WAAW97F,KAAK6uB,IA+BzBmxE,EAAAzhG,UAAA4hG,WAAA,WACI,IACE,GAAIliG,KA5BKq9F,oBAAoBl1F,MAAQnI,KAAKgiG,oBAAoB75F,KAAM,CA6BlE,IA5BIm6F,EAAQ,IAAIn6F,KA6BdnI,KA5BKq9F,SAAS9F,cA6Bdv3F,KA5BKq9F,SAASh8B,WA6BdrhE,KA5BKq9F,SAASx8B,UA6Bd7gE,KA5BKgiG,SAAS7E,WA6Bdn9F,KA5BKgiG,SAAS5E,cA8BhBp9F,KA5BKw+F,iBAAiB8D,QA8BtBtiG,KA5BKw+F,iBAAiB,MAExB,MAAAzxF,GA8BA/M,KA5BKw+F,iBAAiB,QAmC5BuD,EAAAzhG,UAAAyhC,iBAAA,SA/BGC,GAgCChiC,KA/BKkyF,UAAYlwD,GAqCrB+/D,EAAAzhG,UAAA2hC,kBAAA,SAlCGD,GAmCChiC,KAlCKmyF,WAAanwD,GAwCtB+/D,EAAAzhG,UAAA8xE,iBAAA,SArCGlwE,GAsCClC,KArCKkC,SAAWA,GAGjB6/F,EAAHzhG,UAAAk+F,iBAAG,SAAAE,GAyCKA,IAxCa1+F,KAAKuE,QAyCpBvE,KAxCKkyF,UAAUwM,GAyCf1+F,KAxCKy+F,iBAAiBC,KAGzBqD,EAAHzhG,UAAAm+F,iBAAG,SAAAl6F,GA6CCvE,KA5CKuE,MAAQA,EA6CbvE,KA5CKiB,mBAAmBgB,gBAGzB8/F,EAAHzhG,UAAAs1D,SAAG,SAAAhlC,GA2BDA,GA1BeA,EAAM8e,MAgDjB1vC,KA/CKw+F,iBAAiB5tE,EAAM8e,OAI/BqyD,EAAHzhG,UAAAktF,iBAAG,SAAA58D,GAmDC5wB,KAlDK41D,SAAShlC,IAMfmxE,EAAHzhG,UAAA27B,WAAG,WAmDCj8B,KAlDKw+F,iBAAiB,OAuD1Br+F,OAAAC,eApDG2hG,EAoDHzhG,UAAA,WAAA,CAAAmD,IAAA,WACI,OApDOm2B,QAAS3hB,QAAQjY,KAAKuE,0CApHjC,GAsHOw9F,+BAAPx/F,WAA2C,CAqD3C,CApDE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAqDvBC,SApDU,8BAqDVoC,UApDW,CAAAs6F,uBAqDXnsE,SApDU,ufAOX4wE,+BAADj+F,eAAC,WAAA,MAAA,CAuDD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMgC,KAAAA,qBApDAs/F,+BAAPh+F,eAAgE,CAuDhEmX,KAtDQ,CAAA,CAAGza,KAAMK,KAAAA,QAuDjB+jE,MAtDS,CAAA,CAAGpkE,KAAMK,KAAAA,QAuDlBukE,IAtDO,CAAA,CAAG5kE,KAAMK,KAAAA,QAuDhBo6B,YAtDe,CAAA,CAAGz6B,KAAMK,KAAAA,QAuDxBi9F,YAtDe,CAAA,CAAGt9F,KAAMK,KAAAA,QAuDxBs+F,SAtDY,CAAA,CAAG3+F,KAAMK,KAAAA,QAuDrBoB,SAtDY,CAAA,CAAGzB,KAAMK,KAAAA,QAuDrBq8B,OAtDU,CAAA,CAAG18B,KAAMK,KAAAA,QAuDnB88F,UAtDa,CAAA,CAAGn9F,KAAMkC,KAAAA,SAuDtBk7F,WAtDc,CAAA,CAAGp9F,KAAMkC,KAAAA,UC1JvB,IAAA8tD,yBAAA,aAKOA,yBAAPluD,WAA2C,CAE3C,CADE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CAEpBmzB,QADS,CAAAC,OAAAA,aAAeqO,MAAAA,YAAa0S,qBAAsB0b,qBAAsByuC,iBAAAA,eAAgBluC,mBAEjGhuD,aADc,CAAA89F,0BAA4BkB,gCAE1Cj/F,QADS,CAAA+9F,0BAA4BkB,oCAIxCtxC,yBAAD3sD,eAAC,WAAA,MAAA,ICjBD,IADMy+F,gCAAkC,CAEtCprE,QADS6D,MAAAA,kBAET5D,YADapB,KAAAA,WAAW,WAAM,OAAAwsE,sBAE9BjiG,OADO,GAUTiiG,oBAAA,WAqCA,SAAAA,EADsBplB,GAAAp9E,KAAtBo9E,KAAsBA,EA1BpBp9E,KAAFq9E,cAC0B,EACxBr9E,KAAFyiG,0BACsC,GACpCziG,KAAFkC,UACsB,EAEpBlC,KAAFyiC,OACW,IAAIphC,KAAAA,aACbrB,KAAF0iG,MACU,IAAIrhG,KAAAA,aACZrB,KAAFq7B,KACS,IAAIh6B,KAAAA,aACXrB,KAAFo7B,MACU,IAAI/5B,KAAAA,aACZrB,KAAF2iG,MACU,IAAIthG,KAAAA,aACZrB,KAAFi6F,OACW,IAAI54F,KAAAA,aAGbrB,KAAFsjB,OACmB,UASnBnjB,OAAAC,eAHGoiG,EAGHliG,UAAA,QAAA,CAAAmD,IAAA,WACI,OAHOzD,KAAKsjB,QAShB5f,IAAA,SALG+lC,GAMKA,IALMzpC,KAAKsjB,SAMbtjB,KALKsjB,OAASmmB,EAMdzpC,KALKy0D,SAAShrB,qCAWpB+4D,EAAAliG,UAAA6B,YAAA,WAAA,IAAAhB,EAAAnB,KACQA,KAPK66D,WAQP76D,KAPK66D,SAAS+iB,aAAaviD,MAAK,GAQhC5qB,WAPW,WAQTtP,EAPK05D,SAASgjB,qBAQdC,SAPSC,UAAU58E,EAAK05D,SAAS3/C,MAAMgwC,UAQvC/pD,EAPK05D,SAAS3P,UAQd/pD,EAPK05D,SAAW,SAcxB2nC,EAAAliG,UAAAk5C,gBAAA,WACI,IATIjwB,EAASvpB,KAAKupB,QAAUvpB,KAAK4iG,gBAU7B5iG,KATKq9E,eAUP9zD,EATO8zD,cAAe,GAWpBr9E,KATKkC,WAUPqnB,EATOk1D,UAAW,GAWpBz+E,KATK6iG,aAAat5E,IAetBi5E,EAAAliG,UAAAwiG,YAAA,SAZGv+F,GAYH,IAAApD,EAAAnB,KACIA,KAZKo9E,KAAKiB,IAAI,WAaZl9E,EAZKoD,MAAQA,EAabpD,EAZKszD,SAASlwD,GAadpD,EAZK0gC,YAaL1gC,EAZKshC,OAAO1gC,KAAKwC,MAmBvBi+F,EAAAliG,UAAAuiG,aAAA,SAfGt5E,GAeH,IAAApoB,EAAAnB,KAdS89E,UAqBL99E,KAfK66D,SAAWijB,SAAS/6C,QAAQ/iC,KAAK4D,KAAK0wB,cAAe/K,GAkB1DvpB,KAfK66D,SAASgkB,QAAQ7+E,KAAKuE,OAkB3BvE,KAfK66D,SAAS3Y,GAAG,gBAAiB,SAAAoqB,GAiBhCnrE,EAfKuhG,MAAM3gG,KAAKuqE,KAmBlBtsE,KAfK66D,SAAS3Y,GAAG,SAAU,WAgBzB/gD,EAfK0gC,YAgBL,IAfIt9B,EAAQpD,EAAK05D,SAASukB,UAkBtBj+E,EAfKk5B,UAgBHl5B,EAfKi9E,iBAgBPlkD,aAfa/4B,EAAKi9E,iBAiBpBj9E,EAfKi9E,gBAAkB3tE,WAAW,WAgBhCtP,EAfK2hG,YAAYv+F,GAgBjBpD,EAfKi9E,gBAAkB,MACtBrsB,SAAS5wD,EAAKk5B,YAiBjBl5B,EAfK2hG,YAAYv+F,KAkBrBvE,KAfK66D,SAAS3Y,GAAG,OAAQ,SAAAtxB,GAgBvBzvB,EAfKk6B,KAAKt5B,KAAK6uB,KAiBjB5wB,KAfK66D,SAAS3Y,GAAG,QAAS,SAAAtxB,GAgBxBzvB,EAfKi6B,MAAMr5B,KAAK6uB,KAiBlB5wB,KAfK66D,SAAS3Y,GAAG,QAAS,SAAAtxB,GAgBxBzvB,EAfKwhG,MAAM5gG,KAAK6uB,KAiBlB5wB,KAfK66D,SAAS3Y,GAAG,SAAU,SAAAtxB,GAgBzBzvB,EAfK84F,OAAOl4F,KAAK6uB,MA7BjBqV,QAfQnhC,MAAM,gEAiEpB09F,EAAAliG,UAAAsiG,cAAA,WACI,IAjBMG,EAAa,CAkBjBhhB,UAjBWjE,SAASkE,SAkBpBC,eAjBgBnE,SAASoE,QAkBzBC,2BAjB2B,EAkB3BC,cAjBe,mCAkBf4gB,oBAjBqB,mCAkBrBC,WACE,maAiBEC,EAAiB,CAkBrB7gB,QAjBS,CAkBP,CAjBEnnE,KAAM,YAAaogB,MAAO,CAAA,QAAU,YAAa,gBAAiB,OAAQ,SAkB5E,CACEpgB,KAjBM,YAkBNogB,MAjBO,CAkBL,eACA,eACA,UACA,SACA,aACA,cACA,gBACA,eACA,eACA,UACA,YAGJ,CAjBEpgB,KAAM,QAASogB,MAAO,CAAA,SAkBxB,CAjBEpgB,KAAM,SAAUogB,MAAO,CAAA,QAAU,QAAS,mBAkB5C,CAjBEpgB,KAAM,QAASogB,MAAO,CAAA,WAAa,WAkBrC,IACA,CAjBEpgB,KAAM,cAAeogB,MAAO,CAAA,OAAS,SAAU,YAAa,SAAU,YAAa,gBAkBrF,CAjBEpgB,KAAM,SAAUogB,MAAO,CAAA,SAAW,SAAU,OAAQ,aAkBtD,CAjBEpgB,KAAM,SAAUogB,MAAO,CAAA,YAAc,aAmBzC6nE,0BAjB2BnjG,KAAKyiG,2BAoBlC,OAjBOtiG,OAAO24B,OAAOiqE,EAAY/iG,KAAKojG,QApDhB,CAkBpB/gB,QAjBS,CAkBP,CACEnnE,KAjBM,cAkBNogB,MAjBO,CAkBL,SACA,WACA,OACA,SACA,YACA,YACA,IACA,eACA,eACA,UACA,SACA,WAmBwD4nE,IAuBpEV,EAAAliG,UAAAwhC,WAAA,SApBGv9B,GAqBCvE,KApBKsjB,OAAS/e,EAqBVvE,KApBK66D,UAqBP76D,KApBK66D,SAASgkB,QAAQt6E,IA2B5Bi+F,EAAAliG,UAAAm0D,SAAA,SAvBGlwD,KA4BHi+F,EAAAliG,UAAAuhC,UAAA,SA1BGjR,KA+BH4xE,EAAAliG,UAAAyhC,iBAAA,SA7BGC,GA8BChiC,KA7BKy0D,SAAWzyB,GAmCpBwgE,EAAAliG,UAAA2hC,kBAAA,SAhCGD,GAiCChiC,KAhCK6hC,UAAYG,GAsCrBwgE,EAAAliG,UAAA8xE,iBAAA,SAnCGlwE,GAoCClC,KAnCKkC,SAAWA,EAoCZlC,KAnCK66D,UAoCPijB,SAnCSC,UAAU/9E,KAAK66D,SAAS3/C,MAAMwjE,YAAYx8E,IA0CzDsgG,EAAAliG,UAAA+iG,WAAA,SAtCG3wD,GAuCC,IAtCI4wD,EAAc5wD,EAAKlO,OAuCvBxkC,KAtCK66D,SAASwoC,WAAWC,MA3O7B,GA6OOd,oBAAPjgG,WAA2C,CAuC3C,CAtCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAuCvBC,SAtCU,cAuCVoC,UAtCW,CAAAu/F,iCAuCXpxE,SAtCU,4DAIXqxE,oBAAD1+F,eAAC,WAAA,MAAA,CAyCD,CAACrD,KAAM+iF,KAAAA,UAtCAgf,oBAAPz+F,eAAgE,CAyChEwlB,OAxCU,CAAA,CAAG9oB,KAAMK,KAAAA,QAyCnBu5B,SAxCY,CAAA,CAAG55B,KAAMK,KAAAA,QAyCrBoa,KAxCQ,CAAA,CAAGza,KAAMK,KAAAA,QAyCjBsiG,QAxCW,CAAA,CAAG3iG,KAAMK,KAAAA,QAyCpBu8E,aAxCgB,CAAA,CAAG58E,KAAMK,KAAAA,QAyCzB2hG,0BAxC6B,CAAA,CAAGhiG,KAAMK,KAAAA,QAyCtCoB,SAxCY,CAAA,CAAGzB,KAAMK,KAAAA,QAyCrB2hC,OAxCU,CAAA,CAAGhiC,KAAMkC,KAAAA,SAyCnB+/F,MAxCS,CAAA,CAAGjiG,KAAMkC,KAAAA,SAyClB04B,KAxCQ,CAAA,CAAG56B,KAAMkC,KAAAA,SAyCjBy4B,MAxCS,CAAA,CAAG36B,KAAMkC,KAAAA,SAyClBggG,MAxCS,CAAA,CAAGliG,KAAMkC,KAAAA,SAyClBs3F,OAxCU,CAAA,CAAGx5F,KAAMkC,KAAAA,SAyCnBiB,KAxCQ,CAAA,CAAGnD,KAAM+qC,KAAAA,UAAW7qC,KAAM,CAAA,UAyClC4D,MAxCS,CAAA,CAAG9D,KAAMK,KAAAA,SClRlB,IAAA4vD,uBAAA,aAEOA,uBAAPnuD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAeqO,MAAAA,aACxBr/B,aAAc,CAAAy/F,qBACd1/F,QAAS,CAAA0/F,yBAIZ9xC,uBAAD5sD,eAAC,WAAA,MAAA,ICZD,IAAAy/F,mBAAA,WAuBA,SAAAA,EAFsBrrE,GAAAl4B,KAAtBk4B,OAAsBA,EAZpBl4B,KAAFm5B,QAAoB,EAIlBn5B,KAAFwjG,UAAsB,EAEpBxjG,KAAFyjG,UAAc,IAAIpiG,KAAAA,aAEhBrB,KAAF2yC,UAAsB,EAOlB3yC,KAAK2yC,UAAW,EAEhB3yC,KAAK0jG,sBAAwB,WAC3B,IAAIC,GAAY,EAChB,GAA4B,iBAAjBlpD,aACT,IACEA,aAAaD,QAAQ,SAAU,KAC/BC,aAAapb,WAAW,UACxBskE,GAAY,EACZ,MAAO5+F,GACPkhC,QAAQslD,KACN,qNAIN,OAAOoY,EAboB,UAmBjCJ,EAAAjjG,UAAA04B,SAAA,WASI,GARAh5B,KAJK4jG,IAAM5jG,KAAK4jG,KAAO,GAKvB5jG,KAJK6jG,WAAa7jG,KAAK6jG,YAAc7jG,KAAKk4B,OAAO0lC,QAKjD59D,KAJKm5B,OAAgC,iBAAhBn5B,KAAKm5B,OAAsC,SAAhBn5B,KAAKm5B,OAAoBn5B,KAAKm5B,OAK9En5B,KAJKs1B,KAAOt1B,KAAKs1B,MAAQ,KAMzBt1B,KAJKkb,KAAOlb,KAAKkb,MAAQpJ,KAAKgyF,MAAsB,IAAhBhyF,KAAKkkC,UAKzCh2C,KAJK+jG,gBAAkB,WAAA/jG,KAAgBkb,KAMnClb,KAJK0jG,sBAAuB,CAK9B,IAJIM,EAAchlD,KAAKE,MAAMzE,aAAaC,QAAQ16C,KAAK+jG,kBAKvD/jG,KAJK2yC,UAA2B,IAAhBqxD,IAWtBT,EAAAjjG,UAAA2jG,QAAA,WACQjkG,KAJK0jG,uBAKPjpD,aAJaD,QAAQx6C,KAAK+jG,gBAAiB/kD,KAAKC,WAAU,IAM5Dj/C,KAJK2yC,UAAW,EAKhB3yC,KAJKyjG,UAAU1hG,UAhEnB,GAkEOwhG,mBAAPhhG,WAA2C,CAK3C,CAJE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAKvBC,SAJU,gBAKVuwB,SAJU,4lBAcVvtB,KAJM,CAKJ62B,iBAJkB,gBAKrB8oE,mBAADz/F,eAAC,WAAA,MAAA,CAOD,CAACrD,KAAMi6B,oBAJA6oE,mBAAPx/F,eAAgE,CAOhEmX,KANQ,CAAA,CAAGza,KAAMK,KAAAA,QAOjB8iG,IANO,CAAA,CAAGnjG,KAAMK,KAAAA,QAOhB+iG,WANc,CAAA,CAAGpjG,KAAMK,KAAAA,QAOvBq4B,OANU,CAAA,CAAG14B,KAAMK,KAAAA,QAOnBw0B,KANQ,CAAA,CAAG70B,KAAMK,KAAAA,QAOjB0iG,SANY,CAAA,CAAG/iG,KAAMK,KAAAA,QAOrB2iG,UANa,CAAA,CAAGhjG,KAAMkC,KAAAA,UC9FtB,IAAAguD,kBAAA,aAGOA,kBAAPpuD,WAA2C,CAC3C,CAAE9B,KAAMoC,KAAAA,SAAUlC,KAAM,CAAA,CACpBmzB,QAAS,CAAAC,OAAAA,aAAe8D,kBACxB90B,aAAc,CAAAwgG,oBACdzgG,QAAS,CAAAygG,wBAIZ5yC,kBAAD7sD,eAAC,WAAA,MAAA,ICfD,IAAA4hD,oBAAA,WAUA,SAAAA,IAJE1lD,KAAFgoC,UAAmB,CACfkyD,UAAS,GACTgK,OAAQ,WAMZx+C,EAAAplD,UAAA6jG,OAAA,WAAA,IAAAhjG,EAAAnB,KADQgoC,EAAiB,GACfo8D,EAAgCjkG,OAAO44B,KAAK/4B,KAAKgoC,UAAUk8D,QAUjE,OATuC/jG,OAAO44B,KAAK/4B,KAAKgoC,UAAUkyD,YAC7C77E,QAAQ,SAAC5d,GAG5BunC,EAFUvnC,GAAQU,EAAK6mC,UAAUkyD,WAAQz5F,KAI3C2jG,EAFoB/lF,QAAQ,SAAC5d,GAG3BunC,EAFUvnC,GAAQU,EAAK6mC,UAAUk8D,OAAOzjG,KAEnCunC,GASX0d,EAAAplD,UAAA+jG,WAAA,SANG1pF,EAAAwW,GAOCnxB,KANKgoC,UAAUkyD,WAAQv/E,GAAOwW,GAalCu0B,EAAAplD,UAAAgkG,UAAA,SAVG3pF,EAAAwW,GAWCnxB,KAVKgoC,UAAUk8D,OAAOvpF,GAAOwW,KA9BjC,GAgCOu0B,oBAAPnjD,WAA2C,CAW3C,CAVE9B,KAAMqjC,KAAAA,aAGP4hB,oBAAD5hD,eAAC,WAAA,MAAA,ICrCD,IAAAynC,aAAA,WAMA,SAAAA,EAAqBpa,GAAAnxB,KAArBmxB,SAAqBA,SAIrBoa,EAAAjrC,UAAAypC,QAAA,WACI,OAFO/pC,KAAKkb,QAThB,GAWOqwB,aAAPhpC,WAA2C,CAG3C,CAFE9B,KAAMC,KAAAA,UAAWC,KAAM,CAAA,CAGvBC,SAFU,qBAIX2qC,aAADznC,eAAC,WAAA,MAAA,CAKD,CAACrD,KAAMgvB,KAAAA,eAFA8b,aAAPxnC,eAAgE,CAKhEtD,KAJQ,CAAA,CAAGA,KAAMK,KAAAA,QAKjBoa,KAJQ,CAAA,CAAGza,KAAMK,KAAAA,MAAOH,KAAM,CAAA,mBClB9B,IAAA4jG,0BAAA,aAOOA,0BAAPhiG,WAA2C,CAC3C,CAAE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CACvBC,SAAU,uBACVuwB,SAAU,kFAMXozE,0BAADzgG,eAAC,WAAA,MAAA,IAEMygG,0BAAPxgG,eAAgE,CAGhE+lD,MAFS,CAAA,CAAGrpD,KAAMK,KAAAA,QAGlBw0B,KAFQ,CAAA,CAAG70B,KAAMK,KAAAA,SAMjB,IAAA0jG,oBAgBA,WACGxkG,KAAHykG,SAjB0B,IAMnBD,oBAAPjiG,WAA2C,CAkB3C,CAjBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAkBvBC,SAjBU,gBAkBVuwB,SAjBU,grBAcXqzE,oBAAD1gG,eAAC,WAAA,MAAA,IAEM0gG,oBAAPzgG,eAAgE,CAoBhE0gG,SAnBY,CAAA,CAAGhkG,KAAMK,KAAAA,QAoBrB4jG,KAnBQ,CAAA,CAAGjkG,KAAMK,KAAAA,QAoBjBgpD,MAnBS,CAAA,CAAGrpD,KAAMK,KAAAA,QAoBlBw0B,KAnBQ,CAAA,CAAG70B,KAAMK,KAAAA,QAoBjB6G,MAnBS,CAAA,CAAGlH,KAAMK,KAAAA,QAoBlB6jG,UAnBa,CAAA,CAAGlkG,KAAMK,KAAAA,SAuBtB,IAAA8jG,uBAAA,WAiDA,SAAAA,EA7CsBtlF,EAA6B0oB,GAA7BhoC,KAAtBsf,QAAsBA,EAA6Btf,KAAnDgoC,UAAmDA,EAsBjDhoC,KAAFykG,SA1CyB,GA4CvBzkG,KAAF6kG,UA1CmC,GAgDjC7kG,KAAF8kG,uBA1CmC,EA4CjC9kG,KAAF+kG,qBA1CiC,EA8C/B/kG,KAAFglG,mBA1CsB,EA2CpBhlG,KAAFilG,sBA1CyB,EA2CvBjlG,KAAFklG,kBA1CqB,EA2CnBllG,KAAFmlG,uBA1C0B,EA2CxBnlG,KAAFolG,YA1CgB,SAIbR,EAAHtkG,UAAA04B,SAAG,WAiDCh5B,KAhDKywB,eAGNm0E,EAAHtkG,UAAAmwB,YAAG,SAAAC,GAAA,IAAHvvB,EAAAnB,KAoDIA,KAnDK0kG,KAAKW,OAASrlG,KAAKqlG,OAElBrlG,KAAK6kG,WAAa7kG,KAAK6kG,UAAU35F,SAAWlL,KAAKykG,WAAYzkG,KAAKykG,SAASv5F,OAO1ElL,KAAS6kG,WAoDd7kG,KAnDK6kG,UAAUxmF,QAAQ,SAACinF,GAoDtBnkG,EAnDKikG,YAAcjkG,EAAKikG,YAAcE,EAASb,SAASv5F,UA2C1DlL,KAnDK6kG,UAAY,CAoDf,CACEJ,SAnDUzkG,KAAKykG,WAsDnBzkG,KAnDKolG,YAAcplG,KAAKykG,SAASv5F,QA0DnC,IAnDIq6F,EAA6B,GAC7BC,EAAgC,GAoDpCxlG,KAnDK6kG,UAAUxmF,QAAQ,SAACinF,GAoDtBA,EAnDSb,SAASpmF,QAAQ,SAAConF,GAoDrBA,EAnDQ9oC,SAoDV4oC,EAnDe98F,KAAKg9F,GAqDpBD,EAnDkB/8F,KAAKg9F,OAuD7BzlG,KAnDKglG,kBAAoBO,EAAer6F,SAAWlL,KAAKolG,YAoDxDplG,KAnDKilG,qBAAuBO,EAAkBt6F,SAAWlL,KAAKolG,YAoD1DplG,KAnDKilG,sBAAwBjlG,KAAK8kG,uBAoDpC9kG,KAnDK6kG,UAAUxmF,QAAQ,SAACinF,GAoDtBA,EAnDSb,SAASpmF,QAAQ,SAAConF,GAoDzBtkG,EAnDKujG,KAAKD,SAASgB,EAAQ9qF,KAAK+qF,QAAS,MAuD/C1lG,KAnDK0kG,KAAKG,UAAc7kG,KAAO6kG,UAmDnC10F,SAKAy0F,EAAAtkG,UAAA8vB,mBAAA,WAAA,IAAAjvB,EAAAnB,KACQA,KArDKgqC,iBAAmBhqC,KAAKgqC,gBAAgB9+B,QAsD/ClL,KArDKgqC,gBAAgB3rB,QAAQ,SAAC8S,GAsD5BhwB,EArDK6mC,UAAUs8D,UAAUnzE,EAASjW,KAAMiW,EAASA,aAKtDyzE,EAAHtkG,UAAAqlG,cAAG,WAAA,IAAHxkG,EAAAnB,KAwDIA,KAvDK0kG,KAAKG,UAAUxmF,QAAQ,SAACinF,GAwD3BA,EAvDSb,SAASpmF,QAAQ,SAAConF,GAwDzBtkG,EAvDKujG,KAAKD,SAASgB,EAAQ9qF,KAAK+qF,QAAS,MA0D7C1lG,KAvDKklG,kBAAmB,EAwDxBllG,KAvDKmlG,uBAAwB,GAG9BP,EAAHtkG,UAAAslG,iBAAG,SAAAC,GAAA,IAAH1kG,EAAAnB,KA2DIA,KA1DK0kG,KAAKG,UAAUxmF,QAAQ,SAACinF,GA2D3BA,EA1DSb,SAASpmF,QAAQ,SAAConF,GAEpBA,EAAQ9oC,WA2DXx7D,EA1DKujG,KAAKD,SAASgB,EAAQ9qF,KAAK+qF,QAAS,GA+DzCG,IACCjsE,QA1DQ+N,QAAQxmC,EAAKujG,KAAKngG,MAAMkhG,EAAQ9qF,SACvC8qF,EAAQxtF,SAAWwtF,EAASxtF,SAAWwtF,EAAQxtF,QAAQ9W,EAAKujG,KAAKD,SAASgB,EAAQ9qF,SA4DpFxZ,EA1DKujG,KAAKD,SAASgB,EAAQ9qF,KAAK+qF,QAAS,GA8DvCvkG,EA1DKujG,KAAKD,SAASgB,EAAQ9qF,KAAK8K,SA2DlCtkB,EA1DKujG,KAAKD,SAASgB,EAAQ9qF,KAAK+qF,QAAS,OA8D/C1lG,KA1DKklG,kBAAmB,EA2DxBllG,KA1DKmlG,uBAAwB,EA2D7BnlG,KA1DK8lG,mBA+DT3lG,OAAAC,eA5DGwkG,EA4DHtkG,UAAA,SAAA,CAAAmD,IAAA,WACI,OA5DOzD,KAAK0kG,KAAO1kG,KAAK0kG,KAAKngG,MAAQ,sCAiEzCpE,OAAAC,eA9DGwkG,EA8DHtkG,UAAA,UAAA,CAAAmD,IAAA,WACI,QA9DOzD,KAAK0kG,MAAO1kG,KAAK0kG,KAAKxX,uCAG9B0X,EAAHtkG,UAAAi/B,cAAG,WAAA,IAAHp+B,EAAAnB,KACQ21C,EAAM,KA2EV,OAVA31C,KAhEK0kG,KAAKG,UAAUxmF,QAAQ,SAACinF,GAiE3BA,EAhESb,SAASpmF,QAAQ,SAAConF,IAiErBtkG,EAhEKujG,KAAKD,SAASgB,EAAQ9qF,KAAKorF,OAASN,EAAQM,SAC9CpwD,IAiEHA,EAhEM,IAkERA,EAhEI8vD,EAAQ9qF,KAAOxZ,EAAKujG,KAAKngG,MAAMkhG,EAAQ9qF,UAI1Cg7B,GAGRivD,EAAHtkG,UAAAwlG,gBAAG,WAAA,IAAH3kG,EAAAnB,KAmEIG,OAlEO44B,KAAK/4B,KAAK0kG,KAAKD,UAAUpmF,QAAQ,SAAC1D,GAmEvC,IAlEI8qF,EAAetkG,EAAKujG,KAAKD,SAAS9pF,GAmElC8qF,EAlEQ9oC,UAAY/iC,QAAQ+N,QAAQxmC,EAAKujG,KAAKngG,MAAMkhG,EAAQ9qF,QAmE9D8qF,EAlEQO,cAmERP,EAlEQQ,sBA3HhB,GA+HOrB,uBAAPriG,WAA2C,CAmE3C,CAlEE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAmEvBC,SAlEU,oBAmEVuwB,SAlEU,mtBAgFVnuB,UAlEW,CAAA0iD,yBAIZk/C,uBAAD9gG,eAAC,WAAA,MAAA,CAqED,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMilD,uBAlEAk/C,uBAAP7gG,eAAgE,CAqEhE0gG,SApEY,CAAA,CAAGhkG,KAAMK,KAAAA,QAqErB+jG,UApEa,CAAA,CAAGpkG,KAAMK,KAAAA,QAqEtB4jG,KApEQ,CAAA,CAAGjkG,KAAMK,KAAAA,QAqEjBukG,OApEU,CAAA,CAAG5kG,KAAMK,KAAAA,QAqEnBgkG,sBApEyB,CAAA,CAAGrkG,KAAMK,KAAAA,QAqElCikG,oBApEuB,CAAA,CAAGtkG,KAAMK,KAAAA,QAqEhCkpC,gBApEmB,CAAA,CAAGvpC,KAAMq2B,KAAAA,gBAAiBn2B,KAAM,CAAA4qC,iBClPnD,IAAA26D,gBAAA,WAsBA,SAAAA,EADsBl+D,GAAAhoC,KAAtBgoC,UAAsBA,EARpBhoC,KAAFmmG,YAAwB,EAKfnmG,KAATklG,kBAAqC,EAC5BllG,KAATmlG,uBAA0C,SAO1ChlG,OAAAC,eAHG8lG,EAGH5lG,UAAA,QAAA,CAAAmD,IAAA,WACI,OAHOzD,KAAK0kG,KAAK0B,+CAQrBjmG,OAAAC,eALG8lG,EAKH5lG,UAAA,UAAA,CAAAmD,IAAA,WACI,OALOzD,KAAK0kG,KAAKxX,uCAUrBgZ,EAAA5lG,UAAA04B,SAAA,WACIh5B,KAPK0kG,KAAKW,OAASrlG,KAAKqlG,QAY5Ba,EAAA5lG,UAAA8vB,mBAAA,WAAA,IAAAjvB,EAAAnB,KACQA,KATKgqC,iBAAmBhqC,KAAKgqC,gBAAgB9+B,QAU/ClL,KATKgqC,gBAAgB3rB,QAAQ,SAAC8S,GAU5BhwB,EATK6mC,UAAUs8D,UAAUnzE,EAASjW,KAAMiW,EAASA,aAKtD+0E,EAAH5lG,UAAAqlG,cAAG,WAAA,IAAHxkG,EAAAnB,KAYIG,OAXO44B,KAAK/4B,KAAK0kG,KAAKD,UAAUpmF,QAAQ,SAAC1D,GAYvCxZ,EAXKujG,KAAKD,SAAS9pF,GAAK+qF,QAAS,IAanC1lG,KAXKklG,kBAAmB,EAYxBllG,KAXKmlG,uBAAwB,GAG9Be,EAAH5lG,UAAAslG,iBAAG,SAAAC,GAAA,IAAH1kG,EAAAnB,KAeIG,OAdO44B,KAAK/4B,KAAK0kG,KAAKD,UAAUpmF,QAAQ,SAAC1D,GAElCxZ,EAAKujG,KAAKD,SAAS9pF,GAAKgiD,WAe3Bx7D,EAdKujG,KAAKD,SAAS9pF,GAAK+qF,QAAS,GAkB/BG,IAdyBjsE,QAAS+N,QAAQxmC,EAAKujG,KAAKngG,MAAMoW,MAe5DxZ,EAdKujG,KAAKD,SAAS9pF,GAAK+qF,QAAS,GAkB/BvkG,EAdKujG,KAAKD,SAAS9pF,GAAK8K,SAe1BtkB,EAdKujG,KAAKD,SAAS9pF,GAAK+qF,QAAS,KAiBrC1lG,KAdKklG,kBAAmB,EAexBllG,KAdKmlG,uBAAwB,EAe7BnlG,KAdK8lG,mBAGNI,EAAH5lG,UAAAwlG,gBAAG,WAAA,IAAH3kG,EAAAnB,KAiBIG,OAhBO44B,KAAK/4B,KAAK0kG,KAAKD,UAAUpmF,QAAQ,SAAC1D,GAiBvC,IAhBI8qF,EAAetkG,EAAKujG,KAAKD,SAAS9pF,GAiBlC8qF,EAhBQ9oC,UAAY/iC,QAAQ+N,QAAQxmC,EAAKujG,KAAKngG,MAAMkhG,EAAQ9qF,QAiB9D8qF,EAhBQO,cAiBRP,EAhBQQ,sBA9EhB,GAkFOC,gBAAP3jG,WAA2C,CAiB3C,CAhBE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAiBvBC,SAhBU,YAiBVuwB,SAhBU,0bA4BVnuB,UAhBW,CAAA0iD,yBAIZwgD,gBAADpiG,eAAC,WAAA,MAAA,CAmBD,CAACrD,KAAMilD,uBAhBAwgD,gBAAPniG,eAAgE,CAmBhE2gG,KAlBQ,CAAA,CAAGjkG,KAAMK,KAAAA,QAmBjBukG,OAlBU,CAAA,CAAG5kG,KAAMK,KAAAA,QAmBnBqlG,WAlBc,CAAA,CAAG1lG,KAAMK,KAAAA,QAmBvBkpC,gBAlBmB,CAAA,CAAGvpC,KAAMq2B,KAAAA,gBAAiBn2B,KAAM,CAAA4qC,iBC5GnD,IAAA86D,gBAAA,SAAAljG,GAmEA,SAAAkjG,EAJG9hG,EAAuBkhG,GAI1B,IAAAtkG,EACIgC,EADJiB,KAAApE,KACUuE,EAAOkhG,EAAQa,WAAYb,EAAQc,kBAD7CvmG,YA1DEmB,EAAFqlG,oBAD2C,IAAInlG,KAAAA,aAgB7CF,EAAFslG,aADwB,GA8CpBtlG,EAAKmlG,WAAab,EAAQa,WAC1BnlG,EAAKulG,aAAeniG,EACpBpD,EAAKslG,aAAah+F,KAAKlE,GACvBpD,EAAKwZ,IAAM8qF,EAAQ9qF,IACnBxZ,EAAK4zB,MAAQ0wE,EAAQ1wE,MACrB5zB,EAAKs9E,SAAWgnB,EAAQhnB,SACxBt9E,EAAKukG,OAASD,EAAQC,OACtBvkG,EAAKwlG,UAAYlB,EAAQkB,UACzBxlG,EAAKooB,OAASk8E,EAAQl8E,OACtBpoB,EAAKV,KAAOglG,EAAQhlG,KACpBU,EAAKylG,QAAUnB,EAAQmB,QACvBzlG,EAAKw7D,SAAW8oC,EAAQ9oC,SACxBx7D,EAAK0lG,qBAAuB1lG,EAAKw7D,SACjCx7D,EAAKw4D,QAAU8rC,EAAQ9rC,QACvBx4D,EAAKwpE,gBAAkB86B,EAAQ96B,gBAC/BxpE,EAAK2lG,YAAcrB,EAAQqB,YAC3B3lG,EAAK4lG,eAAiBtB,EAAQsB,eAC9B5lG,EAAK6lG,mBAAqBvB,EAAQuB,mBAClC7lG,EAAK8lG,oBAAsBxB,EAAQwB,oBACnC9lG,EAAK4zB,MAAQ0wE,EAAQ1wE,MACrB5zB,EAAK+Z,KAAOuqF,EAAQvqF,KACpB/Z,EAAKw7D,SAAW8oC,EAAQ9oC,SACxBx7D,EAAK+lG,UAAYzB,EAAQyB,UACzB/lG,EAAKgmG,YAAc1B,EAAQ0B,YAC3BhmG,EAAK+5B,YAAcuqE,EAAQvqE,YAC3B/5B,EAAKimG,SAAW3B,EAAQ2B,SACxBjmG,EAAK4sF,aAAe0X,EAAQ1X,aAC5B5sF,EAAKkmG,YAAc5B,EAAQ4B,YAC3BlmG,EAAKs9E,SAAWgnB,EAAQhnB,SACxBt9E,EAAKmmG,cAAgB7B,EAAQ6B,cAC7BnmG,EAAKi+F,SAAWqG,EAAQrG,SACxBj+F,EAAKu9D,WAAa+mC,EAAQ/mC,WAC1Bv9D,EAAKomG,eAAiB9B,EAAQ8B,eAC9BpmG,EAAKmuC,UAAYm2D,EAAQn2D,UACzBnuC,EAAKouC,QAAUk2D,EAAQl2D,QACvBpuC,EAAKu8F,gBAAkB+H,EAAQ/H,gBAC/Bv8F,EAAKu8F,gBAAkB+H,EAAQ/H,gBAC/Bv8F,EAAK48F,YAAc0H,EAAQ1H,YAC3B58F,EAAKw8F,iBAAmB8H,EAAQ9H,iBAChCx8F,EAAKu+D,UAAY+lC,EAAQ/lC,UACzBv+D,EAAKqmG,UAAY/B,EAAQ+B,UACzBrmG,EAAKo3B,cAAgBktE,EAAQltE,cAC7Bp3B,EAAKsmG,aAAehC,EAAQgC,aAC5BtmG,EAAKumG,cAAgBjC,EAAQiC,cAC7BvmG,EAAKwmG,0BAA4BlC,EAAQkC,0BACzCxmG,EAAK6lD,aAAey+C,EAAQz+C,aACxB7lD,EAAK6lD,cACPhlD,OAAO,qEAETb,EAAK2qF,qBAAuB2Z,EAAQ3Z,qBACpC3qF,EAAK29C,YAAc2mD,EAAQ3mD,YAC3B39C,EAAKm7B,QAAUmpE,EAAQnpE,QACvBn7B,EAAKymG,QAAUnC,EAAQmC,QACvBzmG,EAAK0mG,oBAAsBpC,EAAQoC,oBAG/B1mG,EAAKs9E,SACPt9E,EAAK2mG,UAEL3mG,EAAKo5D,WA4HX,OArPC/2D,UAAD6iG,EAAAljG,GA6HGkjG,EAAH/lG,UAAAimD,KAAG,SAAAtqB,QAAH,IAAAA,IAAGA,GAAH,GAKIj8B,KAJK0lG,QAAS,EAKVzpE,GACFj8B,KAJK41D,SAAS,OAOjBywC,EAAH/lG,UAAAqD,KAAG,WAKC3D,KAJK0lG,QAAS,GAOfW,EAAH/lG,UAAAynG,YAAG,SAAA1qC,GAOC,GAFAr9D,KAJK28D,SAAWU,EAMZr9D,KAJK28D,WAAY38D,KAAM6mG,sBACrBP,EAAoBtmG,KAAOsmG,WAIrCn2F,SAHiB1H,KAAKu/F,MAAAA,WAAWrrC,UAM3B38D,KAJKioG,cAAc3B,GAKnBtmG,KAJKkoG,uBAAuB,CAAEC,WAAW,IAKzCnoG,KAJK6mG,qBAAuB7mG,KAAK28D,cAC5B,IAAK38D,KAAK28D,UAAY38D,KAAK6mG,qBAAsB,CAKtD,IAJIP,EAKJA,GALIA,EAAoBtmG,KAAOsmG,WAIrCn2F,SAH8BiM,OAAO,SAACnT,GAAQ,OAAAA,IAAQ++F,MAAAA,WAAWrrC,WAM3D38D,KAJKioG,cAAc3B,GAKnBtmG,KAJKkoG,uBAAuB,CAAEC,WAAW,IAKzCnoG,KAJK6mG,qBAAuB7mG,KAAK28D,WAcpC0pC,EAAH/lG,UAAAs1D,SAAG,SACCrxD,EACAq+B,GAFD,IAAHzhC,EAAAnB,KAEIgjC,OAAJ,IAAAJ,EAAA,GAAAA,EACMwlE,EADNplE,EAAAolE,SAEMD,EAFNnlE,EAAAmlE,UAGME,EAHNrlE,EAAAqlE,sBAIMC,EAJNtlE,EAAAslE,sBAYItoG,KAAKgmG,cACLhmG,KAAKimG,gBACLjmG,KAAKwmG,oBAAoBzkG,KAAKwC,GAC9BpB,EAAJ7C,UAAUs1D,SAAVxxD,KAAApE,KAAmBuE,EAAO,CAAE6jG,SAA5BA,EAAsCD,UAAtCA,EAAiDE,sBAAjDA,EAAwEC,sBAAxEA,IAGIpuE,aAAal6B,KAAKuoG,gBAClBvoG,KAAKuoG,eAAiB93F,WAAW,WAC/BtP,EAAKslG,aAAah+F,KAAKlE,IACtB,MAOJ8hG,EAAH/lG,UAAAo+E,YAAG,SAAA8pB,GACCxoG,KAAKy+E,SAAW+pB,EACZxoG,KAAKy+E,SACPz+E,KAAK8nG,UAEL9nG,KAAKu6D,UAUR8rC,EAAH/lG,UAAAwnG,QAAG,SAAAW,QAAH,IAAAA,IAAGA,EAAH,CAAGN,WAAA,IAC+B,oBAAnBM,EAAKN,YAEdM,EADKN,WAAY,GAGnBhlG,EAAJ7C,UADUwnG,QACV1jG,KAAApE,KADkByoG,IAGfpC,EAAH/lG,UAAAi6D,OAAG,SAAAkuC,QAAH,IAAAA,IAAGA,EAAH,CAAGN,WAAA,IAC+B,oBAAnBM,EAAKN,YAKdM,EAJKN,WAAY,GAMnBhlG,EAAJ7C,UAJUi6D,OAIVn2D,KAAApE,KAJiByoG,IAWjBpC,EAAA/lG,UAAAooG,cAAA,SAJGjwF,GAKCzY,KAJKgmG,cAKLhmG,KAJKimG,gBAKLjmG,KAJK2oG,UAAUxoG,OAAO24B,OAAO,GAAI94B,KAAKylB,OAAQ,CAAEy+E,OAAQzrF,MAM5D4tF,EA5PA,CAOCuC,MAAAA,aAuPDC,cAAA,SAAA1lG,GAuGA,SAAA0lG,IAAA,IAAA1nG,EAAAgC,EAAAC,MAAApD,KAAAqD,YAAArD,YA1GSmB,EAAT2nG,uBAAwE,IAAIznG,KAAAA,eA+H5E,OAhICmC,UAADqlG,EAAA1lG,GAsHAhD,OAAAC,eA9GGyoG,EA8GHvoG,UAAA,QAAA,CAAAmD,IAAA,WACI,OA9GOzD,KAAKomG,eAoHhB1iG,IAAA,SAjHG+lC,GAkHCzpC,KAjHKsjB,OAASmmB,mCAmHlBo/D,EA5HA,CAJCE,MAAAA,WCtPDC,YA0JA,SAJGvoG,EAAyC8oB,QAA5C,IAAA9oB,IAAGA,EAAH,oBAAA,IAAA8oB,IAA4CA,EAA5C,IAhEEvpB,KAAFipG,OADmB,cAsEfjpG,KAAKipG,OAASxoG,EACdT,KAAKkpG,SAAW3/E,EAChBvpB,KAAKsmG,WAAa/8E,EAAO+8E,YAAc,GACvCtmG,KAAKumG,gBAAkBh9E,EAAOg9E,iBAAmB,GACjDvmG,KAAKuE,MAAQglB,EAAOhlB,MACpBvE,KAAK2a,IAAM4O,EAAO5O,KAAO,GACzB3a,KAAK+0B,MAAQxL,EAAOwL,OAAS,GAC7B/0B,KAAK0nG,cAAgBn+E,EAAOm+E,cAC5B1nG,KAAKkb,KAAOqO,EAAOrO,MAAQ,GAC3Blb,KAAK28D,WAAapzC,EAAOozC,SACzB38D,KAAK0lG,SAAWn8E,EAAOm8E,OACvB1lG,KAAK2mG,YAAcp9E,EAAOo9E,UAC1B3mG,KAAKknG,UAAY39E,EAAO29E,YAAc//F,UAAY,EAAIoiB,EAAO29E,UAC7DlnG,KAAKmnG,YAAc59E,EAAO49E,aAAe,GACzCnnG,KAAKk7B,YAAc3R,EAAO2R,aAAe,GACzCl7B,KAAKupB,OAASA,EAAOA,QAAU,KAC/BvpB,KAAK+lG,QAAUx8E,EAAOhlB,MACtBvE,KAAKonG,WAAa79E,EAAO69E,SACzBpnG,KAAK+tF,aAAexkE,EAAOwkE,cAAgB,KAC3C/tF,KAAKunG,eAAiBh+E,EAAOg+E,gBAAkB,KAC/CvnG,KAAKmpG,iBAAmB5/E,EAAO4/E,kBAAoB,KACnDnpG,KAAKqnG,YAAc99E,EAAO89E,aAAe,KACzCrnG,KAAKs8B,QAAU/S,EAAO+S,SAAW,GACjCt8B,KAAKopG,WAAa,IAAI/nG,KAAAA,aACtBrB,KAAKy+E,WAAal1D,EAAOk1D,YAAcl1D,EAAOrnB,SAC9ClC,KAAKkC,WAAaqnB,EAAOrnB,SACzBlC,KAAKsnG,cAAgB/9E,EAAO+9E,eAAiB,GAC7CtnG,KAAKo/F,WAAa71E,EAAO61E,SACzBp/F,KAAK0+D,WAAan1C,EAAOm1C,WACzB1+D,KAAK09F,gBAAkBn0E,EAAOm0E,gBAC9B19F,KAAK+9F,YAAcx0E,EAAOw0E,YAC1B/9F,KAAK29F,iBAAmBp0E,EAAOo0E,iBAC/B39F,KAAKsvC,UAAY/lB,EAAO+lB,UACxBtvC,KAAKuvC,QAAUhmB,EAAOgmB,QACtBvvC,KAAK2nG,4BAA8Bp+E,EAAOo+E,0BAEtC3nG,KAAK28D,UACP38D,KAAKsmG,WAAW79F,KAAKu/F,MAAAA,WAAWrrC,UAE7B/iC,QAAQ+N,QAAQpe,EAAOm2C,aAC1B1/D,KAAK0/D,UAAYn2C,EAAOm2C,UACxB1/D,KAAKsmG,WAAW79F,KAAKu/F,MAAAA,WAAWqB,UAAUrpG,KAAK0/D,aAE5C9lC,QAAQ+N,QAAQpe,EAAOi+E,aAC1BxnG,KAAKwnG,UAAYj+E,EAAOi+E,UACxBxnG,KAAKsmG,WAAW79F,KAAKu/F,MAAAA,WAAWtqC,UAAU19D,KAAKwnG,aAEjDxnG,KAAKu4B,gBAAkBhP,EAAOgP,cAC9Bv4B,KAAKynG,aAAel+E,EAAOk+E,aAC3BznG,KAAKspG,mBAAqB//E,EAAO+/E,mBACjCtpG,KAAKupG,SAAWhgF,EAAOggF,SACvBvpG,KAAKgnD,eAAiBz9B,EAAOy9B,aACzBhnD,KAAKgnD,cACPhlD,OAAO,qEAEThC,KAAK8rF,qBAAuBviE,EAAOuiE,qBACnC9rF,KAAK8+C,YAAcv1B,EAAOu1B,YACtBv1B,EAAOowC,UACT35D,KAAK25D,QAAUpwC,EAAOowC,QACtB35D,KAAK2qE,gBAAkBphD,EAAOohD,gBAC9B3qE,KAAK8mG,YAAcv9E,EAAOu9E,YAC1B9mG,KAAK+mG,eAAiBx9E,EAAOw9E,eAC7B/mG,KAAKgnG,mBAAqBz9E,EAAOy9E,mBACjChnG,KAAKinG,oBAAsB19E,EAAO09E,qBAEpCjnG,KAAKmxB,SAAW5H,EAAO4H,SACvBnxB,KAAK6nG,oBAAsBt+E,EAAOs+E,oBAClC7nG,KAAK4nG,QAAUr+E,EAAOq+E,QACtB5nG,KAAKysC,MAAQljB,EAAOkjB,MACpBzsC,KAAKq9E,eAAiB9zD,EAAO8zD,aACzB9zD,EAAOk5E,4BACTziG,KAAKyiG,0BAA4Bl5E,EAAOk5E,2BAEtCl5E,EAAOtR,UACTjY,KAAKiY,QAAUsR,EAAOtR,UCzOtBuxF,YAAc,WACdC,SAAW,KACjBC,eAAA,WAAA,SAAAA,KA2IA,OAvIGA,EAAHppG,UAAAqpG,sBAAG,SAAAC,EAAAnE,GAGC,MAFoB,UAAbmE,IAGJhwE,QAFQ3hB,QAAQwtF,EAAQl8E,OAAOnjB,QAGhCq/F,EAFQl8E,OAAOnjB,MAAMu2D,UAGrB/iC,QAFQ+N,QAAQ89D,EAAQlhG,MAAM6B,QAG9Bq/F,EAFQl8E,OAAOnjB,MAAMyjG,UAGpBjwE,QAFQ+N,QAAQ89D,EAAQlhG,MAAMulG,cAG/BrE,EAFQl8E,OAAOnjB,MAAM2jG,cAGrBtE,EAFQl8E,OAAOnjB,MAAM2jG,aAAapuB,gBACwB,EAE1D8pB,EAFQl8E,OAAOnjB,MAAM2jG,aAAapuB,eAAezwE,QAIpDw+F,EAAHM,WAIA,SAJGvE,GAKC,OAJOA,EAAQlhG,MAAQilG,YAAc,KAAO,CAAES,iBAAmB,IAIlEP,EAAHpS,QAMA,SANGmO,GAOC,OANKA,EAAQlhG,MAGNkhG,EAAQlhG,OAASklG,SAAW,KAAO,CAAEnS,SAAW,GAF9C,MAMVoS,EAAHQ,UAQA,SARGzE,GASC,OAROA,EAAQlhG,MAAQyF,OAAOmgG,iBAAmB,KAAO,CAAEC,gBAAkB,IAI7EV,EAAHW,QAUA,SAVG5E,GAYC,OAVOA,EAASlhG,OADG,oGACmB4uD,KAAKsyC,EAAQlhG,OAAS,KAAO,CAAEk5D,cAAgB,IAGtFisC,EAAHY,eAaA,SAbG7E,GAcC,IAZI8E,EAAiC,GACjCC,EAA4B,GAC5BC,EAMA,KACAC,GAA0B,EAkC9B,GAAIjF,EAbQlhG,OAASkhG,EAAQl8E,OAAQ,CAcnC,IAbIohF,GAAQ,EACRC,GAAe,EA4DnB,MA7FwB,CAAA,WAAa,WAAY,OAAQ,QAAS,MAAO,aAkC/DvsF,QAAQ,SAACurF,GAfO,IAAWiB,EAREA,EAwBhCjxE,QAAQ3hB,QAAQwtF,EAAQl8E,OAAOqgF,QACiB,IAA7C,CAAC,YAAa,SAAShiG,QAAQgiG,IAcnCnE,EAbQl8E,OAAOqgF,GAAUjtC,WAcxB/iC,QAbQ+N,QAAQ89D,EAAQlhG,MAAMqlG,KAc/BhwE,QAbQ3hB,QAAQwtF,EAAQlhG,MAAMqlG,MA5BGiB,EA6BCpF,EA5BpB,cA4BUmE,IAd3BhwE,QAbQ3hB,QAAQ4yF,EAAKthF,OAAOuhF,YAc7BD,EAbKthF,OAAOuhF,UAAUnuC,UActB/iC,QAbQ+N,QAAQkjE,EAAKtmG,MAAMulG,cAc3Be,EAbKthF,OAAOuhF,UAAUjB,WAGagB,EAsBCpF,EArBlB,UAqBQmE,IAPzBhwE,QAbQ3hB,QAAQ4yF,EAAKthF,OAAOnjB,QAc7BykG,EAbKthF,OAAOnjB,MAAMu2D,UAclB/iC,QAbQ+N,QAAQkjE,EAAKtmG,MAAM6B,QAc3BykG,EAbKthF,OAAOnjB,MAAMyjG,UAcjBjwE,QAbQ+N,QAAQkjE,EAAKtmG,MAAMulG,cAc5Be,EAbKthF,OAAOnjB,MAAM2jG,cAclBc,EAbKthF,OAAOnjB,MAAM2jG,aAAapuB,gBACwB,EAavDkvB,EAbKthF,OAAOnjB,MAAM2jG,aAAapuB,eAAezwE,WA2B1Cy/F,GAbQ,EAcRJ,EAbqB9hG,KAAKg9F,EAAQl8E,OAAOqgF,GAAU70E,UAElC,cAAb60E,GAA4BnE,EAAQl8E,OAAOqgF,GAAUjtC,UAczD/iC,QAbQ3hB,QAAQwtF,EAAQlhG,MAAMqlG,KAChB,cAabA,IACEhwE,QAbQ3hB,QAAQwtF,EAAQl8E,OAAOuhF,YAchCrF,EAbQl8E,OAAOuhF,UAAUnuC,UAczB/iC,QAbQ3hB,QAAQwtF,EAAQlhG,MAAMulG,eACjB,UAAbF,IAcChwE,QAbQ+N,QAAQ89D,EAAQlhG,MAAMulG,cAc/BrE,EAbQl8E,OAAOnjB,MAAM2jG,cAcrBtE,EAbQl8E,OAAOnjB,MAAM2jG,aAAapuB,gBAC0B,IAa5D8pB,EAbQl8E,OAAOnjB,MAAM2jG,aAAapuB,eAAezwE,SAcnD0/F,GAbe,IAEZhxE,QAAQ3hB,QAAQwtF,EAAQl8E,OAAOqgF,GAAUlqC,aAAc9lC,QAAS3hB,QAAQwtF,EAAQlhG,MAAMqlG,KAczFnE,EAbQlhG,MAAMqlG,GAAU1+F,OAASu6F,EAAQl8E,OAAOqgF,GAAUlqC,YAc1DgrC,GAbiB,EAcjBF,EAbgB/hG,KAAKmhG,GAcrBgB,GAbe,MAIhBD,GAASC,IAAiBF,IAc7BD,EAbY,IAETE,IAcHF,EAbUjtC,gBAAiB,EAc3BitC,EAbUF,qBAAuBA,GAE9BK,IAcHH,EAbUM,uBAAwB,GAehCL,IACFD,EAbU/qC,WAAY,EActB+qC,EAbUD,gBAAkBA,GAEvBC,EAeT,OAbO,MAgBXf,EA3IA,GCFAsB,eAAA,SAAA7nG,GAOA,SAAA6nG,EAHKzhF,GAGL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,iBAAkBupB,IADhCvpB,YAJImB,EAAJgmG,YAAkB,UAMVhmG,EAAKmlG,WAAW79F,KAAKihG,eAAeY,kBAE5C,OATC9mG,UAADwnG,EAAA7nG,GASA6nG,EAXA,CAEChC,aCFDiC,iBAAA,SAAA9nG,GAMA,SAAA8nG,EAFK1hF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,mBAAoBupB,IADlCvpB,YAJImB,EAAJgmG,YAAkB,YAMVhmG,EAAKm7B,QAAU/S,EAAO+S,SAAW,KAEzC,OATC94B,UAADynG,EAAA9nG,GASA8nG,EAVA,CACCjC,aCDDkC,gBAAA,SAAA/nG,GAMA,SAAA+nG,EAFK3hF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,kBAAmBupB,IADjCvpB,YAJImB,EAAJgmG,YAAkB,aAOlB,OARC3jG,UAAD0nG,EAAA/nG,GAQA+nG,EATA,CACClC,aCDDmC,YAAA,SAAAhoG,GAMA,SAAAgoG,EAFK5hF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,cAAeupB,IAD7BvpB,YAJImB,EAAJgmG,YAAkB,SAOlB,OARC3jG,UAAD2nG,EAAAhoG,GAQAgoG,EATA,CACCnC,aCDDoC,gBAAA,SAAAjoG,GAMA,SAAAioG,EAFK7hF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,kBAAmBupB,IADjCvpB,YAJImB,EAAJgmG,YAAkB,cAOlB,OARC3jG,UAAD4nG,EAAAjoG,GAQAioG,EATA,CACCpC,aCDDqC,cAAA,SAAAloG,GAOA,SAAAkoG,EAFK9hF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,gBAAiBupB,IAD/BvpB,YALImB,EAAJgmG,YAAkB,SACdhmG,EAAJiiG,SAAuB,IAOvB,OATC5/F,UAAD6nG,EAAAloG,GASAkoG,EAVA,CACCrC,aCDDsC,iBAAA,SAAAnoG,GAMA,SAAAmoG,EAFK/hF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,mBAAoBupB,IADlCvpB,YAJImB,EAAJgmG,YAAkB,eAOlB,OARC3jG,UAAD8nG,EAAAnoG,GAQAmoG,EATA,CACCtC,aCDDuC,YAAA,SAAApoG,GAMA,SAAAooG,EAFKhiF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,cAAeupB,IAD7BvpB,YAJImB,EAAJgmG,YAAkB,OAOVhmG,EAAK+5B,YAAc3R,EAAO2R,YAC1B/5B,EAAKimG,SAAW79E,EAAO69E,WAE/B,OAXC5jG,UAAD+nG,EAAApoG,GAWAooG,EAZA,CACCvC,aCDDwC,oBAAA,SAAAroG,GAOA,SAAAqoG,EAFKjiF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,sBAAuBupB,IADrCvpB,YALImB,EAAJgmG,YAAkB,gBACdhmG,EAAJm7B,QAAc,GAMNn7B,EAAKm7B,QAAU/S,EAAO+S,SAAW,KAEzC,OAVC94B,UAADgoG,EAAAroG,GAUAqoG,EAXA,CACCxC,aCDDyC,cAAA,SAAAtoG,GAOA,SAAAsoG,EAFGliF,GAEH,IAAApoB,EACIgC,EADJiB,KAAApE,KACU,gBAAiBupB,IAD3BvpB,YALEmB,EAAFgmG,YAAgB,SACdhmG,EAAFm7B,QAAY,GAMRn7B,EAAKm7B,QAAU/S,EAAO+S,SAAW,KAErC,OAVC94B,UAADioG,EAAAtoG,GAUAsoG,EAXA,CACCzC,aAYD0C,mBAAA,SAAAvoG,GAWA,SAAAuoG,EAZGniF,GAYH,IAAApoB,EACIgC,EADJiB,KAAApE,KACUG,OAAO24B,OAAOvP,EAAQ,CAAEuiE,qBAAsB,uBADxD9rF,YAEImB,EAAK8nG,OAAS,uBAElB,OAjBCzlG,UAADkoG,EAAAvoG,GAiBAuoG,EAfA,CAFCD,eCXDE,iBAAA,SAAAxoG,GAOA,SAAAwoG,EAFKpiF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,mBAAoBupB,IADlCvpB,YALImB,EAAJgmG,YAAkB,aACdhmG,EAAJm7B,QAAc,GAMNn7B,EAAKm7B,QAAU/S,EAAO+S,SAAW,KAEzC,OAVC94B,UAADmoG,EAAAxoG,GAUAwoG,EAXA,CACC3C,aCDD4C,aAAA,SAAAzoG,GAOA,SAAAyoG,EAFKriF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,eAAgBupB,IAD9BvpB,YALImB,EAAJgmG,YAAkB,QACdhmG,EAAJm7B,QAAc,GAMNn7B,EAAKm7B,QAAU/S,EAAO+S,SAAW,KAEzC,OAVC94B,UAADooG,EAAAzoG,GAUAyoG,EAXA,CACC5C,aCDD6C,gBAAA,SAAA1oG,GAMA,SAAA0oG,EAFKtiF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,kBAAmBupB,IADjCvpB,YAJImB,EAAJgmG,YAAkB,YAMV59E,EAAOk1D,UAAW,IAE1B,OATCj7E,UAADqoG,EAAA1oG,GASA0oG,EAVA,CACC7C,aCDD8C,cAAA,SAAA3oG,GAOA,SAAA2oG,EAFKviF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,gBAAiBupB,IAD/BvpB,YALImB,EAAJgmG,YAAkB,SACdhmG,EAAJm7B,QAAc,GAMNn7B,EAAKm7B,QAAU/S,EAAO+S,SAAW,GACjCn7B,EAAK+5B,YAAc3R,EAAO2R,aAAe,KAEjD,OAXC13B,UAADsoG,EAAA3oG,GAWA2oG,EAZA,CACC9C,aCDD+C,gBAAA,SAAA5oG,GAMA,SAAA4oG,EAFKxiF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,kBAAmBupB,IADjCvpB,YAJImB,EAAJgmG,YAAkB,cAOlB,OARC3jG,UAADuoG,EAAA5oG,GAQA4oG,EATA,CACC/C,aCDDgD,eAAA,SAAA7oG,GASA,SAAA6oG,EAFKziF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,iBAAkBupB,IADhCvpB,YANImB,EAAJgmG,YAA0B,UAQlBhmG,EAAKV,KAAOU,EAAK8qG,eAAe1iF,EAAO9oB,OAAS,GAChDU,EAAKylG,QAAUr9E,EAAO9oB,MAAQ,GAC9BU,EAAK8mG,cAAc9mG,EAAKylG,WAyChC,OApDCpjG,UAADwoG,EAAA7oG,GAiBA6oG,EAAA1rG,UAAA2nG,cAAA,SALKxnG,GAMG,OAAQA,GACJ,IALK,QAMDT,KALKsmG,WAAW79F,KAAKihG,eAAeW,SAMpC,MACJ,IALK,SAML,IALK,WAMDrqG,KALKsmG,WAAW79F,KAAKihG,eAAeM,YAMpC,MACJ,IALK,QAML,IALK,aAMDhqG,KALKsmG,WAAW79F,KAAKihG,eAAeQ,WAMpC,MACJ,IALK,OAMDlqG,KALKsmG,WAAW79F,KAAKihG,eAAepS,WAepD0U,EAAA1rG,UAAA2rG,eAAA,SARKxrG,GASG,OAAQA,GACJ,IARK,aASL,IARK,WASL,IARK,QASL,IARK,OASD,MARO,SASX,QACI,OAROA,IAWvBurG,EAtDA,CAEChD,aCFDkD,aAAA,SAAA/oG,GAOA,SAAA+oG,EAFK3iF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,eAAgBupB,IAD9BvpB,YALImB,EAAJgmG,YAAkB,QACdhmG,EAAJm7B,QAAc,GAMNn7B,EAAKm7B,QAAU/S,EAAO+S,SAAW,KAEzC,OAVC94B,UAAD0oG,EAAA/oG,GAUA+oG,EAXA,CACClD,aCDDmD,YAAA,SAAAhpG,GAMA,SAAAgpG,EAFK5iF,GAEL,IAAApoB,EACQgC,EADRiB,KAAApE,KACc,cAAeupB,IAD7BvpB,YAJImB,EAAJgmG,YAAkB,SAOlB,OARC3jG,UAAD2oG,EAAAhpG,GAQAgpG,EATA,CACCnD,aCADoD,eAMA,SAFK7iF,GAEL,IAAApoB,EAAAnB,KACQA,KAAKipG,OAAS,iBACd9oG,OAAO44B,KAAKxP,GAAQlL,QAAQ,SAAA1D,GAAO,OAAAxZ,EAAKwZ,GAAO4O,EAAO5O,MCN9D0xF,eAAA,WAAA,SAAAA,KAiDA,OA/CGA,EAAHjiG,OAIA,SAJG3J,EAAA8oB,GAKC,OAAQ9oB,GACN,IAJK,iBAKH,OAJO,IAAIuqG,eAAezhF,GAK5B,IAJK,kBAKH,OAJO,IAAI2hF,gBAAgB3hF,GAK7B,IAJK,mBAML,IAJK,mBAKH,OAJO,IAAI0hF,iBAAiB1hF,GAK9B,IAJK,kBAKH,OAJO,IAAI6hF,gBAAgB7hF,GAK7B,IAJK,gBAKH,OAJO,IAAI8hF,cAAc9hF,GAK3B,IAJK,cAKH,OAJO,IAAIgiF,YAAYhiF,GAKzB,IAJK,sBAKH,OAJO,IAAIiiF,oBAAoBjiF,GAKjC,IAJK,gBAKH,OAJO,IAAIkiF,cAAcliF,GAK3B,IAJK,qBAKH,OAJO,IAAImiF,mBAAmBniF,GAKhC,IAJK,mBAKH,OAJO,IAAIoiF,iBAAiBpiF,GAK9B,IAJK,eAKH,OAJO,IAAIqiF,aAAariF,GAK1B,IAJK,kBAKH,OAJO,IAAIsiF,gBAAgBtiF,GAK7B,IAJK,kBAKH,OAJO,IAAIwiF,gBAAgBxiF,GAK7B,IAJK,iBAKH,OAJO,IAAIyiF,eAAeziF,GAK5B,IAJK,gBAKH,OAJO,IAAIuiF,cAAcviF,GAK3B,IAJK,eAKH,OAJO,IAAI2iF,aAAa3iF,GAK1B,IAJK,cAKH,OAJO,IAAI4iF,YAAY5iF,GAKzB,QAEE,OADA0c,QAJQslD,KAAK,sHAAuH9qF,GAC7H,OAOf4rG,EAjDA,GCHAC,cAAA,SAAAnpG,GAMA,SAAAmpG,EAFG/iF,GAEH,IAAApoB,EACIgC,EADJiB,KAAApE,KACUupB,EAAO4H,SAAU5H,IAD3BvpB,YAJEmB,EAAFgmG,YAAgB,SAMZhmG,EAAKgmG,YAAc59E,EAAO4H,WAE9B,OATC3tB,UAAD8oG,EAAAnpG,GASAmpG,EAVA,CACCtD,aCDDzjD,eAAA,WAAA,SAAAA,YASAA,EAAAjlD,UAAAisG,iBAAA,SALGtrD,EAAA/jB,EAAA3T,GAMC,MALO,CAML2T,MALO,QAMPC,OALQ,SAMRb,QALS,SAAApN,GAMP,OALO,IAAIgsB,QAAQ,SAACC,EAASiI,GAMvBl0B,GALSA,EAAMhkB,OAMjB+1C,EALKx9C,IAAKy5B,EAAQsvE,WAK9BvrD,YALyC/xB,GAAmB,KAAM7gB,UAAU8sC,EAASiI,GAOzEjI,EALQ,WAbpB,GAmBOoK,eAAPhjD,WAA2C,CAM3C,CALE9B,KAAMqjC,KAAAA,aAGPyhB,eAADzhD,eAAC,WAAA,MAAA,ICnBD,IAAAqtD,UAAA,WAoDA,SAAAA,EAHqBj5B,EAAiCu0E,GAAjCzsG,KAArBk4B,OAAqBA,EAAiCl4B,KAAtDysG,eAAsDA,EAvBpDzsG,KAAF0sG,uBAAqC,CACjC,YACA,gBACA,oBACA,OACA,cACA,WACA,gBACA,SACA,aAEF1sG,KAAF2sG,iBAA+B,CAC3B,gBACA,aACA,oBACA,wBACA,WACA,kBACA,eACA,oBACA,qBAYJx7C,EAAA7wD,UAAAssG,YAAA,SAPGnI,GAQC,IAPIllF,EAAa,GAYjB,OAJAklF,EAPSpmF,QAAQ,SAAConF,GAQhB,IAPIlhG,EAAQq1B,QAAQ+N,QAAQ89D,EAAQlhG,OAAS,GAAKkhG,EAAQlhG,MAQ1Dgb,EAPMkmF,EAAQ9qF,KAAO,IAAI0rF,gBAAgB9hG,EAAOkhG,KAE3C,IAAIoD,cAActpF,IAY7B4xC,EAAA7wD,UAAAusG,eAAA,WACI,OATO,IAAIhE,cAAc,KAgB7B13C,EAAA7wD,UAAAwsG,YAAA,SAbGC,EAAAtI,GAcCA,EAbSpmF,QAAQ,SAAConF,GAchB,IAbIlhG,EAAQq1B,QAAQ+N,QAAQ89D,EAAQlhG,OAAS,GAAKkhG,EAAQlhG,MACtDyoG,EAAc,IAAI3G,gBAAgB9hG,EAAOkhG,GAc7CsH,EAbUE,WAAWxH,EAAQ9qF,IAAKqyF,MAqBxC77C,EAAA7wD,UAAA4sG,wBAAA,SAZGrI,GAaC,IAZIJ,EAAmC,GAgBvC,OAHAI,EAZUxmF,QAAQ,SAACinF,GAajBb,EAZSh8F,KAYfrF,MAAMqhG,EAZea,EAAWb,YAErBzkG,KAAK4sG,YAAYnI,IAmB5BtzC,EAAA7wD,UAAA6sG,mBAAA,SAXGjwE,GAsBC,IAXIz8B,EACA2sG,EAA4B,CAY9BC,SAXU,WAYVC,KAXM,OAYNC,MAXO,WAYPC,WAXY,aAYZC,KAXM,SAYNC,eAXgB,iBAYhBC,KAXM,QAEJC,EAAoB,CAYtBC,UAXW,OAYX1lG,KAXM,OAYN6S,QAXS,SAEP8yF,EAAqB,CAYvBC,SAXU,QAYVC,MAXO,QAYPC,OAXQ,SAYRC,MAXO,SAELC,EAA0B,CAY5BJ,SAXU,YAYVC,MAXO,YAYPC,OAXQ,SAENG,EAAgB,CAYlBC,KAXM,OAYNC,UAXW,WAETC,EAA0B,CAY5BC,OAXQ,QAYRC,WAXY,QAYZC,QAXS,UAgDX,MA9CmB,YAWfxxE,EAXMz8B,KAaNA,EADEy8B,EAXMisE,mBAAoBnpG,KAAM0sG,uBAAuB9kG,QAAQs1B,EAAMisE,iBAAiBwF,QACjF,cAEA,QAEe,WAAnBzxE,EAAUz8B,KAabA,EADEy8B,EAXMisE,mBAAoBnpG,KAAM0sG,uBAAuB9kG,QAAQs1B,EAAMisE,iBAAiBwF,QACjF,eAEA,SAEJzxE,EAAUsvE,YAAkC,WAApBtvE,EAAM0xE,UAajCnuG,EADEy8B,EAXMmqE,cAAernG,KAAM2sG,iBAAiB/kG,QAAQs1B,EAAMmqE,aACrD,eAEA,UAE2E,EAA/ElnG,OAAW44B,KAAKq0E,GAA2BxlG,QAAQs1B,EAAMosE,oBAY9D7oG,EAXO2sG,EAA0BlwE,EAAMosE,qBAC2B,EAA7DnpG,OAAW44B,KAAK60E,GAAmBhmG,QAAQs1B,EAAMqsE,UAYtD9oG,EAXOmtG,EAAkB1wE,EAAMqsE,UACF,aAAxBrsE,EAAU0xE,UAYfnuG,EAXO,WACFy8B,EAAUZ,UAAsE,EAA3Dn8B,OAAO44B,KAAK+0E,GAAoBlmG,QAAQs1B,EAAM0xE,aAAmB1xE,EAAO2xE,WAYlGpuG,EAXOqtG,EAAmB5wE,EAAM0xE,WAC3B1xE,EAAUZ,UAA2E,EAAhEn8B,OAAO44B,KAAKo1E,GAAyBvmG,QAAQs1B,EAAM0xE,YAAmB1xE,EAAM2xE,WAYtGpuG,EAXO0tG,EAAwBjxE,EAAM0xE,YACqB,EAArDzuG,OAAW44B,KAAKq1E,GAAexmG,QAAQs1B,EAAMz8B,MAYlDA,EAXO2tG,EAAclxE,EAAMz8B,OAC6C,EAAnEN,OAAW44B,KAAKw1E,GAAyB3mG,QAAQs1B,EAAMqsE,YAY5D9oG,EAXO8tG,EAAwBrxE,EAAMqsE,WAIhC9oG,GAiBX0wD,EAAA7wD,UAAAwuG,iBAAA,SAdGn0F,GAeC,OAdwC,EAAjCA,EAAI/S,QAAQ,oBAwBvBupD,EAAA7wD,UAAAyuG,mBAAA,SACI7xE,EACA+jB,EACA13B,EACAylF,EACAC,QAAJ,IAAAA,IAAIA,GAAJ,GAII,IApBIxJ,EA0CAyJ,EA3CAzuG,EAAeT,KAAKmtG,mBAAmBjwE,IAAUA,EAAMz8B,KAEvD0uG,EAAmC,CAsBrC1uG,KArBMA,EAsBNka,IArBKuiB,EAAMhiB,KAsBX6Z,MArBOmI,EAAMnI,MAsBbmG,YArBagC,EAAM+1D,MAAQ,GAsB3Bt2B,SArBUz/B,EAAMy/B,SAsBhB+oC,QArBQxoE,EAAOy/B,SAsBfgqC,UArBW3mG,KAAK8uG,iBAAiB5xE,EAAMhiB,KAAOgiB,EAAMhiB,KAAK63B,WAAa,IAsBtExuC,MArBO24B,EAAM34B,OAAS24B,EAAMllB,aAsB5BkvF,UArBWhqE,EAAMgqE,UAsBjBiC,iBArBkBjsE,EAAMisE,iBAsBxB9B,YArBanqE,EAAMmqE,YAsBnBD,SArBUlqE,EAAM2xE,WAsBhBpwB,WArBYvhD,EAAMh7B,YAAcg7B,EAAMuhD,SAsBtC/e,UArBWxiC,EAAMmsE,UAsBjB5B,aArBcvqE,EAAMuqE,aAsBpB6B,mBArBoBpsE,EAAMosE,mBAsB1BC,SArBUrsE,EAAMqsE,SAsBhBzqD,YArBa5hB,EAAM4hB,aAAe,GAsBlC6a,QArBSz8B,EAAMy8B,QAsBfgR,gBArBiBztC,EAAMytC,gBAsBvBx5C,SArBU+L,EAAM/L,SAsBhB02E,oBArBqB3qE,EAAM2qE,oBAsB3BF,0BArB2BzqE,EAAMyqE,2BAG/ByH,EAAgBpvG,KAAKqvG,kBAAkBnyE,EAAO+jB,EAAM13B,GA+DxD,OAzCI/H,MArBMrY,QAAQimG,IAA6B,UAAT3uG,GAA6B,WAATA,EAsBxD0uG,EArBc7yE,QAAU8yE,GACnB5tF,MAAUrY,QAAQimG,IAA4B,UAAV3uG,GAA8B,WAATA,EAIzD2uG,IAsBLD,EArBc5lF,OAAS6lF,GAiBvBD,EArBc5lF,OAAS,CAsBrB+S,QArBS8yE,GAMA,SAqBT3uG,IACF0uG,EArBczvC,UAAY,GA0BxBsvC,GArBaA,EAAU9xE,EAAMhiB,QAsB3B8zF,EArBU9xE,EAAMhiB,MAAMwiE,kBAsBxBwxB,EArB0BF,EAAU9xE,EAAMhiB,MAAMwiE,gBAsBhDyxB,EArBc5lF,OAAOm0D,gBAAkBwxB,SAChCF,EAAU9xE,EAAMhiB,MAAMwiE,iBAuB3BsxB,EArBU9xE,EAAMhiB,MAAMo0F,0BAsBxBJ,EArB0BF,EAAU9xE,EAAMhiB,MAAMo0F,wBAsBhDH,EArBc5lF,OAAO+lF,wBAA0BJ,SACxCF,EAAU9xE,EAAMhiB,MAAMo0F,yBAuB3BN,EArBU9xE,EAAMhiB,MAAMq0F,iBAsBxBJ,EArBc5lF,OAAOhN,SAAWyyF,EAAU9xE,EAAMhiB,MAAMq0F,gBAuBpDP,EArBU9xE,EAAMhiB,MAAMza,OAsBxBA,EArBOuuG,EAAU9xE,EAAMhiB,MAAMza,MAuB3BuuG,EArBU9xE,EAAMhiB,MAAMouB,UAsBxB6lE,EArBc5lF,OAAO+f,QAAU0lE,EAAU9xE,EAAMhiB,MAAMouB,QAsBrD6lE,EArBc52E,eAAgB,SACvB42E,EAAcp6E,OAuBvB50B,OArBO24B,OAAOq2E,EAAeH,EAAU9xE,EAAMhiB,QAwBvCza,GACN,IArBK,cAuBH0uG,EArBc/H,UAAW,EAsBzB+H,EArBc5lF,OAAOm0D,gBAAkBwxB,GAA2Bnf,oBAsBlEof,EArBc5lF,OAAOstE,gBAA6CtH,mBAuBlEkW,EArBU,IAAIgG,cAAc0D,GAsB5B,MACF,IArBK,QAsBHA,EArBc/H,UAAW,EAuBzB3B,EArBU,IAAIgG,cAAc0D,GAsB5B,MACF,IArBK,eAuBHA,EArBc5lF,OAAOm0D,gBAAkBwxB,GAA2Bnf,oBAuBlE0V,EArBU,IAAIgG,cAAc0D,GAsB5B,MACF,IArBK,SAuBH1J,EArBU,IAAIgG,cAAc0D,GAsB5B,MACF,IArBK,WAsBHA,EArBc/P,WAAW71E,KAAWA,EAAO61E,SAsB3CqG,EArBU,IAAI2F,gBAAgB+D,GAsB9B,MACF,IArBK,OAsBHA,EArBczwC,WAAaxhC,EAAMwhC,WAsBjCywC,EArBczR,gBAAkBxgE,EAAMwgE,gBAsBtCyR,EArBcxR,iBAAmBzgE,EAAMygE,iBAsBvCwR,EArBc/P,WAAW71E,KAAWA,EAAO61E,SAsB3CqG,EArBU,IAAI0F,YAAYgE,GAsB1B,MACF,IArBK,OAsBHA,EArBc/P,WAAW71E,KAAWA,EAAO61E,SAsB3CqG,EArBU,IAAI0G,YAAYgD,GAsB1B,MACF,IArBK,WAsBL,IArBK,QAsBL,IArBK,QAsBL,IArBK,aAsBL,IArBK,QAsBL,IArBK,SAsBL,IArBK,OAEU,UAqBT1uG,IACFA,EArBO,YAuBT0uG,EArBc1uG,KAAOA,EAsBrBglG,EArBU,IAAIuG,eAAemD,GAsB7B,MACF,IArBK,OAsBH1J,EArBU,IAAIuG,eAAemD,GAsB7B,MACF,IArBK,WAsBH1J,EArBU,IAAIsG,gBAAgBoD,GAsB9B,MACF,IArBK,SAsBH1J,EArBU,IAAI4F,cAAc8D,GAsB5B,MACF,IArBK,kBAsBH1J,EArBU,IAAI4F,cAAc8D,IACpB/L,SAAU,EAsBlB,MACF,IArBK,QAsBHqC,EArBU,IAAIyG,aAAaiD,GAsB3B,MACF,IArBK,WAsBHA,EArBczH,cAAgBxqE,EAAMwqE,cAsBpCjC,EArBU,IAAIyF,gBAAgBiE,GAsB9B,MACF,IArBK,YAsBH1J,EArBU,IAAIwF,iBAAiBkE,GAsB/B,MACF,IArBK,QAsBH1J,EArBU,IAAImG,aAAauD,GAsB3B,MACF,IArBK,SAsBH1J,EArBU,IAAIqG,cAAcqD,GAsB5B,MACF,IArBK,UA4BH,GANAA,EArBcxyC,SAAWz/B,EAAMy/B,WAAY,EAsBvC/iC,QArBQ+N,QAAQwnE,EAAc5lF,UAsBhC4lF,EArBc5lF,OAAS,IAuBzB4lF,EArBc5lF,OAAOozC,SAAWz/B,EAAMy/B,SAsBtCwyC,EArBc5lF,OAAOk1D,SAAW0wB,EAAc1wB,SAsB1CvhD,EArBMg1B,QAAUh1B,EAAMg1B,OAAOhnD,OAsB/B,IArBqB,IAqB/B03B,EAAA,EArB+BI,EAAA9F,EAAMg1B,OAANtvB,EAqB/BI,EAAA93B,OArB+B03B,IAqB/B,CAAe,IArBIgnE,EAqBnB5mE,EAAAJ,GACYusE,EArBc5lF,OAAOqgF,EAAS1uF,MAAQ,CAsBpCyhD,WArBYitC,EAASjtC,SAsBrB+oC,SArBUkE,EAASnrB,UAEhB7kD,QAAQ3hB,QAAQ2xF,EAAS70E,SAsB5Bo6E,EArBc5lF,OAAOqgF,EAAS1uF,MAAM6Z,MAAQ60E,EAAS70E,OAElD6E,QAAQ3hB,QAAQ2xF,EAASP,aAsB5B8F,EArBc5lF,OAAOqgF,EAAS1uF,MAAMwkD,UAAYkqC,EAASP,WAuB3D8F,EArBcxyC,SAAWwyC,EAAcxyC,UAAYitC,EAASjtC,SAsBxDitC,EArBS5xF,cAsBP4hB,QArBQ+N,QAAQwnE,EAAc5qG,SAsBhC4qG,EArBc5qG,MAAQ,IAuBxB4qG,EArBc5qG,MAAMqlG,EAAS1uF,MAAQ0uF,EAAS5xF,cACnB,cAAtB4xF,EAAa1uF,OAsBd0e,QArBQ+N,QAAQwnE,EAAc5qG,SAsBhC4qG,EArBc5qG,MAAQ,IAuBxB4qG,EArBc5qG,MAAMqlG,EAAS1uF,MAAQ,GAEjB,UAqBlB0uF,EArBS1uF,MAAsC,cAAlB0uF,EAAS1uF,OAClB,UAqBlB0uF,EArBS1uF,KAsBX0uF,EArBSvC,YAAc,QACI,cAAtBuC,EAAa1uF,OAsBlB0uF,EArBSvC,YAAc,WAEpBuC,EAAS4C,aAsBZ5C,EArBS4C,WAAa,WAAA5C,EAAoBvC,aAuB5C8H,EArBc5lF,OAAOqgF,EAAS1uF,MAAM6uF,aAAe/pG,KAAKqvG,kBAAkBzF,EAAU3oD,EAAM13B,IAyBhG4lF,EArBcl3F,QAAUjY,KAAKwvG,eAsB7B/J,EArBU,IAAIuF,eAAemE,GAsB7B,MACF,IArBK,OAsBH1J,EArBU,IAAI8F,YAAY4D,GAsB1B,MACF,IArBK,SAsBH1J,EArBU,IAAI6G,cAAc6C,GAsB5B,MACF,QACE1J,EArBU,IAAIuG,eAAemD,GAwBjC,OArBO1J,GAgCXt0C,EAAA7wD,UAAAmvG,WAAA,SACIC,EACAnI,EACAtmD,EACA13B,EACAylF,EACAC,GANJ,IAAA9tG,EAAAnB,UAMA,IAAAivG,IAAIA,GAAJ,GAEI,IA7BIxK,EAAW,GA8BXiL,GA7BQA,EAAKx9C,QACFw9C,EAAKx9C,OACX7zC,QAAQ,SAAC6e,GA8Bd,GA5BiB,OA6BfA,EA7BMhiB,OACwB,WA6B7BgiB,EA7BMosE,qBAA6G,IAA1E,CAAA,UAAY,iBAAkB,oBAAoB1hG,QAAQs1B,EAAMhiB,SA8BzGgiB,EA7BMuhD,SACP,CA8BA,IA7BIgnB,EAAUtkG,EAAK4tG,mBAAmB7xE,EAAO+jB,EAAM13B,EAAQylF,EAAWC,GAE9C,aA6BpBxJ,EA7BQmB,UA8BVnB,EA7BQ8B,eAAiBA,GAgC3B9C,EA7BSh8F,KAAKg9F,MAiCpB,OA7BOhB,GAuCXtzC,EAAA7wD,UAAAqvG,gBAAA,SApCGD,EAAAnI,EAAAtmD,EAAA13B,EAAAylF,GAqCC,IApCIvK,EAAWzkG,KAAKyvG,WAAWC,EAAMnI,EAAgBtmD,EAAM13B,EAAQylF,GAAW,GAC1Er5D,EAAM,GA2CV,OANA8uD,EApCSpmF,QAAQ,SAAConF,GAqChB9vD,EApCI8vD,EAAQ9qF,KAAO,CAqCjBi1F,WApCYnK,EAAQwD,OAqCpB4G,aApCcpK,EAAQyD,YAGnBvzD,GA8CXwb,EAAA7wD,UAAAwvG,YAAA,SA3CGJ,EAAAnI,EAAAtmD,EAAA13B,EAAAylF,GA2CH,IAAA7tG,EAAAnB,KA1CQ6kG,EAAiC,GACjCkL,EAAS,GA4Cb,GAAIL,GA3CQA,EAAKx9C,OAAQ,CA4CvB,IA3CIA,EAASw9C,EAAKx9C,OA4CfvxC,IA3CI,SAACuc,GA+CJ,OA9CKA,EAAMte,eAAe,eA4CxBse,EA3CMgqE,UAAYl9F,OAAOmgG,iBAAmB,GAEvCjtE,IA6CRqI,KA3CK3L,QAAQ8N,YAAY,CAAC,YAAa,UA4CtCgoE,EA3CKM,gBAAkBN,EAAKM,eAAe9kG,QA4C7CwkG,EA3CKM,eAAezqE,KAAK3L,QAAQ8N,YAAY,CAAC,YAAa,UA4C3DgoE,EA3CKM,eAAe3xF,QAAQ,SAACqb,EAAMhuB,GA4C7BguB,EA3CKu2E,UACc,EA2CjBv2E,EA3CKwtE,WAAsC,IAArBrC,EAAU35F,SA4ClC25F,EA3CUp8F,KAAK,CA4Cbg8F,SA3CU,KA6CZsL,EA3COtnG,KAAK,CA4CV+mC,IA3CK,EA4CLl3B,IA3CKohB,EAAKwtE,UAAY,EA4CtBgJ,YA3Ca,KA8CjBrL,EA3CUp8F,KAAK,CA4CbqhD,MA3COpwB,EAAK3E,MA4CZO,KA3CMoE,EAAKpE,MAAQ,cA4CnBmvE,SA3CU,KA6CZsL,EA3COtnG,KAAK,CA4CV+mC,IA3CK9V,EAAKwtE,UA4CV5uF,IA3CKtO,OAAOmgG,iBA4CZ+F,YA3CarL,EAAU35F,OAAS,IAE1B,EA2CJQ,GA3C4B,EAAnBm5F,EAAU35F,SA4CrB6kG,EA3COlL,EAAU35F,OAAS,GAAGoN,IAAMohB,EAAKwtE,UAAY,MAIrD6I,EAAO7kG,SA4CV25F,EA3CUp8F,KAAK,CA4Cbg8F,SA3CU,KA6CZsL,EA3COtnG,KAAK,CA4CV+mC,IA3CK,EA4CLl3B,IA3CKtO,OAAOmgG,iBA4CZ+F,YA3Ca,OA+CjBrL,EA3CUp8F,KAAK,CA4Cbg8F,SA3CU,KA6CZsL,EA3COtnG,KAAK,CA4CV+mC,IA3CK,EA4CLl3B,IA3CKtO,OAAOmgG,iBA4CZ+F,YA3Ca,KA8CjBh+C,EA3CO7zC,QAAQ,SAAC6e,GA4Cd,GA1CiB,OA2CfA,EA3CMhiB,OACwB,WA2C7BgiB,EA3CMosE,qBAA6G,IAA1E,CAAA,UAAY,iBAAkB,oBAAoB1hG,QAAQs1B,EAAMhiB,SA4CzGgiB,EA3CMuhD,SACP,CA4CA,IA3CIgnB,EAAUtkG,EAAK4tG,mBAAmB7xE,EAAO+jB,EAAM13B,EAAQylF,GAEnC,aA2CpBvJ,EA3CQmB,UA4CVnB,EA3CQ8B,eAAiBA,GA6C3B,IA3CI9qD,EAAWszD,EAAOxiB,KAAK,SAAC7zD,GA4C1B,OA3COA,EAAM8V,KAAOtS,EAAMgqE,WAAahqE,EAAMgqE,WAAaxtE,EAAKphB,KAAQohB,EAAM8V,KAAOtS,EAAMgqE,WAAaxtE,EAAK8V,MAAQ9V,EAAKphB,MA6CvHmkC,GAEFooD,EA3CUpoD,EAASyzD,aAAazL,SAASh8F,KAAKg9F,MAgDtD,OA3CuB,EA2CnBZ,EA3CU35F,OACL25F,EAEA,CA4CL,CACEJ,SA3CUzkG,KAAKyvG,WAAWC,EAAMnI,EAAgBtmD,EAAM13B,MAsDhE4nC,EAAA7wD,UAAA+uG,kBAAA,SAhDGnyE,EAAA+jB,EAAA13B,GAkDC,MAhDuB,YAgDnB2T,EAhDMqsE,UAA0BrsE,EAAOZ,QAIpCY,EAAUsvE,WACRxsG,KAAKysG,eAAeF,iBAAiBtrD,EAAM/jB,EAAO3T,GACpD/H,MAAUrY,QAAQ+zB,EAAMZ,UAA2B,UAAfY,EAAMz8B,KAExC,CAiDLy8B,MAhDO,QAiDPC,OAhDQ,SAiDRb,QApDYY,EAAMZ,SAMfY,EAAUZ,QACRY,EAAMZ,QAER,KAbE,CAAA,CAAG/3B,OAAO,EAAOwwB,MAAO/0B,KAAKk4B,OAAOqmC,IAAM,CAAEh6D,OAAO,EAAMwwB,MAAO/0B,KAAKk4B,OAAOsmC,OAsEzFrN,EAAA7wD,UAAA6vG,iBAAA,SAtDG1L,EAAA70F,EAAAwgG,EAAAC,GAuDC,IAAK,IAtDI3kG,EAAI,EAAGA,EAAI+4F,EAASv5F,OAAQQ,IAAK,CAuDxC,IAtDI+5F,EAAUhB,EAAS/4F,GAEnBnH,EAAQqL,EADFygG,EAAc5K,EAAQ9qF,IAAIooB,QAAQstE,EAAa,IAAM5K,EAAQ9qF,KAyDnEif,QAtDQ+N,QAAQpjC,KA0DhBid,MAtDMrY,QAAQ5E,IAA2B,IAAjBA,EAAM2G,QA0D9BsW,MAtDMrY,QAAQ5E,IAAyB,EAAfA,EAAM2G,QAEX,KAqDrB3G,EAtDQA,EAAM6X,OAAO,SAACnT,GAAQ,QAA8B,IAA5B9I,OAAO44B,KAAK9vB,GAAKiC,QAAgBjC,EAAIgpD,cAAgB9xD,WAC3E+K,QA2DR3G,EAtDMs4B,MAA8B,IAAtBt4B,EAAMs4B,KAAK3xB,QAIK,IAsD9B/K,OAtDO44B,KAAKx0B,GAAO2G,QAAgB3G,EAAM0tD,cAAgB9xD,SA0D7DslG,EAtDQlhG,MAAQA,EAwDhBkhG,EAtDQM,OAAQqK,MA+DtBj/C,EAAA7wD,UAAAgwG,0BAAA,SA3DGzL,EAAAj1F,EAAAwgG,GA2DH,IAAAjvG,EAAAnB,KACI6kG,EA3DUxmF,QAAQ,SAACinF,GA4DjBnkG,EA3DKgvG,iBAAiB7K,EAASb,SAAU70F,EAAQwgG,MAkEvDj/C,EAAA7wD,UAAAiwG,qBAAA,SA9DG9L,GA+DCA,EA9DSpmF,QAAQ,SAAConF,GA+DhBA,EA9DQC,QAAS,KAqEvBv0C,EAAA7wD,UAAAkwG,gCAAA,SAjEG3L,GAkECA,EAjEUxmF,QAAQ,SAACinF,GAkEjBA,EAjESb,SAASpmF,QAAQ,SAAConF,GAkEzBA,EAjEQC,QAAS,OAyEzBv0C,EAAA7wD,UAAAwlG,gBAAA,SApEGpB,GAqECvkG,OApEO44B,KAAK2rE,EAAKD,UAAUpmF,QAAQ,SAAC1D,GAqElC,IApEI8qF,EAAef,EAAKD,SAAS9pF,GAqE7B8qF,EApEQ9oC,UAAY/iC,QAAQ+N,QAAQ+8D,EAAKngG,MAAMkhG,EAAQ9qF,QAqEzD8qF,EApEQO,cAqERP,EApEQQ,oBA4EhB90C,EAAA7wD,UAAAkvG,eAAA,SAvEG/J,GAwEC,IAtEIvY,GAAiB,EA+FrB,OAvBIuY,EAvEQlhG,OAASkhG,EAAQl8E,QAFH,CAAA,WAAa,WAAY,OAAQ,QAAS,MAAO,aAG/DlL,QAAQ,SAACurF,KAEA,cAAbA,IAwEChwE,QAvEQ3hB,QAAQwtF,EAAQl8E,OAAOqgF,KAwEhCnE,EAvEQl8E,OAAOqgF,GAAUjtC,WAwExB/iC,QAvEQ+N,QAAQ89D,EAAQlhG,MAAMqlG,KAAchwE,QAAQ3hB,QAAQwtF,EAAQlhG,MAAMqlG,MAC7D,cAuEbA,IACEhwE,QAvEQ3hB,QAAQwtF,EAAQl8E,OAAOuhF,YAwEhCrF,EAvEQl8E,OAAOuhF,UAAUnuC,UAwEzB/iC,QAvEQ3hB,QAAQwtF,EAAQlhG,MAAMulG,eAEnB,UAuEbF,IACChwE,QAvEQ+N,QAAQ89D,EAAQlhG,MAAMulG,cAwE/BrE,EAvEQl8E,OAAOnjB,MAAM2jG,cAwErBtE,EAvEQl8E,OAAOnjB,MAAM2jG,aAAapuB,gBAC0B,IAuE5D8pB,EAvEQl8E,OAAOnjB,MAAM2jG,aAAapuB,eAAezwE,SA0EnDgiF,GAvEQ,KAIPA,KAtoBX,GAwoBO/7B,UAAP5uD,WAA2C,CAwE3C,CAvEE9B,KAAMqjC,KAAAA,aAGPqtB,UAADrtD,eAAC,WAAA,MAAA,CA0ED,CAACrD,KAAMi6B,kBACP,CAACj6B,KAAM8kD,kBCxtBP,IAAAF,iBAAA,WA2BA,SAAAA,EAFwBmuB,GAAAxzE,KAAxBwzE,eAAwBA,EArBpBxzE,KAAJ2+E,WAA6B,GACzB3+E,KAAJywG,OAA4B,CACpB,UACA,UACA,OACA,UACA,UAEJzwG,KAAJ0wG,MAAiB,CACTxW,UAAS,OACT73C,QAAS,QACTmB,KAAM,OACNmtD,QAAS,UACTC,OAAQ,UAEZ5wG,KAAJ6wG,SAAoB,CACZC,UAAW,KACXppD,SAAU,gBACVtyB,MAAO,kBAWfj1B,OAAAC,eALKilD,EAKL/kD,UAAA,sBAAA,CAAAoD,IAAA,SALKogE,GAMG9jE,KALK+wG,qBAAuBjtC,mCAWpCze,EAAA/kD,UAAA0wG,MAAA,SARK10E,GAQL,IAAAn7B,EAAAnB,KACQ,OARO,IAAIk7C,QAAQ,SAACC,GAShB,GARKh6C,EAAK4vG,qBAQV,CAIA,IARIE,EAAQ9vG,EAAKqyE,eAAehB,qBAAqBpD,iBAAkBjuE,EAAK4vG,sBAS5E5vG,EARKw9E,WAAWl2E,KAAKwoG,GASrB9vG,EARK+vG,YAAYD,EAAMp2C,SAAUv+B,GASjC6e,EARQ81D,QAEJhrE,QARQnhC,MAAM,sKAqB9BugD,EAAA/kD,UAAA6wG,UAAA,SAXKF,GAYG,OAXOA,EAAMttG,MAiBrB0hD,EAAA/kD,UAAAimD,KAAA,SAdK0qD,GAcL,IAAA9vG,EAAAnB,KACQixG,EAdMriF,SAAU,EAehBne,WAdW,WAePwgG,EAdMttG,MAAO,EAeb,IAdMytG,EAAMjwG,EAAKw9E,WAAWviE,OAAO,SAAAjG,GAAK,OAAAA,EAAE0kD,WAAao2C,IAAO,GAe1DG,IACAjwG,EAdKw9E,WAAW92E,OAAO1G,EAAKw9E,WAAW/2E,QAAQwpG,GAAM,GAerDA,EAdIlmD,YAET,MAqBX7F,EAAA/kD,UAAA4wG,YAAA,SAlBKD,EAAA30E,GAkBL,IAAAn7B,EAAAnB,KACQA,KAlBKqxG,kBAAkBJ,EAAO30E,GAmB9B7rB,WAlBW,WAmBPtP,EAlBKwC,KAAKstG,IACX,IACEA,EAAM1hC,aAmBPvvE,KAlBKsxG,WAAWL,IA2B5B5rD,EAAA/kD,UAAA+wG,kBAAA,SAtBKJ,EAAAxI,GAuBG,IAtBM8I,EAA2B,iBAAT9I,EAAqBA,EAAO,GAwBpDwI,EAtBMx3F,OAASzZ,KAuBfixG,EAtBMnnD,MAAQynD,EAAQznD,OAAS,GAuB/BmnD,EAtBMx4F,QAAU84F,EAAQ94F,SAAW,GAuBnCw4F,EAtBMH,UAAYS,EAAQT,WAAa9wG,KAAK6wG,SAASC,UAuBrDG,EAtBM12E,KAAOg3E,EAAQh3E,MAAQ,GAuB7B02E,EAtBM1hC,YAAcgiC,EAAQhiC,cAAe,EAwB3C,IAtBMiiC,EAAeD,EAAQ/4D,aAAe,GACtCi5D,EAAcF,EAAQn8E,OAASp1B,KAAK6wG,SAASz7E,MAC7Cs8E,EAAiBH,EAAQ7pD,UAAY1nD,KAAK6wG,SAASnpD,SACnDiqD,EAAaJ,EAAQj8E,MAAQt1B,KAAK0wG,MAAMxW,WAwB9C+W,EAtBMvuC,UAAY,OAAAivC,EAuBlBV,EAtBMzhC,UAAW,EAuBjByhC,EAtBMthC,WAAa8hC,EAsB3B,IAtB0CC,EAsB1C,IAtB4DF,EAsB5D,6BAMAnsD,EAAA/kD,UAAAqD,KAAA,SAzBKstG,GAmBHA,EAlBYttG,MAAO,EA0Bb8M,WAMR,WACYwgG,EA3BMriF,SAAU,GALC,KAuC7By2B,EAAA/kD,UAAAgxG,WAAA,SA9BKL,GA8BL,IAAA9vG,EAAAnB,KACYixG,EA9BMH,UAAY,GAiCtBrgG,WA9BW,WA+BPtP,EA9BKolD,KAAK0qD,IACXA,EAAMH,cA7GjB,GA+GOzrD,iBAAP9iD,WAA2C,CA+B3C,CA9BE9B,KAAMqjC,KAAAA,aAGPuhB,iBAADvhD,eAAC,WAAA,MAAA,CAiCD,CAACrD,KAAM6kD,kBCpJP,IAAAF,iBAAA,WAOA,SAAAA,EAFwBouB,GAAAxzE,KAAxBwzE,eAAwBA,EAFpBxzE,KAAJ+wG,qBAAgC,YAUhC5wG,OAAAC,eALKglD,EAKL9kD,UAAA,sBAAA,CAAAoD,IAAA,SALKogE,GAMG9jE,KALK+wG,qBAAuBjtC,mCAYpC1e,EAAA9kD,UAAAgC,KAAA,SATK2wE,EAAA2+B,GAUG,QAVR,IAAAA,IAAKA,EAAL,KACa5xG,KAAK+wG,qBAWN,OADA9qE,QATQnhC,MAAM,mKACP,KAYX,IATM+sG,EAAQ,IAAI1sD,aAUlB0sD,EATM5+B,UAAYA,EAUlB4+B,EATMvvG,OAWN,IATIwvG,EAAWj/B,KAAAA,mBAAmB13B,QAAQ,CAUtC,CATEhkB,QAASguB,aAAc4sD,SAAUF,GAUnC,CATE16E,QAAS67C,gBAAiB++B,SAAUH,KAKhD,OAMMC,EATM54C,aAAej5D,KAAKwzE,eAAehB,qBAAqBc,0BAA2BtzE,KAAK+wG,qBAAsBe,GAC7GD,KA3Bf,GA6BOzsD,iBAAP7iD,WAA2C,CAU3C,CATE9B,KAAMqjC,KAAAA,aAGPshB,iBAADthD,eAAC,WAAA,MAAA,CAYD,CAACrD,KAAM6kD,kBC7CP,IAAA0sD,oBAAA,WAQA,SAAAA,EALwBz+B,EAA+BxkD,EAAgCmJ,GAA/Dl4B,KAAxBuzE,SAAwBA,EAA+BvzE,KAAvD+uB,OAAuDA,EAAgC/uB,KAAvFk4B,OAAuFA,SAGlF85E,EAAL1xG,UAAA+B,MAAK,SAAAmM,GAWGxO,KAVKuzE,SAASlxE,MAAMmM,MAP5B,GASOwjG,oBAAPzvG,WAA2C,CAW3C,CAVE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAWrBC,SAVU,wBAWVuwB,SAVU,q0BAYb6gF,oBAADluG,eAAC,WAAA,MAAA,CAaD,CAACrD,KAAM0kD,cACP,CAAC1kD,KAAMuyE,iBACP,CAACvyE,KAAMi6B,oBAIP,IAAAu3E,mBAAA,WAsBA,SAAAA,EAhCwB1+B,EAA+BxkD,EAAgCmJ,GAA/Dl4B,KAAxBuzE,SAAwBA,EAA+BvzE,KAAvD+uB,OAAuDA,EAAgC/uB,KAAvFk4B,OAAuFA,SAGlF+5E,EAAL3xG,UAAA+B,MAAK,SAAAmM,GAsCGxO,KArCKuzE,SAASlxE,MAAMmM,MAM5B,GAJOyjG,mBAAP1vG,WAA2C,CAsC3C,CArCE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAsCrBC,SArCU,uBAsCVuwB,SArCU,0oBAWb8gF,mBAADnuG,eAAC,WAAA,MAAA,CAwCD,CAACrD,KAAM0kD,cACP,CAAC1kD,KAAMuyE,iBACP,CAACvyE,KAAMi6B,oBC3FP,IAAA8qB,oBAAA,WA6BA,SAAAA,EALY0sD,EACAC,EACAC,EACAnxD,EACA/oB,GAJAl4B,KAAZkyG,QAAYA,EACAlyG,KAAZmyG,aAAYA,EACAnyG,KAAZoyG,UAAYA,EACApyG,KAAZihD,KAAYA,EACAjhD,KAAZk4B,OAAYA,SAYZ/3B,OAAAC,eATGolD,EASHllD,UAAA,OAAA,CAMAmD,IAAA,WACI,OAXOzD,KAAKqyG,OAIhB3uG,IAAA,SATGghG,GAUC1kG,KATKqyG,MAAQ3N,mCAoBjBvkG,OAAAC,eAbGolD,EAaHllD,UAAA,eAAA,CAAAmD,IAAA,WACI,OAbOzD,KAAK0kG,KAAK9lF,eAAe,gBAAkB5e,KAAK0kG,KAAK4N,aAAe,oCAkB/EnyG,OAAAC,eAfGolD,EAeHllD,UAAA,gBAAA,CAAAmD,IAAA,WACI,OAfOzD,KAAK0kG,KAAK9lF,eAAe,iBAAmB5e,KAAK0kG,KAAK6N,cAAgBprG,2CAoBjFhH,OAAAC,eAjBGolD,EAiBHllD,UAAA,kBAAA,CAAAmD,IAAA,WACI,OAjBOzD,KAAK0kG,KAAK9lF,eAAe,mBAAqB5e,KAAK0kG,KAAK8N,gBAAkBrrG,2CAsBrFhH,OAAAC,eAnBGolD,EAmBHllD,UAAA,SAAA,CAAAmD,IAAA,WACI,QAnBOzD,KAAK0kG,KAAK9lF,eAAe,SAAU5e,KAAK0kG,KAAKrvC,sCAwBxDl1D,OAAAC,eArBGolD,EAqBHllD,UAAA,QAAA,CAAAmD,IAAA,WACI,QArBOzD,KAAK0kG,KAAK9lF,eAAe,UAAU5e,KAAM0kG,KAAKrvC,sCA2BzDl1D,OAAAC,eAxBGolD,EAwBHllD,UAAA,UAAA,CAMAmD,IAAA,WACI,OA1BOzD,KAAKyyG,UAmBhB/uG,IAAA,SAxBGgvG,GAyBC1yG,KAxBKyyG,SAAWC,mCAoCpBvyG,OAAAC,eA7BGolD,EA6BHllD,UAAA,aAAA,CAMAmD,IAAA,WACI,OA/BOzD,KAAK2yG,aAwBhBjvG,IAAA,SA7BGiX,GA8BC3a,KA7BK2yG,YAAch4F,mCAyCvBxa,OAAAC,eAlCGolD,EAkCHllD,UAAA,YAAA,CAMAmD,IAAA,WACI,OApCOzD,KAAK4yG,YA6BhBlvG,IAAA,SAlCGmvG,GAmCC7yG,KAlCK4yG,WAAaC,mCAOnBrtD,EAAHllD,UAAAwyG,qBAAG,WAuCC,QAtCS9yG,KAAKujB,SAASvjB,KAAK+yG,aAG7BvtD,EAAHllD,UAAA0yG,iBAAG,WAyCC,OAxCOhzG,KAAKizG,WAAWjzG,KAAK+yG,aAG7BvtD,EAAHllD,UAAA4yG,aAAG,WA2CC,OA1COlzG,KAAK+yG,YAGbvtD,EAAHllD,UAAA6yG,eAAG,WA6CC,OA5COnzG,KAAKujB,SAASvjB,KAAK+yG,aAG3BvtD,EAAHllD,UAAA8yG,sBAAG,WA+CC,OA9COpzG,KAAKqzG,gBAAgBrzG,KAAK+yG,aAGlCvtD,EAAHllD,UAAA2yG,WAAG,SAAAt4F,GAkDC,IAjDKA,EAmDH,OADAsrB,QAjDQnhC,MAAM,oDACP,KAoDT,IAjDI2gG,EAAUzlG,KAAK0kG,KAAKD,SAAS9pF,GAkDjC,OAjDK8qF,IAkDHx/D,QAjDQnhC,MAAM,6EAA8E6V,GACrF,OAMV6qC,EAAHllD,UAAAijB,SAAG,SAAA5I,GAqDC,IApDI8qF,EAAUzlG,KAAKizG,WAAWt4F,GAqD9B,OAAI8qF,EAnDKA,EAAQlhG,MAEV,MAGRihD,EAAHllD,UAAA8lG,YAAG,SAAAzrF,GAwDC,IAvDI8qF,EAAUzlG,KAAKizG,WAAWt4F,GAwD9B,OAAI8qF,EAtDKA,EAAQzW,SAEV,MAGRxpC,EAAHllD,UAAA+yG,gBAAG,SAAA14F,GA2DC,IA1DI8qF,EAAUzlG,KAAKizG,WAAWt4F,GA2D9B,OAAI8qF,EAzDKA,EAAQiB,aAEV,MAGRlhD,EAAHllD,UAAAs1D,SAAG,SAgECj7C,EACApW,EACA+3B,GAOA,IA/DImpE,EAAUzlG,KAAKizG,WAAWt4F,GAgE1B8qF,IA/DWA,EAASkC,4BAgEtBlC,EA/DQ7vC,SAASrxD,EAAO+3B,GAgExBt8B,KA/DKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,QAASz1C,MAAOA,MAI9DihD,EAAHllD,UAAAkzG,WAAG,SAqEC74F,EACApW,EACA+3B,GAOA,IApEImpE,EAAUzlG,KAAKizG,WAAWt4F,GAqE1B8qF,IApEWA,EAASkC,4BAqEtBlC,EApEQ7vC,SAASrxD,EAAO+3B,GAqExBt8B,KApEKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,QAASz1C,MAAOA,MAI9DihD,EAAHllD,UAAAo+E,YAAG,SAAA/jE,EAAA6tF,GAyEC,IAxEI/C,EAAUzlG,KAAKizG,WAAWt4F,GAyE1B8qF,IAxEWA,EAASkC,4BAyEtBlC,EAxEQ/mB,YAAY8pB,GAyEpBxoG,KAxEKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,WAAYz1C,MAAOikG,MAIjEhjD,EAAHllD,UAAAynG,YAAG,SAAAptF,EAAAgiD,GA6EC,IA5EI8oC,EAAUzlG,KAAKizG,WAAWt4F,GA6E1B8qF,IA5EWA,EAASkC,4BA6EtBlC,EA5EQsC,YAAYprC,GA6EpB38D,KA5EKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,WAAYz1C,MAAOo4D,MAIjEnX,EAAHllD,UAAAimD,KAAG,SAAA5rC,EAAAshB,QAAH,IAAAA,IAAGA,GAAH,GAiFI,IAhFIwpE,EAAUzlG,KAAKizG,WAAWt4F,GAiF1B8qF,IAhFWA,EAASkC,4BAiFtBlC,EAhFQl/C,KAAKtqB,GAiFbj8B,KAhFK8nG,QAAQntF,EAAK,CAAEwtF,WAAW,IAiF/BnoG,KAhFKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,SAAUz1C,OAAO,MAI/DihD,EAAHllD,UAAAqD,KAAG,SAAAgX,GAoFC,IAnFI8qF,EAAUzlG,KAAKizG,WAAWt4F,GAoF1B8qF,IAnFWA,EAASkC,4BAoFtBlC,EAnFQ9hG,OAoFR3D,KAnFKu6D,OAAO5/C,EAAK,CAAEwtF,WAAW,IAoF9BnoG,KAnFKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,SAAUz1C,OAAO,MAI/DihD,EAAHllD,UAAAwnG,QAAG,SAwFCntF,EACA2hB,GAKA,IAvFImpE,EAAUzlG,KAAKizG,WAAWt4F,GAwF1B8qF,IAvFWA,EAASkC,4BAwFtBlC,EAvFQqC,QAAQxrE,GAwFhBt8B,KAvFKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,WAAYz1C,OAAO,MAIjEihD,EAAHllD,UAAAi6D,OAAG,SA4FC5/C,EACA2hB,GAKA,IA3FImpE,EAAUzlG,KAAKizG,WAAWt4F,GA4F1B8qF,IA3FWA,EAASkC,4BA4FtBlC,EA3FQlrC,OAAOj+B,GA4Fft8B,KA3FKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,WAAYz1C,OAAO,MAIjEihD,EAAHllD,UAAAooG,cAAG,SAAA/tF,EAAA84F,GAgGC,IA/FIhO,EAAUzlG,KAAKizG,WAAWt4F,GAgG1B8qF,GACEA,IA/FWA,EAASkC,2BAgGtBlC,EA/FQiD,cAAc+K,IAK3BjuD,EAAHllD,UAAA0lG,YAAG,SAoGCrrF,EACA2hB,GAIA,IAnGImpE,EAAUzlG,KAAKizG,WAAWt4F,GAoG1B8qF,IAnGWA,EAASkC,2BAoGtBlC,EAnGQO,YAAY1pE,IAIvBkpB,EAAHllD,UAAAozG,cAAG,SAwGC/4F,EACA2hB,GAIA,IAvGImpE,EAAUzlG,KAAKizG,WAAWt4F,GAwG1B8qF,IAvGWA,EAASkC,2BAwGtBlC,EAvGQiO,cAAcp3E,IAIzBkpB,EAAHllD,UAAAqzG,eAAG,SA4GCh5F,EACA2hB,GAIA,IA3GImpE,EAAUzlG,KAAKizG,WAAWt4F,GA4G1B8qF,IA3GWA,EAASkC,2BA4GtBlC,EA3GQkO,eAAer3E,IAI1BkpB,EAAHllD,UAAA2lG,cAAG,SAgHCtrF,EACA2hB,GAIA,IA/GImpE,EAAUzlG,KAAKizG,WAAWt4F,GAgH1B8qF,IA/GWA,EAASkC,2BAgHtBlC,EA/GQQ,cAAc3pE,IAIzBkpB,EAAHllD,UAAAszG,gBAAG,SAoHCj5F,EACA2hB,GAIA,IAnHImpE,EAAUzlG,KAAKizG,WAAWt4F,GAoH1B8qF,IAnHWA,EAASkC,2BAoHtBlC,EAnHQmO,gBAAgBt3E,IAI3BkpB,EAAHllD,UAAA4nG,uBAAG,SAwHCvtF,EACA2hB,GAKA,IAvHImpE,EAAUzlG,KAAKizG,WAAWt4F,GAwH1B8qF,IAvHWA,EAASkC,2BAwHtBlC,EAvHQyC,uBAAuB5rE,IAIlCkpB,EAAHllD,UAAAuzG,aAAG,SAAAC,GAoIK9zG,KA1HKkyG,SA2HPlyG,KA1HKkyG,QAAQlB,MAAM8C,IAItBtuD,EAAHllD,UAAAyzG,WAAG,SAAAp5F,EAAAipF,EAAAtuE,EAAA0+E,GAiIC,IAhIIvO,EAAUzlG,KAAKizG,WAAWt4F,GAiI1B8qF,IAhIWA,EAASkC,4BAiItBlC,EAhIQmC,QAAU,CAiIhBhE,IAhIKA,EAiILtuE,KAhIMA,EAiIN6D,OAhIQ66E,GAkIVh0G,KAhIKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,UAAWz1C,MAAOq/F,MAIhEp+C,EAAHllD,UAAA2zG,WAAG,SAAAt5F,EAAAg/C,GAqIC,IApII8rC,EAAUzlG,KAAKizG,WAAWt4F,GAqI1B8qF,IApIWA,EAASkC,4BAEA,KAmItBlC,EApIQ9rC,QAAUA,GACNzuD,QAAgByuD,EAAQzuD,QAAU,KAqI5Cu6F,EApIQqB,YAAc,QAqItBrB,EApIQsB,gBAAiB,GACC,IAArBptC,EAAYzuD,SAqIjBu6F,EApIQqB,YAAc,eAsIxB9mG,KApIKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,UAAWz1C,MAAOo1D,MAIhEnU,EAAHllD,UAAA4zG,eAAG,SAAAv5F,EAAAlC,GAAA,IAAHtX,EAAAnB,KACQm0G,EAAUn0G,KAAKuhE,YAAY5mD,EAAK,gBAChCyM,EAAW+sF,EAAQA,EAAQjpG,OAAS,GACpCwzF,EAAW1+F,KAAKujB,SAAS5I,GACzBoa,EAAQ/0B,KAAKuhE,YAAY5mD,EAAK,SA0IlC,OADoBqjC,SAxIO,cAAK3iB,OACzBr7B,KAAKmyG,aAAa7vG,KAAK0vG,oBAAqB,CAAE5qF,SAwIzDA,EAxImEs3E,SAwInEA,EAxI6E3pE,MAwI7EA,EAxIoFtc,QAwIpFA,EAxI6FkC,IAwI7FA,IAxIoGy5F,SAAS5jG,KAAK,SAAChC,GACxGA,GAyIHrN,EAxIKy0D,SAASj7C,EAAKyM,EAAU,CAAE+gF,WAAW,OAK/C3iD,EAAHllD,UAAA+zG,WAAG,SAAA15F,EAAA+V,GA+IC,OADoBstB,SA5IO,cAAK3iB,OACzBr7B,KAAKmyG,aAAa7vG,KAAK2vG,mBAAoB,CAAEvhF,QA4IxDA,IA5ImE0jF,UAGhE5uD,EAAHllD,UAAAwhF,YAAG,SAAAnnE,EAAAq/B,EAAAz1C,GAkJC,IAjJIkhG,EAAUzlG,KAAKizG,WAAWt4F,GAkJ1B8qF,IAjJWA,EAASkC,4BAkJtBlC,EAjJQzrD,GAAQz1C,EAkJhBvE,KAjJKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAMA,EAAMz1C,MAAOA,MAI3DihD,EAAHllD,UAAAihE,YAAG,SAAA5mD,EAAAq/B,GAsJC,IArJIyrD,EAAUzlG,KAAKizG,WAAWt4F,GAsJ9B,OAAI8qF,IArJWA,EAASkC,0BACflC,EAAQzrD,GAEV,MAGRwL,EAAHllD,UAAAg0G,aAAG,SAAA35F,GAyJC,IAxJIpW,EAAQvE,KAAKujB,SAAS5I,GAyJ1B,OAxJOif,QAAQ3hB,QAAQ1T,IAGxBihD,EAAHllD,UAAAi0G,aAAG,SAAA55F,GA4JC,IA3JIpW,EAAQvE,KAAKujB,SAAS5I,GA4J1B,OA3JOif,QAAQ+N,QAAQpjC,IAGxBihD,EAAHllD,UAAAk0G,SAAG,SAAA75F,GA+JC,QA9JS3a,KAAK0kG,KAAKD,SAAS9pF,IAG7B6qC,EAAHllD,UAAAm0G,gBAAG,SAAA95F,EAAA+5F,GAmKC,IAlKIjP,EAAUzlG,KAAKizG,WAAWt4F,GAC1Bg6F,EAAcD,EACdE,GAAoB,EAmKxB,GAAInP,IAlKWA,EAASkC,0BAA2B,CAmKjD,IAlKIkN,EAAiB70G,KAAKuhE,YAAY5mD,EAAK,WAmK3C,GAlKKk6F,GAAkBA,EAAgB3pG,OA+KjC2pG,EAlKe,GAAGtwG,QAASowG,EAAapwG,QAmK1CowG,EAlKc,CAAEpwG,MAAOmwG,EAAW3/E,MAAO2/E,IAqK3CG,EAlKex2F,QAAQ,SAACme,IACjBA,EAAOj4B,OAASi4B,EAAOj4B,QAAUowG,EAAYpwG,OAAUi4B,IAAWm4E,KAmKrEC,GAlKW,KAqKXA,GACF50G,KAlKK8hF,YAAYnnE,EAAK,UAAak6F,EAkK7C39F,OAAA,CAlK+Dy9F,SAvBV,CAmK7C,IAlKIprF,EAASvpB,KAAKuhE,YAAY5mD,EAAK,UAmK/B4O,IACFsrF,EAlKiBtrF,EAAO+S,UACF9a,MAAMrY,QAAQ0rG,KAmK9BA,EAlKe,GAAGtwG,QAASowG,EAAapwG,QAmK1CowG,EAlKc,CAAEpwG,MAAOmwG,EAAW3/E,MAAO2/E,IAoK3CnrF,EAlKO+S,QAAYu4E,EAkK/B39F,OAAA,CAlKiDy9F,IAmKrC30G,KAlKK8hF,YAAYnnE,EAAK,SAAU4O,IAmLlCqrF,GACF50G,KAlKKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,UAAWz1C,MAASswG,EAkKvE39F,OAAA,CAlKyFy9F,QAKtFnvD,EAAHllD,UAAAw0G,mBAAG,SAAAn6F,EAAAo6F,GAuKC,IAtKItP,EAAUzlG,KAAKizG,WAAWt4F,GAuK9B,GAAI8qF,IAtKWA,EAASkC,0BAA2B,CAuKjD,IAtKIkN,EAAiB70G,KAAKuhE,YAAY5mD,EAAK,WAuK3C,GAtKKk6F,GAAkBA,EAAgB3pG,OAwBhC,CAuKL,IAtKIvD,GAAQ,EAuKZktG,EAtKex2F,QAAQ,SAAC22F,EAAKtpG,GAuKvBspG,EAtKIzwG,OAASywG,EAAIjgF,MAuKfigF,EAtKIzwG,QAAUwwG,GAAkBC,EAAIjgF,QAAUggF,IAuKhDptG,EAtKQ+D,GAyKNspG,IAtKQD,IAuKVptG,EAtKQ+D,MAIA,IAsKV/D,GACFktG,EAtKehtG,OAAOF,EAAO,GAwK/B3H,KAtKK8hF,YAAYnnE,EAAK,UAAak6F,EAsK3C1kG,aA9MqD,CAuK7C,IAtKIoZ,EAASvpB,KAAKuhE,YAAY5mD,EAAK,UAuKnC,GAAI4O,IACFsrF,EAtKiBtrF,EAAO+S,UACF9a,MAAMrY,QAAQ0rG,GAAiB,CAuKnD,IAtKIltG,GAAQ,EAuKZktG,EAtKex2F,QAAQ,SAAC22F,EAAKtpG,GAuKvBspG,EAtKIzwG,OAASywG,EAAIjgF,MAuKfigF,EAtKIzwG,QAAUwwG,GAAkBC,EAAIjgF,QAAUggF,IAuKhDptG,EAtKQ+D,GAyKNspG,IAtKQD,IAuKVptG,EAtKQ+D,MAIA,IAsKV/D,GACFktG,EAtKehtG,OAAOF,EAAO,GAwK/B4hB,EAtKO+S,QAAYu4E,EAsK/B1kG,QACYnQ,KAtKK8hF,YAAYnnE,EAAK,SAAU4O,IA2LtCvpB,KAtKKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,UAAWz1C,MAAOkhG,EAAQnpE,YAIxEkpB,EAAHllD,UAAA20G,mBAAG,SA4KCt6F,EACA4O,EACA2rF,GA9KD,IAAH/zG,EAAAnB,KAKQylG,EAAUzlG,KAAKizG,WAAWt4F,GA4K9B,GAAI8qF,IA3KWA,EAASkC,0BAA2B,CA4KjD,IA3KIwN,EAAiB,CA4KnBz3B,gBA3KiB+nB,EAAQl8E,OAAOm0D,iBA6K9Bn0D,EA3KOijF,YAAcjjF,EAAO6rF,mBAAqB7rF,EAAO8rF,eA4K1DF,EA3KYh1G,OAAO24B,OAAOq8E,EAAW,CA4KnCh4E,OA3KQ5T,EAAO4T,OA4Kfb,QA3KS,SAAApN,GA4KP,OAAI3F,EA3KO8rF,eACF9rF,EAAO8rF,eAAenmF,EAAO/tB,EAAK8/C,MAEpC,IAAI/F,QAAQ,SAACC,EAASiI,GAiKvC,IAhKgBnI,EAAM1xB,EAAO6rF,kBAAoB7rF,EAAO6rF,kBAAkBlmF,GAAS3F,EAAUijF,WAgK/F,YAhK0Gt9E,GAAmB,IA4K3GA,GA3KSA,EAAMhkB,OA4KjB/J,EA3KK8/C,KA4KFx9C,IA3KIw3C,GA4KJt6B,IA3KI,SAACklB,GA4KJ,OAAIqvE,EA1KKrvE,EAAQllB,IAAIu0F,GAEdrvE,IA6KRx3B,UA3KU8sC,EAASiI,GA6KtBjI,EA3KQ,SAKX5xB,EAAW+S,UA4KhB64E,EA3KU74E,QAAY/S,EAAS+S,QA2KvCnsB,SAEMnQ,KA3KK8hF,YAAYnnE,EAAK,SAAUw6F,GA4KhCn1G,KA3KKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,eAAgBz1C,MAAOglB,MAIrEi8B,EAAHllD,UAAAg1G,WAAG,SAAA36F,EAAAsqB,GAAA,IAAH9jC,EAAAnB,KACQylG,EAAUzlG,KAAKizG,WAAWt4F,GAgL1B8qF,IA/KWA,EAASkC,4BAgLlB1iE,GACFjlC,KA/KK0kG,KAAKD,SAAS9pF,GAAK46F,yBAA0B,EAgLlD9P,EA/KQkD,UAAU,CAAE1jE,SAAS,IAiL7B/K,aA/Kal6B,KAAKw1G,mBAgLlBx1G,KA/KKw1G,kBAAoB/kG,WAAW,WAgLlCtP,EA/KKm0G,WAAW36F,GAAK,GAgLrBxZ,EA/KK4yG,WAAWp5F,EAAKxZ,EAAK+2B,OAAOgnC,aAAc,QAAQ,GAgLvD/9D,EA/KK2gF,YAAYnnE,EAAK,0BAA0B,IAC/C,OAiLH3a,KA/KK0kG,KAAKD,SAAS9pF,GAAK46F,yBAA0B,EAgLlDr7E,aA/Kal6B,KAAKw1G,mBAgLlB/P,EA/KQkD,UAAU,CAAE1jE,QAAS,OAgL7BwgE,EA/KQyC,uBAAuB,CAAEC,WAAW,IAgLxCnoG,KA/KKuhE,YAAY5mD,EAAK,2BAgLxB3a,KA/KK8hF,YAAYnnE,EAAK,UAAW,OAkLrC3a,KA/KKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,UAAWz1C,MAAO0gC,MAIhEugB,EAAHllD,UAAA2sG,WAAG,SAsLCtyF,EACA86F,EACA/tD,EACAg/C,GAEA,QAHJ,IAAAh/C,IAAIA,EAAmBlC,EAAoBkwD,gBAAgBC,cAlLlDF,EAAgB96F,MAAO86F,EAAiBv6F,KAuL3C,OADA+qB,QArLQnhC,MAAM,+DACP,KA6LT,GA1LK2wG,EAAgB96F,MAuLnB86F,EArLgB96F,IAAM86F,EAAgBv6F,MAwLpClb,KArLK0kG,KAAKD,SAASgR,EAAgB96F,KAuLrC,OArLO,KAwLT,IApLIi7F,EAAeC,EAsLnB,GAvLc71G,KAAK0kG,KAAKD,SAAS9pF,GAEpB,CAmMX,OAZAk7F,EADAD,GArLgB,EAwLhB51G,KArLK0kG,KAAKG,UAAUxmF,QAAQ,SAACinF,EAAUwQ,GAsLrCxQ,EArLSb,SAASpmF,QAAQ,SAAC03F,EAAiBC,GAsLtCD,EArLgBp7F,MAAQA,IAsL1Bi7F,EArLgBE,EAsLhBD,EArLeG,OA2LbtuD,GACN,KArLKlC,EAAoBkwD,gBAAgBC,YAwLvC,MACF,KArLKnwD,EAAoBkwD,gBAAgBO,YAuLvCJ,GArLgB,EAsLhB,MACF,KArLKrwD,EAAoBkwD,gBAAgBQ,YAwLvCN,EADAC,EArLe,EAuLf,MACF,KArLKrwD,EAAoBkwD,gBAAgBS,eAuLvCP,EArLgB51G,KAAK0kG,KAAKG,UAAU35F,OAAS,EAsL7C2qG,EArLe71G,KAAK0kG,KAAKG,UAAU+Q,GAAenR,SAASv5F,OA2L/D,IArLsB,IAqLlB0qG,IArLyC,IAAjBC,EAAqB,CAsL/C,IArLIO,EAAcp2G,KAAKoyG,UAAUrD,mBAAmB0G,EAAiBz1G,KAAKihD,KAAM,IAsLhFm1D,EArLY1Q,QAAS,EAsLrB,IArLIsH,EAAc,IAAI3G,gBAAgBK,EAAc0P,GAsLpDp2G,KArLK0kG,KAAKuI,WAAWmJ,EAAYz7F,IAAKqyF,GAsLtChtG,KArLK0kG,KAAKG,UAAU+Q,GAAenR,SAAS58F,OAAOguG,EAAc,EAAGO,GAsLpEp2G,KArLKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,aAAcz1C,MAAOyoG,OAKrExnD,EAAHllD,UAAA+1G,cAAG,SAAA17F,GAyLC,IAxLK3a,KAAK0kG,KAAKD,SAAS9pF,GA0LtB,OAxLO,KA0LT,IAxLI8qF,EAAUzlG,KAAKizG,WAAWt4F,GAyL9B,GAAI8qF,IAxLWA,EAASkC,0BAA2B,CAyLjD,IAxLI2O,GAAgB,EAChBC,GAAe,EA0LnBv2G,KAxLK0kG,KAAKG,UAAUxmF,QAAQ,SAACinF,EAAUwQ,GAyLrCxQ,EAxLSb,SAASpmF,QAAQ,SAAC03F,EAAiBC,GAyLtCD,EAxLgBp7F,MAAQA,IAyL1B27F,EAxLgBR,EAyLhBS,EAxLeP,QAKC,IAwLlBM,IAxLyC,IAAjBC,IAyL1Bv2G,KAxLK0kG,KAAK2R,cAAc17F,GAyLxB3a,KAxLK0kG,KAAKG,UAAUyR,GAAe7R,SAAS58F,OAAO0uG,EAAc,GAyLjEv2G,KAxLKszG,aAAa,CAAEC,WAAY54F,EAAKq/B,KAAM,gBAAiBz1C,MAAOoW,OAKxE6qC,EAAHllD,UAAA+5B,SAAG,SAAAm8E,EAAAC,GA6LC,IA5LIC,OADR,IAAAD,IAAGA,EAAH,IA8LIv8E,aA5Law8E,GA6LbA,EA5LIjmG,WAAW,WAAM,OAAA+lG,KAAQC,IAG9BjxD,EAAHllD,UAAAgzG,aAAG,SAAA1iF,GAgMK5wB,KA/LK0kG,MAAQ1kG,KAAK0kG,KAAKoE,wBAgMzB9oG,KA/LK0kG,KAAKoE,uBAAuB/mG,KAAK6uB,MAjqB5C,GAgBgB40B,oBAAhBkwD,gBAAkC,CAC9BC,YAAa,cACbM,YAAa,cACbC,YAAa,cACbC,eAAgB,kBAgpBb3wD,oBAAPjjD,WAA2C,CAgM3C,CA/LE9B,KAAMqjC,KAAAA,aAGP0hB,oBAAD1hD,eAAC,WAAA,MAAA,CAkMD,CAACrD,KAAM4kD,kBACP,CAAC5kD,KAAM2kD,kBACP,CAAC3kD,KAAM0wD,WACP,CAAC1wD,KAAM6+C,KAAAA,YACP,CAAC7+C,KAAMi6B,oBCr3BP,IAAAi8E,aAAA,WA8CA,SAAAA,EANqBr3F,GAAAtf,KAArBsf,QAAqBA,SAArBq3F,EAAAr2G,UAAAs2G,QAAA,SAJGC,GAKC72G,KAJK82G,UAaTH,EAAAr2G,UAAA8vB,mBAAA,WAAA,IAAAjvB,EAAAnB,KACIyQ,WARW,WASTtP,EARK21G,YAcXH,EAAAr2G,UAAAw2G,OAAA,WACI,IAVMxiF,EAAgBt0B,KAAKsf,QAAQgV,cAWnCA,EAVc7F,MAAMK,OAASwF,EAAc7F,MAAM4c,UAWjD/W,EAVc7F,MAAMK,OAASwF,EAAiB0mD,aAUlD,QA7DA,GAqDO27B,aAAPp0G,WAA2C,CAW3C,CAVE9B,KAAMC,KAAAA,UAAWC,KAAM,CAAA,CAWvBC,SAVU,yBAIX+1G,aAAD7yG,eAAC,WAAA,MAAA,CAaD,CAACrD,KAAMizB,KAAAA,cAVAijF,aAAP5yG,eAAgE,CAahE6yG,QAZW,CAAA,CAAGn2G,KAAM8zC,KAAAA,aAAc5zC,KAAM,CAAA,QAAU,CAAA,qBAgBlD,IAAAo2G,mBAAA,SAAA5zG,GA8EA,SAAA4zG,EACIz3F,EAlCO4Y,EACCslE,EACAwZ,EACAC,EACA1/E,EACC6rC,QAAb,IAAAA,IAAaA,EAAb,SA4BA,IAAAjiE,EASIgC,EATJiB,KAAApE,KASUsf,IATVtf,YAjCWmB,EAAX+2B,OAAWA,EACC/2B,EAAZq8F,kBAAYA,EACAr8F,EAAZ61G,oBAAYA,EACA71G,EAAZ81G,gBAAYA,EACA91G,EAAZo2B,kBAAYA,EACCp2B,EAAbiiE,OAAaA,EA9BXjiE,EAAFkvE,WAzBuB,EA2BrBlvE,EAAFwjG,WAzBuB,EA2BrBxjG,EAAFshC,OAzB8B,IAAIphC,KAAAA,aA2BhCF,EAAFk0D,KAzB4B,IAAIh0D,KAAAA,aA2B9BF,EAAF07D,KAzB4B,IAAIx7D,KAAAA,aA2B9BF,EAAFid,UAzB8B,IAAI/c,KAAAA,aA2BhCF,EAAF+1G,OAzB8B,IAAI71G,KAAAA,aAWxBF,EAAVg2G,aAAmD,IAAI91G,KAAAA,aAC7CF,EAAVi2G,cAAoD,IAAI/1G,KAAAA,aAC9CF,EAAVk2G,UAA8B,EACpBl2G,EAAVm2G,aAAiC,GA4B/Bn2G,EAAFs8F,eA3B2B,GA6BzBt8F,EAAFo2G,cA3B0B,EA4BxBp2G,EAAFq2G,eA3B2B,EAKjBr2G,EAAVs2G,YAAgC,EAItBt2G,EAAVu2G,wBAA8C,GA+B5Cv2G,EAAF6mC,UA3BmB,GA6BjB7mC,EAAF8jC,SA3BqB,EA4BnB9jC,EAAFw2G,iBA3B6B,aApD5Bn0G,UAADuzG,EAAA5zG,GA+CAhD,OAAAC,eA3BG22G,EA2BHz2G,UAAA,SAAA,CAAAmD,IAAA,WACI,OA3BOzD,KAAKm3G,aAAar5F,gDAgC7B3d,OAAAC,eA5BG22G,EA4BHz2G,UAAA,UAAA,CAAAmD,IAAA,WACI,OA5BOzD,KAAKo3G,cAAct5F,gDA6E9B3d,OAAAC,eArCG22G,EAqCHz2G,UAAA,oBAAA,CAAAmD,IAAA,WAAA,IAAAtC,EAAAnB,KACI,OAAIA,KArCK03G,yBAA2B13G,KAAK03G,wBAAwBxsG,QACxDlL,KAAK03G,wBAAwBnqB,KAAK,SAACrwD,GAAkB,OAAAA,IAAU/7B,EAAKy2G,gBAEpE,oCA2Cbz3G,OAAAC,eAvCG22G,EAuCHz2G,UAAA,sBAAA,CAAAmD,IAAA,WAAA,IAAAtC,EAAAnB,KACI,OAAIA,KAvCKylB,QAAUzlB,KAAKylB,OAAO+kF,iBAAmBxqG,KAAKylB,OAAO+kF,gBAAgBt/F,QACrElL,KAAKylB,OAAO+kF,gBAAgBjd,KAAK,SAACrwD,GAAkB,OAAAA,IAAU/7B,EAAKy2G,gBAEnE,oCA6Cbz3G,OAAAC,eAzCG22G,EAyCHz2G,UAAA,mBAAA,CAAAmD,IAAA,WACI,OAzCOzD,KAAMylB,SAAUzlB,KAAMu3G,cAAgB39E,QAAQ+N,QAAQ3nC,KAAKylG,QAAQ3mD,8CA8C9E3+C,OAAAC,eA3CG22G,EA2CHz2G,UAAA,0BAAA,CAAAmD,IAAA,WACI,OACGzD,KA3CK63G,SAAW73G,KAAKu3G,cAAgBv3G,KAAK0xE,WAAa1xE,KAAKylB,QAAUzlB,KAAMylB,SAAUzlB,KAAMylB,OAAOi6C,YA4CnG1/D,KA3CK63G,SA4CJ73G,KA3CK83G,mBA4CL93G,KA3CK0xE,WACH1xE,KAAKylB,QAAUzlB,KAAMylB,SAAUzlB,KAAMylB,OAAO+kF,gBAAgBjjE,SAASvnC,KAAK83G,qDAiDpF33G,OAAAC,eA7CG22G,EA6CHz2G,UAAA,iBAAA,CAAAmD,IAAA,WACI,OACGzD,KA7CK63G,SAAW73G,KAAKylB,QA8CrBzlB,KA7CK0xE,SAAW1xE,KAAKylB,QAAUzlB,KAAKylB,OAAOi6C,WAAa1/D,KAAKylB,OAAO+kF,iBA8CpExqG,KA7CK0xE,SAAW1xE,KAAKylB,QAAUzlB,KAAKylB,OAAOi6C,WAAa1/D,KAAKylB,OAAO+kF,iBAAmBxqG,KAAK+3G,qDAmDnG53G,OAAAC,eA/CG22G,EA+CHz2G,UAAA,YAAA,CAAAmD,IAAA,WACI,IA/CIu0G,EAgDFh4G,KA/CK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+kD,WAgDrC1/D,KA/CK0xE,UACiD,cA+CrD1xE,KA/CK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,aAAoF,YAArDnnG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,aAgD5G,OA/COnnG,KAAKy3G,YAAcO,GAqD9Bt0G,IAAA,SAlDGa,GAmDCvE,KAlDKy3G,WAAalzG,mCAuDtBwyG,EAAAz2G,UAAAk5C,gBAAA,WAAA,IAAAr4C,EAAAnB,KAEQA,KApDK2kG,YADyB,CAAA,SAAW,OAAQ,OAAQ,aACtBp9D,SAASvnC,KAAKylG,QAAQ0B,cAqD3D12F,WApDW,WAqDT,IApDIwtB,EAAqB98B,EAAKme,QAAQgV,cAAc2E,cAAc,SAqD9DgF,GACFA,EApDM7C,WA4DhB27E,EAAAz2G,UAAA8vB,mBAAA,WAAA,IAAAjvB,EAAAnB,KAEI,GAAIA,KAtDKylG,QAAQgC,eAAgBznG,KAAM0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKgtF,0BAuDrE,IAtDN,IAAAsQ,EAAA,SAAeC,GAuDP,OAAQA,EAtDYtnF,OAuDlB,IAtDK,OAuDHunF,EAtDKC,wBAA0BD,EAAK7lB,OAAO5D,aAAa,KAAKrgF,UAAU,WAChElN,EAAKujG,KAAKD,SAAStjG,EAAKskG,QAAQ9qF,KAAKgtF,2BAuDxCxmG,EAtDKk3G,mBAAmBH,KAyD5B,MACF,IAtDK,QAuDHC,EAtDKC,wBAA0BD,EAAKr6E,QAAQ4wD,aAAa,KAAKrgF,UAAU,WACjElN,EAAKujG,KAAKD,SAAStjG,EAAKskG,QAAQ9qF,KAAKgtF,2BAuDxCxmG,EAtDKk3G,mBAAmBH,KAyD5B,MACF,IAtDK,SAuDHC,EAtDKC,wBAA0BD,EAAKzT,KAAKD,SAAS0T,EAAK1S,QAAQ9qF,KAAK29F,aAAa5pB,aAAa,KAAKrgF,UAAU,WACtGlN,EAAKujG,KAAKD,SAAStjG,EAAKskG,QAAQ9qF,KAAKgtF,2BAuDxCxmG,EAtDKk3G,mBAAmBH,KAyD5B,MACF,IAtDK,OAuDHA,EAtDYK,cAAe,EA2D3BL,EAtDYK,eACTJ,EAAKzT,KAAKD,SAAS0T,EAAK1S,QAAQ9qF,KAAKgtF,2BAuDxCwQ,EAtDKE,mBAAmBH,YAuBpCt1E,EAAA,EAtD8BI,EAAAhjC,KAAKylG,QAAQgC,aAAb7kE,EAsD9BI,EAAA93B,OAtD8B03B,IAsD9B,CAAAq1E,EAAAj1E,EAAAJ,IAoCInyB,WAtDW,WAuDTtP,EAtDK6mC,UAAY7mC,EAAK81G,gBAAgB9S,SAuDtChjG,EAtDK8jC,SAAU,EAuDf9jC,EAtDKo2B,kBAAkBt1B,kBA4D7B80G,EAAAz2G,UAAA04B,SAAA,WAAA,IAAA73B,EAAAnB,KACIA,KAxDKilC,SAAU,EA0DXjlC,KAxDKylG,SAAWzlG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKpW,QAEA,YAwDrDvE,KAxDK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,aACgB,cAwDrDnnG,KAxDK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,cA0DrCnnG,KAxDKw3G,eAAiBx3G,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKpW,MAAM2G,SA2DjElL,KAxDKylG,UA0DPzlG,KAxDKw4G,uBAAyBx4G,KAAKylG,QAAQ2D,WAAW/6F,UAAU,WAyD9DlN,EAxDK86B,eA2DPj8B,KAxDKy4G,yBAA2Bz4G,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+9F,cAAcrqG,UAAU,SAACsqG,GAyD5Fx3G,EAxDKujG,KAAKD,SAAStjG,EAAKskG,QAAQ9qF,KAAOxZ,EAAKy3G,gBAAgBtkE,UAC3C,YAwDbqkE,GAxD0Bx3G,EAAKujG,KAAKwD,wBAyDtC/mG,EAxDKujG,KAAKwD,4BA4DhBloG,KAxDK44G,gBAAkB,CAyDrBtkE,UAxDWt0C,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAyD3Ck+F,QAxDS,CAyDPC,aAxDc94G,KAAK84G,aAAa7xG,KAAKjH,MAyDrC+4G,WAxDY/4G,KAAK+4G,WAAW9xG,KAAKjH,MAyDjCqiG,YAxDariG,KAAKqiG,YAAYp7F,KAAKjH,MAyDnCg5G,oBAxDqBh5G,KAAKg5G,oBAAoB/xG,KAAKjH,MAyDnDoiG,WAxDYpiG,KAAKoiG,WAAWn7F,KAAKjH,MAyDjCi5G,oBAxDqBj5G,KAAKi5G,oBAAoBhyG,KAAKjH,MAyDnDk5G,WAxDYl5G,KAAKk5G,WAAWjyG,KAAKjH,MAyDjCm5G,WAxDYn5G,KAAKm5G,WAAWlyG,KAAKjH,MAyDjCo5G,aAxDcp5G,KAAKo5G,aAAanyG,KAAKjH,MAyDrCq5G,aAxDcr5G,KAAKq5G,aAAapyG,KAAKjH,MAyDrCs5G,YAxDat5G,KAAKs5G,YAAYryG,KAAKjH,MAyDnCu5G,mBAxDoBv5G,KAAKu5G,mBAAmBtyG,KAAKjH,MAyDjDw5G,oBAxDqBx5G,KAAKw5G,oBAAoBvyG,KAAKjH,MAyDnDy5G,aAxDcz5G,KAAKy5G,aAAaxyG,KAAKjH,MAyDrC05G,eAxDgB15G,KAAK05G,eAAezyG,KAAKjH,MAyDzC24B,aAxDc34B,KAAK24B,aAAa1xB,KAAKjH,MAyDrC25G,qBAxDsB35G,KAAK25G,qBAAqB1yG,KAAKjH,MAyDrD45G,qBAxDsB55G,KAAK45G,qBAAqB3yG,KAAKjH,OA0DvD0kG,KAxDM1kG,KAAK0kG,MA0Db1kG,KAxDK44G,gBAAgBtkE,UAAUq2B,gBAAkB3qE,KAAK2qE,gBAyDtD3qE,KAxDK44G,gBAAgBtkE,UAAUqlB,QAAU35D,KAAK25D,QAyD9C35D,KAxDK44G,gBAAgBtkE,UAAUwyD,YAAc9mG,KAAK8mG,YAyDlD9mG,KAxDK44G,gBAAgBtkE,UAAUyyD,eAAiB/mG,KAAK+mG,eAyDrD/mG,KAxDK44G,gBAAgBtkE,UAAU0yD,mBAAqBhnG,KAAKgnG,mBAyDzDhnG,KAxDK44G,gBAAgBtkE,UAAU+oC,aAAer9E,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK0iE,aAyDnFr9E,KAxDK44G,gBAAgBtkE,UAAUmuD,0BAA4BziG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK8nF,0BAyDhGziG,KAxDK44G,gBAAgBtkE,UAAU8uD,QAAUpjG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKyoF,QAyD9EpjG,KAxDK44G,gBAAgBtkE,UAAUizD,eAAiBvnG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK4sF,eAyDrFvnG,KAxDK44G,gBAAgBtkE,UAAUulE,aAAe75G,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKk/F,aAyDnF75G,KAxDK44G,gBAAgBtkE,UAAU/qB,OAASvpB,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK4O,OA0DzEvpB,KAxDK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,MAAyD,eAAjD3a,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKisF,UAC1EhtE,QAAQ3hB,QAAQjY,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKpW,SAyDxDvE,KAxDK44G,gBAAgBtkE,UAAUulE,aAAe7vG,QACE,IAwD7ChK,KAxDK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKpW,OAAau1G,QAAQ,GAAG/2E,QAAQ,SAAU,MA2DpF/iC,KAxDK+5G,0BAA4B/5G,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK6rF,oBAAoBn4F,UAAU,SAAC9J,GAC9Fq1B,QAAQ3hB,QAAQ1T,KAyDnBpD,EAxDKy3G,gBAAgBtkE,UAAUulE,aAAe7vG,QAAgB,IAARzF,GAAau1G,QAAQ,GAAG/2E,QAAQ,SAAU,SA6DtG/iC,KAxDK23G,iBAAmB33G,KAAKg6G,uBA6DjCjD,EAAAz2G,UAAA05G,oBAAA,WAEI,OA3Da,IAAI15C,KAAKqB,aAAa3hE,KAAKojE,QAAQjmC,OAAO,KAAK,IAgEhE45E,EAAAz2G,UAAA6B,YAAA,WAEQnC,KA5DKo4G,yBA6DPp4G,KA5DKo4G,wBAAwB9yG,cAiE3BtF,KA5DKw4G,wBA8DPx4G,KA5DKw4G,uBAAuBlzG,cA8D1BtF,KA5DK+5G,2BA8DP/5G,KA5DK+5G,0BAA0Bz0G,cA8D7BtF,KA5DKi6G,wBA6DPj6G,KA5DKi6G,uBAAuB30G,cA8D1BtF,KA5DKy4G,0BA6DPz4G,KA5DKy4G,yBAAyBnzG,cA8DhCnC,EAAJ7C,UA5DU6B,YA4DViC,KAAApE,OAKAG,OAAAC,eA9DG22G,EA8DHz2G,UAAA,SAAA,CAAAmD,IAAA,WACI,OA9DOzD,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK8K,wCAmEhDtlB,OAAAC,eAhEG22G,EAgEHz2G,UAAA,UAAA,CAAAmD,IAAA,WACI,OAhEOzD,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKuyE,uCAqEhD/sF,OAAAC,eAlEG22G,EAkEHz2G,UAAA,UAAA,CAAAmD,IAAA,WACI,OAlEOzD,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKorF,OAAS/lG,KAAKylG,QAAQM,uCAuEtE5lG,OAAAC,eApEG22G,EAoEHz2G,UAAA,WAAA,CAAAmD,IAAA,WACI,OApEOm2B,QAAS3hB,QAAQjY,KAAK0kG,KAAKngG,MAAMvE,KAAKylG,QAAQ9qF,uCAyEzDxa,OAAAC,eAtEG22G,EAsEHz2G,UAAA,UAAA,CAAAmD,IAAA,WACI,OAtEOzD,KAAKq3G,0CA2EhBl3G,OAAAC,eAxEG22G,EAwEHz2G,UAAA,UAAA,CAAAmD,IAAA,WACI,OAxEOzD,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKg/C,yCA6EhDx5D,OAAAC,eA1EG22G,EA0EHz2G,UAAA,kBAAA,CAAAmD,IAAA,WACI,OAAIm2B,QA1EQ+N,QAAQ3nC,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKgwD,iBAChD,QAEF3qE,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKgwD,iDA+EhDxqE,OAAAC,eA5EG22G,EA4EHz2G,UAAA,cAAA,CAAAmD,IAAA,WACI,OAAIm2B,QA5EQ+N,QAAQ3nC,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKmsF,aAChD,GAEF9mG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKmsF,6CAiFhD3mG,OAAAC,eA9EG22G,EA8EHz2G,UAAA,iBAAA,CAAAmD,IAAA,WACI,OAAIm2B,QA9EQ+N,QAAQ3nC,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKosF,iBAGlD/mG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKosF,gDAmFhD5mG,OAAAC,eAhFG22G,EAgFHz2G,UAAA,qBAAA,CAAAmD,IAAA,WACI,OAAIm2B,QAhFQ+N,QAAQ3nC,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKqsF,qBAGlDhnG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKqsF,oDAqFhD7mG,OAAAC,eAlFG22G,EAkFHz2G,UAAA,eAAA,CAAAmD,IAAA,WAEI,QAlFyD,WAkFrDzD,KAlFK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,cAA4BnnG,KAAKs3G,aAAapsG,UAoBrB,IAoEhE,CACE,QACA,YACA,WACA,OACA,OACA,YACA,UACA,OACA,SACA,aACA,QACA,YACA,cAjFAtD,QAAQ5H,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,8CAwFrDhnG,OAAAC,eApFG22G,EAoFHz2G,UAAA,uBAAA,CAAAmD,IAAA,WAEI,QApFyD,WAoFrDzD,KApFK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,cAA4BnnG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKysF,WAAYpnG,KAAKqE,2CA6F/H0yG,EAAAz2G,UAAA+3G,mBAAA,SAvFGH,GAuFH,IAAA/2G,EAAAnB,KACQk4G,EAvFYgC,QAAUtgF,QAAQo4B,WAAWkmD,EAAYgC,SAwFvDzpG,WAvFW,WAwFTtP,EAvFK61G,oBAAoBtS,KAAOvjG,EAAKujG,KAwFrCvjG,EAvFK61G,oBAAoBjE,WAAa5xG,EAAKskG,QAAQ9qF,IAwFnD,IACEu9F,EAvFYgC,OAAO/4G,EAAK61G,oBAAqB71G,EAAKskG,QAAQ9qF,KAC1D,MAAA5N,GAwFAk5B,QAvFQud,KAAK,2BAA4BriD,EAAKskG,QAAQ9qF,KAwFtDsrB,QAvFQnhC,MAAMiI,OAgGxBgqG,EAAAz2G,UAAAm5G,aAAA,SA1FG7oF,GA2FC5wB,KA1FKq3G,SAAWzmF,GAASA,EAAM1lB,OA2F/BlL,KA1FKs3G,aAAe1mF,GAiGxBmmF,EAAAz2G,UAAA+hG,YAAA,SA9FGzxE,EAAAsM,GA+FCl9B,KA9FKq3G,UAAW,EA+FhBr3G,KA9FK43G,aAAe16E,EACftD,QAAQ+N,QAAQ3nC,KAAKm6G,sBAAwBn6G,KAAKm6G,sBAAwBj9E,EAGxB,YA8FrDl9B,KA9FK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKwsF,cA+FrCjqE,GACCtD,QA9FQ3hB,QAAQjY,KAAK0kG,KAAKngG,MAAMvE,KAAKylG,QAAQ9qF,OA+F7Cif,QA9FQ+N,QAAQ3nC,KAAK0kG,KAAKngG,MAAMvE,KAAKylG,QAAQ9qF,KAAKuiB,KAgGnDl9B,KA9FKw5G,oBAAoB,CAAEj1G,MAAOvE,KAAK0kG,KAAKngG,MAAMvE,KAAKylG,QAAQ9qF,KAAKuiB,GAAQA,MA8FlFA,IAPMl9B,KA9FKo6G,WAAY,EAuGnBp6G,KA9FKo3G,cAAcr1G,KAAK6uB,IAoG5BmmF,EAAAz2G,UAAA8hG,WAAA,SAjGGxxE,GAkGC5wB,KAjGKq3G,UAAW,EAkGhBr3G,KAjGK43G,aAAe,GAkGpB53G,KAjGKo6G,WAAY,EAkGjBp6G,KAjGKm3G,aAAap1G,KAAK6uB,IAsG3BmmF,EAAAz2G,UAAA27B,WAAA,WACIj8B,KAnGK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKi7C,SAAS,MAoG9C51D,KAnGKy9F,eAAiB,MAyG1BsZ,EAAAz2G,UAAA24G,oBAAA,SAtGGroF,GAuGC5wB,KAtGK+4G,WAAWnoF,GAuGhB5wB,KAtGK84G,aAAaloF,IA4GtBmmF,EAAAz2G,UAAA+5G,eAAA,SAzGGzpF,GA0GK5wB,KAzGKylG,SAAWzlG,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+kD,YA0GvD1/D,KAzGKw3G,eAAiB5mF,EAAM6O,OAAOl7B,MAAM2G,OA0GzClL,KAzGKu3G,aAAe3mF,EAAM6O,OAAOl7B,MAAM2G,QAAUlL,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+kD,YAgH5Fq3C,EAAAz2G,UAAAi5G,mBAAA,SA5GG3oF,GA6GKgJ,QA5GQ3hB,QAAQ2Y,EAAMrsB,SA6GxBvE,KA5GKq3G,UAAW,EA6GhBr3G,KA5GKs3G,aAAe,IA8GtBt3G,KA5GK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKq0E,SAAWp+D,EAAMo+D,SA6GtDhvF,KA5GKyiC,OAAO1gC,KAAK6uB,EAAMrsB,QAkH3BwyG,EAAAz2G,UAAAg5G,YAAA,SA/GG/0G,GAgHKq1B,QA/GQ3hB,QAAQ1T,KAgHlBvE,KA/GKq3G,UAAW,EAgHhBr3G,KA/GKs3G,aAAe,IAiHtBt3G,KA/GKyiC,OAAO1gC,KAAKwC,IAqHrBwyG,EAAAz2G,UAAAs5G,qBAAA,SAlHGhpF,GAmHC5wB,KAlHKq3G,UAAW,EAmHhBr3G,KAlHK43G,aAAe,GAmHpB53G,KAlHKo6G,WAAY,EACoC,WAkHjDp6G,KAlHK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKisF,SAmHvC5mG,KAlHK25G,uBAoHP35G,KAlHKm3G,aAAap1G,KAAK6uB,IAuH3BmmF,EAAAz2G,UAAAq5G,qBAAA,WAEQ35G,KApHK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKpW,QADpB,cAC2C4uD,KAAKnzD,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKpW,QAqHxGvE,KApHK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+tF,cAqHhC1oG,KApHKk4B,OAAOsnC,oBAmHvB,IAnH2Cx/D,KAAQ0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKoa,MAAMqhC,gBA4HzF2gD,EAAAz2G,UAAAw4G,aAAA,SAvHGloF,GAwHC,IApHM0pF,EAAe,CAAA,YAAc,SAAU,YAAa,aAAc,OACpE3/F,EAAMiW,EAAMjW,IAGqC,WAuHjD3a,KAvHK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKisF,SAPpB,UAO2DzzC,KAAKx4C,IAAQ2/F,EAAa/yE,SAAS5sB,IA0HhH,CAvHC,WAAY,QAAS,cAAc/S,QAAQ5H,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKisF,YAErD,MAuH1B5mG,KAvHK23G,kBAXuB,YAW8BxkD,KAAKx4C,IACrC,MAuH1B3a,KAvHK23G,kBAXyB,YAW8BxkD,KAAKx4C,IAwHlE2/F,EAvHa/yE,SAAS5sB,KA0HxBiW,EAvHMoC,iBA8GNpC,EAvHMoC,iBAmIJhzB,KAvHK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+kD,WAAa9uC,EAAM6O,OAAOl7B,MAAM2G,QAAUlL,KAAK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAK+kD,WAwHtH9uC,EAvHMoC,kBA8HZ+jF,EAAAz2G,UAAA04G,oBAAA,SA1HGpoF,GA2HC,IA1HIrsB,EAAQqsB,EAAM6O,OAAQ,MACtB86E,EAAU3gF,QAAQ3hB,QAAQ1T,GAAS,KAAOyF,QAAQzF,EAAQ,KAAKu1G,QAAQ,GAAG/2E,QAAQ,SAAU,KAC3FnJ,QAAQ3hB,QAAQsiG,IA8HnBv6G,KA1HKyiC,OAAO1gC,KAAK,MA2HjB/B,KA1HK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKi7C,SAAS,QAsH9C51D,KA1HKyiC,OAAO1gC,KAAKw4G,GA2HjBv6G,KA1HK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKi7C,SAAS2kD,KAoIpDxD,EAAAz2G,UAAAk6G,oBAAA,SA7HG5pF,GA8HK5wB,KA7HKsI,QAAUsoB,GAASA,EAAMiC,UA8H5BjC,EA7HMiC,UAAYyG,SAASC,KAAO3I,EAAMiC,UAAYyG,SAASw7C,KA8H/D90E,KA7HK24B,aAAa/H,GAAO,KAqIjCmmF,EAAAz2G,UAAAy4G,WAAA,SAhIGx0G,GAiICvE,KAhIKyiC,OAAO1gC,KAAKwC,GAiIjBvE,KAhIKq6G,eAAe91G,IAsIxBwyG,EAAAz2G,UAAA44G,WAAA,SAnIG30G,GAoICvE,KAnIKq1D,KAAKtzD,KAAKwC,IAyInBwyG,EAAAz2G,UAAA64G,WAAA,SAtIG50G,GAuICvE,KAtIK68D,KAAK96D,KAAKwC,IA4InBwyG,EAAAz2G,UAAA84G,aAAA,SAzIG70G,GA0ICvE,KAzIKoe,UAAOrc,KAAKwC,IA+IrBwyG,EAAAz2G,UAAA+4G,aAAA,SA5IG90G,GA6ICvE,KA5IKk3G,OAAOn1G,KAAKwC,IAkJrBwyG,EAAAz2G,UAAAk5G,oBAAA,SA/IG38E,GAiJGA,IACCjD,QA/IQ+N,QAAQ9K,EAAKt4B,QA4G1Bs4B,EA3GSK,OAgJLl9B,KA/IKylG,QAAQl8E,OAAOsT,EAAKK,SAgJxBtD,QA/IQ3hB,QAAQjY,KAAKylG,QAAQl8E,OAAOsT,EAAKK,OAAOwiC,aAiJjD1/D,KA/IKw3G,eAAiB36E,EAAKt4B,MAAM2G,OAgJjClL,KA/IKm6G,oBAAsBt9E,EAAKK,MAgJhCl9B,KA/IKqpG,UAAYrpG,KAAKylG,QAAQl8E,OAAOsT,EAAKK,OAAOwiC,UAgJjD1/D,KA/IKo6G,WAAY,EAgJbp6G,KA/IKqpG,YAAcrpG,KAAKw3G,eAgJ1Bx3G,KA/IK03G,wBAAwBjvG,KAAKo0B,EAAKK,OAiJvCl9B,KA/IK03G,wBAA0B13G,KAAK03G,wBAAwBt7F,OAAO,SAAC8gB,GAAkB,OAAAA,IAAUL,EAAKK,UAuJ7G65E,EAAAz2G,UAAAo5G,eAAA,SAnJGe,GAoJC,IAnJItS,IAAqBsS,EAoJzBz6G,KAnJK0kG,KAAKD,SAASzkG,KAAKylG,QAAQ9qF,KAAKutF,uBAAuB,CAAEC,UAmJlEA,OA9qBA,CAXC3tE,cAwiBMu8E,mBAAPx0G,WAA2C,CAoJ3C,CAnJE9B,KAAMwwB,KAAAA,UAAWtwB,KAAM,CAAA,CAoJvBC,SAnJU,eAoJVuwB,SAnJU,uoQA4OVvtB,KAnJM,CAoJJ+0D,UAnJW,yCAoJX+hD,2BAnJ4B,yCAoJ5B7pC,mBAnJoB,sCAoJpB8pC,iBAnJkB,oCAoJlBC,0BAnJ2B,mBAK9B7D,mBAADjzG,eAAC,WAAA,MAAA,CAsJD,CAACrD,KAAMizB,KAAAA,YACP,CAACjzB,KAAMi6B,kBACP,CAACj6B,KAAMglD,mBACP,CAAChlD,KAAM+kD,qBACP,CAAC/kD,KAAMilD,qBACP,CAACjlD,KAAMgC,KAAAA,mBACP,CAAChC,KAAM0G,UAAW5E,WAAY,CAAC,CAAE9B,KAAMs1B,KAAAA,OAAQp1B,KAAM,CAACshE,KAAAA,gBAnJ/C80C,mBAAPhzG,eAAgE,CAsJhE0hG,QArJW,CAAA,CAAGhlG,KAAMK,KAAAA,QAsJpB4jG,KArJQ,CAAA,CAAGjkG,KAAMK,KAAAA,QAsJjBuvE,UArJa,CAAA,CAAG5vE,KAAMK,KAAAA,QAsJtB6jG,UArJa,CAAA,CAAGlkG,KAAMK,KAAAA,QAsJtB2hC,OArJU,CAAA,CAAGhiC,KAAMkC,KAAAA,SAsJnB0yD,KArJQ,CAAA,CAAG50D,KAAMkC,KAAAA,SAsJjBk6D,KArJQ,CAAA,CAAGp8D,KAAMkC,KAAAA,SAsJjByb,SArJU,CAAA,CAAG3d,KAAMkC,KAAAA,SAsJnBu0G,OArJU,CAAA,CAAGz2G,KAAMkC,KAAAA,SAsJnB2vF,OArJU,CAAA,CAAG7xF,KAAMkC,KAAAA,OAAQhC,KAAM,CAAA,UAsJjCm9B,QArJW,CAAA,CAAGr9B,KAAMkC,KAAAA,OAAQhC,KAAM,CAAA,YCluBlC,IAACk6G,UAAA,CACC,CACEC,KAAM,KACN76G,GAAI,EACJib,KAAM,gBACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,4BAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,iBACN6/F,OAAQ,CACN,CACED,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,2BAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,oBAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,sBAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,yBAER,CACE4/F,KAAM,MACN5/F,KAAM,8BAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,uBAER,CACE4/F,KAAM,MACN5/F,KAAM,QAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,sBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,QAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,oBAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,QAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,sBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,2BAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,qBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,0BAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,uBAER,CACE4/F,KAAM,MACN5/F,KAAM,qBAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,oBAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,qBAER,CACE4/F,KAAM,MACN5/F,KAAM,0BAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,MACN5/F,KAAM,wBAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,sBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,QAER,CACE4/F,KAAM,MACN5/F,KAAM,oBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,qBAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,qBAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,iBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,sBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,MACN5/F,KAAM,gCAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,sBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,UACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,8BAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,6BAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,+BACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,yBACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,8BAER,CACE4/F,KAAM,SACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,kCAER,CACE4/F,KAAM,QACN5/F,KAAM,mCAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,SACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,0BAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,uBAER,CACE4/F,KAAM,QACN5/F,KAAM,8BAER,CACE4/F,KAAM,QACN5/F,KAAM,6BAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,sBAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,iCACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,oBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,6BAER,CACE4/F,KAAM,KACN5/F,KAAM,yBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,iBACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,2BACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,OACN76G,GAAI,KACJib,KAAM,kBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,6CAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,wBAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,yCAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,kCAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,oCAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,mBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,0BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,gCACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,qBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAIZ,CACE4/F,KAAM,OACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,iBACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kCAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,qBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,kCAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,oBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,+CAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,8BACN6/F,OAAQ,IAEV,CACED,KAAM,OACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,8BAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,mBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,8BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,iCAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,0BAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,sBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,OACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,yBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,mCAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,kCAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,6BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,gCACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,OAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,0BAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,OAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,IACN5/F,KAAM,cAER,CACE4/F,KAAM,IACN5/F,KAAM,qCAER,CACE4/F,KAAM,IACN5/F,KAAM,qBAER,CACE4/F,KAAM,IACN5/F,KAAM,qBAER,CACE4/F,KAAM,IACN5/F,KAAM,aAER,CACE4/F,KAAM,IACN5/F,KAAM,aAER,CACE4/F,KAAM,IACN5/F,KAAM,YAER,CACE4/F,KAAM,IACN5/F,KAAM,cAER,CACE4/F,KAAM,IACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,+BAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,0BAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,OAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,sBAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,4BACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,+BAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,8BAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,IACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,IACN5/F,KAAM,UAER,CACE4/F,KAAM,IACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,IACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,IACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,IACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,yBAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,qBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,yBAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,mBAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,uBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,SAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,wBAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,iDACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,6BACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,mCACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,yBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,0CACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,wBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,mBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,OACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,MACN5/F,KAAM,kBAER,CACE4/F,KAAM,MACN5/F,KAAM,uBAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,oBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,kCACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,uBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,wBAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,QACN5/F,KAAM,wBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,2BAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,+BAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,OAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,OAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,OAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,iBAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,uBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,gBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,iBAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,6BAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,qBAER,CACE4/F,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,UAER,CACE4/F,KAAM,IACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,SAER,CACE4/F,KAAM,IACN5/F,KAAM,gBAER,CACE4/F,KAAM,MACN5/F,KAAM,aAER,CACE4/F,KAAM,MACN5/F,KAAM,YAER,CACE4/F,KAAM,MACN5/F,KAAM,mBAER,CACE4/F,KAAM,MACN5/F,KAAM,WAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,oCAER,CACE4/F,KAAM,OACN5/F,KAAM,kCAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,6BAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,iBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,2BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,6BAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,uCAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,kCACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,mBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,6BAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,uBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,UACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,OACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,OAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,qBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,wCAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,+BAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,gCAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,gCAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,mCAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,sCAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,+BAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,8BAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,6BAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,gCAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,wCAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,mDAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,8CAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,qCAER,CACE4/F,KAAM,OACN5/F,KAAM,yBAER,CACE4/F,KAAM,OACN5/F,KAAM,qCAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,mBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,+CACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,wBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,4BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,+BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,wBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,uBAER,CACE4/F,KAAM,QACN5/F,KAAM,uBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,6BAER,CACE4/F,KAAM,QACN5/F,KAAM,6BAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,yBAER,CACE4/F,KAAM,QACN5/F,KAAM,yBAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,sBAER,CACE4/F,KAAM,QACN5/F,KAAM,uBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,wBAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,oBAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,yBAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,oBAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,yBAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,uBAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,mBAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,iBAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,MAER,CACE4/F,KAAM,SACN5/F,KAAM,oBAER,CACE4/F,KAAM,SACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,uBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,iBAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,gBAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,gBAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,6BAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,oBAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,iBAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,gBAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,mBAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,iBAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,mBAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,oBAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,oBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,cAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,kBAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,mBAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,sBAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,qBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,sCAER,CACE4/F,KAAM,SACN5/F,KAAM,qCAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,oCAER,CACE4/F,KAAM,SACN5/F,KAAM,eAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,gBAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,iBAER,CACE4/F,KAAM,SACN5/F,KAAM,gBAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,WAER,CACE4/F,KAAM,SACN5/F,KAAM,YAER,CACE4/F,KAAM,SACN5/F,KAAM,mBAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,UAER,CACE4/F,KAAM,SACN5/F,KAAM,QAER,CACE4/F,KAAM,SACN5/F,KAAM,aAER,CACE4/F,KAAM,SACN5/F,KAAM,SAER,CACE4/F,KAAM,SACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,kBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,+CACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,yBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,YACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,QACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,QACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,wBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,CACN,CACED,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,0BAER,CACE4/F,KAAM,KACN5/F,KAAM,yBAER,CACE4/F,KAAM,KACN5/F,KAAM,oBAER,CACE4/F,KAAM,KACN5/F,KAAM,eAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,cAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,YAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,gBAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,aAER,CACE4/F,KAAM,KACN5/F,KAAM,WAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,OAER,CACE4/F,KAAM,KACN5/F,KAAM,UAER,CACE4/F,KAAM,KACN5/F,KAAM,QAER,CACE4/F,KAAM,KACN5/F,KAAM,OAER,CACE4/F,KAAM,KACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,uBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,uCAER,CACE4/F,KAAM,OACN5/F,KAAM,UAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,8BAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,WACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,sBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,qBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,4BAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,cACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,OACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,sBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,2BAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,uBAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,eAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,eACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,2BACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,SACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,gBAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,cAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,iBAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,eAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,QAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,YAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,aAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,WAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,UAER,CACE4/F,KAAM,QACN5/F,KAAM,SAER,CACE4/F,KAAM,QACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,gBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,uBACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,uCACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,aACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,oCACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,0BAER,CACE4/F,KAAM,OACN5/F,KAAM,oBAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,QAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,iBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,UACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,mBAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,kBAER,CACE4/F,KAAM,OACN5/F,KAAM,cAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,0BACN6/F,OAAQ,CACN,CACED,KAAM,QACN5/F,KAAM,4BAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,uBACN6/F,OAAQ,CACN,CACED,KAAM,MACN5/F,KAAM,eAER,CACE4/F,KAAM,MACN5/F,KAAM,cAER,CACE4/F,KAAM,MACN5/F,KAAM,kBAIZ,CACE4/F,KAAM,KACN76G,GAAI,KACJib,KAAM,oBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,iBACN6/F,OAAQ,IAEV,CACED,KAAM,KACN76G,GAAI,KACJib,KAAM,QACN6/F,OAAQ,CACN,CACED,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,YAER,CACE4/F,KAAM,OACN5/F,KAAM,eAER,CACE4/F,KAAM,OACN5/F,KAAM,WAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,aAER,CACE4/F,KAAM,OACN5/F,KAAM,UAER,CACE4/F,KAAM,OACN5/F,KAAM,OAER,CACE4/F,KAAM,OACN5/F,KAAM,SAER,CACE4/F,KAAM,OACN5/F,KA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"}
