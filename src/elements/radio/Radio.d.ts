import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { RadioGroup } from './tokens';
export declare class NovoRadioElement implements ControlValueAccessor, OnInit {
    radioGroup: RadioGroup;
    private ref;
    private _uniqueId;
    id: string;
    name: string;
    tabindex: number;
    vertical: boolean;
    label: string;
    button: boolean;
    theme: string;
    size: string;
    icon: string;
    color: string;
    change: EventEmitter<any>;
    blur: EventEmitter<any>;
    focus: EventEmitter<any>;
    private _checked;
    private _value;
    private _disabled;
    get checked(): boolean;
    set checked(value: boolean);
    get value(): boolean;
    set value(value: boolean);
    get disabled(): boolean;
    set disabled(value: boolean);
    constructor(radioGroup: RadioGroup, ref: ChangeDetectorRef);
    ngOnInit(): void;
    _onInputChange(event: Event): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    private onChangeCallback;
    private onTouchedCallback;
    setDisabledState(disabled: boolean): void;
}
