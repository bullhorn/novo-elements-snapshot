import { animate, animateChild, group, state, style, transition, trigger, query } from '@angular/animations';
/** Time and timing curve for expansion panel animations. */
export const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';
/** Animations used by the Material expansion panel. */
export const novoExpansionAnimations = {
    /** Animation that rotates the indicator arrow. */
    indicatorRotate: trigger('indicatorRotate', [
        state('collapsed', style({ transform: 'rotate(0deg)' })),
        state('expanded', style({ transform: 'rotate(180deg)' })),
        transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),
    ]),
    /** Animation that expands and collapses the panel header height. */
    expansionHeaderHeight: trigger('expansionHeight', [
        state('collapsed', style({
            height: '{{collapsedHeight}}',
        }), {
            params: { collapsedHeight: '48px' },
        }),
        state('expanded', style({
            height: '{{expandedHeight}}',
        }), {
            params: { expandedHeight: '56px' },
        }),
        transition('expanded <=> collapsed', group([query('@indicatorRotate', animateChild(), { optional: true }), animate(EXPANSION_PANEL_ANIMATION_TIMING)])),
    ]),
    /** Animation that expands and collapses the panel content. */
    bodyExpansion: trigger('bodyExpansion', [
        state('collapsed', style({ height: '0px', visibility: 'hidden' })),
        state('expanded', style({ height: '*', visibility: 'visible' })),
        transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),
    ]),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLWFuaW1hdGlvbnMuanMiLCJzb3VyY2VSb290IjoiQzovZGV2L2Rldm1hY2hpbmUvbm92by1lbGVtZW50cy9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzL3NyYy8iLCJzb3VyY2VzIjpbImVsZW1lbnRzL2V4cGFuc2lvbi9leHBhbnNpb24tYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBNEIsTUFBTSxxQkFBcUIsQ0FBQztBQUV2SSw0REFBNEQ7QUFDNUQsTUFBTSxDQUFDLE1BQU0sZ0NBQWdDLEdBQUcsbUNBQW1DLENBQUM7QUFFcEYsdURBQXVEO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUloQztJQUNGLGtEQUFrRDtJQUNsRCxlQUFlLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixFQUFFO1FBQzFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUM7UUFDeEQsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELFVBQVUsQ0FBQyx3QkFBd0IsRUFBRSxPQUFPLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztLQUNoRixDQUFDO0lBRUYsb0VBQW9FO0lBQ3BFLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTtRQUNoRCxLQUFLLENBQ0gsV0FBVyxFQUNYLEtBQUssQ0FBQztZQUNKLE1BQU0sRUFBRSxxQkFBcUI7U0FDOUIsQ0FBQyxFQUNGO1lBQ0UsTUFBTSxFQUFFLEVBQUUsZUFBZSxFQUFFLE1BQU0sRUFBRTtTQUNwQyxDQUNGO1FBQ0QsS0FBSyxDQUNILFVBQVUsRUFDVixLQUFLLENBQUM7WUFDSixNQUFNLEVBQUUsb0JBQW9CO1NBQzdCLENBQUMsRUFDRjtZQUNFLE1BQU0sRUFBRSxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUU7U0FDbkMsQ0FDRjtRQUNELFVBQVUsQ0FDUix3QkFBd0IsRUFDeEIsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLGtCQUFrQixFQUFFLFlBQVksRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQyxDQUNsSDtLQUNGLENBQUM7SUFFRiw4REFBOEQ7SUFDOUQsYUFBYSxFQUFFLE9BQU8sQ0FBQyxlQUFlLEVBQUU7UUFDdEMsS0FBSyxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUNoRSxVQUFVLENBQUMsd0JBQXdCLEVBQUUsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7S0FDaEYsQ0FBQztDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbmltYXRlLCBhbmltYXRlQ2hpbGQsIGdyb3VwLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIsIHF1ZXJ5LCBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbi8qKiBUaW1lIGFuZCB0aW1pbmcgY3VydmUgZm9yIGV4cGFuc2lvbiBwYW5lbCBhbmltYXRpb25zLiAqL1xyXG5leHBvcnQgY29uc3QgRVhQQU5TSU9OX1BBTkVMX0FOSU1BVElPTl9USU1JTkcgPSAnMjI1bXMgY3ViaWMtYmV6aWVyKDAuNCwwLjAsMC4yLDEpJztcclxuXHJcbi8qKiBBbmltYXRpb25zIHVzZWQgYnkgdGhlIE1hdGVyaWFsIGV4cGFuc2lvbiBwYW5lbC4gKi9cclxuZXhwb3J0IGNvbnN0IG5vdm9FeHBhbnNpb25BbmltYXRpb25zOiB7XHJcbiAgcmVhZG9ubHkgaW5kaWNhdG9yUm90YXRlOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGE7XHJcbiAgcmVhZG9ubHkgZXhwYW5zaW9uSGVhZGVySGVpZ2h0OiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGE7XHJcbiAgcmVhZG9ubHkgYm9keUV4cGFuc2lvbjogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhO1xyXG59ID0ge1xyXG4gIC8qKiBBbmltYXRpb24gdGhhdCByb3RhdGVzIHRoZSBpbmRpY2F0b3IgYXJyb3cuICovXHJcbiAgaW5kaWNhdG9yUm90YXRlOiB0cmlnZ2VyKCdpbmRpY2F0b3JSb3RhdGUnLCBbXHJcbiAgICBzdGF0ZSgnY29sbGFwc2VkJywgc3R5bGUoeyB0cmFuc2Zvcm06ICdyb3RhdGUoMGRlZyknIH0pKSxcclxuICAgIHN0YXRlKCdleHBhbmRlZCcsIHN0eWxlKHsgdHJhbnNmb3JtOiAncm90YXRlKDE4MGRlZyknIH0pKSxcclxuICAgIHRyYW5zaXRpb24oJ2V4cGFuZGVkIDw9PiBjb2xsYXBzZWQnLCBhbmltYXRlKEVYUEFOU0lPTl9QQU5FTF9BTklNQVRJT05fVElNSU5HKSksXHJcbiAgXSksXHJcblxyXG4gIC8qKiBBbmltYXRpb24gdGhhdCBleHBhbmRzIGFuZCBjb2xsYXBzZXMgdGhlIHBhbmVsIGhlYWRlciBoZWlnaHQuICovXHJcbiAgZXhwYW5zaW9uSGVhZGVySGVpZ2h0OiB0cmlnZ2VyKCdleHBhbnNpb25IZWlnaHQnLCBbXHJcbiAgICBzdGF0ZShcclxuICAgICAgJ2NvbGxhcHNlZCcsXHJcbiAgICAgIHN0eWxlKHtcclxuICAgICAgICBoZWlnaHQ6ICd7e2NvbGxhcHNlZEhlaWdodH19JyxcclxuICAgICAgfSksXHJcbiAgICAgIHtcclxuICAgICAgICBwYXJhbXM6IHsgY29sbGFwc2VkSGVpZ2h0OiAnNDhweCcgfSxcclxuICAgICAgfSxcclxuICAgICksXHJcbiAgICBzdGF0ZShcclxuICAgICAgJ2V4cGFuZGVkJyxcclxuICAgICAgc3R5bGUoe1xyXG4gICAgICAgIGhlaWdodDogJ3t7ZXhwYW5kZWRIZWlnaHR9fScsXHJcbiAgICAgIH0pLFxyXG4gICAgICB7XHJcbiAgICAgICAgcGFyYW1zOiB7IGV4cGFuZGVkSGVpZ2h0OiAnNTZweCcgfSxcclxuICAgICAgfSxcclxuICAgICksXHJcbiAgICB0cmFuc2l0aW9uKFxyXG4gICAgICAnZXhwYW5kZWQgPD0+IGNvbGxhcHNlZCcsXHJcbiAgICAgIGdyb3VwKFtxdWVyeSgnQGluZGljYXRvclJvdGF0ZScsIGFuaW1hdGVDaGlsZCgpLCB7IG9wdGlvbmFsOiB0cnVlIH0pLCBhbmltYXRlKEVYUEFOU0lPTl9QQU5FTF9BTklNQVRJT05fVElNSU5HKV0pLFxyXG4gICAgKSxcclxuICBdKSxcclxuXHJcbiAgLyoqIEFuaW1hdGlvbiB0aGF0IGV4cGFuZHMgYW5kIGNvbGxhcHNlcyB0aGUgcGFuZWwgY29udGVudC4gKi9cclxuICBib2R5RXhwYW5zaW9uOiB0cmlnZ2VyKCdib2R5RXhwYW5zaW9uJywgW1xyXG4gICAgc3RhdGUoJ2NvbGxhcHNlZCcsIHN0eWxlKHsgaGVpZ2h0OiAnMHB4JywgdmlzaWJpbGl0eTogJ2hpZGRlbicgfSkpLFxyXG4gICAgc3RhdGUoJ2V4cGFuZGVkJywgc3R5bGUoeyBoZWlnaHQ6ICcqJywgdmlzaWJpbGl0eTogJ3Zpc2libGUnIH0pKSxcclxuICAgIHRyYW5zaXRpb24oJ2V4cGFuZGVkIDw9PiBjb2xsYXBzZWQnLCBhbmltYXRlKEVYUEFOU0lPTl9QQU5FTF9BTklNQVRJT05fVElNSU5HKSksXHJcbiAgXSksXHJcbn07XHJcbiJdfQ==