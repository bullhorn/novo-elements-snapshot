import { ChangeDetectionStrategy, Component, Directive, Inject, InjectionToken, Optional, ViewEncapsulation } from '@angular/core';
import { mixinDisabled } from '../mixins/disabled.mixin';
import { NOVO_OPTION_PARENT_COMPONENT } from './option-parent';
// Notes on the accessibility pattern used for `novo-optgroup`.
// The option group has two different "modes": regular and inert. The regular mode uses the
// recommended a11y pattern which has `role="group"` on the group element with `aria-labelledby`
// pointing to the label. This works for `novo-select`, but it seems to hit a bug for autocomplete
// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if
// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),
// VoiceOver on Safari won't read it out.
// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are
// removed from the group, and we get the screen reader to read out the group label by mirroring it
// inside an invisible element in the option. This is sub-optimal, because the screen reader will
// repeat the group label on each navigation, whereas the default pattern only reads the group when
// the user enters a new group. The following alternate approaches were considered:
// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control
//    when the text will be read out so sometimes it comes in too late or never if the user
//    navigates quickly.
// 2. `<novo-option aria-describedby="groupLabel"` - This works on Safari, but VoiceOver in Chrome
//    won't read out the description at all.
// 3. `<novo-option aria-labelledby="optionLabel groupLabel"` - This works on Chrome, but Safari
//     doesn't read out the text at all. Furthermore, on
// Boilerplate for applying mixins to NovoOptgroup.
export class NovoOptgroupBase {
    constructor() {
        /** Unique id for the underlying label. */
        this._labelId = `novo-optgroup-label-${_uniqueOptgroupIdCounter++}`;
    }
}
NovoOptgroupBase.decorators = [
    { type: Directive }
];
export const NovoOptgroupMixinBase = mixinDisabled(NovoOptgroupBase);
// Counter for unique group ids.
let _uniqueOptgroupIdCounter = 0;
/**
 * Injection token that can be used to reference instances of `NovoOptgroup`. It serves as
 * alternative token to the actual `NovoOptgroup` class which could cause unnecessary
 * retention of the class and its component metadata.
 */
export const NOVO_OPTGROUP = new InjectionToken('NovoOptgroup');
/**
 * Component that is used to group instances of `novo-option`.
 */
export class NovoOptgroup extends NovoOptgroupMixinBase {
    constructor(parent) {
        var _a;
        super();
        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;
    }
}
NovoOptgroup.decorators = [
    { type: Component, args: [{
                selector: 'novo-optgroup',
                exportAs: 'novoOptgroup',
                template: "<span *ngIf=\"label\" class=\"novo-optgroup-label\" aria-hidden=\"true\" [id]=\"_labelId\">{{ label }}</span>\n<ng-content select=\"novo-option, ng-container, novo-divider, cdk-virtual-scroll-viewport\"></ng-content>",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                inputs: ['disabled', 'label'],
                host: {
                    class: 'novo-optgroup',
                    '[attr.role]': '_inert ? null : "group"',
                    '[attr.aria-disabled]': '_inert ? null : disabled.toString()',
                    '[attr.aria-labelledby]': '_inert ? null : _labelId',
                    '[class.novo-optgroup-disabled]': 'disabled',
                },
                providers: [{ provide: NOVO_OPTGROUP, useExisting: NovoOptgroup }],
                styles: [".novo-optgroup-label{color:var(--text-muted);color:#9e9e9e;cursor:default;display:block;flex:1;font-size:var(--font-size-label);font-weight:500;line-height:1.375;overflow-wrap:break-word;padding:5px 10px;transition:.2s ease-out;transition-property:color,opacity;vertical-align:middle;word-break:word-break}.novo-optgroup-label.text-nowrap{white-space:nowrap}.novo-optgroup-label.text-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.novo-optgroup-label.text-size-default{font-size:inherit}.novo-optgroup-label.text-size-body{font-size:1.3rem}.novo-optgroup-label.text-size-xs{font-size:1rem}.novo-optgroup-label.text-size-sm{font-size:1.2rem}.novo-optgroup-label.text-size-md{font-size:1.3rem}.novo-optgroup-label.text-size-lg{font-size:1.6rem}.novo-optgroup-label.text-size-xl{font-size:2rem}.novo-optgroup-label.text-size-2xl{font-size:2.6rem}.novo-optgroup-label.text-size-3xl{font-size:3.2rem}.novo-optgroup-label.text-size-smaller{font-size:.8em}.novo-optgroup-label.text-size-larger{font-size:1.2em}.novo-optgroup-label.text-color-black{color:#000}.novo-optgroup-label.text-color-white{color:#fff}.novo-optgroup-label.text-color-gray,.novo-optgroup-label.text-color-grey{color:#9e9e9e}.novo-optgroup-label.text-color-bright,.novo-optgroup-label.text-color-offWhite{color:#f7f7f7}.novo-optgroup-label.text-color-light{color:#dbdbdb}.novo-optgroup-label.text-color-neutral{color:#4f5361}.novo-optgroup-label.text-color-dark{color:#3d464d}.novo-optgroup-label.text-color-orange{color:#ff6900}.novo-optgroup-label.text-color-navigation{color:#202945}.novo-optgroup-label.text-color-skyBlue{color:#009bdf}.novo-optgroup-label.text-color-steel{color:#5b6770}.novo-optgroup-label.text-color-metal{color:#637893}.novo-optgroup-label.text-color-sand{color:#f4f4f4}.novo-optgroup-label.text-color-silver{color:#e2e2e2}.novo-optgroup-label.text-color-stone{color:#bebebe}.novo-optgroup-label.text-color-ash{color:#a0a0a0}.novo-optgroup-label.text-color-slate{color:#707070}.novo-optgroup-label.text-color-onyx{color:#526980}.novo-optgroup-label.text-color-charcoal{color:#282828}.novo-optgroup-label.text-color-moonlight{color:#1a242f}.novo-optgroup-label.text-color-midnight{color:#202945}.novo-optgroup-label.text-color-darkness{color:#161f27}.novo-optgroup-label.text-color-navy{color:#0d2d42}.novo-optgroup-label.text-color-aqua{color:#3bafda}.novo-optgroup-label.text-color-ocean{color:#4a89dc}.novo-optgroup-label.text-color-mint{color:#37bc9b}.novo-optgroup-label.text-color-grass{color:#8cc152}.novo-optgroup-label.text-color-sunflower{color:#f6b042}.novo-optgroup-label.text-color-bittersweet{color:#eb6845}.novo-optgroup-label.text-color-grapefruit{color:#da4453}.novo-optgroup-label.text-color-carnation{color:#d770ad}.novo-optgroup-label.text-color-lavender{color:#967adc}.novo-optgroup-label.text-color-mountain{color:#9678b6}.novo-optgroup-label.text-color-info,.novo-optgroup-label.text-color-positive{color:#4a89dc}.novo-optgroup-label.text-color-success{color:#8cc152}.novo-optgroup-label.text-color-danger,.novo-optgroup-label.text-color-error,.novo-optgroup-label.text-color-negative{color:#da4453}.novo-optgroup-label.text-color-warning{color:#f6b042}.novo-optgroup-label.text-color-empty{color:#cccdcc}.novo-optgroup-label.text-color-disabled{color:#bebebe}.novo-optgroup-label.text-color-background{color:#f7f7f7}.novo-optgroup-label.text-color-backgroundDark{color:#e2e2e2}.novo-optgroup-label.text-color-presentation{color:#5b6770}.novo-optgroup-label.text-color-bullhorn{color:#ff6900}.novo-optgroup-label.text-color-pulse{color:#3bafda}.novo-optgroup-label.text-color-company{color:#39d}.novo-optgroup-label.text-color-candidate{color:#4b7}.novo-optgroup-label.text-color-lead{color:#a69}.novo-optgroup-label.text-color-clientcontact,.novo-optgroup-label.text-color-contact{color:#fa4}.novo-optgroup-label.text-color-opportunity{color:#625}.novo-optgroup-label.text-color-job,.novo-optgroup-label.text-color-joborder{color:#b56}.novo-optgroup-label.text-color-submission{color:#a9adbb}.novo-optgroup-label.text-color-sendout{color:#747884}.novo-optgroup-label.text-color-placement{color:#0b344f}.novo-optgroup-label.text-color-note{color:#747884}.novo-optgroup-label.text-color-contract{color:#454ea0}.novo-optgroup-label.text-color-billableCharge,.novo-optgroup-label.text-color-corporateUser,.novo-optgroup-label.text-color-credential,.novo-optgroup-label.text-color-distributionList,.novo-optgroup-label.text-color-earnCode,.novo-optgroup-label.text-color-invoiceStatement,.novo-optgroup-label.text-color-jobCode,.novo-optgroup-label.text-color-payableCharge,.novo-optgroup-label.text-color-person,.novo-optgroup-label.text-color-user{color:#696d79}.novo-optgroup-label.margin-before{margin-top:.4rem}.novo-optgroup-label.margin-after{margin-bottom:.8rem}.novo-optgroup-label.text-length-small{max-width:40ch}.novo-optgroup-label.text-length-medium{max-width:55ch}.novo-optgroup-label.text-length-large{max-width:70ch}.novo-optgroup-label.text-weight-hairline{font-weight:100}.novo-optgroup-label.text-weight-thin{font-weight:200}.novo-optgroup-label.text-weight-light{font-weight:300}.novo-optgroup-label.text-weight-normal{font-weight:400}.novo-optgroup-label.text-weight-medium{font-weight:500}.novo-optgroup-label.text-weight-semibold{font-weight:600}.novo-optgroup-label.text-weight-bold{font-weight:700}.novo-optgroup-label.text-weight-extrabold{font-weight:800}.novo-optgroup-label.text-weight-heavy{font-weight:900}.novo-optgroup-label.text-weight-lighter{font-weight:lighter}.novo-optgroup-label.text-weight-bolder{font-weight:bolder}"]
            },] }
];
NovoOptgroup.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [NOVO_OPTION_PARENT_COMPONENT,] }, { type: Optional }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0Z3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL25vdm8tZWxlbWVudHMvbm92by1lbGVtZW50cy9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzLyIsInNvdXJjZXMiOlsic3JjL2VsZW1lbnRzL2NvbW1vbi9vcHRpb24vb3B0Z3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25JLE9BQU8sRUFBOEIsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckYsT0FBTyxFQUE2Qiw0QkFBNEIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTFGLCtEQUErRDtBQUMvRCwyRkFBMkY7QUFDM0YsZ0dBQWdHO0FBQ2hHLGtHQUFrRztBQUNsRyw2RkFBNkY7QUFDN0YsMEZBQTBGO0FBQzFGLHlDQUF5QztBQUN6Qyw4RkFBOEY7QUFDOUYsbUdBQW1HO0FBQ25HLGlHQUFpRztBQUNqRyxtR0FBbUc7QUFDbkcsbUZBQW1GO0FBQ25GLG9HQUFvRztBQUNwRywyRkFBMkY7QUFDM0Ysd0JBQXdCO0FBQ3hCLGtHQUFrRztBQUNsRyw0Q0FBNEM7QUFDNUMsZ0dBQWdHO0FBQ2hHLHdEQUF3RDtBQUV4RCxtREFBbUQ7QUFFbkQsTUFBTSxPQUFPLGdCQUFnQjtJQUQ3QjtRQU9FLDBDQUEwQztRQUMxQyxhQUFRLEdBQVcsdUJBQXVCLHdCQUF3QixFQUFFLEVBQUUsQ0FBQztJQUl6RSxDQUFDOzs7WUFaQSxTQUFTOztBQWFWLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE2QyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUUvRyxnQ0FBZ0M7QUFDaEMsSUFBSSx3QkFBd0IsR0FBRyxDQUFDLENBQUM7QUFFakM7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxJQUFJLGNBQWMsQ0FBZSxjQUFjLENBQUMsQ0FBQztBQUU5RTs7R0FFRztBQWtCSCxNQUFNLE9BQU8sWUFBYSxTQUFRLHFCQUFxQjtJQUNyRCxZQUE4RCxNQUFrQzs7UUFDOUYsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsTUFBTSxTQUFHLE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRSxXQUFXLG1DQUFJLEtBQUssQ0FBQztJQUM3QyxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxlQUFlO2dCQUN6QixRQUFRLEVBQUUsY0FBYztnQkFDeEIsb09BQXNDO2dCQUN0QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUM7Z0JBRTdCLElBQUksRUFBRTtvQkFDSixLQUFLLEVBQUUsZUFBZTtvQkFDdEIsYUFBYSxFQUFFLHlCQUF5QjtvQkFDeEMsc0JBQXNCLEVBQUUscUNBQXFDO29CQUM3RCx3QkFBd0IsRUFBRSwwQkFBMEI7b0JBQ3BELGdDQUFnQyxFQUFFLFVBQVU7aUJBQzdDO2dCQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLENBQUM7O2FBQ25FOzs7NENBRWMsTUFBTSxTQUFDLDRCQUE0QixjQUFHLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb29sZWFuSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRGlyZWN0aXZlLCBJbmplY3QsIEluamVjdGlvblRva2VuLCBPcHRpb25hbCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhbkRpc2FibGUsIENhbkRpc2FibGVDdG9yLCBtaXhpbkRpc2FibGVkIH0gZnJvbSAnLi4vbWl4aW5zL2Rpc2FibGVkLm1peGluJztcbmltcG9ydCB7IE5vdm9PcHRpb25QYXJlbnRDb21wb25lbnQsIE5PVk9fT1BUSU9OX1BBUkVOVF9DT01QT05FTlQgfSBmcm9tICcuL29wdGlvbi1wYXJlbnQnO1xuXG4vLyBOb3RlcyBvbiB0aGUgYWNjZXNzaWJpbGl0eSBwYXR0ZXJuIHVzZWQgZm9yIGBub3ZvLW9wdGdyb3VwYC5cbi8vIFRoZSBvcHRpb24gZ3JvdXAgaGFzIHR3byBkaWZmZXJlbnQgXCJtb2Rlc1wiOiByZWd1bGFyIGFuZCBpbmVydC4gVGhlIHJlZ3VsYXIgbW9kZSB1c2VzIHRoZVxuLy8gcmVjb21tZW5kZWQgYTExeSBwYXR0ZXJuIHdoaWNoIGhhcyBgcm9sZT1cImdyb3VwXCJgIG9uIHRoZSBncm91cCBlbGVtZW50IHdpdGggYGFyaWEtbGFiZWxsZWRieWBcbi8vIHBvaW50aW5nIHRvIHRoZSBsYWJlbC4gVGhpcyB3b3JrcyBmb3IgYG5vdm8tc2VsZWN0YCwgYnV0IGl0IHNlZW1zIHRvIGhpdCBhIGJ1ZyBmb3IgYXV0b2NvbXBsZXRlXG4vLyB1bmRlciBWb2ljZU92ZXIgd2hlcmUgdGhlIGdyb3VwIGRvZXNuJ3QgZ2V0IHJlYWQgb3V0IGF0IGFsbC4gVGhlIGJ1ZyBhcHBlYXJzIHRvIGJlIHRoYXQgaWZcbi8vIHRoZXJlJ3MgX19hbnlfXyBhMTF5LXJlbGF0ZWQgYXR0cmlidXRlIG9uIHRoZSBncm91cCAoZS5nLiBgcm9sZWAgb3IgYGFyaWEtbGFiZWxsZWRieWApLFxuLy8gVm9pY2VPdmVyIG9uIFNhZmFyaSB3b24ndCByZWFkIGl0IG91dC5cbi8vIFdlJ3ZlIGludHJvZHVjZWQgdGhlIGBpbmVydGAgbW9kZSBhcyBhIHdvcmthcm91bmQuIFVuZGVyIHRoaXMgbW9kZSwgYWxsIGExMXkgYXR0cmlidXRlcyBhcmVcbi8vIHJlbW92ZWQgZnJvbSB0aGUgZ3JvdXAsIGFuZCB3ZSBnZXQgdGhlIHNjcmVlbiByZWFkZXIgdG8gcmVhZCBvdXQgdGhlIGdyb3VwIGxhYmVsIGJ5IG1pcnJvcmluZyBpdFxuLy8gaW5zaWRlIGFuIGludmlzaWJsZSBlbGVtZW50IGluIHRoZSBvcHRpb24uIFRoaXMgaXMgc3ViLW9wdGltYWwsIGJlY2F1c2UgdGhlIHNjcmVlbiByZWFkZXIgd2lsbFxuLy8gcmVwZWF0IHRoZSBncm91cCBsYWJlbCBvbiBlYWNoIG5hdmlnYXRpb24sIHdoZXJlYXMgdGhlIGRlZmF1bHQgcGF0dGVybiBvbmx5IHJlYWRzIHRoZSBncm91cCB3aGVuXG4vLyB0aGUgdXNlciBlbnRlcnMgYSBuZXcgZ3JvdXAuIFRoZSBmb2xsb3dpbmcgYWx0ZXJuYXRlIGFwcHJvYWNoZXMgd2VyZSBjb25zaWRlcmVkOlxuLy8gMS4gUmVhZGluZyBvdXQgdGhlIGdyb3VwIGxhYmVsIHVzaW5nIHRoZSBgTGl2ZUFubm91bmNlcmAgc29sdmVzIHRoZSBwcm9ibGVtLCBidXQgd2UgY2FuJ3QgY29udHJvbFxuLy8gICAgd2hlbiB0aGUgdGV4dCB3aWxsIGJlIHJlYWQgb3V0IHNvIHNvbWV0aW1lcyBpdCBjb21lcyBpbiB0b28gbGF0ZSBvciBuZXZlciBpZiB0aGUgdXNlclxuLy8gICAgbmF2aWdhdGVzIHF1aWNrbHkuXG4vLyAyLiBgPG5vdm8tb3B0aW9uIGFyaWEtZGVzY3JpYmVkYnk9XCJncm91cExhYmVsXCJgIC0gVGhpcyB3b3JrcyBvbiBTYWZhcmksIGJ1dCBWb2ljZU92ZXIgaW4gQ2hyb21lXG4vLyAgICB3b24ndCByZWFkIG91dCB0aGUgZGVzY3JpcHRpb24gYXQgYWxsLlxuLy8gMy4gYDxub3ZvLW9wdGlvbiBhcmlhLWxhYmVsbGVkYnk9XCJvcHRpb25MYWJlbCBncm91cExhYmVsXCJgIC0gVGhpcyB3b3JrcyBvbiBDaHJvbWUsIGJ1dCBTYWZhcmlcbi8vICAgICBkb2Vzbid0IHJlYWQgb3V0IHRoZSB0ZXh0IGF0IGFsbC4gRnVydGhlcm1vcmUsIG9uXG5cbi8vIEJvaWxlcnBsYXRlIGZvciBhcHBseWluZyBtaXhpbnMgdG8gTm92b09wdGdyb3VwLlxuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgTm92b09wdGdyb3VwQmFzZSBpbXBsZW1lbnRzIENhbkRpc2FibGUge1xuICBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAvKiogTGFiZWwgZm9yIHRoZSBvcHRpb24gZ3JvdXAuICovXG4gIGxhYmVsOiBzdHJpbmc7XG5cbiAgLyoqIFVuaXF1ZSBpZCBmb3IgdGhlIHVuZGVybHlpbmcgbGFiZWwuICovXG4gIF9sYWJlbElkOiBzdHJpbmcgPSBgbm92by1vcHRncm91cC1sYWJlbC0ke191bmlxdWVPcHRncm91cElkQ291bnRlcisrfWA7XG5cbiAgLyoqIFdoZXRoZXIgdGhlIGdyb3VwIGlzIGluIGluZXJ0IGExMXkgbW9kZS4gKi9cbiAgX2luZXJ0OiBib29sZWFuO1xufVxuZXhwb3J0IGNvbnN0IE5vdm9PcHRncm91cE1peGluQmFzZTogQ2FuRGlzYWJsZUN0b3IgJiB0eXBlb2YgTm92b09wdGdyb3VwQmFzZSA9IG1peGluRGlzYWJsZWQoTm92b09wdGdyb3VwQmFzZSk7XG5cbi8vIENvdW50ZXIgZm9yIHVuaXF1ZSBncm91cCBpZHMuXG5sZXQgX3VuaXF1ZU9wdGdyb3VwSWRDb3VudGVyID0gMDtcblxuLyoqXG4gKiBJbmplY3Rpb24gdG9rZW4gdGhhdCBjYW4gYmUgdXNlZCB0byByZWZlcmVuY2UgaW5zdGFuY2VzIG9mIGBOb3ZvT3B0Z3JvdXBgLiBJdCBzZXJ2ZXMgYXNcbiAqIGFsdGVybmF0aXZlIHRva2VuIHRvIHRoZSBhY3R1YWwgYE5vdm9PcHRncm91cGAgY2xhc3Mgd2hpY2ggY291bGQgY2F1c2UgdW5uZWNlc3NhcnlcbiAqIHJldGVudGlvbiBvZiB0aGUgY2xhc3MgYW5kIGl0cyBjb21wb25lbnQgbWV0YWRhdGEuXG4gKi9cbmV4cG9ydCBjb25zdCBOT1ZPX09QVEdST1VQID0gbmV3IEluamVjdGlvblRva2VuPE5vdm9PcHRncm91cD4oJ05vdm9PcHRncm91cCcpO1xuXG4vKipcbiAqIENvbXBvbmVudCB0aGF0IGlzIHVzZWQgdG8gZ3JvdXAgaW5zdGFuY2VzIG9mIGBub3ZvLW9wdGlvbmAuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25vdm8tb3B0Z3JvdXAnLFxuICBleHBvcnRBczogJ25vdm9PcHRncm91cCcsXG4gIHRlbXBsYXRlVXJsOiAnb3B0Z3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaW5wdXRzOiBbJ2Rpc2FibGVkJywgJ2xhYmVsJ10sXG4gIHN0eWxlVXJsczogWydvcHRncm91cC5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdub3ZvLW9wdGdyb3VwJyxcbiAgICAnW2F0dHIucm9sZV0nOiAnX2luZXJ0ID8gbnVsbCA6IFwiZ3JvdXBcIicsXG4gICAgJ1thdHRyLmFyaWEtZGlzYWJsZWRdJzogJ19pbmVydCA/IG51bGwgOiBkaXNhYmxlZC50b1N0cmluZygpJyxcbiAgICAnW2F0dHIuYXJpYS1sYWJlbGxlZGJ5XSc6ICdfaW5lcnQgPyBudWxsIDogX2xhYmVsSWQnLFxuICAgICdbY2xhc3Mubm92by1vcHRncm91cC1kaXNhYmxlZF0nOiAnZGlzYWJsZWQnLFxuICB9LFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5PVk9fT1BUR1JPVVAsIHVzZUV4aXN0aW5nOiBOb3ZvT3B0Z3JvdXAgfV0sXG59KVxuZXhwb3J0IGNsYXNzIE5vdm9PcHRncm91cCBleHRlbmRzIE5vdm9PcHRncm91cE1peGluQmFzZSB7XG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoTk9WT19PUFRJT05fUEFSRU5UX0NPTVBPTkVOVCkgQE9wdGlvbmFsKCkgcGFyZW50PzogTm92b09wdGlvblBhcmVudENvbXBvbmVudCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5faW5lcnQgPSBwYXJlbnQ/LmluZXJ0R3JvdXBzID8/IGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX2Rpc2FibGVkOiBCb29sZWFuSW5wdXQ7XG59XG4iXX0=