import { ChangeDetectionStrategy, Component, Directive, Inject, InjectionToken, Optional } from '@angular/core';
import { mixinDisabled } from '../mixins/disabled.mixin';
import { NOVO_OPTION_PARENT_COMPONENT } from './option-parent';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
// Notes on the accessibility pattern used for `novo-optgroup`.
// The option group has two different "modes": regular and novoInert. The regular mode uses the
// recommended a11y pattern which has `role="group"` on the group element with `aria-labelledby`
// pointing to the label. This works for `novo-select`, but it seems to hit a bug for autocomplete
// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if
// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),
// VoiceOver on Safari won't read it out.
// We've introduced the `novoInert` mode as a workaround. Under this mode, all a11y attributes are
// removed from the group, and we get the screen reader to read out the group label by mirroring it
// inside an invisible element in the option. This is sub-optimal, because the screen reader will
// repeat the group label on each navigation, whereas the default pattern only reads the group when
// the user enters a new group. The following alternate approaches were considered:
// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control
//    when the text will be read out so sometimes it comes in too late or never if the user
//    navigates quickly.
// 2. `<novo-option aria-describedby="groupLabel"` - This works on Safari, but VoiceOver in Chrome
//    won't read out the description at all.
// 3. `<novo-option aria-labelledby="optionLabel groupLabel"` - This works on Chrome, but Safari
//     doesn't read out the text at all. Furthermore, on
// Boilerplate for applying mixins to NovoOptgroup.
export class NovoOptgroupBase {
    constructor() {
        /** Unique id for the underlying label. */
        this._labelId = `novo-optgroup-label-${_uniqueOptgroupIdCounter++}`;
    }
}
NovoOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: NovoOptgroupBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NovoOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.11", type: NovoOptgroupBase, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: NovoOptgroupBase, decorators: [{
            type: Directive
        }] });
export const NovoOptgroupMixinBase = mixinDisabled(NovoOptgroupBase);
// Counter for unique group ids.
let _uniqueOptgroupIdCounter = 0;
/**
 * Injection token that can be used to reference instances of `NovoOptgroup`. It serves as
 * alternative token to the actual `NovoOptgroup` class which could cause unnecessary
 * retention of the class and its component metadata.
 */
export const NOVO_OPTGROUP = new InjectionToken('NovoOptgroup');
/**
 * Component that is used to group instances of `novo-option`.
 */
export class NovoOptgroup extends NovoOptgroupMixinBase {
    constructor(parent) {
        super();
        this._novoInert = parent?.inertGroups ?? false;
    }
}
NovoOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: NovoOptgroup, deps: [{ token: NOVO_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Component });
NovoOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: NovoOptgroup, selector: "novo-optgroup", inputs: { disabled: "disabled", label: "label" }, host: { properties: { "attr.role": "_novoInert ? null : \"group\"", "attr.aria-disabled": "_novoInert ? null : disabled.toString()", "attr.aria-labelledby": "_novoInert ? null : _labelId", "class.novo-optgroup-disabled": "disabled" }, classAttribute: "novo-optgroup" }, providers: [{ provide: NOVO_OPTGROUP, useExisting: NovoOptgroup }], exportAs: ["novoOptgroup"], usesInheritance: true, ngImport: i0, template: "<span *ngIf=\"label\" class=\"novo-optgroup-label\" aria-hidden=\"true\" [id]=\"_labelId\">{{ label }}</span>\n<ng-content select=\"novo-option, ng-container, novo-divider, cdk-virtual-scroll-viewport\"></ng-content>", styles: [":host .novo-optgroup-label{font-weight:500;word-break:word-break;overflow-wrap:break-word;line-height:1.375;font-size:var(--font-size-label);transition:color .2s ease-out,opacity .2s ease-out;vertical-align:middle;color:var(--color-text-muted);cursor:default;flex:1;padding:5px 10px;display:block}:host .novo-optgroup-label.text-capitalize{text-transform:capitalize}:host .novo-optgroup-label.text-uppercase{text-transform:uppercase}:host .novo-optgroup-label.text-nowrap{white-space:nowrap}:host .novo-optgroup-label.text-ellipsis{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .novo-optgroup-label.text-size-default{font-size:inherit}:host .novo-optgroup-label.text-size-body{font-size:var(--font-size-body)}:host .novo-optgroup-label.text-size-xs{font-size:var(--font-size-xs)}:host .novo-optgroup-label.text-size-sm{font-size:var(--font-size-sm)}:host .novo-optgroup-label.text-size-md{font-size:var(--font-size-md)}:host .novo-optgroup-label.text-size-lg{font-size:var(--font-size-lg)}:host .novo-optgroup-label.text-size-xl{font-size:var(--font-size-xl)}:host .novo-optgroup-label.text-size-2xl{font-size:var(--font-size-2xl)}:host .novo-optgroup-label.text-size-3xl{font-size:var(--font-size-3xl)}:host .novo-optgroup-label.text-size-smaller{font-size:.8em}:host .novo-optgroup-label.text-size-larger{font-size:1.2em}:host .novo-optgroup-label.text-color-person{color:var(--color-person)}:host .novo-optgroup-label.text-color-company{color:var(--color-company)}:host .novo-optgroup-label.text-color-candidate{color:var(--color-candidate)}:host .novo-optgroup-label.text-color-lead{color:var(--color-lead)}:host .novo-optgroup-label.text-color-contact{color:var(--color-contact)}:host .novo-optgroup-label.text-color-clientcontact{color:var(--color-clientcontact)}:host .novo-optgroup-label.text-color-opportunity{color:var(--color-opportunity)}:host .novo-optgroup-label.text-color-job{color:var(--color-job)}:host .novo-optgroup-label.text-color-joborder{color:var(--color-joborder)}:host .novo-optgroup-label.text-color-submission{color:var(--color-submission)}:host .novo-optgroup-label.text-color-sendout{color:var(--color-sendout)}:host .novo-optgroup-label.text-color-placement{color:var(--color-placement)}:host .novo-optgroup-label.text-color-note{color:var(--color-note)}:host .novo-optgroup-label.text-color-task{color:var(--color-task)}:host .novo-optgroup-label.text-color-distribution-list{color:var(--color-distribution-list)}:host .novo-optgroup-label.text-color-credential{color:var(--color-credential)}:host .novo-optgroup-label.text-color-user{color:var(--color-user)}:host .novo-optgroup-label.text-color-corporate-user{color:var(--color-corporate-user)}:host .novo-optgroup-label.text-color-contract{color:var(--color-contract)}:host .novo-optgroup-label.text-color-job-code{color:var(--color-job-code)}:host .novo-optgroup-label.text-color-earn-code{color:var(--color-earn-code)}:host .novo-optgroup-label.text-color-billable-charge{color:var(--color-billable-charge)}:host .novo-optgroup-label.text-color-payable-charge{color:var(--color-payable-charge)}:host .novo-optgroup-label.text-color-invoice-statement{color:var(--color-invoice-statement)}:host .novo-optgroup-label.text-color-selection{color:var(--color-selection)}:host .novo-optgroup-label.text-color-positive{color:var(--color-positive)}:host .novo-optgroup-label.text-color-success{color:var(--color-success)}:host .novo-optgroup-label.text-color-warning{color:var(--color-warning)}:host .novo-optgroup-label.text-color-error{color:var(--color-error)}:host .novo-optgroup-label.text-color-info{color:var(--color-info)}:host .novo-optgroup-label.text-color-disabled{color:var(--color-disabled)}:host .novo-optgroup-label.text-color-red{color:var(--palette-red-50)}:host .novo-optgroup-label.text-color-pink{color:var(--palette-pink-50)}:host .novo-optgroup-label.text-color-orange{color:var(--palette-orange-50)}:host .novo-optgroup-label.text-color-yellow{color:var(--palette-yellow-50)}:host .novo-optgroup-label.text-color-green{color:var(--palette-green-50)}:host .novo-optgroup-label.text-color-teal{color:var(--palette-teal-50)}:host .novo-optgroup-label.text-color-blue{color:var(--palette-blue-50)}:host .novo-optgroup-label.text-color-aqua{color:var(--palette-aqua-50)}:host .novo-optgroup-label.text-color-indigo{color:var(--palette-indigo-50)}:host .novo-optgroup-label.text-color-violet{color:var(--palette-violet-50)}:host .novo-optgroup-label.text-color-gray{color:var(--palette-gray-50)}:host .novo-optgroup-label.margin-before{margin-top:.4rem}:host .novo-optgroup-label.margin-after{margin-bottom:.8rem}:host .novo-optgroup-label.text-length-small{max-width:40ch}:host .novo-optgroup-label.text-length-medium{max-width:55ch}:host .novo-optgroup-label.text-length-large{max-width:70ch}:host .novo-optgroup-label.text-weight-hairline{font-weight:100}:host .novo-optgroup-label.text-weight-thin{font-weight:200}:host .novo-optgroup-label.text-weight-light{font-weight:300}:host .novo-optgroup-label.text-weight-normal{font-weight:400}:host .novo-optgroup-label.text-weight-medium{font-weight:500}:host .novo-optgroup-label.text-weight-semibold{font-weight:600}:host .novo-optgroup-label.text-weight-bold{font-weight:700}:host .novo-optgroup-label.text-weight-extrabold{font-weight:800}:host .novo-optgroup-label.text-weight-heavy{font-weight:900}:host .novo-optgroup-label.text-weight-lighter{font-weight:lighter}:host .novo-optgroup-label.text-weight-bolder{font-weight:bolder}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: NovoOptgroup, decorators: [{
            type: Component,
            args: [{ selector: 'novo-optgroup', exportAs: 'novoOptgroup', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'label'], host: {
                        class: 'novo-optgroup',
                        '[attr.role]': '_novoInert ? null : "group"',
                        '[attr.aria-disabled]': '_novoInert ? null : disabled.toString()',
                        '[attr.aria-labelledby]': '_novoInert ? null : _labelId',
                        '[class.novo-optgroup-disabled]': 'disabled',
                    }, providers: [{ provide: NOVO_OPTGROUP, useExisting: NovoOptgroup }], template: "<span *ngIf=\"label\" class=\"novo-optgroup-label\" aria-hidden=\"true\" [id]=\"_labelId\">{{ label }}</span>\n<ng-content select=\"novo-option, ng-container, novo-divider, cdk-virtual-scroll-viewport\"></ng-content>", styles: [":host .novo-optgroup-label{font-weight:500;word-break:word-break;overflow-wrap:break-word;line-height:1.375;font-size:var(--font-size-label);transition:color .2s ease-out,opacity .2s ease-out;vertical-align:middle;color:var(--color-text-muted);cursor:default;flex:1;padding:5px 10px;display:block}:host .novo-optgroup-label.text-capitalize{text-transform:capitalize}:host .novo-optgroup-label.text-uppercase{text-transform:uppercase}:host .novo-optgroup-label.text-nowrap{white-space:nowrap}:host .novo-optgroup-label.text-ellipsis{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .novo-optgroup-label.text-size-default{font-size:inherit}:host .novo-optgroup-label.text-size-body{font-size:var(--font-size-body)}:host .novo-optgroup-label.text-size-xs{font-size:var(--font-size-xs)}:host .novo-optgroup-label.text-size-sm{font-size:var(--font-size-sm)}:host .novo-optgroup-label.text-size-md{font-size:var(--font-size-md)}:host .novo-optgroup-label.text-size-lg{font-size:var(--font-size-lg)}:host .novo-optgroup-label.text-size-xl{font-size:var(--font-size-xl)}:host .novo-optgroup-label.text-size-2xl{font-size:var(--font-size-2xl)}:host .novo-optgroup-label.text-size-3xl{font-size:var(--font-size-3xl)}:host .novo-optgroup-label.text-size-smaller{font-size:.8em}:host .novo-optgroup-label.text-size-larger{font-size:1.2em}:host .novo-optgroup-label.text-color-person{color:var(--color-person)}:host .novo-optgroup-label.text-color-company{color:var(--color-company)}:host .novo-optgroup-label.text-color-candidate{color:var(--color-candidate)}:host .novo-optgroup-label.text-color-lead{color:var(--color-lead)}:host .novo-optgroup-label.text-color-contact{color:var(--color-contact)}:host .novo-optgroup-label.text-color-clientcontact{color:var(--color-clientcontact)}:host .novo-optgroup-label.text-color-opportunity{color:var(--color-opportunity)}:host .novo-optgroup-label.text-color-job{color:var(--color-job)}:host .novo-optgroup-label.text-color-joborder{color:var(--color-joborder)}:host .novo-optgroup-label.text-color-submission{color:var(--color-submission)}:host .novo-optgroup-label.text-color-sendout{color:var(--color-sendout)}:host .novo-optgroup-label.text-color-placement{color:var(--color-placement)}:host .novo-optgroup-label.text-color-note{color:var(--color-note)}:host .novo-optgroup-label.text-color-task{color:var(--color-task)}:host .novo-optgroup-label.text-color-distribution-list{color:var(--color-distribution-list)}:host .novo-optgroup-label.text-color-credential{color:var(--color-credential)}:host .novo-optgroup-label.text-color-user{color:var(--color-user)}:host .novo-optgroup-label.text-color-corporate-user{color:var(--color-corporate-user)}:host .novo-optgroup-label.text-color-contract{color:var(--color-contract)}:host .novo-optgroup-label.text-color-job-code{color:var(--color-job-code)}:host .novo-optgroup-label.text-color-earn-code{color:var(--color-earn-code)}:host .novo-optgroup-label.text-color-billable-charge{color:var(--color-billable-charge)}:host .novo-optgroup-label.text-color-payable-charge{color:var(--color-payable-charge)}:host .novo-optgroup-label.text-color-invoice-statement{color:var(--color-invoice-statement)}:host .novo-optgroup-label.text-color-selection{color:var(--color-selection)}:host .novo-optgroup-label.text-color-positive{color:var(--color-positive)}:host .novo-optgroup-label.text-color-success{color:var(--color-success)}:host .novo-optgroup-label.text-color-warning{color:var(--color-warning)}:host .novo-optgroup-label.text-color-error{color:var(--color-error)}:host .novo-optgroup-label.text-color-info{color:var(--color-info)}:host .novo-optgroup-label.text-color-disabled{color:var(--color-disabled)}:host .novo-optgroup-label.text-color-red{color:var(--palette-red-50)}:host .novo-optgroup-label.text-color-pink{color:var(--palette-pink-50)}:host .novo-optgroup-label.text-color-orange{color:var(--palette-orange-50)}:host .novo-optgroup-label.text-color-yellow{color:var(--palette-yellow-50)}:host .novo-optgroup-label.text-color-green{color:var(--palette-green-50)}:host .novo-optgroup-label.text-color-teal{color:var(--palette-teal-50)}:host .novo-optgroup-label.text-color-blue{color:var(--palette-blue-50)}:host .novo-optgroup-label.text-color-aqua{color:var(--palette-aqua-50)}:host .novo-optgroup-label.text-color-indigo{color:var(--palette-indigo-50)}:host .novo-optgroup-label.text-color-violet{color:var(--palette-violet-50)}:host .novo-optgroup-label.text-color-gray{color:var(--palette-gray-50)}:host .novo-optgroup-label.margin-before{margin-top:.4rem}:host .novo-optgroup-label.margin-after{margin-bottom:.8rem}:host .novo-optgroup-label.text-length-small{max-width:40ch}:host .novo-optgroup-label.text-length-medium{max-width:55ch}:host .novo-optgroup-label.text-length-large{max-width:70ch}:host .novo-optgroup-label.text-weight-hairline{font-weight:100}:host .novo-optgroup-label.text-weight-thin{font-weight:200}:host .novo-optgroup-label.text-weight-light{font-weight:300}:host .novo-optgroup-label.text-weight-normal{font-weight:400}:host .novo-optgroup-label.text-weight-medium{font-weight:500}:host .novo-optgroup-label.text-weight-semibold{font-weight:600}:host .novo-optgroup-label.text-weight-bold{font-weight:700}:host .novo-optgroup-label.text-weight-extrabold{font-weight:800}:host .novo-optgroup-label.text-weight-heavy{font-weight:900}:host .novo-optgroup-label.text-weight-lighter{font-weight:lighter}:host .novo-optgroup-label.text-weight-bolder{font-weight:bolder}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [NOVO_OPTION_PARENT_COMPONENT]
                }, {
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0Z3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZWxlbWVudHMvY29tbW9uL29wdGlvbi9vcHRncm91cC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9lbGVtZW50cy9jb21tb24vb3B0aW9uL29wdGdyb3VwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hILE9BQU8sRUFBOEIsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckYsT0FBTyxFQUE2Qiw0QkFBNEIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7QUFFMUYsK0RBQStEO0FBQy9ELCtGQUErRjtBQUMvRixnR0FBZ0c7QUFDaEcsa0dBQWtHO0FBQ2xHLDZGQUE2RjtBQUM3RiwwRkFBMEY7QUFDMUYseUNBQXlDO0FBQ3pDLGtHQUFrRztBQUNsRyxtR0FBbUc7QUFDbkcsaUdBQWlHO0FBQ2pHLG1HQUFtRztBQUNuRyxtRkFBbUY7QUFDbkYsb0dBQW9HO0FBQ3BHLDJGQUEyRjtBQUMzRix3QkFBd0I7QUFDeEIsa0dBQWtHO0FBQ2xHLDRDQUE0QztBQUM1QyxnR0FBZ0c7QUFDaEcsd0RBQXdEO0FBRXhELG1EQUFtRDtBQUVuRCxNQUFNLE9BQU8sZ0JBQWdCO0lBRDdCO1FBT0UsMENBQTBDO1FBQzFDLGFBQVEsR0FBVyx1QkFBdUIsd0JBQXdCLEVBQUUsRUFBRSxDQUFDO0tBSXhFOzs4R0FYWSxnQkFBZ0I7a0dBQWhCLGdCQUFnQjs0RkFBaEIsZ0JBQWdCO2tCQUQ1QixTQUFTOztBQWFWLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE2QyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUUvRyxnQ0FBZ0M7QUFDaEMsSUFBSSx3QkFBd0IsR0FBRyxDQUFDLENBQUM7QUFFakM7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxJQUFJLGNBQWMsQ0FBZSxjQUFjLENBQUMsQ0FBQztBQUU5RTs7R0FFRztBQWtCSCxNQUFNLE9BQU8sWUFBYSxTQUFRLHFCQUFxQjtJQUNyRCxZQUE4RCxNQUFrQztRQUM5RixLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxFQUFFLFdBQVcsSUFBSSxLQUFLLENBQUM7SUFDakQsQ0FBQzs7MEdBSlUsWUFBWSxrQkFDSCw0QkFBNEI7OEZBRHJDLFlBQVksd1dBRlosQ0FBQyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxDQUFDLDZFQ3JFcEUsME5BQ3VHOzRGRHNFMUYsWUFBWTtrQkFqQnhCLFNBQVM7K0JBQ0UsZUFBZSxZQUNmLGNBQWMsbUJBR1AsdUJBQXVCLENBQUMsTUFBTSxVQUN2QyxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsUUFFdkI7d0JBQ0osS0FBSyxFQUFFLGVBQWU7d0JBQ3RCLGFBQWEsRUFBRSw2QkFBNkI7d0JBQzVDLHNCQUFzQixFQUFFLHlDQUF5Qzt3QkFDakUsd0JBQXdCLEVBQUUsOEJBQThCO3dCQUN4RCxnQ0FBZ0MsRUFBRSxVQUFVO3FCQUM3QyxhQUNVLENBQUMsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFdBQVcsY0FBYyxFQUFFLENBQUM7OzBCQUdyRCxNQUFNOzJCQUFDLDRCQUE0Qjs7MEJBQUcsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvb2xlYW5JbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBEaXJlY3RpdmUsIEluamVjdCwgSW5qZWN0aW9uVG9rZW4sIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDYW5EaXNhYmxlLCBDYW5EaXNhYmxlQ3RvciwgbWl4aW5EaXNhYmxlZCB9IGZyb20gJy4uL21peGlucy9kaXNhYmxlZC5taXhpbic7XG5pbXBvcnQgeyBOb3ZvT3B0aW9uUGFyZW50Q29tcG9uZW50LCBOT1ZPX09QVElPTl9QQVJFTlRfQ09NUE9ORU5UIH0gZnJvbSAnLi9vcHRpb24tcGFyZW50JztcblxuLy8gTm90ZXMgb24gdGhlIGFjY2Vzc2liaWxpdHkgcGF0dGVybiB1c2VkIGZvciBgbm92by1vcHRncm91cGAuXG4vLyBUaGUgb3B0aW9uIGdyb3VwIGhhcyB0d28gZGlmZmVyZW50IFwibW9kZXNcIjogcmVndWxhciBhbmQgbm92b0luZXJ0LiBUaGUgcmVndWxhciBtb2RlIHVzZXMgdGhlXG4vLyByZWNvbW1lbmRlZCBhMTF5IHBhdHRlcm4gd2hpY2ggaGFzIGByb2xlPVwiZ3JvdXBcImAgb24gdGhlIGdyb3VwIGVsZW1lbnQgd2l0aCBgYXJpYS1sYWJlbGxlZGJ5YFxuLy8gcG9pbnRpbmcgdG8gdGhlIGxhYmVsLiBUaGlzIHdvcmtzIGZvciBgbm92by1zZWxlY3RgLCBidXQgaXQgc2VlbXMgdG8gaGl0IGEgYnVnIGZvciBhdXRvY29tcGxldGVcbi8vIHVuZGVyIFZvaWNlT3ZlciB3aGVyZSB0aGUgZ3JvdXAgZG9lc24ndCBnZXQgcmVhZCBvdXQgYXQgYWxsLiBUaGUgYnVnIGFwcGVhcnMgdG8gYmUgdGhhdCBpZlxuLy8gdGhlcmUncyBfX2FueV9fIGExMXktcmVsYXRlZCBhdHRyaWJ1dGUgb24gdGhlIGdyb3VwIChlLmcuIGByb2xlYCBvciBgYXJpYS1sYWJlbGxlZGJ5YCksXG4vLyBWb2ljZU92ZXIgb24gU2FmYXJpIHdvbid0IHJlYWQgaXQgb3V0LlxuLy8gV2UndmUgaW50cm9kdWNlZCB0aGUgYG5vdm9JbmVydGAgbW9kZSBhcyBhIHdvcmthcm91bmQuIFVuZGVyIHRoaXMgbW9kZSwgYWxsIGExMXkgYXR0cmlidXRlcyBhcmVcbi8vIHJlbW92ZWQgZnJvbSB0aGUgZ3JvdXAsIGFuZCB3ZSBnZXQgdGhlIHNjcmVlbiByZWFkZXIgdG8gcmVhZCBvdXQgdGhlIGdyb3VwIGxhYmVsIGJ5IG1pcnJvcmluZyBpdFxuLy8gaW5zaWRlIGFuIGludmlzaWJsZSBlbGVtZW50IGluIHRoZSBvcHRpb24uIFRoaXMgaXMgc3ViLW9wdGltYWwsIGJlY2F1c2UgdGhlIHNjcmVlbiByZWFkZXIgd2lsbFxuLy8gcmVwZWF0IHRoZSBncm91cCBsYWJlbCBvbiBlYWNoIG5hdmlnYXRpb24sIHdoZXJlYXMgdGhlIGRlZmF1bHQgcGF0dGVybiBvbmx5IHJlYWRzIHRoZSBncm91cCB3aGVuXG4vLyB0aGUgdXNlciBlbnRlcnMgYSBuZXcgZ3JvdXAuIFRoZSBmb2xsb3dpbmcgYWx0ZXJuYXRlIGFwcHJvYWNoZXMgd2VyZSBjb25zaWRlcmVkOlxuLy8gMS4gUmVhZGluZyBvdXQgdGhlIGdyb3VwIGxhYmVsIHVzaW5nIHRoZSBgTGl2ZUFubm91bmNlcmAgc29sdmVzIHRoZSBwcm9ibGVtLCBidXQgd2UgY2FuJ3QgY29udHJvbFxuLy8gICAgd2hlbiB0aGUgdGV4dCB3aWxsIGJlIHJlYWQgb3V0IHNvIHNvbWV0aW1lcyBpdCBjb21lcyBpbiB0b28gbGF0ZSBvciBuZXZlciBpZiB0aGUgdXNlclxuLy8gICAgbmF2aWdhdGVzIHF1aWNrbHkuXG4vLyAyLiBgPG5vdm8tb3B0aW9uIGFyaWEtZGVzY3JpYmVkYnk9XCJncm91cExhYmVsXCJgIC0gVGhpcyB3b3JrcyBvbiBTYWZhcmksIGJ1dCBWb2ljZU92ZXIgaW4gQ2hyb21lXG4vLyAgICB3b24ndCByZWFkIG91dCB0aGUgZGVzY3JpcHRpb24gYXQgYWxsLlxuLy8gMy4gYDxub3ZvLW9wdGlvbiBhcmlhLWxhYmVsbGVkYnk9XCJvcHRpb25MYWJlbCBncm91cExhYmVsXCJgIC0gVGhpcyB3b3JrcyBvbiBDaHJvbWUsIGJ1dCBTYWZhcmlcbi8vICAgICBkb2Vzbid0IHJlYWQgb3V0IHRoZSB0ZXh0IGF0IGFsbC4gRnVydGhlcm1vcmUsIG9uXG5cbi8vIEJvaWxlcnBsYXRlIGZvciBhcHBseWluZyBtaXhpbnMgdG8gTm92b09wdGdyb3VwLlxuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgTm92b09wdGdyb3VwQmFzZSBpbXBsZW1lbnRzIENhbkRpc2FibGUge1xuICBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAvKiogTGFiZWwgZm9yIHRoZSBvcHRpb24gZ3JvdXAuICovXG4gIGxhYmVsOiBzdHJpbmc7XG5cbiAgLyoqIFVuaXF1ZSBpZCBmb3IgdGhlIHVuZGVybHlpbmcgbGFiZWwuICovXG4gIF9sYWJlbElkOiBzdHJpbmcgPSBgbm92by1vcHRncm91cC1sYWJlbC0ke191bmlxdWVPcHRncm91cElkQ291bnRlcisrfWA7XG5cbiAgLyoqIFdoZXRoZXIgdGhlIGdyb3VwIGlzIGluIG5vdm9JbmVydCBhMTF5IG1vZGUuICovXG4gIF9ub3ZvSW5lcnQ6IGJvb2xlYW47XG59XG5leHBvcnQgY29uc3QgTm92b09wdGdyb3VwTWl4aW5CYXNlOiBDYW5EaXNhYmxlQ3RvciAmIHR5cGVvZiBOb3ZvT3B0Z3JvdXBCYXNlID0gbWl4aW5EaXNhYmxlZChOb3ZvT3B0Z3JvdXBCYXNlKTtcblxuLy8gQ291bnRlciBmb3IgdW5pcXVlIGdyb3VwIGlkcy5cbmxldCBfdW5pcXVlT3B0Z3JvdXBJZENvdW50ZXIgPSAwO1xuXG4vKipcbiAqIEluamVjdGlvbiB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlZmVyZW5jZSBpbnN0YW5jZXMgb2YgYE5vdm9PcHRncm91cGAuIEl0IHNlcnZlcyBhc1xuICogYWx0ZXJuYXRpdmUgdG9rZW4gdG8gdGhlIGFjdHVhbCBgTm92b09wdGdyb3VwYCBjbGFzcyB3aGljaCBjb3VsZCBjYXVzZSB1bm5lY2Vzc2FyeVxuICogcmV0ZW50aW9uIG9mIHRoZSBjbGFzcyBhbmQgaXRzIGNvbXBvbmVudCBtZXRhZGF0YS5cbiAqL1xuZXhwb3J0IGNvbnN0IE5PVk9fT1BUR1JPVVAgPSBuZXcgSW5qZWN0aW9uVG9rZW48Tm92b09wdGdyb3VwPignTm92b09wdGdyb3VwJyk7XG5cbi8qKlxuICogQ29tcG9uZW50IHRoYXQgaXMgdXNlZCB0byBncm91cCBpbnN0YW5jZXMgb2YgYG5vdm8tb3B0aW9uYC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbm92by1vcHRncm91cCcsXG4gIGV4cG9ydEFzOiAnbm92b09wdGdyb3VwJyxcbiAgdGVtcGxhdGVVcmw6ICdvcHRncm91cC5jb21wb25lbnQuaHRtbCcsXG4gIC8vIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBpbnB1dHM6IFsnZGlzYWJsZWQnLCAnbGFiZWwnXSxcbiAgc3R5bGVVcmxzOiBbJ29wdGdyb3VwLmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ25vdm8tb3B0Z3JvdXAnLFxuICAgICdbYXR0ci5yb2xlXSc6ICdfbm92b0luZXJ0ID8gbnVsbCA6IFwiZ3JvdXBcIicsXG4gICAgJ1thdHRyLmFyaWEtZGlzYWJsZWRdJzogJ19ub3ZvSW5lcnQgPyBudWxsIDogZGlzYWJsZWQudG9TdHJpbmcoKScsXG4gICAgJ1thdHRyLmFyaWEtbGFiZWxsZWRieV0nOiAnX25vdm9JbmVydCA/IG51bGwgOiBfbGFiZWxJZCcsXG4gICAgJ1tjbGFzcy5ub3ZvLW9wdGdyb3VwLWRpc2FibGVkXSc6ICdkaXNhYmxlZCcsXG4gIH0sXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogTk9WT19PUFRHUk9VUCwgdXNlRXhpc3Rpbmc6IE5vdm9PcHRncm91cCB9XSxcbn0pXG5leHBvcnQgY2xhc3MgTm92b09wdGdyb3VwIGV4dGVuZHMgTm92b09wdGdyb3VwTWl4aW5CYXNlIHtcbiAgY29uc3RydWN0b3IoQEluamVjdChOT1ZPX09QVElPTl9QQVJFTlRfQ09NUE9ORU5UKSBAT3B0aW9uYWwoKSBwYXJlbnQ/OiBOb3ZvT3B0aW9uUGFyZW50Q29tcG9uZW50KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9ub3ZvSW5lcnQgPSBwYXJlbnQ/LmluZXJ0R3JvdXBzID8/IGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX2Rpc2FibGVkOiBCb29sZWFuSW5wdXQ7XG59XG4iLCI8c3BhbiAqbmdJZj1cImxhYmVsXCIgY2xhc3M9XCJub3ZvLW9wdGdyb3VwLWxhYmVsXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgW2lkXT1cIl9sYWJlbElkXCI+e3sgbGFiZWwgfX08L3NwYW4+XG48bmctY29udGVudCBzZWxlY3Q9XCJub3ZvLW9wdGlvbiwgbmctY29udGFpbmVyLCBub3ZvLWRpdmlkZXIsIGNkay12aXJ0dWFsLXNjcm9sbC12aWV3cG9ydFwiPjwvbmctY29udGVudD4iXX0=