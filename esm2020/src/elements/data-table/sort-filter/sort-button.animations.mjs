import { animate, state, style, transition, trigger } from '@angular/animations';
import { SortDirection } from './sort-direction';
const activeStyle = { opacity: 1, pointerEvents: 'all', top: 0 };
const inactiveStyle = { opacity: 0, pointerEvents: 'none' };
/** Animation that moves the sort indicator. */
export const sortAscAnim = trigger('sortAsc', [
    // ...
    state(SortDirection.ASC, style(activeStyle)),
    state(SortDirection.DESC, style(inactiveStyle)),
    state(SortDirection.NONE, style(inactiveStyle)),
    transition('* => ascending', [animate('1s')]),
    transition('ascending => *', [animate('0.5s')]),
]);
export const sortDescAnim = trigger('sortDesc', [
    // ...
    state(SortDirection.ASC, style(inactiveStyle)),
    state(SortDirection.DESC, style(activeStyle)),
    state(SortDirection.NONE, style(inactiveStyle)),
    transition('* => descending', [animate('1s')]),
    transition('descending => *', [animate('0.5s')]),
]);
export const sortNoneAnim = trigger('sortNone', [
    // ...
    state(SortDirection.ASC, style(inactiveStyle)),
    state(SortDirection.DESC, style(inactiveStyle)),
    state(SortDirection.NONE, style(activeStyle)),
    transition('* => none', [animate('1s')]),
    transition('none => *', [animate('0.5s')]),
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC1idXR0b24uYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vdm8tZWxlbWVudHMvc3JjL2VsZW1lbnRzL2RhdGEtdGFibGUvc29ydC1maWx0ZXIvc29ydC1idXR0b24uYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUE0QixLQUFLLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsTUFBTSxXQUFXLEdBQUcsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDO0FBQ2pFLE1BQU0sYUFBYSxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFNUQsK0NBQStDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBNkIsT0FBTyxDQUFDLFNBQVMsRUFBRTtJQUN0RSxNQUFNO0lBQ04sS0FBSyxDQUFDLGFBQWEsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzVDLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMvQyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDL0MsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDN0MsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Q0FDaEQsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUE2QixPQUFPLENBQUMsVUFBVSxFQUFFO0lBQ3hFLE1BQU07SUFDTixLQUFLLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDOUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzdDLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMvQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUM5QyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztDQUNqRCxDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQTZCLE9BQU8sQ0FBQyxVQUFVLEVBQUU7SUFDeEUsTUFBTTtJQUNOLEtBQUssQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUM5QyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDL0MsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzdDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN4QyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Q0FDM0MsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYW5pbWF0ZSwgQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IFNvcnREaXJlY3Rpb24gfSBmcm9tICcuL3NvcnQtZGlyZWN0aW9uJztcblxuY29uc3QgYWN0aXZlU3R5bGUgPSB7IG9wYWNpdHk6IDEsIHBvaW50ZXJFdmVudHM6ICdhbGwnLCB0b3A6IDAgfTtcbmNvbnN0IGluYWN0aXZlU3R5bGUgPSB7IG9wYWNpdHk6IDAsIHBvaW50ZXJFdmVudHM6ICdub25lJyB9O1xuXG4vKiogQW5pbWF0aW9uIHRoYXQgbW92ZXMgdGhlIHNvcnQgaW5kaWNhdG9yLiAqL1xuZXhwb3J0IGNvbnN0IHNvcnRBc2NBbmltOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCdzb3J0QXNjJywgW1xuICAvLyAuLi5cbiAgc3RhdGUoU29ydERpcmVjdGlvbi5BU0MsIHN0eWxlKGFjdGl2ZVN0eWxlKSksXG4gIHN0YXRlKFNvcnREaXJlY3Rpb24uREVTQywgc3R5bGUoaW5hY3RpdmVTdHlsZSkpLFxuICBzdGF0ZShTb3J0RGlyZWN0aW9uLk5PTkUsIHN0eWxlKGluYWN0aXZlU3R5bGUpKSxcbiAgdHJhbnNpdGlvbignKiA9PiBhc2NlbmRpbmcnLCBbYW5pbWF0ZSgnMXMnKV0pLFxuICB0cmFuc2l0aW9uKCdhc2NlbmRpbmcgPT4gKicsIFthbmltYXRlKCcwLjVzJyldKSxcbl0pO1xuXG5leHBvcnQgY29uc3Qgc29ydERlc2NBbmltOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCdzb3J0RGVzYycsIFtcbiAgLy8gLi4uXG4gIHN0YXRlKFNvcnREaXJlY3Rpb24uQVNDLCBzdHlsZShpbmFjdGl2ZVN0eWxlKSksXG4gIHN0YXRlKFNvcnREaXJlY3Rpb24uREVTQywgc3R5bGUoYWN0aXZlU3R5bGUpKSxcbiAgc3RhdGUoU29ydERpcmVjdGlvbi5OT05FLCBzdHlsZShpbmFjdGl2ZVN0eWxlKSksXG4gIHRyYW5zaXRpb24oJyogPT4gZGVzY2VuZGluZycsIFthbmltYXRlKCcxcycpXSksXG4gIHRyYW5zaXRpb24oJ2Rlc2NlbmRpbmcgPT4gKicsIFthbmltYXRlKCcwLjVzJyldKSxcbl0pO1xuXG5leHBvcnQgY29uc3Qgc29ydE5vbmVBbmltOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCdzb3J0Tm9uZScsIFtcbiAgLy8gLi4uXG4gIHN0YXRlKFNvcnREaXJlY3Rpb24uQVNDLCBzdHlsZShpbmFjdGl2ZVN0eWxlKSksXG4gIHN0YXRlKFNvcnREaXJlY3Rpb24uREVTQywgc3R5bGUoaW5hY3RpdmVTdHlsZSkpLFxuICBzdGF0ZShTb3J0RGlyZWN0aW9uLk5PTkUsIHN0eWxlKGFjdGl2ZVN0eWxlKSksXG4gIHRyYW5zaXRpb24oJyogPT4gbm9uZScsIFthbmltYXRlKCcxcycpXSksXG4gIHRyYW5zaXRpb24oJ25vbmUgPT4gKicsIFthbmltYXRlKCcwLjVzJyldKSxcbl0pO1xuIl19