import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';
import { ControlContainer, FormBuilder } from '@angular/forms';
import { NOVO_QUERY_BUILDER } from './query-builder.tokens';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../flex/Flex";
import * as i3 from "../icon/Icon";
import * as i4 from "../field/field";
import * as i5 from "../common/typography/text/text.component";
import * as i6 from "../button/Button";
import * as i7 from "../card/Card";
import * as i8 from "./expression-builder/expression-builder.component";
import * as i9 from "../common/directives/space.directive";
import * as i10 from "../field/input";
import * as i11 from "../common/directives/theme.directive";
export class QueryBuilderComponent {
    constructor(controlContainer, formBuilder, cdr) {
        this.controlContainer = controlContainer;
        this.formBuilder = formBuilder;
        this.cdr = cdr;
        this.config = null;
        // this.service.getFieldsForSegment().then((fields) => {
        //   this.config = { fields };
        //   this.cdr.detectChanges();
        // });
    }
    ngOnInit() {
        if (this.controlContainer) {
            this.queryForm = this.controlContainer.control.get('query');
        }
        else {
            this.queryForm = this.formBuilder.group({
                description: [''],
                include: this.formBuilder.array([]),
                exclude: this.formBuilder.array([]),
            });
        }
    }
    onSubmit() {
        console.log('Your form data : ', this.queryForm.value);
    }
}
QueryBuilderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: QueryBuilderComponent, deps: [{ token: i1.ControlContainer }, { token: i1.FormBuilder }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
QueryBuilderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.0", type: QueryBuilderComponent, selector: "novo-query-builder", providers: [{ provide: NOVO_QUERY_BUILDER, useExisting: QueryBuilderComponent }], ngImport: i0, template: "<form [formGroup]=\"queryForm\" (ngSubmit)=\"onSubmit()\">\n  <novo-stack class=\"query-builder\" gap=\"1rem\">\n    <novo-flex class=\"query-description-container\">\n      <novo-icon novoPrefix role=\"img\" aria-label=\"description\">note</novo-icon>\n      <novo-field class=\"query-description-field\">\n        <input\n          novoInput\n          aria-label=\"Description\"\n          placeholder=\"Add a description\"\n          type=\"text\"\n          maxlength=\"100\"\n          formControlName=\"description\" />\n      </novo-field>\n    </novo-flex>\n\n    <novo-stack class=\"query-criteria query-criteria-include\">\n      <novo-flex class=\"query-criteria-header\" gap=\"1rem\">\n        <novo-icon role=\"img\" aria-label=\"include records\">circle</novo-icon>\n        <novo-text class=\"flex\">Include <strong>Records</strong> when: </novo-text>\n        <novo-button theme=\"icon\">\n          <novo-icon>delete</novo-icon>\n        </novo-button>\n      </novo-flex>\n      <novo-card class=\"query-condition-container\">\n        <novo-expression-builder controlName=\"include\" [config]=\"config\"></novo-expression-builder>\n      </novo-card>\n    </novo-stack>\n\n    <novo-stack class=\"query-criteria query-criteria-exclude\">\n      <novo-flex class=\"query-criteria-header\" gap=\"1rem\">\n        <novo-icon role=\"img\" aria-label=\"include records\">close-o</novo-icon>\n        <novo-text class=\"flex\">Exclude <strong>Records</strong> when: </novo-text>\n        <novo-button theme=\"icon\">\n          <novo-icon>delete</novo-icon>\n        </novo-button>\n      </novo-flex>\n      <novo-card class=\"query-condition-container\">\n        <novo-expression-builder controlName=\"exclude\" [config]=\"config\"></novo-expression-builder>\n      </novo-card>\n    </novo-stack>\n  </novo-stack>\n</form>", styles: [":host{display:block;min-width:640px;max-width:640px}:host .query-description-container{gap:1rem}:host .query-criteria{box-sizing:border-box;background:#e6e6e6;border-left:5px solid #4f5361;border-radius:3px;display:inline-block;margin-bottom:20px;padding:0 0 10px 1px;width:100%}:host .query-criteria.query-criteria-include{border-left:5px solid #8cc152}:host .query-criteria.query-criteria-exclude{border-left:5px solid #da4453}:host .query-criteria .query-criteria-header{font-weight:400;line-height:35px;margin-top:1rem;padding:0 1rem;width:100%;box-sizing:border-box}:host .query-criteria .query-condition-container{padding:1rem 0;margin:1rem;align-self:stretch}:host .query-criteria .flex{flex:1}\n"], components: [{ type: i2.NovoStackElement, selector: "novo-stack,novo-column", inputs: ["direction", "align"] }, { type: i2.NovoFlexElement, selector: "novo-flex,novo-row", inputs: ["direction", "align", "justify", "wrap", "gap"] }, { type: i3.NovoIconComponent, selector: "novo-icon", inputs: ["raised", "theme", "shape", "color", "size", "smaller", "larger", "alt", "name"] }, { type: i4.NovoFieldElement, selector: "novo-field", inputs: ["layout", "appearance", "width"] }, { type: i5.NovoText, selector: "novo-text,[novo-text]", inputs: ["block"] }, { type: i6.NovoButtonElement, selector: "novo-button,button[theme]", inputs: ["color", "side", "size", "theme", "loading", "icon", "disabled"] }, { type: i7.CardElement, selector: "novo-card", inputs: ["padding", "config", "title", "message", "messageIcon", "icon", "iconTooltip", "refresh", "close", "move", "loading", "inline", "inset"], outputs: ["onClose", "onRefresh"] }, { type: i8.ExpressionBuilderComponent, selector: "novo-expression-builder", inputs: ["config", "controlName"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i9.GapDirective, selector: "[gap]", inputs: ["gap"] }, { type: i4.NovoFieldPrefixDirective, selector: "[novoPrefix]" }, { type: i10.NovoInput, selector: "input[novoInput], textarea[novoInput], select[novoInput]", inputs: ["disabled", "id", "placeholder", "required", "type", "value", "readonly"] }, { type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i11.ThemeColorDirective, selector: "[theme]", inputs: ["theme"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: QueryBuilderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'novo-query-builder', changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: NOVO_QUERY_BUILDER, useExisting: QueryBuilderComponent }], template: "<form [formGroup]=\"queryForm\" (ngSubmit)=\"onSubmit()\">\n  <novo-stack class=\"query-builder\" gap=\"1rem\">\n    <novo-flex class=\"query-description-container\">\n      <novo-icon novoPrefix role=\"img\" aria-label=\"description\">note</novo-icon>\n      <novo-field class=\"query-description-field\">\n        <input\n          novoInput\n          aria-label=\"Description\"\n          placeholder=\"Add a description\"\n          type=\"text\"\n          maxlength=\"100\"\n          formControlName=\"description\" />\n      </novo-field>\n    </novo-flex>\n\n    <novo-stack class=\"query-criteria query-criteria-include\">\n      <novo-flex class=\"query-criteria-header\" gap=\"1rem\">\n        <novo-icon role=\"img\" aria-label=\"include records\">circle</novo-icon>\n        <novo-text class=\"flex\">Include <strong>Records</strong> when: </novo-text>\n        <novo-button theme=\"icon\">\n          <novo-icon>delete</novo-icon>\n        </novo-button>\n      </novo-flex>\n      <novo-card class=\"query-condition-container\">\n        <novo-expression-builder controlName=\"include\" [config]=\"config\"></novo-expression-builder>\n      </novo-card>\n    </novo-stack>\n\n    <novo-stack class=\"query-criteria query-criteria-exclude\">\n      <novo-flex class=\"query-criteria-header\" gap=\"1rem\">\n        <novo-icon role=\"img\" aria-label=\"include records\">close-o</novo-icon>\n        <novo-text class=\"flex\">Exclude <strong>Records</strong> when: </novo-text>\n        <novo-button theme=\"icon\">\n          <novo-icon>delete</novo-icon>\n        </novo-button>\n      </novo-flex>\n      <novo-card class=\"query-condition-container\">\n        <novo-expression-builder controlName=\"exclude\" [config]=\"config\"></novo-expression-builder>\n      </novo-card>\n    </novo-stack>\n  </novo-stack>\n</form>", styles: [":host{display:block;min-width:640px;max-width:640px}:host .query-description-container{gap:1rem}:host .query-criteria{box-sizing:border-box;background:#e6e6e6;border-left:5px solid #4f5361;border-radius:3px;display:inline-block;margin-bottom:20px;padding:0 0 10px 1px;width:100%}:host .query-criteria.query-criteria-include{border-left:5px solid #8cc152}:host .query-criteria.query-criteria-exclude{border-left:5px solid #da4453}:host .query-criteria .query-criteria-header{font-weight:400;line-height:35px;margin-top:1rem;padding:0 1rem;width:100%;box-sizing:border-box}:host .query-criteria .query-condition-container{padding:1rem 0;margin:1rem;align-self:stretch}:host .query-criteria .flex{flex:1}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer }, { type: i1.FormBuilder }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktYnVpbGRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzL3NyYy9lbGVtZW50cy9xdWVyeS1idWlsZGVyL3F1ZXJ5LWJ1aWxkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbm92by1lbGVtZW50cy9zcmMvZWxlbWVudHMvcXVlcnktYnVpbGRlci9xdWVyeS1idWlsZGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDOUYsT0FBTyxFQUFtQixnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7Ozs7Ozs7OztBQVM1RCxNQUFNLE9BQU8scUJBQXFCO0lBSWhDLFlBQW9CLGdCQUFrQyxFQUFVLFdBQXdCLEVBQVUsR0FBc0I7UUFBcEcscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUFVLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQVUsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFGeEgsV0FBTSxHQUFRLElBQUksQ0FBQztRQUdqQix3REFBd0Q7UUFDeEQsOEJBQThCO1FBQzlCLDhCQUE4QjtRQUM5QixNQUFNO0lBQ1IsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzdEO2FBQU07WUFDTCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDO2dCQUN0QyxXQUFXLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ2pCLE9BQU8sRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7Z0JBQ25DLE9BQU8sRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7YUFDcEMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RCxDQUFDOztrSEF6QlUscUJBQXFCO3NHQUFyQixxQkFBcUIsNkNBRnJCLENBQUMsRUFBRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsV0FBVyxFQUFFLHFCQUFxQixFQUFFLENBQUMsMEJDVGxGLGt6REF5Q087MkZEOUJNLHFCQUFxQjtrQkFQakMsU0FBUzsrQkFDRSxvQkFBb0IsbUJBR2IsdUJBQXVCLENBQUMsTUFBTSxhQUNwQyxDQUFDLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFdBQVcsdUJBQXVCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgQ29udHJvbENvbnRhaW5lciwgRm9ybUJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBOT1ZPX1FVRVJZX0JVSUxERVIgfSBmcm9tICcuL3F1ZXJ5LWJ1aWxkZXIudG9rZW5zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbm92by1xdWVyeS1idWlsZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3F1ZXJ5LWJ1aWxkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9xdWVyeS1idWlsZGVyLmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5PVk9fUVVFUllfQlVJTERFUiwgdXNlRXhpc3Rpbmc6IFF1ZXJ5QnVpbGRlckNvbXBvbmVudCB9XSxcbn0pXG5leHBvcnQgY2xhc3MgUXVlcnlCdWlsZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcXVlcnlGb3JtOiBBYnN0cmFjdENvbnRyb2w7XG4gIGNvbmZpZzogYW55ID0gbnVsbDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbnRyb2xDb250YWluZXI6IENvbnRyb2xDb250YWluZXIsIHByaXZhdGUgZm9ybUJ1aWxkZXI6IEZvcm1CdWlsZGVyLCBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcbiAgICAvLyB0aGlzLnNlcnZpY2UuZ2V0RmllbGRzRm9yU2VnbWVudCgpLnRoZW4oKGZpZWxkcykgPT4ge1xuICAgIC8vICAgdGhpcy5jb25maWcgPSB7IGZpZWxkcyB9O1xuICAgIC8vICAgdGhpcy5jZHIuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIC8vIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuY29udHJvbENvbnRhaW5lcikge1xuICAgICAgdGhpcy5xdWVyeUZvcm0gPSB0aGlzLmNvbnRyb2xDb250YWluZXIuY29udHJvbC5nZXQoJ3F1ZXJ5Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucXVlcnlGb3JtID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgICAgIGRlc2NyaXB0aW9uOiBbJyddLFxuICAgICAgICBpbmNsdWRlOiB0aGlzLmZvcm1CdWlsZGVyLmFycmF5KFtdKSxcbiAgICAgICAgZXhjbHVkZTogdGhpcy5mb3JtQnVpbGRlci5hcnJheShbXSksXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBvblN1Ym1pdCgpIHtcbiAgICBjb25zb2xlLmxvZygnWW91ciBmb3JtIGRhdGEgOiAnLCB0aGlzLnF1ZXJ5Rm9ybS52YWx1ZSk7XG4gIH1cbn1cbiIsIjxmb3JtIFtmb3JtR3JvdXBdPVwicXVlcnlGb3JtXCIgKG5nU3VibWl0KT1cIm9uU3VibWl0KClcIj5cbiAgPG5vdm8tc3RhY2sgY2xhc3M9XCJxdWVyeS1idWlsZGVyXCIgZ2FwPVwiMXJlbVwiPlxuICAgIDxub3ZvLWZsZXggY2xhc3M9XCJxdWVyeS1kZXNjcmlwdGlvbi1jb250YWluZXJcIj5cbiAgICAgIDxub3ZvLWljb24gbm92b1ByZWZpeCByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cImRlc2NyaXB0aW9uXCI+bm90ZTwvbm92by1pY29uPlxuICAgICAgPG5vdm8tZmllbGQgY2xhc3M9XCJxdWVyeS1kZXNjcmlwdGlvbi1maWVsZFwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBub3ZvSW5wdXRcbiAgICAgICAgICBhcmlhLWxhYmVsPVwiRGVzY3JpcHRpb25cIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQWRkIGEgZGVzY3JpcHRpb25cIlxuICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICBtYXhsZW5ndGg9XCIxMDBcIlxuICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cImRlc2NyaXB0aW9uXCIgLz5cbiAgICAgIDwvbm92by1maWVsZD5cbiAgICA8L25vdm8tZmxleD5cblxuICAgIDxub3ZvLXN0YWNrIGNsYXNzPVwicXVlcnktY3JpdGVyaWEgcXVlcnktY3JpdGVyaWEtaW5jbHVkZVwiPlxuICAgICAgPG5vdm8tZmxleCBjbGFzcz1cInF1ZXJ5LWNyaXRlcmlhLWhlYWRlclwiIGdhcD1cIjFyZW1cIj5cbiAgICAgICAgPG5vdm8taWNvbiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cImluY2x1ZGUgcmVjb3Jkc1wiPmNpcmNsZTwvbm92by1pY29uPlxuICAgICAgICA8bm92by10ZXh0IGNsYXNzPVwiZmxleFwiPkluY2x1ZGUgPHN0cm9uZz5SZWNvcmRzPC9zdHJvbmc+IHdoZW46IDwvbm92by10ZXh0PlxuICAgICAgICA8bm92by1idXR0b24gdGhlbWU9XCJpY29uXCI+XG4gICAgICAgICAgPG5vdm8taWNvbj5kZWxldGU8L25vdm8taWNvbj5cbiAgICAgICAgPC9ub3ZvLWJ1dHRvbj5cbiAgICAgIDwvbm92by1mbGV4PlxuICAgICAgPG5vdm8tY2FyZCBjbGFzcz1cInF1ZXJ5LWNvbmRpdGlvbi1jb250YWluZXJcIj5cbiAgICAgICAgPG5vdm8tZXhwcmVzc2lvbi1idWlsZGVyIGNvbnRyb2xOYW1lPVwiaW5jbHVkZVwiIFtjb25maWddPVwiY29uZmlnXCI+PC9ub3ZvLWV4cHJlc3Npb24tYnVpbGRlcj5cbiAgICAgIDwvbm92by1jYXJkPlxuICAgIDwvbm92by1zdGFjaz5cblxuICAgIDxub3ZvLXN0YWNrIGNsYXNzPVwicXVlcnktY3JpdGVyaWEgcXVlcnktY3JpdGVyaWEtZXhjbHVkZVwiPlxuICAgICAgPG5vdm8tZmxleCBjbGFzcz1cInF1ZXJ5LWNyaXRlcmlhLWhlYWRlclwiIGdhcD1cIjFyZW1cIj5cbiAgICAgICAgPG5vdm8taWNvbiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cImluY2x1ZGUgcmVjb3Jkc1wiPmNsb3NlLW88L25vdm8taWNvbj5cbiAgICAgICAgPG5vdm8tdGV4dCBjbGFzcz1cImZsZXhcIj5FeGNsdWRlIDxzdHJvbmc+UmVjb3Jkczwvc3Ryb25nPiB3aGVuOiA8L25vdm8tdGV4dD5cbiAgICAgICAgPG5vdm8tYnV0dG9uIHRoZW1lPVwiaWNvblwiPlxuICAgICAgICAgIDxub3ZvLWljb24+ZGVsZXRlPC9ub3ZvLWljb24+XG4gICAgICAgIDwvbm92by1idXR0b24+XG4gICAgICA8L25vdm8tZmxleD5cbiAgICAgIDxub3ZvLWNhcmQgY2xhc3M9XCJxdWVyeS1jb25kaXRpb24tY29udGFpbmVyXCI+XG4gICAgICAgIDxub3ZvLWV4cHJlc3Npb24tYnVpbGRlciBjb250cm9sTmFtZT1cImV4Y2x1ZGVcIiBbY29uZmlnXT1cImNvbmZpZ1wiPjwvbm92by1leHByZXNzaW9uLWJ1aWxkZXI+XG4gICAgICA8L25vdm8tY2FyZD5cbiAgICA8L25vdm8tc3RhY2s+XG4gIDwvbm92by1zdGFjaz5cbjwvZm9ybT4iXX0=