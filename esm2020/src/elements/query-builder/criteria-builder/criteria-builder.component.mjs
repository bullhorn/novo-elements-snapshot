import { ChangeDetectionStrategy, Component, ContentChildren, forwardRef, Input, QueryList, ChangeDetectorRef } from '@angular/core';
import { ControlContainer, FormBuilder, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';
import { Subject } from 'rxjs';
import { NovoConditionFieldDef } from '../query-builder.directives';
import { NOVO_CRITERIA_BUILDER } from '../query-builder.tokens';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../../flex/Flex";
import * as i3 from "../../common/typography/caption/caption.component";
import * as i4 from "../../common/typography/text/text.component";
import * as i5 from "../condition-builder/condition-builder.component";
import * as i6 from "../../button/Button";
import * as i7 from "../condition-definitions/id-condition.definition";
import * as i8 from "../condition-definitions/date-condition.definition";
import * as i9 from "../condition-definitions/string-condition.definition";
import * as i10 from "../condition-definitions/number-condition.definition";
import * as i11 from "../condition-definitions/address-condition.definition";
import * as i12 from "../condition-definitions/boolean-condition.definition";
import * as i13 from "../condition-definitions/picker-condition.definition";
import * as i14 from "@angular/common";
import * as i15 from "../../common/directives/space.directive";
import * as i16 from "../../common/directives/theme.directive";
export class CriteriaBuilderComponent {
    constructor(controlContainer, formBuilder, cdr) {
        this.controlContainer = controlContainer;
        this.formBuilder = formBuilder;
        this.cdr = cdr;
        this.orEnabled = false;
        this.addCriteriaLabel = 'Add Criteria';
        this._customFieldDefs = new Set();
        this._fieldDefsByName = new Map();
        /** Subject that emits when the component has been destroyed. */
        this._onDestroy = new Subject();
    }
    ngOnInit() {
        this.parentForm = this.controlContainer.control;
        Promise.resolve().then(() => this.addAndGroup());
    }
    ngAfterContentChecked() {
        this._cacheFieldDefs();
    }
    ngOnDestroy() {
        // Clear all outlets and Maps
        [this._customFieldDefs, this._fieldDefsByName].forEach((def) => {
            def.clear();
        });
        this._onDestroy.next();
        this._onDestroy.complete();
    }
    handleAddOrFilter(evt) {
    }
    handleAddAndFilter(evt) {
        this.addAndGroup();
    }
    andGroups() {
        return this.parentForm.get(this.controlName);
    }
    newAndGroup(data) {
        return this.formBuilder.group({
            $or: this.formBuilder.array([this.newOrGroup(data)]),
        });
    }
    addAndGroup(data) {
        this.andGroups().push(this.newAndGroup(data));
        this.cdr.markForCheck();
    }
    removeAndGroup(index) {
        this.andGroups().removeAt(index);
        this.cdr.markForCheck();
    }
    orGroups(index) {
        return this.andGroups().at(index).get('$or');
    }
    newOrGroup(data) {
        return this.formBuilder.group(data || {
            field: [null, Validators.required],
            operator: [null, Validators.required],
            value: [null, Validators.required],
        });
    }
    addOrGroup(index) {
        this.orGroups(index).push(this.newOrGroup());
        this.cdr.markForCheck();
    }
    removeOrGroup(index, orIndex) {
        this.orGroups(index).removeAt(orIndex);
        if (!this.orGroups(index).controls.length) {
            this.removeAndGroup(index);
        }
        this.cdr.markForCheck();
    }
    resetQueryForm() {
        while (this.parentForm['controls'][this.controlName].length !== 0) {
            this.parentForm['controls'][this.controlName].removeAt(0);
        }
    }
    canAddGroup() {
        if (this.andGroups().controls.length < 1)
            return true;
        const len = this.andGroups().controls.length - 1;
        const last = this.orGroups(len).controls.length - 1;
        const { field, value } = this.orGroups(len).at(last).value;
        return !!field && !!value;
    }
    /** Adds a field definition that was not included as part of the content children. */
    addFieldDef(fieldDef) {
        this._customFieldDefs.add(fieldDef);
    }
    /** Removes a field definition that was not included as part of the content children. */
    removeFieldDef(fieldDef) {
        this._customFieldDefs.delete(fieldDef);
    }
    getFieldDefsByName() {
        return this._fieldDefsByName;
    }
    _cacheFieldDefs() {
        this._fieldDefsByName.clear();
        const defs = [
            // Dynamically Added Definitions
            ...Array.from(this._customFieldDefs),
            ...Array.from(this._contentFieldDefs),
        ];
        defs.forEach((fieldDef) => {
            if (this._fieldDefsByName.has(fieldDef.name)) {
                // throw new Error(`duplicate field name for ${fieldDef.name}`);
            }
            this._fieldDefsByName.set(fieldDef.name, fieldDef);
        });
    }
}
CriteriaBuilderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CriteriaBuilderComponent, deps: [{ token: i1.ControlContainer }, { token: i1.FormBuilder }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
CriteriaBuilderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: CriteriaBuilderComponent, selector: "novo-criteria-builder", inputs: { config: "config", controlName: "controlName", orEnabled: "orEnabled", addCriteriaLabel: "addCriteriaLabel", editTypeFn: "editTypeFn" }, host: { classAttribute: "novo-criteria-builder" }, providers: [
        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CriteriaBuilderComponent), multi: true },
        { provide: NOVO_CRITERIA_BUILDER, useExisting: CriteriaBuilderComponent },
    ], queries: [{ propertyName: "_contentFieldDefs", predicate: NovoConditionFieldDef, descendants: true }], ngImport: i0, template: "<form [formGroup]=\"parentForm\">\n  <novo-stack [formArrayName]=\"controlName\" class=\"criteria-builder-inner\">\n    <ng-container *ngFor=\"let andGroup of andGroups().controls; let andIndex = index; let isFirst = first;\">\n      <div *ngIf=\"!isFirst\" class=\"and-connector\" aria-hidden=\"false\">\n        <div class=\"and-connector-line\"></div>\n        <novo-caption class=\"and-connector-text\">and</novo-caption>\n      </div>\n      <ng-container [formGroupName]=\"andIndex\">\n        <novo-stack\n          class=\"condition-group\"\n          [class.with-conditions]=\"orGroups(andIndex).controls.length > 1\"\n          [class.with-one-condition]=\"orGroups(andIndex).controls.length == 1\"\n          formArrayName=\"$or\">\n          <ng-container\n            *ngFor=\"\n              let orGroup of orGroups(andIndex).controls;\n              let orIndex = index;\n              let isFirstOr = first;\n              let isLastOr = last;\n            \">\n            <novo-flex class=\"condition-row\" [class.or-block]=\"orGroups(andIndex).controls.length > 1 && !isLastOr\">\n              <div *ngIf=\"!isFirstOr\" class=\"or-connector\" aria-hidden=\"false\">\n                <!-- <div class=\"or-connector-line\"></div> -->\n                <novo-text class=\"or-connector-text\" color=\"ocean\" weight=\"bold\" padding=\"sm\" mx=\"lg\">OR</novo-text>\n              </div>\n              <novo-condition-builder [formGroupName]=\"orIndex\" [config]=\"config\" [editTypeFn]=\"editTypeFn\">\n              </novo-condition-builder>\n              <button *ngIf=\"isLastOr && orEnabled\" theme=\"secondary\" size=\"sm\" class=\"and-or-button\"\n                (click)=\"addOrGroup(andIndex)\">Or</button>\n              <novo-button theme=\"icon\" icon=\"delete-o\" color=\"negative\" (click)=\"removeOrGroup(andIndex, orIndex)\">\n              </novo-button>\n            </novo-flex>\n          </ng-container>\n        </novo-stack>\n      </ng-container>\n    </ng-container>\n  </novo-stack>\n  <button class=\"and-or-button\" theme=\"secondary\" size=\"sm\" (click)=\"addAndGroup()\">{{ addCriteriaLabel }}</button>\n\n</form>\n<novo-id-condition-def name=\"ID\"></novo-id-condition-def>\n<novo-date-condition-def name=\"TIMESTAMP\"></novo-date-condition-def>\n<novo-string-condition-def name=\"STRING\"></novo-string-condition-def>\n<novo-number-condition-def name=\"FLOAT\"></novo-number-condition-def>\n<novo-number-condition-def name=\"INTEGER\"></novo-number-condition-def>\n<novo-number-condition-def name=\"BIGDECIMAL\"></novo-number-condition-def>\n<novo-number-condition-def name=\"DOUBLE\"></novo-number-condition-def>\n<novo-address-condition-def name=\"ADDRESS\"></novo-address-condition-def>\n<novo-boolean-condition-def name=\"BOOLEAN\"></novo-boolean-condition-def>\n<novo-picker-condition-def name=\"SELECT\"></novo-picker-condition-def>\n<novo-string-condition-def name=\"DEFAULT\"></novo-string-condition-def>\n\n<!-- \n  {\n    $and: [{\n      $or: [{\n        entity: 'JobOrder'\n        field: 'categories',\n        operator: 'doesNotContain',\n        value: 'Healthcare'\n      }]\n    }]\n  }\n -->", styles: [":host{position:relative;display:block}:host .criteria-builder-inner{padding-bottom:1rem}:host .criteria-builder-inner .condition-row{width:100%;padding-bottom:.4rem}:host .criteria-builder-inner .condition-group{width:100%;border:1px solid transparent;border-radius:.4rem;padding:1rem 0}:host .criteria-builder-inner .condition-group.with-conditions{padding:.5rem;border-color:#e6e6e6}:host .criteria-builder-inner .condition-group.with-one-condition{border-bottom:1px solid #e6e6e6}:host .and-or-button{box-sizing:border-box;background:#fff;border:1px solid #ddd;color:#5691f5;display:inline-block;position:relative;cursor:pointer;margin:.4rem;align-items:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;outline:none;white-space:nowrap;text-transform:uppercase;transition:box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}:host .and-connector{background:#fff;padding:0 5px;position:relative;width:100%}:host .and-connector .and-connector-line{height:1px;width:100%}:host .and-connector .and-connector-text{background-color:#fff;background-color:var(--background-alt, #ffffff);margin:-8px 0 0 10px;position:absolute;text-align:center;text-transform:uppercase}\n"], components: [{ type: i2.NovoStackElement, selector: "novo-stack,novo-column", inputs: ["direction", "align"] }, { type: i3.NovoCaption, selector: "novo-caption,[novo-caption]" }, { type: i2.NovoFlexElement, selector: "novo-flex,novo-row", inputs: ["direction", "align", "justify", "wrap", "gap"] }, { type: i4.NovoText, selector: "novo-text,[novo-text]", inputs: ["block"] }, { type: i5.ConditionBuilderComponent, selector: "novo-condition-builder", inputs: ["label", "config", "editTypeFn"] }, { type: i6.NovoButtonElement, selector: "novo-button,button[theme]", inputs: ["color", "side", "size", "theme", "loading", "icon", "disabled"] }, { type: i7.NovoDefaultIdConditionDef, selector: "novo-id-condition-def" }, { type: i8.NovoDefaultDateConditionDef, selector: "novo-date-condition-def" }, { type: i9.NovoDefaultStringConditionDef, selector: "novo-string-condition-def" }, { type: i10.NovoDefaultNumberConditionDef, selector: "novo-number-condition-def" }, { type: i11.NovoDefaultAddressConditionDef, selector: "novo-address-condition-def" }, { type: i12.NovoDefaultBooleanConditionDef, selector: "novo-boolean-condition-def" }, { type: i13.NovoDefaultPickerConditionDef, selector: "novo-picker-condition-def" }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }, { type: i14.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i14.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i15.PaddingDirective, selector: "[p],[padding],[paddingTop],[paddingRight],[paddingBottom],[paddingLeft],[paddingX],[paddingY],[pt],[pr],[pb],[pl],[px],[py]", inputs: ["padding", "p", "paddingLeft", "pl", "paddingRight", "pr", "paddingTop", "pt", "paddingBottom", "pb", "paddingX", "px", "paddingY", "py"] }, { type: i15.MarginDirective, selector: "[m],[margin],[marginTop],[marginRight],[marginBottom],[marginLeft],[marginX],[marginY],[mt],[mr],[mb],[ml],[mx],[my]", inputs: ["margin", "m", "marginLeft", "ml", "marginRight", "mr", "marginTop", "mt", "marginBottom", "mb", "marginX", "mx", "marginY", "my"] }, { type: i16.ThemeColorDirective, selector: "[theme]", inputs: ["theme"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CriteriaBuilderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'novo-criteria-builder', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CriteriaBuilderComponent), multi: true },
                        { provide: NOVO_CRITERIA_BUILDER, useExisting: CriteriaBuilderComponent },
                    ], host: {
                        class: 'novo-criteria-builder',
                    }, template: "<form [formGroup]=\"parentForm\">\n  <novo-stack [formArrayName]=\"controlName\" class=\"criteria-builder-inner\">\n    <ng-container *ngFor=\"let andGroup of andGroups().controls; let andIndex = index; let isFirst = first;\">\n      <div *ngIf=\"!isFirst\" class=\"and-connector\" aria-hidden=\"false\">\n        <div class=\"and-connector-line\"></div>\n        <novo-caption class=\"and-connector-text\">and</novo-caption>\n      </div>\n      <ng-container [formGroupName]=\"andIndex\">\n        <novo-stack\n          class=\"condition-group\"\n          [class.with-conditions]=\"orGroups(andIndex).controls.length > 1\"\n          [class.with-one-condition]=\"orGroups(andIndex).controls.length == 1\"\n          formArrayName=\"$or\">\n          <ng-container\n            *ngFor=\"\n              let orGroup of orGroups(andIndex).controls;\n              let orIndex = index;\n              let isFirstOr = first;\n              let isLastOr = last;\n            \">\n            <novo-flex class=\"condition-row\" [class.or-block]=\"orGroups(andIndex).controls.length > 1 && !isLastOr\">\n              <div *ngIf=\"!isFirstOr\" class=\"or-connector\" aria-hidden=\"false\">\n                <!-- <div class=\"or-connector-line\"></div> -->\n                <novo-text class=\"or-connector-text\" color=\"ocean\" weight=\"bold\" padding=\"sm\" mx=\"lg\">OR</novo-text>\n              </div>\n              <novo-condition-builder [formGroupName]=\"orIndex\" [config]=\"config\" [editTypeFn]=\"editTypeFn\">\n              </novo-condition-builder>\n              <button *ngIf=\"isLastOr && orEnabled\" theme=\"secondary\" size=\"sm\" class=\"and-or-button\"\n                (click)=\"addOrGroup(andIndex)\">Or</button>\n              <novo-button theme=\"icon\" icon=\"delete-o\" color=\"negative\" (click)=\"removeOrGroup(andIndex, orIndex)\">\n              </novo-button>\n            </novo-flex>\n          </ng-container>\n        </novo-stack>\n      </ng-container>\n    </ng-container>\n  </novo-stack>\n  <button class=\"and-or-button\" theme=\"secondary\" size=\"sm\" (click)=\"addAndGroup()\">{{ addCriteriaLabel }}</button>\n\n</form>\n<novo-id-condition-def name=\"ID\"></novo-id-condition-def>\n<novo-date-condition-def name=\"TIMESTAMP\"></novo-date-condition-def>\n<novo-string-condition-def name=\"STRING\"></novo-string-condition-def>\n<novo-number-condition-def name=\"FLOAT\"></novo-number-condition-def>\n<novo-number-condition-def name=\"INTEGER\"></novo-number-condition-def>\n<novo-number-condition-def name=\"BIGDECIMAL\"></novo-number-condition-def>\n<novo-number-condition-def name=\"DOUBLE\"></novo-number-condition-def>\n<novo-address-condition-def name=\"ADDRESS\"></novo-address-condition-def>\n<novo-boolean-condition-def name=\"BOOLEAN\"></novo-boolean-condition-def>\n<novo-picker-condition-def name=\"SELECT\"></novo-picker-condition-def>\n<novo-string-condition-def name=\"DEFAULT\"></novo-string-condition-def>\n\n<!-- \n  {\n    $and: [{\n      $or: [{\n        entity: 'JobOrder'\n        field: 'categories',\n        operator: 'doesNotContain',\n        value: 'Healthcare'\n      }]\n    }]\n  }\n -->", styles: [":host{position:relative;display:block}:host .criteria-builder-inner{padding-bottom:1rem}:host .criteria-builder-inner .condition-row{width:100%;padding-bottom:.4rem}:host .criteria-builder-inner .condition-group{width:100%;border:1px solid transparent;border-radius:.4rem;padding:1rem 0}:host .criteria-builder-inner .condition-group.with-conditions{padding:.5rem;border-color:#e6e6e6}:host .criteria-builder-inner .condition-group.with-one-condition{border-bottom:1px solid #e6e6e6}:host .and-or-button{box-sizing:border-box;background:#fff;border:1px solid #ddd;color:#5691f5;display:inline-block;position:relative;cursor:pointer;margin:.4rem;align-items:center;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;outline:none;white-space:nowrap;text-transform:uppercase;transition:box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}:host .and-connector{background:#fff;padding:0 5px;position:relative;width:100%}:host .and-connector .and-connector-line{height:1px;width:100%}:host .and-connector .and-connector-text{background-color:#fff;background-color:var(--background-alt, #ffffff);margin:-8px 0 0 10px;position:absolute;text-align:center;text-transform:uppercase}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer }, { type: i1.FormBuilder }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { config: [{
                type: Input
            }], controlName: [{
                type: Input
            }], orEnabled: [{
                type: Input
            }], addCriteriaLabel: [{
                type: Input
            }], editTypeFn: [{
                type: Input
            }], _contentFieldDefs: [{
                type: ContentChildren,
                args: [NovoConditionFieldDef, { descendants: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,