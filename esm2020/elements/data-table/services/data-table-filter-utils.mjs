import { endOfToday, startOfToday } from 'date-fns';
import { DateUtil } from 'novo-elements/utils';
export class NovoDataTableFilterUtils {
    static constructFilter(filter, type, multiSelect) {
        let actualFilter = filter;
        if (filter) {
            if (type && type === 'date') {
                if (filter.startDate && filter.endDate) {
                    actualFilter = {
                        min: DateUtil.startOfDay(filter.startDate.date),
                        max: DateUtil.startOfDay(DateUtil.addDays(DateUtil.startOfDay(filter.endDate.date), 1)),
                    };
                }
                else {
                    actualFilter = {
                        min: filter.min ? DateUtil.addDays(startOfToday(), filter.min) : startOfToday(),
                        max: filter.max ? DateUtil.addDays(endOfToday(), filter.max) : endOfToday(),
                    };
                }
            }
            if (multiSelect && Array.isArray(filter)) {
                actualFilter = filter.map((filterItem) => {
                    if (filterItem && filterItem.hasOwnProperty('value')) {
                        return filterItem.value;
                    }
                    return filterItem;
                });
            }
            else if (actualFilter && actualFilter.hasOwnProperty('value')) {
                actualFilter = filter.value;
            }
        }
        return actualFilter;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS10YWJsZS1maWx0ZXItdXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzL3NyYy9lbGVtZW50cy9kYXRhLXRhYmxlL3NlcnZpY2VzL2RhdGEtdGFibGUtZmlsdGVyLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUvQyxNQUFNLE9BQU8sd0JBQXdCO0lBQ25DLE1BQU0sQ0FBQyxlQUFlLENBQUMsTUFBWSxFQUFFLElBQVUsRUFBRSxXQUFxQjtRQUNwRSxJQUFJLFlBQVksR0FBRyxNQUFNLENBQUM7UUFDMUIsSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssTUFBTSxFQUFFO2dCQUMzQixJQUFJLE1BQU0sQ0FBQyxTQUFTLElBQUksTUFBTSxDQUFDLE9BQU8sRUFBRTtvQkFDdEMsWUFBWSxHQUFHO3dCQUNiLEdBQUcsRUFBRSxRQUFRLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO3dCQUMvQyxHQUFHLEVBQUUsUUFBUSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztxQkFDeEYsQ0FBQztpQkFDSDtxQkFBTTtvQkFDTCxZQUFZLEdBQUc7d0JBQ2IsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUU7d0JBQy9FLEdBQUcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFO3FCQUM1RSxDQUFDO2lCQUNIO2FBQ0Y7WUFFRCxJQUFJLFdBQVcsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUN4QyxZQUFZLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRSxFQUFFO29CQUN2QyxJQUFJLFVBQVUsSUFBSSxVQUFVLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFO3dCQUNwRCxPQUFPLFVBQVUsQ0FBQyxLQUFLLENBQUM7cUJBQ3pCO29CQUNELE9BQU8sVUFBVSxDQUFDO2dCQUNwQixDQUFDLENBQUMsQ0FBQzthQUNKO2lCQUFNLElBQUksWUFBWSxJQUFJLFlBQVksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQy9ELFlBQVksR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2FBQzdCO1NBQ0Y7UUFDRCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmRPZlRvZGF5LCBzdGFydE9mVG9kYXkgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgeyBEYXRlVXRpbCB9IGZyb20gJ25vdm8tZWxlbWVudHMvdXRpbHMnO1xuXG5leHBvcnQgY2xhc3MgTm92b0RhdGFUYWJsZUZpbHRlclV0aWxzIHtcbiAgc3RhdGljIGNvbnN0cnVjdEZpbHRlcihmaWx0ZXI/OiBhbnksIHR5cGU/OiBhbnksIG11bHRpU2VsZWN0PzogYm9vbGVhbikge1xuICAgIGxldCBhY3R1YWxGaWx0ZXIgPSBmaWx0ZXI7XG4gICAgaWYgKGZpbHRlcikge1xuICAgICAgaWYgKHR5cGUgJiYgdHlwZSA9PT0gJ2RhdGUnKSB7XG4gICAgICAgIGlmIChmaWx0ZXIuc3RhcnREYXRlICYmIGZpbHRlci5lbmREYXRlKSB7XG4gICAgICAgICAgYWN0dWFsRmlsdGVyID0ge1xuICAgICAgICAgICAgbWluOiBEYXRlVXRpbC5zdGFydE9mRGF5KGZpbHRlci5zdGFydERhdGUuZGF0ZSksXG4gICAgICAgICAgICBtYXg6IERhdGVVdGlsLnN0YXJ0T2ZEYXkoRGF0ZVV0aWwuYWRkRGF5cyhEYXRlVXRpbC5zdGFydE9mRGF5KGZpbHRlci5lbmREYXRlLmRhdGUpLCAxKSksXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhY3R1YWxGaWx0ZXIgPSB7XG4gICAgICAgICAgICBtaW46IGZpbHRlci5taW4gPyBEYXRlVXRpbC5hZGREYXlzKHN0YXJ0T2ZUb2RheSgpLCBmaWx0ZXIubWluKSA6IHN0YXJ0T2ZUb2RheSgpLFxuICAgICAgICAgICAgbWF4OiBmaWx0ZXIubWF4ID8gRGF0ZVV0aWwuYWRkRGF5cyhlbmRPZlRvZGF5KCksIGZpbHRlci5tYXgpIDogZW5kT2ZUb2RheSgpLFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG11bHRpU2VsZWN0ICYmIEFycmF5LmlzQXJyYXkoZmlsdGVyKSkge1xuICAgICAgICBhY3R1YWxGaWx0ZXIgPSBmaWx0ZXIubWFwKChmaWx0ZXJJdGVtKSA9PiB7XG4gICAgICAgICAgaWYgKGZpbHRlckl0ZW0gJiYgZmlsdGVySXRlbS5oYXNPd25Qcm9wZXJ0eSgndmFsdWUnKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZpbHRlckl0ZW0udmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmaWx0ZXJJdGVtO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoYWN0dWFsRmlsdGVyICYmIGFjdHVhbEZpbHRlci5oYXNPd25Qcm9wZXJ0eSgndmFsdWUnKSkge1xuICAgICAgICBhY3R1YWxGaWx0ZXIgPSBmaWx0ZXIudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhY3R1YWxGaWx0ZXI7XG4gIH1cbn1cbiJdfQ==