// NG2
import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
// APP
import { NovoLabelService } from 'novo-elements/services';
import { COUNTRIES, findByCountryId, getStates } from 'novo-elements/utils';
import { Helpers } from 'novo-elements/utils';
import * as i0 from "@angular/core";
import * as i1 from "novo-elements/services";
import * as i2 from "novo-elements/elements/picker";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "novo-elements/elements/tooltip";
// Value accessor for the component (supports ngModel)
const ADDRESS_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => NovoAddressElement),
    multi: true,
};
export class NovoAddressElement {
    constructor(labels) {
        this.labels = labels;
        this._readOnly = false;
        this.states = [];
        this.fieldList = ['address1', 'address2', 'city', 'state', 'zip', 'countryID'];
        this.onModelChange = () => { };
        this.onModelTouched = () => { };
        this.focused = {};
        this.invalid = {};
        this.disabled = {};
        this.invalidMaxlength = {};
        this.valid = {};
        this.tooltip = {};
        this.initComplete = false;
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
        this.validityChange = new EventEmitter();
    }
    set readOnly(readOnly) {
        this._readOnly = readOnly;
        this.fieldList.forEach((field) => {
            this.disabled[field] = this._readOnly;
        });
        if (this.model) {
            this.updateStates();
        }
    }
    get readOnly() {
        return this._readOnly;
    }
    ngOnInit() {
        if (!this.config) {
            this.config = {};
        }
        this.initConfig();
        if (this.model) {
            this.writeValue(this.model);
            this.updateControl();
        }
        else if (!this.model) {
            this.model = {};
        }
        if (Helpers.isBlank(this.model.countryID)) {
            this.updateStates();
        }
    }
    initConfig() {
        this.fieldList.forEach((field) => {
            if (!this.config.hasOwnProperty(field)) {
                this.config[field] = {
                    hidden: true,
                };
            }
            if (!this.config[field].hasOwnProperty('label')) {
                this.config[field].label = this.labels[field];
            }
            if (this.config.required) {
                this.config[field].required = true;
            }
            if (this.config[field].readOnly || this.config.readOnly) {
                this.config[field].readOnly = true;
                this.disabled[field] = true;
            }
            if (field === 'countryID') {
                if (!this.config[field].pickerConfig) {
                    this.config.countryID.pickerConfig = this.getDefaultCountryConfig();
                }
                this.config[field].pickerConfig.defaultOptions = this.config.countryID.pickerConfig.options;
            }
            if (field === 'state') {
                if (!this.config[field].pickerConfig) {
                    this.config.state.pickerConfig = this.getDefaultStateConfig();
                    this.config[field].pickerConfig.defaultOptions = this.config[field].pickerConfig.options;
                }
                this.stateOptions = this.config[field].pickerConfig.options;
                this.config[field].pickerConfig.options = (query = '') => {
                    return this.stateOptions(query, this.model.countryID);
                };
                this.config[field].pickerConfig.defaultOptions = this.stateOptions;
            }
        });
    }
    isValid(field) {
        let valid = true;
        if (((this.config[field].required && (Helpers.isBlank(this.model[field]) || Helpers.isEmpty(this.model[field]))) ||
            !this.config[field].required) &&
            !(field === 'countryID' && this.config[field].required && !Helpers.isBlank(this.model.countryID)) &&
            !(field === 'state' &&
                this.config[field].required &&
                (!Helpers.isEmpty(this.model.state) ||
                    ((Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&
                        !Helpers.isBlank(this.model.countryName) &&
                        this.config.state.pickerConfig &&
                        this.config.state.pickerConfig.defaultOptions &&
                        this.config.state.pickerConfig.defaultOptions.length === 0)))) {
            valid = false;
        }
        else if (!Helpers.isEmpty(this.model[field]) &&
            !Helpers.isBlank(this.config[field].maxlength) &&
            this.config[field].maxlength < this.model[field].length) {
            valid = false;
        }
        this.valid[field] = valid;
    }
    isInvalid(field) {
        let invalid = false;
        let invalidMaxlength = false;
        if ((field !== 'countryID' &&
            field !== 'state' &&
            this.config[field]?.required &&
            Helpers.isEmpty(this.model[field]) &&
            !Helpers.isBlank(this.model[field])) ||
            (field === 'countryID' && this.config[field]?.required && Helpers.isBlank(this.model.countryName) && this.config[field]?.updated) ||
            (field === 'state' &&
                this.config[field]?.required &&
                (Helpers.isBlank(this.model.state) || Helpers.isEmpty(this.model.state)) &&
                !Helpers.isBlank(this.model.countryID) &&
                this.config[field]?.updated &&
                this.config.state.pickerConfig &&
                this.config.state.pickerConfig.defaultOptions &&
                this.config.state.pickerConfig.defaultOptions.length > 0)) {
            invalid = true;
        }
        else if (!Helpers.isEmpty(this.model[field]) &&
            !Helpers.isBlank(this.config[field]?.maxlength) &&
            this.config[field]?.maxlength < this.model[field].length) {
            invalid = true;
            invalidMaxlength = true;
        }
        this.invalid[field] = invalid;
        this.invalidMaxlength[field] = invalidMaxlength;
    }
    onInput(event, field) {
        this.isInvalid(field);
        this.isValid(field);
        if (event) {
            this.change.emit({ value: this.model[field], field });
        }
    }
    isFocused(event, field) {
        this.focused[field] = true;
        this.focus.emit({ event, field });
    }
    isBlurred(event, field) {
        this.focused[field] = false;
        this.blur.emit({ event, field });
    }
    onCountryChange(evt) {
        const country = evt && evt.rawValue ? evt.rawValue : null;
        let field;
        let statesUpdatable = false;
        this.config.countryID.updated = true;
        if (this.config.countryID.pickerConfig) {
            field = this.config.countryID.pickerConfig.field;
        }
        if (country && field && !Helpers.isBlank(country[field]) && this.model.countryID !== country[field]) {
            this.model.countryID = country[field];
            this.model.countryName = Helpers.interpolate(this.config.countryID.pickerConfig.format, country);
            this.disabled.state = false;
            this.tooltip.state = undefined;
            statesUpdatable = true;
        }
        else if (Helpers.isBlank(country) || Helpers.isBlank(country[field])) {
            this.model.countryID = undefined;
            this.model.countryName = undefined;
            this.disabled.state = true;
            this.tooltip.state = this.labels.selectCountryFirst;
            this.invalid.state = false;
            statesUpdatable = true;
        }
        // Update state
        if (statesUpdatable) {
            this.model.state = undefined;
            this.updateStates();
        }
        this.updateControl();
        this.onInput(null, 'countryID');
        this.onInput(null, 'state');
    }
    onStateChange(evt) {
        const state = evt && evt.value ? evt.value : null;
        this.config.state.updated = true;
        this.model.state = state;
        this.updateControl();
        this.onInput(null, 'state');
    }
    setStateLabel(model) {
        const state = model.state;
        if (!Helpers.isBlank(state)) {
            if (this.config.state.required) {
                this.valid.state = true;
            }
            this.model.state = state;
        }
        else {
            this.model.state = undefined;
            if (this.config.state.required) {
                this.valid.state = false;
            }
        }
    }
    updateStates() {
        if (this.config.state.pickerConfig.options && !Helpers.isBlank(this.model.countryID)) {
            this.config.state.pickerConfig.options = (query = '') => {
                return this.stateOptions(query, this.model.countryID);
            };
            this.stateOptions('', this.model.countryID).then((results) => {
                this.config.state.pickerConfig.defaultOptions = results;
                if (results.length) {
                    this.tooltip.state = undefined;
                    this.disabled.state = this._readOnly;
                    this.setStateLabel(this.model);
                }
                else {
                    this.disabled.state = true;
                    this.tooltip.state = this.labels.noStatesForCountry;
                    if (this.config.state.required) {
                        this.valid.state = true;
                    }
                }
                this.validityChange.emit();
                this.onInput(null, 'state');
            });
        }
        else {
            this.config.state.pickerConfig.defaultOptions = [];
            this.disabled.state = true;
            this.tooltip.state = this.labels.selectCountryFirst;
            if (this.config.state.required) {
                this.valid.state = false;
            }
        }
    }
    getStateOptions(filter = '', countryID) {
        if (countryID) {
            const country = findByCountryId(countryID);
            const states = getStates(country.name);
            if (filter) {
                return states.filter((name) => new RegExp(`${filter}`, 'gi').test(name));
            }
            return states;
        }
        else {
            return [];
        }
    }
    updateControl() {
        this.onModelChange(this.model);
        this.onInput(null, 'countryID');
        this.onInput(null, 'state');
    }
    writeValue(model) {
        let loadingCountries = false;
        if (model) {
            let countryName;
            if (model.countryName && model.countryID) {
                countryName = model.countryName;
            }
            else if (model.countryID) {
                if (this.config.countryID.pickerConfig && this.config.countryID.pickerConfig.getLabels) {
                    if (Helpers.isFunction(this.config.countryID.pickerConfig.getLabels)) {
                        const promise = this.config.countryID.pickerConfig.getLabels(model.countryID);
                        loadingCountries = true;
                        if (promise.then) {
                            promise.then((result) => {
                                loadingCountries = false;
                                countryName = Helpers.interpolateWithFallback(this.config.countryID.pickerConfig.format, result);
                                this.model = Object.assign(model, { countryName });
                                this.updateStates();
                            });
                        }
                    }
                }
            }
            if (countryName) {
                countryName = countryName.trim();
                model.state = model.state || '';
                this.model = Object.assign(model, { countryName });
            }
            else {
                this.model = model;
            }
            if (!loadingCountries && !Helpers.isBlank(this.model.countryID)) {
                this.updateStates();
            }
        }
        this.fieldList.forEach((field) => {
            this.onInput(null, field);
        });
    }
    registerOnChange(fn) {
        this.onModelChange = fn;
    }
    registerOnTouched(fn) {
        this.onModelTouched = fn;
    }
    getDefaultStateConfig() {
        return {
            field: 'value',
            format: '$label',
            options: (query = '', countryID) => {
                return Promise.resolve(this.getStateOptions(query, countryID));
            },
            getLabels: (state) => {
                return Promise.resolve(state);
            },
        };
    }
    getDefaultCountryConfig() {
        return {
            field: 'value',
            format: '$label',
            options: (query = '') => {
                return new Promise((resolve) => {
                    let countries = COUNTRIES;
                    if (query) {
                        countries = countries.filter((country) => new RegExp(`${query}`, 'gi').test(country.name));
                    }
                    return resolve(countries.map((country) => ({ value: country.id, label: country.name })));
                });
            },
            getLabels: (countryID) => {
                return new Promise((resolve) => {
                    const country = findByCountryId(countryID);
                    if (country) {
                        resolve({ value: country.id, label: country.name });
                    }
                    else {
                        resolve('');
                    }
                });
            },
        };
    }
}
NovoAddressElement.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: NovoAddressElement, deps: [{ token: i1.NovoLabelService }], target: i0.ɵɵFactoryTarget.Component });
NovoAddressElement.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: NovoAddressElement, selector: "novo-address", inputs: { config: "config", readOnly: "readOnly" }, outputs: { change: "change", focus: "focus", blur: "blur", validityChange: "validityChange" }, providers: [ADDRESS_VALUE_ACCESSOR], ngImport: i0, template: `
    <span
      *ngIf="!config?.address1?.hidden"
      class="street-address"
      [class.invalid]="invalid.address1"
      [class.focus]="focused.address1"
      [class.disabled]="disabled.address1"
    >
      <i
        *ngIf="config.address1.required"
        class="required-indicator address1"
        [ngClass]="{ 'bhi-circle': !valid.address1, 'bhi-check': valid.address1 }"
      >
      </i>
      <input
        [class.maxlength-error]="invalidMaxlength.address1"
        type="text"
        id="address1"
        name="address1"
        [placeholder]="config.address1.label"
        [maxlength]="config?.address1?.maxlength"
        autocomplete="shipping street-address address-line-1"
        [(ngModel)]="model.address1"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'address1')"
        (blur)="isBlurred($event, 'address1')"
        (input)="onInput($event, 'address1')"
        [disabled]="disabled.address1"
      />
    </span>
    <span
      *ngIf="!config?.address2?.hidden"
      class="apt suite"
      [class.invalid]="invalid.address2"
      [class.focus]="focused.address2"
      [class.disabled]="disabled.address2"
    >
      <i
        *ngIf="config.address2.required"
        class="required-indicator address2"
        [ngClass]="{ 'bhi-circle': !valid.address2, 'bhi-check': valid.address2 }"
      >
      </i>
      <input
        [class.maxlength-error]="invalidMaxlength.address2"
        type="text"
        id="address2"
        name="address2"
        [placeholder]="config.address2.label"
        [maxlength]="config?.address2?.maxlength"
        autocomplete="shipping address-line-2"
        [(ngModel)]="model.address2"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'address2')"
        (blur)="isBlurred($event, 'address2')"
        (input)="onInput($event, 'address2')"
        [disabled]="disabled.address2"
      />
    </span>
    <span
      *ngIf="!config?.city?.hidden"
      class="city locality"
      [class.invalid]="invalid.city"
      [class.focus]="focused.city"
      [class.disabled]="disabled.city"
    >
      <i *ngIf="config.city.required" class="required-indicator" [ngClass]="{ 'bhi-circle': !valid.city, 'bhi-check': valid.city }"> </i>
      <input
        [class.maxlength-error]="invalidMaxlength.city"
        type="text"
        id="city"
        name="city"
        [placeholder]="config.city.label"
        autocomplete="shipping city locality"
        [maxlength]="config?.city?.maxlength"
        [(ngModel)]="model.city"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'city')"
        (blur)="isBlurred($event, 'city')"
        (input)="onInput($event, 'city')"
        [disabled]="disabled.city"
      />
    </span>
    <span
      *ngIf="!config?.state?.hidden"
      class="state region"
      [class.invalid]="invalid.state"
      [class.focus]="focused.state"
      [class.disabled]="disabled.state"
      [tooltip]="tooltip.state"
    >
      <i *ngIf="config.state.required" class="required-indicator" [ngClass]="{ 'bhi-circle': !valid.state, 'bhi-check': valid.state }"> </i>
      <novo-picker
        [config]="config?.state?.pickerConfig"
        [placeholder]="config?.state?.label"
        (changed)="onStateChange($event)"
        autocomplete="shipping region"
        [(ngModel)]="model.state"
        [disablePickerInput]="disabled.state"
      ></novo-picker>
    </span>
    <span
      *ngIf="!config?.zip?.hidden"
      class="zip postal-code"
      [class.invalid]="invalid.zip"
      [class.focus]="focused.zip"
      [class.disabled]="disabled.zip"
    >
      <i *ngIf="config.zip.required" class="required-indicator" [ngClass]="{ 'bhi-circle': !valid.zip, 'bhi-check': valid.zip }"> </i>
      <input
        [class.maxlength-error]="invalidMaxlength.zip"
        type="text"
        id="zip"
        name="zip"
        [placeholder]="config.zip.label"
        autocomplete="shipping postal-code"
        [maxlength]="config?.zip?.maxlength"
        [(ngModel)]="model.zip"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'zip')"
        (blur)="isBlurred($event, 'zip')"
        (input)="onInput($event, 'zip')"
        [disabled]="disabled.zip"
      />
    </span>
    <span
      *ngIf="!config?.countryID?.hidden"
      class="country-name"
      [class.invalid]="invalid.countryID"
      [class.focus]="focused.countryID"
      [class.disabled]="disabled.countryID"
    >
      <i
        *ngIf="config.countryID.required"
        class="required-indicator"
        [ngClass]="{ 'bhi-circle': !valid.countryID, 'bhi-check': valid.countryID }"
      >
      </i>
      <novo-picker
        [config]="config?.countryID?.pickerConfig"
        [placeholder]="config.countryID.label"
        (changed)="onCountryChange($event)"
        autocomplete="shipping country"
        [(ngModel)]="model.countryID"
        [disablePickerInput]="disabled.countryID"
      ></novo-picker>
    </span>
  `, isInline: true, styles: [":host{display:flex;flex-flow:row wrap;align-items:center}:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .street-address.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .street-address.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .apt.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .apt.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .city.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .city.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .state.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .state.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .zip.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .zip.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .country-name.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .country-name.invalid ::ng-deep novo-select div[type=button]{border-bottom:1px solid #da4453!important}:host ::ng-deep novo-picker i{padding:0 5px}:host input{min-width:10px}:host .street-address,:host .apt,:host .city,:host .state,:host .zip,:host .country-name{display:flex;flex-direction:row;justify-content:space-between;align-items:flex-end}:host .street-address input.invalid,:host .apt input.invalid,:host .city input.invalid,:host .state input.invalid,:host .zip input.invalid,:host .country-name input.invalid{border-bottom:1px solid #da4453}:host .street-address{flex:3 3 75%;padding:0 0 5px!important}:host .street-address.disabled{padding:0 2px 5px 0!important}:host .apt{flex:1 1 25%;padding:0 0 5px!important;align-self:flex-end}:host .city{flex:2 2 28%;padding:5px 0!important}:host .city.disabled{padding:5px 2px 5px 0!important}:host .state{flex:1 1 30%;align-items:center}:host .state.disabled{padding-right:2px}:host .state>div{padding:19px 29px 17px 0!important}:host .zip{flex:1 0 19.4%;padding:5px 0!important}:host .country-name{flex:4 4 100%;padding:10px 0 0!important}:host .disabled{pointer-events:none}:host .disabled i.required-indicator.bhi-circle,:host .disabled i.required-indicator.bhi-check{display:none!important}:host .disabled input{border-bottom-style:dashed!important}:host .disabled input::-moz-placeholder{color:#85939e!important}:host .disabled input::placeholder{color:#85939e!important}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check{border-bottom:1px solid #5f6d78}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check{border-bottom:1px solid #4a89dc}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator{height:19px;width:20px;display:flex;border-bottom:1px solid #afb9c0;margin-right:0;margin-top:0;align-self:flex-end}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle{height:15px}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator{border-bottom:1px solid #da4453}\n"], components: [{ type: i2.NovoPickerElement, selector: "novo-picker", inputs: ["config", "placeholder", "clearValueOnSelect", "closeOnSelect", "selected", "appendToBody", "parentScrollSelector", "parentScrollAction", "containerClass", "side", "autoSelectFirstOption", "overrideElement", "maxlength", "allowCustomValues", "disablePickerInput"], outputs: ["changed", "select", "focus", "blur", "typing"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5.TooltipDirective, selector: "[tooltip]", inputs: ["tooltip", "tooltipPosition", "tooltipType", "tooltipSize", "tooltipBounce", "tooltipNoAnimate", "tooltipRounded", "tooltipAlways", "tooltipActive", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "tooltipIsHTML"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: NovoAddressElement, decorators: [{
            type: Component,
            args: [{ selector: 'novo-address', providers: [ADDRESS_VALUE_ACCESSOR], template: `
    <span
      *ngIf="!config?.address1?.hidden"
      class="street-address"
      [class.invalid]="invalid.address1"
      [class.focus]="focused.address1"
      [class.disabled]="disabled.address1"
    >
      <i
        *ngIf="config.address1.required"
        class="required-indicator address1"
        [ngClass]="{ 'bhi-circle': !valid.address1, 'bhi-check': valid.address1 }"
      >
      </i>
      <input
        [class.maxlength-error]="invalidMaxlength.address1"
        type="text"
        id="address1"
        name="address1"
        [placeholder]="config.address1.label"
        [maxlength]="config?.address1?.maxlength"
        autocomplete="shipping street-address address-line-1"
        [(ngModel)]="model.address1"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'address1')"
        (blur)="isBlurred($event, 'address1')"
        (input)="onInput($event, 'address1')"
        [disabled]="disabled.address1"
      />
    </span>
    <span
      *ngIf="!config?.address2?.hidden"
      class="apt suite"
      [class.invalid]="invalid.address2"
      [class.focus]="focused.address2"
      [class.disabled]="disabled.address2"
    >
      <i
        *ngIf="config.address2.required"
        class="required-indicator address2"
        [ngClass]="{ 'bhi-circle': !valid.address2, 'bhi-check': valid.address2 }"
      >
      </i>
      <input
        [class.maxlength-error]="invalidMaxlength.address2"
        type="text"
        id="address2"
        name="address2"
        [placeholder]="config.address2.label"
        [maxlength]="config?.address2?.maxlength"
        autocomplete="shipping address-line-2"
        [(ngModel)]="model.address2"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'address2')"
        (blur)="isBlurred($event, 'address2')"
        (input)="onInput($event, 'address2')"
        [disabled]="disabled.address2"
      />
    </span>
    <span
      *ngIf="!config?.city?.hidden"
      class="city locality"
      [class.invalid]="invalid.city"
      [class.focus]="focused.city"
      [class.disabled]="disabled.city"
    >
      <i *ngIf="config.city.required" class="required-indicator" [ngClass]="{ 'bhi-circle': !valid.city, 'bhi-check': valid.city }"> </i>
      <input
        [class.maxlength-error]="invalidMaxlength.city"
        type="text"
        id="city"
        name="city"
        [placeholder]="config.city.label"
        autocomplete="shipping city locality"
        [maxlength]="config?.city?.maxlength"
        [(ngModel)]="model.city"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'city')"
        (blur)="isBlurred($event, 'city')"
        (input)="onInput($event, 'city')"
        [disabled]="disabled.city"
      />
    </span>
    <span
      *ngIf="!config?.state?.hidden"
      class="state region"
      [class.invalid]="invalid.state"
      [class.focus]="focused.state"
      [class.disabled]="disabled.state"
      [tooltip]="tooltip.state"
    >
      <i *ngIf="config.state.required" class="required-indicator" [ngClass]="{ 'bhi-circle': !valid.state, 'bhi-check': valid.state }"> </i>
      <novo-picker
        [config]="config?.state?.pickerConfig"
        [placeholder]="config?.state?.label"
        (changed)="onStateChange($event)"
        autocomplete="shipping region"
        [(ngModel)]="model.state"
        [disablePickerInput]="disabled.state"
      ></novo-picker>
    </span>
    <span
      *ngIf="!config?.zip?.hidden"
      class="zip postal-code"
      [class.invalid]="invalid.zip"
      [class.focus]="focused.zip"
      [class.disabled]="disabled.zip"
    >
      <i *ngIf="config.zip.required" class="required-indicator" [ngClass]="{ 'bhi-circle': !valid.zip, 'bhi-check': valid.zip }"> </i>
      <input
        [class.maxlength-error]="invalidMaxlength.zip"
        type="text"
        id="zip"
        name="zip"
        [placeholder]="config.zip.label"
        autocomplete="shipping postal-code"
        [maxlength]="config?.zip?.maxlength"
        [(ngModel)]="model.zip"
        (ngModelChange)="updateControl()"
        (focus)="isFocused($event, 'zip')"
        (blur)="isBlurred($event, 'zip')"
        (input)="onInput($event, 'zip')"
        [disabled]="disabled.zip"
      />
    </span>
    <span
      *ngIf="!config?.countryID?.hidden"
      class="country-name"
      [class.invalid]="invalid.countryID"
      [class.focus]="focused.countryID"
      [class.disabled]="disabled.countryID"
    >
      <i
        *ngIf="config.countryID.required"
        class="required-indicator"
        [ngClass]="{ 'bhi-circle': !valid.countryID, 'bhi-check': valid.countryID }"
      >
      </i>
      <novo-picker
        [config]="config?.countryID?.pickerConfig"
        [placeholder]="config.countryID.label"
        (changed)="onCountryChange($event)"
        autocomplete="shipping country"
        [(ngModel)]="model.countryID"
        [disablePickerInput]="disabled.countryID"
      ></novo-picker>
    </span>
  `, styles: [":host{display:flex;flex-flow:row wrap;align-items:center}:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .street-address.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .street-address.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .apt.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .apt.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .city.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .city.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .state.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .state.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .zip.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .zip.invalid ::ng-deep novo-select div[type=button],:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .country-name.invalid ::ng-deep input,:host.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) .country-name.invalid ::ng-deep novo-select div[type=button]{border-bottom:1px solid #da4453!important}:host ::ng-deep novo-picker i{padding:0 5px}:host input{min-width:10px}:host .street-address,:host .apt,:host .city,:host .state,:host .zip,:host .country-name{display:flex;flex-direction:row;justify-content:space-between;align-items:flex-end}:host .street-address input.invalid,:host .apt input.invalid,:host .city input.invalid,:host .state input.invalid,:host .zip input.invalid,:host .country-name input.invalid{border-bottom:1px solid #da4453}:host .street-address{flex:3 3 75%;padding:0 0 5px!important}:host .street-address.disabled{padding:0 2px 5px 0!important}:host .apt{flex:1 1 25%;padding:0 0 5px!important;align-self:flex-end}:host .city{flex:2 2 28%;padding:5px 0!important}:host .city.disabled{padding:5px 2px 5px 0!important}:host .state{flex:1 1 30%;align-items:center}:host .state.disabled{padding-right:2px}:host .state>div{padding:19px 29px 17px 0!important}:host .zip{flex:1 0 19.4%;padding:5px 0!important}:host .country-name{flex:4 4 100%;padding:10px 0 0!important}:host .disabled{pointer-events:none}:host .disabled i.required-indicator.bhi-circle,:host .disabled i.required-indicator.bhi-check{display:none!important}:host .disabled input{border-bottom-style:dashed!important}:host .disabled input::-moz-placeholder{color:#85939e!important}:host .disabled input::placeholder{color:#85939e!important}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip:hover:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name:hover:not(.invalid) i.required-indicator.bhi-check{border-bottom:1px solid #5f6d78}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .street-address.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .apt.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .city.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .state.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .zip.focus:not(.invalid) i.required-indicator.bhi-check,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .country-name.focus:not(.invalid) i.required-indicator.bhi-check{border-bottom:1px solid #4a89dc}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator{height:19px;width:20px;display:flex;border-bottom:1px solid #afb9c0;margin-right:0;margin-top:0;align-self:flex-end}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) i.required-indicator.bhi-circle{height:15px}:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form[layout=vertical] .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(div.novo-control-group-control novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator,:host-context(novo-dynamic-form .novo-form-container form) :host-context(td.novo-form-row novo-control > div.novo-control-container > div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address) .invalid i.required-indicator{border-bottom:1px solid #da4453}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NovoLabelService }]; }, propDecorators: { config: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], change: [{
                type: Output
            }], focus: [{
                type: Output
            }], blur: [{
                type: Output
            }], validityChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,