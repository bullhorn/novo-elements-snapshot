import { endOfWeek, isWithinRange, startOfWeek } from 'date-fns';
export class WeekSelectionStrategy {
    constructor(weekStartsOn = 0) {
        this.weekStartsOn = weekStartsOn;
    }
    selectionFinished(date) {
        return this._createWeekRange(date);
    }
    createPreview(activeDate) {
        return this._createWeekRange(activeDate);
    }
    _createWeekRange(date) {
        if (date) {
            const { weekStartsOn } = this;
            const start = startOfWeek(date, { weekStartsOn });
            const end = endOfWeek(date, { weekStartsOn });
            return [start, end];
        }
        return [null, null];
    }
    isSelected(activeDate, currentRange) {
        const [start, end] = currentRange;
        return isWithinRange(activeDate, start, end);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vlay1zZWxlY3Rpb24uc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub3ZvLWVsZW1lbnRzL3NyYy9lbGVtZW50cy9jYWxlbmRhci9zdHJhdGVnaWVzL3dlZWstc2VsZWN0aW9uLnN0cmF0ZWd5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUdqRSxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDLFlBQW9CLGVBQXVCLENBQUM7UUFBeEIsaUJBQVksR0FBWixZQUFZLENBQVk7SUFBRyxDQUFDO0lBRWhELGlCQUFpQixDQUFDLElBQXFCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxhQUFhLENBQUMsVUFBMkI7UUFDdkMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVPLGdCQUFnQixDQUFDLElBQXFCO1FBQzVDLElBQUksSUFBSSxFQUFFO1lBQ1IsTUFBTSxFQUFFLFlBQVksRUFBRSxHQUFHLElBQUksQ0FBQztZQUM5QixNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsSUFBZ0IsRUFBRSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7WUFDOUQsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDLElBQWdCLEVBQUUsRUFBRSxZQUFZLEVBQUUsQ0FBQyxDQUFDO1lBQzFELE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDckI7UUFFRCxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxVQUFVLENBQUMsVUFBMkIsRUFBRSxZQUF3QjtRQUM5RCxNQUFNLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxHQUFHLFlBQVksQ0FBQztRQUNsQyxPQUFPLGFBQWEsQ0FBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuZE9mV2VlaywgaXNXaXRoaW5SYW5nZSwgc3RhcnRPZldlZWsgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgdHlwZSB7IERhdGVMaWtlLCBOb3ZvRGF0ZVNlbGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnbm92by1lbGVtZW50cy91dGlscyc7XG5cbmV4cG9ydCBjbGFzcyBXZWVrU2VsZWN0aW9uU3RyYXRlZ3kgaW1wbGVtZW50cyBOb3ZvRGF0ZVNlbGVjdGlvblN0cmF0ZWd5PERhdGVMaWtlW10+IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB3ZWVrU3RhcnRzT246IG51bWJlciA9IDApIHt9XG5cbiAgc2VsZWN0aW9uRmluaXNoZWQoZGF0ZTogRGF0ZUxpa2UgfCBudWxsKTogRGF0ZUxpa2VbXSB7XG4gICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVdlZWtSYW5nZShkYXRlKTtcbiAgfVxuXG4gIGNyZWF0ZVByZXZpZXcoYWN0aXZlRGF0ZTogRGF0ZUxpa2UgfCBudWxsKTogRGF0ZUxpa2VbXSB7XG4gICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVdlZWtSYW5nZShhY3RpdmVEYXRlKTtcbiAgfVxuXG4gIHByaXZhdGUgX2NyZWF0ZVdlZWtSYW5nZShkYXRlOiBEYXRlTGlrZSB8IG51bGwpOiBEYXRlTGlrZVtdIHtcbiAgICBpZiAoZGF0ZSkge1xuICAgICAgY29uc3QgeyB3ZWVrU3RhcnRzT24gfSA9IHRoaXM7XG4gICAgICBjb25zdCBzdGFydCA9IHN0YXJ0T2ZXZWVrKGRhdGUgYXMgRGF0ZUxpa2UsIHsgd2Vla1N0YXJ0c09uIH0pO1xuICAgICAgY29uc3QgZW5kID0gZW5kT2ZXZWVrKGRhdGUgYXMgRGF0ZUxpa2UsIHsgd2Vla1N0YXJ0c09uIH0pO1xuICAgICAgcmV0dXJuIFtzdGFydCwgZW5kXTtcbiAgICB9XG5cbiAgICByZXR1cm4gW251bGwsIG51bGxdO1xuICB9XG5cbiAgaXNTZWxlY3RlZChhY3RpdmVEYXRlOiBEYXRlTGlrZSB8IG51bGwsIGN1cnJlbnRSYW5nZTogRGF0ZUxpa2VbXSkge1xuICAgIGNvbnN0IFtzdGFydCwgZW5kXSA9IGN1cnJlbnRSYW5nZTtcbiAgICByZXR1cm4gaXNXaXRoaW5SYW5nZShhY3RpdmVEYXRlLCBzdGFydCwgZW5kKTtcbiAgfVxufVxuIl19