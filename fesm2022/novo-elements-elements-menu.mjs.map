{"version":3,"file":"novo-elements-elements-menu.mjs","sources":["../../../projects/novo-elements/src/elements/menu/menu-content.component.ts","../../../projects/novo-elements/src/elements/menu/menu-item.directive.ts","../../../projects/novo-elements/src/elements/menu/menu.service.ts","../../../projects/novo-elements/src/elements/menu/menu.tokens.ts","../../../projects/novo-elements/src/elements/menu/menu.component.ts","../../../projects/novo-elements/src/elements/menu/menu.directive.ts","../../../projects/novo-elements/src/elements/menu/menu.module.ts","../../../projects/novo-elements/src/elements/menu/index.ts","../../../projects/novo-elements/src/elements/menu/novo-elements-elements-menu.ts"],"sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Key } from 'novo-elements/utils';\nimport { NovoOption } from 'novo-elements/elements/common';\nimport { MenuItemDirective } from './menu-item.directive';\n// import type { MenuComponent } from './menu.component';\nimport { CloseLeafMenuEvent, IMenuClickEvent } from './menu.service';\nimport { ILinkConfig } from './menu.types';\n\n@Component({\n  selector: 'menu-content',\n  styleUrls: ['./menu-content.component.scss'],\n  template: `<div class=\"menu-container novo-menu\" [ngClass]=\"menuClass\" tabindex=\"0\">\n    <ul #menu class=\"menu\" style=\"position: static; float: none;\" tabindex=\"0\">\n      <ng-container *ngFor=\"let menuItem of menuItems; let i = index\">\n        <ng-template [ngTemplateOutlet]=\"menuItem.template\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n        <!-- <novo-icon class=\"sub-menu-caret\" suffix *ngIf=\"!!menuItem.subMenu\" size=\"small\" color=\"ash\">expand</novo-icon> -->\n      </ng-container>\n    </ul>\n  </div> `,\n})\nexport class MenuContentComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public menuItems: MenuItemDirective[] = [];\n  @Input() public item: any;\n  @Input() public event: MouseEvent | KeyboardEvent;\n  @Input() public menu: any; // MenuComponent\n  @Input() public parentMenu: MenuContentComponent;\n  @Input() public menuClass: string;\n  @Input() public overlay: OverlayRef;\n  @Input() public isLeaf = false;\n  ///\n  @Output() public openSubMenu: EventEmitter<IMenuClickEvent> = new EventEmitter();\n  @Output() public closeLeafMenu: EventEmitter<CloseLeafMenuEvent> = new EventEmitter();\n  @Output() public closeAllMenus: EventEmitter<{ event: MouseEvent }> = new EventEmitter();\n  // @ViewChild('menu') public menuElement: ElementRef;\n  // @ViewChildren('li') public menuItemElements: QueryList<ElementRef>;\n\n  public autoFocus = false;\n  private _keyManager: ActiveDescendantKeyManager<NovoOption>;\n  private subscription: Subscription = new Subscription();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      setTimeout(() => this.focus());\n    }\n    this.overlay.updatePosition();\n    this._keyManager = new ActiveDescendantKeyManager<NovoOption>(this.menu.menuOptions).withWrap();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  focus(): void {\n    if (this.autoFocus) {\n      // this.menuElement.nativeElement.focus();\n    }\n  }\n\n  stopEvent($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n\n  public isMenuItemEnabled(menuItem: MenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.menuItemEnabled);\n  }\n\n  public isMenuItemVisible(menuItem: MenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.menuItemVisible);\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n\n  public isDisabled(link: ILinkConfig): boolean {\n    return link.enabled && !link.enabled(this.item);\n  }\n\n  @HostListener('window:keydown.ArrowDown', ['$event'])\n  @HostListener('window:keydown.ArrowUp', ['$event'])\n  public onKeyEvent(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this._keyManager.onKeydown(event);\n  }\n\n  @HostListener('window:keydown.ArrowRight', ['$event'])\n  public keyboardOpenSubMenu(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    if (menuItem) {\n      this.onOpenSubMenu(menuItem);\n    }\n  }\n\n  @HostListener('window:keydown.Enter', ['$event'])\n  @HostListener('window:keydown.Space', ['$event'])\n  public keyboardMenuItemSelect(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    const option = this._keyManager.activeItem;\n    option._clickViaInteraction();\n    // if (menuItem) {\n    //   this.onMenuItemSelect(menuItem, event);\n    // }\n  }\n\n  @HostListener('window:keydown.Escape', ['$event'])\n  @HostListener('window:keydown.ArrowLeft', ['$event'])\n  public onCloseLeafMenu(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    this.closeLeafMenu.emit({ exceptRootMenu: event.key === Key.ArrowLeft, event });\n  }\n\n  // @HostListener('document:contextmenu', ['$event'])\n  @HostListener('document:click', ['$event'])\n  public closeMenu(event: MouseEvent): void {\n    if (event.type === 'click' && event.button === 2) {\n      return;\n    }\n    this.closeAllMenus.emit({ event });\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  public onMouseLeave(event: MouseEvent): void {\n    if (this.isLeaf) {\n      this.closeLeafMenu.emit({ exceptRootMenu: true, event });\n    }\n  }\n\n  public onOpenSubMenu(menuItem: MenuItemDirective, event?: MouseEvent | KeyboardEvent): void {\n    // const anchorElementRef = this.menuItemElements.toArray()[this._keyManager.activeItemIndex];\n    // const anchorElement = anchorElementRef && anchorElementRef.nativeElement;\n    // this.openSubMenu.emit({\n    //   anchorElement,\n    //   menu: menuItem.subMenu,\n    //   event,\n    //   item: this.item,\n    //   // parentMenu: this,\n    // });\n  }\n\n  public onMenuItemSelect(menuItem: MenuItemDirective, event: MouseEvent | KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onOpenSubMenu(menuItem, event);\n    // if (!menuItem.subMenu) {\n    //   menuItem.triggerExecute(this.item, event);\n    // }\n  }\n\n  private cancelEvent(event): void {\n    if (!event) {\n      return;\n    }\n\n    const target: HTMLElement = event.target;\n    if (['INPUT', 'TEXTAREA', 'SELECT'].indexOf(target.tagName) > -1 || target.isContentEditable) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { ContentChild, Directive, ElementRef, Input, TemplateRef } from '@angular/core';\nimport { NovoOption } from 'novo-elements/elements/common';\n\n/**\n * This is a structural directive now.  Should only be used on `novo-options`\n */\n@Directive({\n  selector: '[menuItem]',\n})\nexport class MenuItemDirective {\n  @Input() public menuItemEnabled: boolean | ((item: any) => boolean) = true;\n  @Input() public menuItemVisible: boolean | ((item: any) => boolean) = true;\n\n  @ContentChild(NovoOption) optionRef: NovoOption;\n\n  public currentItem: any;\n\n  constructor(public template: TemplateRef<{ item: any }>, public elementRef: ElementRef) {}\n}\n","import { Overlay, OverlayRef, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, ElementRef, Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { MenuContentComponent } from './menu-content.component';\nimport type { MenuItemDirective } from './menu-item.directive';\nimport type { MenuComponent } from './menu.component';\nimport type { MenuDirective } from './menu.directive';\n\nexport interface IMenuClickEvent {\n  anchorElement?: Element | EventTarget;\n  menu?: MenuComponent;\n  event?: MouseEvent | KeyboardEvent;\n  parentMenu?: MenuComponent;\n  menuTrigger?: MenuDirective;\n  item: any;\n  activeMenuItemIndex?: number;\n}\nexport interface IMenuContext extends IMenuClickEvent {\n  menuItems: MenuItemDirective[];\n  menuClass: string;\n}\nexport interface CloseLeafMenuEvent {\n  exceptRootMenu?: boolean;\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface OverlayRefWithMenu extends OverlayRef {\n  menu?: MenuContentComponent;\n}\n\nexport interface CancelMenuEvent {\n  eventType: 'cancel';\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface ExecuteMenuEvent {\n  eventType: 'execute';\n  event?: MouseEvent | KeyboardEvent;\n  item: any;\n  menuItem: MenuItemDirective;\n}\nexport type CloseMenuEvent = ExecuteMenuEvent | CancelMenuEvent;\n\n@Injectable({ providedIn: 'root' })\nexport class NovoMenuService {\n  public isDestroyingLeafMenu = false;\n\n  public show: Subject<IMenuClickEvent> = new Subject<IMenuClickEvent>();\n  public triggerClose: Subject<MenuContentComponent> = new Subject();\n  public close: Subject<CloseMenuEvent> = new Subject();\n\n  private menuContent: ComponentRef<MenuContentComponent>;\n  private overlays: OverlayRef[] = [];\n  private fakeElement: any = {\n    getBoundingClientRect: (): any => ({\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n      x: 0,\n      y: 0,\n    }),\n  };\n\n  constructor(private overlay: Overlay, private scrollStrategy: ScrollStrategyOptions) {}\n\n  public openMenu(context: IMenuContext) {\n    const { anchorElement, event, parentMenu } = context;\n\n    if (!parentMenu) {\n      const mouseEvent = event as MouseEvent;\n      this.fakeElement.getBoundingClientRect = (): any => ({\n        bottom: mouseEvent.clientY,\n        height: 0,\n        left: mouseEvent.clientX,\n        right: mouseEvent.clientX,\n        top: mouseEvent.clientY,\n        width: 0,\n        x: mouseEvent.clientX,\n        y: mouseEvent.clientY,\n      });\n      this.closeAllMenus({ eventType: 'cancel', event });\n      const positionStrategy = this.overlay\n        .position()\n        .flexibleConnectedTo(new ElementRef(anchorElement || this.fakeElement))\n        .withFlexibleDimensions(false)\n        .withPositions([\n          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n          { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n          { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n          { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n          { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center' },\n          { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center' },\n        ]);\n      this.overlays = [\n        this.overlay.create({\n          positionStrategy,\n          panelClass: 'novo-menu',\n          scrollStrategy: this.scrollStrategy.close(),\n        }),\n      ];\n      this.attachMenu(this.overlays[0], context);\n    } else {\n      const positionStrategy = this.overlay\n        .position()\n        .flexibleConnectedTo(new ElementRef(event ? event.target : anchorElement))\n        .withFlexibleDimensions(false)\n        .withPositions([\n          { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n          { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n          { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n          { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n        ]);\n      const newOverlay = this.overlay.create({\n        positionStrategy,\n        panelClass: 'novo-menu',\n        scrollStrategy: this.scrollStrategy.close(),\n      });\n      // this.destroySubMenus(parentMenu);\n      this.overlays = this.overlays.concat(newOverlay);\n      this.attachMenu(newOverlay, context);\n    }\n  }\n\n  public attachMenu(overlay: OverlayRef, context: IMenuContext): void {\n    const { event, item, menu, menuItems, menuClass, menuTrigger } = context;\n\n    const menuContent: ComponentRef<MenuContentComponent> = overlay.attach(new ComponentPortal(MenuContentComponent));\n    menuContent.instance.event = event;\n    menuContent.instance.item = item;\n    menuContent.instance.menu = menu;\n    menuContent.instance.menuItems = menuItems;\n    menuContent.instance.overlay = overlay;\n    menuContent.instance.isLeaf = true;\n    menuContent.instance.menuClass = menuClass;\n    (overlay as OverlayRefWithMenu).menu = menuContent.instance;\n\n    if (!!menuTrigger) {\n      menuTrigger.menuContent = menuContent.instance;\n    }\n\n    const subscriptions: Subscription = new Subscription();\n    // subscriptions.add(\n    //   menuContent.instance.execute\n    //     .asObservable()\n    //     .subscribe((executeEvent) => this.closeAllMenus({ eventType: 'execute', ...executeEvent })),\n    // );\n    subscriptions.add(\n      menuContent.instance.closeAllMenus\n        .asObservable()\n        .subscribe((closeAllEvent) => this.closeAllMenus({ eventType: 'cancel', ...closeAllEvent })),\n    );\n    subscriptions.add(\n      menuContent.instance.closeLeafMenu.asObservable().subscribe((closeLeafMenuEvent) => this.destroyLeafMenu(closeLeafMenuEvent)),\n    );\n    subscriptions.add(\n      menuContent.instance.openSubMenu.asObservable().subscribe((subMenuEvent: IMenuContext) => {\n        this.destroySubMenus(menuContent.instance);\n        if (!subMenuEvent.menu) {\n          menuContent.instance.isLeaf = true;\n          return;\n        }\n        menuContent.instance.isLeaf = false;\n        this.show.next(subMenuEvent);\n      }),\n    );\n    menuContent.onDestroy(() => {\n      // menuItems.forEach((menuItem) => (menuItem.isActive = false));\n      subscriptions.unsubscribe();\n    });\n    menuContent.changeDetectorRef.detectChanges();\n  }\n\n  public closeAllMenus(closeEvent: CloseMenuEvent): void {\n    if (this.overlays) {\n      this.close.next(closeEvent);\n      this.overlays.forEach((overlay, index) => {\n        overlay.detach();\n        overlay.dispose();\n      });\n    }\n    this.overlays = [];\n  }\n\n  public hasOpenMenus() {\n    return this.overlays?.length > 0;\n  }\n\n  public getLastAttachedOverlay(): OverlayRefWithMenu {\n    let overlay: OverlayRef = this.overlays[this.overlays.length - 1];\n    while (this.overlays.length > 1 && overlay && !overlay.hasAttached()) {\n      overlay.detach();\n      overlay.dispose();\n      this.overlays = this.overlays.slice(0, -1);\n      overlay = this.overlays[this.overlays.length - 1];\n    }\n    return overlay;\n  }\n\n  public destroyLeafMenu({ exceptRootMenu, event }: CloseLeafMenuEvent = {}): void {\n    if (this.isDestroyingLeafMenu) {\n      return;\n    }\n    this.isDestroyingLeafMenu = true;\n\n    setTimeout(() => {\n      const overlay = this.getLastAttachedOverlay();\n      if (this.overlays.length > 1 && overlay) {\n        overlay.detach();\n        overlay.dispose();\n      }\n      if (!exceptRootMenu && this.overlays.length > 0 && overlay) {\n        this.close.next({ eventType: 'cancel', event });\n        overlay.detach();\n        overlay.dispose();\n      }\n\n      const newLeaf = this.getLastAttachedOverlay();\n      if (newLeaf) {\n        newLeaf.menu.isLeaf = true;\n      }\n\n      this.isDestroyingLeafMenu = false;\n    });\n  }\n\n  public destroySubMenus(menu: MenuContentComponent): void {\n    const overlay = menu.overlay;\n    const index = this.overlays.indexOf(overlay);\n    this.overlays.slice(index + 1).forEach((subMenuOverlay) => {\n      subMenuOverlay.detach();\n      subMenuOverlay.dispose();\n    });\n  }\n\n  public isLeafMenu(menuContent: MenuContentComponent): boolean {\n    const overlay = this.getLastAttachedOverlay();\n    return menuContent.overlay === overlay;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const MENU_OPTIONS = new InjectionToken('MENU_OPTIONS');\n\nexport const PARENT_MENU = new InjectionToken('PARENT_MENU');\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { NovoOption } from 'novo-elements/elements/common';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { CloseMenuEvent, IMenuClickEvent, NovoMenuService } from './menu.service';\nimport { MENU_OPTIONS, PARENT_MENU } from './menu.tokens';\nimport { ILinkConfig, IMenuOptions } from './menu.types';\n\nexport interface MouseLocation {\n  left?: string;\n  marginLeft?: string;\n  marginTop?: string;\n  top?: string;\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'novo-menu',\n  styles: [\n    `\n      .cdk-overlay-container {\n        position: fixed;\n        z-index: z(overlay);\n        pointer-events: none;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      .novo-menu.cdk-overlay-pane {\n        position: absolute;\n        pointer-events: auto;\n        box-sizing: border-box;\n      }\n    `,\n  ],\n  template: ``,\n  providers: [{ provide: PARENT_MENU, useExisting: MenuComponent }],\n})\nexport class MenuComponent implements OnDestroy {\n  @Input() public menuClass = '';\n  @Input() public autoFocus = false;\n  @Input() public disabled = false;\n  @Output() public close: EventEmitter<CloseMenuEvent> = new EventEmitter();\n  @Output() public open: EventEmitter<IMenuClickEvent> = new EventEmitter();\n  @ContentChildren(MenuItemDirective) public menuItems: QueryList<MenuItemDirective>;\n  @ContentChildren(NovoOption) public menuOptions: QueryList<NovoOption>;\n  @ViewChild('menu') public menuElement: ElementRef;\n  public visibleMenuItems: MenuItemDirective[] = [];\n\n  public links: ILinkConfig[] = [];\n  public item: any;\n  public event: MouseEvent | KeyboardEvent;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private menuService: NovoMenuService,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional()\n    @Inject(MENU_OPTIONS)\n    private options: IMenuOptions,\n  ) {\n    if (options) {\n      this.autoFocus = options.autoFocus;\n    }\n    this.subscription.add(\n      menuService.show.subscribe((menuEvent) => {\n        this.onMenuEvent(menuEvent);\n      }),\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public onMenuEvent(menuEvent: IMenuClickEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    const { menu, event, item } = menuEvent;\n    if (menu && menu !== this) {\n      return;\n    }\n    this.event = event;\n    this.item = item;\n    this.setVisibleMenuItems();\n    this.menuService.openMenu({ ...menuEvent, menuItems: this.visibleMenuItems, menuClass: this.menuClass });\n    this.menuService.close\n      .asObservable()\n      .pipe(first())\n      .subscribe((closeEvent) => this.close.emit(closeEvent));\n    this.open.next(menuEvent);\n  }\n\n  public isMenuItemVisible(menuItem: MenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem.menuItemVisible);\n  }\n\n  public setVisibleMenuItems(): void {\n    this.visibleMenuItems = this.menuItems.filter((menuItem) => this.isMenuItemVisible(menuItem));\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BooleanInput } from 'novo-elements/utils';\nimport { MenuContentComponent } from './menu-content.component';\nimport { MenuComponent } from './menu.component';\nimport { NovoMenuService } from './menu.service';\nimport { PARENT_MENU } from './menu.tokens';\n\n@Directive({\n  selector: '[menu]',\n})\nexport class MenuDirective implements OnInit, OnDestroy {\n  @Input() public menuContext: any;\n  @Input() public menu: MenuComponent;\n  @Input() public menuContent: MenuContentComponent;\n  @Input() @BooleanInput() public waitWhenOpen: boolean = false;\n  @Input() @BooleanInput() public capture: boolean = false;\n  @Input() @BooleanInput() public anchor: boolean = false;\n  @Input() public trigger: 'click' | 'contextmenu' | 'mouseenter' = 'click';\n\n  isSubMenu: boolean = false;\n  isActive: boolean = false;\n  @HostBinding('class.menu-active')\n  get hb_menuActive() {\n    return this.isActive;\n  }\n\n  subscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private menuService: NovoMenuService,\n    private cdr: ChangeDetectorRef,\n    @Optional() @Inject(PARENT_MENU) private _parentMenu: MenuComponent,\n  ) {\n    if (!!this._parentMenu) {\n      this.isSubMenu = true;\n      this.trigger = 'mouseenter';\n    }\n  }\n\n  ngOnInit() {\n    this.subscription = this.menuService.close.subscribe(() => {\n      this.isActive = false;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this.isActive = false;\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  @HostListener('contextmenu', ['$event'])\n  @HostListener('mouseenter', ['$event'])\n  public onMenuClick(event: MouseEvent): void {\n    if (this.trigger !== event.type) {\n      return;\n    }\n    if (this.trigger === 'click' && event.button !== 0) {\n      return;\n    } else if (this.trigger === 'contextmenu' && event.button !== 2) {\n      return;\n    } else if (this.waitWhenOpen && this.menuService.hasOpenMenus()) {\n      return;\n    }\n\n    if (!this.menu.disabled) {\n      this.menuService.show.next({\n        menu: this.menu,\n        event,\n        item: this.menuContext,\n        anchorElement: this.anchor ? this.element.nativeElement : null,\n        parentMenu: this._parentMenu,\n        menuTrigger: this,\n      });\n      this.isActive = true;\n      event.preventDefault();\n      event.stopPropagation();\n      this.cdr.detectChanges();\n    }\n  }\n}\n","import { FullscreenOverlayContainer, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NovoCommonModule } from 'novo-elements/elements/common';\nimport { NovoIconModule } from 'novo-elements/elements/icon';\nimport { MenuContentComponent } from './menu-content.component';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { MenuComponent } from './menu.component';\nimport { MenuDirective } from './menu.directive';\nimport { NovoMenuService } from './menu.service';\nimport { MENU_OPTIONS } from './menu.tokens';\nimport { IMenuOptions } from './menu.types';\n\n@NgModule({\n  declarations: [MenuDirective, MenuComponent, MenuContentComponent, MenuItemDirective],\n  exports: [MenuDirective, MenuComponent, MenuItemDirective],\n  imports: [CommonModule, OverlayModule, NovoCommonModule, NovoIconModule],\n})\nexport class NovoMenuModule {\n  public static forRoot(options?: IMenuOptions): ModuleWithProviders<NovoMenuModule> {\n    return {\n      ngModule: NovoMenuModule,\n      providers: [\n        NovoMenuService,\n        {\n          provide: MENU_OPTIONS,\n          useValue: options,\n        },\n        { provide: OverlayContainer, useClass: FullscreenOverlayContainer },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-contextmenu\n */\n\nexport * from './menu-content.component';\nexport * from './menu-item.directive';\nexport * from './menu.component';\nexport * from './menu.directive';\nexport { NovoMenuModule } from './menu.module';\nexport * from './menu.service';\nexport * from './menu.tokens';\nexport * from './menu.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":";;;;;;;;;;;;;;MAuBa,oBAAoB,CAAA;AAmB/B,IAAA,WAAA,GAAA;QAlBgB,IAAS,CAAA,SAAA,GAAwB,EAAE,CAAC;QAOpC,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;;AAEd,QAAA,IAAA,CAAA,WAAW,GAAkC,IAAI,YAAY,EAAE,CAAC;AAChE,QAAA,IAAA,CAAA,aAAa,GAAqC,IAAI,YAAY,EAAE,CAAC;AACrE,QAAA,IAAA,CAAA,aAAa,GAAwC,IAAI,YAAY,EAAE,CAAC;;;QAIlF,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAEjB,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;KACxC;AAEhB,IAAA,QAAQ,MAAW;IAEnB,eAAe,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SAChC;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;AAC9B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,0BAA0B,CAAa,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;KACjG;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;IAED,KAAK,GAAA;AACH,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;;SAEnB;KACF;AAED,IAAA,SAAS,CAAC,MAAkB,EAAA;QAC1B,MAAM,CAAC,eAAe,EAAE,CAAC;KAC1B;AAEM,IAAA,iBAAiB,CAAC,QAA2B,EAAA;QAClD,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC;KACtE;AAEM,IAAA,iBAAiB,CAAC,QAA2B,EAAA;QAClD,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC;KACtE;AAEM,IAAA,kBAAkB,CAAC,KAAU,EAAA;AAClC,QAAA,IAAI,KAAK,YAAY,QAAQ,EAAE;AAC7B,YAAA,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAEM,IAAA,UAAU,CAAC,IAAiB,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjD;AAIM,IAAA,UAAU,CAAC,KAAoB,EAAA;AACpC,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACnC;AAGM,IAAA,mBAAmB,CAAC,KAAqB,EAAA;AAC9C,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QAClE,IAAI,QAAQ,EAAE;AACZ,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SAC9B;KACF;AAIM,IAAA,sBAAsB,CAAC,KAAqB,EAAA;AACjD,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AAClE,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAC3C,MAAM,CAAC,oBAAoB,EAAE,CAAC;;;;KAI/B;AAIM,IAAA,eAAe,CAAC,KAAoB,EAAA;AACzC,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO;SACR;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,KAAK,CAAC,GAAG,KAAkB,WAAA,sBAAE,KAAK,EAAE,CAAC,CAAC;KACjF;;AAIM,IAAA,SAAS,CAAC,KAAiB,EAAA;AAChC,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAChD,OAAO;SACR;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KACpC;AAGM,IAAA,YAAY,CAAC,KAAiB,EAAA;AACnC,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;SAC1D;KACF;IAEM,aAAa,CAAC,QAA2B,EAAE,KAAkC,EAAA;;;;;;;;;;KAUnF;IAEM,gBAAgB,CAAC,QAA2B,EAAE,KAAiC,EAAA;QACpF,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;;;;KAIrC;AAEO,IAAA,WAAW,CAAC,KAAK,EAAA;QACvB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;AAED,QAAA,MAAM,MAAM,GAAgB,KAAK,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,iBAAiB,EAAE;YAC5F,OAAO;SACR;QAED,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;+GA/JU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,EATrB,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,0BAAA,EAAA,oBAAA,EAAA,wBAAA,EAAA,oBAAA,EAAA,2BAAA,EAAA,6BAAA,EAAA,sBAAA,EAAA,gCAAA,EAAA,sBAAA,EAAA,gCAAA,EAAA,uBAAA,EAAA,yBAAA,EAAA,0BAAA,EAAA,yBAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;AAOF,SAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,w5QAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;4FAEG,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAZhC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAc,EAEd,QAAA,EAAA,CAAA;;;;;;;AAOF,SAAA,CAAA,EAAA,MAAA,EAAA,CAAA,w5QAAA,CAAA,EAAA,CAAA;wDAGQ,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,KAAK,EAAA,CAAA;sBAApB,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,OAAO,EAAA,CAAA;sBAAtB,KAAK;gBACU,MAAM,EAAA,CAAA;sBAArB,KAAK;gBAEW,WAAW,EAAA,CAAA;sBAA3B,MAAM;gBACU,aAAa,EAAA,CAAA;sBAA7B,MAAM;gBACU,aAAa,EAAA,CAAA;sBAA7B,MAAM;gBAsDA,UAAU,EAAA,CAAA;sBAFhB,YAAY;uBAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBACnD,YAAY;uBAAC,wBAAwB,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAS3C,mBAAmB,EAAA,CAAA;sBADzB,YAAY;uBAAC,2BAA2B,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAc9C,sBAAsB,EAAA,CAAA;sBAF5B,YAAY;uBAAC,sBAAsB,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBAC/C,YAAY;uBAAC,sBAAsB,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAgBzC,eAAe,EAAA,CAAA;sBAFrB,YAAY;uBAAC,uBAAuB,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBAChD,YAAY;uBAAC,0BAA0B,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAW7C,SAAS,EAAA,CAAA;sBADf,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;gBASnC,YAAY,EAAA,CAAA;sBADlB,YAAY;uBAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC3IxC;;AAEG;MAIU,iBAAiB,CAAA;IAQ5B,WAAmB,CAAA,QAAoC,EAAS,UAAsB,EAAA;QAAnE,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA4B;QAAS,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAPtE,IAAe,CAAA,eAAA,GAAuC,IAAI,CAAC;QAC3D,IAAe,CAAA,eAAA,GAAuC,IAAI,CAAC;KAMe;+GAR/E,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,6KAId,UAAU,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAJb,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,YAAY;AACvB,iBAAA,CAAA;yGAEiB,eAAe,EAAA,CAAA;sBAA9B,KAAK;gBACU,eAAe,EAAA,CAAA;sBAA9B,KAAK;gBAEoB,SAAS,EAAA,CAAA;sBAAlC,YAAY;uBAAC,UAAU,CAAA;;;MC8Bb,eAAe,CAAA;IAsB1B,WAAoB,CAAA,OAAgB,EAAU,cAAqC,EAAA;QAA/D,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;QAAU,IAAc,CAAA,cAAA,GAAd,cAAc,CAAuB;QArB5E,IAAoB,CAAA,oBAAA,GAAG,KAAK,CAAC;AAE7B,QAAA,IAAA,CAAA,IAAI,GAA6B,IAAI,OAAO,EAAmB,CAAC;AAChE,QAAA,IAAA,CAAA,YAAY,GAAkC,IAAI,OAAO,EAAE,CAAC;AAC5D,QAAA,IAAA,CAAA,KAAK,GAA4B,IAAI,OAAO,EAAE,CAAC;QAG9C,IAAQ,CAAA,QAAA,GAAiB,EAAE,CAAC;AAC5B,QAAA,IAAA,CAAA,WAAW,GAAQ;AACzB,YAAA,qBAAqB,EAAE,OAAY;AACjC,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,KAAK,EAAE,CAAC;AACR,gBAAA,GAAG,EAAE,CAAC;AACN,gBAAA,KAAK,EAAE,CAAC;AACR,gBAAA,CAAC,EAAE,CAAC;AACJ,gBAAA,CAAC,EAAE,CAAC;aACL,CAAC;SACH,CAAC;KAEqF;AAEhF,IAAA,QAAQ,CAAC,OAAqB,EAAA;QACnC,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;QAErD,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,UAAU,GAAG,KAAmB,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,qBAAqB,GAAG,OAAY;gBACnD,MAAM,EAAE,UAAU,CAAC,OAAO;AAC1B,gBAAA,MAAM,EAAE,CAAC;gBACT,IAAI,EAAE,UAAU,CAAC,OAAO;gBACxB,KAAK,EAAE,UAAU,CAAC,OAAO;gBACzB,GAAG,EAAE,UAAU,CAAC,OAAO;AACvB,gBAAA,KAAK,EAAE,CAAC;gBACR,CAAC,EAAE,UAAU,CAAC,OAAO;gBACrB,CAAC,EAAE,UAAU,CAAC,OAAO;AACtB,aAAA,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AACnD,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO;AAClC,iBAAA,QAAQ,EAAE;iBACV,mBAAmB,CAAC,IAAI,UAAU,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;iBACtE,sBAAsB,CAAC,KAAK,CAAC;AAC7B,iBAAA,aAAa,CAAC;AACb,gBAAA,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;AAC3E,gBAAA,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC3E,gBAAA,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;AACtE,gBAAA,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;AACtE,gBAAA,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC5E,gBAAA,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC7E,aAAA,CAAC,CAAC;YACL,IAAI,CAAC,QAAQ,GAAG;AACd,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBAClB,gBAAgB;AAChB,oBAAA,UAAU,EAAE,WAAW;AACvB,oBAAA,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;iBAC5C,CAAC;aACH,CAAC;AACF,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;SAC5C;aAAM;AACL,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO;AAClC,iBAAA,QAAQ,EAAE;AACV,iBAAA,mBAAmB,CAAC,IAAI,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC;iBACzE,sBAAsB,CAAC,KAAK,CAAC;AAC7B,iBAAA,aAAa,CAAC;AACb,gBAAA,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;AACtE,gBAAA,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;AACtE,gBAAA,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;AACvE,gBAAA,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC7E,aAAA,CAAC,CAAC;AACL,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBACrC,gBAAgB;AAChB,gBAAA,UAAU,EAAE,WAAW;AACvB,gBAAA,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;AAC5C,aAAA,CAAC,CAAC;;YAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACjD,YAAA,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACtC;KACF;IAEM,UAAU,CAAC,OAAmB,EAAE,OAAqB,EAAA;AAC1D,QAAA,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;AAEzE,QAAA,MAAM,WAAW,GAAuC,OAAO,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAClH,QAAA,WAAW,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;AACjC,QAAA,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;AACjC,QAAA,WAAW,CAAC,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3C,QAAA,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;AACvC,QAAA,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;AAC1C,QAAA,OAA8B,CAAC,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC;AAE5D,QAAA,IAAI,CAAC,CAAC,WAAW,EAAE;AACjB,YAAA,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC;SAChD;AAED,QAAA,MAAM,aAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;;;;;;AAMvD,QAAA,aAAa,CAAC,GAAG,CACf,WAAW,CAAC,QAAQ,CAAC,aAAa;AAC/B,aAAA,YAAY,EAAE;aACd,SAAS,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,aAAa,EAAE,CAAC,CAAC,CAC/F,CAAC;QACF,aAAa,CAAC,GAAG,CACf,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,kBAAkB,KAAK,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC,CAC9H,CAAC;AACF,QAAA,aAAa,CAAC,GAAG,CACf,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,YAA0B,KAAI;AACvF,YAAA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC3C,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;AACtB,gBAAA,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnC,OAAO;aACR;AACD,YAAA,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;AACpC,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC9B,CAAC,CACH,CAAC;AACF,QAAA,WAAW,CAAC,SAAS,CAAC,MAAK;;YAEzB,aAAa,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAC,CAAC,CAAC;AACH,QAAA,WAAW,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;KAC/C;AAEM,IAAA,aAAa,CAAC,UAA0B,EAAA;AAC7C,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;gBACvC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,OAAO,CAAC,OAAO,EAAE,CAAC;AACpB,aAAC,CAAC,CAAC;SACJ;AACD,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAEM,YAAY,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,CAAC;KAClC;IAEM,sBAAsB,GAAA;AAC3B,QAAA,IAAI,OAAO,GAAe,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClE,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;YACpE,OAAO,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO,CAAC,OAAO,EAAE,CAAC;AAClB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAA,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACnD;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AAEM,IAAA,eAAe,CAAC,EAAE,cAAc,EAAE,KAAK,KAAyB,EAAE,EAAA;AACvE,QAAA,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,OAAO;SACR;AACD,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAEjC,UAAU,CAAC,MAAK;AACd,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9C,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,EAAE;gBACvC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,OAAO,CAAC,OAAO,EAAE,CAAC;aACnB;AACD,YAAA,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,EAAE;AAC1D,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;gBAChD,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,OAAO,CAAC,OAAO,EAAE,CAAC;aACnB;AAED,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9C,IAAI,OAAO,EAAE;AACX,gBAAA,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aAC5B;AAED,YAAA,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;AACpC,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,eAAe,CAAC,IAA0B,EAAA;AAC/C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,cAAc,KAAI;YACxD,cAAc,CAAC,MAAM,EAAE,CAAC;YACxB,cAAc,CAAC,OAAO,EAAE,CAAC;AAC3B,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,UAAU,CAAC,WAAiC,EAAA;AACjD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,CAAC,OAAO,KAAK,OAAO,CAAC;KACxC;+GApMU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAf,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cADF,MAAM,EAAA,CAAA,CAAA,EAAA;;4FACnB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;MCxCrB,YAAY,GAAG,IAAI,cAAc,CAAC,cAAc,EAAE;MAElD,WAAW,GAAG,IAAI,cAAc,CAAC,aAAa;;MCkD9C,aAAa,CAAA;AAgBxB,IAAA,WAAA,CACU,WAA4B,EAC5B,cAAiC,EACjC,UAAsB,EAGtB,OAAqB,EAAA;QALrB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAiB;QAC5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmB;QACjC,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAGtB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAc;QArBf,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;QACf,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAClB,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAChB,QAAA,IAAA,CAAA,KAAK,GAAiC,IAAI,YAAY,EAAE,CAAC;AACzD,QAAA,IAAA,CAAA,IAAI,GAAkC,IAAI,YAAY,EAAE,CAAC;QAInE,IAAgB,CAAA,gBAAA,GAAwB,EAAE,CAAC;QAE3C,IAAK,CAAA,KAAA,GAAkB,EAAE,CAAC;AAGzB,QAAA,IAAA,CAAA,YAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;QAUtD,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;SACpC;AACD,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AACvC,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SAC7B,CAAC,CACH,CAAC;KACH;IAEM,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;AAEM,IAAA,WAAW,CAAC,SAA0B,EAAA;AAC3C,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AACxC,QAAA,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;YACzB,OAAO;SACR;AACD,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,GAAG,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACzG,IAAI,CAAC,WAAW,CAAC,KAAK;AACnB,aAAA,YAAY,EAAE;aACd,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,aAAA,SAAS,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC3B;AAEM,IAAA,iBAAiB,CAAC,QAA2B,EAAA;QAClD,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;KAC1D;IAEM,mBAAmB,GAAA;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC/F;AAEM,IAAA,kBAAkB,CAAC,KAAU,EAAA;AAClC,QAAA,IAAI,KAAK,YAAY,QAAQ,EAAE;AAC7B,YAAA,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAtEU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,yGAqBd,YAAY,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AArBX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAa,iKAFb,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAQhD,iBAAiB,EACjB,EAAA,EAAA,YAAA,EAAA,aAAA,EAAA,SAAA,EAAA,UAAU,kIAVjB,CAAE,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,6MAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;4FAGD,aAAa,EAAA,UAAA,EAAA,CAAA;kBAxBzB,SAAS;AACO,YAAA,IAAA,EAAA,CAAA,EAAA,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAC3B,WAAW,EAAA,QAAA,EAmBX,EAAE,EACD,SAAA,EAAA,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAA,aAAe,EAAE,CAAC,EAAA,MAAA,EAAA,CAAA,6MAAA,CAAA,EAAA,CAAA;;0BAsB9D,QAAQ;;0BACR,MAAM;2BAAC,YAAY,CAAA;yCApBN,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBACW,KAAK,EAAA,CAAA;sBAArB,MAAM;gBACU,IAAI,EAAA,CAAA;sBAApB,MAAM;gBACoC,SAAS,EAAA,CAAA;sBAAnD,eAAe;uBAAC,iBAAiB,CAAA;gBACE,WAAW,EAAA,CAAA;sBAA9C,eAAe;uBAAC,UAAU,CAAA;gBACD,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,MAAM,CAAA;;;;;;;;;;;;MCxCN,aAAa,CAAA;AAWxB,IAAA,IACI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AAID,IAAA,WAAA,CACU,OAAmB,EACnB,WAA4B,EAC5B,GAAsB,EACW,WAA0B,EAAA;QAH3D,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;QACnB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAiB;QAC5B,IAAG,CAAA,GAAA,GAAH,GAAG,CAAmB;QACW,IAAW,CAAA,WAAA,GAAX,WAAW,CAAe;QAlBrC,IAAY,CAAA,YAAA,GAAY,KAAK,CAAC;QAC9B,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;QACzB,IAAM,CAAA,MAAA,GAAY,KAAK,CAAC;QACxC,IAAO,CAAA,OAAA,GAA2C,OAAO,CAAC;QAE1E,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;AAcxB,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE;AACtB,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;SAC7B;KACF;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,MAAK;AACxD,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,YAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC3B,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;AAKM,IAAA,WAAW,CAAC,KAAiB,EAAA;QAClC,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,IAAI,EAAE;YAC/B,OAAO;SACR;AACD,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAClD,OAAO;SACR;AAAM,aAAA,IAAI,IAAI,CAAC,OAAO,KAAK,aAAa,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/D,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE;YAC/D,OAAO;SACR;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK;gBACL,IAAI,EAAE,IAAI,CAAC,WAAW;AACtB,gBAAA,aAAa,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI;gBAC9D,UAAU,EAAE,IAAI,CAAC,WAAW;AAC5B,gBAAA,WAAW,EAAE,IAAI;AAClB,aAAA,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,YAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC1B;KACF;AAvEU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,yGAsBF,WAAW,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAtBtB,aAAa,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,aAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,qBAAA,EAAA,aAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,mBAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;AAIQ,UAAA,CAAA;AAAtB,IAAA,YAAY,EAAE;;AAAsC,CAAA,EAAA,aAAA,CAAA,SAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAC9B,UAAA,CAAA;AAAtB,IAAA,YAAY,EAAE;;AAAiC,CAAA,EAAA,aAAA,CAAA,SAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACzB,UAAA,CAAA;AAAtB,IAAA,YAAY,EAAE;;AAAgC,CAAA,EAAA,aAAA,CAAA,SAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA;4FAN7C,aAAa,EAAA,UAAA,EAAA,CAAA;kBAHzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,QAAQ;AACnB,iBAAA,CAAA;;0BAuBI,QAAQ;;0BAAI,MAAM;2BAAC,WAAW,CAAA;yCArBjB,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBAC0B,YAAY,EAAA,CAAA;sBAA3C,KAAK;gBAC0B,OAAO,EAAA,CAAA;sBAAtC,KAAK;gBAC0B,MAAM,EAAA,CAAA;sBAArC,KAAK;gBACU,OAAO,EAAA,CAAA;sBAAtB,KAAK;gBAKF,aAAa,EAAA,CAAA;sBADhB,WAAW;uBAAC,mBAAmB,CAAA;gBAkCzB,WAAW,EAAA,CAAA;sBAHjB,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBAChC,YAAY;uBAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBACtC,YAAY;uBAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAA;;;MChD3B,cAAc,CAAA;IAClB,OAAO,OAAO,CAAC,OAAsB,EAAA;QAC1C,OAAO;AACL,YAAA,QAAQ,EAAE,cAAc;AACxB,YAAA,SAAS,EAAE;gBACT,eAAe;AACf,gBAAA;AACE,oBAAA,OAAO,EAAE,YAAY;AACrB,oBAAA,QAAQ,EAAE,OAAO;AAClB,iBAAA;AACD,gBAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,0BAA0B,EAAE;AACpE,aAAA;SACF,CAAC;KACH;+GAbU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;gHAAd,cAAc,EAAA,YAAA,EAAA,CAJV,aAAa,EAAE,aAAa,EAAE,oBAAoB,EAAE,iBAAiB,CAE1E,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,aAD7D,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA;AAG9C,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAFf,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA,EAAA;;4FAE5D,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,oBAAoB,EAAE,iBAAiB,CAAC;AACrF,oBAAA,OAAO,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAC;oBAC1D,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,CAAC;AACzE,iBAAA,CAAA;;;ACjBD;;AAEG;;ACFH;;AAEG;;;;"}