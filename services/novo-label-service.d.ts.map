{"version":3,"file":"novo-label-service.d.ts","sources":["novo-label-service.d.ts"],"names":[],"mappingssourcesContent":["export interface BigDecimalFormatOptions extends Intl.NumberFormatOptions {\r\n    useAccountingFormat?: boolean;\r\n}\r\nexport declare class NovoLabelService {\r\n    userLocale: string;\r\n    filters: string;\r\n    clear: string;\r\n    sort: string;\r\n    distributionListOwner: string;\r\n    dateAdded: string;\r\n    emptyTableMessage: string;\r\n    noMatchingRecordsMessage: string;\r\n    erroredTableMessage: string;\r\n    pickerError: string;\r\n    pickerTextFieldEmpty: string;\r\n    pickerEmpty: string;\r\n    tabbedGroupPickerEmpty: string;\r\n    quickNoteError: string;\r\n    quickNoteEmpty: string;\r\n    required: string;\r\n    numberTooLarge: string;\r\n    save: string;\r\n    cancel: string;\r\n    next: string;\r\n    itemsPerPage: string;\r\n    select: string;\r\n    selected: string;\r\n    selectAllOnPage: string;\r\n    deselectAll: string;\r\n    refresh: string;\r\n    close: string;\r\n    move: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    rate: string;\r\n    more: string;\r\n    clearAll: string;\r\n    clearAllNormalCase: string;\r\n    clearSort: string;\r\n    clearFilter: string;\r\n    today: string;\r\n    now: string;\r\n    isRequired: string;\r\n    notValidYear: string;\r\n    isTooLarge: string;\r\n    invalidAddress: string;\r\n    invalidEmail: string;\r\n    minLength: string;\r\n    past1Day: string;\r\n    past7Days: string;\r\n    past30Days: string;\r\n    past90Days: string;\r\n    past1Year: string;\r\n    next1Day: string;\r\n    next7Days: string;\r\n    next30Days: string;\r\n    next90Days: string;\r\n    next1Year: string;\r\n    customDateRange: string;\r\n    backToPresetFilters: string;\r\n    okGotIt: string;\r\n    address: string;\r\n    address1: string;\r\n    apt: string;\r\n    address2: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n    zipCode: string;\r\n    country: string;\r\n    or: string;\r\n    clickToBrowse: string;\r\n    chooseAFile: string;\r\n    no: string;\r\n    yes: string;\r\n    search: string;\r\n    noItems: string;\r\n    dateFormat: string;\r\n    dateFormatPlaceholder: string;\r\n    timeFormatPlaceholderAM: string;\r\n    timeFormatPlaceholder24Hour: string;\r\n    timeFormatAM: string;\r\n    timeFormatPM: string;\r\n    confirmChangesModalMessage: string;\r\n    promptModalMessage: string;\r\n    asyncFailure: string;\r\n    previous: string;\r\n    actions: string;\r\n    all: string;\r\n    groupedMultiPickerEmpty: string;\r\n    groupedMultiPickerSelectCategory: string;\r\n    add: string;\r\n    encryptedFieldTooltip: string;\r\n    noStatesForCountry: string;\r\n    selectCountryFirst: string;\r\n    invalidIntegerInput: string;\r\n    maxRecordsReached: string;\r\n    selectFilterOptions: string;\r\n    constructor(userLocale?: string);\r\n    maxlengthMetWithField(field: string, maxlength: number): string;\r\n    maxlengthMet(maxlength: number): string;\r\n    invalidMaxlengthWithField(field: string, maxlength: number): string;\r\n    invalidMaxlength(maxlength: number): string;\r\n    getToManyPlusMore(toMany: {\r\n        quantity: number;\r\n    }): string;\r\n    selectedRecords(selected: number): string;\r\n    showingXofXResults(shown: number, total: number): string;\r\n    totalRecords(total: number, select?: boolean): string;\r\n    dateFormatString(): string;\r\n    tabbedGroupClearSuggestion(tabLabelPlural: string): string;\r\n    formatDateWithFormat(value: any, format: Intl.DateTimeFormatOptions): any;\r\n    formatToTimeOnly(param: any): void;\r\n    formatToDateOnly(param: any): void;\r\n    formatTimeWithFormat(value: any, format: Intl.DateTimeFormatOptions): string;\r\n    getWeekdays(): string[];\r\n    getMonths(): string[];\r\n    getProperty(value: string): any;\r\n    getRangeText(page: number, pageSize: number, length: number, short: boolean): string;\r\n    formatCurrency(value: number): string;\r\n    /**\r\n     * Extends the Intl.numberFormat capability with two extra features:\r\n     *  - Does NOT round values, but instead truncates to maximumFractionDigits\r\n     *  - By default uses accounting format for negative numbers: (3.14) instead of -3.14.\r\n     *\r\n     * @param value           The number value to convert to string\r\n     * @param overrideOptions Allows for overriding options used and passed to Intl.NumberFormat()\r\n     */\r\n    formatBigDecimal(value: number, overrideOptions?: BigDecimalFormatOptions): string;\r\n    /**\r\n     * Performs a string-based truncating of a number with no rounding\r\n     */\r\n    truncateToPrecision(value: number, precision: number): number;\r\n    formatNumber(value: any, options?: Intl.NumberFormatOptions): string;\r\n    formatDateShort(value: string | number | Date): string;\r\n    formatTime(value: string | number | Date): string;\r\n    formatDate(value: string | number | Date): string;\r\n}\r\nexport declare const NOVO_ELEMENTS_LABELS_PROVIDERS: {\r\n    provide: typeof NovoLabelService;\r\n    useClass: typeof NovoLabelService;\r\n}[];\r\n"]}